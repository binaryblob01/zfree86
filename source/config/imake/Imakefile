XCOMM $XFree86: xc/config/imake/Imakefile,v 3.21 2006/06/27 00:43:50 dawes Exp $

XCOMM Some compilers generate fatal errors if an -L directory does
XCOMM not exist.  Since BUILDLIBDIR may not exist yet suppress its use.
         LDPRELIB =
        LDPRELIBS =

DEPLIBS =

INCLUDES = -I$(TOP)/include
CPP_PROGRAM = CppCmd
CPP_DEFINES = -DCPP_PROGRAM="\"$(CPP_PROGRAM)\""
GCC_COMMAND = $(CC) -fmerge-constants -xc /dev/null -S -o /dev/null 2> /dev/null 1> /dev/null
GCC_DEFINES = -DHAS_MERGE_CONSTANTS=`if $(GCC_COMMAND); then echo 1; else echo 0; fi`
#ifdef CcCmd
CCCMD = CcCmd
CCCMDDEFS = -DCCCMD="\"$(CCCMD)\""
#endif

#ifdef CrossCompileDir
CROSSCOMPILEDIR = CrossCompileDir
CROSSCOMPILEDEFINES=-DCROSSCOMPILE -DCROSSCOMPILEDIR=\"$(CROSSCOMPILEDIR)\"
#else
CROSSCOMPILEDIR =
CROSSCOMPILEDEFINES=
BOOTSTRAPDEFINES =
#endif

DEFINES = $(SIGNAL_DEFINES) $(BOOTSTRAPCFLAGS) $(CPP_DEFINES) $(GCC_DEFINES) \
	 $(CROSSCOMPILEDEFINES) $(CCCMDDEFS)

EXTRAMANDEFS = -D__cpp__="\"$(CPP_PROGRAM)\""

#if defined(MacIIArchitecture) || defined(SequentArchitecture) || defined(i386ScoArchitecture)
XBSDLIB = /**/
#endif

#ifdef CrossCompileDir
# ifdef TargetPreProcessCmd
CPP = TargetPreProcessCmd
# else
CPP = CrossCompileDir/cc -E -
# endif
IMAKEMDEFS_CPPDEFINES = $(DEFINES) -DCROSSCOMPILE_CPP
CppFileTarget(imakemdep_cpp.h,imakemdep.h,$(IMAKEMDEFS_CPPDEFINES),\
	NullParameter)
#endif

#undef ImakeDependency
#define ImakeDependency(dummy) @@\
imake.o: imakemdep_cpp.h @@\
Makefile::  ProgramTargetName(imake)

#if CrossCompiling
SimpleHostProgramTarget(imake)
#else
SimpleProgramTarget(imake)
#endif

imakeonly:: $(PROGRAM)

InstallDriverSDKNamedProg(imake,imake,$(DRIVERSDKDIR)/config/imake)

#if HasClearmake
bootstrapdepend: depend
#else
bootstrapdepend:
#endif

clean::
	RemoveFile(ProgramTargetName(ccimake))
	RemoveFile(Makefile.proto)
	RemoveFile(imakemdep_cpp.h)
	$(RM) -r bootstrap

#ifdef OS2Architecture
clean::
	RemoveFiles(imake ccimake)

#endif
