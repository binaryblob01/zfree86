XCOMM $XFree86: xc/programs/Xserver/hw/xfree86/xf86cfg/Imakefile,v 1.35 2006/03/11 17:36:50 tsi Exp $

XCOMM CDEBUGFLAGS=-g -Wall -ansi -pedantic

#if DoLoadableServer
LDSRCS	= libc_wrapper.c loader.c loadmod.c
LDOBJS	= libc_wrapper.o loader.o loadmod.o
#endif

#if HasNCurses
TEXTSRC	= text-mode.c
TEXTOBJ	= text-mode.o
#endif

#if !HasStrlcat
STRLSRCS = strlcat.c strlcpy.c
STRLOBJS = strlcat.o strlcpy.o
#endif

#if !HasSnprintf
SNPRINTFSRCS = snprintf.c
SNPRINTFOBJS = snprintf.o
#endif

SRCS	=\
	accessx.c\
	card-cfg.c\
	cards.c\
	config.c\
	expert.c\
	help.c\
	interface.c\
	keyboard-cfg.c\
	$(LDSRCS) \
	monitor-cfg.c\
	mouse-cfg.c\
	options.c\
	screen-cfg.c\
	screen.c\
	$(SNPRINTFSRCS)\
	startx.c\
	$(STRLSRCS)\
	stubs.c\
	$(TEXTSRC)\
	vidmode.c\
	xf86config.c

OBJS	=\
	accessx.o\
	cards.o\
	config.o\
	card-cfg.o\
	expert.o\
	help.o\
	interface.o\
	keyboard-cfg.o\
	$(LDOBJS) \
	monitor-cfg.o\
	mouse-cfg.o\
	options.o\
	screen-cfg.o\
	screen.o\
	$(SNPRINTFOBJS)\
	startx.o\
	$(STRLOBJS)\
	stubs.o\
	$(TEXTOBJ)\
	vidmode.o\
	xf86config.o

PROG	= xf86cfg

XBMPICS =\
	card.xbm\
	keyboard.xbm\
	monitor.xbm\
	mouse.xbm\
	left.xbm\
	right.xbm\
	up.xbm\
	down.xbm\
	wider.xbm\
	narrower.xbm\
	shorter.xbm\
	taller.xbm

XPMPICS =\
	card.xpm\
	computer.xpm\
	keyboard.xpm\
	monitor.xpm\
	mouse.xpm

AllTarget(ProgramTargetName($(PROG)))

#if DoLoadableServer
LOADERLIB      = -L../loader -lxloader -L../dummylib -ldummy
MODULEDEFINES  = -DUSE_MODULES
#if !HasStrlcat
STRLCAT_DEFS = -DNEED_STRLCAT
#endif
#if !HasSnprintf
SNPRINTF_DEFS  = -DNEED_SNPRINTF
#endif
WRAPPERDEFINES = -DSELF_CONTAINED_WRAPPER $(STRLCAT_DEFS) $(SNPRINTF_DEFS)
DEPEND_DEFINES = -DSELF_CONTAINED_WRAPPER
#endif

#if HasNCurses
CURSESLIB = NCursesLibName
CURSESDEFINES  = -DHAS_NCURSES
#endif

XF86CONFIGFILE = XConfigFile
XF86CONFIGDIR = XConfigDir
XF86CONSOLEDEFS = XFree86ConsoleDefines

DEFINES        = -DXF86CONFIG=\"$(XF86CONFIGFILE)\" $(MODULEDEFINES) \
		 $(CURSESDEFINES) \
		 -DPROJECT_ROOT=\"$(PROJECTROOT)\" \
		 -DXF86CONFIGDIR=\"$(XF86CONFIGDIR)\" $(XF86CONSOLEDEFS)

#if HasDlopen
DLLIB = DlLibrary
#endif

#if UseMemLeak
STRACELIB = $(TOP)/util/memleak/LibraryTargetName(memleak)
#elif UseStackTrace && DoLoadableServer
STRACELIB = $(TOP)/util/memleak/LibraryTargetName(stacktrace)
#endif

INCLUDES       = -I$(XF86SRC)/common -I$(XF86SRC)/scanpci \
		 -I$(XF86SRC)/loader -I$(XF86SRC)/parser -I$(XF86OSSRC) \
		 -I$(SERVERSRC)/include -I$(FONTLIBSRC)/include
LOCAL_LIBRARIES = $(XF86SRC)/parser/LibraryTargetName(xf86config) \
		  $(XKBUILIB) $(XKBFILELIB) $(XXF86MISCLIB) \
		  $(XXF86VMLIB) $(XAWLIB) $(XMULIB) $(XTOOLLIB) \
		  $(XPMLIB) $(LOADERLIB) $(DLLIB) $(XLIB) $(CURSESLIB) \
		  $(STRACELIB) RegexLibrary -lm

NormalProgramTarget($(PROG),$(OBJS),,$(LOCAL_LIBRARIES),)
InstallProgramWithFlags($(PROG),$(BINDIR),NullParameter)
InstallMultipleFlags($(XBMPICS),$(INCDIR)/X11/bitmaps,$(INSTINCFLAGS))
InstallMultipleFlags($(XPMPICS),$(INCDIR)/X11/pixmaps,$(INSTINCFLAGS))
InstallAppDefaults(XF86Cfg)

InstallManPage(xf86cfg,$(MANDIR))

NormalLibraryObjectRule()

#if DoLoadableServer
LinkSourceFile(libc_wrapper.c, $(XF86OSSRC)/shared)
SpecialCObjectRule(libc_wrapper,NullParameter,$(WRAPPERDEFINES) $(EXT_DEFINES))
#endif

#if !HasStrlcat
LinkSourceFile(strlcat.c,$(LIBSRC)/misc)
LinkSourceFile(strlcpy.c,$(LIBSRC)/misc)
#endif

#if !HasSnprintf
LinkSourceFile(snprintf.c,$(LIBSRC)/misc)
#endif

DependTarget()
