%!PS-Adobe-3.0
%%Creator: groff version 1.19.2
%%CreationDate: Mon Dec 29 00:08:36 2008
%%DocumentNeededResources: font Times-Bold
%%+ font Times-Roman
%%+ font Times-Italic
%%+ font Symbol
%%+ font Courier
%%DocumentSuppliedResources: procset grops 1.19 2
%%+ font Symbol-Slanted
%%Pages: 500
%%PageOrder: Ascend
%%DocumentMedia: Default 612 792 0 () ()
%%Orientation: Portrait
%%EndComments
%%BeginDefaults
%%PageMedia: Default
%%EndDefaults
%%BeginProlog
%%BeginResource: procset grops 1.19 2
%!PS-Adobe-3.0 Resource-ProcSet
/setpacking where{
pop
currentpacking
true setpacking
}if
/grops 120 dict dup begin
/SC 32 def
/A/show load def
/B{0 SC 3 -1 roll widthshow}bind def
/C{0 exch ashow}bind def
/D{0 exch 0 SC 5 2 roll awidthshow}bind def
/E{0 rmoveto show}bind def
/F{0 rmoveto 0 SC 3 -1 roll widthshow}bind def
/G{0 rmoveto 0 exch ashow}bind def
/H{0 rmoveto 0 exch 0 SC 5 2 roll awidthshow}bind def
/I{0 exch rmoveto show}bind def
/J{0 exch rmoveto 0 SC 3 -1 roll widthshow}bind def
/K{0 exch rmoveto 0 exch ashow}bind def
/L{0 exch rmoveto 0 exch 0 SC 5 2 roll awidthshow}bind def
/M{rmoveto show}bind def
/N{rmoveto 0 SC 3 -1 roll widthshow}bind def
/O{rmoveto 0 exch ashow}bind def
/P{rmoveto 0 exch 0 SC 5 2 roll awidthshow}bind def
/Q{moveto show}bind def
/R{moveto 0 SC 3 -1 roll widthshow}bind def
/S{moveto 0 exch ashow}bind def
/T{moveto 0 exch 0 SC 5 2 roll awidthshow}bind def
/SF{
findfont exch
[exch dup 0 exch 0 exch neg 0 0]makefont
dup setfont
[exch/setfont cvx]cvx bind def
}bind def
/MF{
findfont
[5 2 roll
0 3 1 roll
neg 0 0]makefont
dup setfont
[exch/setfont cvx]cvx bind def
}bind def
/level0 0 def
/RES 0 def
/PL 0 def
/LS 0 def
/MANUAL{
statusdict begin/manualfeed true store end
}bind def
/PLG{
gsave newpath clippath pathbbox grestore
exch pop add exch pop
}bind def
/BP{
/level0 save def
1 setlinecap
1 setlinejoin
72 RES div dup scale
LS{
90 rotate
}{
0 PL translate
}ifelse
1 -1 scale
}bind def
/EP{
level0 restore
showpage
}def
/DA{
newpath arcn stroke
}bind def
/SN{
transform
.25 sub exch .25 sub exch
round .25 add exch round .25 add exch
itransform
}bind def
/DL{
SN
moveto
SN
lineto stroke
}bind def
/DC{
newpath 0 360 arc closepath
}bind def
/TM matrix def
/DE{
TM currentmatrix pop
translate scale newpath 0 0 .5 0 360 arc closepath
TM setmatrix
}bind def
/RC/rcurveto load def
/RL/rlineto load def
/ST/stroke load def
/MT/moveto load def
/CL/closepath load def
/Fr{
setrgbcolor fill
}bind def
/setcmykcolor where{
pop
/Fk{
setcmykcolor fill
}bind def
}if
/Fg{
setgray fill
}bind def
/FL/fill load def
/LW/setlinewidth load def
/Cr/setrgbcolor load def
/setcmykcolor where{
pop
/Ck/setcmykcolor load def
}if
/Cg/setgray load def
/RE{
findfont
dup maxlength 1 index/FontName known not{1 add}if dict begin
{
1 index/FID ne{def}{pop pop}ifelse
}forall
/Encoding exch def
dup/FontName exch def
currentdict end definefont pop
}bind def
/DEFS 0 def
/EBEGIN{
moveto
DEFS begin
}bind def
/EEND/end load def
/CNT 0 def
/level1 0 def
/PBEGIN{
/level1 save def
translate
div 3 1 roll div exch scale
neg exch neg exch translate
0 setgray
0 setlinecap
1 setlinewidth
0 setlinejoin
10 setmiterlimit
[]0 setdash
/setstrokeadjust where{
pop
false setstrokeadjust
}if
/setoverprint where{
pop
false setoverprint
}if
newpath
/CNT countdictstack def
userdict begin
/showpage{}def
/setpagedevice{}def
}bind def
/PEND{
countdictstack CNT sub{end}repeat
level1 restore
}bind def
end def
/setpacking where{
pop
setpacking
}if
%%EndResource
%%EndProlog
%%BeginSetup
%%BeginFeature: *PageSize Default
<< /PageSize [ 612 792 ] /ImagingBBox null >> setpagedevice
%%EndFeature
%%IncludeResource: font Symbol
%%IncludeResource: font Times-Bold
%%IncludeResource: font Times-Roman
%%IncludeResource: font Times-Italic
%%IncludeResource: font Courier
%%BeginResource: font Symbol-Slanted
%!PS-Adobe-3.0 Resource-Font
%%DocumentNeededResources: font Symbol
/MakeTransformedFont{
findfont dup maxlength dict begin
{
exch dup dup/FID ne exch/UniqueID ne and{
exch def
}{
pop pop
}ifelse
}forall
/FontBBox
currentdict/FontBBox get
4 array copy def
FontBBox aload pop
4 index transform 4 2 roll
4 index transform 4 2 roll
FontBBox astore pop
FontMatrix exch matrix concatmatrix
/FontMatrix exch def
dup/FontName exch def
currentdict end
definefont pop
}bind def
/Symbol-Slanted
[.89 0.0 15.5 dup sin exch cos div .89 0.0 0.0]
/Symbol
MakeTransformedFont
%%EndResource
grops begin/DEFS 1 dict def DEFS begin/u{.001 mul}bind def end/RES 72
def/PL 792 def/LS false def/ENC0[/asciicircum/asciitilde/Scaron/Zcaron
/scaron/zcaron/Ydieresis/trademark/quotesingle/Euro/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/space/exclam/quotedbl/numbersign/dollar/percent
/ampersand/quoteright/parenleft/parenright/asterisk/plus/comma/hyphen
/period/slash/zero/one/two/three/four/five/six/seven/eight/nine/colon
/semicolon/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J/K/L/M/N/O
/P/Q/R/S/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright/circumflex
/underscore/quoteleft/a/b/c/d/e/f/g/h/i/j/k/l/m/n/o/p/q/r/s/t/u/v/w/x/y
/z/braceleft/bar/braceright/tilde/.notdef/quotesinglbase/guillemotleft
/guillemotright/bullet/florin/fraction/perthousand/dagger/daggerdbl
/endash/emdash/ff/fi/fl/ffi/ffl/dotlessi/dotlessj/grave/hungarumlaut
/dotaccent/breve/caron/ring/ogonek/quotedblleft/quotedblright/oe/lslash
/quotedblbase/OE/Lslash/.notdef/exclamdown/cent/sterling/currency/yen
/brokenbar/section/dieresis/copyright/ordfeminine/guilsinglleft
/logicalnot/minus/registered/macron/degree/plusminus/twosuperior
/threesuperior/acute/mu/paragraph/periodcentered/cedilla/onesuperior
/ordmasculine/guilsinglright/onequarter/onehalf/threequarters
/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE
/Ccedilla/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex
/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis
/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn
/germandbls/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash
/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]def
/Courier@0 ENC0/Courier RE/Times-Italic@0 ENC0/Times-Italic RE
/Times-Roman@0 ENC0/Times-Roman RE/Times-Bold@0 ENC0/Times-Bold RE
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
BP
%%EndPageSetup
/F0 13/Times-Bold@0 SF(Xlib \255 C Language X Interface)202.148 156 Q/F1
12/Times-Bold@0 SF 3(XC)225.996 180 S(onsortium Standard)-3 E 3(XV)
201.78 204 S(ersion 11, Release 6.7 DRAFT)-4.2 E/F2 10/Times-Roman@0 SF
(James Gettys)261.475 288 Q(Cambridge Research Laboratory)222.74 306 Q
(Digital Equipment Corporation)225.5 318 Q(Robert W)248.605 354 Q 2.5
(.S)-.92 G(chei\215er)-2.5 E(Laboratory for Computer Science)220.655 372
Q(Massachusetts Institute of T)211.275 384 Q(echnology)-.7 E/F3 10
/Times-Italic@0 SF(with contrib)241.095 432 Q(utions fr)-.2 E(om)-.45 E
F2(Chuck Adams, T)227.525 480 Q(ektronix, Inc.)-.7 E -1.11(Va)202.29 504
S(nia Jolobof)1.11 E(f, Open Softw)-.25 E(are F)-.1 E(oundation)-.15 E
(Hideki Hiura, Sun Microsystems, Inc.)212.035 528 Q(Bill McMahon, He)
201.895 552 Q(wlett-P)-.25 E(ackard Compan)-.15 E(y)-.15 E(Ron Ne)
181.265 576 Q(wman, Massachusetts Institute of T)-.25 E(echnology)-.7 E
(Al T)227.7 600 Q(abayo)-.8 E(yon, T)-.1 E(ektronix, Inc.)-.7 E(Glenn W)
225.71 624 Q(idener)-.4 E 2.5(,T)-.4 G(ektronix, Inc.)-3.2 E(Shigeru Y)
226.555 648 Q(amada, Fujitsu OSSI)-1 E 0 Cg EP
%%Page: 2 2
%%BeginPageSetup
BP
%%EndPageSetup
/F0 9/Times-Roman@0 SF(The X W)72 196.9 Q(indo)-.36 E 2.25(wS)-.225 G
(ystem is a trademark of The Open Group.)-2.25 E -.63(Te)72 213.8 S
(kHVC is a trademark of T).63 E(ektronix, Inc.)-.63 E(Cop)72 256.7 Q(yr\
ight \251 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1994, 1996, 2002 Th\
e Open Group)-.09 E(Permission is hereby granted, free of char)72 273.6
Q(ge, to an)-.162 E 2.25(yp)-.135 G(erson obtaining a cop)-2.25 E 2.25
(yo)-.09 G 2.25(ft)-2.25 G(his softw)-2.25 E
(are and associated documenta-)-.09 E(tion \214les \(the "Softw)72 286.6
Q(are"\), to deal in the Softw)-.09 E(are without restriction, includin\
g without limitation the rights to use,)-.09 E(cop)72 299.6 Q 1.17 -.585
(y, m)-.09 H(odify).585 E 2.25(,m)-.585 G(er)-2.25 E
(ge, publish, distrib)-.162 E
(ute, sublicense, and/or sell copies of the Softw)-.18 E
(are, and to permit persons to whom)-.09 E(the Softw)72 312.6 Q
(are is furnished to do so, subject to the follo)-.09 E
(wing conditions:)-.225 E(The abo)72 329.5 Q .27 -.135(ve c)-.135 H(op)
.135 E(yright notice and this permission notice shall be included in al\
l copies or substantial portions of the Soft-)-.09 E -.09(wa)72 342.5 S
(re.).09 E(THE SOFTW)72 359.4 Q(ARE IS PR)-1.08 E -.45(OV)-.36 G
(IDED "AS IS", WITHOUT W).45 E(ARRANTY OF ANY KIND, EXPRESS OR IMPLIED,)
-1.08 E(INCLUDING B)72 372.4 Q(UT NO)-.09 E 2.25(TL)-.36 G(IMITED T)
-2.25 E 2.25(OT)-.162 G(HE W)-2.25 E(ARRANTIES OF MERCHANT)-1.08 E
(ABILITY)-.837 E 2.25(,F)-1.161 G(ITNESS FOR A P)-2.25 E(AR)-.828 E
(TIC-)-.54 E(ULAR PURPOSE AND NONINFRINGEMENT)72 385.4 Q 4.5(.I)-.666 G
2.25(NN)-4.5 G 2.25(OE)-2.25 G(VENT SHALL THE X CONSOR)-2.25 E
(TIUM BE LIABLE FOR)-.54 E(ANY CLAIM, D)72 398.4 Q(AMA)-.36 E(GES OR O)
-.36 E(THER LIABILITY)-.36 E 2.25(,W)-1.161 G(HETHER IN AN A)-2.25 E
(CTION OF CONTRA)-.36 E(CT)-.36 E 2.25(,T)-.666 G(OR)-2.412 E 2.25(TO)
-.54 G 2.25(RO)-2.25 G(TH-)-2.61 E(ER)72 411.4 Q(WISE, ARISING FR)-.495
E(OM, OUT OF OR IN CONNECTION WITH THE SOFTW)-.36 E(ARE OR THE USE OR O)
-1.08 E(THER)-.36 E(DEALINGS IN THE SOFTW)72 424.4 Q(ARE.)-1.08 E(Excep\
t as contained in this notice, the name of The Open Group shall not be \
used in adv)72 441.3 Q(ertising or otherwise to pro-)-.135 E
(mote the sale, use or other dealings in this Softw)72 454.3 Q
(are without prior written authorization from The Open Group.)-.09 E
(Cop)72 510.2 Q(yright \251 1985, 1986, 1987, 1988, 1989, 1990, 1991 by\
 Digital Equipment Corporation)-.09 E(Portions Cop)72 527.1 Q
(yright \251 1990, 1991 by T)-.09 E(ektronix, Inc.)-.63 E
(Permission to use, cop)72 544 Q 1.17 -.585(y, m)-.09 H
(odify and distrib).585 E(ute this documentation for an)-.18 E 2.25(yp)
-.135 G(urpose and without fee is hereby granted,)-2.25 E(pro)72 557 Q
(vided that the abo)-.135 E .27 -.135(ve c)-.135 H(op).135 E
(yright notice appears in all copies and that both that cop)-.09 E
(yright notice and this permission)-.09 E
(notice appear in all copies, and that the names of Digital and T)72 570
Q(ektronix not be used in in adv)-.63 E(ertising or publicity per)-.135
E(-)-.18 E(taining to this documentation without speci\214c, written pr\
ior permission.)72 583 Q(Digital and T)4.5 E(ektronix mak)-.63 E
(es no representa-)-.09 E
(tions about the suitability of this documentation for an)72 596 Q 2.25
(yp)-.135 G 2.25(urpose. It)-2.25 F(is pro)2.25 E(vided `)-.135 E
(`as is')-.666 E 2.25('w)-.666 G(ithout e)-2.25 E(xpress or implied w)
-.135 E(ar)-.09 E(-)-.18 E(ranty)72 609 Q(.)-.585 E 0 Cg EP
%%Page: 3 3
%%BeginPageSetup
BP
%%EndPageSetup
/F0 12/Times-Bold@0 SF(Ackno)241.062 111 Q(wledgments)-.12 E/F1 11
/Times-Roman@0 SF(The design and implementation of the \214rst 10 v)72
153.9 Q(ersions of X were primarily the w)-.165 E(ork of three)-.11 E
(indi)72 166.9 Q(viduals: Robert Schei\215er of the MIT Laboratory for \
Computer Science and Jim Gettys of Dig-)-.275 E
(ital Equipment Corporation and Ron Ne)72 179.9 Q(wman of MIT)-.275 E
2.75(,b)-.814 G(oth at MIT Project Athena.)-2.75 E 2.75(Xv)5.5 G
(ersion 11,)-2.915 E(ho)72 192.9 Q(we)-.275 E -.165(ve)-.275 G .88 -.44
(r, i).165 H 2.75(st).44 G(he result of the ef)-2.75 E
(forts of dozens of indi)-.275 E(viduals at almost as man)-.275 E 2.75
(yl)-.165 G(ocations and)-2.75 E(or)72 205.9 Q -.055(ga)-.198 G 2.75
(nizations. At).055 F(the risk of of)2.75 E
(fending some of the players by e)-.275 E(xclusion, we w)-.165 E
(ould lik)-.11 E 2.75(et)-.11 G(o)-2.75 E(ackno)72 218.9 Q
(wledge some of the people who deserv)-.275 E 2.75(es)-.165 G
(pecial credit and recognition for their w)-2.75 E(ork on)-.11 E(Xlib)72
231.9 Q 5.5(.O)-.44 G(ur apologies to an)-5.5 E(yone inadv)-.165 E
(ertently o)-.165 E -.165(ve)-.165 G(rlook).165 E(ed.)-.11 E/F2 11
/Times-Bold@0 SF(Release 1)72 257.9 Q F1(Our thanks does to Ron Ne)72
274.8 Q(wman \(MIT Project Athena\), who contrib)-.275 E
(uted substantially to the)-.22 E(design and implementation of the V)72
287.8 Q(ersion 11 Xlib interf)-1.221 E(ace.)-.11 E(Our thanks also goes\
 to Ralph Swick \(Project Athena and Digital\) who k)72 304.7 Q
(ept it all together for us)-.11 E(during the early releases.)72 317.7 Q
(He handled literally thousands of requests from people e)5.5 E -.165
(ve)-.275 G(rywhere and).165 E(sa)72 330.7 Q -.165(ve)-.22 G 2.75(dt)
.165 G(he sanity of at least one of us.)-2.75 E(His calm good cheer w)
5.5 E(as a foundation on which we could)-.11 E -.22(bu)72 343.7 S(ild.)
.22 E(Our thanks also goes to T)72 360.6 Q(odd Brunhof)-.88 E 2.75(f\()
-.275 G -.77(Te)-2.75 G(ktronix\) who w).77 E(as `)-.11 E(`loaned')-.814
E 2.75('t)-.814 G 2.75(oP)-2.75 G(roject Athena at)-2.75 E -.165(ex)72
373.6 S(actly the right moment to pro).165 E(vide v)-.165 E
(ery capable and much-needed assistance during the alpha)-.165 E
(and beta releases.)72 386.6 Q(He w)5.5 E
(as responsible for the successful inte)-.11 E
(gration of sources from multiple)-.165 E(sites; we w)72 399.6 Q
(ould not ha)-.11 E .33 -.165(ve h)-.22 H(ad a release without him.).165
E(Our thanks also goes to Al Mento and Al W)72 416.5 Q
(ojtas of Digital')-.88 E 2.75(sU)-.605 G -1.012(LT)-2.75 G
(RIX Documentation Group.)1.012 E -.44(Wi)72 429.5 S
(th good humor and cheer).44 E 2.75(,t)-.44 G(he)-2.75 E 2.75(yt)-.165 G
(ook a rough draft and made it an in\214nitely better and more use-)
-2.75 E(ful document.)72 442.5 Q(The w)5.5 E(ork the)-.11 E 2.75(yh)
-.165 G -2.475 -.22(av e)-2.75 H(done will help man)2.97 E 2.75(ye)-.165
G -.165(ve)-3.025 G 2.75(rywhere. W).165 F 2.75(ea)-.88 G(lso w)-2.75 E
(ould lik)-.11 E 2.75(et)-.11 G 2.75(ot)-2.75 G(hank)-2.75 E
(Hal Murray \(Digital SRC\) and Peter Geor)72 455.5 Q
(ge \(Digital VMS\) who contrib)-.198 E(uted much by proofread-)-.22 E
(ing the early drafts of this document.)72 468.5 Q
(Our thanks also goes to Jef)72 485.4 Q 2.75(fD)-.275 G(ik)-2.75 E 2.75
(e\()-.11 G(Digital UEG\), T)-2.75 E
(om Benson, Jackie Gran\214eld, and V)-.88 E(ince Or)-.66 E(go-)-.198 E
-.275(va)72 498.4 S 2.75(n\().275 G(Digital VMS\) who helped with the l\
ibrary utilities implementation; to Hania Gaje)-2.75 E(wska \(Dig-)-.275
E(ital UEG-WSL\) who, along with Ellis Cohen \(CMU and Siemens\), w)72
511.4 Q(as instrumental in the)-.11 E(semantic design of the windo)72
524.4 Q 2.75(wm)-.275 G(anager properties; and to Da)-2.75 E .33 -.165
(ve R)-.22 H(osenthal \(Sun Microsystems\)).165 E(who also contrib)72
537.4 Q(uted to the protocol and pro)-.22 E
(vided the sample generic color frame b)-.165 E(uf)-.22 E(fer de)-.275 E
(vice-)-.275 E(dependent code.)72 550.4 Q
(The alpha and beta test participants deserv)72 567.3 Q 2.75(es)-.165 G
(pecial recognition and thanks as well.)-2.75 E(It is signi\214-)5.5 E
(cant that the b)72 580.3 Q(ug reports \(and man)-.22 E 2.75<798c>-.165
G -.165(xe)-2.75 G(s\) during alpha and beta test came almost e).165 E
(xclusi)-.165 E -.165(ve)-.275 G(ly).165 E(from just a fe)72 593.3 Q
2.75(wo)-.275 G 2.75(ft)-2.75 G(he alpha testers, mostly hardw)-2.75 E
(are v)-.11 E(endors w)-.165 E(orking on product implementa-)-.11 E
(tions of X.)72 606.3 Q(The continued public contrib)5.5 E(ution of v)
-.22 E(endors and uni)-.165 E -.165(ve)-.275 G
(rsities is certainly to the bene-).165 E
(\214t of the entire X community)72 619.3 Q(.)-.715 E
(Our special thanks must go to Sam Fuller)72 636.2 Q 2.75(,V)-.44 G
(ice-President of Corporate Research at Digital, who)-3.41 E
(has remained committed to the widest public a)72 649.2 Q -.275(va)-.22
G(ilability of X and who made it possible to greatly).275 E
(supplement MIT')72 662.2 Q 2.75(sr)-.605 G
(esources with the Digital staf)-2.75 E 2.75(fi)-.275 G 2.75(no)-2.75 G
(rder to mak)-2.75 E 2.75(ev)-.11 G(ersion 11 a reality)-2.915 E 5.5(.M)
-.715 G(an)-5.5 E 2.75(yo)-.165 G(f)-2.75 E
(the people mentioned here are part of the W)72 675.2 Q(estern Softw)
-.88 E(are Laboratory \(Digital UEG-WSL\) of)-.11 E(the UL)72 688.2 Q
(TRIX Engineering group and w)-1.012 E(ork for Smok)-.11 E .33 -.165
(ey W)-.11 H(allace, who has been vital to the)-.715 E(project')72 701.2
Q 2.75(ss)-.605 G 2.75(uccess. Others)-2.75 F(not mentioned here w)2.75
E(ork)-.11 E(ed on the toolkit and are ackno)-.11 E(wledged in the)-.275
E 2.75(XT)72 714.2 S(oolkit documentation.)-3.63 E 0 Cg EP
%%Page: 4 4
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Roman@0 SF(Of course, we must particularly thank P)72 85 Q
(aul Asente, formerly of Stanford Uni)-.165 E -.165(ve)-.275 G
(rsity and no).165 E 2.75(wo)-.275 G(f)-2.75 E
(Digital UEG-WSL, who wrote W)72 98 Q 2.75(,t)-1.012 G
(he predecessor to X, and Brian Reid, formerly of Stanford)-2.75 E(Uni)
72 111 Q -.165(ve)-.275 G(rsity and no).165 E 2.75(wo)-.275 G 2.75(fD)
-2.75 G(igital WRL, who had much to do with W')-2.75 E 2.75(sd)-.605 G
(esign.)-2.75 E(Finally)72 127.9 Q 2.75(,o)-.715 G
(ur thanks goes to MIT)-2.75 E 5.5(,D)-.814 G
(igital Equipment Corporation, and IBM for pro)-5.5 E(viding the en)
-.165 E(vi-)-.44 E(ronment where it could happen.)72 140.9 Q/F1 11
/Times-Bold@0 SF(Release 4)72 166.9 Q F0(Our thanks go to Jim Fulton \(\
MIT X Consortium\) for designing and specifying the ne)72 183.8 Q 2.75
(wX)-.275 G(lib)-2.75 E(functions for Inter)72 196.8 Q
(-Client Communication Con)-.22 E -.165(ve)-.44 G
(ntions \(ICCCM\) support.).165 E 1.76 -.88(We a)72 213.7 T
(lso thank Al Mento of Digital for his continued ef).88 E
(fort in maintaining this document and Jim)-.275 E(Fulton and Donna Con)
72 226.7 Q -.165(ve)-.44 G
(rse \(MIT X Consortium\) for their much-appreciated ef).165 E
(forts in re)-.275 E(vie)-.275 E(wing)-.275 E(the changes.)72 239.7 Q F1
(Release 5)72 265.7 Q F0(The principal authors of the Input Method f)72
282.6 Q(acilities are V)-.11 E(ania Jolobof)-1.221 E 2.75(f\()-.275 G
(Open Softw)-2.75 E(are F)-.11 E(ounda-)-.165 E
(tion\) and Bill McMahon \(He)72 295.6 Q(wlett-P)-.275 E 2.75
(ackard\). The)-.165 F
(principal author of the rest of the international-)2.75 E(ization f)72
308.6 Q(acilities is Glenn W)-.11 E(idener \(T)-.44 E 2.75
(ektronix\). Our)-.77 F(thanks to them for k)2.75 E
(eeping their sense of)-.11 E(humor through a long and sometimes dif)72
321.6 Q(\214cult design process.)-.275 E(Although the w)5.5 E
(ords and much of)-.11 E(the design are due to them, man)72 334.6 Q 2.75
(yo)-.165 G(thers ha)-2.75 E .33 -.165(ve c)-.22 H(ontrib).165 E
(uted substantially to the design and imple-)-.22 E 2.75(mentation. T)72
347.6 R(om McF)-.88 E(arland \(HP\) and Frank Rojas \(IBM\) deserv)-.165
E 2.75(ep)-.165 G(articular recognition for their)-2.75 E(contrib)72
360.6 Q 5.5(utions. Other)-.22 F(contrib)2.75 E(utors were: T)-.22 E
(im Anderson \(Motorola\), Alka Badshah \(OSF\), Gabe)-.385 E(Be)72
373.6 Q(ged-Do)-.165 E 2.75(v\()-.165 G(HP\), Chih-Chung K)-2.75 E 2.75
(o\()-.385 G(III\), V)-2.75 E
(era Cheng \(III\), Michael Collins \(Digital\), W)-1.221 E(alt Daniels)
-.88 E(\(IBM\), Noritoshi Demizu \(OMR)72 386.6 Q(ON\), K)-.44 E(eisuk)
-.275 E 2.75(eF)-.11 G
(ukui \(Fujitsu\), Hitoshoi Fukumoto \(Nihon Sun\),)-2.75 E -.385(Ti)72
399.6 S 2.75(mG).385 G(reenw)-2.75 E(ood \(Digital\), John Harv)-.11 E
.33 -.165(ey \()-.165 H(IBM\), Hideki Hiura \(Sun\), Fred Horman \(A)
.165 E(T&T\),)-1.221 E(Norikazu Kaiya \(Fujitsu\), Y)72 412.6 Q
(uji Kamata \(IBM\), Y)-1.221 E(utaka Kataoka \(W)-1.221 E(aseda Uni)
-.88 E -.165(ve)-.275 G(rsity\), Ranee).165 E
(Khubchandani \(Sun\), Akira K)72 425.6 Q(on \(NEC\), Hiroshi K)-.385 E
(uribayashi \(OMR)-.165 E(ON\), T)-.44 E(eruhik)-.77 E 2.75(oK)-.11 G
(urosaka)-2.915 E(\(Sun\), Seiji K)72 438.6 Q(uw)-.165 E(ari \(OMR)-.11
E(ON\), Sandra Martin \(OSF\), Narita Masahik)-.44 E 2.75(o\()-.11 G
(Fujitsu\), Masato)-2.75 E(Morisaki \(NTT\), Nelson Ng \(Sun\), T)72
451.6 Q(akashi Nishimura \(NTT America\), Makato Nishino \(IBM\),)-.88 E
(Akira Ohsone \(Nihon Sun\), Chris Peterson \(MIT\), Sam Shteing)72
464.6 Q(art \(A)-.055 E(T&T\), Manish Sheth)-1.221 E(\(A)72 477.6 Q(T&T\
\), Muneiyoshi Suzuki \(NTT\), Cori Mehring \(Digital\), Shoji Sugiyama\
 \(IBM\), and Eiji)-1.221 E -.88(To)72 490.6 S(sa \(IBM\).).88 E 1.76
-.88(We a)72 507.5 T(re deeply indebted to T).88 E
(atsuya Kato \(NTT\), Hiroshi K)-.88 E(uribayashi \(OMR)-.165 E
(ON\), Seiji K)-.44 E(uw)-.165 E(ari)-.11 E(\(OMR)72 520.5 Q
(ON\), Muneiyoshi Suzuki \(NTT\), and Li Y)-.44 E(uhong \(OMR)-1.221 E
(ON\) for producing one of the \214rst)-.44 E
(complete sample implementation of the internationalization f)72 533.5 Q
(acilities, and Hiromu Inukai \(Nihon)-.11 E(Sun\), T)72 546.5 Q
(akashi Fujiw)-.88 E(ara \(Fujitsu\), Hideki Hiura \(Sun\), Y)-.11 E
(asuhiro Ka)-1.1 E -.11(wa)-.165 G 2.75(i\().11 G(Oki T)-2.75 E
(echnosystems Labo-)-.77 E
(ratory\), Kazunori Nishihara \(Fuji Xerox\), Masaki T)72 559.5 Q(ak)
-.88 E(euchi \(Son)-.11 E(y\), Katsuhisa Y)-.165 E(ano \(T)-1.1 E
(oshiba\),)-.88 E(Mak)72 572.5 Q(oto W)-.11 E(akamatsu \(Son)-.88 E 2.75
(yC)-.165 G
(orporation\) for producing the another complete sample implementa-)
-2.75 E(tion of the internationalization f)72 585.5 Q(acilities.)-.11 E
(The principal authors \(design and implementation\) of the Xcms color \
management f)72 602.4 Q(acilities are)-.11 E(Al T)72 615.4 Q(abayo)-.88
E(yon \(T)-.11 E(ektronix\) and Chuck Adams \(T)-.77 E 2.75
(ektronix\). Joann)-.77 F -.88(Ta)2.75 G(ylor \(T).88 E
(ektronix\), Bob T)-.77 E(oole)-.88 E(\(T)72 628.4 Q(ektronix\), and K)
-.77 E(eith P)-.275 E(ackard \(MIT X Consortium\) also contrib)-.165 E
(uted signi\214cantly to the design.)-.22 E(Others who contrib)72 641.4
Q(uted are: Harold Boll \(K)-.22 E(odak\), K)-.385 E
(en Bronstein \(HP\), Nanc)-.275 E 2.75(yC)-.165 G(am \(SGI\), Donna)
-2.75 E(Con)72 654.4 Q -.165(ve)-.44 G(rse \(MIT X Consortium\), Elias \
Israel \(ISC\), Deron Johnson \(Sun\), Jim King \(Adobe\),).165 E
(Ricardo Motta \(HP\), Chuck Peek \(IBM\), W)72 667.4 Q(il Plouf)-.44 E
(fe \(IBM\), Da)-.275 E .33 -.165(ve S)-.22 H(ternlicht \(MIT X Consor)
.165 E(-)-.22 E(tium\), K)72 680.4 Q(umar T)-.165 E(alluri \(A)-.88 E
(T&T\), and Richard V)-1.221 E(erber)-1.221 E 2.75(g\()-.198 G(IBM\).)
-2.75 E 1.76 -.88(We a)72 697.3 T(lso once ag).88 E
(ain thank Al Mento of Digital for his w)-.055 E
(ork in formatting and reformatting te)-.11 E(xt for)-.165 E
(this manual, and for producing man pages.)72 710.3 Q
(Thanks also to Cli)5.5 E .33 -.165(ve F)-.275 H
(eather \(IXI\) for proof-reading).165 E
(and \214nding a number of small errors.)72 723.3 Q 0 Cg EP
%%Page: 5 5
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Release 6)72 85 Q/F1 11/Times-Roman@0 SF
(Stephen Gildea \(X Consortium\) authored the threads support.)72 101.9
Q(Ov)5.5 E(ais Ashraf \(Sun\) and Gre)-.275 E(g)-.165 E
(Olsen \(Sun\) contrib)72 114.9 Q(uted substantially by testing the f)
-.22 E(acilities and reporting b)-.11 E(ugs in a timely f)-.22 E(ash-)
-.11 E(ion.)72 127.9 Q
(The principal authors of the internationalization f)72 144.8 Q
(acilities, including Input and Output Methods,)-.11 E
(are Hideki Hiura \(SunSoft\) and Shigeru Y)72 157.8 Q
(amada \(Fujitsu OSSI\).)-1.1 E(Although the w)5.5 E(ords and much)-.11
E(of the design are due to them, man)72 170.8 Q 2.75(yo)-.165 G
(thers ha)-2.75 E .33 -.165(ve c)-.22 H(ontrib).165 E
(uted substantially to the design and imple-)-.22 E 2.75(mentation. The)
72 183.8 R 2.75(ya)-.165 G(re: T)-2.75 E(akashi Fujiw)-.88 E
(ara \(Fujitsu\), Y)-.11 E(oshio Horiuchi \(IBM\), Mak)-1.21 E
(oto Inada \(Digital\),)-.11 E
(Hiromu Inukai \(Nihon SunSoft\), Song JaeK)72 196.8 Q
(yung \(KAIST\), Frank)-.275 E 2.75(yL)-.165 G(ing \(Digital\), T)-2.75
E(om McF)-.88 E(ar)-.165 E(-)-.22 E(land \(HP\), Hiro)72 209.8 Q
(yuki Miyamoto \(Digital\), Masahik)-.11 E 2.75(oN)-.11 G
(arita \(Fujitsu\), Frank Rojas \(IBM\),)-2.75 E(Hidetoshi T)72 222.8 Q
(ajima \(HP\), Masaki T)-.88 E(ak)-.88 E(euchi \(Son)-.11 E(y\), Mak)
-.165 E(oto W)-.11 E(akamatsu \(Son)-.88 E(y\), Masaki W)-.165 E(akao)
-.88 E(\(IBM\), Katsuhisa Y)72 235.8 Q(ano\(T)-1.1 E
(oshiba\) and Jinsoo Y)-.88 E(oon \(KAIST\).)-1.21 E(The principal prod\
ucers of the sample implementation of the internationalization f)72
252.7 Q(acilities are:)-.11 E(Jef)72 265.7 Q(fre)-.275 E 2.75(yB)-.165 G
(loom\214eld \(Fujitsu OSSI\), T)-2.75 E(akashi Fujiw)-.88 E
(ara \(Fujitsu\), Hideki Hiura \(SunSoft\), Y)-.11 E(oshio)-1.21 E
(Horiuchi \(IBM\), Mak)72 278.7 Q
(oto Inada \(Digital\), Hiromu Inukai \(Nihon SunSoft\), Song JaeK)-.11
E(yung)-.275 E(\(KAIST\), Riki Ka)72 291.7 Q -.11(wa)-.165 G
(guchi \(Fujitsu\), Frank).11 E 2.75(yL)-.165 G(ing \(Digital\), Hiro)
-2.75 E(yuki Miyamoto \(Digital\),)-.11 E(Hidetoshi T)72 304.7 Q
(ajima \(HP\), T)-.88 E(oshimitsu T)-.88 E(erazono \(Fujitsu\), Mak)-.77
E(oto W)-.11 E(akamatsu \(Son)-.88 E(y\), Masaki)-.165 E -.88(Wa)72
317.7 S(kao \(IBM\), Shigeru Y).88 E
(amada \(Fujitsu OSSI\) and Katsuhisa Y)-1.1 E(ano \(T)-1.1 E(oshiba\).)
-.88 E(The coordinators of the inte)72 334.6 Q(gration, testing, and re\
lease of this implementation of the internation-)-.165 E(alization f)72
347.6 Q(acilities are Nob)-.11 E(uyuki T)-.22 E(anaka \(Son)-.88 E
(y\) and Mak)-.165 E(oto W)-.11 E(akamatsu \(Son)-.88 E(y\).)-.165 E
(Others who ha)72 364.5 Q .33 -.165(ve c)-.22 H(ontrib).165 E(uted to t\
he architectural design or testing of the sample implementation)-.22 E
(of the internationalization f)72 377.5 Q
(acilities are: Hector Chan \(Digital\), Michael K)-.11 E
(ung \(IBM\), Joseph)-.165 E(Kw)72 390.5 Q(ok \(Digital\), Hiro)-.11 E
(yuki Machida \(Son)-.11 E
(y\), Nelson Ng \(SunSoft\), Frank Rojas \(IBM\), Y)-.165 E(oshiyuki)
-1.21 E(Se)72 403.5 Q -.055(ga)-.165 G .22 -.11(wa \()-.11 H
(Fujitsu OSSI\), Makik).11 E 2.75(oS)-.11 G
(himamura \(Fujitsu\), Shoji Sugiyama \(IBM\), Lining Sun \(SGI\),)-2.75
E(Masaki T)72 416.5 Q(ak)-.88 E(euchi \(Son)-.11 E(y\), Jinsoo Y)-.165 E
(oon \(KAIST\) and Akiyasu Zen \(HP\).)-1.21 E(Jim Gettys)72 465.9 Q
(Cambridge Research Laboratory)72 478.9 Q(Digital Equipment Corporation)
72 491.9 Q(Robert W)72 517.9 Q 2.75(.S)-1.012 G(chei\215er)-2.75 E
(Laboratory for Computer Science)72 530.9 Q
(Massachusetts Institute of T)72 543.9 Q(echnology)-.77 E 0 Cg EP
%%Page: 1 6
%%BeginPageSetup
BP
%%EndPageSetup
/F0 12/Times-Bold@0 SF(Chapter 1)262.17 111 Q(Intr)236.436 137 Q
(oduction to Xlib)-.216 E/F1 11/Times-Roman@0 SF(The X W)72 179.9 Q
(indo)-.44 E 2.75(wS)-.275 G(ystem is a netw)-2.75 E
(ork-transparent windo)-.11 E 2.75(ws)-.275 G(ystem that w)-2.75 E
(as designed at MIT)-.11 E 5.5(.X)-.814 G(display serv)72 192.9 Q(ers r\
un on computers with either monochrome or color bitmap display hardw)
-.165 E 2.75(are. The)-.11 F(serv)72 205.9 Q(er distrib)-.165 E
(utes user input to and accepts output requests from v)-.22 E
(arious client programs located)-.275 E
(either on the same machine or else)72 218.9 Q(where in the netw)-.275 E
2.75(ork. Xlib)-.11 F(is a C subroutine library that appli-)2.75 E
(cation programs \(clients\) use to interf)72 231.9 Q
(ace with the windo)-.11 E 2.75(ws)-.275 G
(ystem by means of a stream connec-)-2.75 E 2.75(tion. Although)72 244.9
R 2.75(ac)2.75 G(lient usually runs on the same machine as the X serv)
-2.75 E(er it is talking to, this need)-.165 E(not be the case.)72 257.9
Q/F2 11/Times-Italic@0 SF(Xlib \255 C Langua)72 274.8 Q .22 -.11(ge X I)
-.11 H(nterface).11 E F1(is a reference guide to the lo)2.75 E(w-le)
-.275 E -.165(ve)-.275 G 2.75(lCl).165 G(anguage interf)-2.75 E
(ace to the X)-.11 E -.44(Wi)72 287.8 S(ndo).44 E 2.75(wS)-.275 G
(ystem protocol.)-2.75 E(It is neither a tutorial nor a user')5.5 E 2.75
(sg)-.605 G(uide to programming the X W)-2.75 E(in-)-.44 E(do)72 300.8 Q
2.75(wS)-.275 G 2.75(ystem. Rather)-2.75 F 2.75(,i)-.44 G 2.75(tp)-2.75
G(ro)-2.75 E(vides a detailed description of each function in the libra\
ry as well as a)-.165 E
(discussion of the related background information.)72 313.8 Q F2
(Xlib \255 C Langua)5.5 E .22 -.11(ge X I)-.11 H(nterface).11 E F1
(assumes a)2.75 E(basic understanding of a graphics windo)72 326.8 Q
2.75(ws)-.275 G(ystem and of the C programming language.)-2.75 E(Other)
5.5 E(higher)72 339.8 Q(-le)-.22 E -.165(ve)-.275 G 2.75(la).165 G
(bstractions \(for e)-2.75 E(xample, those pro)-.165 E
(vided by the toolkits for X\) are b)-.165 E(uilt on top of the)-.22 E
(Xlib library)72 352.8 Q 5.5(.F)-.715 G
(or further information about these higher)-5.665 E(-le)-.22 E -.165(ve)
-.275 G 2.75(ll).165 G(ibraries, see the appropriate toolkit)-2.75 E
2.75(documentation. The)72 365.8 R F2 2.75(XW)2.75 G(indow System Pr)
-3.355 E(otocol)-.495 E F1(pro)2.75 E(vides the de\214niti)-.165 E .33
-.165(ve w)-.275 H(ord on the beha).055 E(vior of)-.22 E 2.75
(X. Although)72 378.8 R(additional information appears here, the protoc\
ol document is the ruling document.)2.75 E 1.76 -.88(To p)72 395.7 T(ro)
.88 E(vide an introduction to X programming, this chapter discusses:)
-.165 E 23.65<834f>72 412.6 S -.165(ve)-23.65 G(rvie).165 E 2.75(wo)
-.275 G 2.75(ft)-2.75 G(he X W)-2.75 E(indo)-.44 E 2.75(wS)-.275 G
(ystem)-2.75 E 23.65<8345>72 429.5 S(rrors)-23.65 E 23.65<8353>72 446.4
S(tandard header \214les)-23.65 E 23.65<8347>72 463.3 S(eneric v)-23.65
E(alues and types)-.275 E 23.65<834e>72 480.2 S(aming and ar)-23.65 E
(gument con)-.198 E -.165(ve)-.44 G(ntions within Xlib).165 E 23.65
<8350>72 497.1 S(rogramming considerations)-23.65 E 23.65<8343>72 514 S
(haracter sets and encodings)-23.65 E 23.65<8346>72 530.9 S
(ormatting con)-23.815 E -.165(ve)-.44 G(ntions).165 E/F3 11
/Times-Bold@0 SF 2.75(1.1. Ov)72 556.9 R(er)-.11 E(view of the X W)-.11
E(indo)-.198 E 2.75(wS)-.11 G(ystem)-2.75 E F1(Some of the terms used i\
n this book are unique to X, and other terms that are common to other)72
573.8 Q(windo)72 586.8 Q 2.75(ws)-.275 G(ystems ha)-2.75 E .33 -.165
(ve d)-.22 H(if).165 E(ferent meanings in X.)-.275 E -1.21(Yo)5.5 G 2.75
(um)1.21 G(ay \214nd it helpful to refer to the glossary)-2.75 E(,)-.715
E(which is located at the end of the book.)72 599.8 Q(The X W)72 616.7 Q
(indo)-.44 E 2.75(wS)-.275 G
(ystem supports one or more screens containing o)-2.75 E -.165(ve)-.165
G(rlapping windo).165 E(ws or subwin-)-.275 E(do)72 629.7 Q 2.75(ws. A)
-.275 F(screen is a ph)2.75 E(ysical monitor and hardw)-.055 E
(are that can be color)-.11 E 2.75(,g)-.44 G(rayscale, or monochrome.)
-2.75 E(There can be multiple screens for each display or w)72 642.7 Q
2.75(orkstation. A)-.11 F(single X serv)2.75 E(er can pro)-.165 E
(vide dis-)-.165 E(play services for an)72 655.7 Q 2.75(yn)-.165 G
(umber of screens.)-2.75 E 2.75(As)5.5 G
(et of screens for a single user with one k)-2.75 E -.165(ey)-.11 G
(board and).165 E(one pointer \(usually a mouse\) is called a display)72
668.7 Q(.)-.715 E(All the windo)72 685.6 Q(ws in an X serv)-.275 E
(er are arranged in strict hierarchies.)-.165 E
(At the top of each hierarch)5.5 E 2.75(yi)-.055 G 2.75(sa)-2.75 G
(root windo)72 698.6 Q 1.43 -.715(w, w)-.275 H(hich co).715 E -.165(ve)
-.165 G(rs each of the display screens.).165 E(Each root windo)5.5 E
2.75(wi)-.275 G 2.75(sp)-2.75 G(artially or com-)-2.75 E(pletely co)72
711.6 Q -.165(ve)-.165 G(red by child windo).165 E 2.75(ws. All)-.275 F
(windo)2.75 E(ws, e)-.275 E(xcept for root windo)-.165 E(ws, ha)-.275 E
.33 -.165(ve p)-.22 H 2.75(arents. There).165 F(is)2.75 E
(usually at least one windo)72 724.6 Q 2.75(wf)-.275 G
(or each application program.)-2.75 E(Child windo)5.5 E
(ws may in turn ha)-.275 E .33 -.165(ve t)-.22 H(heir).165 E F3(1)285.25
769 Q 0 Cg EP
%%Page: 2 7
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E/F1 11/Times-Roman@0 SF -.275(ow)72 85
S 2.75(nc).275 G 2.75(hildren. In)-2.75 F(this w)2.75 E(ay)-.11 E 2.75
(,a)-.715 G 2.75(na)-2.75 G
(pplication program can create an arbitrarily deep tree on each)-2.75 E
2.75(screen. X)72 98 R(pro)2.75 E(vides graphics, te)-.165 E
(xt, and raster operations for windo)-.165 E(ws.)-.275 E 2.75(Ac)72
114.9 S(hild windo)-2.75 E 2.75(wc)-.275 G(an be lar)-2.75 E
(ger than its parent.)-.198 E(That is, part or all of the child windo)
5.5 E 2.75(wc)-.275 G(an e)-2.75 E(xtend)-.165 E(be)72 127.9 Q
(yond the boundaries of the parent, b)-.165 E(ut all output to a windo)
-.22 E 2.75(wi)-.275 G 2.75(sc)-2.75 G(lipped by its parent.)-2.75 E
(If se)5.5 E -.165(ve)-.275 G(ral).165 E(children of a windo)72 140.9 Q
2.75(wh)-.275 G -2.475 -.22(av e)-2.75 H -.165(ove)2.97 G
(rlapping locations, one of the children is considered to be on top of)
.165 E(or raised o)72 153.9 Q -.165(ve)-.165 G 2.75(rt).165 G
(he others, thus obscuring them.)-2.75 E(Output to areas co)5.5 E -.165
(ve)-.165 G(red by other windo).165 E(ws is sup-)-.275 E
(pressed by the windo)72 166.9 Q 2.75(ws)-.275 G(ystem unless the windo)
-2.75 E 2.75(wh)-.275 G(as backing store.)-2.75 E(If a windo)5.5 E 2.75
(wi)-.275 G 2.75(so)-2.75 G(bscured by)-2.75 E 2.75(as)72 179.9 S
(econd windo)-2.75 E 1.43 -.715(w, t)-.275 H(he second windo).715 E 2.75
(wo)-.275 G(bscures only those ancestors of the second windo)-2.75 E
2.75(wt)-.275 G(hat)-2.75 E(are also ancestors of the \214rst windo)72
192.9 Q -.715(w.)-.275 G 2.75(Aw)72 209.8 S(indo)-2.75 E 2.75(wh)-.275 G
(as a border zero or more pix)-2.75 E(els in width, which can be an)
-.165 E 2.75(yp)-.165 G(attern \(pixmap\) or solid)-2.75 E
(color you lik)72 222.8 Q 2.75(e. A)-.11 F(windo)2.75 E 2.75(wu)-.275 G
(sually b)-2.75 E(ut not al)-.22 E -.11(wa)-.11 G
(ys has a background pattern, which will be).11 E
(repainted by the windo)72 235.8 Q 2.75(ws)-.275 G(ystem when unco)-2.75
E -.165(ve)-.165 G 2.75(red. Child).165 F(windo)2.75 E
(ws obscure their parents, and)-.275 E
(graphic operations in the parent windo)72 248.8 Q 2.75(wu)-.275 G
(sually are clipped by the children.)-2.75 E(Each windo)72 265.7 Q 2.75
(wa)-.275 G(nd pixmap has its o)-2.75 E(wn coordinate system.)-.275 E
(The coordinate system has the X axis)5.5 E(horizontal and the Y axis v)
72 278.7 Q(ertical with the origin [0, 0] at the upper)-.165 E
(-left corner)-.22 E 5.5(.C)-.605 G(oordinates are)-5.5 E(inte)72 291.7
Q(gral, in terms of pix)-.165 E(els, and coincide with pix)-.165 E
(el centers.)-.165 E -.165(Fo)5.5 G 2.75(raw).165 G(indo)-2.75 E 1.43
-.715(w, t)-.275 H(he origin is inside the).715 E
(border at the inside, upper)72 304.7 Q(-left corner)-.22 E(.)-.605 E
2.75(Xd)72 321.6 S(oes not guarantee to preserv)-2.75 E 2.75(et)-.165 G
(he contents of windo)-2.75 E 2.75(ws. When)-.275 F
(part or all of a windo)2.75 E 2.75(wi)-.275 G 2.75(sh)-2.75 G(id-)-2.75
E(den and then brought back onto the screen, its contents may be lost.)
72 334.6 Q(The serv)5.5 E(er then sends the)-.165 E(client program an)72
347.6 Q F0(Expose)3.666 E F1 -2.365 -.275(ev e)3.666 H
(nt to notify it that part or all of the windo).275 E 2.75(wn)-.275 G
(eeds to be repainted.)-2.75 E(Programs must be prepared to re)72 360.6
Q(generate the contents of windo)-.165 E(ws on demand.)-.275 E 2.75(Xa)
72 377.5 S(lso pro)-2.75 E(vides of)-.165 E
(f-screen storage of graphics objects, called pixmaps.)-.275 E
(Single plane \(depth 1\))5.5 E
(pixmaps are sometimes referred to as bitmaps.)72 390.5 Q
(Pixmaps can be used in most graphics functions)5.5 E
(interchangeably with windo)72 403.5 Q(ws and are used in v)-.275 E
(arious graphics operations to de\214ne patterns or)-.275 E 2.75
(tiles. W)72 416.5 R(indo)-.44 E
(ws and pixmaps together are referred to as dra)-.275 E -.11(wa)-.165 G
(bles.).11 E
(Most of the functions in Xlib just add requests to an output b)72 433.4
Q(uf)-.22 E(fer)-.275 E 5.5(.T)-.605 G(hese requests later e)-5.5 E
-.165(xe)-.165 G(cute).165 E(asynchronously on the X serv)72 446.4 Q(er)
-.165 E 5.5(.F)-.605 G(unctions that return v)-5.5 E
(alues of information stored in the serv)-.275 E(er)-.165 E
(do not return \(that is, the)72 459.4 Q 2.75(yb)-.165 G
(lock\) until an e)-2.75 E(xplicit reply is recei)-.165 E -.165(ve)-.275
G 2.75(do).165 G 2.75(ra)-2.75 G 2.75(ne)-2.75 G(rror occurs.)-2.75 E
-1.21(Yo)5.5 G 2.75(uc)1.21 G(an)-2.75 E(pro)72 472.4 Q
(vide an error handler)-.165 E 2.75(,w)-.44 G
(hich will be called when the error is reported.)-2.75 E
(If a client does not w)72 489.3 Q(ant a request to e)-.11 E -.165(xe)
-.165 G(cute asynchronously).165 E 2.75(,i)-.715 G 2.75(tc)-2.75 G
(an follo)-2.75 E 2.75(wt)-.275 G(he request with a call)-2.75 E(to)72
502.3 Q F0(XSync)3.666 E F1 2.75(,w).916 G(hich blocks until all pre)
-2.75 E(viously b)-.275 E(uf)-.22 E(fered asynchronous e)-.275 E -.165
(ve)-.275 G(nts ha).165 E .33 -.165(ve b)-.22 H(een sent and).165 E
(acted on.)72 515.3 Q(As an important side ef)5.5 E(fect, the output b)
-.275 E(uf)-.22 E(fer in Xlib is al)-.275 E -.11(wa)-.11 G
(ys \215ushed by a call to an).11 E(y)-.165 E(function that returns a v)
72 528.3 Q(alue from the serv)-.275 E(er or w)-.165 E(aits for input.)
-.11 E(Man)72 545.2 Q 2.75(yX)-.165 G(lib functions will return an inte)
-2.75 E(ger resource ID, which allo)-.165 E(ws you to refer to objects)
-.275 E(stored on the X serv)72 558.2 Q(er)-.165 E 5.5(.T)-.605 G
(hese can be of type)-5.5 E F0 -.198(Wi)3.666 G(ndo).198 E(w)-.11 E F1
(,).916 E F0 -.275(Fo)3.666 G(nt).275 E F1(,).916 E F0(Pixmap)3.666 E F1
(,).916 E F0(Colormap)3.666 E F1(,).916 E F0(Cursor)3.666 E F1 2.75(,a)
.916 G(nd)-2.75 E F0(GContext)72.916 571.2 Q F1 2.75(,a).916 G 2.75(sd)
-2.75 G(e\214ned in the \214le <)-2.75 E F0(X11/X.h)A F1 2.75(>. These)B
(resources are created by requests and are)2.75 E(destro)72 584.2 Q
(yed \(or freed\) by requests or when connections are closed.)-.11 E
(Most of these resources are)5.5 E
(potentially sharable between applications, and in f)72 597.2 Q
(act, windo)-.11 E(ws are manipulated e)-.275 E(xplicitly by)-.165 E
(windo)72 610.2 Q 2.75(wm)-.275 G(anager programs.)-2.75 E -.165(Fo)5.5
G(nts and cursors are shared automatically across multiple screens.).165
E -.165(Fo)72 623.2 S(nts are loaded and unloaded as needed and are sha\
red by multiple clients.).165 E -.165(Fo)5.5 G(nts are often).165 E
(cached in the serv)72 636.2 Q(er)-.165 E 5.5(.X)-.605 G(lib pro)-5.5 E
(vides no support for sharing graphics conte)-.165 E
(xts between applica-)-.165 E(tions.)72 649.2 Q
(Client programs are informed of e)72 666.1 Q -.165(ve)-.275 G 2.75
(nts. Ev).165 F(ents may either be side ef)-.165 E
(fects of a request \(for e)-.275 E(xam-)-.165 E(ple, restacking windo)
72 679.1 Q(ws generates)-.275 E F0(Expose)3.666 E F1 -2.365 -.275(ev e)
3.666 H(nts\) or completely asynchronous \(for e).275 E(xample,)-.165 E
(from the k)72 692.1 Q -.165(ey)-.11 G 2.75(board\). A).165 F
(client program asks to be informed of e)2.75 E -.165(ve)-.275 G 2.75
(nts. Because).165 F(other applications)2.75 E(can send e)72 705.1 Q
-.165(ve)-.275 G(nts to your application, programs must be prepared to \
handle \(or ignore\) e).165 E -.165(ve)-.275 G(nts of all).165 E(types.)
72 718.1 Q F0(2)285.25 769 Q 0 Cg EP
%%Page: 3 8
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E/F1 11/Times-Roman@0 SF(Input e)72 85 Q
-.165(ve)-.275 G(nts \(for e).165 E(xample, a k)-.165 E .33 -.165(ey p)
-.11 H(ressed or the pointer mo).165 E -.165(ve)-.165 G(d\) arri).165 E
.33 -.165(ve a)-.275 H(synchronously from the).165 E(serv)72 98 Q
(er and are queued until the)-.165 E 2.75(ya)-.165 G
(re requested by an e)-2.75 E(xplicit call \(for e)-.165 E(xample,)-.165
E F0(XNextEv)3.666 E(ent)-.11 E F1(or)3.666 E F0(XW)72.916 111 Q(indo)
-.198 E(wEv)-.11 E(ent)-.11 E F1 2.75(\). In).916 F
(addition, some library functions \(for e)2.75 E(xample,)-.165 E F0
(XRaiseW)3.666 E(indo)-.198 E(w)-.11 E F1 2.75(\)g).916 G(enerate)-2.75
E F0(Expose)72.916 124 Q F1(and)3.666 E F0(Con\214gur)3.666 E(eRequest)
-.198 E F1 -2.365 -.275(ev e)3.666 H 2.75(nts. These).275 F -2.365 -.275
(ev e)2.75 H(nts also arri).275 E .33 -.165(ve a)-.275 H(synchronously)
.165 E 2.75(,b)-.715 G(ut the client)-2.97 E(may wish to e)72 137 Q
(xplicitly w)-.165 E(ait for them by calling)-.11 E F0(XSync)3.666 E F1
(after calling a function that can cause the)3.666 E(serv)72 150 Q
(er to generate e)-.165 E -.165(ve)-.275 G(nts.).165 E F0 2.75(1.2. Err)
72 176 R(ors)-.198 E F1(Some functions return)72 192.9 Q F0(Status)3.666
E F1 2.75(,a).916 G 2.75(ni)-2.75 G(nte)-2.75 E(ger error indication.)
-.165 E(If the function f)5.5 E(ails, it returns a zero.)-.11 E(If the \
function returns a status of zero, it has not updated the return ar)72
205.9 Q 2.75(guments. Because)-.198 F 2.75(Cd)2.75 G(oes)-2.75 E
(not pro)72 218.9 Q(vide multiple return v)-.165 E(alues, man)-.275 E
2.75(yf)-.165 G
(unctions must return their results by writing into client-)-2.75 E
(passed storage.)72 231.9 Q(By def)5.5 E(ault, errors are handled eithe\
r by a standard library function or by one that)-.11 E(you pro)72 244.9
Q 2.75(vide. Functions)-.165 F(that return pointers to strings return N\
ULL pointers if the string does not)2.75 E -.165(ex)72 257.9 S(ist.).165
E(The X serv)72 274.8 Q
(er reports protocol errors at the time that it detects them.)-.165 E
(If more than one error could)5.5 E(be generated for a gi)72 287.8 Q
-.165(ve)-.275 G 2.75(nr).165 G(equest, the serv)-2.75 E
(er can report an)-.165 E 2.75(yo)-.165 G 2.75(ft)-2.75 G(hem.)-2.75 E
(Because Xlib usually does not transmit requests to the serv)72 304.7 Q
(er immediately \(that is, it b)-.165 E(uf)-.22 E(fers)-.275 E
(them\), errors can be reported much later than the)72 317.7 Q 2.75(ya)
-.165 G(ctually occur)-2.75 E 5.5(.F)-.605 G(or deb)-5.665 E
(ugging purposes, ho)-.22 E(w-)-.275 E -2.365 -.275(ev e)72 330.7 T .88
-.44(r, X).275 H(lib pro).44 E
(vides a mechanism for forcing synchronous beha)-.165 E
(vior \(see section 11.8.1\).)-.22 E(When)5.5 E
(synchronization is enabled, errors are reported as the)72 343.7 Q 2.75
(ya)-.165 G(re generated.)-2.75 E(When Xlib detects an error)72 360.6 Q
2.75(,i)-.44 G 2.75(tc)-2.75 G(alls an error handler)-2.75 E 2.75(,w)
-.44 G(hich your program can pro)-2.75 E 2.75(vide. If)-.165 F(you do)
2.75 E(not pro)72 373.6 Q(vide an error handler)-.165 E 2.75(,t)-.44 G
(he error is printed, and your program terminates.)-2.75 E F0 2.75
(1.3. Standard)72 399.6 R(Header Files)2.75 E F1(The follo)72 416.5 Q
(wing include \214les are part of the Xlib standard:)-.275 E 23.65<833c>
72 433.4 S F0(X11/Xlib)-23.65 E(.h)-.44 E F1(>)A
(This is the main header \214le for Xlib)99.5 450.3 Q 5.5(.T)-.44 G
(he majority of all Xlib symbols are declared by)-5.5 E
(including this \214le.)99.5 463.3 Q
(This \214le also contains the preprocessor symbol)5.5 E F0
(XlibSpeci\214cationRe-)3.666 E(lease)99.5 476.3 Q F1 5.5(.T).916 G
(his symbol is de\214ned to ha)-5.5 E .33 -.165(ve t)-.22 H
(he 6 in this release of the standard.).165 E(\(Release 5 of)5.5 E
(Xlib w)99.5 489.3 Q(as the \214rst release to ha)-.11 E .33 -.165(ve t)
-.22 H(his symbol.\)).165 E 23.65<833c>72 506.2 S F0(X11/X.h)-23.65 E F1
(>)A(This \214le declares types and constants for the X protocol that a\
re to be used by applications.)99.5 523.1 Q
(It is included automatically from <)99.5 536.1 Q F0(X11/Xlib)A(.h)-.44
E F1(>, so application code should ne)A -.165(ve)-.275 G 2.75(rn).165 G
(eed to)-2.75 E(reference this \214le directly)99.5 549.1 Q(.)-.715 E
23.65<833c>72 566 S F0(X11/Xcms.h)-23.65 E F1(>)A
(This \214le contains symbols for much of the color management f)99.5
582.9 Q(acilities described in chapter)-.11 E 2.75(6. All)99.5 595.9 R
(functions, types, and symbols with the pre\214x `)2.75 E(`Xcms')-.814 E
(', plus the Color Con)-.814 E -.165(ve)-.44 G(rsion).165 E(Conte)99.5
608.9 Q(xts macros, are declared in this \214le.)-.165 E(<)5.5 E F0
(X11/Xlib)A(.h)-.44 E F1 2.75(>m)C(ust be included before including)
-2.75 E(this \214le.)99.5 621.9 Q 23.65<833c>72 638.8 S F0(X11/Xutil.h)
-23.65 E F1(>)A(This \214le declares v)99.5 655.7 Q
(arious functions, types, and symbols used for inter)-.275 E
(-client communication)-.22 E(and application utility functions, which \
are described in chapters 14 and 16.)99.5 668.7 Q(<)5.5 E F0(X11/Xlib)A
(.h)-.44 E F1(>)A(must be included before including this \214le.)99.5
681.7 Q 23.65<833c>72 698.6 S F0(X11/Xr)-23.65 E(esour)-.198 E(ce.h)
-.198 E F1(>)A(This \214le declares all functions, types, and symbols f\
or the resource manager f)99.5 715.5 Q(acilities,)-.11 E
(which are described in chapter 15.)99.5 728.5 Q(<)5.5 E F0(X11/Xlib)A
(.h)-.44 E F1 2.75(>m)C(ust be included before including this)-2.75 E F0
(3)285.25 769 Q 0 Cg EP
%%Page: 4 9
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E/F1 11/Times-Roman@0 SF(\214le.)99.5 85
Q 23.65<833c>72 101.9 S F0(X11/Xatom.h)-23.65 E F1(>)A(This \214le decl\
ares all prede\214ned atoms, which are symbols with the pre\214x `)99.5
118.8 Q(`XA_')-.814 E('.)-.814 E 23.65<833c>72 135.7 S F0(X11/cursorf)
-23.65 E(ont.h)-.275 E F1(>)A(This \214le declares the cursor symbols f\
or the standard cursor font, which are listed in appen-)99.5 152.6 Q
(dix B.)99.5 165.6 Q(All cursor symbols ha)5.5 E .33 -.165(ve t)-.22 H
(he pre\214x `).165 E(`XC_')-.814 E('.)-.814 E 23.65<833c>72 182.5 S F0
(X11/k)-23.65 E(eysymdef)-.11 E(.h)-.165 E F1(>)A
(This \214le declares all standard K)99.5 199.4 Q -.165(ey)-.275 G
(Sym v).165 E(alues, which are symbols with the pre\214x `)-.275 E
(`XK_')-.814 E('.)-.814 E(The K)99.5 212.4 Q -.165(ey)-.275 G(Syms are \
arranged in groups, and a preprocessor symbol controls inclusion of eac\
h).165 E 2.75(group. The)99.5 225.4 R(preprocessor symbol must be de\
\214ned prior to inclusion of the \214le to obtain the)2.75 E
(associated v)99.5 238.4 Q 2.75(alues. The)-.275 F
(preprocessor symbols are XK_MISCELLANY)2.75 E 2.75(,X)-1.419 G
(K_XKB_KEYS,)-2.75 E(XK_3270, XK_LA)99.5 251.4 Q(TIN1, XK_LA)-1.221 E
(TIN2, XK_LA)-1.221 E(TIN3, XK_LA)-1.221 E(TIN4, XK_KA)-1.221 E -1.023
(TA)-1.221 G(KAN)1.023 E(A,)-.385 E
(XK_ARABIC, XK_CYRILLIC, XK_GREEK, XK_TECHNICAL, XK_SPECIAL,)99.5 264.4
Q(XK_PUBLISHING, XK_APL, XK_HEBREW)99.5 277.4 Q 2.75(,X)-1.012 G
(K_THAI, and XK_K)-2.75 E(OREAN.)-.33 E 23.65<833c>72 294.3 S F0(X11/k)
-23.65 E(eysym.h)-.11 E F1(>)A
(This \214le de\214nes the preprocessor symbols XK_MISCELLANY)99.5 311.2
Q 2.75(,X)-1.419 G(K_XKB_KEYS,)-2.75 E(XK_LA)99.5 324.2 Q(TIN1, XK_LA)
-1.221 E(TIN2, XK_LA)-1.221 E(TIN3, XK_LA)-1.221 E
(TIN4, and XK_GREEK and then)-1.221 E(includes <)99.5 337.2 Q F0(X11/k)A
(eysymdef)-.11 E(.h)-.165 E F1(>.)A 23.65<833c>72 354.1 S F0
(X11/Xlibint.h)-23.65 E F1(>)A
(This \214le declares all the functions, types, and symbols used for e)
99.5 371 Q(xtensions, which are)-.165 E(described in appendix C.)99.5
384 Q(This \214le automatically includes <)5.5 E F0(X11/Xlib)A(.h)-.44 E
F1(>.)A 23.65<833c>72 400.9 S F0(X11/Xpr)-23.65 E(oto.h)-.198 E F1(>)A(\
This \214le declares types and symbols for the basic X protocol, for us\
e in implementing)99.5 417.8 Q -.165(ex)99.5 430.8 S 2.75(tensions. It)
.165 F(is included automatically from <)2.75 E F0(X11/Xlibint.h)A F1
(>, so application and e)A(xten-)-.165 E(sion code should ne)99.5 443.8
Q -.165(ve)-.275 G 2.75(rn).165 G(eed to reference this \214le directly)
-2.75 E(.)-.715 E 23.65<833c>72 460.7 S F0(X11/Xpr)-23.65 E(otostr)-.198
E(.h)-1.1 E F1(>)A(This \214le declares types and symbols for the basic\
 X protocol, for use in implementing)99.5 477.6 Q -.165(ex)99.5 490.6 S
2.75(tensions. It).165 F(is included automatically from <)2.75 E F0
(X11/Xpr)A(oto.h)-.198 E F1(>, so application and e)A(xten-)-.165 E
(sion code should ne)99.5 503.6 Q -.165(ve)-.275 G 2.75(rn).165 G
(eed to reference this \214le directly)-2.75 E(.)-.715 E 23.65<833c>72
520.5 S F0(X11/X10.h)-23.65 E F1(>)A(This \214le declares all the funct\
ions, types, and symbols used for the X10 compatibility func-)99.5 537.4
Q(tions, which are described in appendix D.)99.5 550.4 Q F0 2.75
(1.4. Generic)72 576.4 R -1.012(Va)2.75 G(lues and T)1.012 E(ypes)-.814
E F1(The follo)72 593.3 Q
(wing symbols are de\214ned by Xlib and used throughout the manual:)
-.275 E 23.65<8358>72 610.2 S(lib de\214nes the type)-23.65 E F0(Bool)
3.666 E F1(and the Boolean v)3.666 E(alues)-.275 E F0 -.814(Tr)3.666 G
(ue).814 E F1(and)3.666 E F0 -.275(Fa)3.666 G(lse).275 E F1(.).916 E<83>
72 627.1 Q F0(None)24.566 E F1(is the uni)3.666 E -.165(ve)-.275 G
(rsal null resource ID or atom.).165 E 23.65<8354>72 644 S(he type)
-23.65 E F0(XID)3.666 E F1(is used for generic resource IDs.)3.666 E
23.65<8354>72 660.9 S(he type)-23.65 E F0(XP)3.666 E(ointer)-.22 E F1
(is de\214ned to be char)3.666 E 2.75(*a).916 G
(nd is used as a generic opaque pointer to data.)-2.75 E F0 2.75
(1.5. Naming)72 686.9 R(and Ar)2.75 E(gument Con)-.11 E -.11(ve)-.44 G
(ntions within Xlib).11 E F1(Xlib follo)72 703.8 Q(ws a number of con)
-.275 E -.165(ve)-.44 G
(ntions for the naming and syntax of the functions.).165 E(Gi)5.5 E
-.165(ve)-.275 G 2.75(nt).165 G(hat you)-2.75 E
(remember what information the function requires, these con)72 716.8 Q
-.165(ve)-.44 G(ntions are intended to mak).165 E 2.75(et)-.11 G(he)
-2.75 E(syntax of the functions more predictable.)72 729.8 Q F0(4)285.25
769 Q 0 Cg EP
%%Page: 5 10
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E/F1 11/Times-Roman@0 SF
(The major naming con)72 85 Q -.165(ve)-.44 G(ntions are:).165 E 23.65
<8354>72 101.9 S 2.75(od)-24.53 G(if)-2.75 E
(ferentiate the X symbols from the other symbols, the library uses mix)
-.275 E(ed case for)-.165 E -.165(ex)99.5 114.9 S(ternal symbols.).165 E
(It lea)5.5 E -.165(ve)-.22 G 2.75(sl).165 G -.275(ow)-2.75 G
(ercase for v).275 E(ariables and all uppercase for user macros, as)
-.275 E(per e)99.5 127.9 Q(xisting con)-.165 E -.165(ve)-.44 G(ntion.)
.165 E 23.65<8341>72 144.8 S(ll Xlib functions be)-23.65 E
(gin with a capital X.)-.165 E 23.65<8354>72 161.7 S(he be)-23.65 E
(ginnings of all function names and symbols are capitalized.)-.165 E
23.65<8341>72 178.6 S(ll user)-23.65 E(-visible data structures be)-.22
E(gin with a capital X.)-.165 E(More generally)5.5 E 2.75(,a)-.715 G
-.165(ny)-2.75 G(thing that a user).165 E(might dereference be)99.5
191.6 Q(gins with a capital X.)-.165 E 23.65<834d>72 208.5 S
(acros and other symbols do not be)-23.65 E(gin with a capital X.)-.165
E 1.76 -.88(To d)5.5 H(istinguish them from all user).88 E
(symbols, each w)99.5 221.5 Q(ord in the macro is capitalized.)-.11 E
23.65<8341>72 238.4 S(ll elements)-23.65 E(of or v)5.5 E
(ariables in a data structure are in lo)-.275 E 2.75(wercase. Compound)
-.275 F -.11(wo)2.75 G(rds, where).11 E
(needed, are constructed with underscores \()99.5 251.4 Q .916(_\)).916
G(.)-.916 E 23.65<8354>72 268.3 S(he display ar)-23.65 E
(gument, where used, is al)-.198 E -.11(wa)-.11 G(ys \214rst in the ar)
.11 E(gument list.)-.198 E 23.65<8341>72 285.2 S
(ll resource objects, where used, occur at the be)-23.65 E
(ginning of the ar)-.165 E(gument list immediately)-.198 E
(after the display ar)99.5 298.2 Q(gument.)-.198 E 23.65<8357>72 315.1 S
(hen a)-23.65 E(graphics conte)5.5 E
(xt is present together with another type of resource \(most com-)-.165
E(monly)99.5 328.1 Q 2.75(,ad)-.715 G(ra)-2.75 E -.11(wa)-.165 G
(ble\), the graphics conte).11 E(xt occurs in the ar)-.165 E
(gument list after the other)-.198 E 2.75(resource. Dra)99.5 341.1 R
-.11(wa)-.165 G(bles outrank all other resources.).11 E 23.65<8353>72
358 S(ource ar)-23.65 E(guments al)-.198 E -.11(wa)-.11 G
(ys precede the destination ar).11 E(guments in the ar)-.198 E
(gument list.)-.198 E 23.65<8354>72 374.9 S(he x ar)-23.65 E(gument al)
-.198 E -.11(wa)-.11 G(ys precedes the y ar).11 E(gument in the ar)-.198
E(gument list.)-.198 E 23.65<8354>72 391.8 S(he width ar)-23.65 E
(gument al)-.198 E -.11(wa)-.11 G(ys precedes the height ar).11 E
(gument in the ar)-.198 E(gument list.)-.198 E 23.65<8357>72 408.7 S
(here the x, y)-23.65 E 2.75(,w)-.715 G(idth, and height ar)-2.75 E
(guments are used together)-.198 E 2.75(,t)-.44 G(he x and y ar)-2.75 E
(guments)-.198 E(al)99.5 421.7 Q -.11(wa)-.11 G
(ys precede the width and height ar).11 E(guments.)-.198 E 23.65<8357>72
438.6 S(here a mask is accompanied with a structure, the mask al)-23.65
E -.11(wa)-.11 G(ys precedes the pointer to the).11 E
(structure in the ar)99.5 451.6 Q(gument list.)-.198 E F0 2.75(1.6. Pr)
72 477.6 R(ogramming Considerations)-.198 E F1
(The major programming considerations are:)72 494.5 Q 23.65<8343>72
511.4 S(oordinates and sizes in X are actually 16-bit quantities.)-23.65
E(This decision w)5.5 E(as made to mini-)-.11 E
(mize the bandwidth required for a gi)99.5 524.4 Q -.165(ve)-.275 G 2.75
(nl).165 G -2.365 -.275(ev e)-2.75 H 2.75(lo).275 G 2.75(fp)-2.75 G 2.75
(erformance. Coordinates)-2.75 F(usually are)2.75 E(declared as an)99.5
537.4 Q F0(int)3.666 E F1(in the interf)3.666 E 2.75(ace. V)-.11 F
(alues lar)-1.221 E(ger than 16 bits are truncated silently)-.198 E 5.5
(.S)-.715 G(izes)-5.5 E
(\(width and height\) are declared as unsigned quantities.)99.5 550.4 Q
23.65<834b>72 567.3 S -.165(ey)-23.925 G(boards are the greatest v).165
E(ariable between dif)-.275 E(ferent manuf)-.275 E(acturers' w)-.11 E
2.75(orkstations. If)-.11 F(you)2.75 E -.11(wa)99.5 580.3 S
(nt your program to be portable, you should be particularly conserv).11
E(ati)-.275 E .33 -.165(ve h)-.275 H(ere.).165 E 23.65<834d>72 597.2 S
(an)-23.65 E 2.75(yd)-.165 G(isplay systems ha)-2.75 E .33 -.165(ve l)
-.22 H(imited amounts of of).165 E(f-screen memory)-.275 E 5.5(.I)-.715
G 2.75(fy)-5.5 G(ou can, you should)-2.75 E
(minimize use of pixmaps and backing store.)99.5 610.2 Q 23.65<8354>72
627.1 S(he user should ha)-23.65 E .33 -.165(ve c)-.22 H
(ontrol of his screen real estate.).165 E
(Therefore, you should write your)5.5 E(applications to react to windo)
99.5 640.1 Q 2.75(wm)-.275 G
(anagement rather than presume control of the entire)-2.75 E 2.75
(screen. What)99.5 653.1 R(you do inside of your top-le)2.75 E -.165(ve)
-.275 G 2.75(lw).165 G(indo)-2.75 E 1.43 -.715(w, h)-.275 H -.275(ow)
.715 G -2.365 -.275(ev e).275 H .88 -.44(r, i).275 H 2.75(su).44 G 2.75
(pt)-2.75 G 2.75(oy)-2.75 G(our application.)-2.75 E -.165(Fo)99.5 666.1
S 2.75(rf).165 G(urther information, see chapter 14 and the)-2.75 E/F2
11/Times-Italic@0 SF(Inter)2.75 E(-Client Communication Con)-.22 E
(ventions)-.44 E(Manual)99.5 679.1 Q F1(.)A F0(5)285.25 769 Q 0 Cg EP
%%Page: 6 11
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E 2.75(1.7. Character)72 85 R
(Sets and Encodings)2.75 E/F1 11/Times-Roman@0 SF
(Some of the Xlib functions mak)72 101.9 Q 2.75(er)-.11 G
(eference to speci\214c character sets and character encodings.)-2.75 E
(The follo)72 114.9 Q(wing are the most common:)-.275 E 23.65<8358>72
131.8 S(Portable Character Set)-20.9 E 2.75(Ab)99.5 148.7 S
(asic set of 97 characters, which are assumed to e)-2.75 E
(xist in all locales supported by Xlib)-.165 E(.)-.44 E
(This set contains the follo)99.5 161.7 Q(wing characters:)-.275 E(a..z\
 A..Z 0..9 !"#$%&'\(\)*+,-./:;<=>?@[\\]^_`{|}~ <space>, <tab>, and <ne)
72 198.1 Q(wline>)-.275 E(This set is the left/lo)99.5 234.5 Q(wer half\
 of the graphic character set of ISO8859-1 plus space, tab, and)-.275 E
(ne)99.5 247.5 Q 2.75(wline. It)-.275 F(is also the set of graphic char\
acters in 7-bit ASCII plus the same three control)2.75 E 2.75
(characters. The)99.5 260.5 R
(actual encoding of these characters on the host is system dependent.)
2.75 E 23.65<8348>72 277.4 S(ost Portable Character Encoding)-23.65 E
(The encoding of the X Portable Character Set on the host.)99.5 294.3 Q
(The encoding itself is not)5.5 E(de\214ned by this standard, b)99.5
307.3 Q
(ut the encoding must be the same in all locales supported by Xlib)-.22
E(on the host.)99.5 320.3 Q(If a string is said to be in the Host Porta\
ble Character Encoding, then it only)5.5 E(contains characters from the\
 X Portable Character Set, in the host encoding.)99.5 333.3 Q 23.65
<834c>72 350.2 S(atin-1)-23.65 E
(The coded character set de\214ned by the ISO 8859-1 standard.)99.5
367.1 Q 23.65<834c>72 384 S(atin Portable Character Encoding)-23.65 E(T\
he encoding of the X Portable Character Set using the Latin-1 codepoint\
s plus ASCII con-)99.5 400.9 Q(trol characters.)99.5 413.9 Q(If a strin\
g is said to be in the Latin Portable Character Encoding, then it)5.5 E
(only contains characters from the X Portable Character Set, not all of\
 Latin-1.)99.5 426.9 Q 23.65<8353>72 443.8 S(TRING Encoding)-23.65 E
(Latin-1, plus tab and ne)99.5 460.7 Q(wline.)-.275 E 23.65<8355>72
477.6 S(TF-8 Encoding)-23.65 E(The ASCII compatible character encoding \
scheme de\214ned by the ISO 10646-1 standard.)99.5 494.5 Q 23.65<8350>72
511.4 S(OSIX Portable Filename Character Set)-23.65 E(The set of 65 cha\
racters, which can be used in naming \214les on a POSIX-compliant host,)
99.5 528.3 Q(that are correctly processed in all locales.)99.5 541.3 Q
(The set is:)5.5 E(a..z A..Z 0..9 ._-)99.5 564.7 Q F0 2.75(1.8. F)72
597.2 R(ormatting Con)-.275 E -.11(ve)-.44 G(ntions).11 E/F2 11
/Times-Italic@0 SF(Xlib \255 C Langua)72 614.1 Q .22 -.11(ge X I)-.11 H
(nterface).11 E F1(uses the follo)2.75 E(wing con)-.275 E -.165(ve)-.44
G(ntions:).165 E 23.65<8347>72 631 S(lobal symbols are printed in)-23.65
E F0 1.832(this special f)3.666 F(ont)-.275 E F1 5.5(.T).916 G
(hese can be either function names, sym-)-5.5 E
(bols de\214ned in include \214les, or structure names.)99.5 644 Q
(When declared and de\214ned, function ar)5.5 E(gu-)-.198 E
(ments are printed in)99.5 657 Q F2(italics)2.75 E F1 5.5(.I)C 2.75(nt)
-5.5 G(he e)-2.75 E(xplanatory te)-.165 E(xt that follo)-.165 E(ws, the)
-.275 E 2.75(yu)-.165 G(sually are printed in)-2.75 E(re)99.5 670 Q
(gular type.)-.165 E 23.65<8345>72 686.9 S(ach function is introduced b\
y a general discussion that distinguishes it from other func-)-23.65 E
2.75(tions. The)99.5 699.9 R(function declaration itself follo)2.75 E
(ws, and each ar)-.275 E(gument is speci\214cally e)-.198 E(xplained.)
-.165 E(Although ANSI C function prototype syntax is not used, Xlib hea\
der \214les normally declare)99.5 712.9 Q
(functions using function prototypes in ANSI C en)99.5 725.9 Q 2.75
(vironments. General)-.44 F(discussion of the)2.75 E F0(6)285.25 769 Q 0
Cg EP
%%Page: 7 12
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E/F1 11/Times-Roman@0 SF
(function, if an)99.5 85 Q 2.75(yi)-.165 G 2.75(sr)-2.75 G
(equired, follo)-2.75 E(ws the ar)-.275 E 2.75(guments. Where)-.198 F
(applicable, the last paragraph of)2.75 E(the e)99.5 98 Q(xplanation li\
sts the possible Xlib error codes that the function can generate.)-.165
E -.165(Fo)5.5 G 2.75(ra).165 G
(complete discussion of the Xlib error codes, see section 11.8.2.)99.5
111 Q 23.65<8354>72 127.9 S 2.75(oe)-24.53 G(liminate an)-2.75 E 2.75
(ya)-.165 G(mbiguity between those ar)-2.75 E
(guments that you pass and those that a func-)-.198 E
(tion returns to you, the e)99.5 140.9 Q(xplanations for all ar)-.165 E
(guments that you pass start with the w)-.198 E(ord)-.11 E/F2 11
/Times-Italic@0 SF(speci\214es)99.5 153.9 Q F1(or)2.75 E 2.75(,i)-.44 G
2.75(nt)-2.75 G(he case of multiple ar)-2.75 E(guments, the w)-.198 E
(ord)-.11 E F2(specify)2.75 E F1 5.5(.T).916 G(he e)-5.5 E
(xplanations for all)-.165 E(ar)99.5 166.9 Q
(guments that are returned to you start with the w)-.198 E(ord)-.11 E F2
-.407(re)2.75 G(turns).407 E F1(or)2.75 E 2.75(,i)-.44 G 2.75(nt)-2.75 G
(he case of multiple)-2.75 E(ar)99.5 179.9 Q(guments, the w)-.198 E(ord)
-.11 E F2 -.407(re)2.75 G(turn).407 E F1 5.5(.T).916 G(he e)-5.5 E
(xplanations for all ar)-.165 E(guments that you can pass and are)-.198
E(returned start with the w)99.5 192.9 Q(ords)-.11 E F2
(speci\214es and r)2.75 E(eturns)-.407 E F1(.).916 E 23.65<8341>72 209.8
S .33 -.165(ny p)-23.65 H
(ointer to a structure that is used to return a v).165 E
(alue is designated as such by the)-.275 E F2(_r)2.75 E(eturn)-.407 E F1
(suf)99.5 222.8 Q(\214x as part of its name.)-.275 E
(All other pointers passed to these functions are used for reading)5.5 E
(only)99.5 235.8 Q 5.5(.A)-.715 G(fe)-2.75 E 2.75(wa)-.275 G -.198(rg)
-2.75 G(uments use pointers to structures that are used for both input \
and output).198 E(and are indicated by using the)99.5 248.8 Q F2
(_in_out)2.75 E F1(suf)2.75 E(\214x.)-.275 E F0(7)285.25 769 Q 0 Cg EP
%%Page: 8 13
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E/F1 12/Times-Bold@0 SF(Chapter 2)275.92
111 Q(Display Functions)255.574 137 Q/F2 11/Times-Roman@0 SF
(Before your program can use a display)72 179.9 Q 2.75(,y)-.715 G
(ou must establish a connection to the X serv)-2.75 E(er)-.165 E 5.5(.O)
-.605 G(nce)-5.5 E(you ha)72 192.9 Q .33 -.165(ve e)-.22 H(stablished a\
 connection, you then can use the Xlib macros and functions discussed i\
n).165 E(this chapter to return information about the display)72 205.9 Q
5.5(.T)-.715 G(his chapter discusses ho)-5.5 E 2.75(wt)-.275 G(o:)-2.75
E 23.65<834f>72 222.8 S(pen \(connect to\) the display)-23.65 E 23.65
<834f>72 239.7 S(btain information about the display)-23.65 E 2.75(,i)
-.715 G(mage formats, or screens)-2.75 E 23.65<8347>72 256.6 S
(enerate a)-23.65 E F0(NoOperation)3.666 E F2(protocol request)3.666 E
23.65<8346>72 273.5 S(ree client-created data)-23.65 E 23.65<8343>72
290.4 S(lose \(disconnect from\) a display)-23.65 E 23.65<8355>72 307.3
S(se X Serv)-23.65 E(er connection close operations)-.165 E 23.65<8355>
72 324.2 S(se Xlib with threads)-23.65 E 23.65<8355>72 341.1 S
(se internal connections)-23.65 E F0 2.75(2.1. Opening)72 367.1 R
(the Display)2.75 E F2 1.76 -.88(To o)72 384 T
(pen a connection to the X serv).88 E(er that controls a display)-.165 E
2.75(,u)-.715 G(se)-2.75 E F0(XOpenDisplay)3.666 E F2(.).916 E .44 LW 36
405.65 36 416.65 DL 36 403.65 36 414.65 DL 41.5 401.9 36 401.9 DL 43.5
401.9 38 401.9 DL 49 401.9 43.5 401.9 DL(Display *XOpenDisplay)72 417.8
Q(\().916 E/F3 11/Times-Italic@0 SF(display_name).916 E F2(\)).916 E
(char *)88.5 430.8 Q F3(display_name)A F2(;).916 E F3(display_name)72
451.6 Q F2(Speci\214es the hardw)10.895 E
(are display name, which determines the display and commu-)-.11 E
(nications domain to be used.)144 464.6 Q
(On a POSIX-conformant system, if the dis-)5.5 E
(play_name is NULL, it def)144 477.6 Q(aults to the v)-.11 E
(alue of the DISPLA)-.275 E 2.75(Ye)-1.155 G -.44(nv)-2.75 G(ironment v)
.44 E(ari-)-.275 E(able.)144 490.6 Q 36 486.25 36 497.25 DL 36 484.25 36
495.25 DL 41.5 495.5 36 495.5 DL 43.5 495.5 38 495.5 DL 49 495.5 43.5
495.5 DL(The encoding and interpretation of the display name are implem\
entation-dependent.)72 520.5 Q(Strings in)5.5 E(the Host Portable Chara\
cter Encoding are supported; support for other characters is implementa\
-)72 533.5 Q 2.75(tion-dependent. On)72 546.5 R
(POSIX-conformant systems, the display name or DISPLA)2.75 E 2.75(Ye)
-1.155 G -.44(nv)-2.75 G(ironment).44 E -.275(va)72 559.5 S
(riable can be a string in the format:).275 E F0(8)285.25 769 Q 0 Cg EP
%%Page: 9 14
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E .44 LW 36 76.75 36 87.75 DL 36 74.75
36 85.75 DL 41.5 73 36 73 DL 43.5 73 38 73 DL 49 73 43.5 73 DL/F1 11
/Times-Italic@0 SF(pr)144 91.5 Q(otocol)-.495 E/F2 11/Times-Roman@0 SF
(/).916 E F1(hostname).916 E F2(:).916 E F1(number).916 E F2(.).916 E F1
(scr).916 E(een_number)-.407 E(pr)72 114.9 Q(otocol)-.495 E F2
(Speci\214es a protocol f)35.216 E(amily or an alias for a protocol f)
-.11 E(amily)-.11 E 5.5(.S)-.715 G(upported protocol)-5.5 E -.11(fa)144
127.9 S(milies are implementation dependent.).11 E
(The protocol entry is optional.)5.5 E(If proto-)5.5 E(col is not speci\
\214ed, the / separating protocol and hostname must also not be spec-)
144 140.9 Q(i\214ed.)144 153.9 Q F1(hostname)72 170.8 Q F2
(Speci\214es the name of the host machine on which the display is ph)
29.837 E(ysically)-.055 E 2.75(attached. Y)144 183.8 R(ou follo)-1.21 E
2.75(wt)-.275 G
(he hostname with either a single colon \(:\) or a double)-2.75 E
(colon \(::\).)144 196.8 Q F1(number)72 213.7 Q F2
(Speci\214es the number of the display serv)38.395 E
(er on that host machine.)-.165 E -1.21(Yo)5.5 G 2.75(um)1.21 G(ay)-2.75
E(optionally follo)144 226.7 Q 2.75(wt)-.275 G
(his display number with a period \(.\).)-2.75 E 2.75(As)5.5 G
(ingle CPU can ha)-2.75 E -.165(ve)-.22 G(more than one display)144
239.7 Q 5.5(.M)-.715 G
(ultiple displays are usually numbered starting with)-5.5 E(zero.)144
252.7 Q F1(scr)72 269.6 Q(een_number)-.407 E F2
(Speci\214es the screen to be used on that serv)144 282.6 Q(er)-.165 E
5.5(.M)-.605 G(ultiple screens can be controlled)-5.5 E
(by a single X serv)144 295.6 Q(er)-.165 E 5.5(.T)-.605 G
(he screen_number sets an internal v)-5.5 E(ariable that can be)-.275 E
(accessed by using the)144 308.6 Q F0(DefaultScr)3.666 E(een)-.198 E F2
(macro or the)3.666 E F0(XDefaultScr)3.666 E(een)-.198 E F2(function if)
3.666 E(you are using languages other than C \(see section 2.2.1\).)144
321.6 Q 36 317.25 36 328.25 DL 36 315.25 36 326.25 DL 41.5 326.5 36
326.5 DL 43.5 326.5 38 326.5 DL 49 326.5 43.5 326.5 DL -.165(Fo)72 351.5
S 2.75(re).165 G(xample, the follo)-2.915 E(wing w)-.275 E
(ould specify screen 1 of display 0 on the machine named `)-.11 E
(`dual-)-.814 E(headed')72 364.5 Q(':)-.814 E(dual-headed:0.1)108 387.9
Q(The)72 411.3 Q F0(XOpenDisplay)3.666 E F2(function returns a)3.666 E
F0(Display)3.666 E F2(structure that serv)3.666 E
(es as the connection to the X)-.165 E(serv)72 424.3 Q
(er and that contains all the information about that X serv)-.165 E(er)
-.165 E(.)-.605 E F0(XOpenDisplay)6.416 E F2(connects your)3.666 E
(application to the X serv)72 437.3 Q
(er through TCP or DECnet communications protocols, or through some)
-.165 E(local inter)72 450.3 Q(-process communication protocol.)-.22 E
(If the protocol is speci\214ed as "tcp", "inet", or)5.5 E("inet6", or \
if no protocol is speci\214ed and the hostname is a host machine name a\
nd a single colon)72 463.3 Q
(\(:\) separates the hostname and display number)72 476.3 Q(,)-.44 E F0
(XOpenDisplay)3.666 E F2(connects using TCP streams.)3.666 E(\(If)5.5 E
(the protocol is speci\214ed as "inet", TCP o)72 489.3 Q -.165(ve)-.165
G 2.75(rI).165 G(Pv4 is used.)-2.75 E
(If the protocol is speci\214ed as "inet6",)5.5 E(TCP o)72 502.3 Q -.165
(ve)-.165 G 2.75(rI).165 G(Pv6 is used.)-2.75 E
(Otherwise, the implementation determines which IP v)5.5 E
(ersion is used.\))-.165 E(If)5.5 E
(the hostname and protocol are both not speci\214ed, Xlib uses whate)72
515.3 Q -.165(ve)-.275 G 2.75(ri).165 G 2.75(tb)-2.75 G(elie)-2.75 E
-.165(ve)-.275 G 2.75(si).165 G 2.75(st)-2.75 G(he f)-2.75 E(astest)-.11
E 2.75(transport. If)72 528.3 R(the hostname is a host machine name and\
 a double colon \(::\) separates the hostname)2.75 E(and display number)
72 541.3 Q(,)-.44 E F0(XOpenDisplay)3.666 E F2(connects using DECnet.)
3.666 E 2.75(As)5.5 G(ingle X serv)-2.75 E(er can support an)-.165 E(y)
-.165 E(or all of these transport mechanisms simultaneously)72 554.3 Q
5.5(.A)-.715 G(particular Xlib implementation can sup-)-2.75 E(port man)
72 567.3 Q 2.75(ym)-.165 G(ore of these transport mechanisms.)-2.75 E
(If successful,)72 584.2 Q F0(XOpenDisplay)3.666 E F2
(returns a pointer to a)3.666 E F0(Display)3.666 E F2
(structure, which is de\214ned in)3.666 E(<)72 597.2 Q F0(X11/Xlib)A(.h)
-.44 E F2 2.75(>. If)B F0(XOpenDisplay)3.666 E F2
(does not succeed, it returns NULL.)3.666 E(After a successful call to)
5.5 E F0(XOpenDisplay)72.916 610.2 Q F2 2.75(,a).916 G
(ll of the screens in the display can be used by the client.)-2.75 E
(The screen number)5.5 E(speci\214ed in the display_name ar)72 623.2 Q
(gument is returned by the)-.198 E F0(DefaultScr)3.666 E(een)-.198 E F2
(macro \(or the)3.666 E F0(XDe-)3.666 E(faultScr)72 636.2 Q(een)-.198 E
F2 2.75(function\). Y)3.666 F(ou can access elements of the)-1.21 E F0
(Display)3.666 E F2(and)3.666 E F0(Scr)3.666 E(een)-.198 E F2
(structures only by)3.666 E(using the information macros or functions.)
72 649.2 Q -.165(Fo)5.5 G 2.75(ri).165 G
(nformation about using macros and functions to)-2.75 E
(obtain information from the)72 662.2 Q F0(Display)3.666 E F2
(structure, see section 2.2.1.)3.666 E 2.75(Xs)72 679.1 S(erv)-2.75 E
(ers may implement v)-.165 E
(arious types of access control mechanisms \(see section 9.8\).)-.275 E
F0(9)285.25 769 Q 0 Cg EP
%%Page: 10 15
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E 2.75(2.2. Obtaining)72 85 R(Inf)2.75 E
(ormation about the Display)-.275 E 2.75(,I)-.605 G(mage F)-2.75 E
(ormats, or Scr)-.275 E(eens)-.198 E/F1 11/Times-Roman@0 SF
(The Xlib library pro)72 101.9 Q(vides a number of useful macros and co\
rresponding functions that return data)-.165 E(from the)72 114.9 Q F0
(Display)3.666 E F1 2.75(structure. The)3.666 F
(macros are used for C programming, and their corresponding)2.75 E
(function equi)72 127.9 Q -.275(va)-.275 G
(lents are for other language bindings.).275 E
(This section discusses the:)5.5 E 23.65<8344>72 144.8 S(isplay macros)
-23.65 E 23.65<8349>72 161.7 S(mage format functions and macros)-23.65 E
23.65<8353>72 178.6 S(creen information macros)-23.65 E
(All other members of the)72 195.5 Q F0(Display)3.666 E F1
(structure \(that is, those for which no macros are de\214ned\) are)
3.666 E(pri)72 208.5 Q -.275(va)-.275 G
(te to Xlib and must not be used.).275 E(Applications must ne)5.5 E
-.165(ve)-.275 G 2.75(rd).165 G(irectly modify or inspect these)-2.75 E
(pri)72 221.5 Q -.275(va)-.275 G(te members of the).275 E F0(Display)
3.666 E F1(structure.)3.666 E(Note)277.308 244.5 Q(The)99.5 262.5 Q F0
(XDisplayW)3.666 E(idth)-.198 E F1(,).916 E F0(XDisplayHeight)3.666 E F1
(,).916 E F0(XDisplayCells)3.666 E F1(,).916 E F0(XDisplayPlanes)3.666 E
F1(,).916 E F0(XDis-)3.666 E(playW)99.5 275.5 Q(idthMM)-.198 E F1 2.75
(,a).916 G(nd)-2.75 E F0(XDisplayHeightMM)3.666 E F1
(functions in the ne)3.666 E(xt sections are mis-)-.165 E 2.75
(named. These)99.5 288.5 R(functions really should be named Screen)2.75
E/F2 11/Times-Italic@0 SF(whate)A(ver)-.165 E F1(and XScreen)2.75 E F2
(what-)A -.165(ev)99.5 301.5 S(er).165 E F1 2.75(,n)C(ot Display)-2.75 E
F2(whate)A(ver)-.165 E F1(or XDisplay)2.75 E F2(whate)A(ver)-.165 E F1
5.5(.O)C(ur apologies for the resulting)-5.5 E(confusion.)99.5 314.5 Q
F0 2.75(2.2.1. Display)72 350.5 R(Macr)2.75 E(os)-.198 E F1
(Applications should not directly modify an)72 367.4 Q 2.75(yp)-.165 G
(art of the)-2.75 E F0(Display)3.666 E F1(and)3.666 E F0(Scr)3.666 E
(een)-.198 E F1 2.75(structures. The)3.666 F
(members should be considered read-only)72 380.4 Q 2.75(,a)-.715 G
(lthough the)-2.75 E 2.75(ym)-.165 G
(ay change as the result of other opera-)-2.75 E(tions on the display)72
393.4 Q(.)-.715 E(The follo)72 410.3 Q
(wing lists the C language macros, their corresponding function equi)
-.275 E -.275(va)-.275 G(lents that are for).275 E
(other language bindings, and what data both can return.)72 423.3 Q .44
LW 36 457.95 36 468.95 DL 36 455.95 36 466.95 DL 41.5 454.2 36 454.2 DL
43.5 454.2 38 454.2 DL 49 454.2 43.5 454.2 DL(AllPlanes)72 470.1 Q
(unsigned long XAllPlanes\()72 496.1 Q(\)).916 E 36 495.65 36 506.65 DL
36 493.65 36 504.65 DL 41.5 504.9 36 504.9 DL 43.5 504.9 38 504.9 DL 49
504.9 43.5 504.9 DL(Both return a v)72 529.9 Q
(alue with all bits set to 1 suitable for use in a plane ar)-.275 E
(gument to a procedure.)-.198 E(Both)72 559.8 Q F0(BlackPixel)3.666 E F1
(and)3.666 E F0(WhitePixel)3.666 E F1
(can be used in implementing a monochrome application.)3.666 E
(These pix)72 572.8 Q(el v)-.165 E
(alues are for permanently allocated entries in the def)-.275 E
(ault colormap.)-.11 E(The actual RGB)5.5 E(\(red, green, and blue\) v)
72 585.8 Q(alues are settable on some screens and, in an)-.275 E 2.75
(yc)-.165 G(ase, may not actually be)-2.75 E(black or white.)72 598.8 Q
(The names are intended to con)5.5 E .33 -.165(vey t)-.44 H(he e).165 E
(xpected relati)-.165 E .33 -.165(ve i)-.275 H(ntensity of the colors.)
.165 E F0(10)282.5 769 Q 0 Cg EP
%%Page: 11 16
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E .44 LW 36 76.75 36 87.75 DL 36 74.75
36 85.75 DL 41.5 73 36 73 DL 43.5 73 38 73 DL 49 73 43.5 73 DL/F1 11
/Times-Roman@0 SF(BlackPix)72 88.9 Q -1.834(el \()-.165 F/F2 11
/Times-Italic@0 SF(display).916 E F1(,).916 E F2(scr)3.666 E(een_number)
-.407 E F1(\)).916 E(unsigned long XBlackPix)72 114.9 Q -1.834(el \()
-.165 F F2(display).916 E F1(,).916 E F2(scr)3.666 E(een_number)-.407 E
F1(\)).916 E(Display *)88.5 127.9 Q F2(display)A F1(;).916 E(int)88.5
140.9 Q F2(scr)2.75 E(een_number)-.407 E F1(;).916 E F2(display)72 161.7
Q F1(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)
-.605 E F2(scr)72 178.6 Q(een_number)-.407 E F1
(Speci\214es the appropriate screen number on the host serv)144 191.6 Q
(er)-.165 E(.)-.605 E 36 187.25 36 198.25 DL 36 185.25 36 196.25 DL 41.5
196.5 36 196.5 DL 43.5 196.5 38 196.5 DL 49 196.5 43.5 196.5 DL
(Both return the black pix)72 221.5 Q(el v)-.165 E
(alue for the speci\214ed screen.)-.275 E 36 256.15 36 267.15 DL 36
254.15 36 265.15 DL 41.5 252.4 36 252.4 DL 43.5 252.4 38 252.4 DL 49
252.4 43.5 252.4 DL(WhitePix)72 268.3 Q -1.834(el \()-.165 F F2(display)
.916 E F1(,).916 E F2(scr)3.666 E(een_number)-.407 E F1(\)).916 E
(unsigned long XWhitePix)72 294.3 Q -1.834(el \()-.165 F F2(display).916
E F1(,).916 E F2(scr)3.666 E(een_number)-.407 E F1(\)).916 E(Display *)
88.5 307.3 Q F2(display)A F1(;).916 E(int)88.5 320.3 Q F2(scr)2.75 E
(een_number)-.407 E F1(;).916 E F2(display)72 341.1 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2(scr)72 358 Q(een_number)-.407 E F1
(Speci\214es the appropriate screen number on the host serv)144 371 Q
(er)-.165 E(.)-.605 E 36 366.65 36 377.65 DL 36 364.65 36 375.65 DL 41.5
375.9 36 375.9 DL 43.5 375.9 38 375.9 DL 49 375.9 43.5 375.9 DL
(Both return the white pix)72 400.9 Q(el v)-.165 E
(alue for the speci\214ed screen.)-.275 E 36 435.55 36 446.55 DL 36
433.55 36 444.55 DL 41.5 431.8 36 431.8 DL 43.5 431.8 38 431.8 DL 49
431.8 43.5 431.8 DL -1.834(ConnectionNumber \()72 447.7 R F2(display)
.916 E F1(\)).916 E(int XConnectionNumber)72 473.7 Q(\().916 E F2
(display).916 E F1(\)).916 E(Display *)88.5 486.7 Q F2(display)A F1(;)
.916 E F2(display)72 507.5 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
36 503.15 36 514.15 DL 36 501.15 36 512.15 DL 41.5 512.4 36 512.4 DL
43.5 512.4 38 512.4 DL 49 512.4 43.5 512.4 DL
(Both return a connection number for the speci\214ed display)72 537.4 Q
5.5(.O)-.715 G 2.75(naP)-5.5 G(OSIX-conformant system, this)-2.75 E
(is the \214le descriptor of the connection.)72 550.4 Q 36 585.05 36
596.05 DL 36 583.05 36 594.05 DL 41.5 581.3 36 581.3 DL 43.5 581.3 38
581.3 DL 49 581.3 43.5 581.3 DL(Def)72 597.2 Q -1.834(aultColormap \()
-.11 F F2(display).916 E F1(,).916 E F2(scr)3.666 E(een_number)-.407 E
F1(\)).916 E(Colormap XDef)72 623.2 Q -1.834(aultColormap \()-.11 F F2
(display).916 E F1(,).916 E F2(scr)3.666 E(een_number)-.407 E F1(\)).916
E(Display *)88.5 636.2 Q F2(display)A F1(;).916 E(int)88.5 649.2 Q F2
(scr)2.75 E(een_number)-.407 E F1(;).916 E F2(display)72 670 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2(scr)72 686.9 Q(een_number)-.407 E F1
(Speci\214es the appropriate screen number on the host serv)144 699.9 Q
(er)-.165 E(.)-.605 E 36 695.55 36 706.55 DL 36 693.55 36 704.55 DL 41.5
704.8 36 704.8 DL 43.5 704.8 38 704.8 DL 49 704.8 43.5 704.8 DL
(Both return the def)72 729.8 Q
(ault colormap ID for allocation on the speci\214ed screen.)-.11 E
(Most routine)5.5 E F0(11)282.5 769 Q 0 Cg EP
%%Page: 12 17
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E/F1 11/Times-Roman@0 SF
(allocations of color should be made out of this colormap.)72 85 Q .44
LW 36 119.65 36 130.65 DL 36 117.65 36 128.65 DL 41.5 115.9 36 115.9 DL
43.5 115.9 38 115.9 DL 49 115.9 43.5 115.9 DL(Def)72 131.8 Q -1.834
(aultDepth \()-.11 F/F2 11/Times-Italic@0 SF(display).916 E F1(,).916 E
F2(scr)3.666 E(een_number)-.407 E F1(\)).916 E(int XDef)72 157.8 Q
-1.834(aultDepth \()-.11 F F2(display).916 E F1(,).916 E F2(scr)3.666 E
(een_number)-.407 E F1(\)).916 E(Display *)88.5 170.8 Q F2(display)A F1
(;).916 E(int)88.5 183.8 Q F2(scr)2.75 E(een_number)-.407 E F1(;).916 E
F2(display)72 204.6 Q F1(Speci\214es the connection to the X serv)40.221
E(er)-.165 E(.)-.605 E F2(scr)72 221.5 Q(een_number)-.407 E F1
(Speci\214es the appropriate screen number on the host serv)144 234.5 Q
(er)-.165 E(.)-.605 E 36 230.15 36 241.15 DL 36 228.15 36 239.15 DL 41.5
239.4 36 239.4 DL 43.5 239.4 38 239.4 DL 49 239.4 43.5 239.4 DL
(Both return the depth \(number of planes\) of the def)72 264.4 Q
(ault root windo)-.11 E 2.75(wf)-.275 G(or the speci\214ed screen.)-2.75
E(Other depths may also be supported on this screen \(see)72 277.4 Q F0
(XMatchV)3.666 E(isualInf)-.407 E(o)-.275 E F1(\).).916 E 1.76 -.88
(To d)72 307.3 T(etermine the number of depths that are a).88 E -.275
(va)-.22 G(ilable on a gi).275 E -.165(ve)-.275 G 2.75(ns).165 G
(creen, use)-2.75 E F0(XListDepths)3.666 E F1(.).916 E 36 325.05 36
336.05 DL 36 323.05 36 334.05 DL 41.5 321.3 36 321.3 DL 43.5 321.3 38
321.3 DL 49 321.3 43.5 321.3 DL(int *XListDepths)72 337.2 Q(\().916 E F2
(display).916 E F1(,)A F2(scr)2.75 E(een_number)-.407 E F1(,)A F2
(count_r)2.75 E(eturn)-.407 E F1(\)).916 E(Display *)88.5 350.2 Q F2
(display)A F1(;)A(int)88.5 363.2 Q F2(scr)2.75 E(een_number)-.407 E F1
(;)A(int *)88.5 376.2 Q F2(count_r)A(eturn)-.407 E F1(;)A F2(display)72
397 Q F1(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)
-.605 E F2(scr)72 413.9 Q(een_number)-.407 E F1
(Speci\214es the appropriate screen number on the host serv)144 426.9 Q
(er)-.165 E(.)-.605 E F2(count_r)72 443.8 Q(eturn)-.407 E F1
(Returns the number of depths.)14.965 E 36 439.45 36 450.45 DL 36 437.45
36 448.45 DL 41.5 448.7 36 448.7 DL 43.5 448.7 38 448.7 DL 49 448.7 43.5
448.7 DL(The)72 473.7 Q F0(XListDepths)3.666 E F1
(function returns the array of depths that are a)3.666 E -.275(va)-.22 G
(ilable on the speci\214ed screen.).275 E
(If the speci\214ed screen_number is v)72 486.7 Q(alid and suf)-.275 E
(\214cient memory for the array can be allocated,)-.275 E F0
(XListDepths)72.916 499.7 Q F1(sets count_return to the number of a)
3.666 E -.275(va)-.22 G(ilable depths.).275 E
(Otherwise, it does not set)5.5 E(count_return and returns NULL.)72
512.7 Q 1.76 -.88(To r)5.5 H
(elease the memory allocated for the array of depths, use).88 E F0(XFr)
72.916 525.7 Q(ee)-.198 E F1(.).916 E 36 560.35 36 571.35 DL 36 558.35
36 569.35 DL 41.5 556.6 36 556.6 DL 43.5 556.6 38 556.6 DL 49 556.6 43.5
556.6 DL(Def)72 572.5 Q -1.834(aultGC \()-.11 F F2(display).916 E F1(,)
.916 E F2(scr)3.666 E(een_number)-.407 E F1(\)).916 E(GC XDef)72 598.5 Q
-1.834(aultGC \()-.11 F F2(display).916 E F1(,).916 E F2(scr)3.666 E
(een_number)-.407 E F1(\)).916 E(Display *)88.5 611.5 Q F2(display)A F1
(;).916 E(int)88.5 624.5 Q F2(scr)2.75 E(een_number)-.407 E F1(;).916 E
F2(display)72 645.3 Q F1(Speci\214es the connection to the X serv)40.221
E(er)-.165 E(.)-.605 E F2(scr)72 662.2 Q(een_number)-.407 E F1
(Speci\214es the appropriate screen number on the host serv)144 675.2 Q
(er)-.165 E(.)-.605 E 36 670.85 36 681.85 DL 36 668.85 36 679.85 DL 41.5
680.1 36 680.1 DL 43.5 680.1 38 680.1 DL 49 680.1 43.5 680.1 DL
(Both return the def)72 705.1 Q(ault graphics conte)-.11 E
(xt for the root windo)-.165 E 2.75(wo)-.275 G 2.75(ft)-2.75 G
(he speci\214ed screen.)-2.75 E(This GC is)5.5 E(created for the con)72
718.1 Q -.165(ve)-.44 G
(nience of simple applications and contains the def).165 E
(ault GC components with)-.11 E(the fore)72 731.1 Q
(ground and background pix)-.165 E(el v)-.165 E
(alues initialized to the black and white pix)-.275 E(els for the)-.165
E F0(12)282.5 769 Q 0 Cg EP
%%Page: 13 18
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E/F1 11/Times-Roman@0 SF
(screen, respecti)72 85 Q -.165(ve)-.275 G(ly).165 E 5.5(.Y)-.715 G
(ou can modify its contents freely because it is not used in an)-6.71 E
2.75(yX)-.165 G(lib func-)-2.75 E 2.75(tion. This)72 98 R(GC should ne)
2.75 E -.165(ve)-.275 G 2.75(rb).165 G 2.75(ef)-2.75 G(reed.)-2.75 E .44
LW 36 132.65 36 143.65 DL 36 130.65 36 141.65 DL 41.5 128.9 36 128.9 DL
43.5 128.9 38 128.9 DL 49 128.9 43.5 128.9 DL(Def)72 144.8 Q(aultRootW)
-.11 E(indo)-.44 E .916(w\()-.275 G/F2 11/Times-Italic@0 SF(display)A F1
(\)).916 E -.44(Wi)72 170.8 S(ndo).44 E 2.75(wX)-.275 G(Def)-2.75 E
(aultRootW)-.11 E(indo)-.44 E .916(w\()-.275 G F2(display)A F1(\)).916 E
(Display *)88.5 183.8 Q F2(display)A F1(;).916 E F2(display)72 204.6 Q
F1(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605
E 36 200.25 36 211.25 DL 36 198.25 36 209.25 DL 41.5 209.5 36 209.5 DL
43.5 209.5 38 209.5 DL 49 209.5 43.5 209.5 DL
(Both return the root windo)72 234.5 Q 2.75(wf)-.275 G(or the def)-2.75
E(ault screen.)-.11 E 36 269.15 36 280.15 DL 36 267.15 36 278.15 DL 41.5
265.4 36 265.4 DL 43.5 265.4 38 265.4 DL 49 265.4 43.5 265.4 DL(Def)72
281.3 Q -1.834(aultScreenOfDisplay \()-.11 F F2(display).916 E F1(\))
.916 E(Screen *XDef)72 307.3 Q -1.834(aultScreenOfDisplay \()-.11 F F2
(display).916 E F1(\)).916 E(Display *)88.5 320.3 Q F2(display)A F1(;)
.916 E F2(display)72 341.1 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
36 336.75 36 347.75 DL 36 334.75 36 345.75 DL 41.5 346 36 346 DL 43.5
346 38 346 DL 49 346 43.5 346 DL(Both return a pointer to the def)72 371
Q(ault screen.)-.11 E 36 405.65 36 416.65 DL 36 403.65 36 414.65 DL 41.5
401.9 36 401.9 DL 43.5 401.9 38 401.9 DL 49 401.9 43.5 401.9 DL -1.834
(ScreenOfDisplay \()72 417.8 R F2(display).916 E F1(,)A F2(scr)2.75 E
(een_number)-.407 E F1(\)).916 E(Screen *XScreenOfDisplay)72 443.8 Q(\()
.916 E F2(display).916 E F1(,)A F2(scr)2.75 E(een_number)-.407 E F1(\))
.916 E(Display *)88.5 456.8 Q F2(display)A F1(;).916 E(int)88.5 469.8 Q
F2(scr)2.75 E(een_number)-.407 E F1(;).916 E F2(display)72 490.6 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2(scr)72 507.5 Q(een_number)-.407 E F1
(Speci\214es the appropriate screen number on the host serv)144 520.5 Q
(er)-.165 E(.)-.605 E 36 516.15 36 527.15 DL 36 514.15 36 525.15 DL 41.5
525.4 36 525.4 DL 43.5 525.4 38 525.4 DL 49 525.4 43.5 525.4 DL
(Both return a pointer to the indicated screen.)72 550.4 Q 36 585.05 36
596.05 DL 36 583.05 36 594.05 DL 41.5 581.3 36 581.3 DL 43.5 581.3 38
581.3 DL 49 581.3 43.5 581.3 DL(Def)72 597.2 Q -1.834(aultScreen \()-.11
F F2(display).916 E F1(\)).916 E(int XDef)72 623.2 Q -1.834
(aultScreen \()-.11 F F2(display).916 E F1(\)).916 E(Display *)88.5
636.2 Q F2(display)A F1(;).916 E F2(display)72 657 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
36 652.65 36 663.65 DL 36 650.65 36 661.65 DL 41.5 661.9 36 661.9 DL
43.5 661.9 38 661.9 DL 49 661.9 43.5 661.9 DL(Both return the def)72
686.9 Q(ault screen number referenced by the)-.11 E F0(XOpenDisplay)
3.666 E F1 2.75(function. This)3.666 F(macro or)2.75 E
(function should be used to retrie)72 699.9 Q .33 -.165(ve t)-.275 H
(he screen number in applications that will use only a single).165 E
(screen.)72 712.9 Q F0(13)282.5 769 Q 0 Cg EP
%%Page: 14 19
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E .44 LW 36 76.75 36 87.75 DL 36 74.75
36 85.75 DL 41.5 73 36 73 DL 43.5 73 38 73 DL 49 73 43.5 73 DL/F1 11
/Times-Roman@0 SF(Def)72 88.9 Q(aultV)-.11 E -1.834(isual \()-.66 F/F2
11/Times-Italic@0 SF(display).916 E F1(,).916 E F2(scr)3.666 E
(een_number)-.407 E F1(\)).916 E -.66(Vi)72 114.9 S(sual *XDef).66 E
(aultV)-.11 E -1.834(isual \()-.66 F F2(display).916 E F1(,).916 E F2
(scr)3.666 E(een_number)-.407 E F1(\)).916 E(Display *)88.5 127.9 Q F2
(display)A F1(;).916 E(int)88.5 140.9 Q F2(scr)2.75 E(een_number)-.407 E
F1(;).916 E F2(display)72 161.7 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2(scr)72 178.6 Q(een_number)-.407 E F1
(Speci\214es the appropriate screen number on the host serv)144 191.6 Q
(er)-.165 E(.)-.605 E 36 187.25 36 198.25 DL 36 185.25 36 196.25 DL 41.5
196.5 36 196.5 DL 43.5 196.5 38 196.5 DL 49 196.5 43.5 196.5 DL
(Both return the def)72 221.5 Q
(ault visual type for the speci\214ed screen.)-.11 E -.165(Fo)5.5 G 2.75
(rf).165 G(urther information about visual)-2.75 E
(types, see section 3.1.)72 234.5 Q 36 269.15 36 280.15 DL 36 267.15 36
278.15 DL 41.5 265.4 36 265.4 DL 43.5 265.4 38 265.4 DL 49 265.4 43.5
265.4 DL -1.834(DisplayCells \()72 281.3 R F2(display).916 E F1(,).916 E
F2(scr)3.666 E(een_number)-.407 E F1(\)).916 E(int XDisplayCells)72
307.3 Q(\().916 E F2(display).916 E F1(,).916 E F2(scr)3.666 E
(een_number)-.407 E F1(\)).916 E(Display *)88.5 320.3 Q F2(display)A F1
(;).916 E(int)88.5 333.3 Q F2(scr)2.75 E(een_number)-.407 E F1(;).916 E
F2(display)72 354.1 Q F1(Speci\214es the connection to the X serv)40.221
E(er)-.165 E(.)-.605 E F2(scr)72 371 Q(een_number)-.407 E F1
(Speci\214es the appropriate screen number on the host serv)144 384 Q
(er)-.165 E(.)-.605 E 36 379.65 36 390.65 DL 36 377.65 36 388.65 DL 41.5
388.9 36 388.9 DL 43.5 388.9 38 388.9 DL 49 388.9 43.5 388.9 DL
(Both return the number of entries in the def)72 413.9 Q(ault colormap.)
-.11 E 36 448.55 36 459.55 DL 36 446.55 36 457.55 DL 41.5 444.8 36 444.8
DL 43.5 444.8 38 444.8 DL 49 444.8 43.5 444.8 DL -1.834
(DisplayPlanes \()72 460.7 R F2(display).916 E F1(,).916 E F2(scr)3.666
E(een_number)-.407 E F1(\)).916 E(int XDisplayPlanes)72 486.7 Q(\().916
E F2(display).916 E F1(,).916 E F2(scr)3.666 E(een_number)-.407 E F1(\))
.916 E(Display *)88.5 499.7 Q F2(display)A F1(;).916 E(int)88.5 512.7 Q
F2(scr)2.75 E(een_number)-.407 E F1(;).916 E F2(display)72 533.5 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2(scr)72 550.4 Q(een_number)-.407 E F1
(Speci\214es the appropriate screen number on the host serv)144 563.4 Q
(er)-.165 E(.)-.605 E 36 559.05 36 570.05 DL 36 557.05 36 568.05 DL 41.5
568.3 36 568.3 DL 43.5 568.3 38 568.3 DL 49 568.3 43.5 568.3 DL
(Both return the depth of the root windo)72 593.3 Q 2.75(wo)-.275 G 2.75
(ft)-2.75 G(he speci\214ed screen.)-2.75 E -.165(Fo)5.5 G 2.75(ra).165 G
2.75(ne)-2.75 G(xplanation of depth, see)-2.915 E(the glossary)72 606.3
Q(.)-.715 E F0(14)282.5 769 Q 0 Cg EP
%%Page: 15 20
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E .44 LW 36 76.75 36 87.75 DL 36 74.75
36 85.75 DL 41.5 73 36 73 DL 43.5 73 38 73 DL 49 73 43.5 73 DL/F1 11
/Times-Roman@0 SF -1.834(DisplayString \()72 88.9 R/F2 11/Times-Italic@0
SF(display).916 E F1(\)).916 E(char *XDisplayString)72 114.9 Q(\().916 E
F2(display).916 E F1(\)).916 E(Display *)88.5 127.9 Q F2(display)A F1(;)
.916 E F2(display)72 148.7 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
36 144.35 36 155.35 DL 36 142.35 36 153.35 DL 41.5 153.6 36 153.6 DL
43.5 153.6 38 153.6 DL 49 153.6 43.5 153.6 DL
(Both return the string that w)72 178.6 Q(as passed to)-.11 E F0
(XOpenDisplay)3.666 E F1(when the current display w)3.666 E(as opened.)
-.11 E(On POSIX-conformant systems, if the passed string w)72 191.6 Q
(as NULL, these return the v)-.11 E(alue of the DIS-)-.275 E(PLA)72
204.6 Q 2.75(Ye)-1.155 G -.44(nv)-2.75 G(ironment v).44 E
(ariable when the current display w)-.275 E(as opened.)-.11 E
(These are useful to applica-)5.5 E(tions that in)72 217.6 Q -.22(vo)
-.44 G .22 -.11(ke t).22 H(he).11 E F0 -.275(fo)3.666 G(rk).275 E F1
(system call and w)3.666 E(ant to open a ne)-.11 E 2.75(wc)-.275 G
(onnection to the same display)-2.75 E
(from the child process as well as for printing error messages.)72 230.6
Q 36 265.25 36 276.25 DL 36 263.25 36 274.25 DL 41.5 261.5 36 261.5 DL
43.5 261.5 38 261.5 DL 49 261.5 43.5 261.5 DL
(long XExtendedMaxRequestSize\()72 277.4 Q F2(display).916 E F1(\)).916
E(Display *)108 290.4 Q F2(display)A F1(;).916 E F2(display)72 311.2 Q
F1(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605
E 36 306.85 36 317.85 DL 36 304.85 36 315.85 DL 41.5 316.1 36 316.1 DL
43.5 316.1 38 316.1 DL 49 316.1 43.5 316.1 DL(The)72 341.1 Q F0
(XExtendedMaxRequestSize)3.666 E F1
(function returns zero if the speci\214ed display does not support)3.666
E(an e)72 354.1 Q(xtended-length protocol encoding; otherwise, it retur\
ns the maximum request size \(in 4-byte)-.165 E
(units\) supported by the serv)72 367.1 Q(er using the e)-.165 E
(xtended-length encoding.)-.165 E(The Xlib functions)5.5 E F0(XDraw-)
3.666 E(Lines)72 380.1 Q F1(,).916 E F0(XDrawAr)3.666 E(cs)-.198 E F1(,)
.916 E F0(XFillP)3.666 E(olygon)-.22 E F1(,).916 E F0(XChangePr)3.666 E
(operty)-.198 E F1(,).916 E F0(XSetClipRectangles)3.666 E F1 2.75(,a)
.916 G(nd)-2.75 E F0(XSetRe-)3.666 E(gion)72 393.1 Q F1(will use the e)
3.666 E(xtended-length encoding as necessary)-.165 E 2.75(,i)-.715 G
2.75(fs)-2.75 G(upported by the serv)-2.75 E(er)-.165 E 5.5(.U)-.605 G
(se of the)-5.5 E -.165(ex)72 406.1 S
(tended-length encoding in other Xlib functions \(for e).165 E(xample,)
-.165 E F0(XDrawP)3.666 E(oints)-.22 E F1(,).916 E F0(XDrawRectan-)3.666
E(gles)72 419.1 Q F1(,).916 E F0(XDrawSegments)3.666 E F1(,).916 E F0
(XFillAr)3.666 E(cs)-.198 E F1(,).916 E F0(XFillRectangles)3.666 E F1(,)
.916 E F0(XPutImage)3.666 E F1 2.75(\)i).916 G 2.75(sp)-2.75 G
(ermitted b)-2.75 E(ut not)-.22 E(required; an Xlib implementation may \
choose to split the data across multiple smaller requests)72 432.1 Q
(instead.)72 445.1 Q 36 479.75 36 490.75 DL 36 477.75 36 488.75 DL 41.5
476 36 476 DL 43.5 476 38 476 DL 49 476 43.5 476 DL
(long XMaxRequestSize\()72 491.9 Q F2(display).916 E F1(\)).916 E
(Display *)108 504.9 Q F2(display)A F1(;).916 E F2(display)72 525.7 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
36 521.35 36 532.35 DL 36 519.35 36 530.35 DL 41.5 530.6 36 530.6 DL
43.5 530.6 38 530.6 DL 49 530.6 43.5 530.6 DL(The)72 555.6 Q F0
(XMaxRequestSize)3.666 E F1(function returns the maximum request size \
\(in 4-byte units\) supported by)3.666 E(the serv)72 568.6 Q
(er without using an e)-.165 E(xtended-length protocol encoding.)-.165 E
(Single protocol requests to the)5.5 E(serv)72 581.6 Q(er can be no lar)
-.165 E(ger than this size unless an e)-.198 E
(xtended-length protocol encoding is supported by)-.165 E(the serv)72
594.6 Q(er)-.165 E 5.5(.T)-.605 G(he protocol guarantees the size to be\
 no smaller than 4096 units \(16384 bytes\).)-5.5 E(Xlib)5.5 E(automati\
cally breaks data up into multiple protocol requests as necessary for t\
he follo)72 607.6 Q(wing func-)-.275 E(tions:)72 620.6 Q F0(XDrawP)3.666
E(oints)-.22 E F1(,).916 E F0(XDrawRectangles)3.666 E F1(,).916 E F0
(XDrawSegments)3.666 E F1(,).916 E F0(XFillAr)3.666 E(cs)-.198 E F1(,)
.916 E F0(XFillRectangles)3.666 E F1 2.75(,a).916 G(nd)-2.75 E F0
(XPutImage)72.916 633.6 Q F1(.).916 E F0(15)282.5 769 Q 0 Cg EP
%%Page: 16 21
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E .44 LW 36 76.75 36 87.75 DL 36 74.75
36 85.75 DL 41.5 73 36 73 DL 43.5 73 38 73 DL 49 73 43.5 73 DL/F1 11
/Times-Roman@0 SF(LastKno)72 88.9 Q -1.834(wnRequestProcessed \()-.275 F
/F2 11/Times-Italic@0 SF(display).916 E F1(\)).916 E
(unsigned long XLastKno)72 114.9 Q -1.834(wnRequestProcessed \()-.275 F
F2(display).916 E F1(\)).916 E(Display *)85.75 127.9 Q F2(display)A F1
(;).916 E F2(display)72 148.7 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
36 144.35 36 155.35 DL 36 142.35 36 153.35 DL 41.5 153.6 36 153.6 DL
43.5 153.6 38 153.6 DL 49 153.6 43.5 153.6 DL(Both e)72 178.6 Q
(xtract the full serial number of the last request kno)-.165 E
(wn by Xlib to ha)-.275 E .33 -.165(ve b)-.22 H(een processed by).165 E
(the X serv)72 191.6 Q(er)-.165 E 5.5(.X)-.605 G
(lib automatically sets this number when replies, e)-5.5 E -.165(ve)
-.275 G(nts, and errors are recei).165 E -.165(ve)-.275 G(d.).165 E 36
226.25 36 237.25 DL 36 224.25 36 235.25 DL 41.5 222.5 36 222.5 DL 43.5
222.5 38 222.5 DL 49 222.5 43.5 222.5 DL(Ne)72 238.4 Q -1.834
(xtRequest \()-.165 F F2(display).916 E F1(\)).916 E(unsigned long XNe)
72 264.4 Q -1.834(xtRequest \()-.165 F F2(display).916 E F1(\)).916 E
(Display *)85.75 277.4 Q F2(display)A F1(;).916 E F2(display)72 298.2 Q
F1(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605
E 36 293.85 36 304.85 DL 36 291.85 36 302.85 DL 41.5 303.1 36 303.1 DL
43.5 303.1 38 303.1 DL 49 303.1 43.5 303.1 DL(Both e)72 328.1 Q
(xtract the full serial number that is to be used for the ne)-.165 E
(xt request.)-.165 E(Serial numbers are)5.5 E
(maintained separately for each display connection.)72 341.1 Q 36 375.75
36 386.75 DL 36 373.75 36 384.75 DL 41.5 372 36 372 DL 43.5 372 38 372
DL 49 372 43.5 372 DL(ProtocolV)72 387.9 Q -1.834(ersion \()-1.221 F F2
(display).916 E F1(\)).916 E(int XProtocolV)72 413.9 Q -1.834(ersion \()
-1.221 F F2(display).916 E F1(\)).916 E(Display *)88.5 426.9 Q F2
(display)A F1(;).916 E F2(display)72 447.7 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
36 443.35 36 454.35 DL 36 441.35 36 452.35 DL 41.5 452.6 36 452.6 DL
43.5 452.6 38 452.6 DL 49 452.6 43.5 452.6 DL(Both return the major v)72
477.6 Q(ersion number \(11\) of the X protocol associated with the conn\
ected dis-)-.165 E(play)72 490.6 Q(.)-.715 E 36 525.25 36 536.25 DL 36
523.25 36 534.25 DL 41.5 521.5 36 521.5 DL 43.5 521.5 38 521.5 DL 49
521.5 43.5 521.5 DL(ProtocolRe)72 537.4 Q -1.834(vision \()-.275 F F2
(display).916 E F1(\)).916 E(int XProtocolRe)72 563.4 Q -1.834
(vision \()-.275 F F2(display).916 E F1(\)).916 E(Display *)88.5 576.4 Q
F2(display)A F1(;).916 E F2(display)72 597.2 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
36 592.85 36 603.85 DL 36 590.85 36 601.85 DL 41.5 602.1 36 602.1 DL
43.5 602.1 38 602.1 DL 49 602.1 43.5 602.1 DL
(Both return the minor protocol re)72 627.1 Q
(vision number of the X serv)-.275 E(er)-.165 E(.)-.605 E F0(16)282.5
769 Q 0 Cg EP
%%Page: 17 22
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E .44 LW 36 76.75 36 87.75 DL 36 74.75
36 85.75 DL 41.5 73 36 73 DL 43.5 73 38 73 DL 49 73 43.5 73 DL/F1 11
/Times-Roman@0 SF -1.834(QLength \()72 88.9 R/F2 11/Times-Italic@0 SF
(display).916 E F1(\)).916 E(int XQLength)72 114.9 Q(\().916 E F2
(display).916 E F1(\)).916 E(Display *)88.5 127.9 Q F2(display)A F1(;)
.916 E F2(display)72 148.7 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
36 144.35 36 155.35 DL 36 142.35 36 153.35 DL 41.5 153.6 36 153.6 DL
43.5 153.6 38 153.6 DL 49 153.6 43.5 153.6 DL
(Both return the length of the e)72 178.6 Q -.165(ve)-.275 G
(nt queue for the connected display).165 E 5.5(.N)-.715 G
(ote that there may be more)-5.5 E -2.365 -.275(ev e)72 191.6 T
(nts that ha).275 E .33 -.165(ve n)-.22 H
(ot been read into the queue yet \(see).165 E F0(XEv)3.666 E(entsQueued)
-.11 E F1(\).).916 E 36 226.25 36 237.25 DL 36 224.25 36 235.25 DL 41.5
222.5 36 222.5 DL 43.5 222.5 38 222.5 DL 49 222.5 43.5 222.5 DL(RootW)72
238.4 Q(indo)-.44 E .916(w\()-.275 G F2(display)A F1(,).916 E F2(scr)
3.666 E(een_number)-.407 E F1(\)).916 E -.44(Wi)72 264.4 S(ndo).44 E
2.75(wX)-.275 G(RootW)-2.75 E(indo)-.44 E .916(w\()-.275 G F2(display)A
F1(,).916 E F2(scr)3.666 E(een_number)-.407 E F1(\)).916 E(Display *)
88.5 277.4 Q F2(display)A F1(;).916 E(int)88.5 290.4 Q F2(scr)2.75 E
(een_number)-.407 E F1(;).916 E F2(display)72 311.2 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2(scr)72 328.1 Q(een_number)-.407 E F1
(Speci\214es the appropriate screen number on the host serv)144 341.1 Q
(er)-.165 E(.)-.605 E 36 336.75 36 347.75 DL 36 334.75 36 345.75 DL 41.5
346 36 346 DL 43.5 346 38 346 DL 49 346 43.5 346 DL
(Both return the root windo)72 371 Q 4.18 -.715(w. T)-.275 H
(hese are useful with functions that need a dra).715 E -.11(wa)-.165 G
(ble of a particular).11 E(screen and for creating top-le)72 384 Q -.165
(ve)-.275 G 2.75(lw).165 G(indo)-2.75 E(ws.)-.275 E 36 418.65 36 429.65
DL 36 416.65 36 427.65 DL 41.5 414.9 36 414.9 DL 43.5 414.9 38 414.9 DL
49 414.9 43.5 414.9 DL -1.834(ScreenCount \()72 430.8 R F2(display).916
E F1(\)).916 E(int XScreenCount)72 456.8 Q(\().916 E F2(display).916 E
F1(\)).916 E(Display *)88.5 469.8 Q F2(display)A F1(;).916 E F2(display)
72 490.6 Q F1(Speci\214es the connection to the X serv)40.221 E(er)-.165
E(.)-.605 E 36 486.25 36 497.25 DL 36 484.25 36 495.25 DL 41.5 495.5 36
495.5 DL 43.5 495.5 38 495.5 DL 49 495.5 43.5 495.5 DL
(Both return the number of a)72 520.5 Q -.275(va)-.22 G(ilable screens.)
.275 E 36 555.15 36 566.15 DL 36 553.15 36 564.15 DL 41.5 551.4 36 551.4
DL 43.5 551.4 38 551.4 DL 49 551.4 43.5 551.4 DL(Serv)72 567.3 Q(erV)
-.165 E -1.834(endor \()-1.221 F F2(display).916 E F1(\)).916 E
(char *XServ)72 593.3 Q(erV)-.165 E -1.834(endor \()-1.221 F F2(display)
.916 E F1(\)).916 E(Display *)88.5 606.3 Q F2(display)A F1(;).916 E F2
(display)72 627.1 Q F1(Speci\214es the connection to the X serv)40.221 E
(er)-.165 E(.)-.605 E 36 622.75 36 633.75 DL 36 620.75 36 631.75 DL 41.5
632 36 632 DL 43.5 632 38 632 DL 49 632 43.5 632 DL
(Both return a pointer to a null-terminated string that pro)72 657 Q
(vides some identi\214cation of the o)-.165 E(wner of)-.275 E
(the X serv)72 670 Q(er implementation.)-.165 E
(If the data returned by the serv)5.5 E
(er is in the Latin Portable Character)-.165 E
(Encoding, then the string is in the Host Portable Character Encoding.)
72 683 Q(Otherwise, the contents of)5.5 E
(the string are implementation-dependent.)72 696 Q F0(17)282.5 769 Q 0
Cg EP
%%Page: 18 23
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E .44 LW 36 76.75 36 87.75 DL 36 74.75
36 85.75 DL 41.5 73 36 73 DL 43.5 73 38 73 DL 49 73 43.5 73 DL/F1 11
/Times-Roman@0 SF -1.221(Ve)72 88.9 S -1.834(ndorRelease \()1.221 F/F2
11/Times-Italic@0 SF(display).916 E F1(\)).916 E(int XV)72 114.9 Q
-1.834(endorRelease \()-1.221 F F2(display).916 E F1(\)).916 E
(Display *)88.5 127.9 Q F2(display)A F1(;).916 E F2(display)72 148.7 Q
F1(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605
E 36 144.35 36 155.35 DL 36 142.35 36 153.35 DL 41.5 153.6 36 153.6 DL
43.5 153.6 38 153.6 DL 49 153.6 43.5 153.6 DL
(Both return a number related to a v)72 178.6 Q(endor')-.165 E 2.75(sr)
-.605 G(elease of the X serv)-2.75 E(er)-.165 E(.)-.605 E F0 2.75
(2.2.2. Image)72 204.6 R -.275(Fo)2.75 G(rmat Functions and Macr).275 E
(os)-.198 E F1(Applications are required to present data to the X serv)
72 221.5 Q(er in a format that the serv)-.165 E(er demands.)-.165 E -.88
(To)5.5 G(help simplify applications, most of the w)72 234.5 Q
(ork required to con)-.11 E -.165(ve)-.44 G(rt the data is pro).165 E
(vided by Xlib \(see)-.165 E(sections 8.7 and 16.8\).)72 247.5 Q(The)72
264.4 Q F0(XPixmapF)3.666 E(ormatV)-.275 E(alues)-1.012 E F1
(structure pro)3.666 E(vides an interf)-.165 E
(ace to the pixmap format information)-.11 E
(that is returned at the time of a connection setup.)72 277.4 Q
(It contains:)5.5 E 36 299.05 36 310.05 DL 36 297.05 36 308.05 DL 41.5
295.3 36 295.3 DL 43.5 295.3 38 295.3 DL 49 295.3 43.5 295.3 DL
(typedef struct {)72 313.8 Q(int depth;)108 326.8 Q(int bits_per_pix)108
339.8 Q(el;)-.165 E(int scanline_pad;)108 352.8 Q 2.75(}X)72 365.8 S
(PixmapF)-2.75 E(ormatV)-.165 E(alues;)-1.221 E 36 367.95 36 378.95 DL
36 365.95 36 376.95 DL 41.5 377.2 36 377.2 DL 43.5 377.2 38 377.2 DL 49
377.2 43.5 377.2 DL 1.76 -.88(To o)72 415.2 T
(btain the pixmap format information for a gi).88 E -.165(ve)-.275 G
2.75(nd).165 G(isplay)-2.75 E 2.75(,u)-.715 G(se)-2.75 E F0
(XListPixmapF)3.666 E(ormats)-.275 E F1(.).916 E 36 432.95 36 443.95 DL
36 430.95 36 441.95 DL 41.5 429.2 36 429.2 DL 43.5 429.2 38 429.2 DL 49
429.2 43.5 429.2 DL(XPixmapF)72 445.1 Q(ormatV)-.165 E
(alues *XListPixmapF)-1.221 E -1.834(ormats \()-.165 F F2(display).916 E
F1(,)A F2(count_r)2.75 E(eturn)-.407 E F1(\)).916 E(Display *)88.5 458.1
Q F2(display)A F1(;).916 E(int *)88.5 471.1 Q F2(count_r)A(eturn)-.407 E
F1(;).916 E F2(display)72 491.9 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2(count_r)72 508.8 Q(eturn)-.407 E F1
(Returns the number of pixmap formats that are supported by the display)
14.965 E(.)-.715 E 36 504.45 36 515.45 DL 36 502.45 36 513.45 DL 41.5
513.7 36 513.7 DL 43.5 513.7 38 513.7 DL 49 513.7 43.5 513.7 DL(The)72
538.7 Q F0(XListPixmapF)3.666 E(ormats)-.275 E F1
(function returns an array of)3.666 E F0(XPixmapF)3.666 E(ormatV)-.275 E
(alues)-1.012 E F1(structures that)3.666 E(describe the types of Z form\
at images supported by the speci\214ed display)72 551.7 Q 5.5(.I)-.715 G
2.75(fi)-5.5 G(nsuf)-2.75 E(\214cient memory)-.275 E(is a)72 564.7 Q
-.275(va)-.22 G(ilable,).275 E F0(XListPixmapF)3.666 E(ormats)-.275 E F1
(returns NULL.)3.666 E 1.76 -.88(To f)5.5 H
(ree the allocated storage for the).88 E F0(XPixmapF)72.916 577.7 Q
(ormatV)-.275 E(alues)-1.012 E F1(structures, use)3.666 E F0(XFr)3.666 E
(ee)-.198 E F1(.).916 E(The follo)72 594.6 Q
(wing lists the C language macros, their corresponding function equi)
-.275 E -.275(va)-.275 G(lents that are for).275 E
(other language bindings, and what data the)72 607.6 Q 2.75(yb)-.165 G
(oth return for the speci\214ed serv)-2.75 E(er and screen.)-.165 E
(These are often used by toolkits as well as by simple applications.)72
620.6 Q F0(18)282.5 769 Q 0 Cg EP
%%Page: 19 24
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E .44 LW 36 76.75 36 87.75 DL 36 74.75
36 85.75 DL 41.5 73 36 73 DL 43.5 73 38 73 DL 49 73 43.5 73 DL/F1 11
/Times-Roman@0 SF -1.834(ImageByteOrder \()72 88.9 R/F2 11
/Times-Italic@0 SF(display).916 E F1(\)).916 E(int XImageByteOrder)72
114.9 Q(\().916 E F2(display).916 E F1(\)).916 E(Display *)88.5 127.9 Q
F2(display)A F1(;).916 E F2(display)72 148.7 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
36 144.35 36 155.35 DL 36 142.35 36 153.35 DL 41.5 153.6 36 153.6 DL
43.5 153.6 38 153.6 DL 49 153.6 43.5 153.6 DL(Both specify the required\
 byte order for images for each scanline unit in XY format \(bitmap\) o\
r)72 178.6 Q(for each pix)72 191.6 Q(el v)-.165 E(alue in Z format.)
-.275 E(The macro or function can return either)5.5 E F0(LSBFirst)3.666
E F1(or)3.666 E F0(MSB-)3.666 E(First)72 204.6 Q F1(.).916 E 36 239.25
36 250.25 DL 36 237.25 36 248.25 DL 41.5 235.5 36 235.5 DL 43.5 235.5 38
235.5 DL 49 235.5 43.5 235.5 DL -1.834(BitmapUnit \()72 251.4 R F2
(display).916 E F1(\)).916 E(int XBitmapUnit)72 277.4 Q(\().916 E F2
(display).916 E F1(\)).916 E(Display *)88.5 290.4 Q F2(display)A F1(;)
.916 E F2(display)72 311.2 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
36 306.85 36 317.85 DL 36 304.85 36 315.85 DL 41.5 316.1 36 316.1 DL
43.5 316.1 38 316.1 DL 49 316.1 43.5 316.1 DL
(Both return the size of a bitmap')72 341.1 Q 2.75(ss)-.605 G
(canline unit in bits.)-2.75 E
(The scanline is calculated in multiples of)5.5 E(this v)72 354.1 Q
(alue.)-.275 E 36 388.75 36 399.75 DL 36 386.75 36 397.75 DL 41.5 385 36
385 DL 43.5 385 38 385 DL 49 385 43.5 385 DL -1.834(BitmapBitOrder \()72
400.9 R F2(display).916 E F1(\)).916 E(int XBitmapBitOrder)72 426.9 Q
(\().916 E F2(display).916 E F1(\)).916 E(Display *)88.5 439.9 Q F2
(display)A F1(;).916 E F2(display)72 460.7 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
36 456.35 36 467.35 DL 36 454.35 36 465.35 DL 41.5 465.6 36 465.6 DL
43.5 465.6 38 465.6 DL 49 465.6 43.5 465.6 DL -.44(Wi)72 490.6 S(thin e\
ach bitmap unit, the left-most bit in the bitmap as displayed on the sc\
reen is either the).44 E
(least signi\214cant or most signi\214cant bit in the unit.)72 503.6 Q
(This macro or function can return)5.5 E F0(LSBFirst)3.666 E F1(or)3.666
E F0(MSBFirst)72.916 516.6 Q F1(.).916 E 36 551.25 36 562.25 DL 36
549.25 36 560.25 DL 41.5 547.5 36 547.5 DL 43.5 547.5 38 547.5 DL 49
547.5 43.5 547.5 DL(BitmapP)72 563.4 Q -1.834(ad \()-.165 F F2(display)
.916 E F1(\)).916 E(int XBitmapP)72 589.4 Q -1.834(ad \()-.165 F F2
(display).916 E F1(\)).916 E(Display *)88.5 602.4 Q F2(display)A F1(;)
.916 E F2(display)72 623.2 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
36 618.85 36 629.85 DL 36 616.85 36 627.85 DL 41.5 628.1 36 628.1 DL
43.5 628.1 38 628.1 DL 49 628.1 43.5 628.1 DL(Each scanline must be pad\
ded to a multiple of bits returned by this macro or function.)72 653.1 Q
F0(19)282.5 769 Q 0 Cg EP
%%Page: 20 25
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E .44 LW 36 76.75 36 87.75 DL 36 74.75
36 85.75 DL 41.5 73 36 73 DL 43.5 73 38 73 DL 49 73 43.5 73 DL/F1 11
/Times-Roman@0 SF -1.834(DisplayHeight \()72 88.9 R/F2 11/Times-Italic@0
SF(display).916 E F1(,).916 E F2(scr)3.666 E(een_number)-.407 E F1(\))
.916 E(int XDisplayHeight)72 114.9 Q(\().916 E F2(display).916 E F1(,)
.916 E F2(scr)3.666 E(een_number)-.407 E F1(\)).916 E(Display *)88.5
127.9 Q F2(display)A F1(;).916 E(int)88.5 140.9 Q F2(scr)2.75 E
(een_number)-.407 E F1(;).916 E F2(display)72 161.7 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2(scr)72 178.6 Q(een_number)-.407 E F1
(Speci\214es the appropriate screen number on the host serv)144 191.6 Q
(er)-.165 E(.)-.605 E 36 187.25 36 198.25 DL 36 185.25 36 196.25 DL 41.5
196.5 36 196.5 DL 43.5 196.5 38 196.5 DL 49 196.5 43.5 196.5 DL
(Both return an inte)72 221.5 Q
(ger that describes the height of the screen in pix)-.165 E(els.)-.165 E
36 256.15 36 267.15 DL 36 254.15 36 265.15 DL 41.5 252.4 36 252.4 DL
43.5 252.4 38 252.4 DL 49 252.4 43.5 252.4 DL -1.834(DisplayHeightMM \()
72 268.3 R F2(display).916 E F1(,).916 E F2(scr)3.666 E(een_number)-.407
E F1(\)).916 E(int XDisplayHeightMM)72 294.3 Q(\().916 E F2(display).916
E F1(,).916 E F2(scr)3.666 E(een_number)-.407 E F1(\)).916 E(Display *)
88.5 307.3 Q F2(display)A F1(;).916 E(int)88.5 320.3 Q F2(scr)2.75 E
(een_number)-.407 E F1(;).916 E F2(display)72 341.1 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2(scr)72 358 Q(een_number)-.407 E F1
(Speci\214es the appropriate screen number on the host serv)144 371 Q
(er)-.165 E(.)-.605 E 36 366.65 36 377.65 DL 36 364.65 36 375.65 DL 41.5
375.9 36 375.9 DL 43.5 375.9 38 375.9 DL 49 375.9 43.5 375.9 DL
(Both return the height of the speci\214ed screen in millimeters.)72
400.9 Q 36 435.55 36 446.55 DL 36 433.55 36 444.55 DL 41.5 431.8 36
431.8 DL 43.5 431.8 38 431.8 DL 49 431.8 43.5 431.8 DL(DisplayW)72 447.7
Q -1.834(idth \()-.44 F F2(display).916 E F1(,).916 E F2(scr)3.666 E
(een_number)-.407 E F1(\)).916 E(int XDisplayW)72 473.7 Q -1.834
(idth \()-.44 F F2(display).916 E F1(,).916 E F2(scr)3.666 E(een_number)
-.407 E F1(\)).916 E(Display *)88.5 486.7 Q F2(display)A F1(;).916 E
(int)88.5 499.7 Q F2(scr)2.75 E(een_number)-.407 E F1(;).916 E F2
(display)72 520.5 Q F1(Speci\214es the connection to the X serv)40.221 E
(er)-.165 E(.)-.605 E F2(scr)72 537.4 Q(een_number)-.407 E F1
(Speci\214es the appropriate screen number on the host serv)144 550.4 Q
(er)-.165 E(.)-.605 E 36 546.05 36 557.05 DL 36 544.05 36 555.05 DL 41.5
555.3 36 555.3 DL 43.5 555.3 38 555.3 DL 49 555.3 43.5 555.3 DL
(Both return the width of the screen in pix)72 580.3 Q(els.)-.165 E F0
(20)282.5 769 Q 0 Cg EP
%%Page: 21 26
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E .44 LW 36 76.75 36 87.75 DL 36 74.75
36 85.75 DL 41.5 73 36 73 DL 43.5 73 38 73 DL 49 73 43.5 73 DL/F1 11
/Times-Roman@0 SF(DisplayW)72 88.9 Q -1.834(idthMM \()-.44 F/F2 11
/Times-Italic@0 SF(display).916 E F1(,).916 E F2(scr)3.666 E(een_number)
-.407 E F1(\)).916 E(int XDisplayW)72 114.9 Q -1.834(idthMM \()-.44 F F2
(display).916 E F1(,).916 E F2(scr)3.666 E(een_number)-.407 E F1(\)).916
E(Display *)88.5 127.9 Q F2(display)A F1(;).916 E(int)88.5 140.9 Q F2
(scr)2.75 E(een_number)-.407 E F1(;).916 E F2(display)72 161.7 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2(scr)72 178.6 Q(een_number)-.407 E F1
(Speci\214es the appropriate screen number on the host serv)144 191.6 Q
(er)-.165 E(.)-.605 E 36 187.25 36 198.25 DL 36 185.25 36 196.25 DL 41.5
196.5 36 196.5 DL 43.5 196.5 38 196.5 DL 49 196.5 43.5 196.5 DL
(Both return the width of the speci\214ed screen in millimeters.)72
221.5 Q F0 2.75(2.2.3. Scr)72 247.5 R(een Inf)-.198 E(ormation Macr)
-.275 E(os)-.198 E F1(The follo)72 264.4 Q
(wing lists the C language macros, their corresponding function equi)
-.275 E -.275(va)-.275 G(lents that are for).275 E
(other language bindings, and what data the)72 277.4 Q 2.75(yb)-.165 G
(oth can return.)-2.75 E(These macros or functions all tak)5.5 E 2.75
(ea)-.11 G(pointer to the appropriate screen structure.)72 290.4 Q 36
325.05 36 336.05 DL 36 323.05 36 334.05 DL 41.5 321.3 36 321.3 DL 43.5
321.3 38 321.3 DL 49 321.3 43.5 321.3 DL(BlackPix)72 337.2 Q -1.834
(elOfScreen \()-.165 F F2(scr).916 E(een)-.407 E F1(\)).916 E
(unsigned long XBlackPix)72 363.2 Q -1.834(elOfScreen \()-.165 F F2(scr)
.916 E(een)-.407 E F1(\)).916 E(Screen *)88.5 376.2 Q F2(scr)A(een)-.407
E F1(;).916 E F2(scr)72 397 Q(een)-.407 E F1
(Speci\214es the appropriate)43.697 E F0(Scr)3.666 E(een)-.198 E F1
(structure.)3.666 E 36 392.65 36 403.65 DL 36 390.65 36 401.65 DL 41.5
401.9 36 401.9 DL 43.5 401.9 38 401.9 DL 49 401.9 43.5 401.9 DL
(Both return the black pix)72 426.9 Q(el v)-.165 E
(alue of the speci\214ed screen.)-.275 E 36 461.55 36 472.55 DL 36
459.55 36 470.55 DL 41.5 457.8 36 457.8 DL 43.5 457.8 38 457.8 DL 49
457.8 43.5 457.8 DL(WhitePix)72 473.7 Q -1.834(elOfScreen \()-.165 F F2
(scr).916 E(een)-.407 E F1(\)).916 E(unsigned long XWhitePix)72 499.7 Q
-1.834(elOfScreen \()-.165 F F2(scr).916 E(een)-.407 E F1(\)).916 E
(Screen *)88.5 512.7 Q F2(scr)A(een)-.407 E F1(;).916 E F2(scr)72 533.5
Q(een)-.407 E F1(Speci\214es the appropriate)43.697 E F0(Scr)3.666 E
(een)-.198 E F1(structure.)3.666 E 36 529.15 36 540.15 DL 36 527.15 36
538.15 DL 41.5 538.4 36 538.4 DL 43.5 538.4 38 538.4 DL 49 538.4 43.5
538.4 DL(Both return the white pix)72 563.4 Q(el v)-.165 E
(alue of the speci\214ed screen.)-.275 E 36 598.05 36 609.05 DL 36
596.05 36 607.05 DL 41.5 594.3 36 594.3 DL 43.5 594.3 38 594.3 DL 49
594.3 43.5 594.3 DL -1.834(CellsOfScreen \()72 610.2 R F2(scr).916 E
(een)-.407 E F1(\)).916 E(int XCellsOfScreen)72 636.2 Q(\().916 E F2
(scr).916 E(een)-.407 E F1(\)).916 E(Screen *)88.5 649.2 Q F2(scr)A(een)
-.407 E F1(;).916 E F2(scr)72 670 Q(een)-.407 E F1
(Speci\214es the appropriate)43.697 E F0(Scr)3.666 E(een)-.198 E F1
(structure.)3.666 E 36 665.65 36 676.65 DL 36 663.65 36 674.65 DL 41.5
674.9 36 674.9 DL 43.5 674.9 38 674.9 DL 49 674.9 43.5 674.9 DL
(Both return the number of colormap cells in the def)72 699.9 Q
(ault colormap of the speci\214ed screen.)-.11 E F0(21)282.5 769 Q 0 Cg
EP
%%Page: 22 27
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E .44 LW 36 76.75 36 87.75 DL 36 74.75
36 85.75 DL 41.5 73 36 73 DL 43.5 73 38 73 DL 49 73 43.5 73 DL/F1 11
/Times-Roman@0 SF(Def)72 88.9 Q -1.834(aultColormapOfScreen \()-.11 F/F2
11/Times-Italic@0 SF(scr).916 E(een)-.407 E F1(\)).916 E(Colormap XDef)
72 114.9 Q -1.834(aultColormapOfScreen \()-.11 F F2(scr).916 E(een)-.407
E F1(\)).916 E(Screen *)88.5 127.9 Q F2(scr)A(een)-.407 E F1(;).916 E F2
(scr)72 148.7 Q(een)-.407 E F1(Speci\214es the appropriate)43.697 E F0
(Scr)3.666 E(een)-.198 E F1(structure.)3.666 E 36 144.35 36 155.35 DL 36
142.35 36 153.35 DL 41.5 153.6 36 153.6 DL 43.5 153.6 38 153.6 DL 49
153.6 43.5 153.6 DL(Both return the def)72 178.6 Q
(ault colormap of the speci\214ed screen.)-.11 E 36 213.25 36 224.25 DL
36 211.25 36 222.25 DL 41.5 209.5 36 209.5 DL 43.5 209.5 38 209.5 DL 49
209.5 43.5 209.5 DL(Def)72 225.4 Q -1.834(aultDepthOfScreen \()-.11 F F2
(scr).916 E(een)-.407 E F1(\)).916 E(int XDef)72 251.4 Q -1.834
(aultDepthOfScreen \()-.11 F F2(scr).916 E(een)-.407 E F1(\)).916 E
(Screen *)88.5 264.4 Q F2(scr)A(een)-.407 E F1(;).916 E F2(scr)72 285.2
Q(een)-.407 E F1(Speci\214es the appropriate)43.697 E F0(Scr)3.666 E
(een)-.198 E F1(structure.)3.666 E 36 280.85 36 291.85 DL 36 278.85 36
289.85 DL 41.5 290.1 36 290.1 DL 43.5 290.1 38 290.1 DL 49 290.1 43.5
290.1 DL(Both return the depth of the root windo)72 315.1 Q -.715(w.)
-.275 G 36 349.75 36 360.75 DL 36 347.75 36 358.75 DL 41.5 346 36 346 DL
43.5 346 38 346 DL 49 346 43.5 346 DL(Def)72 361.9 Q -1.834
(aultGCOfScreen \()-.11 F F2(scr).916 E(een)-.407 E F1(\)).916 E
(GC XDef)72 387.9 Q -1.834(aultGCOfScreen \()-.11 F F2(scr).916 E(een)
-.407 E F1(\)).916 E(Screen *)88.5 400.9 Q F2(scr)A(een)-.407 E F1(;)
.916 E F2(scr)72 421.7 Q(een)-.407 E F1(Speci\214es the appropriate)
43.697 E F0(Scr)3.666 E(een)-.198 E F1(structure.)3.666 E 36 417.35 36
428.35 DL 36 415.35 36 426.35 DL 41.5 426.6 36 426.6 DL 43.5 426.6 38
426.6 DL 49 426.6 43.5 426.6 DL(Both return a def)72 451.6 Q
(ault graphics conte)-.11 E
(xt \(GC\) of the speci\214ed screen, which has the same depth as)-.165
E(the root windo)72 464.6 Q 2.75(wo)-.275 G 2.75(ft)-2.75 G(he screen.)
-2.75 E(The GC must ne)5.5 E -.165(ve)-.275 G 2.75(rb).165 G 2.75(ef)
-2.75 G(reed.)-2.75 E 36 499.25 36 510.25 DL 36 497.25 36 508.25 DL 41.5
495.5 36 495.5 DL 43.5 495.5 38 495.5 DL 49 495.5 43.5 495.5 DL(Def)72
511.4 Q(aultV)-.11 E -1.834(isualOfScreen \()-.66 F F2(scr).916 E(een)
-.407 E F1(\)).916 E -.66(Vi)72 537.4 S(sual *XDef).66 E(aultV)-.11 E
-1.834(isualOfScreen \()-.66 F F2(scr).916 E(een)-.407 E F1(\)).916 E
(Screen *)88.5 550.4 Q F2(scr)A(een)-.407 E F1(;).916 E F2(scr)72 571.2
Q(een)-.407 E F1(Speci\214es the appropriate)43.697 E F0(Scr)3.666 E
(een)-.198 E F1(structure.)3.666 E 36 566.85 36 577.85 DL 36 564.85 36
575.85 DL 41.5 576.1 36 576.1 DL 43.5 576.1 38 576.1 DL 49 576.1 43.5
576.1 DL(Both return the def)72 601.1 Q
(ault visual of the speci\214ed screen.)-.11 E -.165(Fo)5.5 G 2.75(ri)
.165 G(nformation on visual types, see section)-2.75 E(3.1.)72 614.1 Q
F0(22)282.5 769 Q 0 Cg EP
%%Page: 23 28
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E .44 LW 36 76.75 36 87.75 DL 36 74.75
36 85.75 DL 41.5 73 36 73 DL 43.5 73 38 73 DL 49 73 43.5 73 DL/F1 11
/Times-Roman@0 SF -1.834(DoesBackingStore \()72 88.9 R/F2 11
/Times-Italic@0 SF(scr).916 E(een)-.407 E F1(\)).916 E
(int XDoesBackingStore)72 114.9 Q(\().916 E F2(scr).916 E(een)-.407 E F1
(\)).916 E(Screen *)88.5 127.9 Q F2(scr)A(een)-.407 E F1(;).916 E F2
(scr)72 148.7 Q(een)-.407 E F1(Speci\214es the appropriate)43.697 E F0
(Scr)3.666 E(een)-.198 E F1(structure.)3.666 E 36 144.35 36 155.35 DL 36
142.35 36 153.35 DL 41.5 153.6 36 153.6 DL 43.5 153.6 38 153.6 DL 49
153.6 43.5 153.6 DL(Both return a v)72 178.6 Q
(alue indicating whether the screen supports backing stores.)-.275 E
(The v)5.5 E(alue returned can)-.275 E(be one of)72 191.6 Q F0
(WhenMapped)3.666 E F1(,).916 E F0(NotUseful)3.666 E F1 2.75(,o).916 G
(r)-2.75 E F0(Always)3.666 E F1(\(see section 3.2.4\).)3.666 E 36 226.25
36 237.25 DL 36 224.25 36 235.25 DL 41.5 222.5 36 222.5 DL 43.5 222.5 38
222.5 DL 49 222.5 43.5 222.5 DL(DoesSa)72 238.4 Q -.165(ve)-.22 G -1.834
(Unders \().165 F F2(scr).916 E(een)-.407 E F1(\)).916 E(Bool XDoesSa)72
264.4 Q -.165(ve)-.22 G -1.834(Unders \().165 F F2(scr).916 E(een)-.407
E F1(\)).916 E(Screen *)88.5 277.4 Q F2(scr)A(een)-.407 E F1(;).916 E F2
(scr)72 298.2 Q(een)-.407 E F1(Speci\214es the appropriate)43.697 E F0
(Scr)3.666 E(een)-.198 E F1(structure.)3.666 E 36 293.85 36 304.85 DL 36
291.85 36 302.85 DL 41.5 303.1 36 303.1 DL 43.5 303.1 38 303.1 DL 49
303.1 43.5 303.1 DL(Both return a Boolean v)72 328.1 Q
(alue indicating whether the screen supports sa)-.275 E .33 -.165(ve u)
-.22 H 2.75(nders. If).165 F F0 -.814(Tr)3.666 G(ue).814 E F1 2.75(,t)
.916 G(he)-2.75 E(screen supports sa)72 341.1 Q .33 -.165(ve u)-.22 H
2.75(nders. If).165 F F0 -.275(Fa)3.666 G(lse).275 E F1 2.75(,t).916 G
(he screen does not support sa)-2.75 E .33 -.165(ve u)-.22 H
(nders \(see section 3.2.5\).).165 E 36 375.75 36 386.75 DL 36 373.75 36
384.75 DL 41.5 372 36 372 DL 43.5 372 38 372 DL 49 372 43.5 372 DL
-1.834(DisplayOfScreen \()72 387.9 R F2(scr).916 E(een)-.407 E F1(\))
.916 E(Display *XDisplayOfScreen)72 413.9 Q(\().916 E F2(scr).916 E(een)
-.407 E F1(\)).916 E(Screen *)88.5 426.9 Q F2(scr)A(een)-.407 E F1(;)
.916 E F2(scr)72 447.7 Q(een)-.407 E F1(Speci\214es the appropriate)
43.697 E F0(Scr)3.666 E(een)-.198 E F1(structure.)3.666 E 36 443.35 36
454.35 DL 36 441.35 36 452.35 DL 41.5 452.6 36 452.6 DL 43.5 452.6 38
452.6 DL 49 452.6 43.5 452.6 DL
(Both return the display of the speci\214ed screen.)72 477.6 Q 36 512.25
36 523.25 DL 36 510.25 36 521.25 DL 41.5 508.5 36 508.5 DL 43.5 508.5 38
508.5 DL 49 508.5 43.5 508.5 DL(int XScreenNumberOfScreen)72 524.4 Q(\()
.916 E F2(scr).916 E(een)-.407 E F1(\)).916 E(Screen *)88.5 537.4 Q F2
(scr)A(een)-.407 E F1(;).916 E F2(scr)72 558.2 Q(een)-.407 E F1
(Speci\214es the appropriate)43.697 E F0(Scr)3.666 E(een)-.198 E F1
(structure.)3.666 E 36 553.85 36 564.85 DL 36 551.85 36 562.85 DL 41.5
563.1 36 563.1 DL 43.5 563.1 38 563.1 DL 49 563.1 43.5 563.1 DL(The)72
588.1 Q F0(XScr)3.666 E(eenNumberOfScr)-.198 E(een)-.198 E F1
(function returns the screen inde)3.666 E 2.75(xn)-.165 G
(umber of the speci\214ed screen.)-2.75 E 36 622.75 36 633.75 DL 36
620.75 36 631.75 DL 41.5 619 36 619 DL 43.5 619 38 619 DL 49 619 43.5
619 DL(Ev)72 634.9 Q -1.834(entMaskOfScreen \()-.165 F F2(scr).916 E
(een)-.407 E F1(\)).916 E(long XEv)72 660.9 Q -1.834(entMaskOfScreen \()
-.165 F F2(scr).916 E(een)-.407 E F1(\)).916 E(Screen *)88.5 673.9 Q F2
(scr)A(een)-.407 E F1(;).916 E F2(scr)72 694.7 Q(een)-.407 E F1
(Speci\214es the appropriate)43.697 E F0(Scr)3.666 E(een)-.198 E F1
(structure.)3.666 E 36 690.35 36 701.35 DL 36 688.35 36 699.35 DL 41.5
699.6 36 699.6 DL 43.5 699.6 38 699.6 DL 49 699.6 43.5 699.6 DL
(Both return the e)72 724.6 Q -.165(ve)-.275 G
(nt mask of the root windo).165 E 2.75(wf)-.275 G
(or the speci\214ed screen at connection setup time.)-2.75 E F0(23)282.5
769 Q 0 Cg EP
%%Page: 24 29
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E .44 LW 36 76.75 36 87.75 DL 36 74.75
36 85.75 DL 41.5 73 36 73 DL 43.5 73 38 73 DL 49 73 43.5 73 DL/F1 11
/Times-Roman@0 SF -.44(Wi)72 88.9 S -1.834(dthOfScreen \().44 F/F2 11
/Times-Italic@0 SF(scr).916 E(een)-.407 E F1(\)).916 E(int XW)72 114.9 Q
-1.834(idthOfScreen \()-.44 F F2(scr).916 E(een)-.407 E F1(\)).916 E
(Screen *)88.5 127.9 Q F2(scr)A(een)-.407 E F1(;).916 E F2(scr)72 148.7
Q(een)-.407 E F1(Speci\214es the appropriate)43.697 E F0(Scr)3.666 E
(een)-.198 E F1(structure.)3.666 E 36 144.35 36 155.35 DL 36 142.35 36
153.35 DL 41.5 153.6 36 153.6 DL 43.5 153.6 38 153.6 DL 49 153.6 43.5
153.6 DL(Both return the width of the speci\214ed screen in pix)72 178.6
Q(els.)-.165 E 36 213.25 36 224.25 DL 36 211.25 36 222.25 DL 41.5 209.5
36 209.5 DL 43.5 209.5 38 209.5 DL 49 209.5 43.5 209.5 DL -1.834
(HeightOfScreen \()72 225.4 R F2(scr).916 E(een)-.407 E F1(\)).916 E
(int XHeightOfScreen)72 251.4 Q(\().916 E F2(scr).916 E(een)-.407 E F1
(\)).916 E(Screen *)88.5 264.4 Q F2(scr)A(een)-.407 E F1(;).916 E F2
(scr)72 285.2 Q(een)-.407 E F1(Speci\214es the appropriate)43.697 E F0
(Scr)3.666 E(een)-.198 E F1(structure.)3.666 E 36 280.85 36 291.85 DL 36
278.85 36 289.85 DL 41.5 290.1 36 290.1 DL 43.5 290.1 38 290.1 DL 49
290.1 43.5 290.1 DL
(Both return the height of the speci\214ed screen in pix)72 315.1 Q
(els.)-.165 E 36 349.75 36 360.75 DL 36 347.75 36 358.75 DL 41.5 346 36
346 DL 43.5 346 38 346 DL 49 346 43.5 346 DL -.44(Wi)72 361.9 S -1.834
(dthMMOfScreen \().44 F F2(scr).916 E(een)-.407 E F1(\)).916 E(int XW)72
387.9 Q -1.834(idthMMOfScreen \()-.44 F F2(scr).916 E(een)-.407 E F1(\))
.916 E(Screen *)88.5 400.9 Q F2(scr)A(een)-.407 E F1(;).916 E F2(scr)72
421.7 Q(een)-.407 E F1(Speci\214es the appropriate)43.697 E F0(Scr)3.666
E(een)-.198 E F1(structure.)3.666 E 36 417.35 36 428.35 DL 36 415.35 36
426.35 DL 41.5 426.6 36 426.6 DL 43.5 426.6 38 426.6 DL 49 426.6 43.5
426.6 DL
(Both return the width of the speci\214ed screen in millimeters.)72
451.6 Q 36 486.25 36 497.25 DL 36 484.25 36 495.25 DL 41.5 482.5 36
482.5 DL 43.5 482.5 38 482.5 DL 49 482.5 43.5 482.5 DL -1.834
(HeightMMOfScreen \()72 498.4 R F2(scr).916 E(een)-.407 E F1(\)).916 E
(int XHeightMMOfScreen)72 524.4 Q(\().916 E F2(scr).916 E(een)-.407 E F1
(\)).916 E(Screen *)88.5 537.4 Q F2(scr)A(een)-.407 E F1(;).916 E F2
(scr)72 558.2 Q(een)-.407 E F1(Speci\214es the appropriate)43.697 E F0
(Scr)3.666 E(een)-.198 E F1(structure.)3.666 E 36 553.85 36 564.85 DL 36
551.85 36 562.85 DL 41.5 563.1 36 563.1 DL 43.5 563.1 38 563.1 DL 49
563.1 43.5 563.1 DL
(Both return the height of the speci\214ed screen in millimeters.)72
588.1 Q 36 622.75 36 633.75 DL 36 620.75 36 631.75 DL 41.5 619 36 619 DL
43.5 619 38 619 DL 49 619 43.5 619 DL -1.834(MaxCmapsOfScreen \()72
634.9 R F2(scr).916 E(een)-.407 E F1(\)).916 E(int XMaxCmapsOfScreen)72
660.9 Q(\().916 E F2(scr).916 E(een)-.407 E F1(\)).916 E(Screen *)88.5
673.9 Q F2(scr)A(een)-.407 E F1(;).916 E F2(scr)72 694.7 Q(een)-.407 E
F1(Speci\214es the appropriate)43.697 E F0(Scr)3.666 E(een)-.198 E F1
(structure.)3.666 E 36 690.35 36 701.35 DL 36 688.35 36 699.35 DL 41.5
699.6 36 699.6 DL 43.5 699.6 38 699.6 DL 49 699.6 43.5 699.6 DL(Both re\
turn the maximum number of installed colormaps supported by the speci\
\214ed screen \(see)72 724.6 Q F0(24)282.5 769 Q 0 Cg EP
%%Page: 25 30
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E/F1 11/Times-Roman@0 SF(section 9.3\).)
72 85 Q .44 LW 36 119.65 36 130.65 DL 36 117.65 36 128.65 DL 41.5 115.9
36 115.9 DL 43.5 115.9 38 115.9 DL 49 115.9 43.5 115.9 DL -1.834
(MinCmapsOfScreen \()72 131.8 R/F2 11/Times-Italic@0 SF(scr).916 E(een)
-.407 E F1(\)).916 E(int XMinCmapsOfScreen)72 157.8 Q(\().916 E F2(scr)
.916 E(een)-.407 E F1(\)).916 E(Screen *)88.5 170.8 Q F2(scr)A(een)-.407
E F1(;).916 E F2(scr)72 191.6 Q(een)-.407 E F1
(Speci\214es the appropriate)43.697 E F0(Scr)3.666 E(een)-.198 E F1
(structure.)3.666 E 36 187.25 36 198.25 DL 36 185.25 36 196.25 DL 41.5
196.5 36 196.5 DL 43.5 196.5 38 196.5 DL 49 196.5 43.5 196.5 DL(Both re\
turn the minimum number of installed colormaps supported by the speci\
\214ed screen \(see)72 221.5 Q(section 9.3\).)72 234.5 Q 36 269.15 36
280.15 DL 36 267.15 36 278.15 DL 41.5 265.4 36 265.4 DL 43.5 265.4 38
265.4 DL 49 265.4 43.5 265.4 DL -1.834(PlanesOfScreen \()72 281.3 R F2
(scr).916 E(een)-.407 E F1(\)).916 E(int XPlanesOfScreen)72 307.3 Q(\()
.916 E F2(scr).916 E(een)-.407 E F1(\)).916 E(Screen *)88.5 320.3 Q F2
(scr)A(een)-.407 E F1(;).916 E F2(scr)72 341.1 Q(een)-.407 E F1
(Speci\214es the appropriate)43.697 E F0(Scr)3.666 E(een)-.198 E F1
(structure.)3.666 E 36 336.75 36 347.75 DL 36 334.75 36 345.75 DL 41.5
346 36 346 DL 43.5 346 38 346 DL 49 346 43.5 346 DL
(Both return the depth of the root windo)72 371 Q -.715(w.)-.275 G 36
405.65 36 416.65 DL 36 403.65 36 414.65 DL 41.5 401.9 36 401.9 DL 43.5
401.9 38 401.9 DL 49 401.9 43.5 401.9 DL(RootW)72 417.8 Q(indo)-.44 E
-1.834(wOfScreen \()-.275 F F2(scr).916 E(een)-.407 E F1(\)).916 E -.44
(Wi)72 443.8 S(ndo).44 E 2.75(wX)-.275 G(RootW)-2.75 E(indo)-.44 E
-1.834(wOfScreen \()-.275 F F2(scr).916 E(een)-.407 E F1(\)).916 E
(Screen *)88.5 456.8 Q F2(scr)A(een)-.407 E F1(;).916 E F2(scr)72 477.6
Q(een)-.407 E F1(Speci\214es the appropriate)43.697 E F0(Scr)3.666 E
(een)-.198 E F1(structure.)3.666 E 36 473.25 36 484.25 DL 36 471.25 36
482.25 DL 41.5 482.5 36 482.5 DL 43.5 482.5 38 482.5 DL 49 482.5 43.5
482.5 DL(Both return the root windo)72 507.5 Q 2.75(wo)-.275 G 2.75(ft)
-2.75 G(he speci\214ed screen.)-2.75 E F0 2.75(2.3. Generating)72 533.5
R 2.75(aN)2.75 G(oOperation Pr)-2.75 E(otocol Request)-.198 E F1 1.76
-.88(To e)72 550.4 T -.165(xe).715 G(cute a).165 E F0(NoOperation)3.666
E F1(protocol request, use)3.666 E F0(XNoOp)3.666 E F1(.).916 E 36
568.15 36 579.15 DL 36 566.15 36 577.15 DL 41.5 564.4 36 564.4 DL 43.5
564.4 38 564.4 DL 49 564.4 43.5 564.4 DL -1.834(XNoOp \()72 580.3 R F2
(display).916 E F1(\)).916 E(Display *)88.5 593.3 Q F2(display)A F1(;)
.916 E F2(display)72 614.1 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
36 609.75 36 620.75 DL 36 607.75 36 618.75 DL 41.5 619 36 619 DL 43.5
619 38 619 DL 49 619 43.5 619 DL(The)72 644 Q F0(XNoOp)3.666 E F1
(function sends a)3.666 E F0(NoOperation)3.666 E F1
(protocol request to the X serv)3.666 E(er)-.165 E 2.75(,t)-.44 G
(hereby e)-2.75 E -.165(xe)-.165 G(rcising).165 E(the connection.)72 657
Q F0 2.75(2.4. Fr)72 683 R(eeing Client-Cr)-.198 E(eated Data)-.198 E F1
1.76 -.88(To f)72 699.9 T(ree in-memory data that w).88 E
(as created by an Xlib function, use)-.11 E F0(XFr)3.666 E(ee)-.198 E F1
(.).916 E F0(25)282.5 769 Q 0 Cg EP
%%Page: 26 31
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E .44 LW 36 76.75 36 87.75 DL 36 74.75
36 85.75 DL 41.5 73 36 73 DL 43.5 73 38 73 DL 49 73 43.5 73 DL/F1 11
/Times-Roman@0 SF -1.834(XFree \()72 88.9 R/F2 11/Times-Italic@0 SF
(data).916 E F1(\)).916 E -.22(vo)85.75 101.9 S(id *).22 E F2(data)A F1
(;).916 E F2(data)72 122.7 Q F1
(Speci\214es the data that is to be freed.)52.442 E 36 118.35 36 129.35
DL 36 116.35 36 127.35 DL 41.5 127.6 36 127.6 DL 43.5 127.6 38 127.6 DL
49 127.6 43.5 127.6 DL(The)72 152.6 Q F0(XFr)3.666 E(ee)-.198 E F1(func\
tion is a general-purpose Xlib routine that frees the speci\214ed data.)
3.666 E -1.21(Yo)5.5 G 2.75(um)1.21 G(ust use)-2.75 E(it to free an)72
165.6 Q 2.75(yo)-.165 G
(bjects that were allocated by Xlib, unless an alternate function is e)
-2.75 E(xplicitly speci-)-.165 E(\214ed for the object.)72 178.6 Q 2.75
(AN)5.5 G(ULL pointer cannot be passed to this function.)-2.75 E F0 2.75
(2.5. Closing)72 204.6 R(the Display)2.75 E F1 1.76 -.88(To c)72 221.5 T
(lose a display or disconnect from the X serv).88 E(er)-.165 E 2.75(,u)
-.44 G(se)-2.75 E F0(XCloseDisplay)3.666 E F1(.).916 E 36 243.15 36
254.15 DL 36 241.15 36 252.15 DL 41.5 239.4 36 239.4 DL 43.5 239.4 38
239.4 DL 49 239.4 43.5 239.4 DL -1.834(XCloseDisplay \()72 255.3 R F2
(display)A F1(\)).916 E(Display *)88.5 268.3 Q F2(display)A F1(;).916 E
F2(display)72 289.1 Q F1(Speci\214es the connection to the X serv)40.221
E(er)-.165 E(.)-.605 E 36 284.75 36 295.75 DL 36 282.75 36 293.75 DL
41.5 294 36 294 DL 43.5 294 38 294 DL 49 294 43.5 294 DL(The)72 319 Q F0
(XCloseDisplay)3.666 E F1(function closes the connection to the X serv)
3.666 E(er for the display speci\214ed in the)-.165 E F0(Display)72.916
332 Q F1(structure and destro)3.666 E(ys all windo)-.11 E
(ws, resource IDs \()-.275 E F0 -.198(Wi).916 G(ndo).198 E(w)-.11 E F1
(,).916 E F0 -.275(Fo)3.666 G(nt).275 E F1(,).916 E F0(Pixmap)3.666 E F1
(,).916 E F0(Colormap)3.666 E F1(,).916 E F0(Cursor)72.916 345 Q F1 2.75
(,a).916 G(nd)-2.75 E F0(GContext)3.666 E F1
(\), or other resources that the client has created on this display).916
E 2.75(,u)-.715 G(nless the)-2.75 E(close-do)72 358 Q
(wn mode of the resource has been changed \(see)-.275 E F0(XSetCloseDo)
3.666 E(wnMode)-.11 E F1 2.75(\). Therefore,).916 F(these windo)72 371 Q
(ws, resource IDs, and other resources should ne)-.275 E -.165(ve)-.275
G 2.75(rb).165 G 2.75(er)-2.75 G(eferenced ag)-2.75 E(ain or an error)
-.055 E(will be generated.)72 384 Q(Before e)5.5 E
(xiting, you should call)-.165 E F0(XCloseDisplay)3.666 E F1 -.165(ex)
3.666 G(plicitly so that an).165 E 2.75(yp)-.165 G(ending)-2.75 E
(errors are reported as)72 397 Q F0(XCloseDisplay)3.666 E F1
(performs a \214nal)3.666 E F0(XSync)3.666 E F1(operation.)3.666 E F0
(XCloseDisplay)72.916 413.9 Q F1(can generate a)3.666 E F0(BadGC)3.666 E
F1(error)3.666 E(.)-.605 E(Xlib pro)72 443.8 Q
(vides a function to permit the resources o)-.165 E
(wned by a client to survi)-.275 E .33 -.165(ve a)-.275 H
(fter the client').165 E(s)-.605 E(connection is closed.)72 456.8 Q 1.76
-.88(To c)5.5 H(hange a client').88 E 2.75(sc)-.605 G(lose-do)-2.75 E
(wn mode, use)-.275 E F0(XSetCloseDo)3.666 E(wnMode)-.11 E F1(.).916 E
36 474.55 36 485.55 DL 36 472.55 36 483.55 DL 41.5 470.8 36 470.8 DL
43.5 470.8 38 470.8 DL 49 470.8 43.5 470.8 DL(XSetCloseDo)72 486.7 Q
-1.834(wnMode \()-.275 F F2(display).916 E F1(,)A F2(close_mode)2.75 E
F1(\)).916 E(Display *)88.5 499.7 Q F2(display)A F1(;).916 E(int)88.5
512.7 Q F2(close_mode)2.75 E F1(;).916 E F2(display)72 533.5 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2(close_mode)72 550.4 Q F1(Speci\214es the client close-do)20.069 E
(wn mode.)-.275 E -1.21(Yo)5.5 G 2.75(uc)1.21 G(an pass)-2.75 E F0
(Destr)3.666 E(oyAll)-.198 E F1(,).916 E F0(RetainP)3.666 E(erma-)-.22 E
(nent)144 563.4 Q F1 2.75(,o).916 G(r)-2.75 E F0(RetainT)3.666 E
(emporary)-1.012 E F1(.).916 E 36 559.05 36 570.05 DL 36 557.05 36
568.05 DL 41.5 568.3 36 568.3 DL 43.5 568.3 38 568.3 DL 49 568.3 43.5
568.3 DL(The)72 593.3 Q F0(XSetCloseDo)3.666 E(wnMode)-.11 E F1
(de\214nes what will happen to the client')3.666 E 2.75(sr)-.605 G
(esources at connection)-2.75 E 2.75(close. A)72 606.3 R
(connection starts in)2.75 E F0(Destr)3.666 E(oyAll)-.198 E F1 2.75
(mode. F)3.666 F(or information on what happens to the client')-.165 E
(s)-.605 E(resources when the close_mode ar)72 619.3 Q(gument is)-.198 E
F0(RetainP)3.666 E(ermanent)-.22 E F1(or)3.666 E F0(RetainT)3.666 E
(emporary)-1.012 E F1 2.75(,s).916 G(ee sec-)-2.75 E(tion 2.6.)72 632.3
Q F0(XSetCloseDo)72.916 649.2 Q(wnMode)-.11 E F1(can generate a)3.666 E
F0(BadV)3.666 E(alue)-1.012 E F1(error)3.666 E(.)-.605 E F0 2.75
(2.6. Using)72 675.2 R 2.75(XS)2.75 G(er)-2.75 E -.11(ve)-.11 G 2.75(rC)
.11 G(onnection Close Operations)-2.75 E F1(When the X serv)72 692.1 Q
(er')-.165 E 2.75(sc)-.605 G
(onnection to a client is closed either by an e)-2.75 E(xplicit call to)
-.165 E F0(XCloseDisplay)3.666 E F1(or by a process that e)72 705.1 Q
(xits, the X serv)-.165 E(er performs the follo)-.165 E
(wing automatic operations:)-.275 E F0(26)282.5 769 Q 0 Cg EP
%%Page: 27 32
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E/F1 11/Times-Roman@0 SF 23.65<8349>72
85 S 2.75(td)-23.65 G(iso)-2.75 E(wns all selections o)-.275 E
(wned by the client \(see)-.275 E F0(XSetSelectionOwner)3.666 E F1(\).)
.916 E 23.65<8349>72 101.9 S 2.75(tp)-23.65 G(erforms an)-2.75 E F0
(XUngrabP)3.666 E(ointer)-.22 E F1(and)3.666 E F0(XUngrabK)3.666 E
(eyboard)-.275 E F1(if the client has acti)3.666 E -.165(ve)-.275 G(ly)
.165 E(grabbed the pointer or the k)99.5 114.9 Q -.165(ey)-.11 G(board.)
.165 E 23.65<8349>72 131.8 S 2.75(tp)-23.65 G(erforms an)-2.75 E F0
(XUngrabSer)3.666 E -.11(ve)-.11 G(r).11 E F1
(if the client has grabbed the serv)3.666 E(er)-.165 E(.)-.605 E 23.65
<8349>72 148.7 S 2.75(tr)-23.65 G(eleases all passi)-2.75 E .33 -.165
(ve g)-.275 H(rabs made by the client.).165 E 23.65<8349>72 165.6 S 2.75
(tm)-23.65 G(arks all resources \(including colormap entries\) allocate\
d by the client either as perma-)-2.75 E(nent or temporary)99.5 178.6 Q
2.75(,d)-.715 G(epending on whether the close-do)-2.75 E(wn mode is)
-.275 E F0(RetainP)3.666 E(ermanent)-.22 E F1(or)3.666 E F0(RetainT)
100.416 191.6 Q(emporary)-1.012 E F1 5.5(.H).916 G -.275(ow)-5.5 G
-2.365 -.275(ev e).275 H .88 -.44(r, t).275 H(his does not pre).44 E
-.165(ve)-.275 G(nt other client applications from e).165 E(xplic-)-.165
E(itly destro)99.5 204.6 Q(ying the resources \(see)-.11 E F0
(XSetCloseDo)3.666 E(wnMode)-.11 E F1(\).).916 E(When the close-do)72
221.5 Q(wn mode is)-.275 E F0(Destr)3.666 E(oyAll)-.198 E F1 2.75(,t)
.916 G(he X serv)-2.75 E(er destro)-.165 E(ys all of a client')-.11 E
2.75(sr)-.605 G(esources as fol-)-2.75 E(lo)72 234.5 Q(ws:)-.275 E 23.65
<8349>72 251.4 S 2.75(te)-23.65 G(xamines each windo)-2.915 E 2.75(wi)
-.275 G 2.75(nt)-2.75 G(he client')-2.75 E 2.75(ss)-.605 G -2.475 -.22
(av e)-2.75 H(-set to determine if it is an inferior \(subwin-).22 E(do)
99.5 264.4 Q(w\) of a windo)-.275 E 2.75(wc)-.275 G
(reated by the client.)-2.75 E(\(The sa)5.5 E -.165(ve)-.22 G
(-set is a list of other clients' windo).165 E(ws)-.275 E
(that are referred to as sa)99.5 277.4 Q -.165(ve)-.22 G(-set windo).165
E 2.75(ws.\) If)-.275 F(so, the X serv)2.75 E(er reparents the sa)-.165
E -.165(ve)-.22 G(-set windo).165 E(w)-.275 E
(to the closest ancestor so that the sa)99.5 290.4 Q -.165(ve)-.22 G
(-set windo).165 E 2.75(wi)-.275 G 2.75(sn)-2.75 G
(ot an inferior of a windo)-2.75 E 2.75(wc)-.275 G(reated by)-2.75 E
(the client.)99.5 303.4 Q(The reparenting lea)5.5 E -.165(ve)-.22 G 2.75
(su).165 G(nchanged the absolute coordinates \(with respect to the)-2.75
E(root windo)99.5 316.4 Q(w\) of the upper)-.275 E
(-left outer corner of the sa)-.22 E -.165(ve)-.22 G(-set windo).165 E
-.715(w.)-.275 G 23.65<8349>72 333.3 S 2.75(tp)-23.65 G(erforms a)-2.75
E F0(MapW)3.666 E(indo)-.198 E(w)-.11 E F1(request on the sa)3.666 E
-.165(ve)-.22 G(-set windo).165 E 2.75(wi)-.275 G 2.75(ft)-2.75 G(he sa)
-2.75 E -.165(ve)-.22 G(-set windo).165 E 2.75(wi)-.275 G(s)-2.75 E 2.75
(unmapped. The)99.5 346.3 R 2.75(Xs)2.75 G(erv)-2.75 E(er does this e)
-.165 E -.165(ve)-.275 G 2.75(ni).165 G 2.75(ft)-2.75 G(he sa)-2.75 E
-.165(ve)-.22 G(-set windo).165 E 2.75(ww)-.275 G
(as not an inferior of a)-2.86 E(windo)99.5 359.3 Q 2.75(wc)-.275 G
(reated by the client.)-2.75 E 23.65<8349>72 376.2 S 2.75(td)-23.65 G
(estro)-2.75 E(ys all windo)-.11 E(ws created by the client.)-.275 E
23.65<8349>72 393.1 S 2.75(tp)-23.65 G
(erforms the appropriate free request on each nonwindo)-2.75 E 2.75(wr)
-.275 G(esource created by the client)-2.75 E(in the serv)99.5 406.1 Q
(er \(for e)-.165 E(xample,)-.165 E F0 -.275(Fo)3.666 G(nt).275 E F1(,)
.916 E F0(Pixmap)3.666 E F1(,).916 E F0(Cursor)3.666 E F1(,).916 E F0
(Colormap)3.666 E F1 2.75(,a).916 G(nd)-2.75 E F0(GContext)3.666 E F1
(\).).916 E 23.65<8349>72 423 S 2.75(tf)-23.65 G(rees all colors and co\
lormap entries allocated by a client application.)-2.75 E
(Additional processing occurs when the last connection to the X serv)72
439.9 Q(er closes.)-.165 E(An X serv)5.5 E(er goes)-.165 E(through a c)
72 452.9 Q(ycle of ha)-.165 E(ving no connections and ha)-.22 E
(ving some connections.)-.22 E(When the last connec-)5.5 E
(tion to the X serv)72 465.9 Q
(er closes as a result of a connection closing with the close_mode of)
-.165 E F0(Destr)3.666 E(oyAll)-.198 E F1(,).916 E(the X serv)72 478.9 Q
(er does the follo)-.165 E(wing:)-.275 E 23.65<8349>72 495.8 S 2.75(tr)
-23.65 G(esets its state as if it had just been started.)-2.75 E
(The X serv)5.5 E(er be)-.165 E(gins by destro)-.165 E(ying all linger)
-.11 E(-)-.22 E(ing resources from clients that ha)99.5 508.8 Q .33
-.165(ve t)-.22 H(erminated in).165 E F0(RetainP)3.666 E(ermanent)-.22 E
F1(or)3.666 E F0(RetainT)3.666 E(empo-)-1.012 E(rary)99.5 521.8 Q F1
(mode.)3.666 E 23.65<8349>72 538.7 S 2.75(td)-23.65 G(eletes all b)-2.75
E(ut the prede\214ned atom identi\214ers.)-.22 E 23.65<8349>72 555.6 S
2.75(td)-23.65 G(eletes all properties on all root windo)-2.75 E
(ws \(see section 4.3\).)-.275 E 23.65<8349>72 572.5 S 2.75(tr)-23.65 G
(esets all de)-2.75 E(vice maps and attrib)-.275 E(utes \(for e)-.22 E
(xample, k)-.165 E .33 -.165(ey c)-.11 H(lick, bell v).165 E
(olume, and accelera-)-.22 E(tion\) as well as the access control list.)
99.5 585.5 Q 23.65<8349>72 602.4 S 2.75(tr)-23.65 G
(estores the standard root tiles and cursors.)-2.75 E 23.65<8349>72
619.3 S 2.75(tr)-23.65 G(estores the def)-2.75 E(ault font path.)-.11 E
23.65<8349>72 636.2 S 2.75(tr)-23.65 G(estores the input focus to state)
-2.75 E F0 -.22(Po)3.666 G(interRoot).22 E F1(.).916 E(Ho)72 653.1 Q(we)
-.275 E -.165(ve)-.275 G .88 -.44(r, t).165 H(he X serv).44 E
(er does not reset if you close a connection with a close-do)-.165 E
(wn mode set to)-.275 E F0(RetainP)72.916 666.1 Q(ermanent)-.22 E F1(or)
3.666 E F0(RetainT)3.666 E(emporary)-1.012 E F1(.).916 E F0 2.75
(2.7. Using)72 692.1 R(Xlib with Thr)2.75 E(eads)-.198 E F1
(On systems that ha)72 709 Q .33 -.165(ve t)-.22 H
(hreads, support may be pro).165 E
(vided to permit multiple threads to use Xlib)-.165 E(concurrently)72
722 Q(.)-.715 E F0(27)282.5 769 Q 0 Cg EP
%%Page: 28 33
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E/F1 11/Times-Roman@0 SF 1.76 -.88(To i)
72 85 T(nitialize support for concurrent threads, use).88 E F0(XInitThr)
3.666 E(eads)-.198 E F1(.).916 E .44 LW 36 102.75 36 113.75 DL 36 100.75
36 111.75 DL 41.5 99 36 99 DL 43.5 99 38 99 DL 49 99 43.5 99 DL
(Status XInitThreads)72 114.9 Q 1.833(\(\)).916 G(;)-1.833 E 36 114.45
36 125.45 DL 36 112.45 36 123.45 DL 41.5 123.7 36 123.7 DL 43.5 123.7 38
123.7 DL 49 123.7 43.5 123.7 DL(The)72 148.7 Q F0(XInitThr)3.666 E(eads)
-.198 E F1(function initializes Xlib support for concurrent threads.)
3.666 E(This function must)5.5 E(be the \214rst Xlib function a multi-t\
hreaded program calls, and it must complete before an)72 161.7 Q 2.75
(yo)-.165 G(ther)-2.75 E(Xlib call is made.)72 174.7 Q
(This function returns a nonzero status if initialization w)5.5 E
(as successful; other)-.11 E(-)-.22 E(wise, it returns zero.)72 187.7 Q
(On systems that do not support threads, this function al)5.5 E -.11(wa)
-.11 G(ys returns zero.).11 E(It is only necessary to call this functio\
n if multiple threads might use Xlib concurrently)72 204.6 Q 5.5(.I)
-.715 G 2.75(fa)-5.5 G(ll)-2.75 E(calls to Xlib functions are protected\
 by some other access mechanism \(for e)72 217.6 Q(xample, a mutual)
-.165 E -.165(ex)72 230.6 S(clusion lock in a toolkit or through e).165
E(xplicit client programming\), Xlib thread initialization is)-.165 E
(not required.)72 243.6 Q(It is recommended that single-threaded progra\
ms not call this function.)5.5 E 1.76 -.88(To l)72 286.5 T
(ock a display across se).88 E -.165(ve)-.275 G(ral Xlib calls, use).165
E F0(XLockDisplay)3.666 E F1(.).916 E 36 304.25 36 315.25 DL 36 302.25
36 313.25 DL 41.5 300.5 36 300.5 DL 43.5 300.5 38 300.5 DL 49 300.5 43.5
300.5 DL -.22(vo)72 316.4 S(id XLockDisplay).22 E(\().916 E/F2 11
/Times-Italic@0 SF(display).916 E F1(\)).916 E(Display *)88.5 329.4 Q F2
(display)A F1(;).916 E F2(display)72 350.2 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
36 345.85 36 356.85 DL 36 343.85 36 354.85 DL 41.5 355.1 36 355.1 DL
43.5 355.1 38 355.1 DL 49 355.1 43.5 355.1 DL(The)72 380.1 Q F0
(XLockDisplay)3.666 E F1(function locks out all other threads from usin\
g the speci\214ed display)3.666 E 5.5(.O)-.715 G(ther)-5.5 E(threads at\
tempting to use the display will block until the display is unlock)72
393.1 Q(ed by this thread.)-.11 E(Nested calls to)72 406.1 Q F0
(XLockDisplay)3.666 E F1 -.11(wo)3.666 G
(rk correctly; the display will not actually be unlock).11 E(ed until)
-.11 E F0(XUnlockDisplay)72.916 419.1 Q F1
(has been called the same number of times as)3.666 E F0(XLockDisplay)
3.666 E F1 5.5(.T).916 G(his function)-5.5 E(has no ef)72 432.1 Q
(fect unless Xlib w)-.275 E
(as successfully initialized for threads using)-.11 E F0(XInitThr)3.666
E(eads)-.198 E F1(.).916 E 1.76 -.88(To u)72 462 T(nlock a display).88 E
2.75(,u)-.715 G(se)-2.75 E F0(XUnlockDisplay)3.666 E F1(.).916 E 36
479.75 36 490.75 DL 36 477.75 36 488.75 DL 41.5 476 36 476 DL 43.5 476
38 476 DL 49 476 43.5 476 DL -.22(vo)72 491.9 S(id XUnlockDisplay).22 E
(\().916 E F2(display).916 E F1(\)).916 E(Display *)88.5 504.9 Q F2
(display)A F1(;).916 E F2(display)72 525.7 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
36 521.35 36 532.35 DL 36 519.35 36 530.35 DL 41.5 530.6 36 530.6 DL
43.5 530.6 38 530.6 DL 49 530.6 43.5 530.6 DL(The)72 555.6 Q F0
(XUnlockDisplay)3.666 E F1(function allo)3.666 E
(ws other threads to use the speci\214ed display ag)-.275 E 2.75
(ain. An)-.055 F(y)-.165 E(threads that ha)72 568.6 Q .33 -.165(ve b)
-.22 H(lock).165 E(ed on the display are allo)-.11 E(wed to continue.)
-.275 E(Nested locking w)5.5 E(orks correctly;)-.11 E(if)72 581.6 Q F0
(XLockDisplay)3.666 E F1
(has been called multiple times by a thread, then)3.666 E F0
(XUnlockDisplay)3.666 E F1(must be)3.666 E
(called an equal number of times before the display is actually unlock)
72 594.6 Q 2.75(ed. This)-.11 F(function has no)2.75 E(ef)72 607.6 Q
(fect unless Xlib w)-.275 E
(as successfully initialized for threads using)-.11 E F0(XInitThr)3.666
E(eads)-.198 E F1(.).916 E F0 2.75(2.8. Using)72 633.6 R(Inter)2.75 E
(nal Connections)-.165 E F1(In addition to the connection to the X serv)
72 650.5 Q(er)-.165 E 2.75(,a)-.44 G 2.75(nX)-2.75 G
(lib implementation may require connections to)-2.75 E
(other kinds of serv)72 663.5 Q(ers \(for e)-.165 E
(xample, to input method serv)-.165 E(ers as described in chapter 13\).)
-.165 E -.88(To)5.5 G(olkits).88 E(and clients that use multiple displa\
ys, or that use displays in combination with other inputs, need)72 676.5
Q(to obtain these additional connections to correctly block until input\
 is a)72 689.5 Q -.275(va)-.22 G(ilable and need to).275 E
(process that input when it is a)72 702.5 Q -.275(va)-.22 G 2.75
(ilable. Simple).275 F
(clients that use a single display and block for input)2.75 E
(in an Xlib e)72 715.5 Q -.165(ve)-.275 G
(nt function do not need to use these f).165 E(acilities.)-.11 E F0(28)
282.5 769 Q 0 Cg EP
%%Page: 29 34
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E/F1 11/Times-Roman@0 SF 1.76 -.88(To t)
72 85 T(rack internal connections for a display).88 E 2.75(,u)-.715 G
(se)-2.75 E F0(XAddConnectionW)3.666 E(atch)-.715 E F1(.).916 E .44 LW
36 106.65 36 117.65 DL 36 104.65 36 115.65 DL 41.5 102.9 36 102.9 DL
43.5 102.9 38 102.9 DL 49 102.9 43.5 102.9 DL(typedef v)72 118.8 Q
(oid \(*XConnectionW)-.22 E -1.834(atchProc\) \()-.88 F/F2 11
/Times-Italic@0 SF(display).916 E F1(,)A F2(client_data)2.75 E F1(,)A F2
(fd)2.75 E F1(,)A F2(opening)2.75 E F1(,)A F2(watc)2.75 E(h_data)-.165 E
F1(\)).916 E(Display *)88.5 131.8 Q F2(display)A F1(;).916 E(XPointer)
88.5 144.8 Q F2(client_data)2.75 E F1(;).916 E(int)88.5 157.8 Q F2(fd)
2.75 E F1(;).916 E(Bool)88.5 170.8 Q F2(opening)2.75 E F1(;).916 E
(XPointer *)88.5 183.8 Q F2(watc)A(h_data)-.165 E F1(;).916 E
(Status XAddConnectionW)72 209.8 Q -1.834(atch \()-.88 F F2(display).916
E F1(,)A F2(pr)2.75 E(ocedur)-.495 E(e)-.407 E F1(,).916 E F2
(client_data)2.75 E F1(\)).916 E(Display *)88.5 222.8 Q F2(display)A F1
(;).916 E(XW)88.5 235.8 Q(atchProc)-.88 E F2(pr)2.75 E(ocedur)-.495 E(e)
-.407 E F1(;).916 E(XPointer)88.5 248.8 Q F2(client_data)2.75 E F1(;)
.916 E F2(display)72 269.6 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2(pr)72 286.5 Q(ocedur)-.495 E(e)-.407 E F1
(Speci\214es the procedure to be called.)27.692 E F2(client_data)72
303.4 Q F1(Speci\214es the additional client data.)22.5 E 36 299.05 36
310.05 DL 36 297.05 36 308.05 DL 41.5 308.3 36 308.3 DL 43.5 308.3 38
308.3 DL 49 308.3 43.5 308.3 DL(The)72 333.3 Q F0(XAddConnectionW)3.666
E(atch)-.715 E F1(function re)3.666 E
(gisters a procedure to be called each time Xlib opens or)-.165 E
(closes an internal connection for the speci\214ed display)72 346.3 Q
5.5(.T)-.715 G(he procedure is passed the display)-5.5 E 2.75(,t)-.715 G
(he)-2.75 E(speci\214ed client_data, the \214le descriptor for the conn\
ection, a Boolean indicating whether the con-)72 359.3 Q
(nection is being opened or closed, and a pointer to a location for pri)
72 372.3 Q -.275(va)-.275 G(te w).275 E(atch data.)-.11 E(If opening is)
5.5 E F0 -.814(Tr)72.916 385.3 S(ue).814 E F1 2.75(,t).916 G
(he procedure can store a pointer to pri)-2.75 E -.275(va)-.275 G
(te data in the location pointed to by w).275 E(atch_data;)-.11 E(when \
the procedure is later called for this same connection and opening is)72
398.3 Q F0 -.275(Fa)3.666 G(lse).275 E F1 2.75(,t).916 G(he location)
-2.75 E(pointed to by w)72 411.3 Q(atch_data will hold this same pri)
-.11 E -.275(va)-.275 G(te data pointer).275 E(.)-.605 E
(This function can be called at an)72 428.2 Q 2.75(yt)-.165 G
(ime after a display is opened.)-2.75 E(If internal connections already)
5.5 E -.165(ex)72 441.2 S(ist, the re).165 E
(gistered procedure will immediately be called for each of them, before)
-.165 E F0(XAddConnec-)3.666 E(tionW)72 454.2 Q(atch)-.715 E F1
(returns.)3.666 E F0(XAddConnectionW)6.416 E(atch)-.715 E F1
(returns a nonzero status if the procedure is suc-)3.666 E(cessfully re)
72 467.2 Q(gistered; otherwise, it returns zero.)-.165 E(The re)72 484.1
Q(gistered procedure should not call an)-.165 E 2.75(yX)-.165 G
(lib functions.)-2.75 E(If the procedure directly or indi-)5.5 E
(rectly causes the state of internal connections or w)72 497.1 Q
(atch procedures to change, the result is not)-.11 E 2.75(de\214ned. If)
72 510.1 R(Xlib has been initialized for threads, the procedure is call\
ed with the display lock)2.75 E(ed)-.11 E
(and the result of a call by the procedure to an)72 523.1 Q 2.75(yX)
-.165 G(lib function that locks the display is not de\214ned)-2.75 E
(unless the e)72 536.1 Q -.165(xe)-.165 G(cuting thread has e).165 E
(xternally lock)-.165 E(ed the display using)-.11 E F0(XLockDisplay)
3.666 E F1(.).916 E 1.76 -.88(To s)72 566 T
(top tracking internal connections for a display).88 E 2.75(,u)-.715 G
(se)-2.75 E F0(XRemo)3.666 E -.11(ve)-.11 G(ConnectionW).11 E(atch)-.715
E F1(.).916 E 36 583.75 36 594.75 DL 36 581.75 36 592.75 DL 41.5 580 36
580 DL 43.5 580 38 580 DL 49 580 43.5 580 DL(Status XRemo)72 595.9 Q
-.165(ve)-.165 G(ConnectionW).165 E -1.834(atch \()-.88 F F2(display)
.916 E F1(,)A F2(pr)2.75 E(ocedur)-.495 E(e)-.407 E F1(,).916 E F2
(client_data)2.75 E F1(\)).916 E(Display *)88.5 608.9 Q F2(display)A F1
(;).916 E(XW)88.5 621.9 Q(atchProc)-.88 E F2(pr)2.75 E(ocedur)-.495 E(e)
-.407 E F1(;).916 E(XPointer)88.5 634.9 Q F2(client_data)2.75 E F1(;)
.916 E F2(display)72 655.7 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2(pr)72 672.6 Q(ocedur)-.495 E(e)-.407 E F1
(Speci\214es the procedure to be called.)27.692 E F2(client_data)72
689.5 Q F1(Speci\214es the additional client data.)22.5 E 36 685.15 36
696.15 DL 36 683.15 36 694.15 DL 41.5 694.4 36 694.4 DL 43.5 694.4 38
694.4 DL 49 694.4 43.5 694.4 DL(The)72 719.4 Q F0(XRemo)3.666 E -.11(ve)
-.11 G(ConnectionW).11 E(atch)-.715 E F1(function remo)3.666 E -.165(ve)
-.165 G 2.75(sap).165 G(re)-2.75 E(viously re)-.275 E
(gistered connection w)-.165 E(atch)-.11 E 2.75(procedure. The)72 732.4
R(client_data must match the client_data used when the procedure w)2.75
E(as initially)-.11 E F0(29)282.5 769 Q 0 Cg EP
%%Page: 30 35
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E/F1 11/Times-Roman@0 SF(re)72 85 Q
(gistered.)-.165 E 1.76 -.88(To p)72 127.9 T
(rocess input on an internal connection, use).88 E F0(XPr)3.666 E
(ocessInter)-.198 E(nalConnection)-.165 E F1(.).916 E .44 LW 36 145.65
36 156.65 DL 36 143.65 36 154.65 DL 41.5 141.9 36 141.9 DL 43.5 141.9 38
141.9 DL 49 141.9 43.5 141.9 DL -.22(vo)72 157.8 S
(id XProcessInternalConnection).22 E(\().916 E/F2 11/Times-Italic@0 SF
(display).916 E F1(,)A F2(fd)2.75 E F1(\)).916 E(Display *)88.5 170.8 Q
F2(display)A F1(;).916 E(int)88.5 183.8 Q F2(fd)2.75 E F1(;).916 E F2
(display)72 204.6 Q F1(Speci\214es the connection to the X serv)40.221 E
(er)-.165 E(.)-.605 E F2(fd)72 221.5 Q F1
(Speci\214es the \214le descriptor)63.442 E(.)-.605 E 36 217.15 36
228.15 DL 36 215.15 36 226.15 DL 41.5 226.4 36 226.4 DL 43.5 226.4 38
226.4 DL 49 226.4 43.5 226.4 DL(The)72 251.4 Q F0(XPr)3.666 E
(ocessInter)-.198 E(nalConnection)-.165 E F1(function processes input a)
3.666 E -.275(va)-.22 G(ilable on an internal connection.).275 E(This f\
unction should be called for an internal connection only after an opera\
ting system f)72 264.4 Q(acility)-.11 E(\(for e)72 277.4 Q(xample,)-.165
E F0(select)3.666 E F1(or)3.666 E F0(poll)3.666 E F1 2.75(\)h).916 G
(as indicated that input is a)-2.75 E -.275(va)-.22 G
(ilable; otherwise, the ef).275 E(fect is not)-.275 E(de\214ned.)72
290.4 Q 1.76 -.88(To o)72 320.3 T
(btain all of the current internal connections for a display).88 E 2.75
(,u)-.715 G(se)-2.75 E F0(XInter)3.666 E(nalConnectionNum-)-.165 E(bers)
72 333.3 Q F1(.).916 E 36 351.05 36 362.05 DL 36 349.05 36 360.05 DL
41.5 347.3 36 347.3 DL 43.5 347.3 38 347.3 DL 49 347.3 43.5 347.3 DL
(Status XInternalConnectionNumbers)72 363.2 Q(\().916 E F2(display).916
E F1(,)A F2(fd_r)2.75 E(eturn)-.407 E F1(,).916 E F2(count_r)2.75 E
(eturn)-.407 E F1(\)).916 E(Display *)88.5 376.2 Q F2(display)A F1(;)
.916 E(int **)88.5 389.2 Q F2(fd_r)A(eturn)-.407 E F1(;).916 E(int *)
88.5 402.2 Q F2(count_r)A(eturn)-.407 E F1(;).916 E F2(display)72 423 Q
F1(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605
E F2(fd_r)72 439.9 Q(eturn)-.407 E F1(Returns the \214le descriptors.)
30.849 E F2(count_r)72 456.8 Q(eturn)-.407 E F1
(Returns the number of \214le descriptors.)14.965 E 36 452.45 36 463.45
DL 36 450.45 36 461.45 DL 41.5 461.7 36 461.7 DL 43.5 461.7 38 461.7 DL
49 461.7 43.5 461.7 DL(The)72 486.7 Q F0(XInter)3.666 E
(nalConnectionNumbers)-.165 E F1
(function returns a list of the \214le descriptors for all internal)
3.666 E(connections currently open for the speci\214ed display)72 499.7
Q 5.5(.W)-.715 G(hen the allocated list is no longer needed,)-5.5 E
(free it by using)72 512.7 Q F0(XFr)3.666 E(ee)-.198 E F1 5.5(.T).916 G
(his functions returns a nonzero status if the list is successfully all\
o-)-5.5 E(cated; otherwise, it returns zero.)72 525.7 Q F0(30)282.5 769
Q 0 Cg EP
%%Page: 31 36
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E/F1 12/Times-Bold@0 SF(Chapter 3)262.17
111 Q -.216(Wi)239.658 137 S(ndo).216 E 3(wF)-.12 G(unctions)-3 E/F2 11
/Times-Roman@0 SF(In the X W)72 179.9 Q(indo)-.44 E 2.75(wS)-.275 G
(ystem, a windo)-2.75 E 2.75(wi)-.275 G 2.75(sar)-2.75 G
(ectangular area on the screen that lets you vie)-2.75 E 2.75(wg)-.275 G
(raphic)-2.75 E 2.75(output. Client)72 192.9 R
(applications can display o)2.75 E -.165(ve)-.165 G
(rlapping and nested windo).165 E(ws on one or more screens)-.275 E
(that are dri)72 205.9 Q -.165(ve)-.275 G 2.75(nb).165 G 2.75(yXs)-2.75
G(erv)-2.75 E(ers on one or more machines.)-.165 E(Clients who w)5.5 E
(ant to create windo)-.11 E(ws must)-.275 E
(\214rst connect their program to the X serv)72 218.9 Q(er by calling)
-.165 E F0(XOpenDisplay)3.666 E F2 5.5(.T).916 G(his chapter be)-5.5 E
(gins with a)-.165 E(discussion of visual types and windo)72 231.9 Q
2.75(wa)-.275 G(ttrib)-2.75 E 2.75(utes. The)-.22 F
(chapter continues with a discussion of the)2.75 E
(Xlib functions you can use to:)72 244.9 Q 23.65<8343>72 261.8 S
(reate windo)-23.65 E(ws)-.275 E 23.65<8344>72 278.7 S(estro)-23.65 E
2.75(yw)-.11 G(indo)-2.75 E(ws)-.275 E 23.65<834d>72 295.6 S(ap windo)
-23.65 E(ws)-.275 E 23.65<8355>72 312.5 S(nmap windo)-23.65 E(ws)-.275 E
23.65<8343>72 329.4 S(on\214gure windo)-23.65 E(ws)-.275 E 23.65<8343>72
346.3 S(hange windo)-23.65 E 2.75(ws)-.275 G(tacking order)-2.75 E 23.65
<8343>72 363.2 S(hange windo)-23.65 E 2.75(wa)-.275 G(ttrib)-2.75 E
(utes)-.22 E(This chapter also identi\214es the windo)72 380.1 Q 2.75
(wa)-.275 G(ctions that may generate e)-2.75 E -.165(ve)-.275 G(nts.)
.165 E(Note that it is vital that your application conform to the estab\
lished con)72 397 Q -.165(ve)-.44 G(ntions for communicat-).165 E
(ing with windo)72 410 Q 2.75(wm)-.275 G(anagers for it to w)-2.75 E
(ork well with the v)-.11 E(arious windo)-.275 E 2.75(wm)-.275 G
(anagers in use \(see sec-)-2.75 E(tion 14.1\).)72 423 Q -.88(To)5.5 G
(olkits generally adhere to these con).88 E -.165(ve)-.44 G
(ntions for you, relie).165 E(ving you of the b)-.275 E(urden.)-.22 E
-.88(To)72 436 S(olkits also often supersede man).88 E 2.75(yf)-.165 G
(unctions in this chapter with v)-2.75 E(ersions of their o)-.165 E 2.75
(wn. F)-.275 F(or more)-.165 E(information, refer to the documentation \
for the toolkit that you are using.)72 449 Q F0 2.75(3.1. V)72 475 R
(isual T)-.407 E(ypes)-.814 E F2(On some display hardw)72 491.9 Q(are, \
it may be possible to deal with color resources in more than one w)-.11
E(ay)-.11 E(.)-.715 E -.165(Fo)72 504.9 S 2.75(re).165 G(xample, you ma\
y be able to deal with a screen of either 12-bit depth with arbitrary m\
apping)-2.915 E(of pix)72 517.9 Q
(el to color \(pseudo-color\) or 24-bit depth with 8 bits of the pix)
-.165 E(el dedicated to each of red,)-.165 E(green, and blue.)72 530.9 Q
(These dif)5.5 E(ferent w)-.275 E
(ays of dealing with the visual aspects of the screen are called)-.11 E
2.75(visuals. F)72 543.9 R(or each screen of the display)-.165 E 2.75
(,t)-.715 G(here may be a list of v)-2.75 E
(alid visual types supported at dif-)-.275 E
(ferent depths of the screen.)72 556.9 Q(Because def)5.5 E(ault windo)
-.11 E(ws and visual types are de\214ned for each)-.275 E
(screen, most simple applications need not deal with this comple)72
569.9 Q(xity)-.165 E 5.5(.X)-.715 G(lib pro)-5.5 E(vides macros and)
-.165 E(functions that return the def)72 582.9 Q(ault root windo)-.11 E
1.43 -.715(w, t)-.275 H(he def).715 E(ault depth of the def)-.11 E
(ault root windo)-.11 E 1.43 -.715(w, a)-.275 H(nd).715 E(the def)72
595.9 Q(ault visual type \(see sections 2.2.1 and 16.7\).)-.11 E
(Xlib uses an opaque)72 612.8 Q F0 -.407(Vi)3.666 G(sual).407 E F2
(structure that contains information about the possible color mapping.)
3.666 E(The visual utility functions \(see section 16.7\) use an)72
625.8 Q F0(XV)3.666 E(isualInf)-.407 E(o)-.275 E F2
(structure to return this infor)3.666 E(-)-.22 E
(mation to an application.)72 638.8 Q
(The members of this structure pertinent to this discussion are class,)
5.5 E(red_mask, green_mask, blue_mask, bits_per_r)72 651.8 Q
(gb, and colormap_size.)-.198 E(The class member speci-)5.5 E
(\214es one of the possible visual classes of the screen and can be)72
664.8 Q F0(StaticGray)3.666 E F2(,).916 E F0(StaticColor)3.666 E F2(,)
.916 E F0 -.814(Tr)3.666 G(ue-).814 E(Color)72 677.8 Q F2(,).916 E F0
(GrayScale)3.666 E F2(,).916 E F0(PseudoColor)3.666 E F2 2.75(,o).916 G
(r)-2.75 E F0(Dir)3.666 E(ectColor)-.198 E F2(.).916 E(The follo)72
694.7 Q(wing concepts may serv)-.275 E 2.75(et)-.165 G 2.75(om)-2.75 G
(ak)-2.75 E 2.75(et)-.11 G(he e)-2.75 E
(xplanation of visual types clearer)-.165 E 5.5(.T)-.605 G(he screen)
-5.5 E(can be color or grayscale, can ha)72 707.7 Q .33 -.165(ve a c)
-.22 H(olormap that is writable or read-only).165 E 2.75(,a)-.715 G
(nd can also ha)-2.75 E .33 -.165(ve a)-.22 H
(colormap whose indices are decomposed into separate RGB pieces, pro)72
720.7 Q(vided one is not on a)-.165 E F0(31)282.5 769 Q 0 Cg EP
%%Page: 32 37
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E/F1 11/Times-Roman@0 SF
(grayscale screen.)72 85 Q(This leads to the follo)5.5 E(wing diagram:)
-.275 E 46.761(Color Gray-scale)294.994 114.9 R 22.611(R/O R/W R/O)
274.215 127.9 R(R/W)21.384 E .44 LW 431.576 132.65 180.424 132.65 DL
13.75(Undecomposed Static Pseudo Static)185.924 142.9 R(Gray)17.418 E
25.966(Colormap Color)198.139 155.9 R 18.645(Color Gray)19.86 F(Scale)
18.035 E 431.576 160.65 180.424 160.65 DL 431.576 132.65 431.576 160.65
DL 394 132.65 394 160.65 DL 21.587(Decomposed T)191.424 170.9 R 18.233
(rue Direct)-.385 F 25.966(Colormap Color)198.139 183.9 R(Color)19.86 E
352.442 188.65 180.424 188.65 DL 352.442 132.65 352.442 188.65 DL
304.163 132.65 304.163 188.65 DL 262.605 132.65 262.605 188.65 DL
180.424 132.65 180.424 188.65 DL(Conceptually)72 215.8 Q 2.75(,a)-.715 G
2.75(se)-2.75 G(ach pix)-2.75 E(el is read out of video memory for disp\
lay on the screen, it goes through)-.165 E 2.75(al)72 228.8 S
(ook-up stage by inde)-2.75 E(xing into a colormap.)-.165 E
(Colormaps can be manipulated arbitrarily on some)5.5 E(hardw)72 241.8 Q
(are, in limited w)-.11 E(ays on other hardw)-.11 E
(are, and not at all on other hardw)-.11 E 2.75(are. The)-.11 F
(visual types)2.75 E(af)72 254.8 Q(fect the colormap and the RGB v)-.275
E(alues in the follo)-.275 E(wing w)-.275 E(ays:)-.11 E 23.65<8346>72
275.6 S(or)-23.815 E F0(PseudoColor)3.666 E F1 2.75(,ap).916 G(ix)-2.75
E(el v)-.165 E(alue inde)-.275 E -.165(xe)-.165 G 2.75(sac).165 G
(olormap to produce independent RGB v)-2.75 E(alues,)-.275 E
(and the RGB v)99.5 288.6 Q(alues can be changed dynamically)-.275 E(.)
-.715 E<83>72 305.5 Q F0(GrayScale)24.566 E F1(is treated the same w)
3.666 E(ay as)-.11 E F0(PseudoColor)3.666 E F1 -.165(ex)3.666 G
(cept that the primary that dri).165 E -.165(ve)-.275 G 2.75(st).165 G
(he)-2.75 E(screen is unde\214ned.)99.5 318.5 Q
(Thus, the client should al)5.5 E -.11(wa)-.11 G(ys store the same v).11
E(alue for red, green, and)-.275 E(blue in the colormaps.)99.5 331.5 Q
23.65<8346>72 348.4 S(or)-23.815 E F0(Dir)3.666 E(ectColor)-.198 E F1
2.75(,ap).916 G(ix)-2.75 E(el v)-.165 E
(alue is decomposed into separate RGB sub\214elds, and each sub-)-.275 E
(\214eld separately inde)99.5 361.4 Q -.165(xe)-.165 G 2.75(st).165 G
(he colormap for the corresponding v)-2.75 E 2.75(alue. The)-.275 F
(RGB v)2.75 E(alues can be)-.275 E(changed dynamically)99.5 374.4 Q(.)
-.715 E<83>72 391.3 Q F0 -.814(Tr)24.566 G(ueColor).814 E F1
(is treated the same w)3.666 E(ay as)-.11 E F0(Dir)3.666 E(ectColor)
-.198 E F1 -.165(ex)3.666 G(cept that the colormap has prede-).165 E
(\214ned, read-only RGB v)99.5 404.3 Q 2.75(alues. These)-.275 F(RGB v)
2.75 E(alues are serv)-.275 E(er dependent b)-.165 E(ut pro)-.22 E
(vide linear or)-.165 E(near)99.5 417.3 Q(-linear ramps in each primary)
-.22 E(.)-.715 E<83>72 434.2 Q F0(StaticColor)24.566 E F1
(is treated the same w)3.666 E(ay as)-.11 E F0(PseudoColor)3.666 E F1
-.165(ex)3.666 G(cept that the colormap has prede-).165 E
(\214ned, read-only)99.5 447.2 Q 2.75(,s)-.715 G(erv)-2.75 E(er)-.165 E
(-dependent RGB v)-.22 E(alues.)-.275 E<83>72 464.1 Q F0(StaticGray)
24.566 E F1(is treated the same w)3.666 E(ay as)-.11 E F0(StaticColor)
3.666 E F1 -.165(ex)3.666 G(cept that the RGB v).165 E(alues are equal)
-.275 E(for an)99.5 477.1 Q 2.75(ys)-.165 G(ingle pix)-2.75 E(el v)-.165
E(alue, thus resulting in shades of gray)-.275 E(.)-.715 E F0
(StaticGray)6.416 E F1(with a tw)3.666 E(o-entry)-.11 E
(colormap can be thought of as monochrome.)99.5 490.1 Q
(The red_mask, green_mask, and blue_mask members are only de\214ned for)
72 507 Q F0(Dir)3.666 E(ectColor)-.198 E F1(and)3.666 E F0 -.814(Tr)
72.916 520 S(ueColor).814 E F1 5.5(.E).916 G
(ach has one contiguous set of bits with no intersections.)-5.5 E
(The bits_per_r)5.5 E(gb member)-.198 E
(speci\214es the log base 2 of the number of distinct color v)72 533 Q
(alues \(indi)-.275 E(vidually\) of red, green, and)-.275 E 2.75
(blue. Actual)72 546 R(RGB v)2.75 E(alues are unsigned 16-bit numbers.)
-.275 E(The colormap_size member de\214nes the)5.5 E(number of a)72 559
Q -.275(va)-.22 G(ilable colormap entries in a ne).275 E
(wly created colormap.)-.275 E -.165(Fo)5.5 G(r).165 E F0(Dir)3.666 E
(ectColor)-.198 E F1(and)3.666 E F0 -.814(Tr)3.666 G(ue-).814 E(Color)72
572 Q F1 2.75(,t).916 G(his is the size of an indi)-2.75 E(vidual pix)
-.275 E(el sub\214eld.)-.165 E 1.76 -.88(To o)72 601.9 T
(btain the visual ID from a).88 E F0 -.407(Vi)3.666 G(sual).407 E F1
2.75(,u).916 G(se)-2.75 E F0(XV)3.666 E(isualIDFr)-.407 E(omV)-.198 E
(isual)-.407 E F1(.).916 E 36 619.65 36 630.65 DL 36 617.65 36 628.65 DL
41.5 615.9 36 615.9 DL 43.5 615.9 38 615.9 DL 49 615.9 43.5 615.9 DL
-.66(Vi)72 631.8 S(sualID XV).66 E(isualIDFromV)-.66 E -1.834(isual \()
-.66 F/F2 11/Times-Italic@0 SF(visual).916 E F1(\)).916 E -.66(Vi)91.25
644.8 S(sual *).66 E F2(visual).916 E F1(;).916 E F2(visual)72 665.6 Q
F1(Speci\214es the visual type.)45.721 E 36 661.25 36 672.25 DL 36
659.25 36 670.25 DL 41.5 670.5 36 670.5 DL 43.5 670.5 38 670.5 DL 49
670.5 43.5 670.5 DL(The)72 695.5 Q F0(XV)3.666 E(isualIDFr)-.407 E(omV)
-.198 E(isual)-.407 E F1
(function returns the visual ID for the speci\214ed visual type.)3.666 E
F0(32)282.5 769 Q 0 Cg EP
%%Page: 33 38
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E 2.75(3.2. W)72 85 R(indo)-.198 E 2.75
(wA)-.11 G(ttrib)-2.75 E(utes)-.22 E/F1 11/Times-Roman@0 SF(All)72 101.9
Q F0(InputOutput)3.666 E F1(windo)3.666 E(ws ha)-.275 E .33 -.165
(ve a b)-.22 H(order width of zero or more pix).165 E
(els, an optional background,)-.165 E(an e)72 114.9 Q -.165(ve)-.275 G
(nt suppression mask \(which suppresses propag).165 E(ation of e)-.055 E
-.165(ve)-.275 G(nts from children\), and a prop-).165 E
(erty list \(see section 4.3\).)72 127.9 Q(The windo)5.5 E 2.75(wb)-.275
G(order and background can be a solid color or a pattern,)-2.75 E
(called a tile.)72 140.9 Q(All windo)5.5 E(ws e)-.275 E
(xcept the root ha)-.165 E .33 -.165(ve a p)-.22 H
(arent and are clipped by their parent.).165 E(If a win-)5.5 E(do)72
153.9 Q 2.75(wi)-.275 G 2.75(ss)-2.75 G(tack)-2.75 E
(ed on top of another windo)-.11 E 1.43 -.715(w, i)-.275 H 2.75(to).715
G(bscures that other windo)-2.75 E 2.75(wf)-.275 G
(or the purpose of input.)-2.75 E(If a windo)72 166.9 Q 2.75(wh)-.275 G
(as a background \(almost all do\), it obscures the other windo)-2.75 E
2.75(wf)-.275 G(or purposes of out-)-2.75 E 2.75(put. Attempts)72 179.9
R(to output to the obscured area do nothing, and no input e)2.75 E -.165
(ve)-.275 G(nts \(for e).165 E(xample,)-.165 E
(pointer motion\) are generated for the obscured area.)72 192.9 Q -.44
(Wi)72 209.8 S(ndo).44 E(ws also ha)-.275 E .33 -.165(ve a)-.22 H
(ssociated property lists \(see section 4.3\).).165 E(Both)72 226.7 Q F0
(InputOutput)3.666 E F1(and)3.666 E F0(InputOnly)3.666 E F1(windo)3.666
E(ws ha)-.275 E .33 -.165(ve t)-.22 H(he follo).165 E
(wing common attrib)-.275 E(utes, which are)-.22 E(the only attrib)72
239.7 Q(utes of an)-.22 E F0(InputOnly)3.666 E F1(windo)3.666 E(w:)-.275
E 23.65<8377>72 256.6 S(in-gra)-23.65 E(vity)-.22 E 23.65<8365>72 273.5
S -.165(ve)-23.925 G(nt-mask).165 E 23.65<8364>72 290.4 S(o-not-propag)
-23.65 E(ate-mask)-.055 E 23.65<836f>72 307.3 S -.165(ve)-23.815 G
(rride-redirect).165 E 23.65<8363>72 324.2 S(ursor)-23.65 E
(If you specify an)72 341.1 Q 2.75(yo)-.165 G(ther attrib)-2.75 E
(utes for an)-.22 E F0(InputOnly)3.666 E F1(windo)3.666 E 1.43 -.715
(w, a)-.275 H F0(BadMatch)4.381 E F1(error results.)3.666 E F0
(InputOnly)72.916 358 Q F1(windo)3.666 E
(ws are used for controlling input e)-.275 E -.165(ve)-.275 G
(nts in situations where).165 E F0(InputOutput)3.666 E F1(win-)3.666 E
(do)72 371 Q(ws are unnecessary)-.275 E(.)-.715 E F0(InputOnly)6.416 E
F1(windo)3.666 E(ws are in)-.275 E
(visible; can only be used to control such things)-.44 E
(as cursors, input e)72 384 Q -.165(ve)-.275 G
(nt generation, and grabbing; and cannot be used in an).165 E 2.75(yg)
-.165 G(raphics requests.)-2.75 E(Note that)72 397 Q F0(InputOnly)3.666
E F1(windo)3.666 E(ws cannot ha)-.275 E -.165(ve)-.22 G F0(InputOutput)
3.831 E F1(windo)3.666 E(ws as inferiors.)-.275 E -.44(Wi)72 413.9 S
(ndo).44 E(ws ha)-.275 E .33 -.165(ve b)-.22 H(orders of a programmable\
 width and pattern as well as a background pattern or).165 E 2.75
(tile. Pix)72 426.9 R(el v)-.165 E(alues can be used for solid colors.)
-.275 E(The background and border pixmaps can be)5.5 E(destro)72 439.9 Q
(yed immediately after creating the windo)-.11 E 2.75(wi)-.275 G 2.75
(fn)-2.75 G 2.75(of)-2.75 G(urther e)-2.75 E
(xplicit references to them are to be)-.165 E 2.75(made. The)72 452.9 R
(pattern can either be relati)2.75 E .33 -.165(ve t)-.275 H 2.75(ot).165
G(he parent or absolute.)-2.75 E(If)5.5 E F0 -.11(Pa)3.666 G -.198(re)
.11 G(ntRelati).198 E -.11(ve)-.11 G F1 2.75(,t)1.026 G(he par)-2.75 E
(-)-.22 E(ent')72 465.9 Q 2.75(sb)-.605 G(ackground is used.)-2.75 E
(When windo)72 482.8 Q(ws are \214rst created, the)-.275 E 2.75(ya)-.165
G(re not visible \(not mapped\) on the screen.)-2.75 E(An)5.5 E 2.75(yo)
-.165 G(utput to a)-2.75 E(windo)72 495.8 Q 2.75(wt)-.275 G
(hat is not visible on the screen and that does not ha)-2.75 E .33 -.165
(ve b)-.22 H(acking store will be discarded.).165 E
(An application may wish to create a windo)72 508.8 Q 2.75(wl)-.275 G
(ong before it is mapped to the screen.)-2.75 E(When a win-)5.5 E(do)72
521.8 Q 2.75(wi)-.275 G 2.75(se)-2.75 G -.165(ve)-3.025 G
(ntually mapped to the screen \(using).165 E F0(XMapW)3.666 E(indo)-.198
E(w)-.11 E F1(\), the X serv).916 E(er generates an)-.165 E F0(Expose)
72.916 534.8 Q F1 -2.365 -.275(ev e)3.666 H(nt for the windo).275 E 2.75
(wi)-.275 G 2.75(fb)-2.75 G(acking store has not been maintained.)-2.75
E 2.75(Aw)72 551.7 S(indo)-2.75 E 2.75(wm)-.275 G(anager can o)-2.75 E
-.165(ve)-.165 G
(rride your choice of size, border width, and position for a top-le).165
E -.165(ve)-.275 G(l).165 E(windo)72 564.7 Q 4.18 -.715(w. Y)-.275 H(ou\
r program must be prepared to use the actual size and position of the t\
op windo)-.495 E 4.18 -.715(w. I)-.275 H(t).715 E(is not acceptable for\
 a client application to resize itself unless in direct response to a h\
uman com-)72 577.7 Q(mand to do so.)72 590.7 Q
(Instead, either your program should use the space gi)5.5 E -.165(ve)
-.275 G 2.75(nt).165 G 2.75(oi)-2.75 G(t, or if the space is too)-2.75 E
(small for an)72 603.7 Q 2.75(yu)-.165 G(seful w)-2.75 E
(ork, your program might ask the user to resize the windo)-.11 E 4.18
-.715(w. T)-.275 H(he border of).715 E(your top-le)72 616.7 Q -.165(ve)
-.275 G 2.75(lw).165 G(indo)-2.75 E 2.75(wi)-.275 G 2.75(sc)-2.75 G
(onsidered f)-2.75 E(air g)-.11 E(ame for windo)-.055 E 2.75(wm)-.275 G
(anagers.)-2.75 E 1.76 -.88(To s)72 633.6 T(et an attrib).88 E
(ute of a windo)-.22 E 1.43 -.715(w, s)-.275 H
(et the appropriate member of the).715 E F0(XSetW)3.666 E(indo)-.198 E
(wAttrib)-.11 E(utes)-.22 E F1(struc-)3.666 E
(ture and OR in the corresponding v)72 646.6 Q
(alue bitmask in your subsequent calls to)-.275 E F0(XCr)3.666 E(eateW)
-.198 E(indo)-.198 E(w)-.11 E F1(and)72 659.6 Q F0(XChangeW)3.666 E
(indo)-.198 E(wAttrib)-.11 E(utes)-.22 E F1 2.75(,o).916 G 2.75(ru)-2.75
G(se one of the other con)-2.75 E -.165(ve)-.44 G
(nience functions that set the).165 E(appropriate attrib)72 672.6 Q 2.75
(ute. The)-.22 F(symbols for the v)2.75 E(alue mask bits and the)-.275 E
F0(XSetW)3.666 E(indo)-.198 E(wAttrib)-.11 E(utes)-.22 E F1
(structure are:)72 685.6 Q F0(33)282.5 769 Q 0 Cg EP
%%Page: 34 39
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E .44 LW 36 76.75 36 87.75 DL 36 74.75
36 85.75 DL 41.5 73 36 73 DL 43.5 73 38 73 DL 49 73 43.5 73 DL/F1 11
/Times-Roman@0 SF(/* W)72 88.9 Q(indo)-.44 E 2.75(wa)-.275 G(ttrib)-2.75
E(ute v)-.22 E(alue mask bits */)-.275 E(#de\214ne)72 108.4 Q F0
(CWBackPixmap)125.416 108.4 Q F1(\(1L<<0\))321 108.4 Q(#de\214ne)72
121.4 Q F0(CWBackPixel)125.416 121.4 Q F1(\(1L<<1\))321 121.4 Q
(#de\214ne)72 134.4 Q F0(CWBorderPixmap)125.416 134.4 Q F1(\(1L<<2\))321
134.4 Q(#de\214ne)72 147.4 Q F0(CWBorderPixel)125.416 147.4 Q F1
(\(1L<<3\))321 147.4 Q(#de\214ne)72 160.4 Q F0(CWBitGra)125.416 160.4 Q
(vity)-.275 E F1(\(1L<<4\))321 160.4 Q(#de\214ne)72 173.4 Q F0(CWW)
125.416 173.4 Q(inGra)-.198 E(vity)-.275 E F1(\(1L<<5\))321 173.4 Q
(#de\214ne)72 186.4 Q F0(CWBackingStor)125.416 186.4 Q(e)-.198 E F1
(\(1L<<6\))321 186.4 Q(#de\214ne)72 199.4 Q F0(CWBackingPlanes)125.416
199.4 Q F1(\(1L<<7\))321 199.4 Q(#de\214ne)72 212.4 Q F0(CWBackingPixel)
125.416 212.4 Q F1(\(1L<<8\))321 212.4 Q(#de\214ne)72 225.4 Q F0(CW)
125.416 225.4 Q(Ov)-.11 E(errideRedir)-.11 E(ect)-.198 E F1(\(1L<<9\))
321 225.4 Q(#de\214ne)72 238.4 Q F0(CWSa)125.416 238.4 Q -.11(ve)-.275 G
(Under).11 E F1(\(1L<<10\))321 238.4 Q(#de\214ne)72 251.4 Q F0(CWEv)
125.416 251.4 Q(entMask)-.11 E F1(\(1L<<11\))321 251.4 Q(#de\214ne)72
264.4 Q F0(CWDontPr)125.416 264.4 Q(opagate)-.198 E F1(\(1L<<12\))321
264.4 Q(#de\214ne)72 277.4 Q F0(CWColormap)125.416 277.4 Q F1
(\(1L<<13\))321 277.4 Q(#de\214ne)72 290.4 Q F0(CWCursor)125.416 290.4 Q
F1(\(1L<<14\))321 290.4 Q(/* V)72 316.4 Q(alues */)-1.221 E
(typedef struct {)72 342.4 Q(Pixmap background_pixmap;)108 355.4 Q
(/* background, None, or P)50.145 E(arentRelati)-.165 E .33 -.165(ve *)
-.275 H(/).165 E(unsigned long background_pix)108 368.4 Q 30.147(el; /*)
-.165 F(background pix)2.75 E(el */)-.165 E(Pixmap border_pixmap;)108
381.4 Q(/* border of the windo)73.366 E 2.75(wo)-.275 G 2.75(rC)-2.75 G
(op)-2.75 E(yFromP)-.11 E(arent */)-.165 E(unsigned long border_pix)108
394.4 Q 53.368(el; /*)-.165 F(border pix)2.75 E(el v)-.165 E(alue */)
-.275 E(int bit_gra)108 407.4 Q 111.767(vity; /*)-.22 F(one of bit gra)
2.75 E(vity v)-.22 E(alues */)-.275 E(int win_gra)108 420.4 Q 106.883
(vity; /*)-.22 F(one of the windo)2.75 E 2.75(wg)-.275 G(ra)-2.75 E
(vity v)-.22 E(alues */)-.275 E(int backing_store;)108 433.4 Q
(/* NotUseful, WhenMapped, Al)100.866 E -.11(wa)-.11 G(ys */).11 E
(unsigned long backing_planes;)108 446.4 Q(/* planes to be preserv)
43.732 E(ed if possible */)-.165 E(unsigned long backing_pix)108 459.4 Q
47.252(el; /*)-.165 F -.275(va)2.75 G(lue to use in restoring planes */)
.275 E(Bool sa)108 472.4 Q -.165(ve)-.22 G 100.338(_under; /*).165 F
(should bits under be sa)2.75 E -.165(ve)-.22 G(d? \(popups\) */).165 E
(long e)108 485.4 Q -.165(ve)-.275 G 99.777(nt_mask; /*).165 F(set of e)
2.75 E -.165(ve)-.275 G(nts that should be sa).165 E -.165(ve)-.22 G
2.75(d*).165 G(/)-2.75 E(long do_not_propag)108 498.4 Q 43.787
(ate_mask; /*)-.055 F(set of e)2.75 E -.165(ve)-.275 G
(nts that should not propag).165 E(ate */)-.055 E(Bool o)108 511.4 Q
-.165(ve)-.165 G 74.631(rride_redirect; /*).165 F(boolean v)2.75 E
(alue for o)-.275 E -.165(ve)-.165 G(rride_redirect */).165 E
(Colormap colormap;)108 524.4 Q
(/* color map to be associated with windo)88.645 E 2.75(w*)-.275 G(/)
-2.75 E(Cursor cursor;)108 537.4 Q
(/* cursor to be displayed \(or None\) */)116.761 E 2.75(}X)72 550.4 S
(SetW)-2.75 E(indo)-.44 E(wAttrib)-.275 E(utes;)-.22 E 36 552.55 36
563.55 DL 36 550.55 36 561.55 DL 41.5 561.8 36 561.8 DL 43.5 561.8 38
561.8 DL 49 561.8 43.5 561.8 DL(The follo)72 586.8 Q(wing lists the def)
-.275 E(aults for each windo)-.11 E 2.75(wa)-.275 G(ttrib)-2.75 E
(ute and indicates whether the attrib)-.22 E(ute is)-.22 E
(applicable to)72 599.8 Q F0(InputOutput)3.666 E F1(and)3.666 E F0
(InputOnly)3.666 E F1(windo)3.666 E(ws:)-.275 E 440.086 611.05 72 611.05
DL F0(Attrib)72 627.3 Q(ute)-.22 E(Default)191.086 627.3 Q(InputOutput)
302.102 627.3 Q(InputOnly)383.402 627.3 Q 440.086 638.05 72 638.05 DL F1
(background-pixmap)72 654.3 Q F0(None)192.002 654.3 Q F1 -1.1(Ye)325.583
654.3 S(s)1.1 E(No)404.565 654.3 Q(background-pix)72 667.3 Q 38.907
(el Unde\214ned)-.165 F -1.1(Ye)88.671 G 62.977(sN)1.1 G(o)-62.977 E
(border)72 680.3 Q(-pixmap)-.22 E F0(CopyFr)192.002 680.3 Q(omP)-.198 E
(ar)-.11 E(ent)-.198 E F1 -1.1(Ye)325.583 680.3 S(s)1.1 E(No)404.565
680.3 Q(border)72 693.3 Q(-pix)-.22 E 62.348(el Unde\214ned)-.165 F -1.1
(Ye)88.671 G 62.977(sN)1.1 G(o)-62.977 E(bit-gra)72 706.3 Q(vity)-.22 E
F0 -.275(Fo)192.002 706.3 S -.11(rg).275 G(etGra).11 E(vity)-.275 E F1
-1.1(Ye)325.583 706.3 S(s)1.1 E(No)404.565 706.3 Q(win-gra)72 719.3 Q
(vity)-.22 E F0(NorthW)192.002 719.3 Q(estGra)-.715 E(vity)-.275 E F1
-1.1(Ye)325.583 719.3 S(s)1.1 E -1.1(Ye)403.283 719.3 S(s)1.1 E F0(34)
282.5 769 Q 0 Cg EP
%%Page: 35 40
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E .44 LW 440.086 76.75 72 76.75 DL
(Attrib)72 93 Q(ute)-.22 E(Default)191.086 93 Q(InputOutput)302.102 93 Q
(InputOnly)383.402 93 Q 440.086 103.75 72 103.75 DL/F1 11/Times-Roman@0
SF(backing-store)72 120 Q F0(NotUseful)192.002 120 Q F1 -1.1(Ye)325.583
120 S(s)1.1 E(No)404.565 120 Q 49.742(backing-planes All)72 133 R 94.776
(ones Y)2.75 F 60.227(es No)-1.1 F(backing-pix)72 146 Q 56.012(el zero)
-.165 F -1.1(Ye)115.566 G 62.977(sN)1.1 G(o)-62.977 E(sa)72 159 Q -.165
(ve)-.22 G(-under).165 E F0 -.275(Fa)192.002 159 S(lse).275 E F1 -1.1
(Ye)325.583 159 S(s)1.1 E(No)404.565 159 Q -2.365 -.275(ev e)72 172 T
66.066(nt-mask empty).275 F 89.276(set Y)2.75 F 58.945(es Y)-1.1 F(es)
-1.1 E(do-not-propag)72 185 Q 13.75(ate-mask empty)-.055 F 89.276(set Y)
2.75 F 58.945(es Y)-1.1 F(es)-1.1 E -.165(ove)72 198 S(rride-redirect)
.165 E F0 -.275(Fa)192.002 198 S(lse).275 E F1 -1.1(Ye)325.583 198 S(s)
1.1 E -1.1(Ye)403.283 198 S(s)1.1 E(colormap)72 211 Q F0(CopyFr)192.002
211 Q(omP)-.198 E(ar)-.11 E(ent)-.198 E F1 -1.1(Ye)325.583 211 S(s)1.1 E
(No)404.565 211 Q(cursor)72 224 Q F0(None)192.002 224 Q F1 -1.1(Ye)
325.583 224 S(s)1.1 E -1.1(Ye)403.283 224 S(s)1.1 E 440.086 228.75 72
228.75 DL F0 2.75(3.2.1. Backgr)72 258.5 R(ound Attrib)-.198 E(ute)-.22
E F1(Only)72 275.4 Q F0(InputOutput)3.666 E F1(windo)3.666 E(ws can ha)
-.275 E .33 -.165(ve a b)-.22 H 2.75(ackground. Y).165 F
(ou can set the background of an)-1.21 E F0(InputOutput)72.916 288.4 Q
F1(windo)3.666 E 2.75(wb)-.275 G 2.75(yu)-2.75 G(sing a pix)-2.75 E
(el or a pixmap.)-.165 E(The background-pixmap attrib)72 305.3 Q
(ute of a windo)-.22 E 2.75(ws)-.275 G
(peci\214es the pixmap to be used for a windo)-2.75 E(w')-.275 E(s)-.605
E 2.75(background. This)72 318.3 R(pixmap can be of an)2.75 E 2.75(ys)
-.165 G(ize, although some sizes may be f)-2.75 E(aster than others.)
-.11 E(The)5.5 E(background-pix)72 331.3 Q(el attrib)-.165 E
(ute of a windo)-.22 E 2.75(ws)-.275 G(peci\214es a pix)-2.75 E(el v)
-.165 E(alue used to paint a windo)-.275 E(w')-.275 E 2.75(sb)-.605 G
(ack-)-2.75 E(ground in a single color)72 344.3 Q(.)-.605 E -1.21(Yo)72
361.2 S 2.75(uc)1.21 G(an set the background-pixmap to a pixmap,)-2.75 E
F0(None)3.666 E F1(\(def)3.666 E(ault\), or)-.11 E F0 -.11(Pa)3.666 G
-.198(re).11 G(ntRelati).198 E -.11(ve)-.11 G F1 5.5(.Y)1.026 G(ou can)
-6.71 E(set the background-pix)72 374.2 Q(el of a windo)-.165 E 2.75(wt)
-.275 G 2.75(oa)-2.75 G .33 -.165(ny p)-2.75 H(ix).165 E(el v)-.165 E
(alue \(no def)-.275 E 2.75(ault\). If)-.11 F(you specify a back-)2.75 E
(ground-pix)72 387.2 Q(el, it o)-.165 E -.165(ve)-.165 G
(rrides either the def).165 E(ault background-pixmap or an)-.11 E 2.75
(yv)-.165 G(alue you may ha)-3.025 E .33 -.165(ve s)-.22 H(et in).165 E
(the background-pixmap.)72 400.2 Q 2.75(Ap)5.5 G
(ixmap of an unde\214ned size that is \214lled with the background-pix)
-2.75 E(el is)-.165 E(used for the background.)72 413.2 Q
(Range checking is not performed on the background pix)5.5 E
(el; it simply is)-.165 E(truncated to the appropriate number of bits.)
72 426.2 Q(If you set the background-pixmap, it o)72 443.1 Q -.165(ve)
-.165 G(rrides the def).165 E 2.75(ault. The)-.11 F
(background-pixmap and the win-)2.75 E(do)72 456.1 Q 2.75(wm)-.275 G
(ust ha)-2.75 E .33 -.165(ve t)-.22 H(he same depth, or a).165 E F0
(BadMatch)3.666 E F1(error results.)3.666 E
(If you set background-pixmap to)5.5 E F0(None)72.916 469.1 Q F1 2.75
(,t).916 G(he windo)-2.75 E 2.75(wh)-.275 G(as no de\214ned background.)
-2.75 E(If you set the background-pixmap to)5.5 E F0 -.11(Pa)3.666 G
-.198(re).11 G(ntRel-).198 E(ati)72 482.1 Q -.11(ve)-.11 G F1(:)1.026 E
23.65<8354>72 499 S(he parent windo)-23.65 E(w')-.275 E 2.75(sb)-.605 G
(ackground-pixmap is used.)-2.75 E(The child windo)5.5 E 1.43 -.715
(w, h)-.275 H -.275(ow).715 G -2.365 -.275(ev e).275 H .88 -.44(r, m)
.275 H(ust ha).44 E -.165(ve)-.22 G(the same depth as its parent, or a)
99.5 512 Q F0(BadMatch)3.666 E F1(error results.)3.666 E 23.65<8349>72
528.9 S 2.75(ft)-23.65 G(he parent windo)-2.75 E 2.75(wh)-.275 G
(as a background-pixmap of)-2.75 E F0(None)3.666 E F1 2.75(,t).916 G
(he windo)-2.75 E 2.75(wa)-.275 G(lso has a back-)-2.75 E
(ground-pixmap of)99.5 541.9 Q F0(None)3.666 E F1(.).916 E 23.65<8341>72
558.8 S(cop)-20.9 E 2.75(yo)-.11 G 2.75(ft)-2.75 G(he parent windo)-2.75
E(w')-.275 E 2.75(sb)-.605 G(ackground-pixmap is not made.)-2.75 E
(The parent')5.5 E 2.75(sb)-.605 G(ackground-)-2.75 E(pixmap is e)99.5
571.8 Q(xamined each time the child windo)-.165 E(w')-.275 E 2.75(sb)
-.605 G(ackground-pixmap is required.)-2.75 E 23.65<8354>72 588.7 S
(he background tile origin al)-23.65 E -.11(wa)-.11 G
(ys aligns with the parent windo).11 E(w')-.275 E 2.75(sb)-.605 G
(ackground tile origin.)-2.75 E(If the background-pixmap is not)99.5
601.7 Q F0 -.11(Pa)3.666 G -.198(re).11 G(ntRelati).198 E -.11(ve)-.11 G
F1 2.75(,t)1.026 G(he background tile origin is the child)-2.75 E(windo)
99.5 614.7 Q(w')-.275 E 2.75(so)-.605 G(rigin.)-2.75 E(Setting a ne)72
631.6 Q 2.75(wb)-.275 G
(ackground, whether by setting background-pixmap or background-pix)-2.75
E(el, o)-.165 E -.165(ve)-.165 G(rrides).165 E(an)72 644.6 Q 2.75(yp)
-.165 G(re)-2.75 E(vious background.)-.275 E
(The background-pixmap can be freed immediately if no further)5.5 E
-.165(ex)72 657.6 S(plicit reference is made to it \(the X serv).165 E
(er will k)-.165 E(eep a cop)-.11 E 2.75(yt)-.11 G 2.75(ou)-2.75 G
(se when needed\).)-2.75 E(If you later)5.5 E(dra)72 670.6 Q 2.75(wi)
-.165 G(nto the pixmap used for the background, what happens is unde\
\214ned because the X imple-)-2.75 E(mentation is free to mak)72 683.6 Q
2.75(eac)-.11 G(op)-2.75 E 2.75(yo)-.11 G 2.75(ft)-2.75 G
(he pixmap or to use the same pixmap.)-2.75 E(When no v)72 700.5 Q
(alid contents are a)-.275 E -.275(va)-.22 G(ilable for re).275 E
(gions of a windo)-.165 E 2.75(wa)-.275 G(nd either the re)-2.75 E
(gions are visible or)-.165 E(the serv)72 713.5 Q
(er is maintaining backing store, the serv)-.165 E
(er automatically tiles the re)-.165 E(gions with the win-)-.165 E(do)72
726.5 Q(w')-.275 E 2.75(sb)-.605 G(ackground unless the windo)-2.75 E
2.75(wh)-.275 G(as a background of)-2.75 E F0(None)3.666 E F1 5.5(.I)
.916 G 2.75(ft)-5.5 G(he background is)-2.75 E F0(None)3.666 E F1 2.75
(,t).916 G(he)-2.75 E F0(35)282.5 769 Q 0 Cg EP
%%Page: 36 41
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E/F1 11/Times-Roman@0 SF(pre)72 85 Q
(vious screen contents from other windo)-.275 E
(ws of the same depth as the windo)-.275 E 2.75(wa)-.275 G
(re simply left in)-2.75 E
(place as long as the contents come from the parent of the windo)72 98 Q
2.75(wo)-.275 G 2.75(ra)-2.75 G 2.75(ni)-2.75 G(nferior of the parent.)
-2.75 E(Otherwise, the initial contents of the e)72 111 Q(xposed re)
-.165 E(gions are unde\214ned.)-.165 E F0(Expose)6.416 E F1 -2.365 -.275
(ev e)3.666 H(nts are then gen-).275 E(erated for the re)72 124 Q
(gions, e)-.165 E -.165(ve)-.275 G 2.75(ni).165 G 2.75(ft)-2.75 G
(he background-pixmap is)-2.75 E F0(None)3.666 E F1
(\(see section 10.9\).)3.666 E F0 2.75(3.2.2. Border)72 150 R(Attrib)
2.75 E(ute)-.22 E F1(Only)72 166.9 Q F0(InputOutput)3.666 E F1(windo)
3.666 E(ws can ha)-.275 E .33 -.165(ve a b)-.22 H(order).165 E 5.5(.Y)
-.605 G(ou can set the border of an)-6.71 E F0(InputOutput)3.666 E F1
(win-)3.666 E(do)72 179.9 Q 2.75(wb)-.275 G 2.75(yu)-2.75 G(sing a pix)
-2.75 E(el or a pixmap.)-.165 E(The border)72 196.8 Q(-pixmap attrib)
-.22 E(ute of a windo)-.22 E 2.75(ws)-.275 G
(peci\214es the pixmap to be used for a windo)-2.75 E(w')-.275 E 2.75
(sb)-.605 G(order)-2.75 E(.)-.605 E(The border)72 209.8 Q(-pix)-.22 E
(el attrib)-.165 E(ute of a windo)-.22 E 2.75(ws)-.275 G
(peci\214es a pixmap of unde\214ned size \214lled with that pix)-2.75 E
(el)-.165 E(be used for a windo)72 222.8 Q(w')-.275 E 2.75(sb)-.605 G
(order)-2.75 E 5.5(.R)-.605 G
(ange checking is not performed on the background pix)-5.5 E
(el; it sim-)-.165 E
(ply is truncated to the appropriate number of bits.)72 235.8 Q
(The border tile origin is al)5.5 E -.11(wa)-.11 G(ys the same as the)
.11 E(background tile origin.)72 248.8 Q -1.21(Yo)72 265.7 S 2.75(uc)
1.21 G(an also set the border)-2.75 E(-pixmap to a pixmap of an)-.22 E
2.75(ys)-.165 G(ize \(some may be f)-2.75 E(aster than others\) or to)
-.11 E F0(CopyFr)72.916 278.7 Q(omP)-.198 E(ar)-.11 E(ent)-.198 E F1
(\(def)3.666 E 2.75(ault\). Y)-.11 F(ou can set the border)-1.21 E(-pix)
-.22 E(el to an)-.165 E 2.75(yp)-.165 G(ix)-2.75 E(el v)-.165 E
(alue \(no def)-.275 E(ault\).)-.11 E(If you set a border)72 295.6 Q
(-pixmap, it o)-.22 E -.165(ve)-.165 G(rrides the def).165 E 2.75
(ault. The)-.11 F(border)2.75 E(-pixmap and the windo)-.22 E 2.75(wm)
-.275 G(ust)-2.75 E(ha)72 308.6 Q .33 -.165(ve t)-.22 H
(he same depth, or a).165 E F0(BadMatch)3.666 E F1(error results.)3.666
E(If you set the border)5.5 E(-pixmap to)-.22 E F0(Copy-)3.666 E(Fr)72
321.6 Q(omP)-.198 E(ar)-.11 E(ent)-.198 E F1 2.75(,t).916 G
(he parent windo)-2.75 E(w')-.275 E 2.75(sb)-.605 G(order)-2.75 E
(-pixmap is copied.)-.22 E(Subsequent changes to the parent)5.5 E(windo)
72 334.6 Q(w')-.275 E 2.75(sb)-.605 G(order attrib)-2.75 E
(ute do not af)-.22 E(fect the child windo)-.275 E 4.18 -.715(w. H)-.275
H -.275(ow).715 G -2.365 -.275(ev e).275 H .88 -.44(r, t).275 H
(he child windo).44 E 2.75(wm)-.275 G(ust ha)-2.75 E -.165(ve)-.22 G
(the same depth as the parent windo)72 347.6 Q 1.43 -.715(w, o)-.275 H
2.75(ra).715 G F0(BadMatch).916 E F1(error results.)3.666 E(The border)
72 364.5 Q(-pixmap can be freed immediately if no further e)-.22 E
(xplicit reference is made to it.)-.165 E(If you)5.5 E(later dra)72
377.5 Q 2.75(wi)-.165 G(nto the pixmap used for the border)-2.75 E 2.75
(,w)-.44 G(hat happens is unde\214ned because the X imple-)-2.75 E
(mentation is free either to mak)72 390.5 Q 2.75(eac)-.11 G(op)-2.75 E
2.75(yo)-.11 G 2.75(ft)-2.75 G(he pixmap or to use the same pixmap.)
-2.75 E(If you specify a)5.5 E(border)72 403.5 Q(-pix)-.22 E(el, it o)
-.165 E -.165(ve)-.165 G(rrides either the def).165 E(ault border)-.11 E
(-pixmap or an)-.22 E 2.75(yv)-.165 G(alue you may ha)-3.025 E .33 -.165
(ve s)-.22 H(et in the).165 E(border)72 416.5 Q 2.75(-pixmap. All)-.22 F
(pix)2.75 E(els in the windo)-.165 E(w')-.275 E 2.75(sb)-.605 G
(order will be set to the border)-2.75 E(-pix)-.22 E 2.75(el. Setting)
-.165 F 2.75(an)2.75 G -.275(ew)-2.75 G(border)72 429.5 Q 2.75(,w)-.44 G
(hether by setting border)-2.75 E(-pix)-.22 E(el or by setting border)
-.165 E(-pixmap, o)-.22 E -.165(ve)-.165 G(rrides an).165 E 2.75(yp)
-.165 G(re)-2.75 E(vious bor)-.275 E(-)-.22 E(der)72 442.5 Q(.)-.605 E
(Output to a windo)72 459.4 Q 2.75(wi)-.275 G 2.75(sa)-2.75 G -.11(lwa)
-2.75 G(ys clipped to the inside of the windo).11 E 4.18 -.715(w. T)
-.275 H(herefore, graphics operations).715 E(ne)72 472.4 Q -.165(ve)
-.275 G 2.75(ra).165 G -.275(ff)-2.75 G(ect the windo).275 E 2.75(wb)
-.275 G(order)-2.75 E(.)-.605 E F0 2.75(3.2.3. Gra)72 498.4 R
(vity Attrib)-.275 E(utes)-.22 E F1(The bit gra)72 515.3 Q
(vity of a windo)-.22 E 2.75(wd)-.275 G(e\214nes which re)-2.75 E
(gion of the windo)-.165 E 2.75(ws)-.275 G(hould be retained when an)
-2.75 E F0(InputOutput)72.916 528.3 Q F1(windo)3.666 E 2.75(wi)-.275 G
2.75(sr)-2.75 G 2.75(esized. The)-2.75 F(def)2.75 E(ault v)-.11 E
(alue for the bit-gra)-.275 E(vity attrib)-.22 E(ute is)-.22 E F0 -.275
(Fo)3.666 G -.11(rg).275 G(etGra).11 E(v-)-.275 E(ity)72 541.3 Q F1 5.5
(.T).916 G(he windo)-5.5 E 2.75(wg)-.275 G(ra)-2.75 E(vity of a windo)
-.22 E 2.75(wa)-.275 G(llo)-2.75 E(ws you to de\214ne ho)-.275 E 2.75
(wt)-.275 G(he)-2.75 E F0(InputOutput)3.666 E F1(or)3.666 E F0
(InputOnly)3.666 E F1(windo)72 554.3 Q 2.75(ws)-.275 G
(hould be repositioned if its parent is resized.)-2.75 E(The def)5.5 E
(ault v)-.11 E(alue for the win-gra)-.275 E(vity)-.22 E(attrib)72 567.3
Q(ute is)-.22 E F0(NorthW)3.666 E(estGra)-.715 E(vity)-.275 E F1(.).916
E(If the inside width or height of a windo)72 584.2 Q 2.75(wi)-.275 G
2.75(sn)-2.75 G(ot changed and if the windo)-2.75 E 2.75(wi)-.275 G 2.75
(sm)-2.75 G -.165(ove)-2.75 G 2.75(do).165 G 2.75(ri)-2.75 G(ts border)
-2.75 E(is changed, then the contents of the windo)72 597.2 Q 2.75(wa)
-.275 G(re not lost b)-2.75 E(ut mo)-.22 E .33 -.165(ve w)-.165 H
(ith the windo).165 E 4.18 -.715(w. C)-.275 H(hanging the).715 E
(inside width or height of the windo)72 610.2 Q 2.75(wc)-.275 G
(auses its contents to be mo)-2.75 E -.165(ve)-.165 G 2.75(do).165 G
2.75(rl)-2.75 G(ost \(depending on the)-2.75 E(bit-gra)72 623.2 Q
(vity of the windo)-.22 E(w\) and causes children to be recon\214gured \
\(depending on their win-gra)-.275 E(v-)-.22 E 2.75(ity\). F)72 636.2 R
(or a change of width and height, the \(x, y\) pairs are de\214ned:)
-.165 E .44 LW 264.88 651.35 72 651.35 DL F0(Gra)72 667.6 Q(vity Dir)
-.275 E 20.257(ection Coordinates)-.198 F 264.88 678.35 72 678.35 DL
(NorthW)72.916 694.6 Q(estGra)-.715 E(vity)-.275 E F1(\(0, 0\))177.936
694.6 Q F0(NorthGra)72.916 707.6 Q(vity)-.275 E F1(\(W)177.936 707.6 Q
(idth/2, 0\))-.44 E F0(36)282.5 769 Q 0 Cg EP
%%Page: 37 42
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E(NorthEastGra)72.916 85 Q(vity)-.275 E
/F1 11/Times-Roman@0 SF(\(W)177.936 85 Q(idth, 0\))-.44 E F0 -.715(We)
72.916 98 S(stGra).715 E(vity)-.275 E F1(\(0, Height/2\))177.936 98 Q F0
(CenterGra)72.916 111 Q(vity)-.275 E F1(\(W)177.936 111 Q
(idth/2, Height/2\))-.44 E F0(EastGra)72.916 124 Q(vity)-.275 E F1(\(W)
177.936 124 Q(idth, Height/2\))-.44 E F0(SouthW)72.916 137 Q(estGra)
-.715 E(vity)-.275 E F1(\(0, Height\))177.936 137 Q F0(SouthGra)72.916
150 Q(vity)-.275 E F1(\(W)177.936 150 Q(idth/2, Height\))-.44 E F0
(SouthEastGra)72.916 163 Q(vity)-.275 E F1(\(W)177.936 163 Q
(idth, Height\))-.44 E .44 LW 264.88 173.75 72 173.75 DL(When a windo)72
194.4 Q 2.75(ww)-.275 G(ith one of these bit-gra)-2.75 E(vity v)-.22 E
(alues is resized, the corresponding pair de\214nes the)-.275 E
(change in position of each pix)72 207.4 Q(el in the windo)-.165 E 4.18
-.715(w. W)-.275 H(hen a windo).715 E 2.75(ww)-.275 G
(ith one of these win-gra)-2.75 E(vities)-.22 E(has its parent windo)72
220.4 Q 2.75(wr)-.275 G(esized, the corresponding pair de\214nes the ch\
ange in position of the win-)-2.75 E(do)72 233.4 Q 2.75(ww)-.275 G
(ithin the parent.)-2.75 E(When a windo)5.5 E 2.75(wi)-.275 G 2.75(ss)
-2.75 G 2.75(or)-2.75 G(epositioned, a)-2.75 E F0(Gra)3.666 E
(vityNotify)-.275 E F1 -2.365 -.275(ev e)3.666 H(nt is generated).275 E
(\(see section 10.10.5\).)72 246.4 Q 2.75(Ab)72 263.3 S(it-gra)-2.75 E
(vity of)-.22 E F0(StaticGra)3.666 E(vity)-.275 E F1
(indicates that the contents or origin should not mo)3.666 E .33 -.165
(ve r)-.165 H(elati).165 E .33 -.165(ve t)-.275 H(o).165 E
(the origin of the root windo)72 276.3 Q 4.18 -.715(w. I)-.275 H 2.75
(ft).715 G(he change in size of the windo)-2.75 E 2.75(wi)-.275 G 2.75
(sc)-2.75 G(oupled with a change in)-2.75 E
(position \(x, y\), then for bit-gra)72 289.3 Q
(vity the change in position of each pix)-.22 E
(el is \(\255x, \255y\), and for win-)-.165 E(gra)72 302.3 Q(vity the c\
hange in position of a child when its parent is so resized is \(\255x, \
\255y\).)-.22 E(Note that)5.5 E F0(Stat-)3.666 E(icGra)72 315.3 Q(vity)
-.275 E F1(still only tak)3.666 E(es ef)-.11 E
(fect when the width or height of the windo)-.275 E 2.75(wi)-.275 G 2.75
(sc)-2.75 G(hanged, not when the)-2.75 E(windo)72 328.3 Q 2.75(wi)-.275
G 2.75(sm)-2.75 G -.165(ove)-2.75 G(d.).165 E 2.75(Ab)72 345.2 S(it-gra)
-2.75 E(vity of)-.22 E F0 -.275(Fo)3.666 G -.11(rg).275 G(etGra).11 E
(vity)-.275 E F1(indicates that the windo)3.666 E(w')-.275 E 2.75(sc)
-.605 G(ontents are al)-2.75 E -.11(wa)-.11 G(ys discarded after a).11 E
(size change, e)72 358.2 Q -.165(ve)-.275 G 2.75(ni).165 G 2.75(fab)
-2.75 G(acking store or sa)-2.75 E .33 -.165(ve u)-.22 H
(nder has been requested.).165 E(The windo)5.5 E 2.75(wi)-.275 G 2.75
(st)-2.75 G(iled with)-2.75 E(its background and zero or more)72 371.2 Q
F0(Expose)3.666 E F1 -2.365 -.275(ev e)3.666 H(nts are generated.).275 E
(If no background is de\214ned, the)5.5 E -.165(ex)72 384.2 S
(isting screen contents are not altered.).165 E(Some X serv)5.5 E
(ers may also ignore the speci\214ed bit-gra)-.165 E(vity)-.22 E(and al)
72 397.2 Q -.11(wa)-.11 G(ys generate).11 E F0(Expose)3.666 E F1 -2.365
-.275(ev e)3.666 H(nts.).275 E
(The contents and borders of inferiors are not af)72 414.1 Q
(fected by their parent')-.275 E 2.75(sb)-.605 G(it-gra)-2.75 E(vity)
-.22 E 5.5(.A)-.715 G(serv)-2.75 E(er is)-.165 E
(permitted to ignore the speci\214ed bit-gra)72 427.1 Q(vity and use)
-.22 E F0 -.275(Fo)3.666 G -.11(rg).275 G(et).11 E F1(instead.)3.666 E
2.75(Aw)72 444 S(in-gra)-2.75 E(vity of)-.22 E F0(UnmapGra)3.666 E(vity)
-.275 E F1(is lik)3.666 E(e)-.11 E F0(NorthW)3.666 E(estGra)-.715 E
(vity)-.275 E F1(\(the windo)3.666 E 2.75(wi)-.275 G 2.75(sn)-2.75 G
(ot mo)-2.75 E -.165(ve)-.165 G(d\), e).165 E(xcept)-.165 E
(the child is also unmapped when the parent is resized, and an)72 457 Q
F0(UnmapNotify)3.666 E F1 -2.365 -.275(ev e)3.666 H(nt is generated.)
.275 E F0 2.75(3.2.4. Backing)72 483 R(Stor)2.75 E 2.75(eA)-.198 G
(ttrib)-2.75 E(ute)-.22 E F1(Some implementations of the X serv)72 499.9
Q(er may choose to maintain the contents of)-.165 E F0(InputOutput)3.666
E F1(windo)72 512.9 Q 2.75(ws. If)-.275 F(the X serv)2.75 E
(er maintains the contents of a windo)-.165 E 1.43 -.715(w, t)-.275 H
(he of).715 E(f-screen sa)-.275 E -.165(ve)-.22 G 2.75(dp).165 G(ix)
-2.75 E(els are)-.165 E(kno)72 525.9 Q(wn as backing store.)-.275 E
(The backing store advises the X serv)5.5 E
(er on what to do with the contents)-.165 E(of a windo)72 538.9 Q 4.18
-.715(w. T)-.275 H(he backing-store attrib).715 E(ute can be set to)-.22
E F0(NotUseful)3.666 E F1(\(def)3.666 E(ault\),)-.11 E F0(WhenMapped)
3.666 E F1 2.75(,o).916 G(r)-2.75 E F0(Always)72.916 551.9 Q F1(.).916 E
2.75(Ab)72 568.8 S(acking-store attrib)-2.75 E(ute of)-.22 E F0
(NotUseful)3.666 E F1(advises the X serv)3.666 E
(er that maintaining contents is unneces-)-.165 E(sary)72 581.8 Q 2.75
(,a)-.715 G(lthough some X implementations may still choose to maintain\
 contents and, therefore, not)-2.75 E(generate)72 594.8 Q F0(Expose)
3.666 E F1 -2.365 -.275(ev e)3.666 H 2.75(nts. A).275 F
(backing-store attrib)2.75 E(ute of)-.22 E F0(WhenMapped)3.666 E F1
(advises the X serv)3.666 E(er that)-.165 E
(maintaining contents of obscured re)72 607.8 Q(gions when the windo)
-.165 E 2.75(wi)-.275 G 2.75(sm)-2.75 G(apped w)-2.75 E
(ould be bene\214cial.)-.11 E(In)5.5 E(this case, the serv)72 620.8 Q
(er may generate an)-.165 E F0(Expose)3.666 E F1 -2.365 -.275(ev e)3.666
H(nt when the windo).275 E 2.75(wi)-.275 G 2.75(sc)-2.75 G 2.75
(reated. A)-2.75 F(backing-store)2.75 E(attrib)72 633.8 Q(ute of)-.22 E
F0(Always)3.666 E F1(advises the X serv)3.666 E
(er that maintaining contents e)-.165 E -.165(ve)-.275 G 2.75(nw).165 G
(hen the windo)-2.75 E 2.75(wi)-.275 G(s)-2.75 E(unmapped w)72 646.8 Q
(ould be bene\214cial.)-.11 E(Ev)5.5 E(en if the windo)-.165 E 2.75(wi)
-.275 G 2.75(sl)-2.75 G(ar)-2.75 E
(ger than its parent, this is a request to)-.198 E(the X serv)72 659.8 Q
(er to maintain complete contents, not just the re)-.165 E
(gion within the parent windo)-.165 E 2.75(wb)-.275 G(ound-)-2.75 E 2.75
(aries. While)72 672.8 R(the X serv)2.75 E(er maintains the windo)-.165
E(w')-.275 E 2.75(sc)-.605 G(ontents,)-2.75 E F0(Expose)3.666 E F1
-2.365 -.275(ev e)3.666 H(nts normally are not gen-).275 E(erated, b)72
685.8 Q(ut the X serv)-.22 E(er may stop maintaining contents at an)
-.165 E 2.75(yt)-.165 G(ime.)-2.75 E(When the contents of obscured re)72
702.7 Q(gions of a windo)-.165 E 2.75(wa)-.275 G
(re being maintained, re)-2.75 E(gions obscured by)-.165 E
(noninferior windo)72 715.7 Q(ws are included in the destination of gra\
phics requests \(and source, when the)-.275 E(windo)72 728.7 Q 2.75(wi)
-.275 G 2.75(st)-2.75 G(he source\).)-2.75 E(Ho)5.5 E(we)-.275 E -.165
(ve)-.275 G .88 -.44(r, r).165 H -.165(eg).44 G
(ions obscured by inferior windo).165 E(ws are not included.)-.275 E F0
(37)282.5 769 Q 0 Cg EP
%%Page: 38 43
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E 2.75(3.2.5. Sa)72 85 R .22 -.11(ve U)
-.275 H(nder Flag).11 E/F1 11/Times-Roman@0 SF(Some serv)72 101.9 Q
(er implementations may preserv)-.165 E 2.75(ec)-.165 G(ontents of)-2.75
E F0(InputOutput)3.666 E F1(windo)3.666 E(ws under other)-.275 E F0
(InputOutput)72.916 114.9 Q F1(windo)3.666 E 2.75(ws. This)-.275 F
(is not the same as preserving the contents of a windo)2.75 E 2.75(wf)
-.275 G(or you.)-2.75 E -1.21(Yo)72 127.9 S 2.75(um)1.21 G
(ay get better visual appeal if transient windo)-2.75 E(ws \(for e)-.275
E(xample, pop-up menus\) request that)-.165 E(the system preserv)72
140.9 Q 2.75(et)-.165 G(he screen contents under them, so the temporari\
ly obscured applications do)-2.75 E(not ha)72 153.9 Q .33 -.165(ve t)
-.22 H 2.75(or).165 G(epaint.)-2.75 E -1.21(Yo)72 170.8 S 2.75(uc)1.21 G
(an set the sa)-2.75 E -.165(ve)-.22 G(-under \215ag to).165 E F0 -.814
(Tr)3.666 G(ue).814 E F1(or)3.666 E F0 -.275(Fa)3.666 G(lse).275 E F1
(\(def)3.666 E 2.75(ault\). If)-.11 F(sa)2.75 E -.165(ve)-.22 G
(-under is).165 E F0 -.814(Tr)3.666 G(ue).814 E F1 2.75(,t).916 G
(he X serv)-2.75 E(er is)-.165 E(advised that, when this windo)72 183.8
Q 2.75(wi)-.275 G 2.75(sm)-2.75 G(apped, sa)-2.75 E
(ving the contents of windo)-.22 E(ws it obscures w)-.275 E(ould be)-.11
E(bene\214cial.)72 196.8 Q F0 2.75(3.2.6. Backing)72 222.8 R
(Planes and Backing Pixel Attrib)2.75 E(utes)-.22 E F1 -1.21(Yo)72 239.7
S 2.75(uc)1.21 G(an set backing planes to indicate \(with bits set to 1\
\) which bit planes of an)-2.75 E F0(InputOutput)3.666 E F1(windo)72
252.7 Q 2.75(wh)-.275 G(old dynamic data that must be preserv)-2.75 E
(ed in backing store and during sa)-.165 E .33 -.165(ve u)-.22 H 2.75
(nders. The).165 F(def)72 265.7 Q(ault v)-.11 E
(alue for the backing-planes attrib)-.275 E(ute is all bits set to 1.)
-.22 E -1.21(Yo)5.5 G 2.75(uc)1.21 G(an set backing pix)-2.75 E(el to)
-.165 E(specify what bits to use in planes not co)72 278.7 Q -.165(ve)
-.165 G(red by backing planes.).165 E(The def)5.5 E(ault v)-.11 E
(alue for the back-)-.275 E(ing-pix)72 291.7 Q(el attrib)-.165 E
(ute is all bits set to 0.)-.22 E(The X serv)5.5 E(er is free to sa)
-.165 E .33 -.165(ve o)-.22 H(nly the speci\214ed bit planes in).165 E
(the backing store or the sa)72 304.7 Q .33 -.165(ve u)-.22 H
(nder and is free to re).165 E
(generate the remaining planes with the speci-)-.165 E(\214ed pix)72
317.7 Q(el v)-.165 E 2.75(alue. An)-.275 F 2.75(ye)-.165 G
(xtraneous bits in these v)-2.915 E(alues \(that is, those bits be)-.275
E(yond the speci\214ed depth)-.165 E(of the windo)72 330.7 Q
(w\) may be simply ignored.)-.275 E(If you request backing store or sa)
5.5 E .33 -.165(ve u)-.22 H(nders, you should).165 E
(use these members to minimize the amount of of)72 343.7 Q
(f-screen memory required to store your windo)-.275 E -.715(w.)-.275 G
F0 2.75(3.2.7. Ev)72 369.7 R(ent Mask and Do Not Pr)-.11 E
(opagate Mask Attrib)-.198 E(utes)-.22 E F1(The e)72 386.6 Q -.165(ve)
-.275 G(nt mask de\214nes which e).165 E -.165(ve)-.275 G
(nts the client is interested in for this).165 E F0(InputOutput)3.666 E
F1(or)3.666 E F0(Inpu-)3.666 E(tOnly)72 399.6 Q F1(windo)3.666 E 2.75
(w\()-.275 G(or)-2.75 E 2.75(,f)-.44 G(or some e)-2.75 E -.165(ve)-.275
G(nt types, inferiors of this windo).165 E 2.75(w\). The)-.275 F -2.365
-.275(ev e)2.75 H(nt mask is the bitwise).275 E(inclusi)72 412.6 Q .33
-.165(ve O)-.275 H 2.75(Ro).165 G 2.75(fz)-2.75 G(ero or more of the v)
-2.75 E(alid e)-.275 E -.165(ve)-.275 G(nt mask bits.).165 E -1.21(Yo)
5.5 G 2.75(uc)1.21 G(an specify that no maskable)-2.75 E -2.365 -.275
(ev e)72 425.6 T(nts are reported by setting).275 E F0(NoEv)3.666 E
(entMask)-.11 E F1(\(def)3.666 E(ault\).)-.11 E(The do-not-propag)72
442.5 Q(ate-mask attrib)-.055 E(ute de\214nes which e)-.22 E -.165(ve)
-.275 G(nts should not be propag).165 E(ated to ancestor)-.055 E(windo)
72 455.5 Q(ws when no client has the e)-.275 E -.165(ve)-.275 G
(nt type selected in this).165 E F0(InputOutput)3.666 E F1(or)3.666 E F0
(InputOnly)3.666 E F1(windo)3.666 E -.715(w.)-.275 G(The do-not-propag)
72 468.5 Q(ate-mask is the bitwise inclusi)-.055 E .33 -.165(ve O)-.275
H 2.75(Ro).165 G 2.75(fz)-2.75 G(ero or more of the follo)-2.75 E
(wing masks:)-.275 E F0 -.275(Ke)72.916 481.5 S(yPr).275 E(ess)-.198 E
F1(,).916 E F0 -.275(Ke)3.666 G(yRelease).275 E F1(,).916 E F0(ButtonPr)
3.666 E(ess)-.198 E F1(,).916 E F0(ButtonRelease)3.666 E F1(,).916 E F0
-.22(Po)3.666 G(interMotion).22 E F1(,).916 E F0(Button1Motion)3.666 E
F1(,).916 E F0(But-)3.666 E(ton2Motion)72 494.5 Q F1(,).916 E F0
(Button3Motion)3.666 E F1(,).916 E F0(Button4Motion)3.666 E F1(,).916 E
F0(Button5Motion)3.666 E F1 2.75(,a).916 G(nd)-2.75 E F0(ButtonMotion)
3.666 E F1 5.5(.Y).916 G(ou can)-6.71 E(specify that all e)72 507.5 Q
-.165(ve)-.275 G(nts are propag).165 E(ated by setting)-.055 E F0(NoEv)
3.666 E(entMask)-.11 E F1(\(def)3.666 E(ault\).)-.11 E F0 2.75
(3.2.8. Ov)72 533.5 R(erride Redir)-.11 E(ect Flag)-.198 E F1 1.76 -.88
(To c)72 550.4 T(ontrol windo).88 E 2.75(wp)-.275 G
(lacement or to add decoration, a windo)-2.75 E 2.75(wm)-.275 G
(anager often needs to intercept)-2.75 E(\(redirect\) an)72 563.4 Q 2.75
(ym)-.165 G(ap or con\214gure request.)-2.75 E(Pop-up windo)5.5 E
(ws, ho)-.275 E(we)-.275 E -.165(ve)-.275 G .88 -.44(r, o).165 H
(ften need to be mapped).44 E(without a windo)72 576.4 Q 2.75(wm)-.275 G
(anager getting in the w)-2.75 E(ay)-.11 E 5.5(.T)-.715 G 2.75(oc)-6.38
G(ontrol whether an)-2.75 E F0(InputOutput)3.666 E F1(or)3.666 E F0
(Inpu-)3.666 E(tOnly)72 589.4 Q F1(windo)3.666 E 2.75(wi)-.275 G 2.75
(st)-2.75 G 2.75(oi)-2.75 G(gnore these structure control f)-2.75 E
(acilities, use the o)-.11 E -.165(ve)-.165 G(rride-redirect \215ag.)
.165 E(The o)72 606.3 Q -.165(ve)-.165 G(rride-redirect \215ag speci\
\214es whether map and con\214gure requests on this windo).165 E 2.75
(ws)-.275 G(hould)-2.75 E -.165(ove)72 619.3 S(rride a).165 E F0
(Substructur)3.666 E(eRedir)-.198 E(ectMask)-.198 E F1(on the parent.)
3.666 E -1.21(Yo)5.5 G 2.75(uc)1.21 G(an set the o)-2.75 E -.165(ve)
-.165 G(rride-redirect \215ag to).165 E F0 -.814(Tr)72.916 632.3 S(ue)
.814 E F1(or)3.666 E F0 -.275(Fa)3.666 G(lse).275 E F1(\(def)3.666 E
2.75(ault\). W)-.11 F(indo)-.44 E 2.75(wm)-.275 G
(anagers use this information to a)-2.75 E -.22(vo)-.22 G
(id tampering with pop-up).22 E(windo)72 645.3 Q
(ws \(see also chapter 14\).)-.275 E F0 2.75(3.2.9. Colormap)72 671.3 R
(Attrib)2.75 E(ute)-.22 E F1(The colormap attrib)72 688.2 Q
(ute speci\214es which colormap best re\215ects the true colors of the)
-.22 E F0(InputOutput)3.666 E F1(windo)72 701.2 Q 4.18 -.715(w. T)-.275
H(he colormap must ha).715 E .33 -.165(ve t)-.22 H
(he same visual type as the windo).165 E 1.43 -.715(w, o)-.275 H 2.75
(ra).715 G F0(BadMatch).916 E F1(error)3.666 E 2.75(results. X)72 714.2
R(serv)2.75 E(ers capable of supporting multiple hardw)-.165 E
(are colormaps can use this information,)-.11 E(and windo)72 727.2 Q
2.75(wm)-.275 G(anagers can use it for calls to)-2.75 E F0
(XInstallColormap)3.666 E F1 5.5(.Y).916 G(ou can set the colormap)-6.71
E F0(38)282.5 769 Q 0 Cg EP
%%Page: 39 44
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E/F1 11/Times-Roman@0 SF(attrib)72 85 Q
(ute to a colormap or to)-.22 E F0(CopyFr)3.666 E(omP)-.198 E(ar)-.11 E
(ent)-.198 E F1(\(def)3.666 E(ault\).)-.11 E(If you set the colormap to)
72 101.9 Q F0(CopyFr)3.666 E(omP)-.198 E(ar)-.11 E(ent)-.198 E F1 2.75
(,t).916 G(he parent windo)-2.75 E(w')-.275 E 2.75(sc)-.605 G
(olormap is copied and used)-2.75 E(by its child.)72 114.9 Q(Ho)5.5 E
(we)-.275 E -.165(ve)-.275 G .88 -.44(r, t).165 H(he child windo).44 E
2.75(wm)-.275 G(ust ha)-2.75 E .33 -.165(ve t)-.22 H
(he same visual type as the parent, or a).165 E F0(Bad-)3.666 E(Match)72
127.9 Q F1(error results.)3.666 E(The parent windo)5.5 E 2.75(wm)-.275 G
(ust not ha)-2.75 E .33 -.165(ve a c)-.22 H(olormap of).165 E F0(None)
3.666 E F1 2.75(,o).916 G 2.75(ra)-2.75 G F0(BadMatch).916 E F1
(error results.)72 140.9 Q(The colormap is copied by sharing the colorm\
ap object between the child and par)5.5 E(-)-.22 E
(ent, not by making a complete cop)72 153.9 Q 2.75(yo)-.11 G 2.75(ft)
-2.75 G(he colormap contents.)-2.75 E(Subsequent changes to the parent)
5.5 E(windo)72 166.9 Q(w')-.275 E 2.75(sc)-.605 G(olormap attrib)-2.75 E
(ute do not af)-.22 E(fect the child windo)-.275 E -.715(w.)-.275 G F0
2.75(3.2.10. Cursor)72 192.9 R(Attrib)2.75 E(ute)-.22 E F1
(The cursor attrib)72 209.8 Q
(ute speci\214es which cursor is to be used when the pointer is in the)
-.22 E F0(InputOutput)3.666 E F1(or)72 222.8 Q F0(InputOnly)3.666 E F1
(windo)3.666 E 4.18 -.715(w. Y)-.275 H
(ou can set the cursor to a cursor or)-.495 E F0(None)3.666 E F1(\(def)
3.666 E(ault\).)-.11 E(If you set the cursor to)72 239.7 Q F0(None)3.666
E F1 2.75(,t).916 G(he parent')-2.75 E 2.75(sc)-.605 G
(ursor is used when the pointer is in the)-2.75 E F0(InputOutput)3.666 E
F1(or)72 252.7 Q F0(InputOnly)3.666 E F1(windo)3.666 E 1.43 -.715(w, a)
-.275 H(nd an).715 E 2.75(yc)-.165 G(hange in the parent')-2.75 E 2.75
(sc)-.605 G(ursor will cause an immediate change in)-2.75 E
(the displayed cursor)72 265.7 Q 5.5(.B)-.605 G 2.75(yc)-5.5 G(alling)
-2.75 E F0(XFr)3.666 E(eeCursor)-.198 E F1 2.75(,t).916 G
(he cursor can be freed immediately as long as)-2.75 E(no further e)72
278.7 Q(xplicit reference to it is made.)-.165 E F0 2.75(3.3. Cr)72
304.7 R(eating W)-.198 E(indo)-.198 E(ws)-.11 E F1(Xlib pro)72 321.6 Q
(vides basic w)-.165 E(ays for creating windo)-.11 E
(ws, and toolkits often supply higher)-.275 E(-le)-.22 E -.165(ve)-.275
G 2.75(lf).165 G(unctions)-2.75 E
(speci\214cally for creating and placing top-le)72 334.6 Q -.165(ve)
-.275 G 2.75(lw).165 G(indo)-2.75 E
(ws, which are discussed in the appropriate)-.275 E
(toolkit documentation.)72 347.6 Q(If you do not use a toolkit, ho)5.5 E
(we)-.275 E -.165(ve)-.275 G .88 -.44(r, y).165 H(ou must pro).44 E
(vide some standard)-.165 E(information or hints for the windo)72 360.6
Q 2.75(wm)-.275 G(anager by using the Xlib inter)-2.75 E
(-client communication func-)-.22 E(tions \(see chapter 14\).)72 373.6 Q
(If you use Xlib to create your o)72 390.5 Q(wn top-le)-.275 E -.165(ve)
-.275 G 2.75(lw).165 G(indo)-2.75 E
(ws \(direct children of the root windo)-.275 E(w\), you)-.275 E
(must observ)72 403.5 Q 2.75(et)-.165 G(he follo)-2.75 E
(wing rules so that all applications interact reasonably across the dif)
-.275 E(ferent)-.275 E(styles of windo)72 416.5 Q 2.75(wm)-.275 G
(anagement:)-2.75 E 23.65<8359>72 433.4 S(ou must ne)-24.86 E -.165(ve)
-.275 G 2.75<728c>.165 G(ght with the windo)-2.75 E 2.75(wm)-.275 G
(anager for the size or placement of your top-le)-2.75 E -.165(ve)-.275
G(l).165 E(windo)99.5 446.4 Q -.715(w.)-.275 G 23.65<8359>72 463.3 S
(ou must be able to deal with whate)-24.86 E -.165(ve)-.275 G 2.75(rs)
.165 G(ize windo)-2.75 E 2.75(wy)-.275 G(ou get, e)-2.75 E -.165(ve)
-.275 G 2.75(ni).165 G 2.75(ft)-2.75 G(his means that your)-2.75 E
(application just prints a message lik)99.5 476.3 Q 2.75(e`)-.11 G
(`Please mak)-3.564 E 2.75(em)-.11 G 2.75(eb)-2.75 G(igger')-2.75 E 2.75
('i)-.814 G 2.75(ni)-2.75 G(ts windo)-2.75 E -.715(w.)-.275 G 23.65
<8359>72 493.2 S(ou should only attempt to resize or mo)-24.86 E .33
-.165(ve t)-.165 H(op-le).165 E -.165(ve)-.275 G 2.75(lw).165 G(indo)
-2.75 E(ws in direct response to a user)-.275 E 2.75(request. If)99.5
506.2 R 2.75(ar)2.75 G(equest to change the size of a top-le)-2.75 E
-.165(ve)-.275 G 2.75(lw).165 G(indo)-2.75 E 2.75(wf)-.275 G
(ails, you must be prepared to)-2.86 E(li)99.5 519.2 Q .33 -.165(ve w)
-.275 H(ith what you get.).165 E -1.21(Yo)5.5 G 2.75(ua)1.21 G
(re free to resize or mo)-2.75 E .33 -.165(ve t)-.165 H
(he children of top-le).165 E -.165(ve)-.275 G 2.75(lw).165 G(indo)-2.75
E(ws as)-.275 E(necessary)99.5 532.2 Q 5.5(.\()-.715 G -.88(To)-5.5 G
(olkits often ha).88 E .33 -.165(ve f)-.22 H
(acilities for automatic relayout.\)).055 E 23.65<8349>72 549.1 S 2.75
(fy)-23.65 G
(ou do not use a toolkit that automatically sets standard windo)-2.75 E
2.75(wp)-.275 G(roperties, you should)-2.75 E
(set these properties for top-le)99.5 562.1 Q -.165(ve)-.275 G 2.75(lw)
.165 G(indo)-2.75 E(ws before mapping them.)-.275 E -.165(Fo)72 579 S
2.75(rf).165 G(urther information, see chapter 14 and the)-2.75 E/F2 11
/Times-Italic@0 SF(Inter)2.75 E(-Client Communication Con)-.22 E
(ventions Manual)-.44 E F1(.)A F0(XCr)72.916 595.9 Q(eateW)-.198 E(indo)
-.198 E(w)-.11 E F1(is the more general function that allo)3.666 E
(ws you to set speci\214c windo)-.275 E 2.75(wa)-.275 G(ttrib)-2.75 E
(utes)-.22 E(when you create a windo)72 608.9 Q -.715(w.)-.275 G F0(XCr)
7.131 E(eateSimpleW)-.198 E(indo)-.198 E(w)-.11 E F1(creates a windo)
3.666 E 2.75(wt)-.275 G(hat inherits its attrib)-2.75 E(utes)-.22 E
(from its parent windo)72 621.9 Q -.715(w.)-.275 G(The X serv)72 638.8 Q
(er acts as if)-.165 E F0(InputOnly)3.666 E F1(windo)3.666 E
(ws do not e)-.275 E(xist for the purposes of graphics requests,)-.165 E
-.165(ex)72 651.8 S(posure processing, and).165 E F0 -.407(Vi)3.666 G
(sibilityNotify).407 E F1 -2.365 -.275(ev e)3.666 H 2.75(nts. An).275 F
F0(InputOnly)3.666 E F1(windo)3.666 E 2.75(wc)-.275 G
(annot be used as a)-2.75 E(dra)72 664.8 Q -.11(wa)-.165 G
(ble \(that is, as a source or destination for graphics requests\).).11
E F0(InputOnly)6.416 E F1(and)3.666 E F0(InputOutput)3.666 E F1(windo)72
677.8 Q(ws act identically in other respects \(properties, grabs, input\
 control, and so on\).)-.275 E(Extension)5.5 E
(packages can de\214ne other classes of windo)72 690.8 Q(ws.)-.275 E
1.76 -.88(To c)72 707.7 T(reate an unmapped windo).88 E 2.75(wa)-.275 G
(nd set its windo)-2.75 E 2.75(wa)-.275 G(ttrib)-2.75 E(utes, use)-.22 E
F0(XCr)3.666 E(eateW)-.198 E(indo)-.198 E(w)-.11 E F1(.).916 E F0(39)
282.5 769 Q 0 Cg EP
%%Page: 40 45
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E .44 LW 36 76.75 36 87.75 DL 36 74.75
36 85.75 DL 41.5 73 36 73 DL 43.5 73 38 73 DL 49 73 43.5 73 DL/F1 11
/Times-Roman@0 SF -.44(Wi)72 88.9 S(ndo).44 E 2.75(wX)-.275 G(CreateW)
-2.75 E(indo)-.44 E .916(w\()-.275 G/F2 11/Times-Italic@0 SF(display)A
F1(,)A F2(par)2.75 E(ent)-.407 E F1(,).916 E F2(x)2.75 E F1(,).916 E F2
(y)2.75 E F1(,).916 E F2(width)2.75 E F1(,).916 E F2(height)2.75 E F1(,)
.916 E F2(bor)2.75 E(der_width)-.407 E F1(,).916 E F2(depth)2.75 E F1(,)
.916 E F2(class)135.25 101.9 Q F1(,).916 E F2(visual)2.75 E F1(,).916 E
F2(valuemask)2.75 E F1(,).916 E F2(attrib)2.75 E(utes)-.22 E F1(\)).916
E(Display *)88.5 114.9 Q F2(display)A F1(;).916 E -.44(Wi)88.5 127.9 S
(ndo).44 E(w)-.275 E F2(par)2.75 E(ent)-.407 E F1(;).916 E(int)88.5
140.9 Q F2(x)2.75 E F1(,).916 E F2(y)2.75 E F1(;).916 E(unsigned int)
88.5 153.9 Q F2(width)2.75 E F1(,).916 E F2(height)2.75 E F1(;).916 E
(unsigned int)88.5 166.9 Q F2(bor)2.75 E(der_width)-.407 E F1(;).916 E
(int)88.5 179.9 Q F2(depth)2.75 E F1(;).916 E(unsigned int)88.5 192.9 Q
F2(class)2.75 E F1(;).916 E -.66(Vi)88.5 205.9 S(sual *).66 E F2(visual)
A F1(;).916 E(unsigned long)88.5 218.9 Q F2(valuemask)2.75 E F1(;).916 E
(XSetW)88.5 231.9 Q(indo)-.44 E(wAttrib)-.275 E(utes *)-.22 E F2(attrib)
A(utes)-.22 E F1(;).916 E F2(display)72 252.7 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2(par)72 269.6 Q(ent)-.407 E F1(Speci\214es the parent windo)43.686 E
-.715(w.)-.275 G F2(x)72 286.5 Q(y)72 299.5 Q F1(Specify the x and y co\
ordinates, which are the top-left outside corner of the cre-)67.116 E
(ated windo)144 312.5 Q(w')-.275 E 2.75(sb)-.605 G
(orders and are relati)-2.75 E .33 -.165(ve t)-.275 H 2.75(ot).165 G
(he inside of the parent windo)-2.75 E(w')-.275 E 2.75(sb)-.605 G(or)
-2.75 E(-)-.22 E(ders.)144 325.5 Q F2(width)72 342.4 Q(height)72 355.4 Q
F1(Specify the width and height, which are the created windo)44.5 E(w')
-.275 E 2.75(si)-.605 G(nside dimensions)-2.75 E
(and do not include the created windo)144 368.4 Q(w')-.275 E 2.75(sb)
-.605 G 2.75(orders. The)-2.75 F(dimensions must be)2.75 E
(nonzero, or a)144 381.4 Q F0(BadV)3.666 E(alue)-1.012 E F1
(error results.)3.666 E F2(bor)72 398.3 Q(der_width)-.407 E F1
(Speci\214es the width of the created windo)12.512 E(w')-.275 E 2.75(sb)
-.605 G(order in pix)-2.75 E(els.)-.165 E F2(depth)72 415.2 Q F1
(Speci\214es the windo)47.558 E(w')-.275 E 2.75(sd)-.605 G 2.75(epth. A)
-2.75 F(depth of)2.75 E F0(CopyFr)3.666 E(omP)-.198 E(ar)-.11 E(ent)
-.198 E F1(means the depth is)3.666 E(tak)144 428.2 Q
(en from the parent.)-.11 E F2(class)72 445.1 Q F1
(Speci\214es the created windo)50 E(w')-.275 E 2.75(sc)-.605 G 2.75
(lass. Y)-2.75 F(ou can pass)-1.21 E F0(InputOutput)3.666 E F1(,).916 E
F0(InputOnly)3.666 E F1(,).916 E(or)144 458.1 Q F0(CopyFr)3.666 E(omP)
-.198 E(ar)-.11 E(ent)-.198 E F1 5.5(.A).916 G(class of)-2.75 E F0
(CopyFr)3.666 E(omP)-.198 E(ar)-.11 E(ent)-.198 E F1
(means the class is tak)3.666 E(en)-.11 E(from the parent.)144 471.1 Q
F2(visual)72 488 Q F1(Speci\214es the visual type.)45.721 E 2.75(Av)5.5
G(isual of)-2.75 E F0(CopyFr)3.666 E(omP)-.198 E(ar)-.11 E(ent)-.198 E
F1(means the visual type is)3.666 E(tak)144 501 Q(en from the parent.)
-.11 E F2(valuemask)72 517.9 Q F1(Speci\214es which windo)25.569 E 2.75
(wa)-.275 G(ttrib)-2.75 E(utes are de\214ned in the attrib)-.22 E
(utes ar)-.22 E 2.75(gument. This)-.198 F(mask is the bitwise inclusi)
144 530.9 Q .33 -.165(ve O)-.275 H 2.75(Ro).165 G 2.75(ft)-2.75 G(he v)
-2.75 E(alid attrib)-.275 E(ute mask bits.)-.22 E(If v)5.5 E
(aluemask is)-.275 E(zero, the attrib)144 543.9 Q
(utes are ignored and are not referenced.)-.22 E F2(attrib)72 560.8 Q
(utes)-.22 E F1(Speci\214es the structure from which the v)30.046 E
(alues \(as speci\214ed by the v)-.275 E(alue mask\) are)-.275 E
(to be tak)144 573.8 Q 2.75(en. The)-.11 F -.275(va)2.75 G
(lue mask should ha).275 E .33 -.165(ve t)-.22 H
(he appropriate bits set to indicate).165 E(which attrib)144 586.8 Q
(utes ha)-.22 E .33 -.165(ve b)-.22 H(een set in the structure.).165 E
36 582.45 36 593.45 DL 36 580.45 36 591.45 DL 41.5 591.7 36 591.7 DL
43.5 591.7 38 591.7 DL 49 591.7 43.5 591.7 DL(The)72 616.7 Q F0(XCr)
3.666 E(eateW)-.198 E(indo)-.198 E(w)-.11 E F1
(function creates an unmapped subwindo)3.666 E 2.75(wf)-.275 G
(or a speci\214ed parent windo)-2.75 E -.715(w,)-.275 G
(returns the windo)72 629.7 Q 2.75(wI)-.275 G 2.75(Do)-2.75 G 2.75(ft)
-2.75 G(he created windo)-2.75 E 1.43 -.715(w, a)-.275 H
(nd causes the X serv).715 E(er to generate a)-.165 E F0(Cr)3.666 E
(eateNo-)-.198 E(tify)72 642.7 Q F1 -2.365 -.275(ev e)3.666 H 2.75
(nt. The).275 F(created windo)2.75 E 2.75(wi)-.275 G 2.75(sp)-2.75 G
(laced on top in the stacking order with respect to siblings.)-2.75 E
(The coordinate system has the X axis horizontal and the Y axis v)72
659.6 Q(ertical with the origin [0, 0] at)-.165 E(the upper)72 672.6 Q
(-left corner)-.22 E 5.5(.C)-.605 G(oordinates are inte)-5.5 E
(gral, in terms of pix)-.165 E(els, and coincide with pix)-.165 E
(el centers.)-.165 E(Each windo)72 685.6 Q 2.75(wa)-.275 G
(nd pixmap has its o)-2.75 E(wn coordinate system.)-.275 E -.165(Fo)5.5
G 2.75(raw).165 G(indo)-2.75 E 1.43 -.715(w, t)-.275 H
(he origin is inside the).715 E(border at the inside, upper)72 698.6 Q
(-left corner)-.22 E(.)-.605 E(The border_width for an)72 715.5 Q F0
(InputOnly)3.666 E F1(windo)3.666 E 2.75(wm)-.275 G(ust be zero, or a)
-2.75 E F0(BadMatch)3.666 E F1(error results.)3.666 E -.165(Fo)5.5 G(r)
.165 E(class)72 728.5 Q F0(InputOutput)3.666 E F1 2.75(,t).916 G(he vis\
ual type and depth must be a combination supported for the screen, or)
-2.75 E F0(40)282.5 769 Q 0 Cg EP
%%Page: 41 46
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E/F1 11/Times-Roman@0 SF(a)72 85 Q F0
(BadMatch)3.666 E F1(error results.)3.666 E
(The depth need not be the same as the parent, b)5.5 E
(ut the parent must not)-.22 E(be a windo)72 98 Q 2.75(wo)-.275 G 2.75
(fc)-2.75 G(lass)-2.75 E F0(InputOnly)3.666 E F1 2.75(,o).916 G 2.75(ra)
-2.75 G F0(BadMatch).916 E F1(error results.)3.666 E -.165(Fo)5.5 G 2.75
(ra).165 G(n)-2.75 E F0(InputOnly)3.666 E F1(windo)3.666 E 1.43 -.715
(w, t)-.275 H(he).715 E(depth must be zero, and the visual must be one \
supported by the screen.)72 111 Q(If either condition is not)5.5 E
(met, a)72 124 Q F0(BadMatch)3.666 E F1(error results.)3.666 E
(The parent windo)5.5 E 1.43 -.715(w, h)-.275 H -.275(ow).715 G -2.365
-.275(ev e).275 H .88 -.44(r, m).275 H(ay ha).44 E .33 -.165(ve a)-.22 H
.33 -.165(ny d).165 H(epth and class.).165 E(If)5.5 E(you specify an)72
137 Q 2.75(yi)-.165 G -2.145 -.44(nv a)-2.75 H(lid windo).44 E 2.75(wa)
-.275 G(ttrib)-2.75 E(ute for a windo)-.22 E 1.43 -.715(w, a)-.275 H F0
(BadMatch)4.381 E F1(error results.)3.666 E(The created windo)72 153.9 Q
2.75(wi)-.275 G 2.75(sn)-2.75 G
(ot yet displayed \(mapped\) on the user')-2.75 E 2.75(sd)-.605 G
(isplay)-2.75 E 5.5(.T)-.715 G 2.75(od)-6.38 G(isplay the windo)-2.75 E
-.715(w,)-.275 G(call)72 166.9 Q F0(XMapW)3.666 E(indo)-.198 E(w)-.11 E
F1 5.5(.T).916 G(he ne)-5.5 E 2.75(ww)-.275 G(indo)-2.75 E 2.75(wi)-.275
G(nitially uses the same cursor as its parent.)-2.75 E 2.75(An)5.5 G .55
-.275(ew c)-2.75 H(ursor).275 E(can be de\214ned for the ne)72 179.9 Q
2.75(ww)-.275 G(indo)-2.75 E 2.75(wb)-.275 G 2.75(yc)-2.75 G(alling)
-2.75 E F0(XDe\214neCursor)3.666 E F1 5.5(.T).916 G(he windo)-5.5 E 2.75
(ww)-.275 G(ill not be visible)-2.75 E(on the screen unless it and all \
of its ancestors are mapped and it is not obscured by an)72 192.9 Q 2.75
(yo)-.165 G 2.75(fi)-2.75 G(ts)-2.75 E(ancestors.)72 205.9 Q F0(XCr)
72.916 222.8 Q(eateW)-.198 E(indo)-.198 E(w)-.11 E F1(can generate)3.666
E F0(BadAlloc)3.666 E F1(,).916 E F0(BadColor)3.666 E F1(,).916 E F0
(BadCursor)3.666 E F1(,).916 E F0(BadMatch)3.666 E F1(,).916 E F0
(BadPixmap)3.666 E F1(,).916 E F0(BadV)72.916 235.8 Q(alue)-1.012 E F1
2.75(,a).916 G(nd)-2.75 E F0(BadW)3.666 E(indo)-.198 E(w)-.11 E F1
(errors.)3.666 E 1.76 -.88(To c)72 265.7 T(reate an unmapped).88 E F0
(InputOutput)3.666 E F1(subwindo)3.666 E 2.75(wo)-.275 G 2.75(fag)-2.75
G -2.365 -.275(iv e)-2.75 H 2.75(np).275 G(arent windo)-2.75 E 1.43
-.715(w, u)-.275 H(se).715 E F0(XCr)3.666 E(eateSim-)-.198 E(pleW)72
278.7 Q(indo)-.198 E(w)-.11 E F1(.).916 E .44 LW 36 296.45 36 307.45 DL
36 294.45 36 305.45 DL 41.5 292.7 36 292.7 DL 43.5 292.7 38 292.7 DL 49
292.7 43.5 292.7 DL -.44(Wi)72 308.6 S(ndo).44 E 2.75(wX)-.275 G
(CreateSimpleW)-2.75 E(indo)-.44 E .916(w\()-.275 G/F2 11/Times-Italic@0
SF(display)A F1(,)A F2(par)2.75 E(ent)-.407 E F1(,).916 E F2(x)2.75 E F1
(,).916 E F2(y)2.75 E F1(,).916 E F2(width)2.75 E F1(,).916 E F2(height)
2.75 E F1(,).916 E F2(bor)2.75 E(der_width)-.407 E F1(,).916 E F2(bor)
151.75 321.6 Q(der)-.407 E F1(,).916 E F2(bac)2.75 E(kgr)-.22 E(ound)
-.495 E F1(\)).916 E(Display *)88.5 334.6 Q F2(display)A F1(;).916 E
-.44(Wi)88.5 347.6 S(ndo).44 E(w)-.275 E F2(par)2.75 E(ent)-.407 E F1(;)
.916 E(int)88.5 360.6 Q F2(x)2.75 E F1(,).916 E F2(y)2.75 E F1(;).916 E
(unsigned int)88.5 373.6 Q F2(width)2.75 E F1(,).916 E F2(height)2.75 E
F1(;).916 E(unsigned int)88.5 386.6 Q F2(bor)2.75 E(der_width)-.407 E F1
(;).916 E(unsigned long)88.5 399.6 Q F2(bor)2.75 E(der)-.407 E F1(;).916
E(unsigned long)88.5 412.6 Q F2(bac)2.75 E(kgr)-.22 E(ound)-.495 E F1(;)
.916 E F2(display)72 433.4 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2(par)72 450.3 Q(ent)-.407 E F1(Speci\214es the parent windo)43.686 E
-.715(w.)-.275 G F2(x)72 467.2 Q(y)72 480.2 Q F1(Specify the x and y co\
ordinates, which are the top-left outside corner of the ne)67.116 E(w)
-.275 E(windo)144 493.2 Q(w')-.275 E 2.75(sb)-.605 G
(orders and are relati)-2.75 E .33 -.165(ve t)-.275 H 2.75(ot).165 G
(he inside of the parent windo)-2.75 E(w')-.275 E 2.75(sb)-.605 G
(orders.)-2.75 E F2(width)72 510.1 Q(height)72 523.1 Q F1
(Specify the width and height, which are the created windo)44.5 E(w')
-.275 E 2.75(si)-.605 G(nside dimensions)-2.75 E
(and do not include the created windo)144 536.1 Q(w')-.275 E 2.75(sb)
-.605 G 2.75(orders. The)-2.75 F(dimensions must be)2.75 E
(nonzero, or a)144 549.1 Q F0(BadV)3.666 E(alue)-1.012 E F1
(error results.)3.666 E F2(bor)72 566 Q(der_width)-.407 E F1
(Speci\214es the width of the created windo)12.512 E(w')-.275 E 2.75(sb)
-.605 G(order in pix)-2.75 E(els.)-.165 E F2(bor)72 582.9 Q(der)-.407 E
F1(Speci\214es the border pix)42.465 E(el v)-.165 E(alue of the windo)
-.275 E -.715(w.)-.275 G F2(bac)72 599.8 Q(kgr)-.22 E(ound)-.495 E F1
(Speci\214es the background pix)20.168 E(el v)-.165 E(alue of the windo)
-.275 E -.715(w.)-.275 G 36 608.45 36 619.45 DL 36 606.45 36 617.45 DL
41.5 617.7 36 617.7 DL 43.5 617.7 38 617.7 DL 49 617.7 43.5 617.7 DL
(The)72 642.7 Q F0(XCr)3.666 E(eateSimpleW)-.198 E(indo)-.198 E(w)-.11 E
F1(function creates an unmapped)3.666 E F0(InputOutput)3.666 E F1
(subwindo)3.666 E 2.75(wf)-.275 G(or a)-2.75 E(speci\214ed parent windo)
72 655.7 Q 1.43 -.715(w, r)-.275 H(eturns the windo).715 E 2.75(wI)-.275
G 2.75(Do)-2.75 G 2.75(ft)-2.75 G(he created windo)-2.75 E 1.43 -.715
(w, a)-.275 H(nd causes the X serv).715 E(er to)-.165 E(generate a)72
668.7 Q F0(Cr)3.666 E(eateNotify)-.198 E F1 -2.365 -.275(ev e)3.666 H
2.75(nt. The).275 F(created windo)2.75 E 2.75(wi)-.275 G 2.75(sp)-2.75 G
(laced on top in the stacking order with)-2.75 E(respect to siblings.)72
681.7 Q(An)5.5 E 2.75(yp)-.165 G(art of the windo)-2.75 E 2.75(wt)-.275
G(hat e)-2.75 E(xtends outside its parent windo)-.165 E 2.75(wi)-.275 G
2.75(sc)-2.75 G(lipped.)-2.75 E(The border_width for an)72 694.7 Q F0
(InputOnly)3.666 E F1(windo)3.666 E 2.75(wm)-.275 G(ust be zero, or a)
-2.75 E F0(BadMatch)3.666 E F1(error results.)3.666 E F0(XCr)6.416 E(e-)
-.198 E(ateSimpleW)72 707.7 Q(indo)-.198 E(w)-.11 E F1
(inherits its depth, class, and visual from its parent.)3.666 E
(All other windo)5.5 E(w)-.275 E(attrib)72 720.7 Q(utes, e)-.22 E
(xcept background and border)-.165 E 2.75(,h)-.44 G -2.475 -.22(av e)
-2.75 H(their def)2.97 E(ault v)-.11 E(alues.)-.275 E F0(41)282.5 769 Q
0 Cg EP
%%Page: 42 47
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E(XCr)72.916 85 Q(eateSimpleW)-.198 E
(indo)-.198 E(w)-.11 E/F1 11/Times-Roman@0 SF(can generate)3.666 E F0
(BadAlloc)3.666 E F1(,).916 E F0(BadMatch)3.666 E F1(,).916 E F0(BadV)
3.666 E(alue)-1.012 E F1 2.75(,a).916 G(nd)-2.75 E F0(BadW)3.666 E(indo)
-.198 E(w)-.11 E F1(errors.)72 98 Q F0 2.75(3.4. Destr)72 124 R(oying W)
-.198 E(indo)-.198 E(ws)-.11 E F1(Xlib pro)72 140.9 Q
(vides functions that you can use to destro)-.165 E 2.75(yaw)-.11 G
(indo)-2.75 E 2.75(wo)-.275 G 2.75(rd)-2.75 G(estro)-2.75 E 2.75(ya)-.11
G(ll subwindo)-2.75 E(ws of a win-)-.275 E(do)72 153.9 Q -.715(w.)-.275
G 1.76 -.88(To d)72 183.8 T(estro).88 E 2.75(yaw)-.11 G(indo)-2.75 E
2.75(wa)-.275 G(nd all of its subwindo)-2.75 E(ws, use)-.275 E F0
(XDestr)3.666 E(oyW)-.198 E(indo)-.198 E(w)-.11 E F1(.).916 E .44 LW 36
201.55 36 212.55 DL 36 199.55 36 210.55 DL 41.5 197.8 36 197.8 DL 43.5
197.8 38 197.8 DL 49 197.8 43.5 197.8 DL(XDestro)72 213.7 Q(yW)-.11 E
(indo)-.44 E .916(w\()-.275 G/F2 11/Times-Italic@0 SF(display)A F1(,)A
F2(w)2.75 E F1(\)).916 E(Display *)88.5 226.7 Q F2(display)A F1(;).916 E
-.44(Wi)88.5 239.7 S(ndo).44 E(w)-.275 E F2(w)2.75 E F1(;).916 E F2
(display)72 260.5 Q F1(Speci\214es the connection to the X serv)40.221 E
(er)-.165 E(.)-.605 E F2(w)72 277.4 Q F1(Speci\214es the windo)64.663 E
-.715(w.)-.275 G 36 273.05 36 284.05 DL 36 271.05 36 282.05 DL 41.5
282.3 36 282.3 DL 43.5 282.3 38 282.3 DL 49 282.3 43.5 282.3 DL(The)72
307.3 Q F0(XDestr)3.666 E(oyW)-.198 E(indo)-.198 E(w)-.11 E F1
(function destro)3.666 E(ys the speci\214ed windo)-.11 E 2.75(wa)-.275 G
2.75(sw)-2.75 G(ell as all of its subwindo)-2.75 E(ws)-.275 E
(and causes the X serv)72 320.3 Q(er to generate a)-.165 E F0(Destr)
3.666 E(oyNotify)-.198 E F1 -2.365 -.275(ev e)3.666 H(nt for each windo)
.275 E 4.18 -.715(w. T)-.275 H(he windo).715 E 2.75(ws)-.275 G(hould)
-2.75 E(ne)72 333.3 Q -.165(ve)-.275 G 2.75(rb).165 G 2.75(er)-2.75 G
(eferenced ag)-2.75 E 2.75(ain. If)-.055 F(the windo)2.75 E 2.75(ws)
-.275 G(peci\214ed by the w ar)-2.75 E(gument is mapped, it is unmapped)
-.198 E(automatically)72 346.3 Q 5.5(.T)-.715 G(he ordering of the)-5.5
E F0(Destr)3.666 E(oyNotify)-.198 E F1 -2.365 -.275(ev e)3.666 H
(nts is such that for an).275 E 2.75(yg)-.165 G -2.365 -.275(iv e)-2.75
H 2.75(nw).275 G(indo)-2.75 E 2.75(wb)-.275 G(eing)-2.75 E(destro)72
359.3 Q(yed,)-.11 E F0(Destr)3.666 E(oyNotify)-.198 E F1
(is generated on an)3.666 E 2.75(yi)-.165 G(nferiors of the windo)-2.75
E 2.75(wb)-.275 G(efore being generated on)-2.75 E(the windo)72 372.3 Q
2.75(wi)-.275 G 2.75(tself. The)-2.75 F(ordering among siblings and acr\
oss subhierarchies is not otherwise con-)2.75 E 2.75(strained. If)72
385.3 R(the windo)2.75 E 2.75(wy)-.275 G(ou speci\214ed is a root windo)
-2.75 E 1.43 -.715(w, n)-.275 H 2.75(ow).715 G(indo)-2.75 E
(ws are destro)-.275 E 2.75(yed. Destro)-.11 F(ying a)-.11 E
(mapped windo)72 398.3 Q 2.75(ww)-.275 G(ill generate)-2.75 E F0(Expose)
3.666 E F1 -2.365 -.275(ev e)3.666 H(nts on other windo).275 E
(ws that were obscured by the win-)-.275 E(do)72 411.3 Q 2.75(wb)-.275 G
(eing destro)-2.75 E(yed.)-.11 E F0(XDestr)72.916 428.2 Q(oyW)-.198 E
(indo)-.198 E(w)-.11 E F1(can generate a)3.666 E F0(BadW)3.666 E(indo)
-.198 E(w)-.11 E F1(error)3.666 E(.)-.605 E 1.76 -.88(To d)72 458.1 T
(estro).88 E 2.75(ya)-.11 G(ll subwindo)-2.75 E
(ws of a speci\214ed windo)-.275 E 1.43 -.715(w, u)-.275 H(se).715 E F0
(XDestr)3.666 E(oySubwindo)-.198 E(ws)-.11 E F1(.).916 E 36 475.85 36
486.85 DL 36 473.85 36 484.85 DL 41.5 472.1 36 472.1 DL 43.5 472.1 38
472.1 DL 49 472.1 43.5 472.1 DL(XDestro)72 488 Q(ySubwindo)-.11 E -1.834
(ws \()-.275 F F2(display).916 E F1(,)A F2(w)2.75 E F1(\)).916 E
(Display *)88.5 501 Q F2(display)A F1(;).916 E -.44(Wi)88.5 514 S(ndo)
.44 E(w)-.275 E F2(w)2.75 E F1(;).916 E F2(display)72 534.8 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2(w)72 551.7 Q F1(Speci\214es the windo)64.663 E -.715(w.)-.275 G 36
547.35 36 558.35 DL 36 545.35 36 556.35 DL 41.5 556.6 36 556.6 DL 43.5
556.6 38 556.6 DL 49 556.6 43.5 556.6 DL(The)72 581.6 Q F0(XDestr)3.666
E(oySubwindo)-.198 E(ws)-.11 E F1(function destro)3.666 E
(ys all inferior windo)-.11 E(ws of the speci\214ed windo)-.275 E 1.43
-.715(w, i)-.275 H(n).715 E(bottom-to-top stacking order)72 594.6 Q 5.5
(.I)-.605 G 2.75(tc)-5.5 G(auses the X serv)-2.75 E(er to generate a)
-.165 E F0(Destr)3.666 E(oyNotify)-.198 E F1 -2.365 -.275(ev e)3.666 H
(nt for each).275 E(windo)72 607.6 Q 4.18 -.715(w. I)-.275 H 2.75(fa)
.715 G .33 -.165(ny m)-2.75 H(apped subwindo).165 E
(ws were actually destro)-.275 E(yed,)-.11 E F0(XDestr)3.666 E
(oySubwindo)-.198 E(ws)-.11 E F1(causes the)3.666 E 2.75(Xs)72 620.6 S
(erv)-2.75 E(er to generate)-.165 E F0(Expose)3.666 E F1 -2.365 -.275
(ev e)3.666 H(nts on the speci\214ed windo).275 E 4.18 -.715(w. T)-.275
H(his is much more ef).715 E(\214cient than)-.275 E(deleting man)72
633.6 Q 2.75(yw)-.165 G(indo)-2.75 E
(ws one at a time because much of the w)-.275 E
(ork need be performed only once for)-.11 E(all of the windo)72 646.6 Q
(ws, rather than for each windo)-.275 E 4.18 -.715(w. T)-.275 H
(he subwindo).715 E(ws should ne)-.275 E -.165(ve)-.275 G 2.75(rb).165 G
2.75(er)-2.75 G(eferenced)-2.75 E(ag)72 659.6 Q(ain.)-.055 E F0(XDestr)
72.916 676.5 Q(oySubwindo)-.198 E(ws)-.11 E F1(can generate a)3.666 E F0
(BadW)3.666 E(indo)-.198 E(w)-.11 E F1(error)3.666 E(.)-.605 E F0 2.75
(3.5. Mapping)72 702.5 R -.198(Wi)2.75 G(ndo).198 E(ws)-.11 E F1 2.75
(Aw)72 719.4 S(indo)-2.75 E 2.75(wi)-.275 G 2.75(sc)-2.75 G
(onsidered mapped if an)-2.75 E F0(XMapW)3.666 E(indo)-.198 E(w)-.11 E
F1(call has been made on it.)3.666 E(It may not be)5.5 E
(visible on the screen for one of the follo)72 732.4 Q(wing reasons:)
-.275 E F0(42)282.5 769 Q 0 Cg EP
%%Page: 43 48
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E/F1 11/Times-Roman@0 SF 23.65<8349>72
85 S 2.75(ti)-23.65 G 2.75(so)-2.75 G(bscured by another opaque windo)
-2.75 E -.715(w.)-.275 G 23.65<834f>72 101.9 S
(ne of its ancestors is not mapped.)-23.65 E 23.65<8349>72 118.8 S 2.75
(ti)-23.65 G 2.75(se)-2.75 G(ntirely clipped by an ancestor)-2.75 E(.)
-.605 E F0(Expose)72.916 135.7 Q F1 -2.365 -.275(ev e)3.666 H
(nts are generated for the windo).275 E 2.75(ww)-.275 G
(hen part or all of it becomes visible on the screen.)-2.75 E 2.75(Ac)72
148.7 S(lient recei)-2.75 E -.165(ve)-.275 G 2.75(st).165 G(he)-2.75 E
F0(Expose)3.666 E F1 -2.365 -.275(ev e)3.666 H(nts only if it has ask)
.275 E(ed for them.)-.11 E -.44(Wi)5.5 G(ndo).44 E
(ws retain their position)-.275 E(in the stacking order when the)72
161.7 Q 2.75(ya)-.165 G(re unmapped.)-2.75 E 2.75(Aw)72 178.6 S(indo)
-2.75 E 2.75(wm)-.275 G(anager may w)-2.75 E
(ant to control the placement of subwindo)-.11 E 2.75(ws. If)-.275 F F0
(Substructur)3.666 E(eRedi-)-.198 E -.198(re)72 191.6 S(ctMask).198 E F1
(has been selected by a windo)3.666 E 2.75(wm)-.275 G
(anager on a parent windo)-2.75 E 2.75(w\()-.275 G(usually a root windo)
-2.75 E(w\),)-.275 E 2.75(am)72 204.6 S
(ap request initiated by other clients on a child windo)-2.75 E 2.75(wi)
-.275 G 2.75(sn)-2.75 G(ot performed, and the windo)-2.75 E 2.75(wm)
-.275 G(an-)-2.75 E(ager is sent a)72 217.6 Q F0(MapRequest)3.666 E F1
-2.365 -.275(ev e)3.666 H 2.75(nt. Ho).275 F(we)-.275 E -.165(ve)-.275 G
.88 -.44(r, i).165 H 2.75(ft).44 G(he o)-2.75 E -.165(ve)-.165 G
(rride-redirect \215ag on the child had been set).165 E(to)72 230.6 Q F0
-.814(Tr)3.666 G(ue).814 E F1
(\(usually only on pop-up menus\), the map request is performed.)3.666 E
2.75(At)72 247.5 S(iling windo)-2.75 E 2.75(wm)-.275 G
(anager might decide to reposition and resize other clients' windo)-2.75
E(ws and then)-.275 E(decide to map the windo)72 260.5 Q 2.75(wt)-.275 G
2.75(oi)-2.75 G(ts \214nal location.)-2.75 E 2.75(Aw)5.5 G(indo)-2.75 E
2.75(wm)-.275 G(anager that w)-2.75 E(ants to pro)-.11 E(vide decora-)
-.165 E(tion might reparent the child into a frame \214rst.)72 273.5 Q
-.165(Fo)5.5 G 2.75(rf).165 G
(urther information, see sections 3.2.8 and)-2.75 E 2.75(10.10. Only)72
286.5 R 2.75(as)2.75 G(ingle client at a time can select for)-2.75 E F0
(Substructur)3.666 E(eRedir)-.198 E(ectMask)-.198 E F1(.).916 E
(Similarly)72 303.4 Q 2.75(,as)-.715 G(ingle client can select for)-2.75
E F0(ResizeRedir)3.666 E(ectMask)-.198 E F1(on a parent windo)3.666 E
4.18 -.715(w. T)-.275 H(hen, an).715 E(y)-.165 E
(attempt to resize the windo)72 316.4 Q 2.75(wb)-.275 G 2.75(ya)-2.75 G
(nother client is suppressed, and the client recei)-2.75 E -.165(ve)
-.275 G 2.75(sa).165 G F0(Resiz-).916 E(eRequest)72 329.4 Q F1 -2.365
-.275(ev e)3.666 H(nt.).275 E 1.76 -.88(To m)72 359.3 T(ap a gi).88 E
-.165(ve)-.275 G 2.75(nw).165 G(indo)-2.75 E 1.43 -.715(w, u)-.275 H(se)
.715 E F0(XMapW)3.666 E(indo)-.198 E(w)-.11 E F1(.).916 E .44 LW 36
377.05 36 388.05 DL 36 375.05 36 386.05 DL 41.5 373.3 36 373.3 DL 43.5
373.3 38 373.3 DL 49 373.3 43.5 373.3 DL(XMapW)72 389.2 Q(indo)-.44 E
.916(w\()-.275 G/F2 11/Times-Italic@0 SF(display)A F1(,)A F2(w)2.75 E F1
(\)).916 E(Display *)88.5 402.2 Q F2(display)A F1(;).916 E -.44(Wi)88.5
415.2 S(ndo).44 E(w)-.275 E F2(w)2.75 E F1(;).916 E F2(display)72 436 Q
F1(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605
E F2(w)72 452.9 Q F1(Speci\214es the windo)64.663 E -.715(w.)-.275 G 36
448.55 36 459.55 DL 36 446.55 36 457.55 DL 41.5 457.8 36 457.8 DL 43.5
457.8 38 457.8 DL 49 457.8 43.5 457.8 DL(The)72 482.8 Q F0(XMapW)3.666 E
(indo)-.198 E(w)-.11 E F1(function maps the windo)3.666 E 2.75(wa)-.275
G(nd all of its subwindo)-2.75 E(ws that ha)-.275 E .33 -.165(ve h)-.22
H(ad map).165 E 2.75(requests. Mapping)72 495.8 R 2.75(aw)2.75 G(indo)
-2.75 E 2.75(wt)-.275 G
(hat has an unmapped ancestor does not display the windo)-2.75 E 2.75
(wb)-.275 G(ut)-2.97 E
(marks it as eligible for display when the ancestor becomes mapped.)72
508.8 Q(Such a windo)5.5 E 2.75(wi)-.275 G 2.75(sc)-2.75 G(alled)-2.75 E
(un)72 521.8 Q(vie)-.44 E -.11(wa)-.275 G 2.75(ble. When).11 F
(all its ancestors are mapped, the windo)2.75 E 2.75(wb)-.275 G
(ecomes vie)-2.75 E -.11(wa)-.275 G(ble and will be visi-).11 E
(ble on the screen if it is not obscured by another windo)72 534.8 Q
4.18 -.715(w. T)-.275 H(his function has no ef).715 E(fect if the win-)
-.275 E(do)72 547.8 Q 2.75(wi)-.275 G 2.75(sa)-2.75 G(lready mapped.)
-2.75 E(If the o)72 564.7 Q -.165(ve)-.165 G
(rride-redirect of the windo).165 E 2.75(wi)-.275 G(s)-2.75 E F0 -.275
(Fa)3.666 G(lse).275 E F1(and if some other client has selected)3.666 E
F0(Substructur)3.666 E(-)-.407 E(eRedir)72 577.7 Q(ectMask)-.198 E F1
(on the parent windo)3.666 E 1.43 -.715(w, t)-.275 H(hen the X serv).715
E(er generates a)-.165 E F0(MapRequest)3.666 E F1 -2.365 -.275(ev e)
3.666 H(nt, and the).275 E F0(XMapW)72.916 590.7 Q(indo)-.198 E(w)-.11 E
F1(function does not map the windo)3.666 E 4.18 -.715(w. O)-.275 H
(therwise, the windo).715 E 2.75(wi)-.275 G 2.75(sm)-2.75 G
(apped, and the X)-2.75 E(serv)72 603.7 Q(er generates a)-.165 E F0
(MapNotify)3.666 E F1 -2.365 -.275(ev e)3.666 H(nt.).275 E(If the windo)
72 620.6 Q 2.75(wb)-.275 G(ecomes vie)-2.75 E -.11(wa)-.275 G
(ble and no earlier contents for it are remembered, the X serv).11 E
(er tiles)-.165 E(the windo)72 633.6 Q 2.75(ww)-.275 G
(ith its background.)-2.75 E(If the windo)5.5 E(w')-.275 E 2.75(sb)-.605
G(ackground is unde\214ned, the e)-2.75 E(xisting screen)-.165 E
(contents are not altered, and the X serv)72 646.6 Q
(er generates zero or more)-.165 E F0(Expose)3.666 E F1 -2.365 -.275
(ev e)3.666 H 2.75(nts. If).275 F(backing-store)2.75 E -.11(wa)72 659.6
S 2.75(sm).11 G(aintained while the windo)-2.75 E 2.75(ww)-.275 G
(as unmapped, no)-2.86 E F0(Expose)3.666 E F1 -2.365 -.275(ev e)3.666 H
(nts are generated.).275 E(If backing-)5.5 E(store will no)72 672.6 Q
2.75(wb)-.275 G 2.75(em)-2.75 G(aintained, a full-windo)-2.75 E 2.75(we)
-.275 G(xposure is al)-2.915 E -.11(wa)-.11 G(ys generated.).11 E
(Otherwise, only visi-)5.5 E(ble re)72 685.6 Q(gions may be reported.)
-.165 E(Similar tiling and e)5.5 E(xposure tak)-.165 E 2.75(ep)-.11 G
(lace for an)-2.75 E 2.75(yn)-.165 G -.275(ew)-2.75 G(ly vie).275 E -.11
(wa)-.275 G(ble infe-).11 E(riors.)72 698.6 Q(If the windo)72 715.5 Q
2.75(wi)-.275 G 2.75(sa)-2.75 G(n)-2.75 E F0(InputOutput)3.666 E F1
(windo)3.666 E -.715(w,)-.275 G F0(XMapW)4.381 E(indo)-.198 E(w)-.11 E
F1(generates)3.666 E F0(Expose)3.666 E F1 -2.365 -.275(ev e)3.666 H
(nts on each).275 E F0(InputOutput)72.916 728.5 Q F1(windo)3.666 E 2.75
(wt)-.275 G(hat it causes to be displayed.)-2.75 E
(If the client maps and paints the windo)5.5 E(w)-.275 E F0(43)282.5 769
Q 0 Cg EP
%%Page: 44 49
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E/F1 11/Times-Roman@0 SF
(and if the client be)72 85 Q(gins processing e)-.165 E -.165(ve)-.275 G
(nts, the windo).165 E 2.75(wi)-.275 G 2.75(sp)-2.75 G(ainted twice.)
-2.75 E 1.76 -.88(To a)5.5 H -.22(vo).66 G(id this, \214rst ask for).22
E F0(Expose)72.916 98 Q F1 -2.365 -.275(ev e)3.666 H
(nts and then map the windo).275 E 1.43 -.715(w, s)-.275 H 2.75(ot).715
G(he client processes input e)-2.75 E -.165(ve)-.275 G(nts as usual.)
.165 E(The e)5.5 E -.165(ve)-.275 G(nt).165 E(list will include)72 111 Q
F0(Expose)3.666 E F1(for each windo)3.666 E 2.75(wt)-.275 G
(hat has appeared on the screen.)-2.75 E(The client')5.5 E 2.75(sn)-.605
G(ormal)-2.75 E(response to an)72 124 Q F0(Expose)3.666 E F1 -2.365
-.275(ev e)3.666 H(nt should be to repaint the windo).275 E 4.18 -.715
(w. T)-.275 H(his method usually leads to sim-).715 E
(pler programs and to proper interaction with windo)72 137 Q 2.75(wm)
-.275 G(anagers.)-2.75 E F0(XMapW)72.916 153.9 Q(indo)-.198 E(w)-.11 E
F1(can generate a)3.666 E F0(BadW)3.666 E(indo)-.198 E(w)-.11 E F1
(error)3.666 E(.)-.605 E 1.76 -.88(To m)72 183.8 T(ap and raise a windo)
.88 E 1.43 -.715(w, u)-.275 H(se).715 E F0(XMapRaised)3.666 E F1(.).916
E .44 LW 36 201.55 36 212.55 DL 36 199.55 36 210.55 DL 41.5 197.8 36
197.8 DL 43.5 197.8 38 197.8 DL 49 197.8 43.5 197.8 DL -1.834
(XMapRaised \()72 213.7 R/F2 11/Times-Italic@0 SF(display).916 E F1(,)A
F2(w)2.75 E F1(\)).916 E(Display *)88.5 226.7 Q F2(display)A F1(;).916 E
-.44(Wi)88.5 239.7 S(ndo).44 E(w)-.275 E F2(w)2.75 E F1(;).916 E F2
(display)72 260.5 Q F1(Speci\214es the connection to the X serv)40.221 E
(er)-.165 E(.)-.605 E F2(w)72 277.4 Q F1(Speci\214es the windo)64.663 E
-.715(w.)-.275 G 36 273.05 36 284.05 DL 36 271.05 36 282.05 DL 41.5
282.3 36 282.3 DL 43.5 282.3 38 282.3 DL 49 282.3 43.5 282.3 DL(The)72
307.3 Q F0(XMapRaised)3.666 E F1(function essentially is similar to)
3.666 E F0(XMapW)3.666 E(indo)-.198 E(w)-.11 E F1
(in that it maps the windo)3.666 E(w)-.275 E(and all of its subwindo)72
320.3 Q(ws that ha)-.275 E .33 -.165(ve h)-.22 H(ad map requests.).165 E
(Ho)5.5 E(we)-.275 E -.165(ve)-.275 G .88 -.44(r, i).165 H 2.75(ta).44 G
(lso raises the speci\214ed win-)-2.75 E(do)72 333.3 Q 2.75(wt)-.275 G
2.75(ot)-2.75 G(he top of the stack.)-2.75 E -.165(Fo)5.5 G 2.75(ra).165
G(dditional information, see)-2.75 E F0(XMapW)3.666 E(indo)-.198 E(w)
-.11 E F1(.).916 E F0(XMapRaised)72.916 350.2 Q F1
(can generate multiple)3.666 E F0(BadW)3.666 E(indo)-.198 E(w)-.11 E F1
(errors.)3.666 E 1.76 -.88(To m)72 380.1 T(ap all subwindo).88 E
(ws for a speci\214ed windo)-.275 E 1.43 -.715(w, u)-.275 H(se).715 E F0
(XMapSubwindo)3.666 E(ws)-.11 E F1(.).916 E 36 397.85 36 408.85 DL 36
395.85 36 406.85 DL 41.5 394.1 36 394.1 DL 43.5 394.1 38 394.1 DL 49
394.1 43.5 394.1 DL(XMapSubwindo)72 410 Q -1.834(ws \()-.275 F F2
(display).916 E F1(,)A F2(w)2.75 E F1(\)).916 E(Display *)88.5 423 Q F2
(display)A F1(;).916 E -.44(Wi)88.5 436 S(ndo).44 E(w)-.275 E F2(w)2.75
E F1(;).916 E F2(display)72 456.8 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2(w)72 473.7 Q F1(Speci\214es the windo)64.663 E -.715(w.)-.275 G 36
469.35 36 480.35 DL 36 467.35 36 478.35 DL 41.5 478.6 36 478.6 DL 43.5
478.6 38 478.6 DL 49 478.6 43.5 478.6 DL(The)72 503.6 Q F0(XMapSubwindo)
3.666 E(ws)-.11 E F1(function maps all subwindo)3.666 E
(ws for a speci\214ed windo)-.275 E 2.75(wi)-.275 G 2.75(nt)-2.75 G
(op-to-bottom)-2.75 E(stacking order)72 516.6 Q 5.5(.T)-.605 G
(he X serv)-5.5 E(er generates)-.165 E F0(Expose)3.666 E F1 -2.365 -.275
(ev e)3.666 H(nts on each ne).275 E(wly displayed windo)-.275 E 4.18
-.715(w. T)-.275 H(his).715 E(may be much more ef)72 529.6 Q
(\214cient than mapping man)-.275 E 2.75(yw)-.165 G(indo)-2.75 E
(ws one at a time because the serv)-.275 E(er needs)-.165 E
(to perform much of the w)72 542.6 Q
(ork only once, for all of the windo)-.11 E
(ws, rather than for each windo)-.275 E -.715(w.)-.275 G F0
(XMapSubwindo)72.916 559.5 Q(ws)-.11 E F1(can generate a)3.666 E F0
(BadW)3.666 E(indo)-.198 E(w)-.11 E F1(error)3.666 E(.)-.605 E F0 2.75
(3.6. Unmapping)72 585.5 R -.198(Wi)2.75 G(ndo).198 E(ws)-.11 E F1
(Xlib pro)72 602.4 Q(vides functions that you can use to unmap a windo)
-.165 E 2.75(wo)-.275 G 2.75(ra)-2.75 G(ll subwindo)-2.75 E(ws.)-.275 E
1.76 -.88(To u)72 632.3 T(nmap a windo).88 E 1.43 -.715(w, u)-.275 H(se)
.715 E F0(XUnmapW)3.666 E(indo)-.198 E(w)-.11 E F1(.).916 E F0(44)282.5
769 Q 0 Cg EP
%%Page: 45 50
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E .44 LW 36 76.75 36 87.75 DL 36 74.75
36 85.75 DL 41.5 73 36 73 DL 43.5 73 38 73 DL 49 73 43.5 73 DL/F1 11
/Times-Roman@0 SF(XUnmapW)72 88.9 Q(indo)-.44 E .916(w\()-.275 G/F2 11
/Times-Italic@0 SF(display)A F1(,)A F2(w)2.75 E F1(\)).916 E(Display *)
88.5 101.9 Q F2(display)A F1(;).916 E -.44(Wi)88.5 114.9 S(ndo).44 E(w)
-.275 E F2(w)2.75 E F1(;).916 E F2(display)72 135.7 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2(w)72 152.6 Q F1(Speci\214es the windo)64.663 E -.715(w.)-.275 G 36
148.25 36 159.25 DL 36 146.25 36 157.25 DL 41.5 157.5 36 157.5 DL 43.5
157.5 38 157.5 DL 49 157.5 43.5 157.5 DL(The)72 182.5 Q F0(XUnmapW)3.666
E(indo)-.198 E(w)-.11 E F1(function unmaps the speci\214ed windo)3.666 E
2.75(wa)-.275 G(nd causes the X serv)-2.75 E(er to gener)-.165 E(-)-.22
E(ate an)72 195.5 Q F0(UnmapNotify)3.666 E F1 -2.365 -.275(ev e)3.666 H
2.75(nt. If).275 F(the speci\214ed windo)2.75 E 2.75(wi)-.275 G 2.75(sa)
-2.75 G(lready unmapped,)-2.75 E F0(XUnmapW)3.666 E(indo)-.198 E(w)-.11
E F1(has no ef)72 208.5 Q 2.75(fect. Normal)-.275 F -.165(ex)2.75 G
(posure processing on formerly obscured windo).165 E(ws is performed.)
-.275 E(An)5.5 E(y)-.165 E(child windo)72 221.5 Q 2.75(ww)-.275 G
(ill no longer be visible until another map call is made on the parent.)
-2.75 E(In other)5.5 E -.11(wo)72 234.5 S(rds, the subwindo).11 E
(ws are still mapped b)-.275 E
(ut are not visible until the parent is mapped.)-.22 E(Unmap-)5.5 E
(ping a windo)72 247.5 Q 2.75(ww)-.275 G(ill generate)-2.75 E F0(Expose)
3.666 E F1 -2.365 -.275(ev e)3.666 H(nts on windo).275 E
(ws that were formerly obscured by it.)-.275 E F0(XUnmapW)72.916 264.4 Q
(indo)-.198 E(w)-.11 E F1(can generate a)3.666 E F0(BadW)3.666 E(indo)
-.198 E(w)-.11 E F1(error)3.666 E(.)-.605 E 1.76 -.88(To u)72 294.3 T
(nmap all subwindo).88 E(ws for a speci\214ed windo)-.275 E 1.43 -.715
(w, u)-.275 H(se).715 E F0(XUnmapSubwindo)3.666 E(ws)-.11 E F1(.).916 E
36 312.05 36 323.05 DL 36 310.05 36 321.05 DL 41.5 308.3 36 308.3 DL
43.5 308.3 38 308.3 DL 49 308.3 43.5 308.3 DL(XUnmapSubwindo)72 324.2 Q
-1.834(ws \()-.275 F F2(display).916 E F1(,)A F2(w)2.75 E F1(\)).916 E
(Display *)88.5 337.2 Q F2(display)A F1(;).916 E -.44(Wi)88.5 350.2 S
(ndo).44 E(w)-.275 E F2(w)2.75 E F1(;).916 E F2(display)72 371 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2(w)72 387.9 Q F1(Speci\214es the windo)64.663 E -.715(w.)-.275 G 36
383.55 36 394.55 DL 36 381.55 36 392.55 DL 41.5 392.8 36 392.8 DL 43.5
392.8 38 392.8 DL 49 392.8 43.5 392.8 DL(The)72 417.8 Q F0
(XUnmapSubwindo)3.666 E(ws)-.11 E F1(function unmaps all subwindo)3.666
E(ws for the speci\214ed windo)-.275 E 2.75(wi)-.275 G 2.75(nb)-2.75 G
(ottom-)-2.75 E(to-top stacking order)72 430.8 Q 5.5(.I)-.605 G 2.75(tc)
-5.5 G(auses the X serv)-2.75 E(er to generate an)-.165 E F0
(UnmapNotify)3.666 E F1 -2.365 -.275(ev e)3.666 H(nt on each subwin-)
.275 E(do)72 443.8 Q 2.75(wa)-.275 G(nd)-2.75 E F0(Expose)3.666 E F1
-2.365 -.275(ev e)3.666 H(nts on formerly obscured windo).275 E 2.75
(ws. Using)-.275 F(this function is much more ef)2.75 E<8c2d>-.275 E
(cient than unmapping multiple windo)72 456.8 Q
(ws one at a time because the serv)-.275 E(er needs to perform much)
-.165 E(of the w)72 469.8 Q(ork only once, for all of the windo)-.11 E
(ws, rather than for each windo)-.275 E -.715(w.)-.275 G F0
(XUnmapSubwindo)72.916 486.7 Q(ws)-.11 E F1(can generate a)3.666 E F0
(BadW)3.666 E(indo)-.198 E(w)-.11 E F1(error)3.666 E(.)-.605 E F0 2.75
(3.7. Con\214guring)72 512.7 R -.198(Wi)2.75 G(ndo).198 E(ws)-.11 E F1
(Xlib pro)72 533.5 Q(vides functions that you can use to mo)-.165 E .33
-.165(ve a w)-.165 H(indo).165 E 1.43 -.715(w, r)-.275 H(esize a windo)
.715 E 1.43 -.715(w, m)-.275 H .33 -.165(ove a).715 H(nd resize a).165 E
(windo)72 546.5 Q 1.43 -.715(w, o)-.275 H 2.75(rc).715 G(hange a windo)
-2.75 E(w')-.275 E 2.75(sb)-.605 G(order width.)-2.75 E 1.76 -.88(To c)
5.5 H(hange one of these parameters, set the appro-).88 E
(priate member of the)72 559.5 Q F0(XW)3.666 E(indo)-.198 E(wChanges)
-.11 E F1(structure and OR in the corresponding v)3.666 E(alue mask in)
-.275 E(subsequent calls to)72 572.5 Q F0(XCon\214gur)3.666 E(eW)-.198 E
(indo)-.198 E(w)-.11 E F1 5.5(.T).916 G(he symbols for the v)-5.5 E
(alue mask bits and the)-.275 E F0(XW)3.666 E(in-)-.198 E(do)72 585.5 Q
(wChanges)-.11 E F1(structure are:)3.666 E F0(45)282.5 769 Q 0 Cg EP
%%Page: 46 51
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E .44 LW 36 76.75 36 87.75 DL 36 74.75
36 85.75 DL 41.5 73 36 73 DL 43.5 73 38 73 DL 49 73 43.5 73 DL/F1 11
/Times-Roman@0 SF(/* Con\214gure windo)72 88.9 Q 2.75(wv)-.275 G
(alue mask bits */)-3.025 E(#de\214ne)72 108.4 Q F0(CWX)125.416 108.4 Q
F1(\(1<<0\))321 108.4 Q(#de\214ne)72 121.4 Q F0(CWY)125.416 121.4 Q F1
(\(1<<1\))321 121.4 Q(#de\214ne)72 134.4 Q F0(CWW)125.416 134.4 Q(idth)
-.198 E F1(\(1<<2\))321 134.4 Q(#de\214ne)72 147.4 Q F0(CWHeight)125.416
147.4 Q F1(\(1<<3\))321 147.4 Q(#de\214ne)72 160.4 Q F0(CWBorderW)
125.416 160.4 Q(idth)-.198 E F1(\(1<<4\))321 160.4 Q(#de\214ne)72 173.4
Q F0(CWSibling)125.416 173.4 Q F1(\(1<<5\))321 173.4 Q(#de\214ne)72
186.4 Q F0(CWStackMode)125.416 186.4 Q F1(\(1<<6\))321 186.4 Q(/* V)72
212.4 Q(alues */)-1.221 E(typedef struct {)72 238.4 Q(int x, y;)108
251.4 Q(int width, height;)108 264.4 Q(int border_width;)108 277.4 Q
-.44(Wi)108 290.4 S(ndo).44 E 2.75(ws)-.275 G(ibling;)-2.75 E
(int stack_mode;)108 303.4 Q 2.75(}X)72 316.4 S -.44(Wi)-2.75 G(ndo).44
E(wChanges;)-.275 E 36 318.55 36 329.55 DL 36 316.55 36 327.55 DL 41.5
327.8 36 327.8 DL 43.5 327.8 38 327.8 DL 49 327.8 43.5 327.8 DL
(The x and y members are used to set the windo)72 352.8 Q(w')-.275 E
2.75(sxa)-.605 G(nd y coordinates, which are relati)-2.75 E .33 -.165
(ve t)-.275 H 2.75(ot).165 G(he)-2.75 E(parent')72 365.8 Q 2.75(so)-.605
G(rigin and indicate the position of the upper)-2.75 E
(-left outer corner of the windo)-.22 E 4.18 -.715(w. T)-.275 H
(he width).715 E
(and height members are used to set the inside size of the windo)72
378.8 Q 1.43 -.715(w, n)-.275 H(ot including the border).715 E 2.75(,a)
-.44 G(nd)-2.75 E(must be nonzero, or a)72 391.8 Q F0(BadV)3.666 E(alue)
-1.012 E F1(error results.)3.666 E(Attempts to con\214gure a root windo)
5.5 E 2.75(wh)-.275 G -2.475 -.22(av e)-2.75 H(no)2.97 E(ef)72 404.8 Q
(fect.)-.275 E
(The border_width member is used to set the width of the border in pix)
72 421.7 Q 2.75(els. Note)-.165 F(that setting just)2.75 E
(the border width lea)72 434.7 Q -.165(ve)-.22 G 2.75(st).165 G
(he outer)-2.75 E(-left corner of the windo)-.22 E 2.75(wi)-.275 G 2.75
(na\214)-2.75 G -.165(xe)-2.75 G 2.75(dp).165 G(osition b)-2.75 E(ut mo)
-.22 E -.165(ve)-.165 G 2.75(st).165 G(he abso-)-2.75 E
(lute position of the windo)72 447.7 Q(w')-.275 E 2.75(so)-.605 G 2.75
(rigin. If)-2.75 F(you attempt to set the border)2.75 E(-width attrib)
-.22 E(ute of an)-.22 E F0(Inpu-)3.666 E(tOnly)72 460.7 Q F1(windo)3.666
E 2.75(wn)-.275 G(onzero, a)-2.75 E F0(BadMatch)3.666 E F1
(error results.)3.666 E
(The sibling member is used to set the sibling windo)72 477.6 Q 2.75(wf)
-.275 G(or stacking operations.)-2.75 E(The stack_mode)5.5 E
(member is used to set ho)72 490.6 Q 2.75(wt)-.275 G(he windo)-2.75 E
2.75(wi)-.275 G 2.75(st)-2.75 G 2.75(ob)-2.75 G 2.75(er)-2.75 G(estack)
-2.75 E(ed and can be set to)-.11 E F0(Abo)3.666 E -.11(ve)-.11 G F1(,)
1.026 E F0(Belo)3.666 E(w)-.11 E F1(,).916 E F0 -1.012(To)3.666 G(pIf)
1.012 E F1(,).916 E F0(BottomIf)72.916 503.6 Q F1 2.75(,o).916 G(r)-2.75
E F0(Opposite)3.666 E F1(.).916 E(If the o)72 520.5 Q -.165(ve)-.165 G
(rride-redirect \215ag of the windo).165 E 2.75(wi)-.275 G(s)-2.75 E F0
-.275(Fa)3.666 G(lse).275 E F1(and if some other client has selected)
3.666 E F0(Sub-)3.666 E(structur)72 533.5 Q(eRedir)-.198 E(ectMask)-.198
E F1(on the parent, the X serv)3.666 E(er generates a)-.165 E F0
(Con\214gur)3.666 E(eRequest)-.198 E F1 -2.365 -.275(ev e)3.666 H
(nt, and).275 E(no further processing is performed.)72 546.5 Q
(Otherwise, if some other client has selected)5.5 E F0(ResizeRedir)3.666
E(ect-)-.198 E(Mask)72 559.5 Q F1(on the windo)3.666 E 2.75(wa)-.275 G
(nd the inside width or height of the windo)-2.75 E 2.75(wi)-.275 G 2.75
(sb)-2.75 G(eing changed, a)-2.75 E F0(Resiz-)3.666 E(eRequest)72 572.5
Q F1 -2.365 -.275(ev e)3.666 H(nt is generated, and the current inside \
width and height are used instead.).275 E(Note that)5.5 E(the o)72 585.5
Q -.165(ve)-.165 G(rride-redirect \215ag of the windo).165 E 2.75(wh)
-.275 G(as no ef)-2.75 E(fect on)-.275 E F0(ResizeRedir)3.666 E(ectMask)
-.198 E F1(and that)3.666 E F0(Sub-)3.666 E(structur)72 598.5 Q(eRedir)
-.198 E(ectMask)-.198 E F1(on the parent has precedence o)3.666 E -.165
(ve)-.165 G(r).165 E F0(ResizeRedir)3.666 E(ectMask)-.198 E F1
(on the win-)3.666 E(do)72 611.5 Q -.715(w.)-.275 G
(When the geometry of the windo)72 628.4 Q 2.75(wi)-.275 G 2.75(sc)-2.75
G(hanged as speci\214ed, the windo)-2.75 E 2.75(wi)-.275 G 2.75(sr)-2.75
G(estack)-2.75 E(ed among sib-)-.11 E(lings, and a)72 641.4 Q F0
(Con\214gur)3.666 E(eNotify)-.198 E F1 -2.365 -.275(ev e)3.666 H
(nt is generated if the state of the windo).275 E 2.75(wa)-.275 G
(ctually changes.)-2.75 E F0(Gra)72.916 654.4 Q(vityNotify)-.275 E F1
-2.365 -.275(ev e)3.666 H(nts are generated after).275 E F0(Con\214gur)
3.666 E(eNotify)-.198 E F1 -2.365 -.275(ev e)3.666 H 2.75(nts. If).275 F
(the inside width or height)2.75 E(of the windo)72 667.4 Q 2.75(wh)-.275
G(as actually changed, children of the windo)-2.75 E 2.75(wa)-.275 G
(re af)-2.75 E(fected as speci\214ed.)-.275 E(If a windo)72 684.3 Q(w')
-.275 E 2.75(ss)-.605 G(ize actually changes, the windo)-2.75 E(w')-.275
E 2.75(ss)-.605 G(ubwindo)-2.75 E(ws mo)-.275 E .33 -.165(ve a)-.165 H
(ccording to their windo).165 E(w)-.275 E(gra)72 697.3 Q(vity)-.22 E 5.5
(.D)-.715 G(epending on the windo)-5.5 E(w')-.275 E 2.75(sb)-.605 G
(it gra)-2.75 E(vity)-.22 E 2.75(,t)-.715 G(he contents of the windo)
-2.75 E 2.75(wa)-.275 G(lso may be mo)-2.75 E -.165(ve)-.165 G(d).165 E
(\(see section 3.2.3\).)72 710.3 Q F0(46)282.5 769 Q 0 Cg EP
%%Page: 47 52
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E/F1 11/Times-Roman@0 SF(If re)72 85 Q
(gions of the windo)-.165 E 2.75(ww)-.275 G(ere obscured b)-2.75 E
(ut no)-.22 E 2.75(wa)-.275 G(re not, e)-2.75 E
(xposure processing is performed on)-.165 E
(these formerly obscured windo)72 98 Q(ws, including the windo)-.275 E
2.75(wi)-.275 G(tself and its inferiors.)-2.75 E(As a result of)5.5 E
(increasing the width or height, e)72 111 Q
(xposure processing is also performed on an)-.165 E 2.75(yn)-.165 G .55
-.275(ew r)-2.75 H -.165(eg).275 G(ions of the).165 E(windo)72 124 Q
2.75(wa)-.275 G(nd an)-2.75 E 2.75(yr)-.165 G -.165(eg)-2.75 G
(ions where windo).165 E 2.75(wc)-.275 G(ontents are lost.)-2.75 E
(The restack check \(speci\214cally)72 140.9 Q 2.75(,t)-.715 G
(he computation for)-2.75 E F0(BottomIf)3.666 E F1(,).916 E F0 -1.012
(To)3.666 G(pIf)1.012 E F1 2.75(,a).916 G(nd)-2.75 E F0(Opposite)3.666 E
F1 2.75(\)i).916 G 2.75(sp)-2.75 G(er)-2.75 E(-)-.22 E
(formed with respect to the windo)72 153.9 Q(w')-.275 E 2.75<738c>-.605
G(nal size and position \(as controlled by the other ar)-2.75 E(guments)
-.198 E(of the request\), not its initial position.)72 166.9 Q
(If a sibling is speci\214ed without a stack_mode, a)5.5 E F0(Bad-)3.666
E(Match)72 179.9 Q F1(error results.)3.666 E
(If a sibling and a stack_mode are speci\214ed, the windo)72 196.8 Q
2.75(wi)-.275 G 2.75(sr)-2.75 G(estack)-2.75 E(ed as follo)-.11 E(ws:)
-.275 E F0(Abo)72.916 216.3 Q -.11(ve)-.11 G F1(The windo)160.5 216.3 Q
2.75(wi)-.275 G 2.75(sp)-2.75 G(laced just abo)-2.75 E .33 -.165(ve t)
-.165 H(he sibling.).165 E F0(Belo)72.916 235.3 Q(w)-.11 E F1(The windo)
160.5 235.3 Q 2.75(wi)-.275 G 2.75(sp)-2.75 G(laced just belo)-2.75 E
2.75(wt)-.275 G(he sibling.)-2.75 E F0 -1.012(To)72.916 254.3 S(pIf)
1.012 E F1(If the sibling occludes the windo)160.5 254.3 Q 1.43 -.715
(w, t)-.275 H(he windo).715 E 2.75(wi)-.275 G 2.75(sp)-2.75 G
(laced at the top of the stack.)-2.75 E F0(BottomIf)72.916 273.3 Q F1
(If the windo)160.5 273.3 Q 2.75(wo)-.275 G
(ccludes the sibling, the windo)-2.75 E 2.75(wi)-.275 G 2.75(sp)-2.75 G
(laced at the bottom of the)-2.75 E(stack.)160.5 286.3 Q F0(Opposite)
72.916 305.3 Q F1(If the sibling occludes the windo)160.5 305.3 Q 1.43
-.715(w, t)-.275 H(he windo).715 E 2.75(wi)-.275 G 2.75(sp)-2.75 G
(laced at the top of the stack.)-2.75 E(If the windo)160.5 318.3 Q 2.75
(wo)-.275 G(ccludes the sibling, the windo)-2.75 E 2.75(wi)-.275 G 2.75
(sp)-2.75 G(laced at the bottom of the)-2.75 E(stack.)160.5 331.3 Q
(If a stack_mode is speci\214ed b)72 354.7 Q
(ut no sibling is speci\214ed, the windo)-.22 E 2.75(wi)-.275 G 2.75(sr)
-2.75 G(estack)-2.75 E(ed as follo)-.11 E(ws:)-.275 E F0(Abo)72.916
374.2 Q -.11(ve)-.11 G F1(The windo)160.5 374.2 Q 2.75(wi)-.275 G 2.75
(sp)-2.75 G(laced at the top of the stack.)-2.75 E F0(Belo)72.916 393.2
Q(w)-.11 E F1(The windo)160.5 393.2 Q 2.75(wi)-.275 G 2.75(sp)-2.75 G
(laced at the bottom of the stack.)-2.75 E F0 -1.012(To)72.916 412.2 S
(pIf)1.012 E F1(If an)160.5 412.2 Q 2.75(ys)-.165 G
(ibling occludes the windo)-2.75 E 1.43 -.715(w, t)-.275 H(he windo).715
E 2.75(wi)-.275 G 2.75(sp)-2.75 G(laced at the top of the stack.)-2.75 E
F0(BottomIf)72.916 431.2 Q F1(If the windo)160.5 431.2 Q 2.75(wo)-.275 G
(ccludes an)-2.75 E 2.75(ys)-.165 G(ibling, the windo)-2.75 E 2.75(wi)
-.275 G 2.75(sp)-2.75 G(laced at the bottom of the)-2.75 E(stack.)160.5
444.2 Q F0(Opposite)72.916 463.2 Q F1(If an)160.5 463.2 Q 2.75(ys)-.165
G(ibling occludes the windo)-2.75 E 1.43 -.715(w, t)-.275 H(he windo)
.715 E 2.75(wi)-.275 G 2.75(sp)-2.75 G(laced at the top of the stack.)
-2.75 E(If the windo)160.5 476.2 Q 2.75(wo)-.275 G(ccludes an)-2.75 E
2.75(ys)-.165 G(ibling, the windo)-2.75 E 2.75(wi)-.275 G 2.75(sp)-2.75
G(laced at the bottom of the)-2.75 E(stack.)160.5 489.2 Q
(Attempts to con\214gure a root windo)72 512.6 Q 2.75(wh)-.275 G -2.475
-.22(av e)-2.75 H(no ef)2.97 E(fect.)-.275 E 1.76 -.88(To c)72 542.5 T
(on\214gure a windo).88 E(w')-.275 E 2.75(ss)-.605 G
(ize, location, stacking, or border)-2.75 E 2.75(,u)-.44 G(se)-2.75 E F0
(XCon\214gur)3.666 E(eW)-.198 E(indo)-.198 E(w)-.11 E F1(.).916 E F0(47)
282.5 769 Q 0 Cg EP
%%Page: 48 53
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E .44 LW 36 76.75 36 87.75 DL 36 74.75
36 85.75 DL 41.5 73 36 73 DL 43.5 73 38 73 DL 49 73 43.5 73 DL/F1 11
/Times-Roman@0 SF(XCon\214gureW)72 88.9 Q(indo)-.44 E .916(w\()-.275 G
/F2 11/Times-Italic@0 SF(display)A F1(,)A F2(w)2.75 E F1(,).916 E F2
(value_mask)2.75 E F1(,).916 E F2(values)2.75 E F1(\)).916 E(Display *)
88.5 101.9 Q F2(display)A F1(;).916 E -.44(Wi)88.5 114.9 S(ndo).44 E(w)
-.275 E F2(w)2.75 E F1(;).916 E(unsigned int)88.5 127.9 Q F2(value_mask)
2.75 E F1(;).916 E(XW)88.5 140.9 Q(indo)-.44 E(wChanges *)-.275 E F2
(values)A F1(;).916 E F2(display)72 161.7 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2(w)72 178.6 Q F1(Speci\214es the windo)64.663 E 2.75(wt)-.275 G 2.75
(ob)-2.75 G 2.75(er)-2.75 G(econ\214gured.)-2.75 E F2(value_mask)72
195.5 Q F1(Speci\214es which v)20.069 E
(alues are to be set using information in the v)-.275 E
(alues structure.)-.275 E(This mask is the bitwise inclusi)144 208.5 Q
.33 -.165(ve O)-.275 H 2.75(Ro).165 G 2.75(ft)-2.75 G(he v)-2.75 E
(alid con\214gure windo)-.275 E 2.75(wv)-.275 G(alues bits.)-3.025 E F2
(values)72 225.4 Q F1(Speci\214es the)43.895 E F0(XW)3.666 E(indo)-.198
E(wChanges)-.11 E F1(structure.)3.666 E 36 221.05 36 232.05 DL 36 219.05
36 230.05 DL 41.5 230.3 36 230.3 DL 43.5 230.3 38 230.3 DL 49 230.3 43.5
230.3 DL(The)72 255.3 Q F0(XCon\214gur)3.666 E(eW)-.198 E(indo)-.198 E
(w)-.11 E F1(function uses the v)3.666 E(alues speci\214ed in the)-.275
E F0(XW)3.666 E(indo)-.198 E(wChanges)-.11 E F1(structure)3.666 E
(to recon\214gure a windo)72 268.3 Q(w')-.275 E 2.75(ss)-.605 G
(ize, position, border)-2.75 E 2.75(,a)-.44 G(nd stacking order)-2.75 E
5.5(.V)-.605 G(alues not speci\214ed are)-6.721 E(tak)72 281.3 Q
(en from the e)-.11 E(xisting geometry of the windo)-.165 E -.715(w.)
-.275 G
(If a sibling is speci\214ed without a stack_mode or if the windo)72
298.2 Q 2.75(wi)-.275 G 2.75(sn)-2.75 G(ot actually a sibling, a)-2.75 E
F0(Bad-)3.666 E(Match)72 311.2 Q F1(error results.)3.666 E
(Note that the computations for)5.5 E F0(BottomIf)3.666 E F1(,).916 E F0
-1.012(To)3.666 G(pIf)1.012 E F1 2.75(,a).916 G(nd)-2.75 E F0(Opposite)
3.666 E F1(are per)3.666 E(-)-.22 E(formed with respect to the windo)72
324.2 Q(w')-.275 E 2.75<738c>-.605 G
(nal geometry \(as controlled by the other ar)-2.75 E(guments passed)
-.198 E(to)72 337.2 Q F0(XCon\214gur)3.666 E(eW)-.198 E(indo)-.198 E(w)
-.11 E F1(\), not its initial geometry).916 E 5.5(.A)-.715 G .33 -.165
(ny b)-5.5 H(acking store contents of the windo).165 E 1.43 -.715(w, i)
-.275 H(ts).715 E(inferiors, and other ne)72 350.2 Q(wly visible windo)
-.275 E(ws are either discarded or changed to re\215ect the current)
-.275 E(screen contents \(depending on the implementation\).)72 363.2 Q
F0(XCon\214gur)72.916 380.1 Q(eW)-.198 E(indo)-.198 E(w)-.11 E F1
(can generate)3.666 E F0(BadMatch)3.666 E F1(,).916 E F0(BadV)3.666 E
(alue)-1.012 E F1 2.75(,a).916 G(nd)-2.75 E F0(BadW)3.666 E(indo)-.198 E
(w)-.11 E F1(errors.)3.666 E 1.76 -.88(To m)72 410 T .33 -.165(ove a w)
.88 H(indo).165 E 2.75(ww)-.275 G(ithout changing its size, use)-2.75 E
F0(XMo)3.666 E -.11(ve)-.11 G -.198(Wi).11 G(ndo).198 E(w)-.11 E F1(.)
.916 E 36 427.75 36 438.75 DL 36 425.75 36 436.75 DL 41.5 424 36 424 DL
43.5 424 38 424 DL 49 424 43.5 424 DL(XMo)72 439.9 Q -.165(ve)-.165 G
-.44(Wi).165 G(ndo).44 E .916(w\()-.275 G F2(display)A F1(,)A F2(w)2.75
E F1(,).916 E F2(x)2.75 E F1(,).916 E F2(y)2.75 E F1(\)).916 E
(Display *)88.5 452.9 Q F2(display)A F1(;).916 E -.44(Wi)88.5 465.9 S
(ndo).44 E(w)-.275 E F2(w)2.75 E F1(;).916 E(int)88.5 478.9 Q F2(x)2.75
E F1(,).916 E F2(y)2.75 E F1(;).916 E F2(display)72 499.7 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2(w)72 516.6 Q F1(Speci\214es the windo)64.663 E 2.75(wt)-.275 G 2.75
(ob)-2.75 G 2.75(em)-2.75 G -.165(ove)-2.75 G(d.).165 E F2(x)72 533.5 Q
(y)72 546.5 Q F1(Specify the x and y coordinates, which de\214ne the ne)
67.116 E 2.75(wl)-.275 G(ocation of the top-left)-2.75 E(pix)144 559.5 Q
(el of the windo)-.165 E(w')-.275 E 2.75(sb)-.605 G(order or the windo)
-2.75 E 2.75(wi)-.275 G(tself if it has no border)-2.75 E(.)-.605 E 36
555.15 36 566.15 DL 36 553.15 36 564.15 DL 41.5 564.4 36 564.4 DL 43.5
564.4 38 564.4 DL 49 564.4 43.5 564.4 DL(The)72 589.4 Q F0(XMo)3.666 E
-.11(ve)-.11 G -.198(Wi).11 G(ndo).198 E(w)-.11 E F1(function mo)3.666 E
-.165(ve)-.165 G 2.75(st).165 G(he speci\214ed windo)-2.75 E 2.75(wt)
-.275 G 2.75(ot)-2.75 G(he speci\214ed x and y coordinates,)-2.75 E -.22
(bu)72 602.4 S 2.75(ti).22 G 2.75(td)-2.75 G(oes not change the windo)
-2.75 E(w')-.275 E 2.75(ss)-.605 G(ize, raise the windo)-2.75 E 1.43
-.715(w, o)-.275 H 2.75(rc).715 G(hange the mapping state of the)-2.75 E
(windo)72 615.4 Q 4.18 -.715(w. M)-.275 H -.165(ov).715 G
(ing a mapped windo).165 E 2.75(wm)-.275 G(ay or may not lose the windo)
-2.75 E(w')-.275 E 2.75(sc)-.605 G(ontents depending on if)-2.75 E
(the windo)72 628.4 Q 2.75(wi)-.275 G 2.75(so)-2.75 G
(bscured by nonchildren and if no backing store e)-2.75 E 2.75
(xists. If)-.165 F(the contents of the win-)2.75 E(do)72 641.4 Q 2.75
(wa)-.275 G(re lost, the X serv)-2.75 E(er generates)-.165 E F0(Expose)
3.666 E F1 -2.365 -.275(ev e)3.666 H 2.75(nts. Mo).275 F
(ving a mapped windo)-.165 E 2.75(wg)-.275 G(enerates)-2.75 E F0(Expose)
72.916 654.4 Q F1 -2.365 -.275(ev e)3.666 H(nts on an).275 E 2.75(yf)
-.165 G(ormerly obscured windo)-2.75 E(ws.)-.275 E(If the o)72 671.3 Q
-.165(ve)-.165 G(rride-redirect \215ag of the windo).165 E 2.75(wi)-.275
G(s)-2.75 E F0 -.275(Fa)3.666 G(lse).275 E F1
(and some other client has selected)3.666 E F0(Substruc-)3.666 E(tur)72
684.3 Q(eRedir)-.198 E(ectMask)-.198 E F1(on the parent, the X serv)
3.666 E(er generates a)-.165 E F0(Con\214gur)3.666 E(eRequest)-.198 E F1
-2.365 -.275(ev e)3.666 H(nt, and no fur).275 E(-)-.22 E
(ther processing is performed.)72 697.3 Q(Otherwise, the windo)5.5 E
2.75(wi)-.275 G 2.75(sm)-2.75 G -.165(ove)-2.75 G(d.).165 E F0(XMo)
72.916 714.2 Q -.11(ve)-.11 G -.198(Wi).11 G(ndo).198 E(w)-.11 E F1
(can generate a)3.666 E F0(BadW)3.666 E(indo)-.198 E(w)-.11 E F1(error)
3.666 E(.)-.605 E F0(48)282.5 769 Q 0 Cg EP
%%Page: 49 54
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E/F1 11/Times-Roman@0 SF 1.76 -.88(To c)
72 85 T(hange a windo).88 E(w')-.275 E 2.75(ss)-.605 G
(ize without changing the upper)-2.75 E(-left coordinate, use)-.22 E F0
(XResizeW)3.666 E(indo)-.198 E(w)-.11 E F1(.).916 E .44 LW 36 102.75 36
113.75 DL 36 100.75 36 111.75 DL 41.5 99 36 99 DL 43.5 99 38 99 DL 49 99
43.5 99 DL(XResizeW)72 114.9 Q(indo)-.44 E .916(w\()-.275 G/F2 11
/Times-Italic@0 SF(display)A F1(,)A F2(w)2.75 E F1(,).916 E F2(width)
2.75 E F1(,).916 E F2(height)2.75 E F1(\)).916 E(Display *)88.5 127.9 Q
F2(display)A F1(;).916 E -.44(Wi)88.5 140.9 S(ndo).44 E(w)-.275 E F2(w)
2.75 E F1(;).916 E(unsigned int)88.5 153.9 Q F2(width)2.75 E F1(,).916 E
F2(height)2.75 E F1(;).916 E F2(display)72 174.7 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2(w)72 191.6 Q F1(Speci\214es the windo)64.663 E -.715(w.)-.275 G F2
(width)72 208.5 Q(height)72 221.5 Q F1(Specify the width and height, wh\
ich are the interior dimensions of the windo)44.5 E(w)-.275 E
(after the call completes.)144 234.5 Q 36 230.15 36 241.15 DL 36 228.15
36 239.15 DL 41.5 239.4 36 239.4 DL 43.5 239.4 38 239.4 DL 49 239.4 43.5
239.4 DL(The)72 264.4 Q F0(XResizeW)3.666 E(indo)-.198 E(w)-.11 E F1
(function changes the inside dimensions of the speci\214ed windo)3.666 E
1.43 -.715(w, n)-.275 H(ot).715 E(including its borders.)72 277.4 Q
(This function does not change the windo)5.5 E(w')-.275 E 2.75(su)-.605
G(pper)-2.75 E(-left coordinate or the)-.22 E
(origin and does not restack the windo)72 290.4 Q 4.18 -.715(w. C)-.275
H(hanging the size of a mapped windo).715 E 2.75(wm)-.275 G
(ay lose its con-)-2.75 E(tents and generate)72 303.4 Q F0(Expose)3.666
E F1 -2.365 -.275(ev e)3.666 H 2.75(nts. If).275 F 2.75(am)2.75 G
(apped windo)-2.75 E 2.75(wi)-.275 G 2.75(sm)-2.75 G(ade smaller)-2.75 E
2.75(,c)-.44 G(hanging its size gener)-2.75 E(-)-.22 E(ates)72 316.4 Q
F0(Expose)3.666 E F1 -2.365 -.275(ev e)3.666 H(nts on windo).275 E
(ws that the mapped windo)-.275 E 2.75(wf)-.275 G(ormerly obscured.)
-2.75 E(If the o)72 333.3 Q -.165(ve)-.165 G
(rride-redirect \215ag of the windo).165 E 2.75(wi)-.275 G(s)-2.75 E F0
-.275(Fa)3.666 G(lse).275 E F1(and some other client has selected)3.666
E F0(Substruc-)3.666 E(tur)72 346.3 Q(eRedir)-.198 E(ectMask)-.198 E F1
(on the parent, the X serv)3.666 E(er generates a)-.165 E F0(Con\214gur)
3.666 E(eRequest)-.198 E F1 -2.365 -.275(ev e)3.666 H(nt, and no fur)
.275 E(-)-.22 E(ther processing is performed.)72 359.3 Q
(If either width or height is zero, a)5.5 E F0(BadV)3.666 E(alue)-1.012
E F1(error results.)3.666 E F0(XResizeW)72.916 376.2 Q(indo)-.198 E(w)
-.11 E F1(can generate)3.666 E F0(BadV)3.666 E(alue)-1.012 E F1(and)
3.666 E F0(BadW)3.666 E(indo)-.198 E(w)-.11 E F1(errors.)3.666 E 1.76
-.88(To c)72 406.1 T(hange the size and location of a windo).88 E 1.43
-.715(w, u)-.275 H(se).715 E F0(XMo)3.666 E -.11(ve)-.11 G(ResizeW).11 E
(indo)-.198 E(w)-.11 E F1(.).916 E 36 423.85 36 434.85 DL 36 421.85 36
432.85 DL 41.5 420.1 36 420.1 DL 43.5 420.1 38 420.1 DL 49 420.1 43.5
420.1 DL(XMo)72 436 Q -.165(ve)-.165 G(ResizeW).165 E(indo)-.44 E .916
(w\()-.275 G F2(display)A F1(,)A F2(w)2.75 E F1(,).916 E F2(x)2.75 E F1
(,).916 E F2(y)2.75 E F1(,).916 E F2(width)2.75 E F1(,).916 E F2(height)
2.75 E F1(\)).916 E(Display *)88.5 449 Q F2(display)A F1(;).916 E -.44
(Wi)88.5 462 S(ndo).44 E(w)-.275 E F2(w)2.75 E F1(;).916 E(int)88.5 475
Q F2(x)2.75 E F1(,).916 E F2(y)2.75 E F1(;).916 E(unsigned int)88.5 488
Q F2(width)2.75 E F1(,).916 E F2(height)2.75 E F1(;).916 E F2(display)72
508.8 Q F1(Speci\214es the connection to the X serv)40.221 E(er)-.165 E
(.)-.605 E F2(w)72 525.7 Q F1(Speci\214es the windo)64.663 E 2.75(wt)
-.275 G 2.75(ob)-2.75 G 2.75(er)-2.75 G(econ\214gured.)-2.75 E F2(x)72
542.6 Q(y)72 555.6 Q F1
(Specify the x and y coordinates, which de\214ne the ne)67.116 E 2.75
(wp)-.275 G(osition of the windo)-2.75 E 2.75(wr)-.275 G(el-)-2.75 E
(ati)144 568.6 Q .33 -.165(ve t)-.275 H 2.75(oi).165 G(ts parent.)-2.75
E F2(width)72 585.5 Q(height)72 598.5 Q F1(Specify the width and height\
, which de\214ne the interior size of the windo)44.5 E -.715(w.)-.275 G
36 594.15 36 605.15 DL 36 592.15 36 603.15 DL 41.5 603.4 36 603.4 DL
43.5 603.4 38 603.4 DL 49 603.4 43.5 603.4 DL(The)72 628.4 Q F0(XMo)
3.666 E -.11(ve)-.11 G(ResizeW).11 E(indo)-.198 E(w)-.11 E F1
(function changes the size and location of the speci\214ed windo)3.666 E
2.75(ww)-.275 G(ith-)-2.75 E(out raising it.)72 641.4 Q(Mo)5.5 E
(ving and resizing a mapped windo)-.165 E 2.75(wm)-.275 G
(ay generate an)-2.75 E F0(Expose)3.666 E F1 -2.365 -.275(ev e)3.666 H
(nt on the win-).275 E(do)72 654.4 Q 4.18 -.715(w. D)-.275 H
(epending on the ne).715 E 2.75(ws)-.275 G
(ize and location parameters, mo)-2.75 E(ving and resizing a windo)-.165
E 2.75(wm)-.275 G(ay)-2.75 E(generate)72 667.4 Q F0(Expose)3.666 E F1
-2.365 -.275(ev e)3.666 H(nts on windo).275 E(ws that the windo)-.275 E
2.75(wf)-.275 G(ormerly obscured.)-2.75 E(If the o)72 684.3 Q -.165(ve)
-.165 G(rride-redirect \215ag of the windo).165 E 2.75(wi)-.275 G(s)
-2.75 E F0 -.275(Fa)3.666 G(lse).275 E F1
(and some other client has selected)3.666 E F0(Substruc-)3.666 E(tur)72
697.3 Q(eRedir)-.198 E(ectMask)-.198 E F1(on the parent, the X serv)
3.666 E(er generates a)-.165 E F0(Con\214gur)3.666 E(eRequest)-.198 E F1
-2.365 -.275(ev e)3.666 H(nt, and no fur).275 E(-)-.22 E
(ther processing is performed.)72 710.3 Q(Otherwise, the windo)5.5 E
2.75(ws)-.275 G(ize and location are changed.)-2.75 E F0(49)282.5 769 Q
0 Cg EP
%%Page: 50 55
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E(XMo)72.916 85 Q -.11(ve)-.11 G
(ResizeW).11 E(indo)-.198 E(w)-.11 E/F1 11/Times-Roman@0 SF
(can generate)3.666 E F0(BadV)3.666 E(alue)-1.012 E F1(and)3.666 E F0
(BadW)3.666 E(indo)-.198 E(w)-.11 E F1(errors.)3.666 E 1.76 -.88(To c)72
114.9 T(hange the border width of a gi).88 E -.165(ve)-.275 G 2.75(nw)
.165 G(indo)-2.75 E 1.43 -.715(w, u)-.275 H(se).715 E F0(XSetW)3.666 E
(indo)-.198 E(wBorderW)-.11 E(idth)-.198 E F1(.).916 E .44 LW 36 132.65
36 143.65 DL 36 130.65 36 141.65 DL 41.5 128.9 36 128.9 DL 43.5 128.9 38
128.9 DL 49 128.9 43.5 128.9 DL(XSetW)72 144.8 Q(indo)-.44 E(wBorderW)
-.275 E -1.834(idth \()-.44 F/F2 11/Times-Italic@0 SF(display).916 E F1
(,)A F2(w)2.75 E F1(,)A F2(width)2.75 E F1(\)).916 E(Display *)88.5
157.8 Q F2(display)A F1(;).916 E -.44(Wi)88.5 170.8 S(ndo).44 E(w)-.275
E F2(w)2.75 E F1(;).916 E(unsigned int)88.5 183.8 Q F2(width)2.75 E F1
(;).916 E F2(display)72 204.6 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2(w)72 221.5 Q F1(Speci\214es the windo)64.663 E -.715(w.)-.275 G F2
(width)72 238.4 Q F1(Speci\214es the width of the windo)47.547 E 2.75
(wb)-.275 G(order)-2.75 E(.)-.605 E 36 234.05 36 245.05 DL 36 232.05 36
243.05 DL 41.5 243.3 36 243.3 DL 43.5 243.3 38 243.3 DL 49 243.3 43.5
243.3 DL(The)72 268.3 Q F0(XSetW)3.666 E(indo)-.198 E(wBorderW)-.11 E
(idth)-.198 E F1(function sets the speci\214ed windo)3.666 E(w')-.275 E
2.75(sb)-.605 G(order width to the speci-)-2.75 E(\214ed width.)72 281.3
Q F0(XSetW)72.916 298.2 Q(indo)-.198 E(wBorderW)-.11 E(idth)-.198 E F1
(can generate a)3.666 E F0(BadW)3.666 E(indo)-.198 E(w)-.11 E F1(error)
3.666 E(.)-.605 E F0 2.75(3.8. Changing)72 324.2 R -.198(Wi)2.75 G(ndo)
.198 E 2.75(wS)-.11 G(tacking Order)-2.75 E F1(Xlib pro)72 345 Q
(vides functions that you can use to raise, lo)-.165 E(wer)-.275 E 2.75
(,c)-.44 G(irculate, or restack windo)-2.75 E(ws.)-.275 E 1.76 -.88
(To r)72 374.9 T(aise a windo).88 E 2.75(ws)-.275 G 2.75(ot)-2.75 G
(hat no sibling windo)-2.75 E 2.75(wo)-.275 G(bscures it, use)-2.75 E F0
(XRaiseW)3.666 E(indo)-.198 E(w)-.11 E F1(.).916 E 36 392.65 36 403.65
DL 36 390.65 36 401.65 DL 41.5 388.9 36 388.9 DL 43.5 388.9 38 388.9 DL
49 388.9 43.5 388.9 DL(XRaiseW)72 404.8 Q(indo)-.44 E .916(w\()-.275 G
F2(display)A F1(,)A F2(w)2.75 E F1(\)).916 E(Display *)88.5 417.8 Q F2
(display)A F1(;).916 E -.44(Wi)88.5 430.8 S(ndo).44 E(w)-.275 E F2(w)
2.75 E F1(;).916 E F2(display)72 451.6 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2(w)72 468.5 Q F1(Speci\214es the windo)64.663 E -.715(w.)-.275 G 36
464.15 36 475.15 DL 36 462.15 36 473.15 DL 41.5 473.4 36 473.4 DL 43.5
473.4 38 473.4 DL 49 473.4 43.5 473.4 DL(The)72 498.4 Q F0(XRaiseW)3.666
E(indo)-.198 E(w)-.11 E F1(function raises the speci\214ed windo)3.666 E
2.75(wt)-.275 G 2.75(ot)-2.75 G(he top of the stack so that no sib-)
-2.75 E(ling windo)72 511.4 Q 2.75(wo)-.275 G(bscures it.)-2.75 E
(If the windo)5.5 E(ws are re)-.275 E -.055(ga)-.165 G(rded as o).055 E
-.165(ve)-.165 G(rlapping sheets of paper stack).165 E(ed on a)-.11 E
(desk, then raising a windo)72 524.4 Q 2.75(wi)-.275 G 2.75(sa)-2.75 G
(nalogous to mo)-2.75 E(ving the sheet to the top of the stack b)-.165 E
(ut lea)-.22 E(ving its)-.22 E 2.75(xa)72 537.4 S
(nd y location on the desk constant.)-2.75 E(Raising a mapped windo)5.5
E 2.75(wm)-.275 G(ay generate)-2.75 E F0(Expose)3.666 E F1 -2.365 -.275
(ev e)3.666 H(nts).275 E(for the windo)72 550.4 Q 2.75(wa)-.275 G(nd an)
-2.75 E 2.75(ym)-.165 G(apped subwindo)-2.75 E
(ws that were formerly obscured.)-.275 E(If the o)72 567.3 Q -.165(ve)
-.165 G(rride-redirect attrib).165 E(ute of the windo)-.22 E 2.75(wi)
-.275 G(s)-2.75 E F0 -.275(Fa)3.666 G(lse).275 E F1
(and some other client has selected)3.666 E F0(Sub-)3.666 E(structur)72
580.3 Q(eRedir)-.198 E(ectMask)-.198 E F1(on the parent, the X serv)
3.666 E(er generates a)-.165 E F0(Con\214gur)3.666 E(eRequest)-.198 E F1
-2.365 -.275(ev e)3.666 H(nt, and).275 E(no processing is performed.)72
593.3 Q(Otherwise, the windo)5.5 E 2.75(wi)-.275 G 2.75(sr)-2.75 G
(aised.)-2.75 E F0(XRaiseW)72.916 610.2 Q(indo)-.198 E(w)-.11 E F1
(can generate a)3.666 E F0(BadW)3.666 E(indo)-.198 E(w)-.11 E F1(error)
3.666 E(.)-.605 E 1.76 -.88(To l)72 640.1 T -.275(ow).88 G(er a windo)
.275 E 2.75(ws)-.275 G 2.75(ot)-2.75 G(hat it does not obscure an)-2.75
E 2.75(ys)-.165 G(ibling windo)-2.75 E(ws, use)-.275 E F0(XLo)3.666 E
(werW)-.11 E(indo)-.198 E(w)-.11 E F1(.).916 E F0(50)282.5 769 Q 0 Cg EP
%%Page: 51 56
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E .44 LW 36 76.75 36 87.75 DL 36 74.75
36 85.75 DL 41.5 73 36 73 DL 43.5 73 38 73 DL 49 73 43.5 73 DL/F1 11
/Times-Roman@0 SF(XLo)72 88.9 Q(werW)-.275 E(indo)-.44 E .916(w\()-.275
G/F2 11/Times-Italic@0 SF(display)A F1(,)A F2(w)2.75 E F1(\)).916 E
(Display *)88.5 101.9 Q F2(display)A F1(;).916 E -.44(Wi)88.5 114.9 S
(ndo).44 E(w)-.275 E F2(w)2.75 E F1(;).916 E F2(display)72 135.7 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2(w)72 152.6 Q F1(Speci\214es the windo)64.663 E -.715(w.)-.275 G 36
148.25 36 159.25 DL 36 146.25 36 157.25 DL 41.5 157.5 36 157.5 DL 43.5
157.5 38 157.5 DL 49 157.5 43.5 157.5 DL(The)72 182.5 Q F0(XLo)3.666 E
(werW)-.11 E(indo)-.198 E(w)-.11 E F1(function lo)3.666 E
(wers the speci\214ed windo)-.275 E 2.75(wt)-.275 G 2.75(ot)-2.75 G
(he bottom of the stack so that it)-2.75 E(does not obscure an)72 195.5
Q 2.75(ys)-.165 G(ibling windo)-2.75 E 2.75(ws. If)-.275 F(the windo)
2.75 E(ws are re)-.275 E -.055(ga)-.165 G(rded as o).055 E -.165(ve)
-.165 G(rlapping sheets of).165 E(paper stack)72 208.5 Q
(ed on a desk, then lo)-.11 E(wering a windo)-.275 E 2.75(wi)-.275 G
2.75(sa)-2.75 G(nalogous to mo)-2.75 E(ving the sheet to the bottom)
-.165 E(of the stack b)72 221.5 Q(ut lea)-.22 E
(ving its x and y location on the desk constant.)-.22 E(Lo)5.5 E
(wering a mapped windo)-.275 E(w)-.275 E(will generate)72 234.5 Q F0
(Expose)3.666 E F1 -2.365 -.275(ev e)3.666 H(nts on an).275 E 2.75(yw)
-.165 G(indo)-2.75 E(ws it formerly obscured.)-.275 E(If the o)72 251.4
Q -.165(ve)-.165 G(rride-redirect attrib).165 E(ute of the windo)-.22 E
2.75(wi)-.275 G(s)-2.75 E F0 -.275(Fa)3.666 G(lse).275 E F1
(and some other client has selected)3.666 E F0(Sub-)3.666 E(structur)72
264.4 Q(eRedir)-.198 E(ectMask)-.198 E F1(on the parent, the X serv)
3.666 E(er generates a)-.165 E F0(Con\214gur)3.666 E(eRequest)-.198 E F1
-2.365 -.275(ev e)3.666 H(nt, and).275 E(no processing is performed.)72
277.4 Q(Otherwise, the windo)5.5 E 2.75(wi)-.275 G 2.75(sl)-2.75 G -.275
(ow)-2.75 G(ered to the bottom of the stack.).275 E F0(XLo)72.916 294.3
Q(werW)-.11 E(indo)-.198 E(w)-.11 E F1(can generate a)3.666 E F0(BadW)
3.666 E(indo)-.198 E(w)-.11 E F1(error)3.666 E(.)-.605 E 1.76 -.88(To c)
72 324.2 T(irculate a subwindo).88 E 2.75(wu)-.275 G 2.75(po)-2.75 G
2.75(rd)-2.75 G -.275(ow)-2.75 G(n, use).275 E F0(XCir)3.666 E
(culateSubwindo)-.198 E(ws)-.11 E F1(.).916 E 36 341.95 36 352.95 DL 36
339.95 36 350.95 DL 41.5 338.2 36 338.2 DL 43.5 338.2 38 338.2 DL 49
338.2 43.5 338.2 DL(XCirculateSubwindo)72 354.1 Q -1.834(ws \()-.275 F
F2(display).916 E F1(,)A F2(w)2.75 E F1(,).916 E F2(dir)2.75 E(ection)
-.407 E F1(\)).916 E(Display *)88.5 367.1 Q F2(display)A F1(;).916 E
-.44(Wi)88.5 380.1 S(ndo).44 E(w)-.275 E F2(w)2.75 E F1(;).916 E(int)
88.5 393.1 Q F2(dir)2.75 E(ection)-.407 E F1(;).916 E F2(display)72
413.9 Q F1(Speci\214es the connection to the X serv)40.221 E(er)-.165 E
(.)-.605 E F2(w)72 430.8 Q F1(Speci\214es the windo)64.663 E -.715(w.)
-.275 G F2(dir)72 447.7 Q(ection)-.407 E F1
(Speci\214es the direction \(up or do)32.686 E(wn\) that you w)-.275 E
(ant to circulate the windo)-.11 E 4.18 -.715(w. Y)-.275 H(ou)-.495 E
(can pass)144 460.7 Q F0(RaiseLo)3.666 E(west)-.11 E F1(or)3.666 E F0
(Lo)3.666 E(werHighest)-.11 E F1(.).916 E 36 456.35 36 467.35 DL 36
454.35 36 465.35 DL 41.5 465.6 36 465.6 DL 43.5 465.6 38 465.6 DL 49
465.6 43.5 465.6 DL(The)72 490.6 Q F0(XCir)3.666 E(culateSubwindo)-.198
E(ws)-.11 E F1(function circulates children of the speci\214ed windo)
3.666 E 2.75(wi)-.275 G 2.75(nt)-2.75 G(he speci-)-2.75 E
(\214ed direction.)72 503.6 Q(If you specify)5.5 E F0(RaiseLo)3.666 E
(west)-.11 E F1(,).916 E F0(XCir)3.666 E(culateSubwindo)-.198 E(ws)-.11
E F1(raises the lo)3.666 E(west mapped)-.275 E(child \(if an)72 516.6 Q
(y\) that is occluded by another child to the top of the stack.)-.165 E
(If you specify)5.5 E F0(Lo)3.666 E(werHigh-)-.11 E(est)72 529.6 Q F1(,)
.916 E F0(XCir)3.666 E(culateSubwindo)-.198 E(ws)-.11 E F1(lo)3.666 E
(wers the highest mapped child \(if an)-.275 E
(y\) that occludes another)-.165 E(child to the bottom of the stack.)72
542.6 Q(Exposure processing is then performed on formerly obscured)5.5 E
(windo)72 555.6 Q 2.75(ws. If)-.275 F(some other client has selected)
2.75 E F0(Substructur)3.666 E(eRedir)-.198 E(ectMask)-.198 E F1
(on the windo)3.666 E 1.43 -.715(w, t)-.275 H(he X).715 E(serv)72 568.6
Q(er generates a)-.165 E F0(Cir)3.666 E(culateRequest)-.198 E F1 -2.365
-.275(ev e)3.666 H(nt, and no further processing is performed.).275 E
(If a child is)5.5 E(actually restack)72 581.6 Q(ed, the X serv)-.11 E
(er generates a)-.165 E F0(Cir)3.666 E(culateNotify)-.198 E F1 -2.365
-.275(ev e)3.666 H(nt.).275 E F0(XCir)72.916 598.5 Q(culateSubwindo)
-.198 E(ws)-.11 E F1(can generate)3.666 E F0(BadV)3.666 E(alue)-1.012 E
F1(and)3.666 E F0(BadW)3.666 E(indo)-.198 E(w)-.11 E F1(errors.)3.666 E
1.76 -.88(To r)72 628.4 T(aise the lo).88 E
(west mapped child of a windo)-.275 E 2.75(wt)-.275 G
(hat is partially or completely occluded by another)-2.75 E(child, use)
72 641.4 Q F0(XCir)3.666 E(culateSubwindo)-.198 E(wsUp)-.11 E F1(.).916
E F0(51)282.5 769 Q 0 Cg EP
%%Page: 52 57
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E .44 LW 36 76.75 36 87.75 DL 36 74.75
36 85.75 DL 41.5 73 36 73 DL 43.5 73 38 73 DL 49 73 43.5 73 DL/F1 11
/Times-Roman@0 SF(XCirculateSubwindo)72 88.9 Q -1.834(wsUp \()-.275 F/F2
11/Times-Italic@0 SF(display).916 E F1(,)A F2(w)2.75 E F1(\)).916 E
(Display *)88.5 101.9 Q F2(display)A F1(;).916 E -.44(Wi)88.5 114.9 S
(ndo).44 E(w)-.275 E F2(w)2.75 E F1(;).916 E F2(display)72 135.7 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2(w)72 152.6 Q F1(Speci\214es the windo)64.663 E -.715(w.)-.275 G 36
148.25 36 159.25 DL 36 146.25 36 157.25 DL 41.5 157.5 36 157.5 DL 43.5
157.5 38 157.5 DL 49 157.5 43.5 157.5 DL(The)72 182.5 Q F0(XCir)3.666 E
(culateSubwindo)-.198 E(wsUp)-.11 E F1(function raises the lo)3.666 E
(west mapped child of the speci\214ed windo)-.275 E(w)-.275 E
(that is partially or completely occluded by another child.)72 195.5 Q
(Completely unobscured children are not)5.5 E(af)72 208.5 Q 2.75
(fected. This)-.275 F(is a con)2.75 E -.165(ve)-.44 G
(nience function equi).165 E -.275(va)-.275 G(lent to).275 E F0(XCir)
3.666 E(culateSubwindo)-.198 E(ws)-.11 E F1(with)3.666 E F0(RaiseLo)
3.666 E(w-)-.11 E(est)72 221.5 Q F1(speci\214ed.)3.666 E F0(XCir)72.916
238.4 Q(culateSubwindo)-.198 E(wsUp)-.11 E F1(can generate a)3.666 E F0
(BadW)3.666 E(indo)-.198 E(w)-.11 E F1(error)3.666 E(.)-.605 E 1.76 -.88
(To l)72 268.3 T -.275(ow).88 G(er the highest mapped child of a windo)
.275 E 2.75(wt)-.275 G(hat partially or completely occludes another)
-2.75 E(child, use)72 281.3 Q F0(XCir)3.666 E(culateSubwindo)-.198 E
(wsDo)-.11 E(wn)-.11 E F1(.).916 E 36 299.05 36 310.05 DL 36 297.05 36
308.05 DL 41.5 295.3 36 295.3 DL 43.5 295.3 38 295.3 DL 49 295.3 43.5
295.3 DL(XCirculateSubwindo)72 311.2 Q(wsDo)-.275 E -1.834(wn \()-.275 F
F2(display).916 E F1(,)A F2(w)2.75 E F1(\)).916 E(Display *)88.5 324.2 Q
F2(display)A F1(;).916 E -.44(Wi)88.5 337.2 S(ndo).44 E(w)-.275 E F2(w)
2.75 E F1(;).916 E F2(display)72 358 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2(w)72 374.9 Q F1(Speci\214es the windo)64.663 E -.715(w.)-.275 G 36
370.55 36 381.55 DL 36 368.55 36 379.55 DL 41.5 379.8 36 379.8 DL 43.5
379.8 38 379.8 DL 49 379.8 43.5 379.8 DL(The)72 404.8 Q F0(XCir)3.666 E
(culateSubwindo)-.198 E(wsDo)-.11 E(wn)-.11 E F1(function lo)3.666 E
(wers the highest mapped child of the speci\214ed)-.275 E(windo)72 417.8
Q 2.75(wt)-.275 G(hat partially or completely occludes another child.)
-2.75 E(Completely unobscured children are)5.5 E(not af)72 430.8 Q 2.75
(fected. This)-.275 F(is a con)2.75 E -.165(ve)-.44 G
(nience function equi).165 E -.275(va)-.275 G(lent to).275 E F0(XCir)
3.666 E(culateSubwindo)-.198 E(ws)-.11 E F1(with)3.666 E F0(Lo)3.666 E
(wer)-.11 E(-)-.407 E(Highest)72 443.8 Q F1(speci\214ed.)3.666 E F0
(XCir)72.916 460.7 Q(culateSubwindo)-.198 E(wsDo)-.11 E(wn)-.11 E F1
(can generate a)3.666 E F0(BadW)3.666 E(indo)-.198 E(w)-.11 E F1(error)
3.666 E(.)-.605 E 1.76 -.88(To r)72 490.6 T(estack a set of windo).88 E
(ws from top to bottom, use)-.275 E F0(XRestackW)3.666 E(indo)-.198 E
(ws)-.11 E F1(.).916 E 36 508.35 36 519.35 DL 36 506.35 36 517.35 DL
41.5 504.6 36 504.6 DL 43.5 504.6 38 504.6 DL 49 504.6 43.5 504.6 DL
(XRestackW)72 520.5 Q(indo)-.44 E -1.834(ws \()-.275 F F2(display).916 E
F1(,)A F2(windows)2.75 E F1(,).916 E F2(nwindows)3.666 E F1(\);).916 E
(Display *)88.5 533.5 Q F2(display)A F1(;).916 E -.44(Wi)88.5 546.5 S
(ndo).44 E(w)-.275 E F2(windows)2.75 E F1([];).916 E(int)88.5 559.5 Q F2
(nwindows)2.75 E F1(;).916 E F2(display)72 580.3 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2(windows)72 597.2 Q F1(Speci\214es an array containing the windo)
33.489 E(ws to be restack)-.275 E(ed.)-.11 E F2(nwindows)72 614.1 Q F1
(Speci\214es the number of windo)27.989 E(ws to be restack)-.275 E(ed.)
-.11 E 36 609.75 36 620.75 DL 36 607.75 36 618.75 DL 41.5 619 36 619 DL
43.5 619 38 619 DL 49 619 43.5 619 DL(The)72 644 Q F0(XRestackW)3.666 E
(indo)-.198 E(ws)-.11 E F1(function restacks the windo)3.666 E
(ws in the order speci\214ed, from top to bot-)-.275 E 2.75(tom. The)72
657 R(stacking order of the \214rst windo)2.75 E 2.75(wi)-.275 G 2.75
(nt)-2.75 G(he windo)-2.75 E(ws array is unaf)-.275 E(fected, b)-.275 E
(ut the other win-)-.22 E(do)72 670 Q(ws in the array are stack)-.275 E
(ed underneath the \214rst windo)-.11 E 1.43 -.715(w, i)-.275 H 2.75(nt)
.715 G(he order of the array)-2.75 E 5.5(.T)-.715 G(he stacking)-5.5 E
(order of the other windo)72 683 Q(ws is not af)-.275 E 2.75(fected. F)
-.275 F(or each windo)-.165 E 2.75(wi)-.275 G 2.75(nt)-2.75 G(he windo)
-2.75 E 2.75(wa)-.275 G(rray that is not a)-2.75 E
(child of the speci\214ed windo)72 696 Q 1.43 -.715(w, a)-.275 H F0
(BadMatch)4.381 E F1(error results.)3.666 E(If the o)72 712.9 Q -.165
(ve)-.165 G(rride-redirect attrib).165 E(ute of a windo)-.22 E 2.75(wi)
-.275 G(s)-2.75 E F0 -.275(Fa)3.666 G(lse).275 E F1
(and some other client has selected)3.666 E F0(Sub-)3.666 E(structur)72
725.9 Q(eRedir)-.198 E(ectMask)-.198 E F1(on the parent, the X serv)
3.666 E(er generates)-.165 E F0(Con\214gur)3.666 E(eRequest)-.198 E F1
-2.365 -.275(ev e)3.666 H(nts for).275 E F0(52)282.5 769 Q 0 Cg EP
%%Page: 53 58
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E/F1 11/Times-Roman@0 SF(each windo)72
85 Q 2.75(ww)-.275 G(hose o)-2.75 E -.165(ve)-.165 G(rride-redirect \
\215ag is not set, and no further processing is performed.).165 E(Oth-)
5.5 E(erwise, the windo)72 98 Q(ws will be restack)-.275 E
(ed in top-to-bottom order)-.11 E(.)-.605 E F0(XRestackW)72.916 114.9 Q
(indo)-.198 E(ws)-.11 E F1(can generate a)3.666 E F0(BadW)3.666 E(indo)
-.198 E(w)-.11 E F1(error)3.666 E(.)-.605 E F0 2.75(3.9. Changing)72
140.9 R -.198(Wi)2.75 G(ndo).198 E 2.75(wA)-.11 G(ttrib)-2.75 E(utes)
-.22 E F1(Xlib pro)72 161.7 Q
(vides functions that you can use to set windo)-.165 E 2.75(wa)-.275 G
(ttrib)-2.75 E(utes.)-.22 E F0(XChangeW)6.416 E(indo)-.198 E(wAttrib)
-.11 E(utes)-.22 E F1(is the more general function that allo)72 174.7 Q
(ws you to set one or more windo)-.275 E 2.75(wa)-.275 G(ttrib)-2.75 E
(utes pro)-.22 E(vided by the)-.165 E F0(XSetW)72.916 187.7 Q(indo)-.198
E(wAttrib)-.11 E(utes)-.22 E F1 2.75(structure. The)3.666 F
(other functions described in this section allo)2.75 E 2.75(wy)-.275 G
(ou to set)-2.75 E(one speci\214c windo)72 200.7 Q 2.75(wa)-.275 G
(ttrib)-2.75 E(ute, such as a windo)-.22 E(w')-.275 E 2.75(sb)-.605 G
(ackground.)-2.75 E 1.76 -.88(To c)72 230.6 T(hange one or more attrib)
.88 E(utes for a gi)-.22 E -.165(ve)-.275 G 2.75(nw).165 G(indo)-2.75 E
1.43 -.715(w, u)-.275 H(se).715 E F0(XChangeW)3.666 E(indo)-.198 E
(wAttrib)-.11 E(utes)-.22 E F1(.).916 E .44 LW 36 248.35 36 259.35 DL 36
246.35 36 257.35 DL 41.5 244.6 36 244.6 DL 43.5 244.6 38 244.6 DL 49
244.6 43.5 244.6 DL(XChangeW)72 260.5 Q(indo)-.44 E(wAttrib)-.275 E
-1.834(utes \()-.22 F/F2 11/Times-Italic@0 SF(display).916 E F1(,)A F2
(w)2.75 E F1(,).916 E F2(valuemask)2.75 E F1(,).916 E F2(attrib)2.75 E
(utes)-.22 E F1(\)).916 E(Display *)88.5 273.5 Q F2(display)A F1(;).916
E -.44(Wi)88.5 286.5 S(ndo).44 E(w)-.275 E F2(w)2.75 E F1(;).916 E
(unsigned long)88.5 299.5 Q F2(valuemask)2.75 E F1(;).916 E(XSetW)88.5
312.5 Q(indo)-.44 E(wAttrib)-.275 E(utes *)-.22 E F2(attrib)A(utes)-.22
E F1(;).916 E F2(display)72 333.3 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2(w)72 350.2 Q F1(Speci\214es the windo)64.663 E -.715(w.)-.275 G F2
(valuemask)72 367.1 Q F1(Speci\214es which windo)25.569 E 2.75(wa)-.275
G(ttrib)-2.75 E(utes are de\214ned in the attrib)-.22 E(utes ar)-.22 E
2.75(gument. This)-.198 F(mask is the bitwise inclusi)144 380.1 Q .33
-.165(ve O)-.275 H 2.75(Ro).165 G 2.75(ft)-2.75 G(he v)-2.75 E
(alid attrib)-.275 E(ute mask bits.)-.22 E(If v)5.5 E(aluemask is)-.275
E(zero, the attrib)144 393.1 Q(utes are ignored and are not referenced.)
-.22 E(The v)5.5 E(alues and restric-)-.275 E(tions are the same as for)
144 406.1 Q F0(XCr)3.666 E(eateW)-.198 E(indo)-.198 E(w)-.11 E F1(.).916
E F2(attrib)72 426.9 Q(utes)-.22 E F1
(Speci\214es the structure from which the v)30.046 E
(alues \(as speci\214ed by the v)-.275 E(alue mask\) are)-.275 E
(to be tak)144 439.9 Q 2.75(en. The)-.11 F -.275(va)2.75 G
(lue mask should ha).275 E .33 -.165(ve t)-.22 H
(he appropriate bits set to indicate).165 E(which attrib)144 452.9 Q
(utes ha)-.22 E .33 -.165(ve b)-.22 H
(een set in the structure \(see section 3.2\).).165 E 36 448.55 36
459.55 DL 36 446.55 36 457.55 DL 41.5 457.8 36 457.8 DL 43.5 457.8 38
457.8 DL 49 457.8 43.5 457.8 DL(Depending on the v)72 482.8 Q
(aluemask, the)-.275 E F0(XChangeW)3.666 E(indo)-.198 E(wAttrib)-.11 E
(utes)-.22 E F1(function uses the windo)3.666 E(w)-.275 E(attrib)72
495.8 Q(utes in the)-.22 E F0(XSetW)3.666 E(indo)-.198 E(wAttrib)-.11 E
(utes)-.22 E F1(structure to change the speci\214ed windo)3.666 E 2.75
(wa)-.275 G(ttrib)-2.75 E(utes.)-.22 E
(Changing the background does not cause the windo)72 508.8 Q 2.75(wc)
-.275 G(ontents to be changed.)-2.75 E 1.76 -.88(To r)5.5 H
(epaint the win-).88 E(do)72 521.8 Q 2.75(wa)-.275 G
(nd its background, use)-2.75 E F0(XClearW)3.666 E(indo)-.198 E(w)-.11 E
F1 5.5(.S).916 G(etting the border or changing the background)-5.5 E(su\
ch that the border tile origin changes causes the border to be repainte\
d.)72 534.8 Q(Changing the back-)5.5 E(ground of a root windo)72 547.8 Q
2.75(wt)-.275 G(o)-2.75 E F0(None)3.666 E F1(or)3.666 E F0 -.11(Pa)3.666
G -.198(re).11 G(ntRelati).198 E -.11(ve)-.11 G F1(restores the def)
3.776 E(ault background pixmap.)-.11 E
(Changing the border of a root windo)72 560.8 Q 2.75(wt)-.275 G(o)-2.75
E F0(CopyFr)3.666 E(omP)-.198 E(ar)-.11 E(ent)-.198 E F1
(restores the def)3.666 E(ault border pixmap.)-.11 E
(Changing the win-gra)72 573.8 Q(vity does not af)-.22 E
(fect the current position of the windo)-.275 E 4.18 -.715(w. C)-.275 H
(hanging the back-).715 E(ing-store of an obscured windo)72 586.8 Q 2.75
(wt)-.275 G(o)-2.75 E F0(WhenMapped)3.666 E F1(or)3.666 E F0(Always)
3.666 E F1 2.75(,o).916 G 2.75(rc)-2.75 G(hanging the backing-planes,)
-2.75 E(backing-pix)72 599.8 Q(el, or sa)-.165 E -.165(ve)-.22 G
(-under of a mapped windo).165 E 2.75(wm)-.275 G(ay ha)-2.75 E .33 -.165
(ve n)-.22 H 2.75(oi).165 G(mmediate ef)-2.75 E 2.75(fect. Changing)
-.275 F(the)2.75 E(colormap of a windo)72 612.8 Q 2.75(w\()-.275 G
(that is, de\214ning a ne)-2.75 E 2.75(wm)-.275 G
(ap, not changing the contents of the e)-2.75 E(xisting)-.165 E
(map\) generates a)72 625.8 Q F0(ColormapNotify)3.666 E F1 -2.365 -.275
(ev e)3.666 H 2.75(nt. Changing).275 F(the colormap of a visible windo)
2.75 E 2.75(wm)-.275 G(ay ha)-2.75 E -.165(ve)-.22 G(no immediate ef)72
638.8 Q(fect on the screen because the map may not be installed \(see)
-.275 E F0(XInstallCol-)3.666 E(ormap)72 651.8 Q F1 2.75(\). Changing)
.916 F(the cursor of a root windo)2.75 E 2.75(wt)-.275 G(o)-2.75 E F0
(None)3.666 E F1(restores the def)3.666 E(ault cursor)-.11 E 5.5(.W)
-.605 G(hene)-5.5 E -.165(ve)-.275 G(r).165 E
(possible, you are encouraged to share colormaps.)72 664.8 Q
(Multiple clients can select input on the same windo)72 681.7 Q 4.18
-.715(w. T)-.275 H(heir e).715 E -.165(ve)-.275 G
(nt masks are maintained sepa-).165 E(rately)72 694.7 Q 5.5(.W)-.715 G
(hen an e)-5.5 E -.165(ve)-.275 G
(nt is generated, it is reported to all interested clients.).165 E(Ho)
5.5 E(we)-.275 E -.165(ve)-.275 G .88 -.44(r, o).165 H(nly one).44 E
(client at a time can select for)72 707.7 Q F0(Substructur)3.666 E
(eRedir)-.198 E(ectMask)-.198 E F1(,).916 E F0(ResizeRedir)3.666 E
(ectMask)-.198 E F1 2.75(,a).916 G(nd)-2.75 E F0(Button-)3.666 E(Pr)72
720.7 Q(essMask)-.198 E F1 5.5(.I).916 G 2.75(fac)-5.5 G
(lient attempts to select an)-2.75 E 2.75(yo)-.165 G 2.75(ft)-2.75 G
(hese e)-2.75 E -.165(ve)-.275 G(nt masks and some other client has).165
E F0(53)282.5 769 Q 0 Cg EP
%%Page: 54 59
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E/F1 11/Times-Roman@0 SF
(already selected one, a)72 85 Q F0(BadAccess)3.666 E F1(error results.)
3.666 E(There is only one do-not-propag)5.5 E(ate-mask for a)-.055 E
(windo)72 98 Q 1.43 -.715(w, n)-.275 H(ot one per client.).715 E F0
(XChangeW)72.916 114.9 Q(indo)-.198 E(wAttrib)-.11 E(utes)-.22 E F1
(can generate)3.666 E F0(BadAccess)3.666 E F1(,).916 E F0(BadColor)3.666
E F1(,).916 E F0(BadCursor)3.666 E F1(,).916 E F0(BadMatch)3.666 E F1(,)
.916 E F0(BadPixmap)72.916 127.9 Q F1(,).916 E F0(BadV)3.666 E(alue)
-1.012 E F1 2.75(,a).916 G(nd)-2.75 E F0(BadW)3.666 E(indo)-.198 E(w)
-.11 E F1(errors.)3.666 E 1.76 -.88(To s)72 157.8 T
(et the background of a windo).88 E 2.75(wt)-.275 G 2.75(oag)-2.75 G
-2.365 -.275(iv e)-2.75 H 2.75(np).275 G(ix)-2.75 E(el, use)-.165 E F0
(XSetW)3.666 E(indo)-.198 E(wBackgr)-.11 E(ound)-.198 E F1(.).916 E .44
LW 36 175.55 36 186.55 DL 36 173.55 36 184.55 DL 41.5 171.8 36 171.8 DL
43.5 171.8 38 171.8 DL 49 171.8 43.5 171.8 DL(XSetW)72 187.7 Q(indo)-.44
E -1.834(wBackground \()-.275 F/F2 11/Times-Italic@0 SF(display).916 E
F1(,)A F2(w)2.75 E F1(,).916 E F2(bac)2.75 E(kgr)-.22 E(ound_pixel)-.495
E F1(\)).916 E(Display *)88.5 200.7 Q F2(display)A F1(;).916 E -.44(Wi)
88.5 213.7 S(ndo).44 E(w)-.275 E F2(w)2.75 E F1(;).916 E(unsigned long)
88.5 226.7 Q F2(bac)2.75 E(kgr)-.22 E(ound_pixel)-.495 E F1(;).916 E F2
(display)72 247.5 Q F1(Speci\214es the connection to the X serv)40.221 E
(er)-.165 E(.)-.605 E F2(w)72 264.4 Q F1(Speci\214es the windo)64.663 E
-.715(w.)-.275 G F2(bac)72 281.3 Q(kgr)-.22 E(ound_pixel)-.495 E F1
(Speci\214es the pix)144 294.3 Q
(el that is to be used for the background.)-.165 E 36 289.95 36 300.95
DL 36 287.95 36 298.95 DL 41.5 299.2 36 299.2 DL 43.5 299.2 38 299.2 DL
49 299.2 43.5 299.2 DL(The)72 324.2 Q F0(XSetW)3.666 E(indo)-.198 E
(wBackgr)-.11 E(ound)-.198 E F1
(function sets the background of the windo)3.666 E 2.75(wt)-.275 G 2.75
(ot)-2.75 G(he speci\214ed pix)-2.75 E(el)-.165 E -.275(va)72 337.2 S
2.75(lue. Changing).275 F(the background does not cause the windo)2.75 E
2.75(wc)-.275 G(ontents to be changed.)-2.75 E F0(XSetW)6.416 E(in-)
-.198 E(do)72 350.2 Q(wBackgr)-.11 E(ound)-.198 E F1
(uses a pixmap of unde\214ned size \214lled with the pix)3.666 E(el v)
-.165 E(alue you passed.)-.275 E(If you)5.5 E
(try to change the background of an)72 363.2 Q F0(InputOnly)3.666 E F1
(windo)3.666 E 1.43 -.715(w, a)-.275 H F0(BadMatch)4.381 E F1
(error results.)3.666 E F0(XSetW)72.916 380.1 Q(indo)-.198 E(wBackgr)
-.11 E(ound)-.198 E F1(can generate)3.666 E F0(BadMatch)3.666 E F1(and)
3.666 E F0(BadW)3.666 E(indo)-.198 E(w)-.11 E F1(errors.)3.666 E 1.76
-.88(To s)72 413.9 T(et the background of a windo).88 E 2.75(wt)-.275 G
2.75(oag)-2.75 G -2.365 -.275(iv e)-2.75 H 2.75(np).275 G(ixmap, use)
-2.75 E F0(XSetW)3.666 E(indo)-.198 E(wBackgr)-.11 E(oundPixmap)-.198 E
F1(.).916 E 36 431.65 36 442.65 DL 36 429.65 36 440.65 DL 41.5 427.9 36
427.9 DL 43.5 427.9 38 427.9 DL 49 427.9 43.5 427.9 DL(XSetW)72 443.8 Q
(indo)-.44 E -1.834(wBackgroundPixmap \()-.275 F F2(display).916 E F1(,)
A F2(w)2.75 E F1(,).916 E F2(bac)2.75 E(kgr)-.22 E(ound_pixmap)-.495 E
F1(\)).916 E(Display *)88.5 456.8 Q F2(display)A F1(;).916 E -.44(Wi)
88.5 469.8 S(ndo).44 E(w)-.275 E F2(w)2.75 E F1(;).916 E(Pixmap)88.5
482.8 Q F2(bac)2.75 E(kgr)-.22 E(ound_pixmap)-.495 E F1(;).916 E F2
(display)72 503.6 Q F1(Speci\214es the connection to the X serv)40.221 E
(er)-.165 E(.)-.605 E F2(w)72 520.5 Q F1(Speci\214es the windo)64.663 E
-.715(w.)-.275 G F2(bac)72 537.4 Q(kgr)-.22 E(ound_pixmap)-.495 E F1
(Speci\214es the background pixmap,)144 550.4 Q F0 -.11(Pa)3.666 G -.198
(re).11 G(ntRelati).198 E -.11(ve)-.11 G F1 2.75(,o)1.026 G(r)-2.75 E F0
(None)3.666 E F1(.).916 E 36 546.05 36 557.05 DL 36 544.05 36 555.05 DL
41.5 555.3 36 555.3 DL 43.5 555.3 38 555.3 DL 49 555.3 43.5 555.3 DL
(The)72 580.3 Q F0(XSetW)3.666 E(indo)-.198 E(wBackgr)-.11 E(oundPixmap)
-.198 E F1(function sets the background pixmap of the windo)3.666 E 2.75
(wt)-.275 G(o)-2.75 E(the speci\214ed pixmap.)72 593.3 Q
(The background pixmap can immediately be freed if no further e)5.5 E
(xplicit ref-)-.165 E(erences to it are to be made.)72 606.3 Q(If)5.5 E
F0 -.11(Pa)3.666 G -.198(re).11 G(ntRelati).198 E -.11(ve)-.11 G F1
(is speci\214ed, the background pixmap of the win-)3.776 E(do)72 619.3 Q
(w')-.275 E 2.75(sp)-.605 G(arent is used, or on the root windo)-2.75 E
1.43 -.715(w, t)-.275 H(he def).715 E(ault background is restored.)-.11
E(If you try to)5.5 E(change the background of an)72 632.3 Q F0
(InputOnly)3.666 E F1(windo)3.666 E 1.43 -.715(w, a)-.275 H F0(BadMatch)
4.381 E F1(error results.)3.666 E(If the background)5.5 E(is set to)72
645.3 Q F0(None)3.666 E F1 2.75(,t).916 G(he windo)-2.75 E 2.75(wh)-.275
G(as no de\214ned background.)-2.75 E F0(XSetW)72.916 662.2 Q(indo)-.198
E(wBackgr)-.11 E(oundPixmap)-.198 E F1(can generate)3.666 E F0(BadMatch)
3.666 E F1(,).916 E F0(BadPixmap)3.666 E F1 2.75(,a).916 G(nd)-2.75 E F0
(BadW)3.666 E(indo)-.198 E(w)-.11 E F1(errors.)72 675.2 Q F0(54)282.5
769 Q 0 Cg EP
%%Page: 55 60
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E/F1 11/Times-Roman@0 SF(Note)277.308 85
Q F0(XSetW)100.416 103 Q(indo)-.198 E(wBackgr)-.11 E(ound)-.198 E F1
(and)3.666 E F0(XSetW)3.666 E(indo)-.198 E(wBackgr)-.11 E(oundPixmap)
-.198 E F1(do not change)3.666 E(the current contents of the windo)99.5
116 Q -.715(w.)-.275 G 1.76 -.88(To c)72 155.9 T
(hange and repaint a windo).88 E(w')-.275 E 2.75(sb)-.605 G
(order to a gi)-2.75 E -.165(ve)-.275 G 2.75(np).165 G(ix)-2.75 E
(el, use)-.165 E F0(XSetW)3.666 E(indo)-.198 E(wBorder)-.11 E F1(.).916
E .44 LW 36 173.65 36 184.65 DL 36 171.65 36 182.65 DL 41.5 169.9 36
169.9 DL 43.5 169.9 38 169.9 DL 49 169.9 43.5 169.9 DL(XSetW)72 185.8 Q
(indo)-.44 E -1.834(wBorder \()-.275 F/F2 11/Times-Italic@0 SF(display)
.916 E F1(,)A F2(w)2.75 E F1(,).916 E F2(bor)2.75 E(der_pixel)-.407 E F1
(\)).916 E(Display *)88.5 198.8 Q F2(display)A F1(;).916 E -.44(Wi)88.5
211.8 S(ndo).44 E(w)-.275 E F2(w)2.75 E F1(;).916 E(unsigned long)88.5
224.8 Q F2(bor)2.75 E(der_pixel)-.407 E F1(;).916 E F2(display)72 245.6
Q F1(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)
-.605 E F2(w)72 262.5 Q F1(Speci\214es the windo)64.663 E -.715(w.)-.275
G F2(bor)72 279.4 Q(der_pixel)-.407 E F1
(Speci\214es the entry in the colormap.)15.581 E 36 275.05 36 286.05 DL
36 273.05 36 284.05 DL 41.5 284.3 36 284.3 DL 43.5 284.3 38 284.3 DL 49
284.3 43.5 284.3 DL(The)72 309.3 Q F0(XSetW)3.666 E(indo)-.198 E
(wBorder)-.11 E F1(function sets the border of the windo)3.666 E 2.75
(wt)-.275 G 2.75(ot)-2.75 G(he pix)-2.75 E(el v)-.165 E
(alue you specify)-.275 E(.)-.715 E
(If you attempt to perform this on an)72 322.3 Q F0(InputOnly)3.666 E F1
(windo)3.666 E 1.43 -.715(w, a)-.275 H F0(BadMatch)4.381 E F1
(error results.)3.666 E F0(XSetW)72.916 339.2 Q(indo)-.198 E(wBorder)
-.11 E F1(can generate)3.666 E F0(BadMatch)3.666 E F1(and)3.666 E F0
(BadW)3.666 E(indo)-.198 E(w)-.11 E F1(errors.)3.666 E 1.76 -.88(To c)72
369.1 T(hange and repaint the border tile of a gi).88 E -.165(ve)-.275 G
2.75(nw).165 G(indo)-2.75 E 1.43 -.715(w, u)-.275 H(se).715 E F0(XSetW)
3.666 E(indo)-.198 E(wBorderPixmap)-.11 E F1(.).916 E 36 386.85 36
397.85 DL 36 384.85 36 395.85 DL 41.5 383.1 36 383.1 DL 43.5 383.1 38
383.1 DL 49 383.1 43.5 383.1 DL(XSetW)72 399 Q(indo)-.44 E -1.834
(wBorderPixmap \()-.275 F F2(display).916 E F1(,)A F2(w)2.75 E F1(,).916
E F2(bor)2.75 E(der_pixmap)-.407 E F1(\)).916 E(Display *)88.5 412 Q F2
(display)A F1(;).916 E -.44(Wi)88.5 425 S(ndo).44 E(w)-.275 E F2(w)2.75
E F1(;).916 E(Pixmap)88.5 438 Q F2(bor)2.75 E(der_pixmap)-.407 E F1(;)
.916 E F2(display)72 458.8 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2(w)72 475.7 Q F1(Speci\214es the windo)64.663 E -.715(w.)-.275 G F2
(bor)72 492.6 Q(der_pixmap)-.407 E F1(Speci\214es the border pixmap or)
144 505.6 Q F0(CopyFr)3.666 E(omP)-.198 E(ar)-.11 E(ent)-.198 E F1(.)
.916 E 36 501.25 36 512.25 DL 36 499.25 36 510.25 DL 41.5 510.5 36 510.5
DL 43.5 510.5 38 510.5 DL 49 510.5 43.5 510.5 DL(The)72 535.5 Q F0
(XSetW)3.666 E(indo)-.198 E(wBorderPixmap)-.11 E F1
(function sets the border pixmap of the windo)3.666 E 2.75(wt)-.275 G
2.75(ot)-2.75 G(he pixmap)-2.75 E(you specify)72 548.5 Q 5.5(.T)-.715 G
(he border pixmap can be freed immediately if no further e)-5.5 E
(xplicit references to it)-.165 E(are to be made.)72 561.5 Q
(If you specify)5.5 E F0(CopyFr)3.666 E(omP)-.198 E(ar)-.11 E(ent)-.198
E F1 2.75(,ac).916 G(op)-2.75 E 2.75(yo)-.11 G 2.75(ft)-2.75 G
(he parent windo)-2.75 E(w')-.275 E 2.75(sb)-.605 G(order pixmap)-2.75 E
(is used.)72 574.5 Q(If you attempt to perform this on an)5.5 E F0
(InputOnly)3.666 E F1(windo)3.666 E 1.43 -.715(w, a)-.275 H F0(BadMatch)
4.381 E F1(error results.)3.666 E F0(XSetW)72.916 591.4 Q(indo)-.198 E
(wBorderPixmap)-.11 E F1(can generate)3.666 E F0(BadMatch)3.666 E F1(,)
.916 E F0(BadPixmap)3.666 E F1 2.75(,a).916 G(nd)-2.75 E F0(BadW)3.666 E
(indo)-.198 E(w)-.11 E F1(errors.)3.666 E 1.76 -.88(To s)72 621.3 T
(et the colormap of a gi).88 E -.165(ve)-.275 G 2.75(nw).165 G(indo)
-2.75 E 1.43 -.715(w, u)-.275 H(se).715 E F0(XSetW)3.666 E(indo)-.198 E
(wColormap)-.11 E F1(.).916 E F0(55)282.5 769 Q 0 Cg EP
%%Page: 56 61
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E .44 LW 36 76.75 36 87.75 DL 36 74.75
36 85.75 DL 41.5 73 36 73 DL 43.5 73 38 73 DL 49 73 43.5 73 DL/F1 11
/Times-Roman@0 SF(XSetW)72 88.9 Q(indo)-.44 E -1.834(wColormap \()-.275
F/F2 11/Times-Italic@0 SF(display).916 E F1(,)A F2(w)2.75 E F1(,).916 E
F2(colormap)2.75 E F1(\)).916 E(Display *)88.5 101.9 Q F2(display)A F1
(;).916 E -.44(Wi)88.5 114.9 S(ndo).44 E(w)-.275 E F2(w)2.75 E F1(;).916
E(Colormap)88.5 127.9 Q F2(colormap)2.75 E F1(;).916 E F2(display)72
148.7 Q F1(Speci\214es the connection to the X serv)40.221 E(er)-.165 E
(.)-.605 E F2(w)72 165.6 Q F1(Speci\214es the windo)64.663 E -.715(w.)
-.275 G F2(colormap)72 182.5 Q F1(Speci\214es the colormap.)29.837 E 36
178.15 36 189.15 DL 36 176.15 36 187.15 DL 41.5 187.4 36 187.4 DL 43.5
187.4 38 187.4 DL 49 187.4 43.5 187.4 DL(The)72 212.4 Q F0(XSetW)3.666 E
(indo)-.198 E(wColormap)-.11 E F1
(function sets the speci\214ed colormap of the speci\214ed windo)3.666 E
4.18 -.715(w. T)-.275 H(he).715 E(colormap must ha)72 225.4 Q .33 -.165
(ve t)-.22 H(he same visual type as the windo).165 E 1.43 -.715(w, o)
-.275 H 2.75(ra).715 G F0(BadMatch).916 E F1(error results.)3.666 E F0
(XSetW)72.916 242.3 Q(indo)-.198 E(wColormap)-.11 E F1(can generate)
3.666 E F0(BadColor)3.666 E F1(,).916 E F0(BadMatch)3.666 E F1 2.75(,a)
.916 G(nd)-2.75 E F0(BadW)3.666 E(indo)-.198 E(w)-.11 E F1(errors.)3.666
E 1.76 -.88(To d)72 272.2 T
(e\214ne which cursor will be used in a windo).88 E 1.43 -.715(w, u)
-.275 H(se).715 E F0(XDe\214neCursor)3.666 E F1(.).916 E 36 289.95 36
300.95 DL 36 287.95 36 298.95 DL 41.5 286.2 36 286.2 DL 43.5 286.2 38
286.2 DL 49 286.2 43.5 286.2 DL -1.834(XDe\214neCursor \()72 302.1 R F2
(display).916 E F1(,)A F2(w)2.75 E F1(,).916 E F2(cur)2.75 E(sor)-.11 E
F1(\)).916 E(Display *)88.5 315.1 Q F2(display)A F1(;).916 E -.44(Wi)
88.5 328.1 S(ndo).44 E(w)-.275 E F2(w)2.75 E F1(;).916 E(Cursor)88.5
341.1 Q F2(cur)2.75 E(sor)-.11 E F1(;).916 E F2(display)72 361.9 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2(w)72 378.8 Q F1(Speci\214es the windo)64.663 E -.715(w.)-.275 G F2
(cur)72 395.7 Q(sor)-.11 E F1
(Speci\214es the cursor that is to be displayed or)43.389 E F0(None)
3.666 E F1(.).916 E 36 391.35 36 402.35 DL 36 389.35 36 400.35 DL 41.5
400.6 36 400.6 DL 43.5 400.6 38 400.6 DL 49 400.6 43.5 400.6 DL
(If a cursor is set, it will be used when the pointer is in the windo)72
425.6 Q 4.18 -.715(w. I)-.275 H 2.75(ft).715 G(he cursor is)-2.75 E F0
(None)3.666 E F1 2.75(,i).916 G 2.75(ti)-2.75 G(s)-2.75 E(equi)72 438.6
Q -.275(va)-.275 G(lent to).275 E F0(XUnde\214neCursor)3.666 E F1(.).916
E F0(XDe\214neCursor)72.916 455.5 Q F1(can generate)3.666 E F0
(BadCursor)3.666 E F1(and)3.666 E F0(BadW)3.666 E(indo)-.198 E(w)-.11 E
F1(errors.)3.666 E 1.76 -.88(To u)72 485.4 T
(nde\214ne the cursor in a gi).88 E -.165(ve)-.275 G 2.75(nw).165 G
(indo)-2.75 E 1.43 -.715(w, u)-.275 H(se).715 E F0(XUnde\214neCursor)
3.666 E F1(.).916 E 36 503.15 36 514.15 DL 36 501.15 36 512.15 DL 41.5
499.4 36 499.4 DL 43.5 499.4 38 499.4 DL 49 499.4 43.5 499.4 DL -1.834
(XUnde\214neCursor \()72 515.3 R F2(display).916 E F1(,)A F2(w)2.75 E F1
(\)).916 E(Display *)88.5 528.3 Q F2(display)A F1(;).916 E -.44(Wi)88.5
541.3 S(ndo).44 E(w)-.275 E F2(w)2.75 E F1(;).916 E F2(display)72 562.1
Q F1(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)
-.605 E F2(w)72 579 Q F1(Speci\214es the windo)64.663 E -.715(w.)-.275 G
36 574.65 36 585.65 DL 36 572.65 36 583.65 DL 41.5 583.9 36 583.9 DL
43.5 583.9 38 583.9 DL 49 583.9 43.5 583.9 DL(The)72 608.9 Q F0
(XUnde\214neCursor)3.666 E F1(function undoes the ef)3.666 E
(fect of a pre)-.275 E(vious)-.275 E F0(XDe\214neCursor)3.666 E F1
(for this win-)3.666 E(do)72 621.9 Q 4.18 -.715(w. W)-.275 H
(hen the pointer is in the windo).715 E 1.43 -.715(w, t)-.275 H
(he parent').715 E 2.75(sc)-.605 G(ursor will no)-2.75 E 2.75(wb)-.275 G
2.75(eu)-2.75 G 2.75(sed. On)-2.75 F(the root win-)2.75 E(do)72 634.9 Q
1.43 -.715(w, t)-.275 H(he def).715 E(ault cursor is restored.)-.11 E F0
(XUnde\214neCursor)72.916 651.8 Q F1(can generate a)3.666 E F0(BadW)
3.666 E(indo)-.198 E(w)-.11 E F1(error)3.666 E(.)-.605 E F0(56)282.5 769
Q 0 Cg EP
%%Page: 57 62
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E/F1 12/Times-Bold@0 SF(Chapter 4)262.17
111 Q -.216(Wi)206.976 137 S(ndo).216 E 3(wI)-.12 G(nf)-3 E
(ormation Functions)-.3 E/F2 11/Times-Roman@0 SF
(After you connect the display to the X serv)72 179.9 Q
(er and create a windo)-.165 E 1.43 -.715(w, y)-.275 H
(ou can use the Xlib windo).715 E(w)-.275 E(information functions to:)72
192.9 Q 23.65<834f>72 209.8 S(btain information about a windo)-23.65 E
(w)-.275 E 23.65<8354>72 226.7 S(ranslate screen coordinates)-24.035 E
23.65<834d>72 243.6 S(anipulate property lists)-23.65 E 23.65<834f>72
260.5 S(btain and change windo)-23.65 E 2.75(wp)-.275 G(roperties)-2.75
E 23.65<834d>72 277.4 S(anipulate selections)-23.65 E F0 2.75
(4.1. Obtaining)72 303.4 R -.198(Wi)2.75 G(ndo).198 E 2.75(wI)-.11 G(nf)
-2.75 E(ormation)-.275 E F2(Xlib pro)72 320.3 Q
(vides functions that you can use to obtain information about the windo)
-.165 E 2.75(wt)-.275 G(ree, the win-)-2.75 E(do)72 333.3 Q(w')-.275 E
2.75(sc)-.605 G(urrent attrib)-2.75 E(utes, the windo)-.22 E(w')-.275 E
2.75(sc)-.605 G(urrent geometry)-2.75 E 2.75(,o)-.715 G 2.75(rt)-2.75 G
(he current pointer coordinates.)-2.75 E(Because the)72 346.3 Q 2.75(ya)
-.165 G(re most frequently used by windo)-2.75 E 2.75(wm)-.275 G
(anagers, these functions all return a status to)-2.75 E
(indicate whether the windo)72 359.3 Q 2.75(ws)-.275 G(till e)-2.75 E
(xists.)-.165 E 1.76 -.88(To o)72 389.2 T
(btain the parent, a list of children, and number of children for a gi)
.88 E -.165(ve)-.275 G 2.75(nw).165 G(indo)-2.75 E 1.43 -.715(w, u)-.275
H(se).715 E F0(XQuery-)3.666 E -1.32 -.814(Tr e)72 402.2 T(e).814 E F2
(.).916 E .44 LW 36 419.95 36 430.95 DL 36 417.95 36 428.95 DL 41.5
416.2 36 416.2 DL 43.5 416.2 38 416.2 DL 49 416.2 43.5 416.2 DL
(Status XQueryT)72 432.1 Q -1.834(ree \()-.385 F/F3 11/Times-Italic@0 SF
(display).916 E F2(,)A F3(w)2.75 E F2(,).916 E F3 -.495(ro)2.75 G(ot_r)
.495 E(eturn)-.407 E F2(,).916 E F3(par)2.75 E(ent_r)-.407 E(eturn)-.407
E F2(,).916 E F3 -.165(ch)2.75 G(ildr).165 E(en_r)-.407 E(eturn)-.407 E
F2(,).916 E F3(nc)2.75 E(hildr)-.165 E(en_r)-.407 E(eturn)-.407 E F2(\))
.916 E(Display *)88.5 445.1 Q F3(display)A F2(;).916 E -.44(Wi)88.5
458.1 S(ndo).44 E(w)-.275 E F3(w)2.75 E F2(;).916 E -.44(Wi)88.5 471.1 S
(ndo).44 E 2.75(w*)-.275 G F3 -.495(ro)-2.75 G(ot_r).495 E(eturn)-.407 E
F2(;).916 E -.44(Wi)88.5 484.1 S(ndo).44 E 2.75(w*)-.275 G F3(par)-2.75
E(ent_r)-.407 E(eturn)-.407 E F2(;).916 E -.44(Wi)88.5 497.1 S(ndo).44 E
2.75(w*)-.275 G(*)-2.75 E F3 -.165(ch)C(ildr).165 E(en_r)-.407 E(eturn)
-.407 E F2(;).916 E(unsigned int *)88.5 510.1 Q F3(nc)A(hildr)-.165 E
(en_r)-.407 E(eturn)-.407 E F2(;).916 E F3(display)72 530.9 Q F2
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F3(w)72 547.8 Q F2(Speci\214es the windo)64.663 E 2.75(ww)-.275 G
(hose list of children, root, parent, and number of children)-2.75 E
(you w)144 560.8 Q(ant to obtain.)-.11 E F3 -.495(ro)72 577.7 S(ot_r)
.495 E(eturn)-.407 E F2(Returns the root windo)21.565 E -.715(w.)-.275 G
F3(par)72 594.6 Q(ent_r)-.407 E(eturn)-.407 E F2
(Returns the parent windo)11.093 E -.715(w.)-.275 G F3 -.165(ch)72 611.5
S(ildr).165 E(en_r)-.407 E(eturn)-.407 E F2
(Returns the list of children.)144 624.5 Q F3(nc)72 641.4 Q(hildr)-.165
E(en_r)-.407 E(eturn)-.407 E F2(Returns the number of children.)144
654.4 Q 36 650.05 36 661.05 DL 36 648.05 36 659.05 DL 41.5 659.3 36
659.3 DL 43.5 659.3 38 659.3 DL 49 659.3 43.5 659.3 DL(The)72 684.3 Q F0
(XQueryT)3.666 E -.198(re)-.814 G(e).198 E F2
(function returns the root ID, the parent windo)3.666 E 2.75(wI)-.275 G
(D, a pointer to the list of chil-)-2.75 E(dren windo)72 697.3 Q(ws \(N\
ULL when there are no children\), and the number of children in the lis\
t for the)-.275 E(speci\214ed windo)72 710.3 Q 4.18 -.715(w. T)-.275 H
(he children are listed in current stacking order).715 E 2.75(,f)-.44 G
(rom bottom-most \(\214rst\) to)-2.75 E(top-most \(last\).)72 723.3 Q F0
(XQueryT)6.416 E -.198(re)-.814 G(e).198 E F2(returns zero if it f)3.666
E(ails and nonzero if it succeeds.)-.11 E 1.76 -.88(To f)5.5 H
(ree a non-).88 E F0(57)282.5 769 Q 0 Cg EP
%%Page: 58 63
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E/F1 11/Times-Roman@0 SF
(NULL children list when it is no longer needed, use)72 85 Q F0(XFr)
3.666 E(ee)-.198 E F1(.).916 E F0(XQueryT)72.916 101.9 Q -.198(re)-.814
G(e).198 E F1(can generate a)3.666 E F0(BadW)3.666 E(indo)-.198 E(w)-.11
E F1(error)3.666 E(.)-.605 E 1.76 -.88(To o)72 131.8 T
(btain the current attrib).88 E(utes of a gi)-.22 E -.165(ve)-.275 G
2.75(nw).165 G(indo)-2.75 E 1.43 -.715(w, u)-.275 H(se).715 E F0(XGetW)
3.666 E(indo)-.198 E(wAttrib)-.11 E(utes)-.22 E F1(.).916 E .44 LW 36
149.55 36 160.55 DL 36 147.55 36 158.55 DL 41.5 145.8 36 145.8 DL 43.5
145.8 38 145.8 DL 49 145.8 43.5 145.8 DL(Status XGetW)72 161.7 Q(indo)
-.44 E(wAttrib)-.275 E -1.834(utes \()-.22 F/F2 11/Times-Italic@0 SF
(display).916 E F1(,)A F2(w)2.75 E F1(,).916 E F2(window_attrib)2.75 E
(utes_r)-.22 E(eturn)-.407 E F1(\)).916 E(Display *)88.5 174.7 Q F2
(display)A F1(;).916 E -.44(Wi)88.5 187.7 S(ndo).44 E(w)-.275 E F2(w)
2.75 E F1(;).916 E(XW)88.5 200.7 Q(indo)-.44 E(wAttrib)-.275 E(utes *)
-.22 E F2(window_attrib)A(utes_r)-.22 E(eturn)-.407 E F1(;).916 E F2
(display)72 221.5 Q F1(Speci\214es the connection to the X serv)40.221 E
(er)-.165 E(.)-.605 E F2(w)72 238.4 Q F1(Speci\214es the windo)64.663 E
2.75(ww)-.275 G(hose current attrib)-2.75 E(utes you w)-.22 E
(ant to obtain.)-.11 E F2(window_attrib)72 255.3 Q(utes_r)-.22 E(eturn)
-.407 E F1(Returns the speci\214ed windo)144 268.3 Q(w')-.275 E 2.75(sa)
-.605 G(ttrib)-2.75 E(utes in the)-.22 E F0(XW)3.666 E(indo)-.198 E
(wAttrib)-.11 E(utes)-.22 E F1(structure.)3.666 E 36 263.95 36 274.95 DL
36 261.95 36 272.95 DL 41.5 273.2 36 273.2 DL 43.5 273.2 38 273.2 DL 49
273.2 43.5 273.2 DL(The)72 298.2 Q F0(XGetW)3.666 E(indo)-.198 E
(wAttrib)-.11 E(utes)-.22 E F1(function returns the current attrib)3.666
E(utes for the speci\214ed windo)-.22 E 2.75(wt)-.275 G(o)-2.75 E(an)72
311.2 Q F0(XW)3.666 E(indo)-.198 E(wAttrib)-.11 E(utes)-.22 E F1
(structure.)3.666 E 36 332.85 36 343.85 DL 36 330.85 36 341.85 DL 41.5
329.1 36 329.1 DL 43.5 329.1 38 329.1 DL 49 329.1 43.5 329.1 DL
(typedef struct {)72 347.6 Q(int x, y;)108 360.6 Q(/* location of windo)
146.076 E 2.75(w*)-.275 G(/)-2.75 E(int width, height;)108 373.6 Q
(/* width and height of windo)104.518 E 2.75(w*)-.275 G(/)-2.75 E
(int border_width;)108 386.6 Q(/* border width of windo)103.308 E 2.75
(w*)-.275 G(/)-2.75 E(int depth;)108 399.6 Q(/* depth of windo)138.134 E
2.75(w*)-.275 G(/)-2.75 E -.66(Vi)108 412.6 S(sual *visual;).66 E
(/* the associated visual structure */)114.352 E -.44(Wi)108 425.6 S
(ndo).44 E 2.75(wr)-.275 G 116.552(oot; /*)-2.75 F
(root of screen containing windo)2.75 E 2.75(w*)-.275 G(/)-2.75 E
(int class;)108 438.6 Q(/* InputOutput, InputOnly*/)141.192 E
(int bit_gra)108 451.6 Q 111.767(vity; /*)-.22 F(one of the bit gra)2.75
E(vity v)-.22 E(alues */)-.275 E(int win_gra)108 464.6 Q 106.883
(vity; /*)-.22 F(one of the windo)2.75 E 2.75(wg)-.275 G(ra)-2.75 E
(vity v)-.22 E(alues */)-.275 E(int backing_store;)108 477.6 Q
(/* NotUseful, WhenMapped, Al)100.866 E -.11(wa)-.11 G(ys */).11 E
(unsigned long backing_planes;)108 490.6 Q(/* planes to be preserv)
43.732 E(ed if possible */)-.165 E(unsigned long backing_pix)108 503.6 Q
47.252(el; /*)-.165 F -.275(va)2.75 G
(lue to be used when restoring planes */).275 E(Bool sa)108 516.6 Q
-.165(ve)-.22 G 100.338(_under; /*).165 F
(boolean, should bits under be sa)2.75 E -.165(ve)-.22 G(d? */).165 E
(Colormap colormap;)108 529.6 Q
(/* color map to be associated with windo)88.645 E 2.75(w*)-.275 G(/)
-2.75 E(Bool map_installed;)108 542.6 Q
(/* boolean, is color map currently installed*/)91.076 E(int map_state;)
108 555.6 Q(/* IsUnmapped, IsUn)117.971 E(vie)-.44 E -.11(wa)-.275 G
(ble, IsV).11 E(ie)-.66 E -.11(wa)-.275 G(ble */).11 E(long all_e)108
568.6 Q -.165(ve)-.275 G 78.998(nt_masks; /*).165 F(set of e)2.75 E
-.165(ve)-.275 G(nts all people ha).165 E .33 -.165(ve i)-.22 H
(nterest in*/).165 E(long your_e)108 581.6 Q -.165(ve)-.275 G 74.114
(nt_mask; /*).165 F(my e)2.75 E -.165(ve)-.275 G(nt mask */).165 E
(long do_not_propag)108 594.6 Q 43.787(ate_mask; /*)-.055 F(set of e)
2.75 E -.165(ve)-.275 G(nts that should not propag).165 E(ate */)-.055 E
(Bool o)108 607.6 Q -.165(ve)-.165 G 74.631(rride_redirect; /*).165 F
(boolean v)2.75 E(alue for o)-.275 E -.165(ve)-.165 G(rride-redirect */)
.165 E(Screen *screen;)108 620.6 Q(/* back pointer to correct screen */)
110.667 E 2.75(}X)72 633.6 S -.44(Wi)-2.75 G(ndo).44 E(wAttrib)-.275 E
(utes;)-.22 E 36 635.75 36 646.75 DL 36 633.75 36 644.75 DL 41.5 645 36
645 DL 43.5 645 38 645 DL 49 645 43.5 645 DL
(The x and y members are set to the upper)72 670 Q
(-left outer corner relati)-.22 E .33 -.165(ve t)-.275 H 2.75(ot).165 G
(he parent windo)-2.75 E(w')-.275 E 2.75(so)-.605 G(rigin.)-2.75 E
(The width and height members are set to the inside size of the windo)72
683 Q 1.43 -.715(w, n)-.275 H(ot including the border).715 E(.)-.605 E
(The border_width member is set to the windo)72 696 Q(w')-.275 E 2.75
(sb)-.605 G(order width in pix)-2.75 E 2.75(els. The)-.165 F
(depth member is set)2.75 E(to the depth of the windo)72 709 Q 2.75(w\()
-.275 G(that is, bits per pix)-2.75 E(el for the object\).)-.165 E
(The visual member is a pointer)5.5 E(to the screen')72 722 Q 2.75(sa)
-.605 G(ssociated)-2.75 E F0 -.407(Vi)3.666 G(sual).407 E F1 2.75
(structure. The)3.666 F(root member is set to the root windo)2.75 E 2.75
(wo)-.275 G 2.75(ft)-2.75 G(he)-2.75 E F0(58)282.5 769 Q 0 Cg EP
%%Page: 59 64
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E/F1 11/Times-Roman@0 SF
(screen containing the windo)72 85 Q 4.18 -.715(w. T)-.275 H
(he class member is set to the windo).715 E(w')-.275 E 2.75(sc)-.605 G
(lass and can be either)-2.75 E F0(InputOutput)72.916 98 Q F1(or)3.666 E
F0(InputOnly)3.666 E F1(.).916 E(The bit_gra)72 114.9 Q
(vity member is set to the windo)-.22 E(w')-.275 E 2.75(sb)-.605 G
(it gra)-2.75 E(vity and can be one of the follo)-.22 E(wing:)-.275 E F0
-.275(Fo)72.916 138.3 S -.11(rg).275 G(etGra).11 E(vity)-.275 E(EastGra)
197.416 138.3 Q(vity)-.275 E(NorthW)72.916 151.3 Q(estGra)-.715 E(vity)
-.275 E(SouthW)197.416 151.3 Q(estGra)-.715 E(vity)-.275 E(NorthGra)
72.916 164.3 Q(vity)-.275 E(SouthGra)197.416 164.3 Q(vity)-.275 E
(NorthEastGra)72.916 177.3 Q(vity)-.275 E(SouthEastGra)197.416 177.3 Q
(vity)-.275 E -.715(We)72.916 190.3 S(stGra).715 E(vity)-.275 E
(StaticGra)197.416 190.3 Q(vity)-.275 E(CenterGra)72.916 203.3 Q(vity)
-.275 E F1(The win_gra)72 226.7 Q(vity member is set to the windo)-.22 E
(w')-.275 E 2.75(sw)-.605 G(indo)-2.75 E 2.75(wg)-.275 G(ra)-2.75 E
(vity and can be one of the follo)-.22 E(wing:)-.275 E F0(UnmapGra)
72.916 250.1 Q(vity)-.275 E(EastGra)197.416 250.1 Q(vity)-.275 E(NorthW)
72.916 263.1 Q(estGra)-.715 E(vity)-.275 E(SouthW)197.416 263.1 Q
(estGra)-.715 E(vity)-.275 E(NorthGra)72.916 276.1 Q(vity)-.275 E
(SouthGra)197.416 276.1 Q(vity)-.275 E(NorthEastGra)72.916 289.1 Q(vity)
-.275 E(SouthEastGra)197.416 289.1 Q(vity)-.275 E -.715(We)72.916 302.1
S(stGra).715 E(vity)-.275 E(StaticGra)197.416 302.1 Q(vity)-.275 E
(CenterGra)72.916 315.1 Q(vity)-.275 E F1 -.165(Fo)72 338.5 S 2.75(ra)
.165 G(dditional information on gra)-2.75 E(vity)-.22 E 2.75(,s)-.715 G
(ee section 3.2.3.)-2.75 E
(The backing_store member is set to indicate ho)72 355.4 Q 2.75(wt)-.275
G(he X serv)-2.75 E(er should maintain the contents of a)-.165 E(windo)
72 368.4 Q 2.75(wa)-.275 G(nd can be)-2.75 E F0(WhenMapped)3.666 E F1(,)
.916 E F0(Always)3.666 E F1 2.75(,o).916 G(r)-2.75 E F0(NotUseful)3.666
E F1 5.5(.T).916 G(he backing_planes member is set)-5.5 E
(to indicate \(with bits set to 1\) which bit planes of the windo)72
381.4 Q 2.75(wh)-.275 G(old dynamic data that must be pre-)-2.75 E(serv)
72 394.4 Q(ed in backing_stores and during sa)-.165 E -.165(ve)-.22 G
2.75(_unders. The).165 F(backing_pix)2.75 E
(el member is set to indicate)-.165 E(what v)72 407.4 Q
(alues to use for planes not set in backing_planes.)-.275 E(The sa)72
424.3 Q -.165(ve)-.22 G(_under member is set to).165 E F0 -.814(Tr)3.666
G(ue).814 E F1(or)3.666 E F0 -.275(Fa)3.666 G(lse).275 E F1 5.5(.T).916
G(he colormap member is set to the colormap)-5.5 E
(for the speci\214ed windo)72 437.3 Q 2.75(wa)-.275 G
(nd can be a colormap ID or)-2.75 E F0(None)3.666 E F1 5.5(.T).916 G
(he map_installed member is set to)-5.5 E
(indicate whether the colormap is currently installed and can be)72
450.3 Q F0 -.814(Tr)3.666 G(ue).814 E F1(or)3.666 E F0 -.275(Fa)3.666 G
(lse).275 E F1 5.5(.T).916 G(he map_state)-5.5 E
(member is set to indicate the state of the windo)72 463.3 Q 2.75(wa)
-.275 G(nd can be)-2.75 E F0(IsUnmapped)3.666 E F1(,).916 E F0(IsUn)
3.666 E(viewable)-.44 E F1 2.75(,o).916 G(r)-2.75 E F0(IsV)72.916 476.3
Q(iewable)-.407 E F1(.).916 E F0(IsUn)6.416 E(viewable)-.44 E F1
(is used if the windo)3.666 E 2.75(wi)-.275 G 2.75(sm)-2.75 G(apped b)
-2.75 E(ut some ancestor is unmapped.)-.22 E(The all_e)72 493.2 Q -.165
(ve)-.275 G(nt_masks member is set to the bitwise inclusi).165 E .33
-.165(ve O)-.275 H 2.75(Ro).165 G 2.75(fa)-2.75 G(ll e)-2.75 E -.165(ve)
-.275 G(nt masks selected on the).165 E(windo)72 506.2 Q 2.75(wb)-.275 G
2.75(ya)-2.75 G(ll clients.)-2.75 E(The your_e)5.5 E -.165(ve)-.275 G
(nt_mask member is set to the bitwise inclusi).165 E .33 -.165(ve O)
-.275 H 2.75(Ro).165 G 2.75(fa)-2.75 G(ll)-2.75 E -2.365 -.275(ev e)72
519.2 T(nt masks selected by the querying client.).275 E
(The do_not_propag)5.5 E(ate_mask member is set to the)-.055 E
(bitwise inclusi)72 532.2 Q .33 -.165(ve O)-.275 H 2.75(Ro).165 G 2.75
(ft)-2.75 G(he set of e)-2.75 E -.165(ve)-.275 G
(nts that should not propag).165 E(ate.)-.055 E(The o)72 549.1 Q -.165
(ve)-.165 G(rride_redirect member is set to indicate whether this windo)
.165 E 2.75(wo)-.275 G -.165(ve)-2.915 G(rrides structure control).165 E
-.11(fa)72 562.1 S(cilities and can be).11 E F0 -.814(Tr)3.666 G(ue).814
E F1(or)3.666 E F0 -.275(Fa)3.666 G(lse).275 E F1 5.5(.W).916 G(indo)
-5.94 E 2.75(wm)-.275 G(anager clients should ignore the windo)-2.75 E
2.75(wi)-.275 G 2.75(ft)-2.75 G(his)-2.75 E(member is)72 575.1 Q F0
-.814(Tr)3.666 G(ue).814 E F1(.).916 E
(The screen member is set to a screen pointer that gi)72 592 Q -.165(ve)
-.275 G 2.75(sy).165 G(ou a back pointer to the correct screen.)-2.75 E
(This mak)72 605 Q
(es it easier to obtain the screen information without ha)-.11 E
(ving to loop o)-.22 E -.165(ve)-.165 G 2.75(rt).165 G(he root windo)
-2.75 E(w)-.275 E(\214elds to see which \214eld matches.)72 618 Q F0
(XGetW)72.916 634.9 Q(indo)-.198 E(wAttrib)-.11 E(utes)-.22 E F1
(can generate)3.666 E F0(BadDrawable)3.666 E F1(and)3.666 E F0(BadW)
3.666 E(indo)-.198 E(w)-.11 E F1(errors.)3.666 E 1.76 -.88(To o)72 664.8
T(btain the current geometry of a gi).88 E -.165(ve)-.275 G 2.75(nd).165
G(ra)-2.75 E -.11(wa)-.165 G(ble, use).11 E F0(XGetGeometry)3.666 E F1
(.).916 E F0(59)282.5 769 Q 0 Cg EP
%%Page: 60 65
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E .44 LW 36 76.75 36 87.75 DL 36 74.75
36 85.75 DL 41.5 73 36 73 DL 43.5 73 38 73 DL 49 73 43.5 73 DL/F1 11
/Times-Roman@0 SF(Status XGetGeometry)72 88.9 Q(\().916 E/F2 11
/Times-Italic@0 SF(display).916 E F1(,)A F2(d)2.75 E F1(,).916 E F2
-.495(ro)3.666 G(ot_r).495 E(eturn)-.407 E F1(,).916 E F2(x_r)2.75 E
(eturn)-.407 E F1(,).916 E F2(y_r)2.75 E(eturn)-.407 E F1(,).916 E F2
(width_r)2.75 E(eturn)-.407 E F1(,).916 E F2(height_r)132.5 101.9 Q
(eturn)-.407 E F1(,).916 E F2(bor)2.75 E(der_width_r)-.407 E(eturn)-.407
E F1(,).916 E F2(depth_r)2.75 E(eturn)-.407 E F1(\)).916 E(Display *)94
114.9 Q F2(display)A F1(;).916 E(Dra)94 127.9 Q -.11(wa)-.165 G(ble).11
E F2(d)2.75 E F1(;).916 E -.44(Wi)94 140.9 S(ndo).44 E 2.75(w*)-.275 G
F2 -.495(ro)-2.75 G(ot_r).495 E(eturn)-.407 E F1(;).916 E(int *)94 153.9
Q F2(x_r)A(eturn)-.407 E F1 2.75(,*).916 G F2(y_r)-2.75 E(eturn)-.407 E
F1(;).916 E(unsigned int *)94 166.9 Q F2(width_r)A(eturn)-.407 E F1 2.75
(,*).916 G F2(height_r)-2.75 E(eturn)-.407 E F1(;).916 E(unsigned int *)
94 179.9 Q F2(bor)A(der_width_r)-.407 E(eturn)-.407 E F1(;).916 E
(unsigned int *)94 192.9 Q F2(depth_r)A(eturn)-.407 E F1(;).916 E F2
(display)72 213.7 Q F1(Speci\214es the connection to the X serv)40.221 E
(er)-.165 E(.)-.605 E F2(d)72 230.6 Q F1(Speci\214es the dra)66.5 E -.11
(wa)-.165 G(ble, which can be a windo).11 E 2.75(wo)-.275 G 2.75(rap)
-2.75 G(ixmap.)-2.75 E F2 -.495(ro)72 247.5 S(ot_r).495 E(eturn)-.407 E
F1(Returns the root windo)21.565 E -.715(w.)-.275 G F2(x_r)72 264.4 Q
(eturn)-.407 E(y_r)72 277.4 Q(eturn)-.407 E F1
(Return the x and y coordinates that de\214ne the location of the dra)
34.523 E -.11(wa)-.165 G 2.75(ble. F).11 F(or a)-.165 E(windo)144 290.4
Q 1.43 -.715(w, t)-.275 H(hese coordinates specify the upper).715 E
(-left outer corner relati)-.22 E .33 -.165(ve t)-.275 H 2.75(oi).165 G
(ts par)-2.75 E(-)-.22 E(ent')144 303.4 Q 2.75(so)-.605 G 2.75(rigin. F)
-2.75 F(or pixmaps, these coordinates are al)-.165 E -.11(wa)-.11 G
(ys zero.).11 E F2(width_r)72 320.3 Q(eturn)-.407 E(height_r)72 333.3 Q
(eturn)-.407 E F1(Return the dra)11.907 E -.11(wa)-.165 G(ble').11 E
2.75(sd)-.605 G(imensions \(width and height\).)-2.75 E -.165(Fo)5.5 G
2.75(raw).165 G(indo)-2.75 E 1.43 -.715(w, t)-.275 H(hese).715 E
(dimensions specify the inside size, not including the border)144 346.3
Q(.)-.605 E F2(bor)72 363.2 Q(der_width_r)-.407 E(eturn)-.407 E F1
(Returns the border width in pix)144 376.2 Q 2.75(els. If)-.165 F
(the dra)2.75 E -.11(wa)-.165 G(ble is a pixmap, it returns zero.).11 E
F2(depth_r)72 393.1 Q(eturn)-.407 E F1(Returns the depth of the dra)
14.965 E -.11(wa)-.165 G(ble \(bits per pix).11 E(el for the object\).)
-.165 E 36 388.75 36 399.75 DL 36 386.75 36 397.75 DL 41.5 398 36 398 DL
43.5 398 38 398 DL 49 398 43.5 398 DL(The)72 423 Q F0(XGetGeometry)3.666
E F1(function returns the root windo)3.666 E 2.75(wa)-.275 G
(nd the current geometry of the dra)-2.75 E -.11(wa)-.165 G(ble.).11 E
(The geometry of the dra)72 436 Q -.11(wa)-.165 G
(ble includes the x and y coordinates, width and height, border width,)
.11 E(and depth.)72 449 Q(These are described in the ar)5.5 E
(gument list.)-.198 E(It is le)5.5 E -.055(ga)-.165 G 2.75(lt).055 G
2.75(op)-2.75 G(ass to this function a windo)-2.75 E(w)-.275 E
(whose class is)72 462 Q F0(InputOnly)3.666 E F1(.).916 E F0
(XGetGeometry)72.916 478.9 Q F1(can generate a)3.666 E F0(BadDrawable)
3.666 E F1(error)3.666 E(.)-.605 E F0 2.75(4.2. T)72 504.9 R
(ranslating Scr)-.814 E(een Coordinates)-.198 E F1(Applications sometim\
es need to perform a coordinate transformation from the coordinate spac\
e of)72 521.8 Q(one windo)72 534.8 Q 2.75(wt)-.275 G 2.75(oa)-2.75 G
(nother windo)-2.75 E 2.75(wo)-.275 G 2.75(rn)-2.75 G
(eed to determine which windo)-2.75 E 2.75(wt)-.275 G(he pointing de)
-2.75 E(vice is in.)-.275 E F0(XT)72.916 547.8 Q(ranslateCoordinates)
-.814 E F1(and)3.666 E F0(XQueryP)3.666 E(ointer)-.22 E F1
(ful\214ll these needs \(and a)3.666 E -.22(vo)-.22 G(id an).22 E 2.75
(yr)-.165 G(ace conditions\))-2.75 E(by asking the X serv)72 560.8 Q
(er to perform these operations.)-.165 E 1.76 -.88(To t)72 590.7 T
(ranslate a coordinate in one windo).88 E 2.75(wt)-.275 G 2.75(ot)-2.75
G(he coordinate space of another windo)-2.75 E 1.43 -.715(w, u)-.275 H
(se).715 E F0(XT)3.666 E(rans-)-.814 E(lateCoordinates)72 603.7 Q F1(.)
.916 E F0(60)282.5 769 Q 0 Cg EP
%%Page: 61 66
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E .44 LW 36 76.75 36 87.75 DL 36 74.75
36 85.75 DL 41.5 73 36 73 DL 43.5 73 38 73 DL 49 73 43.5 73 DL/F1 11
/Times-Roman@0 SF(Bool XT)72 88.9 Q -1.834(ranslateCoordinates \()-.385
F/F2 11/Times-Italic@0 SF(display).916 E F1(,)A F2(sr)2.75 E(c_w)-.407 E
F1(,).916 E F2(dest_w)2.75 E F1(,).916 E F2(sr)2.75 E(c_x)-.407 E F1(,)
.916 E F2(sr)2.75 E(c_y)-.407 E F1(,).916 E F2(dest_x_r)2.75 E(eturn)
-.407 E F1(,).916 E F2(dest_y_r)149 101.9 Q(eturn)-.407 E F1(,).916 E F2
-.165(ch)2.75 G(ild_r).165 E(eturn)-.407 E F1(\)).916 E(Display *)88.5
114.9 Q F2(display)A F1(;).916 E -.44(Wi)88.5 127.9 S(ndo).44 E(w)-.275
E F2(sr)2.75 E(c_w)-.407 E F1(,).916 E F2(dest_w)2.75 E F1(;).916 E(int)
88.5 140.9 Q F2(sr)2.75 E(c_x)-.407 E F1(,).916 E F2(sr)2.75 E(c_y)-.407
E F1(;).916 E(int *)88.5 153.9 Q F2(dest_x_r)A(eturn)-.407 E F1 2.75(,*)
.916 G F2(dest_y_r)-2.75 E(eturn)-.407 E F1(;).916 E -.44(Wi)88.5 166.9
S(ndo).44 E 2.75(w*)-.275 G F2 -.165(ch)-2.75 G(ild_r).165 E(eturn)-.407
E F1(;).916 E F2(display)72 187.7 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2(sr)72 204.6 Q(c_w)-.407 E F1(Speci\214es the source windo)46.128 E
-.715(w.)-.275 G F2(dest_w)72 221.5 Q F1
(Speci\214es the destination windo)41.442 E -.715(w.)-.275 G F2(sr)72
238.4 Q(c_x)-.407 E(sr)72 251.4 Q(c_y)-.407 E F1
(Specify the x and y coordinates within the source windo)48.581 E -.715
(w.)-.275 G F2(dest_x_r)72 268.3 Q(eturn)-.407 E(dest_y_r)72 281.3 Q
(eturn)-.407 E F1
(Return the x and y coordinates within the destination windo)11.302 E
-.715(w.)-.275 G F2 -.165(ch)72 298.2 S(ild_r).165 E(eturn)-.407 E F1(R\
eturns the child if the coordinates are contained in a mapped child of \
the desti-)17.572 E(nation windo)144 311.2 Q -.715(w.)-.275 G 36 306.85
36 317.85 DL 36 304.85 36 315.85 DL 41.5 316.1 36 316.1 DL 43.5 316.1 38
316.1 DL 49 316.1 43.5 316.1 DL(If)72 341.1 Q F0(XT)3.666 E
(ranslateCoordinates)-.814 E F1(returns)3.666 E F0 -.814(Tr)3.666 G(ue)
.814 E F1 2.75(,i).916 G 2.75(tt)-2.75 G(ak)-2.75 E
(es the src_x and src_y coordinates relati)-.11 E .33 -.165(ve t)-.275 H
2.75(ot).165 G(he)-2.75 E(source windo)72 354.1 Q(w')-.275 E 2.75(so)
-.605 G(rigin and returns these coordinates to dest_x_return and dest_y\
_return relati)-2.75 E -.165(ve)-.275 G(to the destination windo)72
367.1 Q(w')-.275 E 2.75(so)-.605 G 2.75(rigin. If)-2.75 F F0(XT)3.666 E
(ranslateCoordinates)-.814 E F1(returns)3.666 E F0 -.275(Fa)3.666 G(lse)
.275 E F1 2.75(,s).916 G(rc_w and dest_w)-2.75 E(are on dif)72 380.1 Q
(ferent screens, and dest_x_return and dest_y_return are zero.)-.275 E
(If the coordinates are con-)5.5 E(tained in a mapped child of dest_w)72
393.1 Q 2.75(,t)-.715 G(hat child is returned to child_return.)-2.75 E
(Otherwise, child_return)5.5 E(is set to)72 406.1 Q F0(None)3.666 E F1
(.).916 E F0(XT)72.916 423 Q(ranslateCoordinates)-.814 E F1
(can generate a)3.666 E F0(BadW)3.666 E(indo)-.198 E(w)-.11 E F1(error)
3.666 E(.)-.605 E 1.76 -.88(To o)72 452.9 T(btain the screen coordinate\
s of the pointer or to determine the pointer coordinates relati).88 E
.33 -.165(ve t)-.275 H 2.75(oa).165 G(speci\214ed windo)72 465.9 Q 1.43
-.715(w, u)-.275 H(se).715 E F0(XQueryP)3.666 E(ointer)-.22 E F1(.).916
E F0(61)282.5 769 Q 0 Cg EP
%%Page: 62 67
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E .44 LW 36 76.75 36 87.75 DL 36 74.75
36 85.75 DL 41.5 73 36 73 DL 43.5 73 38 73 DL 49 73 43.5 73 DL/F1 11
/Times-Roman@0 SF(Bool XQueryPointer)72 88.9 Q(\().916 E/F2 11
/Times-Italic@0 SF(display).916 E F1(,)A F2(w)2.75 E F1(,).916 E F2
-.495(ro)2.75 G(ot_r).495 E(eturn)-.407 E F1(,).916 E F2 -.165(ch)2.75 G
(ild_r).165 E(eturn)-.407 E F1(,).916 E F2 -.495(ro)2.75 G(ot_x_r).495 E
(eturn)-.407 E F1(,).916 E F2 -.495(ro)2.75 G(ot_y_r).495 E(eturn)-.407
E F1(,).916 E F2(win_x_r)129.75 101.9 Q(eturn)-.407 E F1(,).916 E F2
(win_y_r)2.75 E(eturn)-.407 E F1(,).916 E F2(mask_r)2.75 E(eturn)-.407 E
F1(\)).916 E(Display *)88.5 114.9 Q F2(display)A F1(;).916 E -.44(Wi)
88.5 127.9 S(ndo).44 E(w)-.275 E F2(w)2.75 E F1(;).916 E -.44(Wi)88.5
140.9 S(ndo).44 E 2.75(w*)-.275 G F2 -.495(ro)-2.75 G(ot_r).495 E(eturn)
-.407 E F1 2.75(,*).916 G F2 -.165(ch)-2.75 G(ild_r).165 E(eturn)-.407 E
F1(;).916 E(int *)88.5 153.9 Q F2 -.495(ro)C(ot_x_r).495 E(eturn)-.407 E
F1 2.75(,*).916 G F2 -.495(ro)-2.75 G(ot_y_r).495 E(eturn)-.407 E F1(;)
.916 E(int *)88.5 166.9 Q F2(win_x_r)A(eturn)-.407 E F1 2.75(,*).916 G
F2(win_y_r)-2.75 E(eturn)-.407 E F1(;).916 E(unsigned int *)88.5 179.9 Q
F2(mask_r)A(eturn)-.407 E F1(;).916 E F2(display)72 200.7 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2(w)72 217.6 Q F1(Speci\214es the windo)64.663 E -.715(w.)-.275 G F2
-.495(ro)72 234.5 S(ot_r).495 E(eturn)-.407 E F1(Returns the root windo)
21.565 E 2.75(wt)-.275 G(hat the pointer is in.)-2.75 E F2 -.165(ch)72
251.4 S(ild_r).165 E(eturn)-.407 E F1(Returns the child windo)17.572 E
2.75(wt)-.275 G(hat the pointer is located in, if an)-2.75 E -.715(y.)
-.165 G F2 -.495(ro)72 268.3 S(ot_x_r).495 E(eturn)-.407 E -.495(ro)72
281.3 S(ot_y_r).495 E(eturn)-.407 E F1
(Return the pointer coordinates relati)11.181 E .33 -.165(ve t)-.275 H
2.75(ot).165 G(he root windo)-2.75 E(w')-.275 E 2.75(so)-.605 G(rigin.)
-2.75 E F2(win_x_r)72 298.2 Q(eturn)-.407 E(win_y_r)72 311.2 Q(eturn)
-.407 E F1(Return the pointer coordinates relati)13.128 E .33 -.165
(ve t)-.275 H 2.75(ot).165 G(he speci\214ed windo)-2.75 E -.715(w.)-.275
G F2(mask_r)72 328.1 Q(eturn)-.407 E F1
(Returns the current state of the modi\214er k)16.802 E -.165(ey)-.11 G
2.75(sa).165 G(nd pointer b)-2.75 E(uttons.)-.22 E 36 323.75 36 334.75
DL 36 321.75 36 332.75 DL 41.5 333 36 333 DL 43.5 333 38 333 DL 49 333
43.5 333 DL(The)72 358 Q F0(XQueryP)3.666 E(ointer)-.22 E F1
(function returns the root windo)3.666 E 2.75(wt)-.275 G
(he pointer is logically on and the pointer)-2.75 E(coordinates relati)
72 371 Q .33 -.165(ve t)-.275 H 2.75(ot).165 G(he root windo)-2.75 E(w')
-.275 E 2.75(so)-.605 G 2.75(rigin. If)-2.75 F F0(XQueryP)3.666 E
(ointer)-.22 E F1(returns)3.666 E F0 -.275(Fa)3.666 G(lse).275 E F1 2.75
(,t).916 G(he pointer is)-2.75 E
(not on the same screen as the speci\214ed windo)72 384 Q 1.43 -.715
(w, a)-.275 H(nd).715 E F0(XQueryP)3.666 E(ointer)-.22 E F1(returns)
3.666 E F0(None)3.666 E F1(to)3.666 E
(child_return and zero to win_x_return and win_y_return.)72 397 Q(If)5.5
E F0(XQueryP)3.666 E(ointer)-.22 E F1(returns)3.666 E F0 -.814(Tr)3.666
G(ue).814 E F1 2.75(,t).916 G(he)-2.75 E(pointer coordinates returned t\
o win_x_return and win_y_return are relati)72 410 Q .33 -.165(ve t)-.275
H 2.75(ot).165 G(he origin of the)-2.75 E(speci\214ed windo)72 423 Q
4.18 -.715(w. I)-.275 H 2.75(nt).715 G(his case,)-2.75 E F0(XQueryP)
3.666 E(ointer)-.22 E F1(returns the child that contains the pointer)
3.666 E 2.75(,i)-.44 G 2.75(fa)-2.75 G -.165(ny)-2.75 G(,)-.55 E
(or else)72 436 Q F0(None)3.666 E F1(to child_return.)3.666 E F0
(XQueryP)72.916 452.9 Q(ointer)-.22 E F1
(returns the current logical state of the k)3.666 E -.165(ey)-.11 G
(board b).165 E(uttons and the modi\214er k)-.22 E -.165(ey)-.11 G 2.75
(si).165 G(n)-2.75 E 2.75(mask_return. It)72 465.9 R
(sets mask_return to the bitwise inclusi)2.75 E .33 -.165(ve O)-.275 H
2.75(Ro).165 G 2.75(fo)-2.75 G(ne or more of the b)-2.75 E(utton or)-.22
E(modi\214er k)72 478.9 Q .33 -.165(ey b)-.11 H
(itmasks to match the current state of the mouse b).165 E
(uttons and the modi\214er k)-.22 E -.165(ey)-.11 G(s.).165 E
(Note that the logical state of a de)72 495.8 Q
(vice \(as seen through Xlib\) may lag the ph)-.275 E
(ysical state if de)-.055 E(vice)-.275 E -2.365 -.275(ev e)72 508.8 T
(nt processing is frozen \(see section 12.1\).).275 E F0(XQueryP)72.916
525.7 Q(ointer)-.22 E F1(can generate a)3.666 E F0(BadW)3.666 E(indo)
-.198 E(w)-.11 E F1(error)3.666 E(.)-.605 E F0 2.75(4.3. Pr)72 551.7 R
(operties and Atoms)-.198 E F1 2.75(Ap)72 568.6 S
(roperty is a collection of named, typed data.)-2.75 E(The windo)5.5 E
2.75(ws)-.275 G(ystem has a set of prede\214ned prop-)-2.75 E
(erties \(for e)72 581.6 Q(xample, the name of a windo)-.165 E 1.43
-.715(w, s)-.275 H(ize hints, and so on\), and users can de\214ne an)
.715 E 2.75(yo)-.165 G(ther)-2.75 E
(arbitrary information and associate it with windo)72 594.6 Q 2.75
(ws. Each)-.275 F(property has a name, which is an ISO)2.75 E
(Latin-1 string.)72 607.6 Q -.165(Fo)5.5 G 2.75(re).165 G
(ach named property)-2.75 E 2.75(,au)-.715 G
(nique identi\214er \(atom\) is associated with it.)-2.75 E 2.75(Ap)5.5
G(rop-)-2.75 E(erty also has a type, for e)72 620.6 Q
(xample, string or inte)-.165 E(ger)-.165 E 5.5(.T)-.605 G
(hese types are also indicated using atoms, so)-5.5 E(arbitrary ne)72
633.6 Q 2.75(wt)-.275 G(ypes can be de\214ned.)-2.75 E
(Data of only one type may be associated with a single prop-)5.5 E
(erty name.)72 646.6 Q(Clients can store and retrie)5.5 E .33 -.165
(ve p)-.275 H(roperties associated with windo).165 E 2.75(ws. F)-.275 F
(or ef)-.165 E(\214cienc)-.275 E 2.75(yr)-.165 G(ea-)-2.75 E
(sons, an atom is used rather than a character string.)72 659.6 Q F0
(XInter)6.416 E(nAtom)-.165 E F1(can be used to obtain the)3.666 E
(atom for property names.)72 672.6 Q 2.75(Ap)72 689.5 S
(roperty is also stored in one of se)-2.75 E -.165(ve)-.275 G
(ral possible formats.).165 E(The X serv)5.5 E
(er can store the informa-)-.165 E
(tion as 8-bit quantities, 16-bit quantities, or 32-bit quantities.)72
702.5 Q(This permits the X serv)5.5 E(er to present)-.165 E
(the data in the byte order that the client e)72 715.5 Q(xpects.)-.165 E
F0(62)282.5 769 Q 0 Cg EP
%%Page: 63 68
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E/F1 11/Times-Roman@0 SF(Note)277.308 85
Q(If you de\214ne further properties of comple)99.5 103 Q 2.75(xt)-.165
G(ype, you must encode and decode them)-2.75 E 2.75(yourself. These)99.5
116 R(functions must be carefully written if the)2.75 E 2.75(ya)-.165 G
(re to be portable.)-2.75 E -.165(Fo)5.5 G(r).165 E
(further information about ho)99.5 129 Q 2.75(wt)-.275 G 2.75(ow)-2.75 G
(rite a library e)-2.75 E(xtension, see appendix C.)-.165 E
(The type of a property is de\214ned by an atom, which allo)72 152 Q
(ws for arbitrary e)-.275 E(xtension in this type)-.165 E(scheme.)72 165
Q(Certain property names are prede\214ned in the serv)72 181.9 Q
(er for commonly used functions.)-.165 E(The atoms for)5.5 E
(these properties are de\214ned in <)72 194.9 Q F0(X11/Xatom.h)A F1 2.75
(>. T)B 2.75(oa)-.88 G -.22(vo)-2.97 G
(id name clashes with user symbols, the).22 E F0(#de\214ne)72.916 207.9
Q F1(name for each atom has the XA_ pre\214x.)3.666 E -.165(Fo)5.5 G
2.75(ra).165 G 2.75(ne)-2.75 G(xplanation of the functions that let you)
-2.915 E(get and set much of the information stored in these prede\214n\
ed properties, see chapter 14.)72 220.9 Q
(The core protocol imposes no semantics on these property names, b)72
237.8 Q(ut semantics are speci\214ed in)-.22 E
(other X Consortium standards, such as the)72 250.8 Q/F2 11
/Times-Italic@0 SF(Inter)2.75 E(-Client Communication Con)-.22 E
(ventions Manual)-.44 E F1(and)2.75 E(the)72 263.8 Q F2 2.75(XL)2.75 G
-.11(og)-2.75 G(ical F).11 E(ont Description Con)-1.155 E(ventions)-.44
E F1(.)A -1.21(Yo)72 280.7 S 2.75(uc)1.21 G(an use properties to commun\
icate other information between applications.)-2.75 E(The functions)5.5
E(described in this section let you de\214ne ne)72 293.7 Q 2.75(wp)-.275
G(roperties and get the unique atom IDs in your appli-)-2.75 E(cations.)
72 306.7 Q(Although an)72 323.6 Q 2.75(yp)-.165 G(articular atom can ha)
-2.75 E .33 -.165(ve s)-.22 H
(ome client interpretation within each of the name spaces,).165 E
(atoms occur in \214v)72 336.6 Q 2.75(ed)-.165 G
(istinct name spaces within the protocol:)-2.75 E 23.65<8353>72 353.5 S
(elections)-23.65 E 23.65<8350>72 370.4 S(roperty names)-23.65 E 23.65
<8350>72 387.3 S(roperty types)-23.65 E 23.65<8346>72 404.2 S
(ont properties)-23.815 E 23.65<8354>72 421.1 S(ype of a)-24.53 E F0
(ClientMessage)3.666 E F1 -2.365 -.275(ev e)3.666 H(nt \(none are b).275
E(uilt into the X serv)-.22 E(er\))-.165 E(The b)72 441.9 Q
(uilt-in selection property names are:)-.22 E(PRIMAR)72 465.3 Q(Y)-.715
E(SECOND)72 478.3 Q(AR)-.44 E(Y)-.715 E(The b)72 501.7 Q
(uilt-in property names are:)-.22 E(CUT_B)72 527.2 Q 83.291
(UFFER0 RESOURCE_MAN)-.11 F -.44(AG)-.385 G(ER).44 E(CUT_B)72 540.2 Q
83.291(UFFER1 WM_CLASS)-.11 F(CUT_B)72 553.2 Q 83.291
(UFFER2 WM_CLIENT_MA)-.11 F(CHINE)-.44 E(CUT_B)72 566.2 Q 83.291
(UFFER3 WM_COLORMAP_WINDO)-.11 F(WS)-.385 E(CUT_B)72 579.2 Q 83.291
(UFFER4 WM_COMMAND)-.11 F(CUT_B)72 592.2 Q 83.291(UFFER5 WM_HINTS)-.11 F
(CUT_B)72 605.2 Q 83.291(UFFER6 WM_ICON_N)-.11 F(AME)-.385 E(CUT_B)72
618.2 Q 83.291(UFFER7 WM_ICON_SIZE)-.11 F 73.402(RGB_BEST_MAP WM_N)72
631.2 R(AME)-.385 E 71.576(RGB_BLUE_MAP WM_NORMAL_HINTS)72 644.2 R
(RGB_DEF)72 657.2 Q -.605(AU)-.814 G -1.012(LT).605 G 52.623(_MAP WM_PR)
1.012 F -2.068 -.44(OT O)-.44 H(COLS).44 E(RGB_GRA)72 670.2 Q 70.289
(Y_MAP WM_ST)-1.155 F -1.221(AT)-1.023 G(E)1.221 E 63.634
(RGB_GREEN_MAP WM_TRANSIENT_FOR)72 683.2 R 78.297
(RGB_RED_MAP WM_ZOOM_HINTS)72 696.2 R F0(63)282.5 769 Q 0 Cg EP
%%Page: 64 69
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E/F1 11/Times-Roman@0 SF(The b)72 85 Q
(uilt-in property types are:)-.22 E 135.134(ARC POINT)72 114.4 R -.506
-1.221(AT O)72 127.4 T 129.535(MR)1.221 G(GB_COLOR_MAP)-129.535 E
116.192(BITMAP RECT)72 140.4 R(ANGLE)-1.023 E(CARDIN)72 153.4 Q 101.309
(AL STRING)-.385 F 96.634(COLORMAP VISU)72 166.4 R(ALID)-.44 E 113.739
(CURSOR WINDO)72 179.4 R(W)-.385 E(DRA)72 192.4 Q -1.32(WA)-.99 G 97.734
(BLE WM_HINTS)1.32 F 129.029(FONT WM_SIZE_HINTS)72 205.4 R(INTEGER)72
218.4 Q(PIXMAP)72 231.4 Q(The b)72 260.8 Q
(uilt-in font property names are:)-.22 E(MIN_SP)72 286.3 Q -.44(AC)
-1.012 G 100.836(ES).44 G(TRIKEOUT_DESCENT)-100.836 E(NORM_SP)72 299.3 Q
-.44(AC)-1.012 G 89.22(ES).44 G(TRIKEOUT_ASCENT)-89.22 E(MAX_SP)72 312.3
Q -.44(AC)-1.012 G 96.557(EI).44 G -1.023(TA)-96.557 G(LIC_ANGLE)1.023 E
(END_SP)72 325.3 Q -.44(AC)-1.012 G 99.615(EX).44 G(_HEIGHT)-99.615 E
72.786(SUPERSCRIPT_X Q)72 338.3 R -.44(UA)-.11 G(D_WIDTH).44 E 72.786
(SUPERSCRIPT_Y WEIGHT)72 351.3 R 85.623(SUBSCRIPT_X POINT_SIZE)72 364.3
R 85.623(SUBSCRIPT_Y RESOLUTION)72 377.3 R 39.214
(UNDERLINE_POSITION COPYRIGHT)72 390.3 R 28.819(UNDERLINE_THICKNESS NO)
72 403.3 R(TICE)-.44 E(FONT_N)72 416.3 Q 91.53(AME F)-.385 F(AMIL)-.814
E(Y_N)-1.1 E(AME)-.385 E(FULL_N)72 429.3 Q 92.751(AME CAP_HEIGHT)-.385 F
-.165(Fo)72 458.7 S 2.75(rf).165 G
(urther information about font properties, see section 8.5.)-2.75 E 1.76
-.88(To r)72 488.6 T(eturn an atom for a gi).88 E -.165(ve)-.275 G 2.75
(nn).165 G(ame, use)-2.75 E F0(XInter)3.666 E(nAtom)-.165 E F1(.).916 E
.44 LW 36 506.35 36 517.35 DL 36 504.35 36 515.35 DL 41.5 502.6 36 502.6
DL 43.5 502.6 38 502.6 DL 49 502.6 43.5 502.6 DL(Atom XInternAtom)72
518.5 Q(\().916 E/F2 11/Times-Italic@0 SF(display).916 E F1(,)A F2
(atom_name)2.75 E F1(,).916 E F2(only_if_e)2.75 E(xists)-.22 E F1(\))
.916 E(Display *)88.5 531.5 Q F2(display)A F1(;).916 E(char *)88.5 544.5
Q F2(atom_name)A F1(;).916 E(Bool)88.5 557.5 Q F2(only_if_e)2.75 E
(xists)-.22 E F1(;).916 E F2(display)72 578.3 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2(atom_name)72 595.2 Q F1
(Speci\214es the name associated with the atom you w)20.674 E
(ant returned.)-.11 E F2(only_if_e)72 612.1 Q(xists)-.22 E F1
(Speci\214es a Boolean v)11.72 E
(alue that indicates whether the atom must be created.)-.275 E 36 607.75
36 618.75 DL 36 605.75 36 616.75 DL 41.5 617 36 617 DL 43.5 617 38 617
DL 49 617 43.5 617 DL(The)72 642 Q F0(XInter)3.666 E(nAtom)-.165 E F1(f\
unction returns the atom identi\214er associated with the speci\214ed a\
tom_name)3.666 E 2.75(string. If)72 655 R(only_if_e)2.75 E(xists is)
-.165 E F0 -.275(Fa)3.666 G(lse).275 E F1 2.75(,t).916 G
(he atom is created if it does not e)-2.75 E 2.75(xist. Therefore,)-.165
F F0(XInter)3.666 E(-)-.407 E(nAtom)72 668 Q F1(can return)3.666 E F0
(None)3.666 E F1 5.5(.I).916 G 2.75(ft)-5.5 G
(he atom name is not in the Host Portable Character Encoding, the)-2.75
E(result is implementation-dependent.)72 681 Q(Uppercase and lo)5.5 E
(wercase matter; the strings `)-.275 E(`thing')-.814 E(',)-.814 E -.814
(``)72 694 S(Thing').814 E(', and `)-.814 E(`thinG')-.814 E 2.75('a)
-.814 G(ll designate dif)-2.75 E(ferent atoms.)-.275 E
(The atom will remain de\214ned e)5.5 E -.165(ve)-.275 G 2.75(na).165 G
(fter the)-2.75 E(client')72 707 Q 2.75(sc)-.605 G(onnection closes.)
-2.75 E
(It will become unde\214ned only when the last connection to the X)5.5 E
(serv)72 720 Q(er closes.)-.165 E F0(64)282.5 769 Q 0 Cg EP
%%Page: 65 70
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E(XInter)72.916 85 Q(nAtom)-.165 E/F1 11
/Times-Roman@0 SF(can generate)3.666 E F0(BadAlloc)3.666 E F1(and)3.666
E F0(BadV)3.666 E(alue)-1.012 E F1(errors.)3.666 E 1.76 -.88(To r)72
114.9 T(eturn atoms for an array of names, use).88 E F0(XInter)3.666 E
(nAtoms)-.165 E F1(.).916 E .44 LW 36 132.65 36 143.65 DL 36 130.65 36
141.65 DL 41.5 128.9 36 128.9 DL 43.5 128.9 38 128.9 DL 49 128.9 43.5
128.9 DL(Status XInternAtoms)72 144.8 Q(\().916 E/F2 11/Times-Italic@0
SF(display).916 E F1(,)A F2(names)2.75 E F1(,).916 E F2(count)2.75 E F1
(,).916 E F2(only_if_e)2.75 E(xists)-.22 E F1(,)A F2(atoms_r)2.75 E
(eturn)-.407 E F1(\)).916 E(Display *)88.5 157.8 Q F2(display)A F1(;)
.916 E(char **)88.5 170.8 Q F2(names)A F1(;).916 E(int)88.5 183.8 Q F2
(count)2.75 E F1(;).916 E(Bool)88.5 196.8 Q F2(only_if_e)2.75 E(xists)
-.22 E F1(;).916 E(Atom *)88.5 209.8 Q F2(atoms_r)A(eturn)-.407 E F1(;)
.916 E F2(display)72 230.6 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2(names)72 247.5 Q F1(Speci\214es the array of atom names.)43.895 E F2
(count)72 264.4 Q F1(Speci\214es the number of atom names in the array)
47.558 E(.)-.715 E F2(only_if_e)72 281.3 Q(xists)-.22 E F1
(Speci\214es a Boolean v)11.72 E
(alue that indicates whether the atom must be created.)-.275 E F2
(atoms_r)72 298.2 Q(eturn)-.407 E F1(Returns the atoms.)13.128 E 36
293.85 36 304.85 DL 36 291.85 36 302.85 DL 41.5 303.1 36 303.1 DL 43.5
303.1 38 303.1 DL 49 303.1 43.5 303.1 DL(The)72 328.1 Q F0(XInter)3.666
E(nAtoms)-.165 E F1(function returns the atom identi\214ers associated \
with the speci\214ed names.)3.666 E
(The atoms are stored in the atoms_return array supplied by the caller)
72 341.1 Q 5.5(.C)-.605 G(alling this function is)-5.5 E(equi)72 354.1 Q
-.275(va)-.275 G(lent to calling).275 E F0(XInter)3.666 E(nAtom)-.165 E
F1(for each of the names in turn with the speci\214ed v)3.666 E(alue of)
-.275 E(only_if_e)72 367.1 Q(xists, b)-.165 E
(ut this function minimizes the number of round-trip protocol e)-.22 E
(xchanges between)-.165 E(the client and the X serv)72 380.1 Q(er)-.165
E(.)-.605 E(This function returns a nonzero status if atoms are returne\
d for all of the names; otherwise, it)72 397 Q(returns zero.)72 410 Q F0
(XInter)72.916 426.9 Q(nAtoms)-.165 E F1(can generate)3.666 E F0
(BadAlloc)3.666 E F1(and)3.666 E F0(BadV)3.666 E(alue)-1.012 E F1
(errors.)3.666 E 1.76 -.88(To r)72 456.8 T(eturn a name for a gi).88 E
-.165(ve)-.275 G 2.75(na).165 G(tom identi\214er)-2.75 E 2.75(,u)-.44 G
(se)-2.75 E F0(XGetAtomName)3.666 E F1(.).916 E 36 474.55 36 485.55 DL
36 472.55 36 483.55 DL 41.5 470.8 36 470.8 DL 43.5 470.8 38 470.8 DL 49
470.8 43.5 470.8 DL(char *XGetAtomName)72 486.7 Q(\().916 E F2(display)
.916 E F1(,)A F2(atom)2.75 E F1(\)).916 E(Display *)88.5 499.7 Q F2
(display)A F1(;).916 E(Atom)88.5 512.7 Q F2(atom)2.75 E F1(;).916 E F2
(display)72 533.5 Q F1(Speci\214es the connection to the X serv)40.221 E
(er)-.165 E(.)-.605 E F2(atom)72 550.4 Q F1
(Speci\214es the atom for the property name you w)50 E(ant returned.)
-.11 E 36 546.05 36 557.05 DL 36 544.05 36 555.05 DL 41.5 555.3 36 555.3
DL 43.5 555.3 38 555.3 DL 49 555.3 43.5 555.3 DL(The)72 580.3 Q F0
(XGetAtomName)3.666 E F1
(function returns the name associated with the speci\214ed atom.)3.666 E
(If the data)5.5 E(returned by the serv)72 593.3 Q(er is in the Latin P\
ortable Character Encoding, then the returned string is in)-.165 E
(the Host Portable Character Encoding.)72 606.3 Q
(Otherwise, the result is implementation-dependent.)5.5 E -.88(To)5.5 G
(free the resulting string, call)72 619.3 Q F0(XFr)3.666 E(ee)-.198 E F1
(.).916 E F0(XGetAtomName)72.916 636.2 Q F1(can generate a)3.666 E F0
(BadAtom)3.666 E F1(error)3.666 E(.)-.605 E 1.76 -.88(To r)72 666.1 T
(eturn the names for an array of atom identi\214ers, use).88 E F0
(XGetAtomNames)3.666 E F1(.).916 E F0(65)282.5 769 Q 0 Cg EP
%%Page: 66 71
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E .44 LW 36 76.75 36 87.75 DL 36 74.75
36 85.75 DL 41.5 73 36 73 DL 43.5 73 38 73 DL 49 73 43.5 73 DL/F1 11
/Times-Roman@0 SF(Status XGetAtomNames)72 88.9 Q(\().916 E/F2 11
/Times-Italic@0 SF(display).916 E F1(,)A F2(atoms)2.75 E F1(,)A F2
(count)2.75 E F1(,).916 E F2(names_r)2.75 E(eturn)-.407 E F1(\)).916 E
(Display *)88.5 101.9 Q F2(display)A F1(;).916 E(Atom *)88.5 114.9 Q F2
(atoms)A F1(;).916 E(int)88.5 127.9 Q F2(count)2.75 E F1(;).916 E
(char **)88.5 140.9 Q F2(names_r)A(eturn)-.407 E F1(;).916 E F2(display)
72 161.7 Q F1(Speci\214es the connection to the X serv)40.221 E(er)-.165
E(.)-.605 E F2(atoms)72 178.6 Q F1(Speci\214es the array of atoms.)
45.721 E F2(count)72 195.5 Q F1
(Speci\214es the number of atoms in the array)47.558 E(.)-.715 E F2
(names_r)72 212.4 Q(eturn)-.407 E F1(Returns the atom names.)11.302 E 36
208.05 36 219.05 DL 36 206.05 36 217.05 DL 41.5 217.3 36 217.3 DL 43.5
217.3 38 217.3 DL 49 217.3 43.5 217.3 DL(The)72 242.3 Q F0
(XGetAtomNames)3.666 E F1
(function returns the names associated with the speci\214ed atoms.)3.666
E(The)5.5 E
(names are stored in the names_return array supplied by the caller)72
255.3 Q 5.5(.C)-.605 G(alling this function is equi)-5.5 E(v-)-.275 E
(alent to calling)72 268.3 Q F0(XGetAtomName)3.666 E F1
(for each of the atoms in turn, b)3.666 E
(ut this function minimizes the)-.22 E(number of round-trip protocol e)
72 281.3 Q(xchanges between the client and the X serv)-.165 E(er)-.165 E
(.)-.605 E(This function returns a nonzero status if names are returned\
 for all of the atoms; otherwise, it)72 298.2 Q(returns zero.)72 311.2 Q
F0(XGetAtomNames)72.916 328.1 Q F1(can generate a)3.666 E F0(BadAtom)
3.666 E F1(error)3.666 E(.)-.605 E F0 2.75(4.4. Obtaining)72 354.1 R
(and Changing W)2.75 E(indo)-.198 E 2.75(wP)-.11 G -.198(ro)-2.75 G
(perties).198 E F1 -1.21(Yo)72 371 S 2.75(uc)1.21 G
(an attach a property list to e)-2.75 E -.165(ve)-.275 G(ry windo).165 E
4.18 -.715(w. E)-.275 H(ach property has a name, a type, and a v).715 E
(alue)-.275 E(\(see section 4.3\).)72 384 Q(The v)5.5 E(alue is an arra\
y of 8-bit, 16-bit, or 32-bit quantities, whose interpretation)-.275 E
(is left to the clients.)72 397 Q(The type)5.5 E F0(char)3.666 E F1
(is used to represent 8-bit quantities, the type)3.666 E F0(short)3.666
E F1(is used to)3.666 E(represent 16-bit quantities, and the type)72 410
Q F0(long)3.666 E F1(is used to represent 32-bit quantities.)3.666 E
(Xlib pro)72 426.9 Q(vides functions that you can use to obtain, change\
, update, or interchange windo)-.165 E 2.75(wp)-.275 G(rop-)-2.75 E 2.75
(erties. In)72 439.9 R(addition, Xlib pro)2.75 E
(vides other utility functions for inter)-.165 E
(-client communication \(see chap-)-.22 E(ter 14\).)72 452.9 Q 1.76 -.88
(To o)72 482.8 T(btain the type, format, and v).88 E
(alue of a property of a gi)-.275 E -.165(ve)-.275 G 2.75(nw).165 G
(indo)-2.75 E 1.43 -.715(w, u)-.275 H(se).715 E F0(XGetW)3.666 E(indo)
-.198 E(wPr)-.11 E(op-)-.198 E(erty)72 495.8 Q F1(.).916 E F0(66)282.5
769 Q 0 Cg EP
%%Page: 67 72
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E .44 LW 36 76.75 36 87.75 DL 36 74.75
36 85.75 DL 41.5 73 36 73 DL 43.5 73 38 73 DL 49 73 43.5 73 DL/F1 11
/Times-Roman@0 SF(int XGetW)72 88.9 Q(indo)-.44 E -1.834(wProperty \()
-.275 F/F2 11/Times-Italic@0 SF(display).916 E F1(,)A F2(w)2.75 E F1(,)
.916 E F2(pr)2.75 E(operty)-.495 E F1(,).916 E F2(long_of)2.75 E(fset)
-.198 E F1(,).916 E F2(long_length)2.75 E F1(,).916 E F2(delete)2.75 E
F1(,).916 E F2 -.407(re)2.75 G(q_type).407 E F1(,).916 E F2
(actual_type_r)138 101.9 Q(eturn)-.407 E F1(,).916 E F2(actual_format_r)
2.75 E(eturn)-.407 E F1(,).916 E F2(nitems_r)2.75 E(eturn)-.407 E F1(,)
.916 E F2(bytes_after_r)2.75 E(eturn)-.407 E F1(,).916 E F2(pr)138 114.9
Q(op_r)-.495 E(eturn)-.407 E F1(\)).916 E(Display *)88.5 127.9 Q F2
(display)A F1(;).916 E -.44(Wi)88.5 140.9 S(ndo).44 E(w)-.275 E F2(w)
2.75 E F1(;).916 E(Atom)88.5 153.9 Q F2(pr)2.75 E(operty)-.495 E F1(;)
.916 E(long)88.5 166.9 Q F2(long_of)2.75 E(fset)-.198 E F1(,).916 E F2
(long_length)2.75 E F1(;).916 E(Bool)88.5 179.9 Q F2(delete)2.75 E F1(;)
.916 E(Atom)88.5 192.9 Q F2 -.407(re)2.75 G(q_type).407 E F1(;).916 E
(Atom *)88.5 205.9 Q F2(actual_type_r)A(eturn)-.407 E F1(;).916 E(int *)
88.5 218.9 Q F2(actual_format_r)A(eturn)-.407 E F1(;).916 E
(unsigned long *)88.5 231.9 Q F2(nitems_r)A(eturn)-.407 E F1(;).916 E
(unsigned long *)88.5 244.9 Q F2(bytes_after_r)A(eturn)-.407 E F1(;).916
E(unsigned char **)88.5 257.9 Q F2(pr)A(op_r)-.495 E(eturn)-.407 E F1(;)
.916 E F2(display)72 278.7 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2(w)72 295.6 Q F1(Speci\214es the windo)64.663 E 2.75(ww)-.275 G
(hose property you w)-2.75 E(ant to obtain.)-.11 E F2(pr)72 312.5 Q
(operty)-.495 E F1(Speci\214es the property name.)34.611 E F2(long_of)72
329.4 Q(fset)-.198 E F1(Speci\214es the of)23.303 E(fset in the speci\
\214ed property \(in 32-bit quantities\) where the data)-.275 E
(is to be retrie)144 342.4 Q -.165(ve)-.275 G(d.).165 E F2(long_length)
72 359.3 Q F1
(Speci\214es the length in 32-bit multiples of the data to be retrie)
19.442 E -.165(ve)-.275 G(d.).165 E F2(delete)72 376.2 Q F1
(Speci\214es a Boolean v)45.732 E
(alue that determines whether the property is deleted.)-.275 E F2 -.407
(re)72 393.1 S(q_type).407 E F1
(Speci\214es the atom identi\214er associated with the property type or)
33.918 E F0(AnyPr)3.666 E(operty-)-.198 E -.814(Ty)144 406.1 S(pe).814 E
F1(.).916 E F2(actual_type_r)72 423 Q(eturn)-.407 E F1
(Returns the atom identi\214er)144 436 Q
(that de\214nes the actual type of the property)5.5 E(.)-.715 E F2
(actual_format_r)72 452.9 Q(eturn)-.407 E F1
(Returns the actual format of the property)144 465.9 Q(.)-.715 E F2
(nitems_r)72 482.8 Q(eturn)-.407 E F1(Returns the actual number of 8-bi\
t, 16-bit, or 32-bit items stored in the)10.686 E(prop_return data.)144
495.8 Q F2(bytes_after_r)72 512.7 Q(eturn)-.407 E F1(Returns the number\
 of bytes remaining to be read in the property if a partial read)144
525.7 Q -.11(wa)144 538.7 S 2.75(sp).11 G(erformed.)-2.75 E F2(pr)72
555.6 Q(op_r)-.495 E(eturn)-.407 E F1
(Returns the data in the speci\214ed format.)19.123 E 36 551.25 36
562.25 DL 36 549.25 36 560.25 DL 41.5 560.5 36 560.5 DL 43.5 560.5 38
560.5 DL 49 560.5 43.5 560.5 DL(The)72 585.5 Q F0(XGetW)3.666 E(indo)
-.198 E(wPr)-.11 E(operty)-.198 E F1
(function returns the actual type of the property; the actual format of)
3.666 E(the property; the number of 8-bit, 16-bit, or 32-bit items tran\
sferred; the number of bytes remain-)72 598.5 Q(ing to be read in the p\
roperty; and a pointer to the data actually returned.)72 611.5 Q F0
(XGetW)6.416 E(indo)-.198 E(wPr)-.11 E(op-)-.198 E(erty)72 624.5 Q F1
(sets the return ar)3.666 E(guments as follo)-.198 E(ws:)-.275 E 23.65
<8349>72 641.4 S 2.75(ft)-23.65 G(he speci\214ed property does not e)
-2.75 E(xist for the speci\214ed windo)-.165 E -.715(w,)-.275 G F0
(XGetW)4.381 E(indo)-.198 E(wPr)-.11 E(operty)-.198 E F1(returns)99.5
654.4 Q F0(None)3.666 E F1(to actual_type_return and the v)3.666 E
(alue zero to actual_format_return and)-.275 E 2.75
(bytes_after_return. The)99.5 667.4 R(nitems_return ar)2.75 E
(gument is empty)-.198 E 5.5(.I)-.715 G 2.75(nt)-5.5 G
(his case, the delete ar)-2.75 E(gument)-.198 E(is ignored.)99.5 680.4 Q
23.65<8349>72 697.3 S 2.75(ft)-23.65 G(he speci\214ed property e)-2.75 E
(xists b)-.165 E(ut its type does not match the speci\214ed type,)-.22 E
F0(XGetW)3.666 E(in-)-.198 E(do)99.5 710.3 Q(wPr)-.11 E(operty)-.198 E
F1(returns the actual property type to actual_type_return, the actual p\
roperty)3.666 E(format \(ne)99.5 723.3 Q -.165(ve)-.275 G 2.75(rz).165 G
(ero\) to actual_format_return, and the property length in bytes \(e)
-2.75 E -.165(ve)-.275 G 2.75(ni).165 G 2.75(ft)-2.75 G(he)-2.75 E F0
(67)282.5 769 Q 0 Cg EP
%%Page: 68 73
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E/F1 11/Times-Roman@0 SF
(actual_format_return is 16 or 32\) to bytes_after_return.)99.5 85 Q
(It also ignores the delete ar)5.5 E(gument.)-.198 E
(The nitems_return ar)99.5 98 Q(gument is empty)-.198 E(.)-.715 E 23.65
<8349>72 114.9 S 2.75(ft)-23.65 G(he speci\214ed property e)-2.75 E
(xists and either you assign)-.165 E F0(AnyPr)3.666 E(opertyT)-.198 E
(ype)-.814 E F1(to the req_type)3.666 E(ar)99.5 127.9 Q
(gument or the speci\214ed type matches the actual property type,)-.198
E F0(XGetW)3.666 E(indo)-.198 E(wPr)-.11 E(operty)-.198 E F1(returns th\
e actual property type to actual_type_return and the actual property fo\
rmat \(ne)99.5 140.9 Q -.165(ve)-.275 G(r).165 E
(zero\) to actual_format_return.)99.5 153.9 Q(It also returns a v)5.5 E
(alue to bytes_after_return and)-.275 E
(nitems_return, by de\214ning the follo)99.5 166.9 Q(wing v)-.275 E
(alues:)-.275 E 2.75(N=a)127 183.8 S
(ctual length of the stored property in bytes)-2.75 E(\(e)140.75 196.8 Q
-.165(ve)-.275 G 2.75(ni).165 G 2.75(ft)-2.75 G(he format is 16 or 32\))
-2.75 E 2.75(I=4*l)127 209.8 S(ong_of)-2.75 E(fset)-.275 E 2.75(T=N-I)
127 222.8 S 2.75(L=M)127 235.8 S(INIMUM\(T)-2.75 E 2.75(,4*l)-.814 G
(ong_length\))-2.75 E 2.75(A=N-\()127 248.8 S 2.75(I+L)-2.75 G(\))-2.75
E(The returned v)99.5 265.7 Q(alue starts at byte inde)-.275 E 2.75(xIi)
-.165 G 2.75(nt)-2.75 G(he property \(inde)-2.75 E
(xing from zero\), and its length)-.165 E(in bytes is L.)99.5 278.7 Q
(If the v)5.5 E(alue for long_of)-.275 E(fset causes L to be ne)-.275 E
-.055(ga)-.165 G(ti).055 E -.165(ve)-.275 G 2.75(,a).165 G F0(BadV).916
E(alue)-1.012 E F1(error results.)3.666 E(The v)99.5 291.7 Q
(alue of bytes_after_return is A, gi)-.275 E
(ving the number of trailing unread bytes in the)-.275 E
(stored property)99.5 304.7 Q(.)-.715 E
(If the returned format is 8, the returned data is represented as a)72
321.6 Q F0(char)3.666 E F1(array)3.666 E 5.5(.I)-.715 G 2.75(ft)-5.5 G
(he returned format)-2.75 E
(is 16, the returned data is represented as a)72 334.6 Q F0(short)3.666
E F1(array and should be cast to that type to obtain the)3.666 E 2.75
(elements. If)72 347.6 R
(the returned format is 32, the returned data is represented as a)2.75 E
F0(long)3.666 E F1(array and should)3.666 E
(be cast to that type to obtain the elements.)72 360.6 Q F0(XGetW)72.916
377.5 Q(indo)-.198 E(wPr)-.11 E(operty)-.198 E F1(al)3.666 E -.11(wa)
-.11 G(ys allocates one e).11 E(xtra byte in prop_return \(e)-.165 E
-.165(ve)-.275 G 2.75(ni).165 G 2.75(ft)-2.75 G(he property is)-2.75 E(\
zero length\) and sets it to zero so that simple properties consisting \
of characters do not ha)72 390.5 Q .33 -.165(ve t)-.22 H 2.75(ob).165 G
(e)-2.75 E(copied into yet another string before use.)72 403.5 Q
(If delete is)72 420.4 Q F0 -.814(Tr)3.666 G(ue).814 E F1
(and bytes_after_return is zero,)3.666 E F0(XGetW)3.666 E(indo)-.198 E
(wPr)-.11 E(operty)-.198 E F1(deletes the property)3.666 E
(from the windo)72 433.4 Q 2.75(wa)-.275 G(nd generates a)-2.75 E F0(Pr)
3.666 E(opertyNotify)-.198 E F1 -2.365 -.275(ev e)3.666 H
(nt on the windo).275 E -.715(w.)-.275 G(The function returns)72 450.3 Q
F0(Success)3.666 E F1(if it e)3.666 E -.165(xe)-.165 G
(cutes successfully).165 E 5.5(.T)-.715 G 2.75(of)-6.38 G
(ree the resulting data, use)-2.75 E F0(XFr)3.666 E(ee)-.198 E F1(.).916
E F0(XGetW)72.916 467.2 Q(indo)-.198 E(wPr)-.11 E(operty)-.198 E F1
(can generate)3.666 E F0(BadAtom)3.666 E F1(,).916 E F0(BadV)3.666 E
(alue)-1.012 E F1 2.75(,a).916 G(nd)-2.75 E F0(BadW)3.666 E(indo)-.198 E
(w)-.11 E F1(errors.)3.666 E 1.76 -.88(To o)72 497.1 T(btain a gi).88 E
-.165(ve)-.275 G 2.75(nw).165 G(indo)-2.75 E(w')-.275 E 2.75(sp)-.605 G
(roperty list, use)-2.75 E F0(XListPr)3.666 E(operties)-.198 E F1(.).916
E .44 LW 36 514.85 36 525.85 DL 36 512.85 36 523.85 DL 41.5 511.1 36
511.1 DL 43.5 511.1 38 511.1 DL 49 511.1 43.5 511.1 DL
(Atom *XListProperties)72 527 Q(\().916 E/F2 11/Times-Italic@0 SF
(display).916 E F1(,)A F2(w)2.75 E F1(,).916 E F2(num_pr)2.75 E(op_r)
-.495 E(eturn)-.407 E F1(\)).916 E(Display *)88.5 540 Q F2(display)A F1
(;).916 E -.44(Wi)88.5 553 S(ndo).44 E(w)-.275 E F2(w)2.75 E F1(;).916 E
(int *)88.5 566 Q F2(num_pr)A(op_r)-.495 E(eturn)-.407 E F1(;).916 E F2
(display)72 586.8 Q F1(Speci\214es the connection to the X serv)40.221 E
(er)-.165 E(.)-.605 E F2(w)72 603.7 Q F1(Speci\214es the windo)64.663 E
2.75(ww)-.275 G(hose property list you w)-2.75 E(ant to obtain.)-.11 E
F2(num_pr)72 620.6 Q(op_r)-.495 E(eturn)-.407 E F1
(Returns the length of the properties array)144 633.6 Q(.)-.715 E 36
629.25 36 640.25 DL 36 627.25 36 638.25 DL 41.5 638.5 36 638.5 DL 43.5
638.5 38 638.5 DL 49 638.5 43.5 638.5 DL(The)72 663.5 Q F0(XListPr)3.666
E(operties)-.198 E F1(function returns a pointer to an array of atom pr\
operties that are de\214ned for)3.666 E(the speci\214ed windo)72 676.5 Q
2.75(wo)-.275 G 2.75(rr)-2.75 G
(eturns NULL if no properties were found.)-2.75 E 1.76 -.88(To f)5.5 H
(ree the memory allocated).88 E(by this function, use)72 689.5 Q F0(XFr)
3.666 E(ee)-.198 E F1(.).916 E F0(XListPr)72.916 706.4 Q(operties)-.198
E F1(can generate a)3.666 E F0(BadW)3.666 E(indo)-.198 E(w)-.11 E F1
(error)3.666 E(.)-.605 E F0(68)282.5 769 Q 0 Cg EP
%%Page: 69 74
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E/F1 11/Times-Roman@0 SF 1.76 -.88(To c)
72 85 T(hange a property of a gi).88 E -.165(ve)-.275 G 2.75(nw).165 G
(indo)-2.75 E 1.43 -.715(w, u)-.275 H(se).715 E F0(XChangePr)3.666 E
(operty)-.198 E F1(.).916 E .44 LW 36 102.75 36 113.75 DL 36 100.75 36
111.75 DL 41.5 99 36 99 DL 43.5 99 38 99 DL 49 99 43.5 99 DL -1.834
(XChangeProperty \()72 114.9 R/F2 11/Times-Italic@0 SF(display).916 E F1
(,)A F2(w)2.75 E F1(,).916 E F2(pr)2.75 E(operty)-.495 E F1(,).916 E F2
(type)2.75 E F1(,).916 E F2(format)2.75 E F1(,).916 E F2(mode)2.75 E F1
(,).916 E F2(data)2.75 E F1(,).916 E F2(nelements)2.75 E F1(\)).916 E
(Display *)88.5 127.9 Q F2(display)A F1(;).916 E -.44(Wi)88.5 140.9 S
(ndo).44 E(w)-.275 E F2(w)2.75 E F1(;).916 E(Atom)88.5 153.9 Q F2(pr)
2.75 E(operty)-.495 E F1(,).916 E F2(type)2.75 E F1(;).916 E(int)88.5
166.9 Q F2(format)2.75 E F1(;).916 E(int)88.5 179.9 Q F2(mode)2.75 E F1
(;).916 E(unsigned char *)88.5 192.9 Q F2(data)A F1(;).916 E(int)88.5
205.9 Q F2(nelements)2.75 E F1(;).916 E F2(display)72 226.7 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2(w)72 243.6 Q F1(Speci\214es the windo)64.663 E 2.75(ww)-.275 G
(hose property you w)-2.75 E(ant to change.)-.11 E F2(pr)72 260.5 Q
(operty)-.495 E F1(Speci\214es the property name.)34.611 E F2(type)72
277.4 Q F1(Speci\214es the type of the property)53.674 E 5.5(.T)-.715 G
(he X serv)-5.5 E(er does not interpret the type b)-.165 E(ut)-.22 E
(simply passes it back to an application that later calls)144 290.4 Q F0
(XGetW)3.666 E(indo)-.198 E(wPr)-.11 E(operty)-.198 E F1(.).916 E F2
(format)72 307.3 Q F1(Speci\214es whether the data should be vie)42.663
E(wed as a list of 8-bit, 16-bit, or 32-bit)-.275 E 2.75
(quantities. Possible)144 320.3 R -.275(va)2.75 G
(lues are 8, 16, and 32.).275 E(This information allo)5.5 E(ws the X)
-.275 E(serv)144 333.3 Q(er to correctly perform byte-sw)-.165 E
(ap operations as necessary)-.11 E 5.5(.I)-.715 G 2.75(ft)-5.5 G
(he format is)-2.75 E(16-bit or 32-bit, you must e)144 346.3 Q
(xplicitly cast your data pointer to an \(unsigned char *\))-.165 E
(in the call to)144 359.3 Q F0(XChangePr)3.666 E(operty)-.198 E F1(.)
.916 E F2(mode)72 376.2 Q F1(Speci\214es the mode of the operation.)
48.174 E -1.21(Yo)5.5 G 2.75(uc)1.21 G(an pass)-2.75 E F0(Pr)3.666 E
(opModeReplace)-.198 E F1(,).916 E F0(Pr)3.666 E(op-)-.198 E(ModePr)144
389.2 Q(epend)-.198 E F1 2.75(,o).916 G(r)-2.75 E F0(Pr)3.666 E(opModeA)
-.198 E(ppend)-.275 E F1(.).916 E F2(data)72 406.1 Q F1
(Speci\214es the property data.)52.442 E F2(nelements)72 423 Q F1
(Speci\214es the number of elements of the speci\214ed data format.)
28.011 E 36 418.65 36 429.65 DL 36 416.65 36 427.65 DL 41.5 427.9 36
427.9 DL 43.5 427.9 38 427.9 DL 49 427.9 43.5 427.9 DL(The)72 452.9 Q F0
(XChangePr)3.666 E(operty)-.198 E F1
(function alters the property for the speci\214ed windo)3.666 E 2.75(wa)
-.275 G(nd causes the X)-2.75 E(serv)72 465.9 Q(er to generate a)-.165 E
F0(Pr)3.666 E(opertyNotify)-.198 E F1 -2.365 -.275(ev e)3.666 H
(nt on that windo).275 E -.715(w.)-.275 G F0(XChangePr)7.131 E(operty)
-.198 E F1(performs the fol-)3.666 E(lo)72 478.9 Q(wing:)-.275 E 23.65
<8349>72 495.8 S 2.75(fm)-23.65 G(ode is)-2.75 E F0(Pr)3.666 E
(opModeReplace)-.198 E F1(,).916 E F0(XChangePr)3.666 E(operty)-.198 E
F1(discards the pre)3.666 E(vious property v)-.275 E(alue)-.275 E
(and stores the ne)99.5 508.8 Q 2.75(wd)-.275 G(ata.)-2.75 E 23.65<8349>
72 525.7 S 2.75(fm)-23.65 G(ode is)-2.75 E F0(Pr)3.666 E(opModePr)-.198
E(epend)-.198 E F1(or)3.666 E F0(Pr)3.666 E(opModeA)-.198 E(ppend)-.275
E F1(,).916 E F0(XChangePr)3.666 E(operty)-.198 E F1(inserts the)3.666 E
(speci\214ed data before the be)99.5 538.7 Q(ginning of the e)-.165 E
(xisting data or onto the end of the e)-.165 E(xisting data,)-.165 E
(respecti)99.5 551.7 Q -.165(ve)-.275 G(ly).165 E 5.5(.T)-.715 G
(he type and format must match the e)-5.5 E(xisting property v)-.165 E
(alue, or a)-.275 E F0(BadMatch)3.666 E F1(error results.)99.5 564.7 Q(\
If the property is unde\214ned, it is treated as de\214ned with the cor\
rect type and)5.5 E(format with zero-length data.)99.5 577.7 Q
(If the speci\214ed format is 8, the property data must be a)72 594.6 Q
F0(char)3.666 E F1(array)3.666 E 5.5(.I)-.715 G 2.75(ft)-5.5 G
(he speci\214ed format is 16,)-2.75 E(the property data must be a)72
607.6 Q F0(short)3.666 E F1(array)3.666 E 5.5(.I)-.715 G 2.75(ft)-5.5 G
(he speci\214ed format is 32, the property data must be a)-2.75 E F0
(long)72.916 620.6 Q F1(array)3.666 E(.)-.715 E
(The lifetime of a property is not tied to the storing client.)72 637.5
Q(Properties remain until e)5.5 E(xplicitly)-.165 E
(deleted, until the windo)72 650.5 Q 2.75(wi)-.275 G 2.75(sd)-2.75 G
(estro)-2.75 E(yed, or until the serv)-.11 E(er resets.)-.165 E -.165
(Fo)5.5 G 2.75(rad).165 G(iscussion of what hap-)-2.75 E
(pens when the connection to the X serv)72 663.5 Q
(er is closed, see section 2.6.)-.165 E(The maximum size of a prop-)5.5
E(erty is serv)72 676.5 Q(er dependent and can v)-.165 E
(ary dynamically depending on the amount of memory the serv)-.275 E(er)
-.165 E(has a)72 689.5 Q -.275(va)-.22 G 2.75(ilable. \(If).275 F
(there is insuf)2.75 E(\214cient space, a)-.275 E F0(BadAlloc)3.666 E F1
(error results.\))3.666 E F0(XChangePr)72.916 706.4 Q(operty)-.198 E F1
(can generate)3.666 E F0(BadAlloc)3.666 E F1(,).916 E F0(BadAtom)3.666 E
F1(,).916 E F0(BadMatch)3.666 E F1(,).916 E F0(BadV)3.666 E(alue)-1.012
E F1 2.75(,a).916 G(nd)-2.75 E F0(BadW)3.666 E(in-)-.198 E(do)72 719.4 Q
(w)-.11 E F1(errors.)3.666 E F0(69)282.5 769 Q 0 Cg EP
%%Page: 70 75
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E/F1 11/Times-Roman@0 SF 1.76 -.88(To r)
72 85 T(otate a windo).88 E(w')-.275 E 2.75(sp)-.605 G
(roperty list, use)-2.75 E F0(XRotateW)3.666 E(indo)-.198 E(wPr)-.11 E
(operties)-.198 E F1(.).916 E .44 LW 36 106.65 36 117.65 DL 36 104.65 36
115.65 DL 41.5 102.9 36 102.9 DL 43.5 102.9 38 102.9 DL 49 102.9 43.5
102.9 DL(XRotateW)72 118.8 Q(indo)-.44 E -1.834(wProperties \()-.275 F
/F2 11/Times-Italic@0 SF(display).916 E F1(,)A F2(w)2.75 E F1(,)A F2(pr)
2.75 E(operties)-.495 E F1(,)A F2(num_pr)2.75 E(op)-.495 E F1(,)A F2
(npositions)2.75 E F1(\)).916 E(Display *)88.5 131.8 Q F2(display)A F1
(;).916 E -.44(Wi)88.5 144.8 S(ndo).44 E(w)-.275 E F2(w)2.75 E F1(;).916
E(Atom)88.5 157.8 Q F2(pr)2.75 E(operties)-.495 E F1 -1.834([] ;).916 F
(int)88.5 170.8 Q F2(num_pr)2.75 E(op)-.495 E F1(;).916 E(int)88.5 183.8
Q F2(npositions)2.75 E F1(;).916 E F2(display)72 204.6 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2(w)72 221.5 Q F1(Speci\214es the windo)64.663 E -.715(w.)-.275 G F2
(pr)72 238.4 Q(operties)-.495 E F1
(Speci\214es the array of properties that are to be rotated.)27.274 E F2
(num_pr)72 255.3 Q(op)-.495 E F1
(Speci\214es the length of the properties array)27.274 E(.)-.715 E F2
(npositions)72 272.2 Q F1(Speci\214es the rotation amount.)26.768 E 36
267.85 36 278.85 DL 36 265.85 36 276.85 DL 41.5 277.1 36 277.1 DL 43.5
277.1 38 277.1 DL 49 277.1 43.5 277.1 DL(The)72 302.1 Q F0(XRotateW)
3.666 E(indo)-.198 E(wPr)-.11 E(operties)-.198 E F1(function allo)3.666
E(ws you to rotate properties on a windo)-.275 E 2.75(wa)-.275 G(nd)
-2.75 E(causes the X serv)72 315.1 Q(er to generate)-.165 E F0(Pr)3.666
E(opertyNotify)-.198 E F1 -2.365 -.275(ev e)3.666 H 2.75(nts. If).275 F
(the property names in the properties)2.75 E(array are vie)72 328.1 Q(w\
ed as being numbered starting from zero and if there are num_prop prope\
rty names)-.275 E(in the list, then the v)72 341.1 Q
(alue associated with property name I becomes the v)-.275 E
(alue associated with prop-)-.275 E
(erty name \(I + npositions\) mod N for all I from zero to N \255 1.)72
354.1 Q(The ef)5.5 E(fect is to rotate the states by)-.275 E(npositions\
 places around the virtual ring of property names \(right for positi)72
367.1 Q .33 -.165(ve n)-.275 H(positions, left for).165 E(ne)72 380.1 Q
-.055(ga)-.165 G(ti).055 E .33 -.165(ve n)-.275 H 2.75(positions\). If)
.165 F(npositions mod N is nonzero, the X serv)2.75 E(er generates a)
-.165 E F0(Pr)3.666 E(opertyNotify)-.198 E F1 -2.365 -.275(ev e)72 393.1
T(nt for each property in the order that the).275 E 2.75(ya)-.165 G
(re listed in the array)-2.75 E 5.5(.I)-.715 G 2.75(fa)-5.5 G 2.75(na)
-2.75 G(tom occurs more than)-2.75 E(once in the list or no property wi\
th that name is de\214ned for the windo)72 406.1 Q 1.43 -.715(w, a)-.275
H F0(BadMatch)4.381 E F1(error)3.666 E 2.75(results. If)72 419.1 R(a)
2.75 E F0(BadAtom)3.666 E F1(or)3.666 E F0(BadMatch)3.666 E F1
(error results, no properties are changed.)3.666 E F0(XRotateW)72.916
436 Q(indo)-.198 E(wPr)-.11 E(operties)-.198 E F1(can generate)3.666 E
F0(BadAtom)3.666 E F1(,).916 E F0(BadMatch)3.666 E F1 2.75(,a).916 G(nd)
-2.75 E F0(BadW)3.666 E(indo)-.198 E(w)-.11 E F1(errors.)3.666 E 1.76
-.88(To d)72 465.9 T(elete a property on a gi).88 E -.165(ve)-.275 G
2.75(nw).165 G(indo)-2.75 E 1.43 -.715(w, u)-.275 H(se).715 E F0
(XDeletePr)3.666 E(operty)-.198 E F1(.).916 E 36 483.65 36 494.65 DL 36
481.65 36 492.65 DL 41.5 479.9 36 479.9 DL 43.5 479.9 38 479.9 DL 49
479.9 43.5 479.9 DL -1.834(XDeleteProperty \()72 495.8 R F2(display).916
E F1(,)A F2(w)2.75 E F1(,).916 E F2(pr)2.75 E(operty)-.495 E F1(\)).916
E(Display *)88.5 508.8 Q F2(display)A F1(;).916 E -.44(Wi)88.5 521.8 S
(ndo).44 E(w)-.275 E F2(w)2.75 E F1(;).916 E(Atom)88.5 534.8 Q F2(pr)
2.75 E(operty)-.495 E F1(;).916 E F2(display)72 555.6 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2(w)72 572.5 Q F1(Speci\214es the windo)64.663 E 2.75(ww)-.275 G
(hose property you w)-2.75 E(ant to delete.)-.11 E F2(pr)72 589.4 Q
(operty)-.495 E F1(Speci\214es the property name.)34.611 E 36 585.05 36
596.05 DL 36 583.05 36 594.05 DL 41.5 594.3 36 594.3 DL 43.5 594.3 38
594.3 DL 49 594.3 43.5 594.3 DL(The)72 619.3 Q F0(XDeletePr)3.666 E
(operty)-.198 E F1
(function deletes the speci\214ed property only if the property w)3.666
E(as de\214ned on)-.11 E(the speci\214ed windo)72 632.3 Q 2.75(wa)-.275
G(nd causes the X serv)-2.75 E(er to generate a)-.165 E F0(Pr)3.666 E
(opertyNotify)-.198 E F1 -2.365 -.275(ev e)3.666 H(nt on the windo).275
E(w)-.275 E(unless the property does not e)72 645.3 Q(xist.)-.165 E F0
(XDeletePr)72.916 662.2 Q(operty)-.198 E F1(can generate)3.666 E F0
(BadAtom)3.666 E F1(and)3.666 E F0(BadW)3.666 E(indo)-.198 E(w)-.11 E F1
(errors.)3.666 E F0 2.75(4.5. Selections)72 688.2 R F1
(Selections are one method used by applications to e)72 705.1 Q
(xchange data.)-.165 E(By using the property mecha-)5.5 E
(nism, applications can e)72 718.1 Q
(xchange data of arbitrary types and can ne)-.165 E
(gotiate the type of the data.)-.165 E(A)5.5 E(selection can be thought\
 of as an indirect property with a dynamic type.)72 731.1 Q
(That is, rather than)5.5 E F0(70)282.5 769 Q 0 Cg EP
%%Page: 71 76
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E/F1 11/Times-Roman@0 SF(ha)72 85 Q
(ving the property stored in the X serv)-.22 E(er)-.165 E 2.75(,t)-.44 G
(he property is maintained by some client \(the o)-2.75 E(wner\).)-.275
E 2.75(As)72 98 S
(election is global in nature \(considered to belong to the user b)-2.75
E(ut be maintained by clients\))-.22 E(rather than being pri)72 111 Q
-.275(va)-.275 G(te to a particular windo).275 E 2.75(ws)-.275 G
(ubhierarch)-2.75 E 2.75(yo)-.055 G 2.75(rap)-2.75 G
(articular set of clients.)-2.75 E(Xlib pro)72 127.9 Q
(vides functions that you can use to set, get, or request con)-.165 E
-.165(ve)-.44 G(rsion of selections.).165 E(This)5.5 E(allo)72 140.9 Q(\
ws applications to implement the notion of current selection, which req\
uires that noti\214cation)-.275 E(be sent to applications when the)72
153.9 Q 2.75(yn)-.165 G 2.75(ol)-2.75 G(onger o)-2.75 E
(wn the selection.)-.275 E(Applications that support selection)5.5 E(of\
ten highlight the current selection and so must be informed when anothe\
r application has)72 166.9 Q(acquired the selection so that the)72 179.9
Q 2.75(yc)-.165 G(an unhighlight the selection.)-2.75 E(When a client a\
sks for the contents of a selection, it speci\214es a selection tar)72
196.8 Q(get type.)-.198 E(This tar)5.5 E(get)-.198 E(type can be used t\
o control the transmitted representation of the contents.)72 209.8 Q
-.165(Fo)5.5 G 2.75(re).165 G(xample, if the)-2.915 E(selection is `)72
222.8 Q(`the last thing the user click)-.814 E(ed on')-.11 E 2.75('a)
-.814 G(nd that is currently an image, then the tar)-2.75 E(get type)
-.198 E(might specify whether the contents of the image should be sent \
in XY format or Z format.)72 235.8 Q(The tar)72 252.7 Q(get type can al\
so be used to control the class of contents transmitted, for e)-.198 E
(xample, asking)-.165 E(for the `)72 265.7 Q(`looks')-.814 E 2.75('\()
-.814 G(fonts, line spacing, indentation, and so forth\) of a paragraph\
 selection, not the)-2.75 E(te)72 278.7 Q(xt of the paragraph.)-.165 E
(The tar)5.5 E(get type can also be used for other purposes.)-.198 E
(The protocol does not)5.5 E(constrain the semantics.)72 291.7 Q 1.76
-.88(To s)72 321.6 T(et the selection o).88 E(wner)-.275 E 2.75(,u)-.44
G(se)-2.75 E F0(XSetSelectionOwner)3.666 E F1(.).916 E .44 LW 36 339.35
36 350.35 DL 36 337.35 36 348.35 DL 41.5 335.6 36 335.6 DL 43.5 335.6 38
335.6 DL 49 335.6 43.5 335.6 DL -1.834(XSetSelectionOwner \()72 351.5 R
/F2 11/Times-Italic@0 SF(display).916 E F1(,)A F2(selection)2.75 E F1(,)
.916 E F2(owner)2.75 E F1(,).916 E F2(time)2.75 E F1(\)).916 E
(Display *)88.5 364.5 Q F2(display)A F1(;).916 E(Atom)88.5 377.5 Q F2
(selection)2.75 E F1(;).916 E -.44(Wi)88.5 390.5 S(ndo).44 E(w)-.275 E
F2(owner)2.75 E F1(;).916 E -.385(Ti)88.5 403.5 S(me).385 E F2(time)2.75
E F1(;).916 E F2(display)72 424.3 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2(selection)72 441.2 Q F1(Speci\214es the selection atom.)32.895 E F2
(owner)72 458.1 Q F1(Speci\214es the o)44.5 E
(wner of the speci\214ed selection atom.)-.275 E -1.21(Yo)5.5 G 2.75(uc)
1.21 G(an pass a windo)-2.75 E 2.75(wo)-.275 G(r)-2.75 E F0(None)144.916
471.1 Q F1(.).916 E F2(time)72 488 Q F1(Speci\214es the time.)53.058 E
-1.21(Yo)5.5 G 2.75(uc)1.21 G(an pass either a timestamp or)-2.75 E F0
(Curr)3.666 E(entT)-.198 E(ime)-.198 E F1(.).916 E 36 483.65 36 494.65
DL 36 481.65 36 492.65 DL 41.5 492.9 36 492.9 DL 43.5 492.9 38 492.9 DL
49 492.9 43.5 492.9 DL(The)72 517.9 Q F0(XSetSelectionOwner)3.666 E F1
(function changes the o)3.666 E
(wner and last-change time for the speci\214ed)-.275 E
(selection and has no ef)72 530.9 Q(fect if the speci\214ed time is ear\
lier than the current last-change time of the)-.275 E
(speci\214ed selection or is later than the current X serv)72 543.9 Q
(er time.)-.165 E(Otherwise, the last-change time is)5.5 E
(set to the speci\214ed time, with)72 556.9 Q F0(Curr)3.666 E(entT)-.198
E(ime)-.198 E F1(replaced by the current serv)3.666 E(er time.)-.165 E
(If the o)5.5 E(wner)-.275 E(windo)72 569.9 Q 2.75(wi)-.275 G 2.75(ss)
-2.75 G(peci\214ed as)-2.75 E F0(None)3.666 E F1 2.75(,t).916 G
(hen the o)-2.75 E(wner of the selection becomes)-.275 E F0(None)3.666 E
F1(\(that is, no o)3.666 E(wner\).)-.275 E(Otherwise, the o)72 582.9 Q
(wner of the selection becomes the client e)-.275 E -.165(xe)-.165 G
(cuting the request.).165 E(If the ne)72 599.8 Q 2.75(wo)-.275 G
(wner \(whether a client or)-3.025 E F0(None)3.666 E F1 2.75(\)i).916 G
2.75(sn)-2.75 G(ot the same as the current o)-2.75 E
(wner of the selection)-.275 E(and the current o)72 612.8 Q(wner is not)
-.275 E F0(None)3.666 E F1 2.75(,t).916 G(he current o)-2.75 E
(wner is sent a)-.275 E F0(SelectionClear)3.666 E F1 -2.365 -.275(ev e)
3.666 H 2.75(nt. If).275 F(the client)2.75 E(that is the o)72 625.8 Q(w\
ner of a selection is later terminated \(that is, its connection is clo\
sed\) or if the o)-.275 E(wner)-.275 E(windo)72 638.8 Q 2.75(wi)-.275 G
2.75(th)-2.75 G(as speci\214ed in the request is later destro)-2.75 E
(yed, the o)-.11 E(wner of the selection automatically)-.275 E(re)72
651.8 Q -.165(ve)-.275 G(rts to).165 E F0(None)3.666 E F1 2.75(,b).916 G
(ut the last-change time is not af)-2.97 E 2.75(fected. The)-.275 F
(selection atom is uninterpreted by)2.75 E(the X serv)72 664.8 Q(er)
-.165 E(.)-.605 E F0(XGetSelectionOwner)6.416 E F1(returns the o)3.666 E
(wner windo)-.275 E 1.43 -.715(w, w)-.275 H(hich is reported in).715 E
F0(Selection-)3.666 E(Request)72 677.8 Q F1(and)3.666 E F0
(SelectionClear)3.666 E F1 -2.365 -.275(ev e)3.666 H 2.75
(nts. Selections).275 F(are global to the X serv)2.75 E(er)-.165 E(.)
-.605 E F0(XSetSelectionOwner)72.916 694.7 Q F1(can generate)3.666 E F0
(BadAtom)3.666 E F1(and)3.666 E F0(BadW)3.666 E(indo)-.198 E(w)-.11 E F1
(errors.)3.666 E 1.76 -.88(To r)72 724.6 T(eturn the selection o).88 E
(wner)-.275 E 2.75(,u)-.44 G(se)-2.75 E F0(XGetSelectionOwner)3.666 E F1
(.).916 E F0(71)282.5 769 Q 0 Cg EP
%%Page: 72 77
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E .44 LW 36 76.75 36 87.75 DL 36 74.75
36 85.75 DL 41.5 73 36 73 DL 43.5 73 38 73 DL 49 73 43.5 73 DL/F1 11
/Times-Roman@0 SF -.44(Wi)72 88.9 S(ndo).44 E 2.75(wX)-.275 G -1.834
(GetSelectionOwner \()-2.75 F/F2 11/Times-Italic@0 SF(display).916 E F1
(,)A F2(selection)2.75 E F1(\)).916 E(Display *)88.5 101.9 Q F2(display)
A F1(;).916 E(Atom)88.5 114.9 Q F2(selection)2.75 E F1(;).916 E F2
(display)72 135.7 Q F1(Speci\214es the connection to the X serv)40.221 E
(er)-.165 E(.)-.605 E F2(selection)72 152.6 Q F1
(Speci\214es the selection atom whose o)32.895 E(wner you w)-.275 E
(ant returned.)-.11 E 36 148.25 36 159.25 DL 36 146.25 36 157.25 DL 41.5
157.5 36 157.5 DL 43.5 157.5 38 157.5 DL 49 157.5 43.5 157.5 DL(The)72
182.5 Q F0(XGetSelectionOwner)3.666 E F1(function returns the windo)
3.666 E 2.75(wI)-.275 G 2.75(Da)-2.75 G(ssociated with the windo)-2.75 E
2.75(wt)-.275 G(hat cur)-2.75 E(-)-.22 E(rently o)72 195.5 Q
(wns the speci\214ed selection.)-.275 E(If no selection w)5.5 E
(as speci\214ed, the function returns the constant)-.11 E F0(None)72.916
208.5 Q F1 5.5(.I).916 G(f)-5.5 E F0(None)3.666 E F1
(is returned, there is no o)3.666 E(wner for the selection.)-.275 E F0
(XGetSelectionOwner)72.916 225.4 Q F1(can generate a)3.666 E F0(BadAtom)
3.666 E F1(error)3.666 E(.)-.605 E 1.76 -.88(To r)72 255.3 T(equest con)
.88 E -.165(ve)-.44 G(rsion of a selection, use).165 E F0(XCon)3.666 E
-.11(ve)-.44 G(rtSelection).11 E F1(.).916 E 36 273.05 36 284.05 DL 36
271.05 36 282.05 DL 41.5 269.3 36 269.3 DL 43.5 269.3 38 269.3 DL 49
269.3 43.5 269.3 DL(XCon)72 285.2 Q -.165(ve)-.44 G -1.834
(rtSelection \().165 F F2(display).916 E F1(,)A F2(selection)2.75 E F1
(,).916 E F2(tar)2.75 E -.11(ge)-.407 G(t).11 E F1(,).916 E F2(pr)2.75 E
(operty)-.495 E F1(,).916 E F2 -.407(re)2.75 G(questor).407 E F1(,).916
E F2(time)2.75 E F1(\)).916 E(Display *)88.5 298.2 Q F2(display)A F1(;)
.916 E(Atom)88.5 311.2 Q F2(selection)2.75 E F1(,).916 E F2(tar)2.75 E
-.11(ge)-.407 G(t).11 E F1(;).916 E(Atom)88.5 324.2 Q F2(pr)2.75 E
(operty)-.495 E F1(;).916 E -.44(Wi)88.5 337.2 S(ndo).44 E(w)-.275 E F2
-.407(re)2.75 G(questor).407 E F1(;).916 E -.385(Ti)88.5 350.2 S(me).385
E F2(time)2.75 E F1(;).916 E F2(display)72 371 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2(selection)72 387.9 Q F1(Speci\214es the selection atom.)32.895 E F2
(tar)72 404.8 Q -.11(ge)-.407 G(t).11 E F1(Speci\214es the tar)46.238 E
(get atom.)-.198 E F2(pr)72 421.7 Q(operty)-.495 E F1
(Speci\214es the property name.)34.611 E -1.21(Yo)5.5 G 2.75(ua)1.21 G
(lso can pass)-2.75 E F0(None)3.666 E F1(.).916 E F2 -.407(re)72 438.6 S
(questor).407 E F1(Speci\214es the requestor)30.244 E(.)-.605 E F2(time)
72 455.5 Q F1(Speci\214es the time.)53.058 E -1.21(Yo)5.5 G 2.75(uc)1.21
G(an pass either a timestamp or)-2.75 E F0(Curr)3.666 E(entT)-.198 E
(ime)-.198 E F1(.).916 E 36 451.15 36 462.15 DL 36 449.15 36 460.15 DL
41.5 460.4 36 460.4 DL 43.5 460.4 38 460.4 DL 49 460.4 43.5 460.4 DL F0
(XCon)72.916 485.4 Q -.11(ve)-.44 G(rtSelection).11 E F1
(requests that the speci\214ed selection be con)3.666 E -.165(ve)-.44 G
(rted to the speci\214ed tar).165 E(get type:)-.198 E 23.65<8349>72
502.3 S 2.75(ft)-23.65 G(he speci\214ed selection has an o)-2.75 E(wner)
-.275 E 2.75(,t)-.44 G(he X serv)-2.75 E(er sends a)-.165 E F0
(SelectionRequest)3.666 E F1 -2.365 -.275(ev e)3.666 H(nt to that).275 E
-.275(ow)99.5 515.3 S(ner).275 E(.)-.605 E 23.65<8349>72 532.2 S 2.75
(fn)-23.65 G 2.75(oo)-2.75 G(wner for the speci\214ed selection e)-3.025
E(xists, the X serv)-.165 E(er generates a)-.165 E F0(SelectionNotify)
3.666 E F1 -2.365 -.275(ev e)99.5 545.2 T
(nt to the requestor with property).275 E F0(None)3.666 E F1(.).916 E
(The ar)72 562.1 Q(guments are passed on unchanged in either of the e)
-.198 E -.165(ve)-.275 G 2.75(nts. There).165 F(are tw)2.75 E 2.75(op)
-.11 G(rede\214ned selec-)-2.75 E(tion atoms: PRIMAR)72 575.1 Q 2.75(Ya)
-.715 G(nd SECOND)-2.75 E(AR)-.44 E -1.419(Y.)-.715 G F0(XCon)72.916 592
Q -.11(ve)-.44 G(rtSelection).11 E F1(can generate)3.666 E F0(BadAtom)
3.666 E F1(and)3.666 E F0(BadW)3.666 E(indo)-.198 E(w)-.11 E F1(errors.)
3.666 E F0(72)282.5 769 Q 0 Cg EP
%%Page: 73 78
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E/F1 12/Times-Bold@0 SF(Chapter 5)262.17
111 Q(Pixmap and Cursor Functions)210.492 137 Q/F2 11/Times-Roman@0 SF
(Once you ha)72 179.9 Q .33 -.165(ve c)-.22 H(onnected to an X serv).165
E(er)-.165 E 2.75(,y)-.44 G(ou can use the Xlib functions to:)-2.75 E
23.65<8343>72 196.8 S(reate and free pixmaps)-23.65 E 23.65<8343>72
213.7 S(reate, recolor)-23.65 E 2.75(,a)-.44 G(nd free cursors)-2.75 E
F0 2.75(5.1. Cr)72 239.7 R(eating and Fr)-.198 E(eeing Pixmaps)-.198 E
F2(Pixmaps can only be used on the screen on which the)72 256.6 Q 2.75
(yw)-.165 G(ere created.)-2.75 E(Pixmaps are of)5.5 E(f-screen)-.275 E
(resources that are used for v)72 269.6 Q(arious operations, such as de\
\214ning cursors as tiling patterns or as the)-.275 E
(source for certain raster operations.)72 282.6 Q
(Most graphics requests can operate either on a windo)5.5 E 2.75(wo)
-.275 G 2.75(ro)-2.75 G(n)-2.75 E 2.75(ap)72 295.6 S 2.75(ixmap. A)-2.75
F(bitmap is a single bit-plane pixmap.)2.75 E 1.76 -.88(To c)72 325.5 T
(reate a pixmap of a gi).88 E -.165(ve)-.275 G 2.75(ns).165 G(ize, use)
-2.75 E F0(XCr)3.666 E(eatePixmap)-.198 E F2(.).916 E .44 LW 36 343.25
36 354.25 DL 36 341.25 36 352.25 DL 41.5 339.5 36 339.5 DL 43.5 339.5 38
339.5 DL 49 339.5 43.5 339.5 DL(Pixmap XCreatePixmap)72 355.4 Q(\().916
E/F3 11/Times-Italic@0 SF(display).916 E F2(,)A F3(d)2.75 E F2(,).916 E
F3(width)2.75 E F2(,).916 E F3(height)2.75 E F2(,).916 E F3(depth)2.75 E
F2(\)).916 E(Display *)88.5 368.4 Q F3(display)A F2(;).916 E(Dra)88.5
381.4 Q -.11(wa)-.165 G(ble).11 E F3(d)2.75 E F2(;).916 E(unsigned int)
88.5 394.4 Q F3(width)2.75 E F2(,).916 E F3(height)2.75 E F2(;).916 E
(unsigned int)88.5 407.4 Q F3(depth)2.75 E F2(;).916 E F3(display)72
428.2 Q F2(Speci\214es the connection to the X serv)40.221 E(er)-.165 E
(.)-.605 E F3(d)72 445.1 Q F2
(Speci\214es which screen the pixmap is created on.)66.5 E F3(width)72
462 Q(height)72 475 Q F2(Specify the width and height, which de\214ne t\
he dimensions of the pixmap.)44.5 E F3(depth)72 491.9 Q F2
(Speci\214es the depth of the pixmap.)47.558 E 36 487.55 36 498.55 DL 36
485.55 36 496.55 DL 41.5 496.8 36 496.8 DL 43.5 496.8 38 496.8 DL 49
496.8 43.5 496.8 DL(The)72 521.8 Q F0(XCr)3.666 E(eatePixmap)-.198 E F2
(function creates a pixmap of the width, height, and depth you speci\
\214ed and)3.666 E(returns a pixmap ID that identi\214es it.)72 534.8 Q
(It is v)5.5 E(alid to pass an)-.275 E F0(InputOnly)3.666 E F2(windo)
3.666 E 2.75(wt)-.275 G 2.75(ot)-2.75 G(he dra)-2.75 E -.11(wa)-.165 G
(ble).11 E(ar)72 547.8 Q 2.75(gument. The)-.198 F(width and height ar)
2.75 E(guments must be nonzero, or a)-.198 E F0(BadV)3.666 E(alue)-1.012
E F2(error results.)3.666 E(The)5.5 E(depth ar)72 560.8 Q(gument must b\
e one of the depths supported by the screen of the speci\214ed dra)-.198
E -.11(wa)-.165 G(ble, or a).11 E F0(BadV)72.916 573.8 Q(alue)-1.012 E
F2(error results.)3.666 E(The serv)72 590.7 Q
(er uses the speci\214ed dra)-.165 E -.11(wa)-.165 G
(ble to determine on which screen to create the pixmap.).11 E(The)5.5 E
(pixmap can be used only on this screen and only with other dra)72 603.7
Q -.11(wa)-.165 G(bles of the same depth \(see).11 E F0(XCopyPlane)
72.916 616.7 Q F2(for an e)3.666 E(xception to this rule\).)-.165 E
(The initial contents of the pixmap are unde\214ned.)5.5 E F0(XCr)72.916
633.6 Q(eatePixmap)-.198 E F2(can generate)3.666 E F0(BadAlloc)3.666 E
F2(,).916 E F0(BadDrawable)3.666 E F2 2.75(,a).916 G(nd)-2.75 E F0(BadV)
3.666 E(alue)-1.012 E F2(errors.)3.666 E 1.76 -.88(To f)72 663.5 T
(ree all storage associated with a speci\214ed pixmap, use).88 E F0(XFr)
3.666 E(eePixmap)-.198 E F2(.).916 E F0(73)282.5 769 Q 0 Cg EP
%%Page: 74 79
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E .44 LW 36 76.75 36 87.75 DL 36 74.75
36 85.75 DL 41.5 73 36 73 DL 43.5 73 38 73 DL 49 73 43.5 73 DL/F1 11
/Times-Roman@0 SF -1.834(XFreePixmap \()72 88.9 R/F2 11/Times-Italic@0
SF(display).916 E F1(,)A F2(pixmap)2.75 E F1(\)).916 E(Display *)88.5
101.9 Q F2(display)A F1(;).916 E(Pixmap)88.5 114.9 Q F2(pixmap)2.75 E F1
(;).916 E F2(display)72 135.7 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2(pixmap)72 152.6 Q F1(Speci\214es the pixmap.)39.616 E 36 148.25 36
159.25 DL 36 146.25 36 157.25 DL 41.5 157.5 36 157.5 DL 43.5 157.5 38
157.5 DL 49 157.5 43.5 157.5 DL(The)72 182.5 Q F0(XFr)3.666 E(eePixmap)
-.198 E F1(function \214rst deletes the association between the pixmap \
ID and the pixmap.)3.666 E(Then, the X serv)72 195.5 Q
(er frees the pixmap storage when there are no references to it.)-.165 E
(The pixmap)5.5 E(should ne)72 208.5 Q -.165(ve)-.275 G 2.75(rb).165 G
2.75(er)-2.75 G(eferenced ag)-2.75 E(ain.)-.055 E F0(XFr)72.916 225.4 Q
(eePixmap)-.198 E F1(can generate a)3.666 E F0(BadPixmap)3.666 E F1
(error)3.666 E(.)-.605 E F0 2.75(5.2. Cr)72 251.4 R
(eating, Recoloring, and Fr)-.198 E(eeing Cursors)-.198 E F1(Each windo)
72 268.3 Q 2.75(wc)-.275 G(an ha)-2.75 E .33 -.165(ve a d)-.22 H(if).165
E(ferent cursor de\214ned for it.)-.275 E(Whene)5.5 E -.165(ve)-.275 G
2.75(rt).165 G(he pointer is in a visible win-)-2.75 E(do)72 281.3 Q
1.43 -.715(w, i)-.275 H 2.75(ti).715 G 2.75(ss)-2.75 G
(et to the cursor de\214ned for that windo)-2.75 E 4.18 -.715(w. I)-.275
H 2.75(fn).715 G 2.75(oc)-2.75 G(ursor w)-2.75 E
(as de\214ned for that windo)-.11 E 1.43 -.715(w, t)-.275 H(he).715 E
(cursor is the one de\214ned for the parent windo)72 294.3 Q -.715(w.)
-.275 G(From X')72 311.2 Q 2.75(sp)-.605 G(erspecti)-2.75 E -.165(ve)
-.275 G 2.75(,ac).165 G
(ursor consists of a cursor source, mask, colors, and a hotspot.)-2.75 E
(The mask)5.5 E
(pixmap determines the shape of the cursor and must be a depth of one.)
72 324.2 Q(The source pixmap must)5.5 E(ha)72 337.2 Q .33 -.165(ve a d)
-.22 H(epth of one, and the colors determine the colors of the source.)
.165 E(The hotspot de\214nes the)5.5 E
(point on the cursor that is reported when a pointer e)72 350.2 Q -.165
(ve)-.275 G(nt occurs.).165 E(There may be limitations)5.5 E
(imposed by the hardw)72 363.2 Q
(are on cursors as to size and whether a mask is implemented.)-.11 E F0
(XQueryBestCursor)72.916 376.2 Q F1
(can be used to \214nd out what sizes are possible.)3.666 E
(There is a standard font for)5.5 E(creating cursors, b)72 389.2 Q
(ut Xlib pro)-.22 E
(vides functions that you can use to create cursors from an arbitrary)
-.165 E(font or from bitmaps.)72 402.2 Q 1.76 -.88(To c)72 432.1 T
(reate a cursor from the standard cursor font, use).88 E F0(XCr)3.666 E
(eateF)-.198 E(ontCursor)-.275 E F1(.).916 E 36 449.85 36 460.85 DL 36
447.85 36 458.85 DL 41.5 446.1 36 446.1 DL 43.5 446.1 38 446.1 DL 49
446.1 43.5 446.1 DL(#include <X11/cursorfont.h>)72 462 Q
(Cursor XCreateF)72 481 Q -1.834(ontCursor \()-.165 F F2(display).916 E
F1(,)A F2(shape)2.75 E F1(\)).916 E(Display *)88.5 494 Q F2(display)A F1
(;).916 E(unsigned int)88.5 507 Q F2(shape)2.75 E F1(;).916 E F2
(display)72 527.8 Q F1(Speci\214es the connection to the X serv)40.221 E
(er)-.165 E(.)-.605 E F2(shape)72 544.7 Q F1
(Speci\214es the shape of the cursor)46.337 E(.)-.605 E 36 540.35 36
551.35 DL 36 538.35 36 549.35 DL 41.5 549.6 36 549.6 DL 43.5 549.6 38
549.6 DL 49 549.6 43.5 549.6 DL 2.75(Xp)72 574.6 S(ro)-2.75 E
(vides a set of standard cursor shapes in a special font named cursor)
-.165 E 5.5(.A)-.605 G(pplications are)-5.5 E
(encouraged to use this interf)72 587.6 Q
(ace for their cursors because the font can be customized for the indi-)
-.11 E(vidual display type.)72 600.6 Q(The shape ar)5.5 E
(gument speci\214es which glyph of the standard fonts to use.)-.198 E
(The hotspot comes from the information stored in the cursor font.)72
617.5 Q(The initial colors of a cursor)5.5 E(are a black fore)72 630.5 Q
(ground and a white background \(see)-.165 E F0(XRecolorCursor)3.666 E
F1 2.75(\). F).916 F(or further information)-.165 E
(about cursor shapes, see appendix B.)72 643.5 Q F0(XCr)72.916 660.4 Q
(eateF)-.198 E(ontCursor)-.275 E F1(can generate)3.666 E F0(BadAlloc)
3.666 E F1(and)3.666 E F0(BadV)3.666 E(alue)-1.012 E F1(errors.)3.666 E
1.76 -.88(To c)72 690.3 T(reate a cursor from font glyphs, use).88 E F0
(XCr)3.666 E(eateGlyphCursor)-.198 E F1(.).916 E F0(74)282.5 769 Q 0 Cg
EP
%%Page: 75 80
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E .44 LW 36 76.75 36 87.75 DL 36 74.75
36 85.75 DL 41.5 73 36 73 DL 43.5 73 38 73 DL 49 73 43.5 73 DL/F1 11
/Times-Roman@0 SF(Cursor XCreateGlyphCursor)72 88.9 Q(\().916 E/F2 11
/Times-Italic@0 SF(display).916 E F1(,)A F2(sour)2.75 E(ce_font)-.407 E
F1(,).916 E F2(mask_font)2.75 E F1(,).916 E F2(sour)2.75 E(ce_c)-.407 E
(har)-.165 E F1(,).916 E F2(mask_c)2.75 E(har)-.165 E F1(,).916 E F2
(for)146.25 101.9 Q -.44(eg)-.407 G -.495(ro).44 G(und_color).495 E F1
(,).916 E F2(bac)2.75 E(kgr)-.22 E(ound_color)-.495 E F1(\)).916 E
(Display *)88.5 114.9 Q F2(display)A F1(;).916 E -.165(Fo)88.5 127.9 S
(nt).165 E F2(sour)2.75 E(ce_font)-.407 E F1(,).916 E F2(mask_font)2.75
E F1(;).916 E(unsigned int)88.5 140.9 Q F2(sour)2.75 E(ce_c)-.407 E(har)
-.165 E F1(,).916 E F2(mask_c)2.75 E(har)-.165 E F1(;).916 E(XColor *)
88.5 153.9 Q F2(for)A -.44(eg)-.407 G -.495(ro).44 G(und_color).495 E F1
(;).916 E(XColor *)88.5 166.9 Q F2(bac)A(kgr)-.22 E(ound_color)-.495 E
F1(;).916 E F2(display)72 187.7 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2(sour)72 204.6 Q(ce_font)-.407 E F1
(Speci\214es the font for the source glyph.)20.465 E F2(mask_font)72
221.5 Q F1(Speci\214es the font for the mask glyph or)26.779 E F0(None)
3.666 E F1(.).916 E F2(sour)72 238.4 Q(ce_c)-.407 E(har)-.165 E F1
(Speci\214es the character glyph for the source.)17.583 E F2(mask_c)72
255.3 Q(har)-.165 E F1(Speci\214es the glyph character for the mask.)
23.897 E F2(for)72 272.2 Q -.44(eg)-.407 G -.495(ro).44 G(und_color).495
E F1(Speci\214es the RGB v)144 285.2 Q(alues for the fore)-.275 E
(ground of the source.)-.165 E F2(bac)72 302.1 Q(kgr)-.22 E(ound_color)
-.495 E F1(Speci\214es the RGB v)144 315.1 Q
(alues for the background of the source.)-.275 E 36 310.75 36 321.75 DL
36 308.75 36 319.75 DL 41.5 320 36 320 DL 43.5 320 38 320 DL 49 320 43.5
320 DL(The)72 345 Q F0(XCr)3.666 E(eateGlyphCursor)-.198 E F1
(function is similar to)3.666 E F0(XCr)3.666 E(eatePixmapCursor)-.198 E
F1 -.165(ex)3.666 G(cept that the source).165 E
(and mask bitmaps are obtained from the speci\214ed font glyphs.)72 358
Q(The source_char must be a)5.5 E(de\214ned glyph in source_font, or a)
72 371 Q F0(BadV)3.666 E(alue)-1.012 E F1(error results.)3.666 E
(If mask_font is gi)5.5 E -.165(ve)-.275 G(n, mask_char).165 E
(must be a de\214ned glyph in mask_font, or a)72 384 Q F0(BadV)3.666 E
(alue)-1.012 E F1(error results.)3.666 E(The mask_font and character)5.5
E(are optional.)72 397 Q(The origins of the source_char and mask_char \
\(if de\214ned\) glyphs are positioned)5.5 E
(coincidently and de\214ne the hotspot.)72 410 Q
(The source_char and mask_char need not ha)5.5 E .33 -.165(ve t)-.22 H
(he same).165 E(bounding box metrics, and there is no restriction on th\
e placement of the hotspot relati)72 423 Q .33 -.165(ve t)-.275 H 2.75
(ot).165 G(he)-2.75 E(bounding box)72 436 Q 2.75(es. If)-.165 F
(no mask_char is gi)2.75 E -.165(ve)-.275 G(n, all pix).165 E
(els of the source are displayed.)-.165 E -1.21(Yo)5.5 G 2.75(uc)1.21 G
(an free)-2.75 E(the fonts immediately by calling)72 449 Q F0(XFr)3.666
E(eeF)-.198 E(ont)-.275 E F1(if no further e)3.666 E
(xplicit references to them are to be)-.165 E(made.)72 462 Q -.165(Fo)72
478.9 S 2.75(r2).165 G(-byte matrix fonts, the 16-bit v)-2.75 E
(alue should be formed with the byte1 member in the most sig-)-.275 E
(ni\214cant byte and the byte2 member in the least signi\214cant byte.)
72 491.9 Q F0(XCr)72.916 508.8 Q(eateGlyphCursor)-.198 E F1
(can generate)3.666 E F0(BadAlloc)3.666 E F1(,).916 E F0(BadF)3.666 E
(ont)-.275 E F1 2.75(,a).916 G(nd)-2.75 E F0(BadV)3.666 E(alue)-1.012 E
F1(errors.)3.666 E 1.76 -.88(To c)72 538.7 T(reate a cursor from tw).88
E 2.75(ob)-.11 G(itmaps, use)-2.75 E F0(XCr)3.666 E(eatePixmapCursor)
-.198 E F1(.).916 E F0(75)282.5 769 Q 0 Cg EP
%%Page: 76 81
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E .44 LW 36 76.75 36 87.75 DL 36 74.75
36 85.75 DL 41.5 73 36 73 DL 43.5 73 38 73 DL 49 73 43.5 73 DL/F1 11
/Times-Roman@0 SF(Cursor XCreatePixmapCursor)72 88.9 Q(\().916 E/F2 11
/Times-Italic@0 SF(display).916 E F1(,)A F2(sour)2.75 E(ce)-.407 E F1(,)
.916 E F2(mask)2.75 E F1(,).916 E F2(for)2.75 E -.44(eg)-.407 G -.495
(ro).44 G(und_color).495 E F1(,).916 E F2(bac)2.75 E(kgr)-.22 E
(ound_color)-.495 E F1(,).916 E F2(x)2.75 E F1(,).916 E F2(y)2.75 E F1
(\)).916 E(Display *)88.5 101.9 Q F2(display)A F1(;).916 E(Pixmap)88.5
114.9 Q F2(sour)2.75 E(ce)-.407 E F1(;).916 E(Pixmap)88.5 127.9 Q F2
(mask)2.75 E F1(;).916 E(XColor *)88.5 140.9 Q F2(for)A -.44(eg)-.407 G
-.495(ro).44 G(und_color).495 E F1(;).916 E(XColor *)88.5 153.9 Q F2
(bac)A(kgr)-.22 E(ound_color)-.495 E F1(;).916 E(unsigned int)88.5 166.9
Q F2(x)2.75 E F1(,).916 E F2(y)2.75 E F1(;).916 E F2(display)72 187.7 Q
F1(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605
E F2(sour)72 204.6 Q(ce)-.407 E F1
(Speci\214es the shape of the source cursor)43.081 E(.)-.605 E F2(mask)
72 221.5 Q F1(Speci\214es the cursor')49.395 E 2.75(ss)-.605 G
(ource bits to be displayed or)-2.75 E F0(None)3.666 E F1(.).916 E F2
(for)72 238.4 Q -.44(eg)-.407 G -.495(ro).44 G(und_color).495 E F1
(Speci\214es the RGB v)144 251.4 Q(alues for the fore)-.275 E
(ground of the source.)-.165 E F2(bac)72 268.3 Q(kgr)-.22 E(ound_color)
-.495 E F1(Speci\214es the RGB v)144 281.3 Q
(alues for the background of the source.)-.275 E F2(x)72 298.2 Q(y)72
311.2 Q F1
(Specify the x and y coordinates, which indicate the hotspot relati)
67.116 E .33 -.165(ve t)-.275 H 2.75(ot).165 G(he)-2.75 E(source')144
324.2 Q 2.75(so)-.605 G(rigin.)-2.75 E 36 319.85 36 330.85 DL 36 317.85
36 328.85 DL 41.5 329.1 36 329.1 DL 43.5 329.1 38 329.1 DL 49 329.1 43.5
329.1 DL(The)72 354.1 Q F0(XCr)3.666 E(eatePixmapCursor)-.198 E F1
(function creates a cursor and returns the cursor ID associated with)
3.666 E 2.75(it. The)72 367.1 R(fore)2.75 E(ground and background RGB v)
-.165 E(alues must be speci\214ed using fore)-.275 E(ground_color and)
-.165 E(background_color)72 380.1 Q 2.75(,e)-.44 G -.165(ve)-3.025 G
2.75(ni).165 G 2.75(ft)-2.75 G(he X serv)-2.75 E(er only has a)-.165 E
F0(StaticGray)3.666 E F1(or)3.666 E F0(GrayScale)3.666 E F1 2.75
(screen. The)3.666 F(fore-)2.75 E(ground color is used for the pix)72
393.1 Q
(els set to 1 in the source, and the background color is used for the)
-.165 E(pix)72 406.1 Q(els set to 0.)-.165 E
(Both source and mask, if speci\214ed, must ha)5.5 E .33 -.165(ve d)-.22
H(epth one \(or a).165 E F0(BadMatch)3.666 E F1(error)3.666 E
(results\) b)72 419.1 Q(ut can ha)-.22 E .33 -.165(ve a)-.22 H .33 -.165
(ny r).165 H 2.75(oot. The).165 F(mask ar)2.75 E
(gument de\214nes the shape of the cursor)-.198 E 5.5(.T)-.605 G(he pix)
-5.5 E(els set)-.165 E(to 1 in the mask de\214ne which source pix)72
432.1 Q(els are displayed, and the pix)-.165 E
(els set to 0 de\214ne which pix-)-.165 E(els are ignored.)72 445.1 Q
(If no mask is gi)5.5 E -.165(ve)-.275 G(n, all pix).165 E
(els of the source are displayed.)-.165 E(The mask, if present,)5.5 E
(must be the same size as the pixmap de\214ned by the source ar)72 458.1
Q(gument, or a)-.198 E F0(BadMatch)3.666 E F1(error)3.666 E 2.75
(results. The)72 471.1 R
(hotspot must be a point within the source, or a)2.75 E F0(BadMatch)
3.666 E F1(error results.)3.666 E(The components of the cursor can be t\
ransformed arbitrarily to meet display limitations.)72 488 Q(The)5.5 E
(pixmaps can be freed immediately if no further e)72 501 Q
(xplicit references to them are to be made.)-.165 E(Sub-)5.5 E
(sequent dra)72 514 Q
(wing in the source or mask pixmap has an unde\214ned ef)-.165 E
(fect on the cursor)-.275 E 5.5(.T)-.605 G(he X)-5.5 E(serv)72 527 Q
(er might or might not mak)-.165 E 2.75(eac)-.11 G(op)-2.75 E 2.75(yo)
-.11 G 2.75(ft)-2.75 G(he pixmap.)-2.75 E F0(XCr)72.916 543.9 Q
(eatePixmapCursor)-.198 E F1(can generate)3.666 E F0(BadAlloc)3.666 E F1
(and)3.666 E F0(BadPixmap)3.666 E F1(errors.)3.666 E 1.76 -.88(To d)72
573.8 T(etermine useful cursor sizes, use).88 E F0(XQueryBestCursor)
3.666 E F1(.).916 E F0(76)282.5 769 Q 0 Cg EP
%%Page: 77 82
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E .44 LW 36 76.75 36 87.75 DL 36 74.75
36 85.75 DL 41.5 73 36 73 DL 43.5 73 38 73 DL 49 73 43.5 73 DL/F1 11
/Times-Roman@0 SF(Status XQueryBestCursor)72 88.9 Q(\().916 E/F2 11
/Times-Italic@0 SF(display).916 E F1(,)A F2(d)2.75 E F1(,)A F2(width)
2.75 E F1(,).916 E F2(height)2.75 E F1(,).916 E F2(width_r)2.75 E(eturn)
-.407 E F1(,).916 E F2(height_r)2.75 E(eturn)-.407 E F1(\)).916 E
(Display *)88.5 101.9 Q F2(display)A F1(;).916 E(Dra)88.5 114.9 Q -.11
(wa)-.165 G(ble).11 E F2(d)2.75 E F1(;).916 E(unsigned int)88.5 127.9 Q
F2(width)2.75 E F1(,).916 E F2(height)2.75 E F1(;).916 E(unsigned int *)
88.5 140.9 Q F2(width_r)A(eturn)-.407 E F1 2.75(,*).916 G F2(height_r)
-2.75 E(eturn)-.407 E F1(;).916 E F2(display)72 161.7 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2(d)72 178.6 Q F1(Speci\214es the dra)66.5 E -.11(wa)-.165 G
(ble, which indicates the screen.).11 E F2(width)72 195.5 Q(height)72
208.5 Q F1(Specify the width and height of the cursor that you w)44.5 E
(ant the size information for)-.11 E(.)-.605 E F2(width_r)72 225.4 Q
(eturn)-.407 E(height_r)72 238.4 Q(eturn)-.407 E F1(Return the best wid\
th and height that is closest to the speci\214ed width and height.)
11.907 E 36 234.05 36 245.05 DL 36 232.05 36 243.05 DL 41.5 243.3 36
243.3 DL 43.5 243.3 38 243.3 DL 49 243.3 43.5 243.3 DL
(Some displays allo)72 268.3 Q 2.75(wl)-.275 G(ar)-2.75 E
(ger cursors than other displays.)-.198 E(The)5.5 E F0(XQueryBestCursor)
3.666 E F1(function pro-)3.666 E(vides a w)72 281.3 Q(ay to \214nd out \
what size cursors are actually possible on the display)-.11 E 5.5(.I)
-.715 G 2.75(tr)-5.5 G(eturns the lar)-2.75 E(gest)-.198 E
(size that can be displayed.)72 294.3 Q
(Applications should be prepared to use smaller cursors on displays)5.5
E(that cannot support lar)72 307.3 Q(ge ones.)-.198 E F0
(XQueryBestCursor)72.916 324.2 Q F1(can generate a)3.666 E F0
(BadDrawable)3.666 E F1(error)3.666 E(.)-.605 E 1.76 -.88(To c)72 354.1
T(hange the color of a gi).88 E -.165(ve)-.275 G 2.75(nc).165 G(ursor)
-2.75 E 2.75(,u)-.44 G(se)-2.75 E F0(XRecolorCursor)3.666 E F1(.).916 E
36 371.85 36 382.85 DL 36 369.85 36 380.85 DL 41.5 368.1 36 368.1 DL
43.5 368.1 38 368.1 DL 49 368.1 43.5 368.1 DL -1.834(XRecolorCursor \()
72 384 R F2(display).916 E F1(,)A F2(cur)2.75 E(sor)-.11 E F1(,).916 E
F2(for)2.75 E -.44(eg)-.407 G -.495(ro).44 G(und_color).495 E F1(,).916
E F2(bac)2.75 E(kgr)-.22 E(ound_color)-.495 E F1(\)).916 E(Display *)
88.5 397 Q F2(display)A F1(;).916 E(Cursor)88.5 410 Q F2(cur)2.75 E(sor)
-.11 E F1(;).916 E(XColor *)88.5 423 Q F2(for)A -.44(eg)-.407 G -.495
(ro).44 G(und_color).495 E F1 2.75(,*).916 G F2(bac)-2.75 E(kgr)-.22 E
(ound_color)-.495 E F1(;).916 E F2(display)72 443.8 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2(cur)72 460.7 Q(sor)-.11 E F1(Speci\214es the cursor)43.389 E(.)-.605
E F2(for)72 477.6 Q -.44(eg)-.407 G -.495(ro).44 G(und_color).495 E F1
(Speci\214es the RGB v)144 490.6 Q(alues for the fore)-.275 E
(ground of the source.)-.165 E F2(bac)72 507.5 Q(kgr)-.22 E(ound_color)
-.495 E F1(Speci\214es the RGB v)144 520.5 Q
(alues for the background of the source.)-.275 E 36 516.15 36 527.15 DL
36 514.15 36 525.15 DL 41.5 525.4 36 525.4 DL 43.5 525.4 38 525.4 DL 49
525.4 43.5 525.4 DL(The)72 550.4 Q F0(XRecolorCursor)3.666 E F1
(function changes the color of the speci\214ed cursor)3.666 E 2.75(,a)
-.44 G(nd if the cursor is)-2.75 E
(being displayed on a screen, the change is visible immediately)72 563.4
Q 5.5(.T)-.715 G(he pix)-5.5 E(el members of the)-.165 E F0(XColor)
72.916 576.4 Q F1(structures are ignored; only the RGB v)3.666 E
(alues are used.)-.275 E F0(XRecolorCursor)72.916 593.3 Q F1
(can generate a)3.666 E F0(BadCursor)3.666 E F1(error)3.666 E(.)-.605 E
1.76 -.88(To f)72 623.2 T(ree \(destro).88 E(y\) a gi)-.11 E -.165(ve)
-.275 G 2.75(nc).165 G(ursor)-2.75 E 2.75(,u)-.44 G(se)-2.75 E F0(XFr)
3.666 E(eeCursor)-.198 E F1(.).916 E F0(77)282.5 769 Q 0 Cg EP
%%Page: 78 83
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E .44 LW 36 76.75 36 87.75 DL 36 74.75
36 85.75 DL 41.5 73 36 73 DL 43.5 73 38 73 DL 49 73 43.5 73 DL/F1 11
/Times-Roman@0 SF -1.834(XFreeCursor \()72 88.9 R/F2 11/Times-Italic@0
SF(display).916 E F1(,)A F2(cur)2.75 E(sor)-.11 E F1(\)).916 E
(Display *)88.5 101.9 Q F2(display)A F1(;).916 E(Cursor)88.5 114.9 Q F2
(cur)2.75 E(sor)-.11 E F1(;).916 E F2(display)72 135.7 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2(cur)72 152.6 Q(sor)-.11 E F1(Speci\214es the cursor)43.389 E(.)-.605
E 36 148.25 36 159.25 DL 36 146.25 36 157.25 DL 41.5 157.5 36 157.5 DL
43.5 157.5 38 157.5 DL 49 157.5 43.5 157.5 DL(The)72 182.5 Q F0(XFr)
3.666 E(eeCursor)-.198 E F1(function deletes the association between th\
e cursor resource ID and the speci-)3.666 E(\214ed cursor)72 195.5 Q 5.5
(.T)-.605 G
(he cursor storage is freed when no other resource references it.)-5.5 E
(The speci\214ed cursor)5.5 E(ID should not be referred to ag)72 208.5 Q
(ain.)-.055 E F0(XFr)72.916 225.4 Q(eeCursor)-.198 E F1(can generate a)
3.666 E F0(BadCursor)3.666 E F1(error)3.666 E(.)-.605 E F0(78)282.5 769
Q 0 Cg EP
%%Page: 79 84
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E/F1 12/Times-Bold@0 SF(Chapter 6)262.17
111 Q(Color Management Functions)211.338 137 Q/F2 11/Times-Roman@0 SF
(Each X windo)72 179.9 Q 2.75(wa)-.275 G -.11(lwa)-2.75 G
(ys has an associated colormap that pro).11 E(vides a le)-.165 E -.165
(ve)-.275 G 2.75(lo).165 G 2.75(fi)-2.75 G(ndirection between)-2.75 E
(pix)72 192.9 Q(el v)-.165 E(alues and colors displayed on the screen.)
-.275 E(Xlib pro)5.5 E(vides functions that you can use to)-.165 E
(manipulate a colormap.)72 205.9 Q
(The X protocol de\214nes colors using v)5.5 E
(alues in the RGB color space.)-.275 E(The)5.5 E(RGB color space is de)
72 218.9 Q(vice dependent; rendering an RGB v)-.275 E(alue on dif)-.275
E(fering output de)-.275 E(vices typi-)-.275 E(cally results in dif)72
231.9 Q(ferent colors.)-.275 E(Xlib also pro)5.5 E
(vides a means for clients to specify color using)-.165 E(de)72 244.9 Q
(vice-independent color spaces for consistent results across de)-.275 E
2.75(vices. Xlib)-.275 F(supports de)2.75 E(vice-inde-)-.275 E
(pendent color spaces deri)72 257.9 Q -.275(va)-.275 G
(ble from the CIE XYZ color space.).275 E
(This includes the CIE XYZ, xyY)5.5 E(,)-1.419 E
(L*u*v*, and L*a*b* color spaces as well as the T)72 270.9 Q
(ekHVC color space.)-.77 E(This chapter discusses ho)72 287.8 Q 2.75(wt)
-.275 G(o:)-2.75 E 23.65<8343>72 304.7 S(reate, cop)-23.65 E 1.43 -.715
(y, a)-.11 H(nd destro).715 E 2.75(yac)-.11 G(olormap)-2.75 E 23.65
<8353>72 321.6 S(pecify colors by name or v)-23.65 E(alue)-.275 E 23.65
<8341>72 338.5 S(llocate, modify)-23.65 E 2.75(,a)-.715 G
(nd free color cells)-2.75 E 23.65<8352>72 355.4 S
(ead entries in a colormap)-23.65 E 23.65<8343>72 372.3 S(on)-23.65 E
-.165(ve)-.44 G(rt between color spaces).165 E 23.65<8343>72 389.2 S
(ontrol aspects of color con)-23.65 E -.165(ve)-.44 G(rsion).165 E 23.65
<8351>72 406.1 S(uery the color g)-23.65 E(amut of a screen)-.055 E
23.65<8341>72 423 S(dd ne)-23.65 E 2.75(wc)-.275 G(olor spaces)-2.75 E
(All functions, types, and symbols in this chapter with the pre\214x `)
72 439.9 Q(`Xcms')-.814 E 2.75('a)-.814 G(re de\214ned in)-2.75 E(<)72
452.9 Q F0(X11/Xcms.h)A F2 2.75(>. The)B
(remaining functions and types are de\214ned in <)2.75 E F0(X11/Xlib)A
(.h)-.44 E F2(>.)A(Functions in this chapter manipulate the representat\
ion of color on the screen.)72 469.8 Q -.165(Fo)5.5 G 2.75(re).165 G
(ach possible)-2.75 E -.275(va)72 482.8 S(lue that a pix).275 E
(el can tak)-.165 E 2.75(ei)-.11 G 2.75(naw)-2.75 G(indo)-2.75 E 1.43
-.715(w, t)-.275 H(here is a color cell in the colormap.).715 E -.165
(Fo)5.5 G 2.75(re).165 G(xample, if a)-2.915 E(windo)72 495.8 Q 2.75(wi)
-.275 G 2.75(s4b)-2.75 G(its deep, pix)-2.75 E(el v)-.165 E
(alues 0 through 15 are de\214ned.)-.275 E 2.75(Ac)5.5 G
(olormap is a collection of color)-2.75 E 2.75(cells. A)72 508.8 R
(color cell consists of a triple of red, green, and blue \(RGB\) v)2.75
E 2.75(alues. The)-.275 F(hardw)2.75 E(are)-.11 E
(imposes limits on the number of signi\214cant bits in these v)72 521.8
Q 2.75(alues. As)-.275 F(each pix)2.75 E(el is read out of dis-)-.165 E
(play memory)72 534.8 Q 2.75(,t)-.715 G(he pix)-2.75 E(el is look)-.165
E(ed up in a colormap.)-.11 E(The RGB v)5.5 E
(alue of the cell determines what)-.275 E
(color is displayed on the screen.)72 547.8 Q
(On a grayscale display with a black-and-white monitor)5.5 E 2.75(,t)
-.44 G(he v)-2.75 E(al-)-.275 E
(ues are combined to determine the brightness on the screen.)72 560.8 Q
-.88(Ty)72 577.7 S(pically).88 E 2.75(,a)-.715 G 2.75(na)-2.75 G(pplica\
tion allocates color cells or sets of color cells to obtain the desired\
 colors.)-2.75 E(The client can allocate read-only cells.)72 590.7 Q
(In which case, the pix)5.5 E(el v)-.165 E
(alues for these colors can be)-.275 E
(shared among multiple applications, and the RGB v)72 603.7 Q
(alue of the cell cannot be changed.)-.275 E(If the)5.5 E
(client allocates read/write cells, the)72 616.7 Q 2.75(ya)-.165 G(re e)
-2.75 E(xclusi)-.165 E -.165(ve)-.275 G(ly o).165 E
(wned by the client, and the color associated)-.275 E(with the pix)72
629.7 Q(el v)-.165 E(alue can be changed at will.)-.275 E
(Cells must be allocated \(and, if read/write, initialized)5.5 E
(with an RGB v)72 642.7 Q(alue\) by a client to obtain desired colors.)
-.275 E(The use of pix)5.5 E(el v)-.165 E(alue for an unallocated)-.275
E(cell results in an unde\214ned color)72 655.7 Q(.)-.605 E
(Because colormaps are associated with windo)72 672.6 Q
(ws, X supports displays with multiple colormaps)-.275 E
(and, indeed, dif)72 685.6 Q(ferent types of colormaps.)-.275 E
(If there are insuf)5.5 E(\214cient colormap resources in the dis-)-.275
E(play)72 698.6 Q 2.75(,s)-.715 G(ome windo)-2.75 E(ws will display in \
their true colors, and others will display with incorrect colors.)-.275
E 2.75(Aw)72 711.6 S(indo)-2.75 E 2.75(wm)-.275 G
(anager usually controls which windo)-2.75 E
(ws are displayed in their true colors if more)-.275 E(than one colorma\
p is required for the color resources the applications are using.)72
724.6 Q(At an)5.5 E 2.75(yt)-.165 G(ime,)-2.75 E F0(79)282.5 769 Q 0 Cg
EP
%%Page: 80 85
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E/F1 11/Times-Roman@0 SF
(there is a set of installed colormaps for a screen.)72 85 Q -.44(Wi)5.5
G(ndo).44 E(ws using one of the installed colormaps)-.275 E
(display with true colors, and windo)72 98 Q
(ws using other colormaps generally display with incorrect col-)-.275 E
2.75(ors. Y)72 111 R
(ou can control the set of installed colormaps by using)-1.21 E F0
(XInstallColormap)3.666 E F1(and)3.666 E F0(XUninstall-)3.666 E
(Colormap)72 124 Q F1(.).916 E
(Colormaps are local to a particular screen.)72 140.9 Q(Screens al)5.5 E
-.11(wa)-.11 G(ys ha).11 E .33 -.165(ve a d)-.22 H(ef).165 E
(ault colormap, and pro-)-.11 E
(grams typically allocate cells out of this colormap.)72 153.9 Q
(Generally)5.5 E 2.75(,y)-.715 G(ou should not write applications)-2.75
E(that monopolize color resources.)72 166.9 Q(Although some hardw)5.5 E
(are supports multiple colormaps installed)-.11 E(at one time, man)72
179.9 Q 2.75(yo)-.165 G 2.75(ft)-2.75 G(he hardw)-2.75 E(are displays b)
-.11 E(uilt today support only a single installed colormap,)-.22 E
(so the primiti)72 192.9 Q -.165(ve)-.275 G 2.75(sa).165 G(re written t\
o encourage sharing of colormap entries between applications.)-2.75 E
(The)72 209.8 Q F0(DefaultColormap)3.666 E F1(macro returns the def)
3.666 E(ault colormap.)-.11 E(The)5.5 E F0(DefaultV)3.666 E(isual)-.407
E F1(macro returns)3.666 E(the def)72 222.8 Q
(ault visual type for the speci\214ed screen.)-.11 E
(Possible visual types are)5.5 E F0(StaticGray)3.666 E F1(,).916 E F0
(GrayScale)72.916 235.8 Q F1(,).916 E F0(StaticColor)3.666 E F1(,).916 E
F0(PseudoColor)3.666 E F1(,).916 E F0 -.814(Tr)3.666 G(ueColor).814 E F1
2.75(,o).916 G(r)-2.75 E F0(Dir)3.666 E(ectColor)-.198 E F1
(\(see section 3.1\).)3.666 E F0 2.75(6.1. Color)72 261.8 R(Structur)
2.75 E(es)-.198 E F1(Functions that operate only on RGB color space v)72
278.7 Q(alues use an)-.275 E F0(XColor)3.666 E F1
(structure, which contains:)3.666 E .44 LW 36 300.35 36 311.35 DL 36
298.35 36 309.35 DL 41.5 296.6 36 296.6 DL 43.5 296.6 38 296.6 DL 49
296.6 43.5 296.6 DL(typedef struct {)72 315.1 Q(unsigned long pix)108
328.1 Q 51.578(el; /*)-.165 F(pix)2.75 E(el v)-.165 E(alue */)-.275 E
(unsigned short red, green, blue;)108 341.1 Q(/* r)5.301 E(gb v)-.198 E
(alues */)-.275 E(char \215ags;)108 354.1 Q
(/* DoRed, DoGreen, DoBlue */)98.482 E(char pad;)108 367.1 Q 2.75(}X)72
380.1 S(Color;)-2.75 E 36 382.25 36 393.25 DL 36 380.25 36 391.25 DL
41.5 391.5 36 391.5 DL 43.5 391.5 38 391.5 DL 49 391.5 43.5 391.5 DL
(The red, green, and blue v)72 416.5 Q(alues are al)-.275 E -.11(wa)-.11
G(ys in the range 0 to 65535 inclusi).11 E -.165(ve)-.275 G 2.75(,i).165
G(ndependent of the)-2.75 E
(number of bits actually used in the display hardw)72 429.5 Q 2.75
(are. The)-.11 F(serv)2.75 E(er scales these v)-.165 E(alues do)-.275 E
(wn to the)-.275 E(range used by the hardw)72 442.5 Q 2.75(are. Black)
-.11 F(is represented by \(0,0,0\), and white is represented by)2.75 E
2.75(\(65535,65535,65535\). In)72 455.5 R(some functions, the \215ags m\
ember controls which of the red, green, and)2.75 E
(blue members is used and can be the inclusi)72 468.5 Q .33 -.165(ve O)
-.275 H 2.75(Ro).165 G 2.75(fz)-2.75 G(ero or more of)-2.75 E F0(DoRed)
3.666 E F1(,).916 E F0(DoGr)3.666 E(een)-.198 E F1 2.75(,a).916 G(nd)
-2.75 E F0(DoBlue)72.916 481.5 Q F1(.).916 E
(Functions that operate on all color space v)72 511.4 Q(alues use an)
-.275 E F0(XcmsColor)3.666 E F1 2.75(structure. This)3.666 F
(structure con-)2.75 E(tains a union of substructures, each supporting \
color speci\214cation encoding for a particular color)72 524.4 Q 2.75
(space. Lik)72 537.4 R 2.75(et)-.11 G(he)-2.75 E F0(XColor)3.666 E F1
(structure, the)3.666 E F0(XcmsColor)3.666 E F1(structure contains pix)
3.666 E(el and color speci\214ca-)-.165 E
(tion information \(the spec member in the)72 550.4 Q F0(XcmsColor)3.666
E F1(structure\).)3.666 E F0(80)282.5 769 Q 0 Cg EP
%%Page: 81 86
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E .44 LW 36 76.75 36 87.75 DL 36 74.75
36 85.75 DL 41.5 73 36 73 DL 43.5 73 38 73 DL 49 73 43.5 73 DL/F1 11
/Times-Roman@0 SF(typedef unsigned long XcmsColorF)72 95.4 Q
(ormat;/* Color Speci\214cation F)-.165 E(ormat */)-.165 E
(typedef struct {)72 121.4 Q(union {)108 134.4 Q(XcmsRGB RGB;)144 147.4
Q(XcmsRGBi RGBi;)144 160.4 Q(XcmsCIEXYZ CIEXYZ;)144 173.4 Q
(XcmsCIEuvY CIEuvY)144 186.4 Q(;)-1.012 E(XcmsCIExyY CIExyY)144 199.4 Q
(;)-1.012 E(XcmsCIELab CIELab;)144 212.4 Q(XcmsCIELuv CIELuv;)144 225.4
Q(XcmsT)144 238.4 Q(ekHVC T)-.77 E(ekHVC;)-.77 E(XcmsP)144 251.4 Q(ad P)
-.165 E(ad;)-.165 E 2.75(}s)108 264.4 S(pec;)-2.75 E(unsigned long pix)
108 277.4 Q(el;)-.165 E(XcmsColorF)108 290.4 Q(ormat format;)-.165 E
2.75(}X)72 303.4 S 115.441(cmsColor; /*)-2.75 F(Xcms Color Structure */)
2.75 E 36 305.55 36 316.55 DL 36 303.55 36 314.55 DL 41.5 314.8 36 314.8
DL 43.5 314.8 38 314.8 DL 49 314.8 43.5 314.8 DL
(Because the color speci\214cation can be encoded for the v)72 339.8 Q
(arious color spaces, encoding for the spec)-.275 E
(member is identi\214ed by the format member)72 352.8 Q 2.75(,w)-.44 G
(hich is of type)-2.75 E F0(XcmsColorF)3.666 E(ormat)-.275 E F1 5.5(.T)
.916 G(he follo)-5.5 E(wing)-.275 E(macros de\214ne standard formats.)72
365.8 Q 36 383.55 36 394.55 DL 36 381.55 36 392.55 DL 41.5 379.8 36
379.8 DL 43.5 379.8 38 379.8 DL 49 379.8 43.5 379.8 DL(#de\214ne)72
398.3 Q F0(XcmsUnde\214nedF)125.416 398.3 Q(ormat)-.275 E F1(0x00000000)
256.2 398.3 Q(#de\214ne)72 411.3 Q F0(XcmsCIEXYZF)125.416 411.3 Q(ormat)
-.275 E F1(0x00000001)256.2 411.3 Q(/* CIE XYZ */)373.5 411.3 Q
(#de\214ne)72 424.3 Q F0(XcmsCIEuvYF)125.416 424.3 Q(ormat)-.275 E F1
(0x00000002)256.2 424.3 Q(/* CIE u')373.5 424.3 Q(v'Y */)-.55 E
(#de\214ne)72 437.3 Q F0(XcmsCIExyYF)125.416 437.3 Q(ormat)-.275 E F1
(0x00000003)256.2 437.3 Q(/* CIE xyY */)373.5 437.3 Q(#de\214ne)72 450.3
Q F0(XcmsCIELabF)125.416 450.3 Q(ormat)-.275 E F1(0x00000004)256.2 450.3
Q(/* CIE L*a*b* */)373.5 450.3 Q(#de\214ne)72 463.3 Q F0(XcmsCIELuvF)
125.416 463.3 Q(ormat)-.275 E F1(0x00000005)256.2 463.3 Q
(/* CIE L*u*v* */)373.5 463.3 Q(#de\214ne)72 476.3 Q F0(XcmsT)125.416
476.3 Q(ekHVCF)-1.012 E(ormat)-.275 E F1(0x00000006)256.2 476.3 Q(/* T)
373.5 476.3 Q(ekHVC */)-.77 E(#de\214ne)72 489.3 Q F0(XcmsRGBF)125.416
489.3 Q(ormat)-.275 E F1(0x80000000)256.2 489.3 Q(/* RGB De)373.5 489.3
Q(vice */)-.275 E(#de\214ne)72 502.3 Q F0(XcmsRGBiF)125.416 502.3 Q
(ormat)-.275 E F1(0x80000001)256.2 502.3 Q(/* RGB Intensity */)373.5
502.3 Q 36 504.45 36 515.45 DL 36 502.45 36 513.45 DL 41.5 513.7 36
513.7 DL 43.5 513.7 38 513.7 DL 49 513.7 43.5 513.7 DL -.165(Fo)72 538.7
S(rmats for de).165 E
(vice-independent color spaces are distinguishable from those for de)
-.275 E(vice-dependent)-.275 E(spaces by the 32nd bit.)72 551.7 Q(If th\
is bit is set, it indicates that the color speci\214cation is in a de)
5.5 E(vice-)-.275 E(dependent form; otherwise, it is in a de)72 564.7 Q
(vice-independent form.)-.275 E(If the 31st bit is set, this indicates)
5.5 E(that the color space has been added to Xlib at run time \(see sec\
tion 6.12.4\).)72 577.7 Q(The format v)5.5 E(alue for)-.275 E 2.75(ac)72
590.7 S(olor space added at run time may be dif)-2.75 E
(ferent each time the program is e)-.275 E -.165(xe)-.165 G 2.75
(cuted. If).165 F(references)2.75 E
(to such a color space must be made outside the client \(for e)72 603.7
Q(xample, storing a color speci\214cation in)-.165 E 2.75<618c>72 616.7
S(le\), then reference should be made by color space string pre\214x \(\
see)-2.75 E F0(XcmsF)3.666 E(ormatOfPr)-.275 E(e\214x)-.198 E F1(and)72
629.7 Q F0(XcmsPr)3.666 E(e\214xOfF)-.198 E(ormat)-.275 E F1(\).).916 E
(Data types that describe the color speci\214cation encoding for the v)
72 646.6 Q(arious color spaces are de\214ned)-.275 E(as follo)72 659.6 Q
(ws:)-.275 E F0(81)282.5 769 Q 0 Cg EP
%%Page: 82 87
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E .44 LW 36 76.75 36 87.75 DL 36 74.75
36 85.75 DL 41.5 73 36 73 DL 43.5 73 38 73 DL 49 73 43.5 73 DL/F1 11
/Times-Roman@0 SF(typedef double XcmsFloat;)72 95.4 Q(typedef struct {)
72 121.4 Q(unsigned short red;)108 134.4 Q(/* 0x0000 to 0xf)59.674 E .55
-.275(fff *)-.275 H(/).275 E(unsigned short green;)108 147.4 Q
(/* 0x0000 to 0xf)49.29 E .55 -.275(fff *)-.275 H(/).275 E
(unsigned short blue;)108 160.4 Q(/* 0x0000 to 0xf)54.779 E .55 -.275
(fff *)-.275 H(/).275 E 2.75(}X)72 173.4 S 117.883(cmsRGB; /*)-2.75 F
(RGB De)2.75 E(vice */)-.275 E(typedef struct {)72 203.3 Q
(XcmsFloat red;)108 216.3 Q(/* 0.0 to 1.0 */)75.866 E(XcmsFloat green;)
108 229.3 Q(/* 0.0 to 1.0 */)65.482 E(XcmsFloat blue;)108 242.3 Q
(/* 0.0 to 1.0 */)70.971 E 2.75(}X)72 255.3 S 114.825(cmsRGBi; /*)-2.75
F(RGB Intensity */)2.75 E(typedef struct {)72 285.2 Q(XcmsFloat X;)108
298.2 Q(XcmsFloat Y)108 311.2 Q 82.983(;/)-1.012 G 2.75(*0)-82.983 G
(.0 to 1.0 */)-2.75 E(XcmsFloat Z;)108 324.2 Q 2.75(}X)72 337.2 S
100.173(cmsCIEXYZ; /*)-2.75 F(CIE XYZ */)2.75 E(typedef struct {)72
367.1 Q(XcmsFloat u_prime;)108 380.1 Q(/* 0.0 to ~0.6 */)53.25 E
(XcmsFloat v_prime;)108 393.1 Q(/* 0.0 to ~0.6 */)53.25 E(XcmsFloat Y)
108 406.1 Q 82.983(;/)-1.012 G 2.75(*0)-82.983 G(.0 to 1.0 */)-2.75 E
2.75(}X)72 419.1 S(cmsCIEuvY)-2.75 E 107.598(;/)-1.012 G 2.75(*C)
-107.598 G(IE u')-2.75 E(v'Y */)-.55 E(typedef struct {)72 449 Q
(XcmsFloat x;)108 462 Q(/* 0.0 to ~.75 */)84.413 E(XcmsFloat y;)108 475
Q(/* 0.0 to ~.85 */)84.413 E(XcmsFloat Y)108 488 Q 82.983(;/)-1.012 G
2.75(*0)-82.983 G(.0 to 1.0 */)-2.75 E 2.75(}X)72 501 S(cmsCIExyY)-2.75
E 107.598(;/)-1.012 G 2.75(*C)-107.598 G(IE xyY */)-2.75 E
(typedef struct {)72 530.9 Q(XcmsFloat L_star;)108 543.9 Q
(/* 0.0 to 100.0 */)61.808 E(XcmsFloat a_star;)108 556.9 Q
(XcmsFloat b_star;)108 569.9 Q 2.75(}X)72 582.9 S 105.673(cmsCIELab; /*)
-2.75 F(CIE L*a*b* */)2.75 E(typedef struct {)72 612.8 Q
(XcmsFloat L_star;)108 625.8 Q(/* 0.0 to 100.0 */)61.808 E
(XcmsFloat u_star;)108 638.8 Q(XcmsFloat v_star;)108 651.8 Q 2.75(}X)72
664.8 S 105.057(cmsCIELuv; /*)-2.75 F(CIE L*u*v* */)2.75 E
(typedef struct {)72 694.7 Q(XcmsFloat H;)108 707.7 Q
(/* 0.0 to 360.0 */)81.971 E(XcmsFloat V)108 720.7 Q 82.785(;/)-.814 G
2.75(*0)-82.785 G(.0 to 100.0 */)-2.75 E F0(82)282.5 769 Q 0 Cg EP
%%Page: 83 88
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E/F1 11/Times-Roman@0 SF(XcmsFloat C;)
108 85 Q(/* 0.0 to 100.0 */)82.576 E 2.75(}X)72 98 S(cmsT)-2.75 E
100.943(ekHVC; /*)-.77 F -.77(Te)2.75 G(kHVC */).77 E(typedef struct {)
72 127.9 Q(XcmsFloat pad0;)108 140.9 Q(XcmsFloat pad1;)108 153.9 Q
(XcmsFloat pad2;)108 166.9 Q(XcmsFloat pad3;)108 179.9 Q 2.75(}X)72
192.9 S(cmsP)-2.75 E 124.164(ad; /*)-.165 F(four doubles */)2.75 E .44
LW 36 195.05 36 206.05 DL 36 193.05 36 204.05 DL 41.5 204.3 36 204.3 DL
43.5 204.3 38 204.3 DL 49 204.3 43.5 204.3 DL(The de)72 229.3 Q
(vice-dependent formats pro)-.275 E(vided allo)-.165 E 2.75(wc)-.275 G
(olor speci\214cation in:)-2.75 E 23.65<8352>72 246.2 S(GB Intensity \()
-23.65 E F0(XcmsRGBi).916 E F1(\)).916 E
(Red, green, and blue linear intensity v)99.5 263.1 Q
(alues, \215oating-point v)-.275 E(alues from 0.0 to 1.0, where 1.0)
-.275 E(indicates full intensity)99.5 276.1 Q 2.75(,0)-.715 G
(.5 half intensity)-2.75 E 2.75(,a)-.715 G(nd so on.)-2.75 E 23.65<8352>
72 293 S(GB De)-23.65 E(vice \()-.275 E F0(XcmsRGB).916 E F1(\)).916 E
(Red, green, and blue v)99.5 309.9 Q
(alues appropriate for the speci\214ed output de)-.275 E(vice.)-.275 E
F0(XcmsRGB)6.416 E F1 -.275(va)3.666 G(lues).275 E
(are of type unsigned short, scaled from 0 to 65535 inclusi)99.5 322.9 Q
-.165(ve)-.275 G 2.75(,a).165 G(nd are interchangeable with)-2.75 E
(the red, green, and blue v)99.5 335.9 Q(alues in an)-.275 E F0(XColor)
3.666 E F1(structure.)3.666 E
(It is important to note that RGB Intensity v)72 352.8 Q
(alues are not g)-.275 E(amma corrected v)-.055 E 2.75(alues. In)-.275 F
(contrast,)2.75 E(RGB De)72 365.8 Q(vice v)-.275 E
(alues generated as a result of con)-.275 E -.165(ve)-.44 G
(rting color speci\214cations are al).165 E -.11(wa)-.11 G(ys g).11 E
(amma)-.055 E(corrected, and RGB De)72 378.8 Q(vice v)-.275 E
(alues acquired as a result of querying a colormap or passed in by the)
-.275 E(client are assumed by Xlib to be g)72 391.8 Q(amma corrected.)
-.055 E(The term)5.5 E/F2 11/Times-Italic@0 SF(RGB value)2.75 E F1
(in this manual al)2.75 E -.11(wa)-.11 G(ys).11 E(refers to an RGB De)72
404.8 Q(vice v)-.275 E(alue.)-.275 E F0 2.75(6.2. Color)72 430.8 R
(Strings)2.75 E F1(Xlib pro)72 447.7 Q
(vides a mechanism for using string names for colors.)-.165 E 2.75(Ac)
5.5 G(olor string may either contain)-2.75 E
(an abstract color name or a numerical color speci\214cation.)72 460.7 Q
(Color strings are case-insensiti)5.5 E -.165(ve)-.275 G(.).165 E
(Color strings are used in the follo)72 477.6 Q(wing functions:)-.275 E
<83>72 494.5 Q F0(XAllocNamedColor)24.566 E F1<83>72 511.4 Q F0
(XcmsAllocNamedColor)24.566 E F1<83>72 528.3 Q F0(XLookupColor)24.566 E
F1<83>72 545.2 Q F0(XcmsLookupColor)24.566 E F1<83>72 562.1 Q F0(XP)
24.566 E(arseColor)-.11 E F1<83>72 579 Q F0(XStor)24.566 E(eNamedColor)
-.198 E F1(Xlib supports the use of abstract color names, for e)72 595.9
Q(xample, red or blue.)-.165 E 2.75(Av)5.5 G(alue for this abstract)
-3.025 E
(name is obtained by searching one or more color name databases.)72
608.9 Q(Xlib \214rst searches zero or)5.5 E
(more client-side databases; the number)72 621.9 Q 2.75(,l)-.44 G
(ocation, and content of these databases is implementa-)-2.75 E
(tion-dependent and might depend on the current locale.)72 634.9 Q
(If the name is not found, Xlib then looks)5.5 E
(for the color in the X serv)72 647.9 Q(er')-.165 E 2.75(sd)-.605 G 2.75
(atabase. If)-2.75 F
(the color name is not in the Host Portable Character)2.75 E
(Encoding, the result is implementation-dependent.)72 660.9 Q 2.75(An)72
677.8 S(umerical color speci\214cation consists of a color space name a\
nd a set of v)-2.75 E(alues in the follo)-.275 E(wing)-.275 E(syntax:)72
690.8 Q F0(83)282.5 769 Q 0 Cg EP
%%Page: 84 89
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E .44 LW 36 76.75 36 87.75 DL 36 74.75
36 85.75 DL 41.5 73 36 73 DL 43.5 73 38 73 DL 49 73 43.5 73 DL/F1 11
/Times-Italic@0 SF(<color_space_name>)72 91.5 Q/F2 11/Times-Roman@0 SF
(:)A F1(<value>/.../<value>)A 36 93.65 36 104.65 DL 36 91.65 36 102.65
DL 41.5 102.9 36 102.9 DL 43.5 102.9 38 102.9 DL 49 102.9 43.5 102.9 DL
F2(The follo)72 127.9 Q(wing are e)-.275 E(xamples of v)-.165 E
(alid color strings.)-.275 E("CIEXYZ:0.3227/0.28133/0.2493")72 151.3 Q
("RGBi:1.0/0.0/0.0")72 164.3 Q("r)72 177.3 Q(gb:00/f)-.198 E(f/00")-.275
E("CIELuv:50.0/0.0/0.0")72 190.3 Q
(The syntax and semantics of numerical speci\214cations are gi)72 209.8
Q -.165(ve)-.275 G 2.75(nf).165 G(or each standard color space in)-2.75
E(the follo)72 222.8 Q(wing sections.)-.275 E F0 2.75(6.2.1. RGB)72
248.8 R(De)2.75 E(vice String Speci\214cation)-.165 E F2(An RGB De)72
265.7 Q(vice speci\214cation is identi\214ed by the pre\214x `)-.275 E
(`r)-.814 E(gb:')-.198 E 2.75('a)-.814 G(nd conforms to the follo)-2.75
E(wing)-.275 E(syntax:)72 278.7 Q -.198(rg)72 302.1 S(b:).198 E F1(<r)A
(ed>/<gr)-.407 E(een>/<blue>)-.407 E(<r)83 328.1 Q(ed>)-.407 E F2(,)A F1
(<gr)2.75 E(een>)-.407 E F2(,)A F1(<blue>)2.75 E F2(:=)2.75 E F1(h)2.75
E F2(|)2.75 E F1(hh)2.75 E F2(|)2.75 E F1(hhh)2.75 E F2(|)2.75 E F1
(hhhh)2.75 E(h)83 341.1 Q F2(:= single he)2.75 E
(xadecimal digits \(case insigni\214cant\))-.165 E(Note that)72 364.5 Q
F1(h)2.75 E F2(indicates the v)2.75 E(alue scaled in 4 bits,)-.275 E F1
(hh)2.75 E F2(the v)2.75 E(alue scaled in 8 bits,)-.275 E F1(hhh)2.75 E
F2(the v)2.75 E(alue scaled)-.275 E(in 12 bits, and)72 377.5 Q F1(hhhh)
2.75 E F2(the v)2.75 E(alue scaled in 16 bits, respecti)-.275 E -.165
(ve)-.275 G(ly).165 E(.)-.715 E -.88(Ty)72 394.4 S(pical e).88 E
(xamples are the strings `)-.165 E(`r)-.814 E(gb:ea/75/52')-.198 E 2.75
('a)-.814 G(nd `)-2.75 E(`r)-.814 E(gb:ccc/320/320')-.198 E(', b)-.814 E
(ut mix)-.22 E(ed numbers of)-.165 E(he)72 407.4 Q
(xadecimal digit strings \(`)-.165 E(`r)-.814 E(gb:f)-.198 E(f/a5/0')
-.275 E 2.75('a)-.814 G(nd `)-2.75 E(`r)-.814 E(gb:ccc/32/0')-.198 E
('\) are also allo)-.814 E(wed.)-.275 E -.165(Fo)72 424.3 S 2.75(rb).165
G(ackw)-2.75 E(ard compatibility)-.11 E 2.75(,a)-.715 G 2.75(no)-2.75 G
(lder syntax for RGB De)-2.75 E(vice is supported, b)-.275 E
(ut its continued use is)-.22 E(not encouraged.)72 437.3 Q
(The syntax is an initial sharp sign character follo)5.5 E
(wed by a numeric speci\214cation,)-.275 E(in one of the follo)72 450.3
Q(wing formats:)-.275 E 113.134(#RGB \(4)72 473.7 R(bits each\))2.75 E
90.518(#RRGGBB \(8)72 486.7 R(bits each\))2.75 E 67.902(#RRRGGGBBB \(12)
72 499.7 R(bits each\))2.75 E 45.286(#RRRRGGGGBBBB \(16)72 512.7 R
(bits each\))2.75 E(The R, G, and B represent single he)72 536.1 Q
(xadecimal digits.)-.165 E(When fe)5.5 E
(wer than 16 bits each are speci\214ed,)-.275 E(the)72 549.1 Q 2.75(yr)
-.165 G(epresent the most signi\214cant bits of the v)-2.75 E
(alue \(unlik)-.275 E 2.75(et)-.11 G(he `)-2.75 E(`r)-.814 E(gb:')-.198
E 2.75('s)-.814 G(yntax, in which v)-2.75 E(alues are)-.275 E 2.75
(scaled\). F)72 562.1 R(or e)-.165 E(xample, the string `)-.165 E
(`#3a7')-.814 E 2.75('i)-.814 G 2.75(st)-2.75 G(he same as `)-2.75 E
(`#3000a0007000')-.814 E('.)-.814 E F0 2.75(6.2.2. RGB)72 588.1 R
(Intensity String Speci\214cation)2.75 E F2
(An RGB intensity speci\214cation is identi\214ed by the pre\214x `)72
605 Q(`r)-.814 E(gbi:')-.198 E 2.75('a)-.814 G(nd conforms to the follo)
-2.75 E(wing)-.275 E(syntax:)72 618 Q -.198(rg)72 641.4 S(bi:).198 E F1
(<r)A(ed>/<gr)-.407 E(een>/<blue>)-.407 E F2
(Note that red, green, and blue are \215oating-point v)72 664.8 Q
(alues between 0.0 and 1.0, inclusi)-.275 E -.165(ve)-.275 G 5.5(.T).165
G(he input)-5.5 E(format for these v)72 677.8 Q(alues is an optional si\
gn, a string of numbers possibly containing a decimal)-.275 E
(point, and an optional e)72 690.8 Q
(xponent \214eld containing an E or e follo)-.165 E
(wed by a possibly signed inte)-.275 E(ger)-.165 E(string.)72 703.8 Q F0
(84)282.5 769 Q 0 Cg EP
%%Page: 85 90
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E 2.75(6.2.3. De)72 85 R
(vice-Independent String Speci\214cations)-.165 E/F1 11/Times-Roman@0 SF
(The standard de)72 101.9 Q(vice-independent string speci\214cations ha)
-.275 E .33 -.165(ve t)-.22 H(he follo).165 E(wing syntax:)-.275 E
(CIEXYZ:)72 125.3 Q/F2 11/Times-Italic@0 SF(<X>/<Y>/<Z>)A F1(CIEuvY)72
138.3 Q(:)-1.012 E F2(<u>/<v>/<Y>)A F1(CIExyY)72 151.3 Q(:)-1.012 E F2
(<x>/<y>/<Y>)A F1(CIELab:)72 164.3 Q F2(<L>/<a>/<b>)A F1(CIELuv:)72
177.3 Q F2(<L>/<u>/<v>)A F1 -.77(Te)72 190.3 S(kHVC:).77 E F2
(<H>/<V>/<C>)A F1(All of the v)72 213.7 Q(alues \(C, H, V)-.275 E 2.75
(,X)-1.419 G 2.75(,Y)-2.75 G 2.75(,Z)-4.169 G 2.75(,a)-2.75 G 2.75(,b)
-2.75 G 2.75(,u)-2.75 G 2.75(,v)-2.75 G 2.75(,y)-3.465 G 2.75(,x)-3.465
G 2.75(\)a)-2.75 G(re \215oating-point v)-2.75 E 2.75(alues. The)-.275 F
(syntax for these)2.75 E -.275(va)72 226.7 S(lues is an optional plus o\
r minus sign, a string of digits possibly containing a decimal point, a\
nd).275 E(an optional e)72 239.7 Q(xponent \214eld consisting of an `)
-.165 E(`E')-.814 E 2.75('o)-.814 G 2.75(r`)-2.75 G(`e')-3.564 E 2.75
('f)-.814 G(ollo)-2.75 E(wed by an optional plus or minus fol-)-.275 E
(lo)72 252.7 Q(wed by a string of digits.)-.275 E F0 2.75(6.3. Color)72
278.7 R(Con)2.75 E -.11(ve)-.44 G(rsion Contexts and Gamut Mapping).11 E
F1(When Xlib con)72 295.6 Q -.165(ve)-.44 G(rts de).165 E
(vice-independent color speci\214cations into de)-.275 E
(vice-dependent speci\214cations)-.275 E(and vice v)72 308.6 Q
(ersa, it uses kno)-.165 E
(wledge about the color limitations of the screen hardw)-.275 E 2.75
(are. This)-.11 F(infor)2.75 E(-)-.22 E(mation, typically called the de)
72 321.6 Q(vice pro\214le, is a)-.275 E -.275(va)-.22 G
(ilable in a Color Con).275 E -.165(ve)-.44 G(rsion Conte).165 E
(xt \(CCC\).)-.165 E
(Because a speci\214ed color may be outside the color g)72 338.5 Q
(amut of the tar)-.055 E(get screen and the white point)-.198 E
(associated with the color speci\214cation may dif)72 351.5 Q
(fer from the white point inherent to the screen, Xlib)-.275 E
(applies g)72 364.5 Q
(amut mapping when it encounters certain conditions:)-.055 E 23.65<8347>
72 381.4 S(amut compression occurs when con)-23.65 E -.165(ve)-.44 G
(rsion of de).165 E(vice-independent color speci\214cations to)-.275 E
(de)99.5 394.4 Q(vice-dependent color speci\214cations results in a col\
or out of the tar)-.275 E(get screen')-.198 E 2.75(sg)-.605 G(amut.)
-2.805 E 23.65<8357>72 411.3 S
(hite adjustment occurs when the inherent white point of the screen dif)
-23.65 E(fers from the white)-.275 E(point assumed by the client.)99.5
424.3 Q(Gamut handling methods are stored as callbacks in the CCC, whic\
h in turn are used by the color)72 441.2 Q(space con)72 454.2 Q -.165
(ve)-.44 G(rsion routines.).165 E
(Client data is also stored in the CCC for each callback.)5.5 E
(The CCC also)5.5 E(contains the white point the client assumes to be a\
ssociated with color speci\214cations \(that is, the)72 467.2 Q
(Client White Point\).)72 480.2 Q(The client can specify the g)5.5 E
(amut handling callbacks and client data as well)-.055 E
(as the Client White Point.)72 493.2 Q
(Xlib does not preclude the X client from performing other forms of)5.5
E -.055(ga)72 506.2 S(mut handling \(for e).055 E(xample, g)-.165 E
(amut e)-.055 E(xpansion\); ho)-.165 E(we)-.275 E -.165(ve)-.275 G .88
-.44(r, X).165 H(lib does not pro).44 E(vide direct support)-.165 E
(for g)72 519.2 Q(amut handling other than white adjustment and g)-.055
E(amut compression.)-.055 E(Associated with each colormap is an initial\
 CCC transparently generated by Xlib)72 536.1 Q 5.5(.T)-.44 G(herefore,)
-5.5 E(when you specify a colormap as an ar)72 549.1 Q
(gument to an Xlib function, you are indirectly specifying a)-.198 E
2.75(CCC. There)72 562.1 R(is a def)2.75 E
(ault CCC associated with each screen.)-.11 E(Ne)5.5 E
(wly created CCCs inherit attrib)-.275 E(utes)-.22 E(from the def)72
575.1 Q(ault CCC, so the def)-.11 E(ault CCC attrib)-.11 E
(utes can be modi\214ed to af)-.22 E(fect ne)-.275 E 2.75(wC)-.275 G
(CCs.)-2.75 E(Xcms functions in which g)72 592 Q
(amut mapping can occur return)-.055 E F0(Status)3.666 E F1(and ha)3.666
E .33 -.165(ve s)-.22 H(peci\214c status v).165 E(alues)-.275 E
(de\214ned for them, as follo)72 605 Q(ws:)-.275 E<83>72 621.9 Q F0
(XcmsF)24.566 E(ailur)-.275 E(e)-.198 E F1
(indicates that the function f)3.666 E(ailed.)-.11 E<83>72 638.8 Q F0
(XcmsSuccess)24.566 E F1(indicates that the function succeeded.)3.666 E
(In addition, if the function performed)5.5 E(an)99.5 651.8 Q 2.75(yc)
-.165 G(olor con)-2.75 E -.165(ve)-.44 G
(rsion, the colors did not need to be compressed.).165 E<83>72 668.7 Q
F0(XcmsSuccessW)24.566 E(ithCompr)-.198 E(ession)-.198 E F1
(indicates the function performed color con)3.666 E -.165(ve)-.44 G
(rsion and at).165 E(least one of the colors needed to be compressed.)
99.5 681.7 Q(The g)5.5 E(amut compression method is deter)-.055 E(-)-.22
E(mined by the g)99.5 694.7 Q(amut compression procedure in the CCC tha\
t is speci\214ed directly as a func-)-.055 E(tion ar)99.5 707.7 Q(gumen\
t or in the CCC indirectly speci\214ed by means of the colormap ar)-.198
E(gument.)-.198 E F0(85)282.5 769 Q 0 Cg EP
%%Page: 86 91
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E 2.75(6.4. Cr)72 85 R
(eating, Copying, and Destr)-.198 E(oying Colormaps)-.198 E/F1 11
/Times-Roman@0 SF 1.76 -.88(To c)72 101.9 T
(reate a colormap for a screen, use).88 E F0(XCr)3.666 E(eateColormap)
-.198 E F1(.).916 E .44 LW 36 119.65 36 130.65 DL 36 117.65 36 128.65 DL
41.5 115.9 36 115.9 DL 43.5 115.9 38 115.9 DL 49 115.9 43.5 115.9 DL
(Colormap XCreateColormap)72 131.8 Q(\().916 E/F2 11/Times-Italic@0 SF
(display).916 E F1(,)A F2(w)2.75 E F1(,).916 E F2(visual)2.75 E F1(,)
.916 E F2(alloc)2.75 E F1(\)).916 E(Display *)88.5 144.8 Q F2(display)A
F1(;).916 E -.44(Wi)88.5 157.8 S(ndo).44 E(w)-.275 E F2(w)2.75 E F1(;)
.916 E -.66(Vi)88.5 170.8 S(sual *).66 E F2(visual)A F1(;).916 E(int)
88.5 183.8 Q F2(alloc)2.75 E F1(;).916 E F2(display)72 204.6 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2(w)72 221.5 Q F1(Speci\214es the windo)64.663 E 2.75(wo)-.275 G 2.75
(nw)-2.75 G(hose screen you w)-2.75 E(ant to create a colormap.)-.11 E
F2(visual)72 238.4 Q F1
(Speci\214es a visual type supported on the screen.)45.721 E
(If the visual type is not one sup-)5.5 E(ported by the screen, a)144
251.4 Q F0(BadMatch)3.666 E F1(error results.)3.666 E F2(alloc)72 268.3
Q F1(Speci\214es the colormap entries to be allocated.)50 E -1.21(Yo)5.5
G 2.75(uc)1.21 G(an pass)-2.75 E F0(AllocNone)3.666 E F1(or)3.666 E F0
(Allo-)3.666 E(cAll)144 281.3 Q F1(.).916 E 36 276.95 36 287.95 DL 36
274.95 36 285.95 DL 41.5 286.2 36 286.2 DL 43.5 286.2 38 286.2 DL 49
286.2 43.5 286.2 DL(The)72 311.2 Q F0(XCr)3.666 E(eateColormap)-.198 E
F1(function creates a colormap of the speci\214ed visual type for the s\
creen on)3.666 E(which the speci\214ed windo)72 324.2 Q 2.75(wr)-.275 G
(esides and returns the colormap ID associated with it.)-2.75 E
(Note that the)5.5 E(speci\214ed windo)72 337.2 Q 2.75(wi)-.275 G 2.75
(so)-2.75 G(nly used to determine the screen.)-2.75 E(The initial v)72
354.1 Q
(alues of the colormap entries are unde\214ned for the visual classes)
-.275 E F0(GrayScale)3.666 E F1(,).916 E F0(Pseu-)3.666 E(doColor)72
367.1 Q F1 2.75(,a).916 G(nd)-2.75 E F0(Dir)3.666 E(ectColor)-.198 E F1
5.5(.F).916 G(or)-5.665 E F0(StaticGray)3.666 E F1(,).916 E F0
(StaticColor)3.666 E F1 2.75(,a).916 G(nd)-2.75 E F0 -.814(Tr)3.666 G
(ueColor).814 E F1 2.75(,t).916 G(he entries ha)-2.75 E -.165(ve)-.22 G
(de\214ned v)72 380.1 Q(alues, b)-.275 E(ut those v)-.22 E
(alues are speci\214c to the visual and are not de\214ned by X.)-.275 E
-.165(Fo)5.5 G(r).165 E F0(Stat-)3.666 E(icGray)72 393.1 Q F1(,).916 E
F0(StaticColor)3.666 E F1 2.75(,a).916 G(nd)-2.75 E F0 -.814(Tr)3.666 G
(ueColor).814 E F1 2.75(,a).916 G(lloc must be)-2.75 E F0(AllocNone)
3.666 E F1 2.75(,o).916 G 2.75(ra)-2.75 G F0(BadMatch).916 E F1
(error results.)3.666 E -.165(Fo)72 406.1 S 2.75(rt).165 G
(he other visual classes, if alloc is)-2.75 E F0(AllocNone)3.666 E F1
2.75(,t).916 G(he colormap initially has no allocated entries,)-2.75 E
(and clients can allocate them.)72 419.1 Q -.165(Fo)5.5 G 2.75(ri).165 G
(nformation about the visual types, see section 3.1.)-2.75 E
(If alloc is)72 436 Q F0(AllocAll)3.666 E F1 2.75(,t).916 G
(he entire colormap is allocated writable.)-2.75 E(The initial v)5.5 E
(alues of all allocated)-.275 E(entries are unde\214ned.)72 449 Q -.165
(Fo)5.5 G(r).165 E F0(GrayScale)3.666 E F1(and)3.666 E F0(PseudoColor)
3.666 E F1 2.75(,t).916 G(he ef)-2.75 E(fect is as if an)-.275 E F0
(XAllocColorCells)3.666 E F1(call returned all pix)72 462 Q(el v)-.165 E
(alues from zero to N \255 1, where N is the colormap entries v)-.275 E
(alue in the)-.275 E(speci\214ed visual.)72 475 Q -.165(Fo)5.5 G(r).165
E F0(Dir)3.666 E(ectColor)-.198 E F1 2.75(,t).916 G(he ef)-2.75 E
(fect is as if an)-.275 E F0(XAllocColorPlanes)3.666 E F1
(call returned a pix)3.666 E(el)-.165 E -.275(va)72 488 S
(lue of zero and red_mask, green_mask, and blue_mask v).275 E
(alues containing the same bits as the)-.275 E
(corresponding masks in the speci\214ed visual.)72 501 Q(Ho)5.5 E(we)
-.275 E -.165(ve)-.275 G .88 -.44(r, i).165 H 2.75(na).44 G
(ll cases, none of these entries can be)-2.75 E(freed by using)72 514 Q
F0(XFr)3.666 E(eeColors)-.198 E F1(.).916 E F0(XCr)72.916 530.9 Q
(eateColormap)-.198 E F1(can generate)3.666 E F0(BadAlloc)3.666 E F1(,)
.916 E F0(BadMatch)3.666 E F1(,).916 E F0(BadV)3.666 E(alue)-1.012 E F1
2.75(,a).916 G(nd)-2.75 E F0(BadW)3.666 E(indo)-.198 E(w)-.11 E F1
(errors.)3.666 E 1.76 -.88(To c)72 560.8 T(reate a ne).88 E 2.75(wc)
-.275 G(olormap when the allocation out of a pre)-2.75 E
(viously shared colormap has f)-.275 E(ailed)-.11 E
(because of resource e)72 573.8 Q(xhaustion, use)-.165 E F0
(XCopyColormapAndFr)3.666 E(ee)-.198 E F1(.).916 E 36 591.55 36 602.55
DL 36 589.55 36 600.55 DL 41.5 587.8 36 587.8 DL 43.5 587.8 38 587.8 DL
49 587.8 43.5 587.8 DL(Colormap XCop)72 603.7 Q -1.834
(yColormapAndFree \()-.11 F F2(display).916 E F1(,)A F2(colormap)2.75 E
F1(\)).916 E(Display *)88.5 616.7 Q F2(display)A F1(;).916 E(Colormap)
88.5 629.7 Q F2(colormap)2.75 E F1(;).916 E F2(display)72 650.5 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2(colormap)72 667.4 Q F1(Speci\214es the colormap.)29.837 E 36 663.05
36 674.05 DL 36 661.05 36 672.05 DL 41.5 672.3 36 672.3 DL 43.5 672.3 38
672.3 DL 49 672.3 43.5 672.3 DL(The)72 697.3 Q F0(XCopyColormapAndFr)
3.666 E(ee)-.198 E F1
(function creates a colormap of the same visual type and for the)3.666 E
(same screen as the speci\214ed colormap and returns the ne)72 710.3 Q
2.75(wc)-.275 G(olormap ID.)-2.75 E(It also mo)5.5 E -.165(ve)-.165 G
2.75(sa).165 G(ll of the)-2.75 E(client')72 723.3 Q 2.75(se)-.605 G
(xisting allocation from the speci\214ed colormap to the ne)-2.915 E
2.75(wc)-.275 G(olormap with their color)-2.75 E F0(86)282.5 769 Q 0 Cg
EP
%%Page: 87 92
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E/F1 11/Times-Roman@0 SF -.275(va)72 85
S(lues intact and their read-only or writable characteristics intact an\
d frees those entries in the).275 E(speci\214ed colormap.)72 98 Q
(Color v)5.5 E(alues in other entries in the ne)-.275 E 2.75(wc)-.275 G
(olormap are unde\214ned.)-2.75 E(If the speci-)5.5 E(\214ed colormap w)
72 111 Q(as created by the client with alloc set to)-.11 E F0(AllocAll)
3.666 E F1 2.75(,t).916 G(he ne)-2.75 E 2.75(wc)-.275 G
(olormap is also cre-)-2.75 E(ated with)72 124 Q F0(AllocAll)3.666 E F1
2.75(,a).916 G(ll color v)-2.75 E
(alues for all entries are copied from the speci\214ed colormap, and)
-.275 E(then all entries in the speci\214ed colormap are freed.)72 137 Q
(If the speci\214ed colormap w)5.5 E(as not created by)-.11 E
(the client with)72 150 Q F0(AllocAll)3.666 E F1 2.75(,t).916 G
(he allocations to be mo)-2.75 E -.165(ve)-.165 G 2.75(da).165 G
(re all those pix)-2.75 E(els and planes that ha)-.165 E -.165(ve)-.22 G
(been allocated by the client using)72 163 Q F0(XAllocColor)3.666 E F1
(,).916 E F0(XAllocNamedColor)3.666 E F1(,).916 E F0(XAllocColorCells)
3.666 E F1 2.75(,o).916 G(r)-2.75 E F0(XAllocColorPlanes)72.916 176 Q F1
(and that ha)3.666 E .33 -.165(ve n)-.22 H(ot been freed since the).165
E 2.75(yw)-.165 G(ere allocated.)-2.75 E F0(XCopyColormapAndFr)72.916
192.9 Q(ee)-.198 E F1(can generate)3.666 E F0(BadAlloc)3.666 E F1(and)
3.666 E F0(BadColor)3.666 E F1(errors.)3.666 E 1.76 -.88(To d)72 222.8 T
(estro).88 E 2.75(yac)-.11 G(olormap, use)-2.75 E F0(XFr)3.666 E
(eeColormap)-.198 E F1(.).916 E .44 LW 36 240.55 36 251.55 DL 36 238.55
36 249.55 DL 41.5 236.8 36 236.8 DL 43.5 236.8 38 236.8 DL 49 236.8 43.5
236.8 DL -1.834(XFreeColormap \()72 252.7 R/F2 11/Times-Italic@0 SF
(display).916 E F1(,)A F2(colormap)2.75 E F1(\)).916 E(Display *)88.5
265.7 Q F2(display)A F1(;).916 E(Colormap)88.5 278.7 Q F2(colormap)2.75
E F1(;).916 E F2(display)72 299.5 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2(colormap)72 316.4 Q F1(Speci\214es the colormap that you w)29.837 E
(ant to destro)-.11 E -.715(y.)-.11 G 36 312.05 36 323.05 DL 36 310.05
36 321.05 DL 41.5 321.3 36 321.3 DL 43.5 321.3 38 321.3 DL 49 321.3 43.5
321.3 DL(The)72 346.3 Q F0(XFr)3.666 E(eeColormap)-.198 E F1(function d\
eletes the association between the colormap resource ID and the)3.666 E
(colormap and frees the colormap storage.)72 359.3 Q(Ho)5.5 E(we)-.275 E
-.165(ve)-.275 G .88 -.44(r, t).165 H(his function has no ef).44 E
(fect on the def)-.275 E(ault col-)-.11 E(ormap for a screen.)72 372.3 Q
(If the speci\214ed colormap is an installed map for a screen, it is un\
installed)5.5 E(\(see)72 385.3 Q F0(XUninstallColormap)3.666 E F1 2.75
(\). If).916 F
(the speci\214ed colormap is de\214ned as the colormap for a windo)2.75
E(w)-.275 E(\(by)72 398.3 Q F0(XCr)3.666 E(eateW)-.198 E(indo)-.198 E(w)
-.11 E F1(,).916 E F0(XSetW)3.666 E(indo)-.198 E(wColormap)-.11 E F1
2.75(,o).916 G(r)-2.75 E F0(XChangeW)3.666 E(indo)-.198 E(wAttrib)-.11 E
(utes)-.22 E F1(\),).916 E F0(XFr)3.666 E(eeCol-)-.198 E(ormap)72 411.3
Q F1(changes the colormap associated with the windo)3.666 E 2.75(wt)
-.275 G(o)-2.75 E F0(None)3.666 E F1(and generates a)3.666 E F0
(Colormap-)3.666 E(Notify)72 424.3 Q F1 -2.365 -.275(ev e)3.666 H 2.75
(nt. X).275 F(does not de\214ne the colors displayed for a windo)2.75 E
2.75(ww)-.275 G(ith a colormap of)-2.75 E F0(None)3.666 E F1(.).916 E F0
(XFr)72.916 441.2 Q(eeColormap)-.198 E F1(can generate a)3.666 E F0
(BadColor)3.666 E F1(error)3.666 E(.)-.605 E F0 2.75(6.5. Mapping)72
467.2 R(Color Names to V)2.75 E(alues)-1.012 E F1 1.76 -.88(To m)72
497.1 T(ap a color name to an RGB v).88 E(alue, use)-.275 E F0
(XLookupColor)3.666 E F1(.).916 E F0(87)282.5 769 Q 0 Cg EP
%%Page: 88 93
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E .44 LW 36 76.75 36 87.75 DL 36 74.75
36 85.75 DL 41.5 73 36 73 DL 43.5 73 38 73 DL 49 73 43.5 73 DL/F1 11
/Times-Roman@0 SF(Status XLookupColor)72 88.9 Q(\().916 E/F2 11
/Times-Italic@0 SF(display).916 E F1(,)A F2(colormap)2.75 E F1(,)A F2
(color_name)2.75 E F1(,)A F2 -.22(ex)2.75 G(act_def_r).22 E(eturn)-.407
E F1(,).916 E F2(scr)2.75 E(een_def_r)-.407 E(eturn)-.407 E F1(\)).916 E
(Display *)88.5 101.9 Q F2(display)A F1(;).916 E(Colormap)88.5 114.9 Q
F2(colormap)2.75 E F1(;).916 E(char *)88.5 127.9 Q F2(color_name)A F1(;)
.916 E(XColor *)88.5 140.9 Q F2 -.22(ex)C(act_def_r).22 E(eturn)-.407 E
F1 2.75(,*).916 G F2(scr)-2.75 E(een_def_r)-.407 E(eturn)-.407 E F1(;)
.916 E F2(display)72 161.7 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2(colormap)72 178.6 Q F1(Speci\214es the colormap.)29.837 E F2
(color_name)72 195.5 Q F1(Speci\214es the color name string \(for e)
19.453 E(xample, red\) whose color de\214nition struc-)-.165 E
(ture you w)144 208.5 Q(ant returned.)-.11 E F2 -.22(ex)72 225.4 S
(act_def_r).22 E(eturn)-.407 E F1(Returns the e)144 238.4 Q(xact RGB v)
-.165 E(alues.)-.275 E F2(scr)72 255.3 Q(een_def_r)-.407 E(eturn)-.407 E
F1(Returns the closest RGB v)144 268.3 Q(alues pro)-.275 E
(vided by the hardw)-.165 E(are.)-.11 E 36 263.95 36 274.95 DL 36 261.95
36 272.95 DL 41.5 273.2 36 273.2 DL 43.5 273.2 38 273.2 DL 49 273.2 43.5
273.2 DL(The)72 298.2 Q F0(XLookupColor)3.666 E F1(function looks up th\
e string name of a color with respect to the screen asso-)3.666 E
(ciated with the speci\214ed colormap.)72 311.2 Q(It returns both the e)
5.5 E(xact color v)-.165 E(alues and the closest v)-.275 E(alues)-.275 E
(pro)72 324.2 Q(vided by the screen with respect to the visual type of \
the speci\214ed colormap.)-.165 E(If the color)5.5 E(name is not in the\
 Host Portable Character Encoding, the result is implementation-depende\
nt.)72 337.2 Q(Use of uppercase or lo)72 350.2 Q
(wercase does not matter)-.275 E(.)-.605 E F0(XLookupColor)6.416 E F1
(returns nonzero if the name is)3.666 E(resolv)72 363.2 Q
(ed; otherwise, it returns zero.)-.165 E F0(XLookupColor)72.916 380.1 Q
F1(can generate a)3.666 E F0(BadColor)3.666 E F1(error)3.666 E(.)-.605 E
1.76 -.88(To m)72 410 T(ap a color name to the e).88 E(xact RGB v)-.165
E(alue, use)-.275 E F0(XP)3.666 E(arseColor)-.11 E F1(.).916 E 36 427.75
36 438.75 DL 36 425.75 36 436.75 DL 41.5 424 36 424 DL 43.5 424 38 424
DL 49 424 43.5 424 DL(Status XP)72 439.9 Q -1.834(arseColor \()-.165 F
F2(display).916 E F1(,)A F2(colormap)2.75 E F1(,).916 E F2(spec)3.666 E
F1(,).916 E F2 -.22(ex)2.75 G(act_def_r).22 E(eturn)-.407 E F1(\)).916 E
(Display *)94 452.9 Q F2(display)A F1(;).916 E(Colormap)94 465.9 Q F2
(colormap)2.75 E F1(;).916 E(char *)94 478.9 Q F2(spec)A F1(;).916 E
(XColor *)94 491.9 Q F2 -.22(ex)C(act_def_r).22 E(eturn)-.407 E F1(;)
.916 E F2(display)72 512.7 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2(colormap)72 529.6 Q F1(Speci\214es the colormap.)29.837 E F2(spec)72
546.5 Q F1(Speci\214es the color name string; case is ignored.)52.453 E
F2 -.22(ex)72 563.4 S(act_def_r).22 E(eturn)-.407 E F1(Returns the e)144
576.4 Q(xact color v)-.165 E(alue for later use and sets the)-.275 E F0
(DoRed)3.666 E F1(,).916 E F0(DoGr)3.666 E(een)-.198 E F1 2.75(,a).916 G
(nd)-2.75 E F0(DoBlue)144.916 589.4 Q F1(\215ags.)3.666 E 36 585.05 36
596.05 DL 36 583.05 36 594.05 DL 41.5 594.3 36 594.3 DL 43.5 594.3 38
594.3 DL 49 594.3 43.5 594.3 DL(The)72 619.3 Q F0(XP)3.666 E(arseColor)
-.11 E F1(function looks up the string name of a color with respect to \
the screen associ-)3.666 E(ated with the speci\214ed colormap.)72 632.3
Q(It returns the e)5.5 E(xact color v)-.165 E 2.75(alue. If)-.275 F
(the color name is not in the)2.75 E(Host Portable Character Encoding, \
the result is implementation-dependent.)72 645.3 Q(Use of uppercase or)
5.5 E(lo)72 658.3 Q(wercase does not matter)-.275 E(.)-.605 E F0(XP)
6.416 E(arseColor)-.11 E F1(returns nonzero if the name is resolv)3.666
E(ed; otherwise, it)-.165 E(returns zero.)72 671.3 Q F0(XP)72.916 688.2
Q(arseColor)-.11 E F1(can generate a)3.666 E F0(BadColor)3.666 E F1
(error)3.666 E(.)-.605 E 1.76 -.88(To m)72 718.1 T
(ap a color name to a v).88 E(alue in an arbitrary color space, use)
-.275 E F0(XcmsLookupColor)3.666 E F1(.).916 E F0(88)282.5 769 Q 0 Cg EP
%%Page: 89 94
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E .44 LW 36 76.75 36 87.75 DL 36 74.75
36 85.75 DL 41.5 73 36 73 DL 43.5 73 38 73 DL 49 73 43.5 73 DL/F1 11
/Times-Roman@0 SF(Status XcmsLookupColor)72 88.9 Q(\().916 E/F2 11
/Times-Italic@0 SF(display).916 E F1(,)A F2(colormap)2.75 E F1(,).916 E
F2(color_string)2.75 E F1(,).916 E F2(color_e)2.75 E(xact_r)-.22 E
(eturn)-.407 E F1(,).916 E F2(color_scr)2.75 E(een_r)-.407 E(eturn)-.407
E F1(,).916 E F2 -.407(re)290.75 101.9 S(sult_format).407 E F1(\)).916 E
(Display *)88.5 114.9 Q F2(display)A F1(;).916 E(Colormap)88.5 127.9 Q
F2(colormap)2.75 E F1(;).916 E(char *)88.5 140.9 Q F2(color_string)A F1
(;).916 E(XcmsColor *)88.5 153.9 Q F2(color_e)A(xact_r)-.22 E(eturn)
-.407 E F1 2.75(,*).916 G F2(color_scr)-2.75 E(een_r)-.407 E(eturn)-.407
E F1(;).916 E(XcmsColorF)88.5 166.9 Q(ormat)-.165 E F2 -.407(re)2.75 G
(sult_format).407 E F1(;).916 E F2(display)72 187.7 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2(colormap)72 204.6 Q F1(Speci\214es the colormap.)29.837 E F2
(color_string)72 221.5 Q F1(Speci\214es the color string.)17.605 E F2
(color_e)72 238.4 Q(xact_r)-.22 E(eturn)-.407 E F1(Returns the color sp\
eci\214cation parsed from the color string or parsed from the)144 251.4
Q(corresponding string found in a color)144 264.4 Q(-name database.)-.22
E F2(color_scr)72 281.3 Q(een_r)-.407 E(eturn)-.407 E F1
(Returns the color that can be reproduced on the screen.)144 294.3 Q F2
-.407(re)72 311.2 S(sult_format).407 E F1
(Speci\214es the color format for the returned color speci\214cations)
12.512 E(\(color_screen_return and color_e)144 324.2 Q(xact_return ar)
-.165 E 2.75(guments\). If)-.198 F(the format is)2.75 E F0(Xcm-)3.666 E
(sUnde\214nedF)144 337.2 Q(ormat)-.275 E F1
(and the color string contains a numerical color speci\214cation,)3.666
E(the speci\214cation is returned in the format used in that numerical \
color speci\214ca-)144 350.2 Q 2.75(tion. If)144 363.2 R(the format is)
2.75 E F0(XcmsUnde\214nedF)3.666 E(ormat)-.275 E F1
(and the color string contains a)3.666 E(color name, the speci\214catio\
n is returned in the format used to store the color in)144 376.2 Q
(the database.)144 389.2 Q 36 384.85 36 395.85 DL 36 382.85 36 393.85 DL
41.5 394.1 36 394.1 DL 43.5 394.1 38 394.1 DL 49 394.1 43.5 394.1 DL
(The)72 419.1 Q F0(XcmsLookupColor)3.666 E F1(function looks up the str\
ing name of a color with respect to the screen)3.666 E
(associated with the speci\214ed colormap.)72 432.1 Q
(It returns both the e)5.5 E(xact color v)-.165 E
(alues and the closest v)-.275 E(al-)-.275 E(ues pro)72 445.1 Q(vided b\
y the screen with respect to the visual type of the speci\214ed colorma\
p.)-.165 E(The v)5.5 E(alues)-.275 E
(are returned in the format speci\214ed by result_format.)72 458.1 Q
(If the color name is not in the Host Portable)5.5 E
(Character Encoding, the result is implementation-dependent.)72 471.1 Q
(Use of uppercase or lo)5.5 E(wercase does)-.275 E(not matter)72 484.1 Q
(.)-.605 E F0(XcmsLookupColor)6.416 E F1(returns)3.666 E F0(XcmsSuccess)
3.666 E F1(or)3.666 E F0(XcmsSuccessW)3.666 E(ithCompr)-.198 E(ession)
-.198 E F1(if)3.666 E(the name is resolv)72 497.1 Q
(ed; otherwise, it returns)-.165 E F0(XcmsF)3.666 E(ailur)-.275 E(e)
-.198 E F1 5.5(.I).916 G(f)-5.5 E F0(XcmsSuccessW)3.666 E(ithCompr)-.198
E(ession)-.198 E F1(is)3.666 E(returned, the color speci\214cation retu\
rned in color_screen_return is the result of g)72 510.1 Q(amut compres-)
-.055 E(sion.)72 523.1 Q F0 2.75(6.6. Allocating)72 549.1 R(and Fr)2.75
E(eeing Color Cells)-.198 E F1(There are tw)72 566 Q 2.75(ow)-.11 G
(ays of allocating color cells: e)-2.86 E
(xplicitly as read-only entries, one pix)-.165 E(el v)-.165 E(alue at a)
-.275 E(time, or read/write, where you can allocate a number of color c\
ells and planes simultaneously)72 579 Q 5.5(.A)-.715 G
(read-only cell has its RGB v)72 592 Q(alue set by the serv)-.275 E(er)
-.165 E 5.5(.R)-.605 G(ead/write cells do not ha)-5.5 E .33 -.165(ve d)
-.22 H(e\214ned colors).165 E(initially; functions described in the ne)
72 605 Q(xt section must be used to store v)-.165 E(alues into them.)
-.275 E(Although)5.5 E(it is possible for an)72 618 Q 2.75(yc)-.165 G
(lient to store v)-2.75 E
(alues into a read/write cell allocated by another client,)-.275 E
(read/write cells normally should be considered pri)72 631 Q -.275(va)
-.275 G(te to the client that allocated them.).275 E
(Read-only colormap cells are shared among clients.)72 647.9 Q(The serv)
5.5 E(er counts each allocation and free-)-.165 E
(ing of the cell by clients.)72 660.9 Q(When the last client frees a sh\
ared cell, the cell is \214nally deallocated.)5.5 E(If)5.5 E 2.75(as)72
673.9 S(ingle client allocates the same read-only cell multiple times, \
the serv)-2.75 E(er counts each such alloca-)-.165 E
(tion, not just the \214rst one.)72 686.9 Q 1.76 -.88(To a)72 716.8 T
(llocate a read-only color cell with an RGB v).88 E(alue, use)-.275 E F0
(XAllocColor)3.666 E F1(.).916 E F0(89)282.5 769 Q 0 Cg EP
%%Page: 90 95
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E .44 LW 36 76.75 36 87.75 DL 36 74.75
36 85.75 DL 41.5 73 36 73 DL 43.5 73 38 73 DL 49 73 43.5 73 DL/F1 11
/Times-Roman@0 SF(Status XAllocColor)72 88.9 Q(\().916 E/F2 11
/Times-Italic@0 SF(display).916 E F1(,)A F2(colormap)2.75 E F1(,).916 E
F2(scr)2.75 E(een_in_out)-.407 E F1(\)).916 E(Display *)88.5 101.9 Q F2
(display)A F1(;).916 E(Colormap)88.5 114.9 Q F2(colormap)2.75 E F1(;)
.916 E(XColor *)88.5 127.9 Q F2(scr)A(een_in_out)-.407 E F1(;).916 E F2
(display)72 148.7 Q F1(Speci\214es the connection to the X serv)40.221 E
(er)-.165 E(.)-.605 E F2(colormap)72 165.6 Q F1
(Speci\214es the colormap.)29.837 E F2(scr)72 182.5 Q(een_in_out)-.407 E
F1(Speci\214es and returns the v)10.081 E
(alues actually used in the colormap.)-.275 E 36 178.15 36 189.15 DL 36
176.15 36 187.15 DL 41.5 187.4 36 187.4 DL 43.5 187.4 38 187.4 DL 49
187.4 43.5 187.4 DL(The)72 212.4 Q F0(XAllocColor)3.666 E F1(function a\
llocates a read-only colormap entry corresponding to the closest)3.666 E
(RGB v)72 225.4 Q(alue supported by the hardw)-.275 E(are.)-.11 E F0
(XAllocColor)6.416 E F1(returns the pix)3.666 E(el v)-.165 E
(alue of the color closest)-.275 E
(to the speci\214ed RGB elements supported by the hardw)72 238.4 Q
(are and returns the RGB v)-.11 E(alue actually)-.275 E 2.75(used. The)
72 251.4 R(corresponding colormap cell is read-only)2.75 E 5.5(.I)-.715
G 2.75(na)-5.5 G(ddition,)-2.75 E F0(XAllocColor)3.666 E F1
(returns nonzero)3.666 E(if it succeeded or zero if it f)72 264.4 Q 2.75
(ailed. Multiple)-.11 F(clients that request the same ef)2.75 E(fecti)
-.275 E .33 -.165(ve R)-.275 H(GB v).165 E(alue can)-.275 E
(be assigned the same read-only entry)72 277.4 Q 2.75(,t)-.715 G
(hus allo)-2.75 E(wing entries to be shared.)-.275 E
(When the last client)5.5 E
(deallocates a shared cell, it is deallocated.)72 290.4 Q F0
(XAllocColor)6.416 E F1(does not use or af)3.666 E
(fect the \215ags in the)-.275 E F0(XColor)72.916 303.4 Q F1(structure.)
3.666 E F0(XAllocColor)72.916 320.3 Q F1(can generate a)3.666 E F0
(BadColor)3.666 E F1(error)3.666 E(.)-.605 E 1.76 -.88(To a)72 363.2 T
(llocate a read-only color cell with a color in arbitrary format, use)
.88 E F0(XcmsAllocColor)3.666 E F1(.).916 E 36 380.95 36 391.95 DL 36
378.95 36 389.95 DL 41.5 377.2 36 377.2 DL 43.5 377.2 38 377.2 DL 49
377.2 43.5 377.2 DL(Status XcmsAllocColor)72 393.1 Q(\().916 E F2
(display).916 E F1(,).916 E F2(colormap)2.75 E F1(,).916 E F2
(color_in_out)2.75 E F1(,).916 E F2 -.407(re)2.75 G(sult_format).407 E
F1(\)).916 E(Display *)88.5 406.1 Q F2(display)A F1(;).916 E(Colormap)
88.5 419.1 Q F2(colormap)2.75 E F1(;).916 E(XcmsColor *)88.5 432.1 Q F2
(color_in_out)A F1(;).916 E(XcmsColorF)88.5 445.1 Q(ormat)-.165 E F2
-.407(re)2.75 G(sult_format).407 E F1(;).916 E F2(display)72 465.9 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2(colormap)72 482.8 Q F1(Speci\214es the colormap.)29.837 E F2
(color_in_out)72 499.7 Q F1
(Speci\214es the color to allocate and returns the pix)15.163 E
(el and color that is actually used)-.165 E(in the colormap.)144 512.7 Q
F2 -.407(re)72 529.6 S(sult_format).407 E F1
(Speci\214es the color format for the returned color speci\214cation.)
12.512 E 36 525.25 36 536.25 DL 36 523.25 36 534.25 DL 41.5 534.5 36
534.5 DL 43.5 534.5 38 534.5 DL 49 534.5 43.5 534.5 DL(The)72 559.5 Q F0
(XcmsAllocColor)3.666 E F1(function is similar to)3.666 E F0
(XAllocColor)3.666 E F1 -.165(ex)3.666 G
(cept the color can be speci\214ed in).165 E(an)72 572.5 Q 2.75(yf)-.165
G 2.75(ormat. The)-2.75 F F0(XcmsAllocColor)3.666 E F1
(function ultimately calls)3.666 E F0(XAllocColor)3.666 E F1
(to allocate a read-only)3.666 E
(color cell \(colormap entry\) with the speci\214ed color)72 585.5 Q(.)
-.605 E F0(XcmsAllocColor)6.416 E F1(\214rst con)3.666 E -.165(ve)-.44 G
(rts the color).165 E(speci\214ed to an RGB v)72 598.5 Q
(alue and then passes this to)-.275 E F0(XAllocColor)3.666 E F1(.).916 E
F0(XcmsAllocColor)6.416 E F1(returns the)3.666 E(pix)72 611.5 Q(el v)
-.165 E(alue of the color cell and the color speci\214cation actually a\
llocated.)-.275 E(This returned color)5.5 E
(speci\214cation is the result of con)72 624.5 Q -.165(ve)-.44 G
(rting the RGB v).165 E(alue returned by)-.275 E F0(XAllocColor)3.666 E
F1(into the format)3.666 E(speci\214ed with the result_format ar)72
637.5 Q 2.75(gument. If)-.198 F
(there is no interest in a returned color speci\214cation,)2.75 E
(unnecessary computation can be bypassed if result_format is set to)72
650.5 Q F0(XcmsRGBF)3.666 E(ormat)-.275 E F1 5.5(.T).916 G(he cor)-5.5 E
(-)-.22 E(responding colormap cell is read-only)72 663.5 Q 5.5(.I)-.715
G 2.75(ft)-5.5 G(his routine returns)-2.75 E F0(XcmsF)3.666 E(ailur)
-.275 E(e)-.198 E F1 2.75(,t).916 G(he color_in_out)-2.75 E
(color speci\214cation is left unchanged.)72 676.5 Q F0(XcmsAllocColor)
72.916 693.4 Q F1(can generate a)3.666 E F0(BadColor)3.666 E F1(error)
3.666 E(.)-.605 E 1.76 -.88(To a)72 723.3 T(llocate a read-only color c\
ell using a color name and return the closest color supported by the).88
E F0(90)282.5 769 Q 0 Cg EP
%%Page: 91 96
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E/F1 11/Times-Roman@0 SF(hardw)72 85 Q
(are in RGB format, use)-.11 E F0(XAllocNamedColor)3.666 E F1(.).916 E
.44 LW 36 102.75 36 113.75 DL 36 100.75 36 111.75 DL 41.5 99 36 99 DL
43.5 99 38 99 DL 49 99 43.5 99 DL(Status XAllocNamedColor)72 114.9 Q(\()
.916 E/F2 11/Times-Italic@0 SF(display).916 E F1(,)A F2(colormap)2.75 E
F1(,).916 E F2(color_name)2.75 E F1(,).916 E F2(scr)2.75 E(een_def_r)
-.407 E(eturn)-.407 E F1(,).916 E F2 -.22(ex)2.75 G(act_def_r).22 E
(eturn)-.407 E F1(\)).916 E(Display *)88.5 127.9 Q F2(display)A F1(;)
.916 E(Colormap)88.5 140.9 Q F2(colormap)2.75 E F1(;).916 E(char *)88.5
153.9 Q F2(color_name)A F1(;).916 E(XColor *)88.5 166.9 Q F2(scr)A
(een_def_r)-.407 E(eturn)-.407 E F1 2.75(,*).916 G F2 -.22(ex)-2.75 G
(act_def_r).22 E(eturn)-.407 E F1(;).916 E F2(display)72 187.7 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2(colormap)72 204.6 Q F1(Speci\214es the colormap.)29.837 E F2
(color_name)72 221.5 Q F1(Speci\214es the color name string \(for e)
19.453 E(xample, red\) whose color de\214nition struc-)-.165 E
(ture you w)144 234.5 Q(ant returned.)-.11 E F2(scr)72 251.4 Q
(een_def_r)-.407 E(eturn)-.407 E F1(Returns the closest RGB v)144 264.4
Q(alues pro)-.275 E(vided by the hardw)-.165 E(are.)-.11 E F2 -.22(ex)72
281.3 S(act_def_r).22 E(eturn)-.407 E F1(Returns the e)144 294.3 Q
(xact RGB v)-.165 E(alues.)-.275 E 36 289.95 36 300.95 DL 36 287.95 36
298.95 DL 41.5 299.2 36 299.2 DL 43.5 299.2 38 299.2 DL 49 299.2 43.5
299.2 DL(The)72 324.2 Q F0(XAllocNamedColor)3.666 E F1
(function looks up the named color with respect to the screen that is)
3.666 E(associated with the speci\214ed colormap.)72 337.2 Q
(It returns both the e)5.5 E(xact database de\214nition and the clos-)
-.165 E(est color supported by the screen.)72 350.2 Q
(The allocated color cell is read-only)5.5 E 5.5(.T)-.715 G(he pix)-5.5
E(el v)-.165 E(alue is)-.275 E(returned in screen_def_return.)72 363.2 Q
(If the color name is not in the Host Portable Character Encoding,)5.5 E
(the result is implementation-dependent.)72 376.2 Q
(Use of uppercase or lo)5.5 E(wercase does not matter)-.275 E 5.5(.I)
-.605 G(f)-5.5 E(screen_def_return and e)72 389.2 Q
(xact_def_return point to the same structure, the pix)-.165 E
(el \214eld will be set cor)-.165 E(-)-.22 E(rectly)72 402.2 Q 2.75(,b)
-.715 G(ut the color v)-2.97 E(alues are unde\214ned.)-.275 E F0
(XAllocNamedColor)6.416 E F1(returns nonzero if a cell is allo-)3.666 E
(cated; otherwise, it returns zero.)72 415.2 Q F0(XAllocNamedColor)
72.916 432.1 Q F1(can generate a)3.666 E F0(BadColor)3.666 E F1(error)
3.666 E(.)-.605 E 1.76 -.88(To a)72 462 T(llocate a read-only color cel\
l using a color name and return the closest color supported by the).88 E
(hardw)72 475 Q(are in an arbitrary format, use)-.11 E F0
(XcmsAllocNamedColor)3.666 E F1(.).916 E F0(91)282.5 769 Q 0 Cg EP
%%Page: 92 97
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E .44 LW 36 76.75 36 87.75 DL 36 74.75
36 85.75 DL 41.5 73 36 73 DL 43.5 73 38 73 DL 49 73 43.5 73 DL/F1 11
/Times-Roman@0 SF(Status XcmsAllocNamedColor)72 88.9 Q(\().916 E/F2 11
/Times-Italic@0 SF(display).916 E F1(,).916 E F2(colormap)2.75 E F1(,)
.916 E F2(color_string)2.75 E F1(,).916 E F2(color_scr)2.75 E(een_r)
-.407 E(eturn)-.407 E F1(,).916 E F2(color_e)2.75 E(xact_r)-.22 E(eturn)
-.407 E F1(,).916 E F2 -.407(re)149 101.9 S(sult_format).407 E F1(\))
.916 E(Display *)88.5 114.9 Q F2(display)A F1(;).916 E(Colormap)88.5
127.9 Q F2(colormap)2.75 E F1(;).916 E(char *)88.5 140.9 Q F2
(color_string)A F1(;).916 E(XcmsColor *)88.5 153.9 Q F2(color_scr)A
(een_r)-.407 E(eturn)-.407 E F1(;).916 E(XcmsColor *)88.5 166.9 Q F2
(color_e)A(xact_r)-.22 E(eturn)-.407 E F1(;).916 E(XcmsColorF)88.5 179.9
Q(ormat)-.165 E F2 -.407(re)2.75 G(sult_format).407 E F1(;).916 E F2
(display)72 200.7 Q F1(Speci\214es the connection to the X serv)40.221 E
(er)-.165 E(.)-.605 E F2(colormap)72 217.6 Q F1
(Speci\214es the colormap.)29.837 E F2(color_string)72 234.5 Q F1(Speci\
\214es the color string whose color de\214nition structure is to be ret\
urned.)17.605 E F2(color_scr)72 251.4 Q(een_r)-.407 E(eturn)-.407 E F1
(Returns the pix)144 264.4 Q(el v)-.165 E
(alue of the color cell and color speci\214cation that actually is)-.275
E(stored for that cell.)144 277.4 Q F2(color_e)72 294.3 Q(xact_r)-.22 E
(eturn)-.407 E F1(Returns the color speci\214cation parsed from the col\
or string or parsed from the)144 307.3 Q
(corresponding string found in a color)144 320.3 Q(-name database.)-.22
E F2 -.407(re)72 337.2 S(sult_format).407 E F1
(Speci\214es the color format for the returned color speci\214cations)
12.512 E(\(color_screen_return and color_e)144 350.2 Q(xact_return ar)
-.165 E 2.75(guments\). If)-.198 F(the format is)2.75 E F0(Xcm-)3.666 E
(sUnde\214nedF)144 363.2 Q(ormat)-.275 E F1
(and the color string contains a numerical color speci\214cation,)3.666
E(the speci\214cation is returned in the format used in that numerical \
color speci\214ca-)144 376.2 Q 2.75(tion. If)144 389.2 R(the format is)
2.75 E F0(XcmsUnde\214nedF)3.666 E(ormat)-.275 E F1
(and the color string contains a)3.666 E(color name, the speci\214catio\
n is returned in the format used to store the color in)144 402.2 Q
(the database.)144 415.2 Q 36 410.85 36 421.85 DL 36 408.85 36 419.85 DL
41.5 420.1 36 420.1 DL 43.5 420.1 38 420.1 DL 49 420.1 43.5 420.1 DL
(The)72 445.1 Q F0(XcmsAllocNamedColor)3.666 E F1
(function is similar to)3.666 E F0(XAllocNamedColor)3.666 E F1 -.165(ex)
3.666 G(cept that the color).165 E(returned can be in an)72 458.1 Q 2.75
(yf)-.165 G(ormat speci\214ed.)-2.75 E(This function ultimately calls)
5.5 E F0(XAllocColor)3.666 E F1(to allocate a)3.666 E
(read-only color cell with the color speci\214ed by a color string.)72
471.1 Q(The color string is parsed into an)5.5 E F0(XcmsColor)72.916
484.1 Q F1(structure \(see)3.666 E F0(XcmsLookupColor)3.666 E F1
(\), con).916 E -.165(ve)-.44 G(rted to an RGB v).165 E
(alue, and \214nally passed)-.275 E(to)72 497.1 Q F0(XAllocColor)3.666 E
F1 5.5(.I).916 G 2.75(ft)-5.5 G(he color name is not in the Host Portab\
le Character Encoding, the result is)-2.75 E 2.75
(implementation-dependent. Use)72 510.1 R(of uppercase or lo)2.75 E
(wercase does not matter)-.275 E(.)-.605 E(This function returns both t\
he color speci\214cation as a result of parsing \(e)72 527 Q
(xact speci\214cation\) and)-.165 E
(the actual color speci\214cation stored \(screen speci\214cation\).)72
540 Q(This screen speci\214cation is the result)5.5 E(of con)72 553 Q
-.165(ve)-.44 G(rting the RGB v).165 E(alue returned by)-.275 E F0
(XAllocColor)3.666 E F1(into the format speci\214ed in result_format.)
3.666 E(If there is no interest in a returned color speci\214cation, un\
necessary computation can be bypassed)72 566 Q
(if result_format is set to)72 579 Q F0(XcmsRGBF)3.666 E(ormat)-.275 E
F1 5.5(.I).916 G 2.75(fc)-5.5 G(olor_screen_return and color_e)-2.75 E
(xact_return point)-.165 E(to the same structure, the pix)72 592 Q
(el \214eld will be set correctly)-.165 E 2.75(,b)-.715 G
(ut the color v)-2.97 E(alues are unde\214ned.)-.275 E F0
(XcmsAllocNamedColor)72.916 608.9 Q F1(can generate a)3.666 E F0
(BadColor)3.666 E F1(error)3.666 E(.)-.605 E 1.76 -.88(To a)72 638.8 T
(llocate read/write color cell and color plane combinations for a).88 E
F0(PseudoColor)3.666 E F1(model, use)3.666 E F0(XAllocColorCells)72.916
651.8 Q F1(.).916 E F0(92)282.5 769 Q 0 Cg EP
%%Page: 93 98
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E .44 LW 36 76.75 36 87.75 DL 36 74.75
36 85.75 DL 41.5 73 36 73 DL 43.5 73 38 73 DL 49 73 43.5 73 DL/F1 11
/Times-Roman@0 SF(Status XAllocColorCells)72 88.9 Q(\().916 E/F2 11
/Times-Italic@0 SF(display).916 E F1(,)A F2(colormap)2.75 E F1(,).916 E
F2(contig)2.75 E F1(,).916 E F2(plane_masks_r)2.75 E(eturn)-.407 E F1(,)
.916 E F2(nplanes)2.75 E F1(,).916 E F2(pixels_r)143.5 101.9 Q(eturn)
-.407 E F1(,).916 E F2(npixels)2.75 E F1(\)).916 E(Display *)88.5 114.9
Q F2(display)A F1(;).916 E(Colormap)88.5 127.9 Q F2(colormap)2.75 E F1
(;).916 E(Bool)88.5 140.9 Q F2(contig)2.75 E F1(;).916 E(unsigned long)
88.5 153.9 Q F2(plane_masks_r)2.75 E(eturn)-.407 E F1 .916([];)C
(unsigned int)88.5 166.9 Q F2(nplanes)2.75 E F1(;).916 E(unsigned long)
88.5 179.9 Q F2(pixels_r)2.75 E(eturn)-.407 E F1 .916([];)C
(unsigned int)88.5 192.9 Q F2(npixels)2.75 E F1(;).916 E F2(display)72
213.7 Q F1(Speci\214es the connection to the X serv)40.221 E(er)-.165 E
(.)-.605 E F2(colormap)72 230.6 Q F1(Speci\214es the colormap.)29.837 E
F2(contig)72 247.5 Q F1(Speci\214es a Boolean v)44.5 E
(alue that indicates whether the planes must be contiguous.)-.275 E F2
(plane_mask_r)72 264.4 Q(eturn)-.407 E F1
(Returns an array of plane masks.)144 277.4 Q F2(nplanes)72 294.3 Q F1(\
Speci\214es the number of plane masks that are to be returned in the pl\
ane masks)37.779 E(array)144 307.3 Q(.)-.715 E F2(pixels_r)72 324.2 Q
(eturn)-.407 E F1(Returns an array of pix)13.744 E(el v)-.165 E(alues.)
-.275 E F2(npixels)72 341.1 Q F1(Speci\214es the number of pix)40.837 E
(el v)-.165 E(alues that are to be returned in the pix)-.275 E
(els_return)-.165 E(array)144 354.1 Q(.)-.715 E 36 349.75 36 360.75 DL
36 347.75 36 358.75 DL 41.5 359 36 359 DL 43.5 359 38 359 DL 49 359 43.5
359 DL(The)72 397 Q F0(XAllocColorCells)3.666 E F1
(function allocates read/write color cells.)3.666 E
(The number of colors must be)5.5 E(positi)72 410 Q .33 -.165(ve a)-.275
H(nd the number of planes nonne).165 E -.055(ga)-.165 G(ti).055 E -.165
(ve)-.275 G 2.75(,o).165 G 2.75(ra)-2.75 G F0(BadV).916 E(alue)-1.012 E
F1(error results.)3.666 E(If ncolors and)5.5 E
(nplanes are requested, then ncolors pix)72 423 Q
(els and nplane plane masks are returned.)-.165 E(No mask will)5.5 E(ha)
72 436 Q .33 -.165(ve a)-.22 H .33 -.165(ny b).165 H
(its set to 1 in common with an).165 E 2.75(yo)-.165 G
(ther mask or with an)-2.75 E 2.75(yo)-.165 G 2.75(ft)-2.75 G(he pix)
-2.75 E 2.75(els. By)-.165 F(ORing)2.75 E(together each pix)72 449.529 Q
(el with zero or more masks, ncolors * 2)-.165 E/F3 7.7/Times-Italic@0
SF(nplanes).277 -4.62 M F1(distinct pix)3.508 4.62 M
(els can be produced.)-.165 E
(All of these are allocated writable by the request.)72 462.529 Q -.165
(Fo)5.5 G(r).165 E F0(GrayScale)3.666 E F1(or)3.666 E F0(PseudoColor)
3.666 E F1 2.75(,e).916 G(ach mask)-2.75 E(has e)72 475.529 Q
(xactly one bit set to 1.)-.165 E -.165(Fo)5.5 G(r).165 E F0(Dir)3.666 E
(ectColor)-.198 E F1 2.75(,e).916 G(ach has e)-2.75 E
(xactly three bits set to 1.)-.165 E(If contig is)5.5 E F0 -.814(Tr)
72.916 488.529 S(ue).814 E F1(and if all masks are ORed together)3.666 E
2.75(,as)-.44 G(ingle contiguous set of bits set to 1 will be formed)
-2.75 E(for)72 501.529 Q F0(GrayScale)3.666 E F1(or)3.666 E F0
(PseudoColor)3.666 E F1
(and three contiguous sets of bits set to 1 \(one within each pix)3.666
E(el)-.165 E(sub\214eld\) for)72 514.529 Q F0(Dir)3.666 E(ectColor)-.198
E F1 5.5(.T).916 G(he RGB v)-5.5 E
(alues of the allocated entries are unde\214ned.)-.275 E F0(XAllocCol-)
6.416 E(orCells)72 527.529 Q F1
(returns nonzero if it succeeded or zero if it f)3.666 E(ailed.)-.11 E
F0(XAllocColorCells)72.916 544.429 Q F1(can generate)3.666 E F0
(BadColor)3.666 E F1(and)3.666 E F0(BadV)3.666 E(alue)-1.012 E F1
(errors.)3.666 E 1.76 -.88(To a)72 574.329 T
(llocate read/write color resources for a).88 E F0(Dir)3.666 E(ectColor)
-.198 E F1(model, use)3.666 E F0(XAllocColorPlanes)3.666 E F1(.).916 E
F0(93)282.5 769 Q 0 Cg EP
%%Page: 94 99
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E .44 LW 36 76.75 36 87.75 DL 36 74.75
36 85.75 DL 41.5 73 36 73 DL 43.5 73 38 73 DL 49 73 43.5 73 DL/F1 11
/Times-Roman@0 SF(Status XAllocColorPlanes)72 88.9 Q(\().916 E/F2 11
/Times-Italic@0 SF(display).916 E F1(,)A F2(colormap)2.75 E F1(,).916 E
F2(contig)2.75 E F1(,).916 E F2(pixels_r)2.75 E(eturn)-.407 E F1(,).916
E F2(ncolor)2.75 E(s)-.11 E F1(,).916 E F2(nr)2.75 E(eds)-.407 E F1(,)
.916 E F2(ngr)2.75 E(eens)-.407 E F1(,).916 E F2(nblues)146.25 101.9 Q
F1(,).916 E F2(rmask_r)2.75 E(eturn)-.407 E F1(,).916 E F2(gmask_r)2.75
E(eturn)-.407 E F1(,).916 E F2(bmask_r)2.75 E(eturn)-.407 E F1(\)).916 E
(Display *)88.5 114.9 Q F2(display)A F1(;).916 E(Colormap)88.5 127.9 Q
F2(colormap)2.75 E F1(;).916 E(Bool)88.5 140.9 Q F2(contig)2.75 E F1(;)
.916 E(unsigned long)88.5 153.9 Q F2(pixels_r)2.75 E(eturn)-.407 E F1
.916([];)C(int)88.5 166.9 Q F2(ncolor)2.75 E(s)-.11 E F1(;).916 E(int)
88.5 179.9 Q F2(nr)2.75 E(eds)-.407 E F1(,).916 E F2(ngr)2.75 E(eens)
-.407 E F1(,).916 E F2(nblues)2.75 E F1(;).916 E(unsigned long *)88.5
192.9 Q F2(rmask_r)A(eturn)-.407 E F1 2.75(,*).916 G F2(gmask_r)-2.75 E
(eturn)-.407 E F1 2.75(,*).916 G F2(bmask_r)-2.75 E(eturn)-.407 E F1(;)
.916 E F2(display)72 213.7 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2(colormap)72 230.6 Q F1(Speci\214es the colormap.)29.837 E F2(contig)
72 247.5 Q F1(Speci\214es a Boolean v)44.5 E
(alue that indicates whether the planes must be contiguous.)-.275 E F2
(pixels_r)72 264.4 Q(eturn)-.407 E F1(Returns an array of pix)13.744 E
(el v)-.165 E(alues.)-.275 E F0(XAllocColorPlanes)6.416 E F1
(returns the pix)3.666 E(el v)-.165 E(alues in)-.275 E(this array)144
277.4 Q(.)-.715 E F2(ncolor)72 294.3 Q(s)-.11 E F1
(Speci\214es the number of pix)39.11 E(el v)-.165 E
(alues that are to be returned in the pix)-.275 E(els_return)-.165 E
(array)144 307.3 Q(.)-.715 E F2(nr)72 324.2 Q(eds)-.407 E(ngr)72 337.2 Q
(eens)-.407 E(nblues)72 350.2 Q F1
(Specify the number of red, green, and blue planes.)144 363.2 Q(The v)
5.5 E(alue you pass must be)-.275 E(nonne)144 376.2 Q -.055(ga)-.165 G
(ti).055 E -.165(ve)-.275 G(.).165 E F2(rmask_r)72 393.1 Q(eturn)-.407 E
(gmask_r)72 406.1 Q(eturn)-.407 E(bmask_r)72 419.1 Q(eturn)-.407 E F1
(Return bit masks for the red, green, and blue planes.)11.302 E 36
414.75 36 425.75 DL 36 412.75 36 423.75 DL 41.5 424 36 424 DL 43.5 424
38 424 DL 49 424 43.5 424 DL(The speci\214ed ncolors must be positi)72
462 Q -.165(ve)-.275 G 2.75(;a).165 G
(nd nreds, ngreens, and nblues must be nonne)-2.75 E -.055(ga)-.165 G
(ti).055 E -.165(ve)-.275 G 2.75(,o).165 G 2.75(ra)-2.75 G F0(BadV)
72.916 475 Q(alue)-1.012 E F1(error results.)3.666 E
(If ncolors colors, nreds reds, ngreens greens, and nblues blues are)5.5
E(requested, ncolors pix)72 488 Q(els are returned; and the masks ha)
-.165 E .33 -.165(ve n)-.22 H(reds, ngreens, and nblues bits set to 1,)
.165 E(respecti)72 501 Q -.165(ve)-.275 G(ly).165 E 5.5(.I)-.715 G 2.75
(fc)-5.5 G(ontig is)-2.75 E F0 -.814(Tr)3.666 G(ue).814 E F1 2.75(,e)
.916 G(ach mask will ha)-2.75 E .33 -.165(ve a c)-.22 H
(ontiguous set of bits set to 1.).165 E(No mask)5.5 E(will ha)72 514 Q
.33 -.165(ve a)-.22 H .33 -.165(ny b).165 H
(its set to 1 in common with an).165 E 2.75(yo)-.165 G
(ther mask or with an)-2.75 E 2.75(yo)-.165 G 2.75(ft)-2.75 G(he pix)
-2.75 E 2.75(els. F)-.165 F(or)-.165 E F0(Dir)3.666 E(ect-)-.198 E
(Color)72 527 Q F1 2.75(,e).916 G
(ach mask will lie within the corresponding pix)-2.75 E(el sub\214eld.)
-.165 E(By ORing together subsets of)5.5 E(masks with each pix)72
540.529 Q(el v)-.165 E(alue, ncolors * 2)-.275 E/F3 7.7/Times-Roman@0 SF
(\()-4.62 I/F4 7.7/Times-Italic@0 SF(nreds).277 E/F5 7.7/Symbol SF(+)
.208 E F4(ngreens).277 E F5(+).208 E F4(nblues).277 E F3(\)).208 E F1
(distinct pix)3.3 4.62 M(el v)-.165 E(alues can be produced.)-.275 E
(All of these are allocated by the request.)72 553.529 Q(Ho)5.5 E(we)
-.275 E -.165(ve)-.275 G .88 -.44(r, i).165 H 2.75(nt).44 G
(he colormap, there are only ncolors *)-2.75 E(2)72 567.058 Q F4(nreds)
.277 -4.62 M F1(independent red entries, ncolors * 2)3.508 4.62 M F4
(ngreens).277 -4.62 M F1(independent green entries, and ncolors * 2)
3.508 4.62 M F4(nblues).277 -4.62 M F1(independent blue entries.)72
580.058 Q(This is true e)5.5 E -.165(ve)-.275 G 2.75(nf).165 G(or)-2.75
E F0(PseudoColor)3.666 E F1 5.5(.W).916 G(hen the colormap entry of a)
-5.5 E(pix)72 593.058 Q(el v)-.165 E(alue is changed \(using)-.275 E F0
(XStor)3.666 E(eColors)-.198 E F1(,).916 E F0(XStor)3.666 E(eColor)-.198
E F1 2.75(,o).916 G(r)-2.75 E F0(XStor)3.666 E(eNamedColor)-.198 E F1
(\), the pix).916 E(el)-.165 E(is decomposed according to the masks, an\
d the corresponding independent entries are updated.)72 606.058 Q F0
(XAllocColorPlanes)72.916 619.058 Q F1
(returns nonzero if it succeeded or zero if it f)3.666 E(ailed.)-.11 E
F0(XAllocColorPlanes)72.916 635.958 Q F1(can generate)3.666 E F0
(BadColor)3.666 E F1(and)3.666 E F0(BadV)3.666 E(alue)-1.012 E F1
(errors.)3.666 E 1.76 -.88(To f)72 665.858 T(ree colormap cells, use).88
E F0(XFr)3.666 E(eeColors)-.198 E F1(.).916 E F0(94)282.5 769 Q 0 Cg EP
%%Page: 95 100
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E .44 LW 36 76.75 36 87.75 DL 36 74.75
36 85.75 DL 41.5 73 36 73 DL 43.5 73 38 73 DL 49 73 43.5 73 DL/F1 11
/Times-Roman@0 SF -1.834(XFreeColors \()72 88.9 R/F2 11/Times-Italic@0
SF(display).916 E F1(,)A F2(colormap)2.75 E F1(,).916 E F2(pixels)2.75 E
F1(,).916 E F2(npixels)2.75 E F1(,).916 E F2(planes)2.75 E F1(\)).916 E
(Display *)88.5 101.9 Q F2(display)A F1(;).916 E(Colormap)88.5 114.9 Q
F2(colormap)2.75 E F1(;).916 E(unsigned long)88.5 127.9 Q F2(pixels)2.75
E F1 .916([]).916 G(;)-.916 E(int)88.5 140.9 Q F2(npixels)2.75 E F1(;)
.916 E(unsigned long)88.5 153.9 Q F2(planes)2.75 E F1(;).916 E F2
(display)72 174.7 Q F1(Speci\214es the connection to the X serv)40.221 E
(er)-.165 E(.)-.605 E F2(colormap)72 191.6 Q F1
(Speci\214es the colormap.)29.837 E F2(pixels)72 208.5 Q F1
(Speci\214es an array of pix)46.337 E(el v)-.165 E
(alues that map to the cells in the speci\214ed colormap.)-.275 E F2
(npixels)72 225.4 Q F1(Speci\214es the number of pix)40.837 E(els.)-.165
E F2(planes)72 242.3 Q F1(Speci\214es the planes you w)43.279 E
(ant to free.)-.11 E 36 237.95 36 248.95 DL 36 235.95 36 246.95 DL 41.5
247.2 36 247.2 DL 43.5 247.2 38 247.2 DL 49 247.2 43.5 247.2 DL(The)72
272.2 Q F0(XFr)3.666 E(eeColors)-.198 E F1
(function frees the cells represented by pix)3.666 E(els whose v)-.165 E
(alues are in the pix)-.275 E(els)-.165 E(array)72 285.2 Q 5.5(.T)-.715
G(he planes ar)-5.5 E(gument should not ha)-.198 E .33 -.165(ve a)-.22 H
.33 -.165(ny b).165 H(its set to 1 in common with an).165 E 2.75(yo)
-.165 G 2.75(ft)-2.75 G(he pix)-2.75 E(els.)-.165 E(The set of all pix)
72 298.2 Q(els is produced by ORing together subsets of the planes ar)
-.165 E(gument with the pix-)-.198 E 2.75(els. The)72 311.2 R
(request frees all of these pix)2.75 E
(els that were allocated by the client \(using)-.165 E F0(XAllocColor)
3.666 E F1(,).916 E F0(XAllocNamedColor)72.916 324.2 Q F1(,).916 E F0
(XAllocColorCells)3.666 E F1 2.75(,a).916 G(nd)-2.75 E F0
(XAllocColorPlanes)3.666 E F1 2.75(\). Note).916 F
(that freeing an indi-)2.75 E(vidual pix)72 337.2 Q(el obtained from)
-.165 E F0(XAllocColorPlanes)3.666 E F1(may not actually allo)3.666 E
2.75(wi)-.275 G 2.75(tt)-2.75 G 2.75(ob)-2.75 G 2.75(er)-2.75 G
(eused until all of)-2.75 E(its related pix)72 350.2 Q
(els are also freed.)-.165 E(Similarly)5.5 E 2.75(,ar)-.715 G
(ead-only entry is not actually freed until it has been)-2.75 E(freed b\
y all clients, and if a client allocates the same read-only entry multi\
ple times, it must free)72 363.2 Q(the entry that man)72 376.2 Q 2.75
(yt)-.165 G(imes before the entry is actually freed.)-2.75 E
(All speci\214ed pix)72 393.1 Q
(els that are allocated by the client in the colormap are freed, e)-.165
E -.165(ve)-.275 G 2.75(ni).165 G 2.75(fo)-2.75 G(ne or more)-2.75 E
(pix)72 406.1 Q(els produce an error)-.165 E 5.5(.I)-.605 G 2.75(fas)
-5.5 G(peci\214ed pix)-2.75 E(el is not a v)-.165 E(alid inde)-.275 E
2.75(xi)-.165 G(nto the colormap, a)-2.75 E F0(BadV)3.666 E(alue)-1.012
E F1(error results.)72 419.1 Q(If a speci\214ed pix)5.5 E
(el is not allocated by the client \(that is, is unallocated or is only)
-.165 E(allocated by another client\) or if the colormap w)72 432.1 Q
(as created with all entries writable \(by passing)-.11 E F0(AllocAll)
72.916 445.1 Q F1(to)3.666 E F0(XCr)3.666 E(eateColormap)-.198 E F1
(\), a).916 E F0(BadAccess)3.666 E F1(error results.)3.666 E
(If more than one pix)5.5 E(el is in error)-.165 E(,)-.44 E
(the one that gets reported is arbitrary)72 458.1 Q(.)-.715 E F0(XFr)
72.916 475 Q(eeColors)-.198 E F1(can generate)3.666 E F0(BadAccess)3.666
E F1(,).916 E F0(BadColor)3.666 E F1 2.75(,a).916 G(nd)-2.75 E F0(BadV)
3.666 E(alue)-1.012 E F1(errors.)3.666 E F0 2.75(6.7. Modifying)72 501 R
(and Querying Colormap Cells)2.75 E F1 1.76 -.88(To s)72 530.9 T
(tore an RGB v).88 E(alue in a single colormap cell, use)-.275 E F0
(XStor)3.666 E(eColor)-.198 E F1(.).916 E 36 548.65 36 559.65 DL 36
546.65 36 557.65 DL 41.5 544.9 36 544.9 DL 43.5 544.9 38 544.9 DL 49
544.9 43.5 544.9 DL -1.834(XStoreColor \()72 560.8 R F2(display).916 E
F1(,)A F2(colormap)2.75 E F1(,).916 E F2(color)2.75 E F1(\)).916 E
(Display *)88.5 573.8 Q F2(display)A F1(;).916 E(Colormap)88.5 586.8 Q
F2(colormap)2.75 E F1(;).916 E(XColor *)88.5 599.8 Q F2(color)A F1(;)
.916 E F2(display)72 620.6 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2(colormap)72 637.5 Q F1(Speci\214es the colormap.)29.837 E F2(color)72
654.4 Q F1(Speci\214es the pix)48.779 E(el and RGB v)-.165 E(alues.)
-.275 E 36 650.05 36 661.05 DL 36 648.05 36 659.05 DL 41.5 659.3 36
659.3 DL 43.5 659.3 38 659.3 DL 49 659.3 43.5 659.3 DL(The)72 684.3 Q F0
(XStor)3.666 E(eColor)-.198 E F1
(function changes the colormap entry of the pix)3.666 E(el v)-.165 E
(alue speci\214ed in the pix)-.275 E(el)-.165 E(member of the)72 697.3 Q
F0(XColor)3.666 E F1 2.75(structure. Y)3.666 F(ou speci\214ed this v)
-1.21 E(alue in the pix)-.275 E(el member of the)-.165 E F0(XColor)3.666
E F1 2.75(structure. This)72 710.3 R(pix)2.75 E(el v)-.165 E
(alue must be a read/write cell and a v)-.275 E(alid inde)-.275 E 2.75
(xi)-.165 G(nto the colormap.)-2.75 E(If a)5.5 E(speci\214ed pix)72
723.3 Q(el is not a v)-.165 E(alid inde)-.275 E 2.75(xi)-.165 G
(nto the colormap, a)-2.75 E F0(BadV)3.666 E(alue)-1.012 E F1
(error results.)3.666 E F0(XStor)6.416 E(eColor)-.198 E(95)282.5 769 Q 0
Cg EP
%%Page: 96 101
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E/F1 11/Times-Roman@0 SF
(also changes the red, green, and/or blue color components.)72 85 Q
-1.21(Yo)5.5 G 2.75(us)1.21 G(pecify which color components)-2.75 E
(are to be changed by setting)72 98 Q F0(DoRed)3.666 E F1(,).916 E F0
(DoGr)3.666 E(een)-.198 E F1 2.75(,a).916 G(nd/or)-2.75 E F0(DoBlue)
3.666 E F1(in the \215ags member of the)3.666 E F0(XColor)72.916 111 Q
F1 2.75(structure. If)3.666 F(the colormap is an installed map for its \
screen, the changes are visible)2.75 E(immediately)72 124 Q(.)-.715 E F0
(XStor)72.916 140.9 Q(eColor)-.198 E F1(can generate)3.666 E F0
(BadAccess)3.666 E F1(,).916 E F0(BadColor)3.666 E F1 2.75(,a).916 G(nd)
-2.75 E F0(BadV)3.666 E(alue)-1.012 E F1(errors.)3.666 E 1.76 -.88(To s)
72 170.8 T(tore multiple RGB v).88 E
(alues in multiple colormap cells, use)-.275 E F0(XStor)3.666 E(eColors)
-.198 E F1(.).916 E .44 LW 36 188.55 36 199.55 DL 36 186.55 36 197.55 DL
41.5 184.8 36 184.8 DL 43.5 184.8 38 184.8 DL 49 184.8 43.5 184.8 DL
-1.834(XStoreColors \()72 200.7 R/F2 11/Times-Italic@0 SF(display).916 E
F1(,)A F2(colormap)2.75 E F1(,).916 E F2(color)2.75 E F1(,).916 E F2
(ncolor)2.75 E(s)-.11 E F1(\)).916 E(Display *)88.5 213.7 Q F2(display)A
F1(;).916 E(Colormap)88.5 226.7 Q F2(colormap)2.75 E F1(;).916 E(XColor)
88.5 239.7 Q F2(color)2.75 E F1 .916([];).916 G(int)88.5 252.7 Q F2
(ncolor)2.75 E(s)-.11 E F1(;).916 E F2(display)72 273.5 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2(colormap)72 290.4 Q F1(Speci\214es the colormap.)29.837 E F2(color)72
307.3 Q F1
(Speci\214es an array of color de\214nition structures to be stored.)
48.779 E F2(ncolor)72 324.2 Q(s)-.11 E F1(Speci\214es the number of)
39.11 E F0(XColor)3.666 E F1(structures in the color de\214nition array)
3.666 E(.)-.715 E 36 319.85 36 330.85 DL 36 317.85 36 328.85 DL 41.5
329.1 36 329.1 DL 43.5 329.1 38 329.1 DL 49 329.1 43.5 329.1 DL(The)72
354.1 Q F0(XStor)3.666 E(eColors)-.198 E F1
(function changes the colormap entries of the pix)3.666 E(el v)-.165 E
(alues speci\214ed in the)-.275 E(pix)72 367.1 Q(el members of the)-.165
E F0(XColor)3.666 E F1 2.75(structures. Y)3.666 F
(ou specify which color components are to be changed)-1.21 E(by setting)
72 380.1 Q F0(DoRed)3.666 E F1(,).916 E F0(DoGr)3.666 E(een)-.198 E F1
2.75(,a).916 G(nd/or)-2.75 E F0(DoBlue)3.666 E F1
(in the \215ags member of the)3.666 E F0(XColor)3.666 E F1 2.75
(structures. If)3.666 F(the colormap is an installed map for its screen\
, the changes are visible immediately)72 393.1 Q(.)-.715 E F0(XStor)
6.416 E(eCol-)-.198 E(ors)72 406.1 Q F1(changes the speci\214ed pix)
3.666 E(els if the)-.165 E 2.75(ya)-.165 G
(re allocated writable in the colormap by an)-2.75 E 2.75(yc)-.165 G
(lient, e)-2.75 E -.165(ve)-.275 G(n).165 E(if one or more pix)72 419.1
Q(els generates an error)-.165 E 5.5(.I)-.605 G 2.75(fas)-5.5 G
(peci\214ed pix)-2.75 E(el is not a v)-.165 E(alid inde)-.275 E 2.75(xi)
-.165 G(nto the colormap,)-2.75 E(a)72 432.1 Q F0(BadV)3.666 E(alue)
-1.012 E F1(error results.)3.666 E(If a speci\214ed pix)5.5 E
(el either is unallocated or is allocated read-only)-.165 E 2.75(,a)
-.715 G F0(BadAccess)72.916 445.1 Q F1(error results.)3.666 E
(If more than one pix)5.5 E(el is in error)-.165 E 2.75(,t)-.44 G
(he one that gets reported is arbitrary)-2.75 E(.)-.715 E F0(XStor)
72.916 462 Q(eColors)-.198 E F1(can generate)3.666 E F0(BadAccess)3.666
E F1(,).916 E F0(BadColor)3.666 E F1 2.75(,a).916 G(nd)-2.75 E F0(BadV)
3.666 E(alue)-1.012 E F1(errors.)3.666 E 1.76 -.88(To s)72 491.9 T
(tore a color of arbitrary format in a single colormap cell, use).88 E
F0(XcmsStor)3.666 E(eColor)-.198 E F1(.).916 E 36 509.65 36 520.65 DL 36
507.65 36 518.65 DL 41.5 505.9 36 505.9 DL 43.5 505.9 38 505.9 DL 49
505.9 43.5 505.9 DL(Status XcmsStoreColor)72 521.8 Q(\().916 E F2
(display).916 E F1(,)A F2(colormap)2.75 E F1(,).916 E F2(color)2.75 E F1
(\)).916 E(Display *)88.5 534.8 Q F2(display)A F1(;).916 E(Colormap)88.5
547.8 Q F2(colormap)2.75 E F1(;).916 E(XcmsColor *)88.5 560.8 Q F2
(color)A F1(;).916 E F2(display)72 581.6 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2(colormap)72 598.5 Q F1(Speci\214es the colormap.)29.837 E F2(color)72
615.4 Q F1(Speci\214es the color cell and the color to store.)48.779 E
-1.221(Va)5.5 G(lues speci\214ed in this)1.221 E F0(Xcms-)3.666 E(Color)
144 628.4 Q F1(structure remain unchanged on return.)3.666 E 36 624.05
36 635.05 DL 36 622.05 36 633.05 DL 41.5 633.3 36 633.3 DL 43.5 633.3 38
633.3 DL 49 633.3 43.5 633.3 DL(The)72 658.3 Q F0(XcmsStor)3.666 E
(eColor)-.198 E F1(function con)3.666 E -.165(ve)-.44 G
(rts the color speci\214ed in the).165 E F0(XcmsColor)3.666 E F1
(structure into)3.666 E(RGB v)72 671.3 Q 2.75(alues. It)-.275 F
(then uses this RGB speci\214cation in an)2.75 E F0(XColor)3.666 E F1
(structure, whose three \215ags)3.666 E(\()72 684.3 Q F0(DoRed).916 E F1
(,).916 E F0(DoGr)3.666 E(een)-.198 E F1 2.75(,a).916 G(nd)-2.75 E F0
(DoBlue)3.666 E F1 2.75(\)a).916 G(re set, in a call to)-2.75 E F0
(XStor)3.666 E(eColor)-.198 E F1(to change the color cell spec-)3.666 E
(i\214ed by the pix)72 697.3 Q(el member of the)-.165 E F0(XcmsColor)
3.666 E F1 2.75(structure. This)3.666 F(pix)2.75 E(el v)-.165 E
(alue must be a v)-.275 E(alid inde)-.275 E 2.75(xf)-.165 G(or)-2.75 E
(the speci\214ed colormap, and the color cell speci\214ed by the pix)72
710.3 Q(el v)-.165 E(alue must be a read/write cell.)-.275 E(If)5.5 E
(the pix)72 723.3 Q(el v)-.165 E(alue is not a v)-.275 E(alid inde)-.275
E(x, a)-.165 E F0(BadV)3.666 E(alue)-1.012 E F1(error results.)3.666 E
(If the color cell is unallocated or is)5.5 E F0(96)282.5 769 Q 0 Cg EP
%%Page: 97 102
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E/F1 11/Times-Roman@0 SF
(allocated read-only)72 85 Q 2.75(,a)-.715 G F0(BadAccess).916 E F1
(error results.)3.666 E
(If the colormap is an installed map for its screen,)5.5 E
(the changes are visible immediately)72 98 Q(.)-.715 E(Note that)72
114.9 Q F0(XStor)3.666 E(eColor)-.198 E F1(has no return v)3.666 E
(alue; therefore, an)-.275 E F0(XcmsSuccess)3.666 E F1(return v)3.666 E
(alue from this)-.275 E(function indicates that the con)72 127.9 Q -.165
(ve)-.44 G(rsion to RGB succeeded and the call to).165 E F0(XStor)3.666
E(eColor)-.198 E F1 -.11(wa)3.666 G 2.75(sm).11 G(ade.)-2.75 E 1.76 -.88
(To o)72 140.9 T(btain the actual color stored, use).88 E F0
(XcmsQueryColor)3.666 E F1 5.5(.B).916 G(ecause of the screen')-5.5 E
2.75(sh)-.605 G(ardw)-2.75 E(are limi-)-.11 E(tations or g)72 153.9 Q(a\
mut compression, the color stored in the colormap may not be identical \
to the color)-.055 E(speci\214ed.)72 166.9 Q F0(XcmsStor)72.916 183.8 Q
(eColor)-.198 E F1(can generate)3.666 E F0(BadAccess)3.666 E F1(,).916 E
F0(BadColor)3.666 E F1 2.75(,a).916 G(nd)-2.75 E F0(BadV)3.666 E(alue)
-1.012 E F1(errors.)3.666 E 1.76 -.88(To s)72 213.7 T(tore multiple col\
ors of arbitrary format in multiple colormap cells, use).88 E F0
(XcmsStor)3.666 E(eColors)-.198 E F1(.).916 E .44 LW 36 231.45 36 242.45
DL 36 229.45 36 240.45 DL 41.5 227.7 36 227.7 DL 43.5 227.7 38 227.7 DL
49 227.7 43.5 227.7 DL(Status XcmsStoreColors)72 243.6 Q(\().916 E/F2 11
/Times-Italic@0 SF(display).916 E F1(,)A F2(colormap)2.75 E F1(,).916 E
F2(color)2.75 E(s)-.11 E F1(,).916 E F2(ncolor)2.75 E(s)-.11 E F1(,).916
E F2(compr)2.75 E(ession_\215a)-.407 E(gs_r)-.11 E(eturn)-.407 E F1(\))
.916 E(Display *)88.5 256.6 Q F2(display)A F1(;).916 E(Colormap)88.5
269.6 Q F2(colormap)2.75 E F1(;).916 E(XcmsColor)88.5 282.6 Q F2(color)
2.75 E(s)-.11 E F1 .916([];).916 G(int)88.5 295.6 Q F2(ncolor)2.75 E(s)
-.11 E F1(;).916 E(Bool)88.5 308.6 Q F2(compr)2.75 E(ession_\215a)-.407
E(gs_r)-.11 E(eturn)-.407 E F1 .916([];).916 G F2(display)72 329.4 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2(colormap)72 346.3 Q F1(Speci\214es the colormap.)29.837 E F2(color)72
363.2 Q(s)-.11 E F1(Speci\214es the color speci\214cation array of)44.61
E F0(XcmsColor)3.666 E F1(structures, each specifying)3.666 E 2.75(ac)
144 376.2 S(olor cell and the color to store in that cell.)-2.75 E
-1.221(Va)5.5 G(lues speci\214ed in the array remain)1.221 E
(unchanged upon return.)144 389.2 Q F2(ncolor)72 406.1 Q(s)-.11 E F1
(Speci\214es the number of)39.11 E F0(XcmsColor)3.666 E F1
(structures in the color)3.666 E(-speci\214cation array)-.22 E(.)-.715 E
F2(compr)72 423 Q(ession_\215a)-.407 E(gs_r)-.11 E(eturn)-.407 E F1
(Returns an array of Boolean v)144 436 Q
(alues indicating compression status.)-.275 E(If a non-)5.5 E
(NULL pointer is supplied, each element of the array is set to)144 449 Q
F0 -.814(Tr)3.666 G(ue).814 E F1(if the corre-)3.666 E(sponding color w)
144 462 Q(as compressed and)-.11 E F0 -.275(Fa)3.666 G(lse).275 E F1
2.75(otherwise. P)3.666 F(ass NULL if the com-)-.165 E
(pression status is not useful.)144 475 Q 36 470.65 36 481.65 DL 36
468.65 36 479.65 DL 41.5 479.9 36 479.9 DL 43.5 479.9 38 479.9 DL 49
479.9 43.5 479.9 DL(The)72 504.9 Q F0(XcmsStor)3.666 E(eColors)-.198 E
F1(function con)3.666 E -.165(ve)-.44 G
(rts the colors speci\214ed in the array of).165 E F0(XcmsColor)3.666 E
F1(struc-)3.666 E(tures into RGB v)72 517.9 Q
(alues and then uses these RGB speci\214cations in)-.275 E F0(XColor)
3.666 E F1(structures, whose three)3.666 E(\215ags \()72 530.9 Q F0
(DoRed).916 E F1(,).916 E F0(DoGr)3.666 E(een)-.198 E F1 2.75(,a).916 G
(nd)-2.75 E F0(DoBlue)3.666 E F1 2.75(\)a).916 G(re set, in a call to)
-2.75 E F0(XStor)3.666 E(eColors)-.198 E F1(to change the color)3.666 E
(cells speci\214ed by the pix)72 543.9 Q(el member of the corresponding)
-.165 E F0(XcmsColor)3.666 E F1 2.75(structure. Each)3.666 F(pix)2.75 E
(el v)-.165 E(alue)-.275 E(must be a v)72 556.9 Q(alid inde)-.275 E 2.75
(xf)-.165 G(or the speci\214ed colormap, and the color cell speci\214ed\
 by each pix)-2.75 E(el v)-.165 E(alue)-.275 E
(must be a read/write cell.)72 569.9 Q(If a pix)5.5 E(el v)-.165 E
(alue is not a v)-.275 E(alid inde)-.275 E(x, a)-.165 E F0(BadV)3.666 E
(alue)-1.012 E F1(error results.)3.666 E(If a)5.5 E
(color cell is unallocated or is allocated read-only)72 582.9 Q 2.75(,a)
-.715 G F0(BadAccess).916 E F1(error results.)3.666 E(If more than one)
5.5 E(pix)72 595.9 Q(el is in error)-.165 E 2.75(,t)-.44 G
(he one that gets reported is arbitrary)-2.75 E 5.5(.I)-.715 G 2.75(ft)
-5.5 G(he colormap is an installed map for its)-2.75 E
(screen, the changes are visible immediately)72 608.9 Q(.)-.715 E
(Note that)72 625.8 Q F0(XStor)3.666 E(eColors)-.198 E F1
(has no return v)3.666 E(alue; therefore, an)-.275 E F0(XcmsSuccess)
3.666 E F1(return v)3.666 E(alue from this)-.275 E
(function indicates that con)72 638.8 Q -.165(ve)-.44 G
(rsions to RGB succeeded and the call to).165 E F0(XStor)3.666 E
(eColors)-.198 E F1 -.11(wa)3.666 G 2.75(sm).11 G(ade.)-2.75 E 1.76 -.88
(To o)72 651.8 T(btain the actual colors stored, use).88 E F0
(XcmsQueryColors)3.666 E F1 5.5(.B).916 G(ecause of the screen')-5.5 E
2.75(sh)-.605 G(ardw)-2.75 E(are)-.11 E(limitations or g)72 664.8 Q(amu\
t compression, the colors stored in the colormap may not be identical t\
o the)-.055 E(colors speci\214ed.)72 677.8 Q F0(XcmsStor)72.916 694.7 Q
(eColors)-.198 E F1(can generate)3.666 E F0(BadAccess)3.666 E F1(,).916
E F0(BadColor)3.666 E F1 2.75(,a).916 G(nd)-2.75 E F0(BadV)3.666 E(alue)
-1.012 E F1(errors.)3.666 E 1.76 -.88(To s)72 724.6 T
(tore a color speci\214ed by name in a single colormap cell, use).88 E
F0(XStor)3.666 E(eNamedColor)-.198 E F1(.).916 E F0(97)282.5 769 Q 0 Cg
EP
%%Page: 98 103
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E .44 LW 36 76.75 36 87.75 DL 36 74.75
36 85.75 DL 41.5 73 36 73 DL 43.5 73 38 73 DL 49 73 43.5 73 DL/F1 11
/Times-Roman@0 SF -1.834(XStoreNamedColor \()72 88.9 R/F2 11
/Times-Italic@0 SF(display).916 E F1(,)A F2(colormap)2.75 E F1(,).916 E
F2(color)2.75 E F1(,).916 E F2(pixel)2.75 E F1(,).916 E F2<8d61>2.75 E
(gs)-.11 E F1(\)).916 E(Display *)88.5 101.9 Q F2(display)A F1(;).916 E
(Colormap)88.5 114.9 Q F2(colormap)2.75 E F1(;).916 E(char *)88.5 127.9
Q F2(color).916 E F1(;).916 E(unsigned long)88.5 140.9 Q F2(pixel)2.75 E
F1(;).916 E(int)88.5 153.9 Q F2<8d61>2.75 E(gs)-.11 E F1(;).916 E F2
(display)72 174.7 Q F1(Speci\214es the connection to the X serv)40.221 E
(er)-.165 E(.)-.605 E F2(colormap)72 191.6 Q F1
(Speci\214es the colormap.)29.837 E F2(color)72 208.5 Q F1
(Speci\214es the color name string \(for e)48.779 E(xample, red\).)-.165
E F2(pixel)72 225.4 Q F1(Speci\214es the entry in the colormap.)50.616 E
F2<8d61>72 242.3 Q(gs)-.11 E F1
(Speci\214es which red, green, and blue components are set.)51.331 E 36
237.95 36 248.95 DL 36 235.95 36 246.95 DL 41.5 247.2 36 247.2 DL 43.5
247.2 38 247.2 DL 49 247.2 43.5 247.2 DL(The)72 272.2 Q F0(XStor)3.666 E
(eNamedColor)-.198 E F1(function looks up the named color with respect \
to the screen associated)3.666 E
(with the colormap and stores the result in the speci\214ed colormap.)72
285.2 Q(The pix)5.5 E(el ar)-.165 E(gument determines)-.198 E
(the entry in the colormap.)72 298.2 Q(The \215ags ar)5.5 E
(gument determines which of the red, green, and blue com-)-.198 E
(ponents are set.)72 311.2 Q -1.21(Yo)5.5 G 2.75(uc)1.21 G
(an set this member to the bitwise inclusi)-2.75 E .33 -.165(ve O)-.275
H 2.75(Ro).165 G 2.75(ft)-2.75 G(he bits)-2.75 E F0(DoRed)3.666 E F1(,)
.916 E F0(DoGr)72.916 324.2 Q(een)-.198 E F1 2.75(,a).916 G(nd)-2.75 E
F0(DoBlue)3.666 E F1 5.5(.I).916 G 2.75(ft)-5.5 G
(he color name is not in the Host Portable Character Encoding, the)-2.75
E(result is implementation-dependent.)72 337.2 Q(Use of uppercase or lo)
5.5 E(wercase does not matter)-.275 E 5.5(.I)-.605 G 2.75(ft)-5.5 G
(he speci-)-2.75 E(\214ed pix)72 350.2 Q(el is not a v)-.165 E
(alid inde)-.275 E 2.75(xi)-.165 G(nto the colormap, a)-2.75 E F0(BadV)
3.666 E(alue)-1.012 E F1(error results.)3.666 E(If the speci\214ed pix)
5.5 E(el)-.165 E(either is unallocated or is allocated read-only)72
363.2 Q 2.75(,a)-.715 G F0(BadAccess).916 E F1(error results.)3.666 E F0
(XStor)72.916 380.1 Q(eNamedColor)-.198 E F1(can generate)3.666 E F0
(BadAccess)3.666 E F1(,).916 E F0(BadColor)3.666 E F1(,).916 E F0
(BadName)3.666 E F1 2.75(,a).916 G(nd)-2.75 E F0(BadV)3.666 E(alue)
-1.012 E F1(errors.)3.666 E(The)72 397 Q F0(XQueryColor)3.666 E F1(and)
3.666 E F0(XQueryColors)3.666 E F1(functions tak)3.666 E 2.75(ep)-.11 G
(ix)-2.75 E(el v)-.165 E(alues in the pix)-.275 E(el member of)-.165 E
F0(XColor)72.916 410 Q F1
(structures and store in the structures the RGB v)3.666 E
(alues for those pix)-.275 E(els from the speci\214ed)-.165 E 2.75
(colormap. The)72 423 R -.275(va)2.75 G
(lues returned for an unallocated entry are unde\214ned.).275 E
(These functions also set)5.5 E(the \215ags member in the)72 436 Q F0
(XColor)3.666 E F1(structure to all three colors.)3.666 E(If a pix)5.5 E
(el is not a v)-.165 E(alid inde)-.275 E 2.75(xi)-.165 G(nto)-2.75 E
(the speci\214ed colormap, a)72 449 Q F0(BadV)3.666 E(alue)-1.012 E F1
(error results.)3.666 E(If more than one pix)5.5 E(el is in error)-.165
E 2.75(,t)-.44 G(he one that)-2.75 E(gets reported is arbitrary)72 462 Q
(.)-.715 E 1.76 -.88(To q)72 491.9 T(uery the RGB v).88 E
(alue of a single colormap cell, use)-.275 E F0(XQueryColor)3.666 E F1
(.).916 E 36 509.65 36 520.65 DL 36 507.65 36 518.65 DL 41.5 505.9 36
505.9 DL 43.5 505.9 38 505.9 DL 49 505.9 43.5 505.9 DL -1.834
(XQueryColor \()72 521.8 R F2(display).916 E F1(,)A F2(colormap)2.75 E
F1(,).916 E F2(def_in_out)2.75 E F1(\)).916 E(Display *)88.5 534.8 Q F2
(display)A F1(;).916 E(Colormap)88.5 547.8 Q F2(colormap)2.75 E F1(;)
.916 E(XColor *)88.5 560.8 Q F2(def_in_out)A F1(;).916 E F2(display)72
581.6 Q F1(Speci\214es the connection to the X serv)40.221 E(er)-.165 E
(.)-.605 E F2(colormap)72 598.5 Q F1(Speci\214es the colormap.)29.837 E
F2(def_in_out)72 615.4 Q F1(Speci\214es and returns the RGB v)24.942 E
(alues for the pix)-.275 E(el speci\214ed in the structure.)-.165 E 36
611.05 36 622.05 DL 36 609.05 36 620.05 DL 41.5 620.3 36 620.3 DL 43.5
620.3 38 620.3 DL 49 620.3 43.5 620.3 DL(The)72 645.3 Q F0(XQueryColor)
3.666 E F1(function returns the current RGB v)3.666 E(alue for the pix)
-.275 E(el in the)-.165 E F0(XColor)3.666 E F1(structure)3.666 E
(and sets the)72 658.3 Q F0(DoRed)3.666 E F1(,).916 E F0(DoGr)3.666 E
(een)-.198 E F1 2.75(,a).916 G(nd)-2.75 E F0(DoBlue)3.666 E F1(\215ags.)
3.666 E F0(XQueryColor)72.916 675.2 Q F1(can generate)3.666 E F0
(BadColor)3.666 E F1(and)3.666 E F0(BadV)3.666 E(alue)-1.012 E F1
(errors.)3.666 E 1.76 -.88(To q)72 705.1 T(uery the RGB v).88 E
(alues of multiple colormap cells, use)-.275 E F0(XQueryColors)3.666 E
F1(.).916 E F0(98)282.5 769 Q 0 Cg EP
%%Page: 99 104
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E .44 LW 36 76.75 36 87.75 DL 36 74.75
36 85.75 DL 41.5 73 36 73 DL 43.5 73 38 73 DL 49 73 43.5 73 DL/F1 11
/Times-Roman@0 SF -1.834(XQueryColors \()72 88.9 R/F2 11/Times-Italic@0
SF(display).916 E F1(,)A F2(colormap)2.75 E F1(,).916 E F2(defs_in_out)
2.75 E F1(,).916 E F2(ncolor)2.75 E(s)-.11 E F1(\)).916 E(Display *)88.5
101.9 Q F2(display)A F1(;).916 E(Colormap)88.5 114.9 Q F2(colormap)2.75
E F1(;).916 E(XColor)88.5 127.9 Q F2(defs_in_out)2.75 E F1 .916([];)C
(int)88.5 140.9 Q F2(ncolor)2.75 E(s)-.11 E F1(;).916 E F2(display)72
161.7 Q F1(Speci\214es the connection to the X serv)40.221 E(er)-.165 E
(.)-.605 E F2(colormap)72 178.6 Q F1(Speci\214es the colormap.)29.837 E
F2(defs_in_out)72 195.5 Q F1(Speci\214es and returns an array of color \
de\214nition structures for the pix)20.663 E(el speci\214ed)-.165 E
(in the structure.)144 208.5 Q F2(ncolor)72 225.4 Q(s)-.11 E F1
(Speci\214es the number of)39.11 E F0(XColor)3.666 E F1
(structures in the color de\214nition array)3.666 E(.)-.715 E 36 221.05
36 232.05 DL 36 219.05 36 230.05 DL 41.5 230.3 36 230.3 DL 43.5 230.3 38
230.3 DL 49 230.3 43.5 230.3 DL(The)72 255.3 Q F0(XQueryColors)3.666 E
F1(function returns the RGB v)3.666 E(alue for each pix)-.275 E
(el in each)-.165 E F0(XColor)3.666 E F1(structure and)3.666 E(sets the)
72 268.3 Q F0(DoRed)3.666 E F1(,).916 E F0(DoGr)3.666 E(een)-.198 E F1
2.75(,a).916 G(nd)-2.75 E F0(DoBlue)3.666 E F1
(\215ags in each structure.)3.666 E F0(XQueryColors)72.916 298.2 Q F1
(can generate)3.666 E F0(BadColor)3.666 E F1(and)3.666 E F0(BadV)3.666 E
(alue)-1.012 E F1(errors.)3.666 E 1.76 -.88(To q)72 328.1 T
(uery the color of a single colormap cell in an arbitrary format, use)
.88 E F0(XcmsQueryColor)3.666 E F1(.).916 E 36 345.85 36 356.85 DL 36
343.85 36 354.85 DL 41.5 342.1 36 342.1 DL 43.5 342.1 38 342.1 DL 49
342.1 43.5 342.1 DL(Status XcmsQueryColor)72 358 Q(\().916 E F2(display)
.916 E F1(,)A F2(colormap)2.75 E F1(,).916 E F2(color_in_out)2.75 E F1
(,).916 E F2 -.407(re)2.75 G(sult_format).407 E F1(\)).916 E(Display *)
88.5 371 Q F2(display)A F1(;).916 E(Colormap)88.5 384 Q F2(colormap)2.75
E F1(;).916 E(XcmsColor *)88.5 397 Q F2(color_in_out)A F1(;).916 E
(XcmsColorF)88.5 410 Q(ormat)-.165 E F2 -.407(re)2.75 G(sult_format).407
E F1(;).916 E F2(display)72 430.8 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2(colormap)72 447.7 Q F1(Speci\214es the colormap.)29.837 E F2
(color_in_out)72 464.6 Q F1(Speci\214es the pix)15.163 E
(el member that indicates the color cell to query)-.165 E 5.5(.T)-.715 G
(he color speci-)-5.5 E
(\214cation stored for the color cell is returned in this)144 477.6 Q F0
(XcmsColor)3.666 E F1(structure.)3.666 E F2 -.407(re)72 494.5 S
(sult_format).407 E F1
(Speci\214es the color format for the returned color speci\214cation.)
12.512 E 36 490.15 36 501.15 DL 36 488.15 36 499.15 DL 41.5 499.4 36
499.4 DL 43.5 499.4 38 499.4 DL 49 499.4 43.5 499.4 DL(The)72 524.4 Q F0
(XcmsQueryColor)3.666 E F1(function obtains the RGB v)3.666 E
(alue for the pix)-.275 E(el v)-.165 E(alue in the pix)-.275 E
(el member)-.165 E(of the speci\214ed)72 537.4 Q F0(XcmsColor)3.666 E F1
(structure and then con)3.666 E -.165(ve)-.44 G(rts the v).165 E
(alue to the tar)-.275 E(get format as speci\214ed)-.198 E
(by the result_format ar)72 550.4 Q 2.75(gument. If)-.198 F(the pix)2.75
E(el is not a v)-.165 E(alid inde)-.275 E 2.75(xi)-.165 G 2.75(nt)-2.75
G(he speci\214ed colormap, a)-2.75 E F0(Bad-)3.666 E -1.012(Va)72 563.4
S(lue)1.012 E F1(error results.)3.666 E F0(XcmsQueryColor)72.916 580.3 Q
F1(can generate)3.666 E F0(BadColor)3.666 E F1(and)3.666 E F0(BadV)3.666
E(alue)-1.012 E F1(errors.)3.666 E 1.76 -.88(To q)72 610.2 T
(uery the color of multiple colormap cells in an arbitrary format, use)
.88 E F0(XcmsQueryColors)3.666 E F1(.).916 E F0(99)282.5 769 Q 0 Cg EP
%%Page: 100 105
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E .44 LW 36 76.75 36 87.75 DL 36 74.75
36 85.75 DL 41.5 73 36 73 DL 43.5 73 38 73 DL 49 73 43.5 73 DL/F1 11
/Times-Roman@0 SF(Status XcmsQueryColors)72 88.9 Q(\().916 E/F2 11
/Times-Italic@0 SF(display).916 E F1(,)A F2(colormap)2.75 E F1(,).916 E
F2(color)2.75 E(s_in_out)-.11 E F1(,).916 E F2(ncolor)2.75 E(s)-.11 E F1
(,).916 E F2 -.407(re)2.75 G(sult_format).407 E F1(\)).916 E(Display *)
88.5 101.9 Q F2(display)A F1(;).916 E(Colormap)88.5 114.9 Q F2(colormap)
2.75 E F1(;).916 E(XcmsColor)88.5 127.9 Q F2(color)2.75 E(s_in_out)-.11
E F1 .916([];).916 G(unsigned int)88.5 140.9 Q F2(ncolor)2.75 E(s)-.11 E
F1(;).916 E(XcmsColorF)88.5 153.9 Q(ormat)-.165 E F2 -.407(re)2.75 G
(sult_format).407 E F1(;).916 E F2(display)72 174.7 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2(colormap)72 191.6 Q F1(Speci\214es the colormap.)29.837 E F2(color)72
208.5 Q(s_in_out)-.11 E F1(Speci\214es an array of)10.994 E F0
(XcmsColor)3.666 E F1(structures, each pix)3.666 E
(el member indicating the)-.165 E(color cell to query)144 221.5 Q 5.5
(.T)-.715 G
(he color speci\214cations for the color cells are returned in)-5.5 E
(these structures.)144 234.5 Q F2(ncolor)72 251.4 Q(s)-.11 E F1
(Speci\214es the number of)39.11 E F0(XcmsColor)3.666 E F1
(structures in the color)3.666 E(-speci\214cation array)-.22 E(.)-.715 E
F2 -.407(re)72 268.3 S(sult_format).407 E F1
(Speci\214es the color format for the returned color speci\214cation.)
12.512 E 36 263.95 36 274.95 DL 36 261.95 36 272.95 DL 41.5 273.2 36
273.2 DL 43.5 273.2 38 273.2 DL 49 273.2 43.5 273.2 DL(The)72 298.2 Q F0
(XcmsQueryColors)3.666 E F1(function obtains the RGB v)3.666 E
(alues for pix)-.275 E(el v)-.165 E(alues in the pix)-.275 E(el members)
-.165 E(of)72 311.2 Q F0(XcmsColor)3.666 E F1(structures and then con)
3.666 E -.165(ve)-.44 G(rts the v).165 E(alues to the tar)-.275 E
(get format as speci\214ed by the)-.198 E(result_format ar)72 324.2 Q
2.75(gument. If)-.198 F 2.75(ap)2.75 G(ix)-2.75 E(el is not a v)-.165 E
(alid inde)-.275 E 2.75(xi)-.165 G(nto the speci\214ed colormap, a)-2.75
E F0(BadV)3.666 E(alue)-1.012 E F1(error results.)72 337.2 Q
(If more than one pix)5.5 E(el is in error)-.165 E 2.75(,t)-.44 G
(he one that gets reported is arbitrary)-2.75 E(.)-.715 E F0
(XcmsQueryColors)72.916 354.1 Q F1(can generate)3.666 E F0(BadColor)
3.666 E F1(and)3.666 E F0(BadV)3.666 E(alue)-1.012 E F1(errors.)3.666 E
F0 2.75(6.8. Color)72 380.1 R(Con)2.75 E -.11(ve)-.44 G
(rsion Context Functions).11 E F1
(This section describes functions to create, modify)72 397 Q 2.75(,a)
-.715 G(nd query Color Con)-2.75 E -.165(ve)-.44 G(rsion Conte).165 E
(xts \(CCCs\).)-.165 E(Associated with each colormap is an initial CCC \
transparently generated by Xlib)72 413.9 Q 5.5(.T)-.44 G(herefore,)-5.5
E(when you specify a colormap as an ar)72 426.9 Q
(gument to a function, you are indirectly specifying a CCC.)-.198 E
(The CCC attrib)72 439.9 Q
(utes that can be modi\214ed by the X client are:)-.22 E 23.65<8343>72
456.8 S(lient White Point)-23.65 E 23.65<8347>72 473.7 S
(amut compression procedure and client data)-23.65 E 23.65<8357>72 490.6
S(hite point adjustment procedure and client data)-23.65 E
(The initial v)72 507.5 Q(alues for these attrib)-.275 E
(utes are implementation speci\214c.)-.22 E(The CCC attrib)5.5 E
(utes for subse-)-.22 E
(quently created CCCs can be de\214ned by changing the CCC attrib)72
520.5 Q(utes of the def)-.22 E(ault CCC.)-.11 E(There)5.5 E(is a def)72
533.5 Q(ault CCC associated with each screen.)-.11 E F0 2.75
(6.8.1. Getting)72 559.5 R(and Setting the Color Con)2.75 E -.11(ve)-.44
G(rsion Context of a Colormap).11 E F1 1.76 -.88(To o)72 589.4 T
(btain the CCC associated with a colormap, use).88 E F0
(XcmsCCCOfColormap)3.666 E F1(.).916 E 36 607.15 36 618.15 DL 36 605.15
36 616.15 DL 41.5 603.4 36 603.4 DL 43.5 603.4 38 603.4 DL 49 603.4 43.5
603.4 DL(XcmsCCC XcmsCCCOfColormap)72 619.3 Q(\().916 E F2(display).916
E F1(,)A F2(colormap)2.75 E F1(\)).916 E(Display *)88.5 632.3 Q F2
(display)A F1(;).916 E(Colormap)88.5 645.3 Q F2(colormap)2.75 E F1(;)
.916 E F2(display)72 666.1 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2(colormap)72 683 Q F1(Speci\214es the colormap.)29.837 E 36 678.65 36
689.65 DL 36 676.65 36 687.65 DL 41.5 687.9 36 687.9 DL 43.5 687.9 38
687.9 DL 49 687.9 43.5 687.9 DL(The)72 712.9 Q F0(XcmsCCCOfColormap)
3.666 E F1
(function returns the CCC associated with the speci\214ed colormap.)
3.666 E(Once obtained, the CCC attrib)72 725.9 Q
(utes can be queried or modi\214ed.)-.22 E
(Unless the CCC associated with)5.5 E F0(100)279.75 769 Q 0 Cg EP
%%Page: 101 106
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E/F1 11/Times-Roman@0 SF
(the speci\214ed colormap is changed with)72 85 Q F0
(XcmsSetCCCOfColormap)3.666 E F1 2.75(,t).916 G
(his CCC is used when the)-2.75 E(speci\214ed colormap is used as an ar)
72 98 Q(gument to color functions.)-.198 E 1.76 -.88(To c)72 127.9 T
(hange the CCC associated with a colormap, use).88 E F0
(XcmsSetCCCOfColormap)3.666 E F1(.).916 E .44 LW 36 145.65 36 156.65 DL
36 143.65 36 154.65 DL 41.5 141.9 36 141.9 DL 43.5 141.9 38 141.9 DL 49
141.9 43.5 141.9 DL(XcmsCCC XcmsSetCCCOfColormap)72 157.8 Q(\().916 E/F2
11/Times-Italic@0 SF(display).916 E F1(,)A F2(colormap)2.75 E F1(,).916
E F2(ccc)2.75 E F1(\)).916 E(Display *)88.5 170.8 Q F2(display)A F1(;)
.916 E(Colormap)88.5 183.8 Q F2(colormap)2.75 E F1(;).916 E(XcmsCCC)88.5
196.8 Q F2(ccc)2.75 E F1(;).916 E F2(display)72 217.6 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2(colormap)72 234.5 Q F1(Speci\214es the colormap.)29.837 E F2(ccc)72
251.4 Q F1(Speci\214es the CCC.)57.348 E 36 247.05 36 258.05 DL 36
245.05 36 256.05 DL 41.5 256.3 36 256.3 DL 43.5 256.3 38 256.3 DL 49
256.3 43.5 256.3 DL(The)72 281.3 Q F0(XcmsSetCCCOfColormap)3.666 E F1
(function changes the CCC associated with the speci\214ed col-)3.666 E
2.75(ormap. It)72 294.3 R(returns the CCC pre)2.75 E
(viously associated with the colormap.)-.275 E(If the)5.5 E 2.75(ya)
-.165 G(re not used ag)-2.75 E(ain in)-.055 E
(the application, CCCs should be freed by calling)72 307.3 Q F0(XcmsFr)
3.666 E(eeCCC)-.198 E F1 5.5(.S).916 G -2.365 -.275(ev e)-5.5 H
(ral colormaps may share).275 E(the same CCC without restriction; this \
includes the CCCs generated by Xlib with each colormap.)72 320.3 Q
(Xlib, ho)72 333.3 Q(we)-.275 E -.165(ve)-.275 G .88 -.44(r, c).165 H
(reates a ne).44 E 2.75(wC)-.275 G(CC with each ne)-2.75 E 2.75(wc)-.275
G(olormap.)-2.75 E F0 2.75(6.8.2. Obtaining)72 359.3 R
(the Default Color Con)2.75 E -.11(ve)-.44 G(rsion Context).11 E F1
-1.21(Yo)72 376.2 S 2.75(uc)1.21 G(an change the def)-2.75 E
(ault CCC attrib)-.11 E
(utes for subsequently created CCCs by changing the CCC)-.22 E(attrib)72
389.2 Q(utes of the def)-.22 E(ault CCC.)-.11 E 2.75(Ad)5.5 G(ef)-2.75 E
(ault CCC is associated with each screen.)-.11 E 1.76 -.88(To o)72 419.1
T(btain the def).88 E(ault CCC for a screen, use)-.11 E F0
(XcmsDefaultCCC)3.666 E F1(.).916 E 36 436.85 36 447.85 DL 36 434.85 36
445.85 DL 41.5 433.1 36 433.1 DL 43.5 433.1 38 433.1 DL 49 433.1 43.5
433.1 DL(XcmsCCC XcmsDef)72 449 Q -1.834(aultCCC \()-.11 F F2(display)
.916 E F1(,)A F2(scr)2.75 E(een_number)-.407 E F1(\)).916 E(Display *)
88.5 462 Q F2(display)A F1(;).916 E(int)88.5 475 Q F2(scr)2.75 E
(een_number)-.407 E F1(;).916 E F2(display)72 495.8 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2(scr)72 512.7 Q(een_number)-.407 E F1
(Speci\214es the appropriate screen number on the host serv)144 525.7 Q
(er)-.165 E(.)-.605 E 36 521.35 36 532.35 DL 36 519.35 36 530.35 DL 41.5
530.6 36 530.6 DL 43.5 530.6 38 530.6 DL 49 530.6 43.5 530.6 DL(The)72
555.6 Q F0(XcmsDefaultCCC)3.666 E F1(function returns the def)3.666 E
(ault CCC for the speci\214ed screen.)-.11 E(Its visual is)5.5 E
(the def)72 568.6 Q(ault visual of the screen.)-.11 E(Its initial g)5.5
E(amut compression and white point adjustment proce-)-.055 E(dures as w\
ell as the associated client data are implementation speci\214c.)72
581.6 Q F0 2.75(6.8.3. Color)72 607.6 R(Con)2.75 E -.11(ve)-.44 G
(rsion Context Macr).11 E(os)-.198 E F1
(Applications should not directly modify an)72 624.5 Q 2.75(yp)-.165 G
(art of the)-2.75 E F0(XcmsCCC)3.666 E F1 5.5(.T).916 G(he follo)-5.5 E
(wing lists the C)-.275 E
(language macros, their corresponding function equi)72 637.5 Q -.275(va)
-.275 G(lents for other language bindings, and what).275 E(data the)72
650.5 Q 2.75(yb)-.165 G(oth can return.)-2.75 E F0(101)279.75 769 Q 0 Cg
EP
%%Page: 102 107
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E .44 LW 36 76.75 36 87.75 DL 36 74.75
36 85.75 DL 41.5 73 36 73 DL 43.5 73 38 73 DL 49 73 43.5 73 DL/F1 11
/Times-Roman@0 SF -1.834(DisplayOfCCC \()72 88.9 R/F2 11/Times-Italic@0
SF(ccc).916 E F1(\)).916 E(XcmsCCC)85.75 101.9 Q F2(ccc)2.75 E F1(;).916
E(Display *XcmsDisplayOfCCC)72 127.9 Q(\().916 E F2(ccc).916 E F1(\))
.916 E(XcmsCCC)85.75 140.9 Q F2(ccc)2.75 E F1(;).916 E F2(ccc)72 161.7 Q
F1(Speci\214es the CCC.)57.348 E 36 157.35 36 168.35 DL 36 155.35 36
166.35 DL 41.5 166.6 36 166.6 DL 43.5 166.6 38 166.6 DL 49 166.6 43.5
166.6 DL(Both return the display associated with the speci\214ed CCC.)72
191.6 Q 36 226.25 36 237.25 DL 36 224.25 36 235.25 DL 41.5 222.5 36
222.5 DL 43.5 222.5 38 222.5 DL 49 222.5 43.5 222.5 DL -.66(Vi)72 238.4
S -1.834(sualOfCCC \().66 F F2(ccc).916 E F1(\)).916 E(XcmsCCC)85.75
251.4 Q F2(ccc)2.75 E F1(;).916 E -.66(Vi)72 277.4 S(sual *XcmsV).66 E
-1.834(isualOfCCC \()-.66 F F2(ccc).916 E F1(\)).916 E(XcmsCCC)85.75
290.4 Q F2(ccc)2.75 E F1(;).916 E F2(ccc)72 311.2 Q F1
(Speci\214es the CCC.)57.348 E 36 306.85 36 317.85 DL 36 304.85 36
315.85 DL 41.5 316.1 36 316.1 DL 43.5 316.1 38 316.1 DL 49 316.1 43.5
316.1 DL(Both return the visual associated with the speci\214ed CCC.)72
341.1 Q 36 375.75 36 386.75 DL 36 373.75 36 384.75 DL 41.5 372 36 372 DL
43.5 372 38 372 DL 49 372 43.5 372 DL -1.834(ScreenNumberOfCCC \()72
387.9 R F2(ccc).916 E F1(\)).916 E(XcmsCCC)85.75 400.9 Q F2(ccc)2.75 E
F1(;).916 E(int XcmsScreenNumberOfCCC)72 426.9 Q(\().916 E F2(ccc).916 E
F1(\)).916 E(XcmsCCC)85.75 439.9 Q F2(ccc)2.75 E F1(;).916 E F2(ccc)72
460.7 Q F1(Speci\214es the CCC.)57.348 E 36 456.35 36 467.35 DL 36
454.35 36 465.35 DL 41.5 465.6 36 465.6 DL 43.5 465.6 38 465.6 DL 49
465.6 43.5 465.6 DL(Both return the number of the screen associated wit\
h the speci\214ed CCC.)72 490.6 Q 36 525.25 36 536.25 DL 36 523.25 36
534.25 DL 41.5 521.5 36 521.5 DL 43.5 521.5 38 521.5 DL 49 521.5 43.5
521.5 DL -1.834(ScreenWhitePointOfCCC \()72 537.4 R F2(ccc).916 E F1(\))
.916 E(XcmsCCC)85.75 550.4 Q F2(ccc)2.75 E F1(;).916 E
(XcmsColor *XcmsScreenWhitePointOfCCC)72 576.4 Q(\().916 E F2(ccc).916 E
F1(\)).916 E(XcmsCCC)85.75 589.4 Q F2(ccc)2.75 E F1(;).916 E F2(ccc)72
610.2 Q F1(Speci\214es the CCC.)57.348 E 36 605.85 36 616.85 DL 36
603.85 36 614.85 DL 41.5 615.1 36 615.1 DL 43.5 615.1 38 615.1 DL 49
615.1 43.5 615.1 DL(Both return the white point of the screen associate\
d with the speci\214ed CCC.)72 640.1 Q F0(102)279.75 769 Q 0 Cg EP
%%Page: 103 108
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E .44 LW 36 76.75 36 87.75 DL 36 74.75
36 85.75 DL 41.5 73 36 73 DL 43.5 73 38 73 DL 49 73 43.5 73 DL/F1 11
/Times-Roman@0 SF -1.834(ClientWhitePointOfCCC \()72 88.9 R/F2 11
/Times-Italic@0 SF(ccc).916 E F1(\)).916 E(XcmsCCC)85.75 101.9 Q F2(ccc)
2.75 E F1(;).916 E(XcmsColor *XcmsClientWhitePointOfCCC)72 127.9 Q(\()
.916 E F2(ccc).916 E F1(\)).916 E(XcmsCCC)85.75 140.9 Q F2(ccc)2.75 E F1
(;).916 E F2(ccc)72 161.7 Q F1(Speci\214es the CCC.)57.348 E 36 157.35
36 168.35 DL 36 155.35 36 166.35 DL 41.5 166.6 36 166.6 DL 43.5 166.6 38
166.6 DL 49 166.6 43.5 166.6 DL
(Both return the Client White Point of the speci\214ed CCC.)72 191.6 Q
F0 2.75(6.8.4. Modifying)72 217.6 R(Attrib)2.75 E(utes of a Color Con)
-.22 E -.11(ve)-.44 G(rsion Context).11 E F1 1.76 -.88(To s)72 234.5 T
(et the Client White Point in the CCC, use).88 E F0(XcmsSetWhiteP)3.666
E(oint)-.22 E F1(.).916 E 36 252.25 36 263.25 DL 36 250.25 36 261.25 DL
41.5 248.5 36 248.5 DL 43.5 248.5 38 248.5 DL 49 248.5 43.5 248.5 DL
(Status XcmsSetWhitePoint)72 264.4 Q(\().916 E F2(ccc).916 E F1(,).916 E
F2(color)2.75 E F1(\)).916 E(XcmsCCC)88.5 277.4 Q F2(ccc)2.75 E F1(;)
.916 E(XcmsColor *)88.5 290.4 Q F2(color)A F1(;).916 E F2(ccc)72 311.2 Q
F1(Speci\214es the CCC.)57.348 E F2(color)72 328.1 Q F1
(Speci\214es the ne)48.779 E 2.75(wC)-.275 G(lient White Point.)-2.75 E
36 323.75 36 334.75 DL 36 321.75 36 332.75 DL 41.5 333 36 333 DL 43.5
333 38 333 DL 49 333 43.5 333 DL(The)72 358 Q F0(XcmsSetWhiteP)3.666 E
(oint)-.22 E F1
(function changes the Client White Point in the speci\214ed CCC.)3.666 E
(Note)5.5 E(that the pix)72 371 Q(el member is ignored and that the col\
or speci\214cation is left unchanged upon return.)-.165 E
(The format for the ne)72 384 Q 2.75(ww)-.275 G(hite point must be)-2.75
E F0(XcmsCIEXYZF)3.666 E(ormat)-.275 E F1(,).916 E F0(XcmsCIEuvYF)3.666
E(ormat)-.275 E F1(,).916 E F0(XcmsCIExyYF)72.916 397 Q(ormat)-.275 E F1
2.75(,o).916 G(r)-2.75 E F0(XcmsUnde\214nedF)3.666 E(ormat)-.275 E F1
5.5(.I).916 G 2.75(ft)-5.5 G(he color ar)-2.75 E
(gument is NULL, this func-)-.198 E(tion sets the format component of t\
he Client White Point speci\214cation to)72 410 Q F0(XcmsUnde\214nedF)
3.666 E(or)-.275 E(-)-.407 E(mat)72 423 Q F1 2.75(,i).916 G(ndicating t\
hat the Client White Point is assumed to be the same as the Screen Whit\
e Point.)-2.75 E
(This function returns nonzero status if the format for the ne)72 439.9
Q 2.75(ww)-.275 G(hite point is v)-2.75 E(alid; otherwise, it)-.275 E
(returns zero.)72 452.9 Q 1.76 -.88(To s)72 495.8 T(et the g).88 E(amut\
 compression procedure and corresponding client data in a speci\214ed C\
CC, use)-.055 E F0(XcmsSetCompr)72.916 508.8 Q(essionPr)-.198 E(oc)-.198
E F1(.).916 E 36 526.55 36 537.55 DL 36 524.55 36 535.55 DL 41.5 522.8
36 522.8 DL 43.5 522.8 38 522.8 DL 49 522.8 43.5 522.8 DL
(XcmsCompressionProc XcmsSetCompressionProc)72 538.7 Q(\().916 E F2(ccc)
.916 E F1(,).916 E F2(compr)2.75 E(ession_pr)-.407 E(oc)-.495 E F1(,)
.916 E F2(client_data)2.75 E F1(\)).916 E(XcmsCCC)88.5 551.7 Q F2(ccc)
2.75 E F1(;).916 E(XcmsCompressionProc)88.5 564.7 Q F2(compr)2.75 E
(ession_pr)-.407 E(oc)-.495 E F1(;).916 E(XPointer)88.5 577.7 Q F2
(client_data)2.75 E F1(;).916 E F2(ccc)72 598.5 Q F1
(Speci\214es the CCC.)57.348 E F2(compr)72 615.4 Q(ession_pr)-.407 E(oc)
-.495 E F1(Speci\214es the g)144 628.4 Q
(amut compression procedure that is to be applied when a color lies)
-.055 E(outside the screen')144 641.4 Q 2.75(sc)-.605 G(olor g)-2.75 E
2.75(amut. If)-.055 F(NULL is speci\214ed and a function using this)2.75
E(CCC must con)144 654.4 Q -.165(ve)-.44 G
(rt a color speci\214cation to a de).165 E(vice-dependent format and)
-.275 E(encounters a color that lies outside the screen')144 667.4 Q
2.75(sc)-.605 G(olor g)-2.75 E(amut, that function will)-.055 E(return)
144 680.4 Q F0(XcmsF)3.666 E(ailur)-.275 E(e)-.198 E F1(.).916 E F2
(client_data)72 697.3 Q F1(Speci\214es client data for the g)22.5 E
(amut compression procedure or NULL.)-.055 E 36 692.95 36 703.95 DL 36
690.95 36 701.95 DL 41.5 702.2 36 702.2 DL 43.5 702.2 38 702.2 DL 49
702.2 43.5 702.2 DL(The)72 727.2 Q F0(XcmsSetCompr)3.666 E(essionPr)
-.198 E(oc)-.198 E F1(function \214rst sets the g)3.666 E
(amut compression procedure and client)-.055 E F0(103)279.75 769 Q 0 Cg
EP
%%Page: 104 109
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E/F1 11/Times-Roman@0 SF
(data in the speci\214ed CCC with the ne)72 85 Q
(wly speci\214ed procedure and client data and then returns the)-.275 E
(old procedure.)72 98 Q 1.76 -.88(To s)72 127.9 T(et the white point ad\
justment procedure and corresponding client data in a speci\214ed CCC, \
use).88 E F0(XcmsSetWhiteAdjustPr)72.916 140.9 Q(oc)-.198 E F1(.).916 E
.44 LW 36 162.55 36 173.55 DL 36 160.55 36 171.55 DL 41.5 158.8 36 158.8
DL 43.5 158.8 38 158.8 DL 49 158.8 43.5 158.8 DL
(XcmsWhiteAdjustProc XcmsSetWhiteAdjustProc)72 170.8 Q(\().916 E/F2 11
/Times-Italic@0 SF(ccc).916 E F1(,).916 E F2(white_adjust_pr)2.75 E(oc)
-.495 E F1(,).916 E F2(client_data)2.75 E F1(\)).916 E(XcmsCCC)88.5
183.8 Q F2(ccc)2.75 E F1(;).916 E(XcmsWhiteAdjustProc)88.5 196.8 Q F2
(white_adjust_pr)2.75 E(oc)-.495 E F1(;).916 E(XPointer)88.5 209.8 Q F2
(client_data)2.75 E F1(;).916 E F2(ccc)72 230.6 Q F1
(Speci\214es the CCC.)57.348 E F2(white_adjust_pr)72 247.5 Q(oc)-.495 E
F1(Speci\214es the white point adjustment procedure.)144 260.5 Q F2
(client_data)72 277.4 Q F1(Speci\214es client data for the white point \
adjustment procedure or NULL.)22.5 E 36 273.05 36 284.05 DL 36 271.05 36
282.05 DL 41.5 282.3 36 282.3 DL 43.5 282.3 38 282.3 DL 49 282.3 43.5
282.3 DL(The)72 307.3 Q F0(XcmsSetWhiteAdjustPr)3.666 E(oc)-.198 E F1
(function \214rst sets the white point adjustment procedure and)3.666 E
(client data in the speci\214ed CCC with the ne)72 320.3 Q
(wly speci\214ed procedure and client data and then)-.275 E
(returns the old procedure.)72 333.3 Q F0 2.75(6.8.5. Cr)72 359.3 R
(eating and Fr)-.198 E(eeing a Color Con)-.198 E -.11(ve)-.44 G
(rsion Context).11 E F1 -1.21(Yo)72 376.2 S 2.75(uc)1.21 G(an e)-2.75 E
(xplicitly create a CCC within your application by calling)-.165 E F0
(XcmsCr)3.666 E(eateCCC)-.198 E F1 5.5(.T).916 G(hese)-5.5 E
(created CCCs can then be used by those functions that e)72 389.2 Q
(xplicitly call for a CCC ar)-.165 E 2.75(gument. Old)-.198 F
(CCCs that will not be used by the application should be freed using)72
402.2 Q F0(XcmsFr)3.666 E(eeCCC)-.198 E F1(.).916 E 1.76 -.88(To c)72
432.1 T(reate a CCC, use).88 E F0(XcmsCr)3.666 E(eateCCC)-.198 E F1(.)
.916 E F0(104)279.75 769 Q 0 Cg EP
%%Page: 105 110
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E .44 LW 36 76.75 36 87.75 DL 36 74.75
36 85.75 DL 41.5 73 36 73 DL 43.5 73 38 73 DL 49 73 43.5 73 DL/F1 11
/Times-Roman@0 SF(XcmsCCC XcmsCreateCCC)72 88.9 Q(\().916 E/F2 11
/Times-Italic@0 SF(display).916 E F1(,)A F2(scr)2.75 E(een_number)-.407
E F1(,).916 E F2(visual)2.75 E F1(,).916 E F2(client_white_point)2.75 E
F1(,).916 E F2(compr)2.75 E(ession_pr)-.407 E(oc)-.495 E F1(,).916 E F2
(compr)127 101.9 Q(ession_client_data)-.407 E F1(,).916 E F2
(white_adjust_pr)2.75 E(oc)-.495 E F1(,).916 E F2
(white_adjust_client_data)2.75 E F1(\)).916 E(Display *)88.5 114.9 Q F2
(display)A F1(;).916 E(int)88.5 127.9 Q F2(scr)2.75 E(een_number)-.407 E
F1(;).916 E -.66(Vi)88.5 140.9 S(sual *).66 E F2(visual)A F1(;).916 E
(XcmsColor *)88.5 153.9 Q F2(client_white_point)A F1(;).916 E
(XcmsCompressionProc)88.5 166.9 Q F2(compr)2.75 E(ession_pr)-.407 E(oc)
-.495 E F1(;).916 E(XPointer)88.5 179.9 Q F2(compr)2.75 E
(ession_client_data)-.407 E F1(;).916 E(XcmsWhiteAdjustProc)88.5 192.9 Q
F2(white_adjust_pr)2.75 E(oc)-.495 E F1(;).916 E(XPointer)88.5 205.9 Q
F2(white_adjust_client_data)2.75 E F1(;).916 E F2(display)72 226.7 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2(scr)72 243.6 Q(een_number)-.407 E F1
(Speci\214es the appropriate screen number on the host serv)144 256.6 Q
(er)-.165 E(.)-.605 E F2(visual)72 273.5 Q F1
(Speci\214es the visual type.)45.721 E F2(client_white_point)72 290.4 Q
F1(Speci\214es the Client White Point.)144 303.4 Q
(If NULL is speci\214ed, the Client White Point is)5.5 E
(to be assumed to be the same as the Screen White Point.)144 316.4 Q
(Note that the pix)5.5 E(el)-.165 E(member is ignored.)144 329.4 Q F2
(compr)72 346.3 Q(ession_pr)-.407 E(oc)-.495 E F1(Speci\214es the g)144
359.3 Q
(amut compression procedure that is to be applied when a color lies)
-.055 E(outside the screen')144 372.3 Q 2.75(sc)-.605 G(olor g)-2.75 E
2.75(amut. If)-.055 F(NULL is speci\214ed and a function using this)2.75
E(CCC must con)144 385.3 Q -.165(ve)-.44 G
(rt a color speci\214cation to a de).165 E(vice-dependent format and)
-.275 E(encounters a color that lies outside the screen')144 398.3 Q
2.75(sc)-.605 G(olor g)-2.75 E(amut, that function will)-.055 E(return)
144 411.3 Q F0(XcmsF)3.666 E(ailur)-.275 E(e)-.198 E F1(.).916 E F2
(compr)72 428.2 Q(ession_client_data)-.407 E F1
(Speci\214es client data for use by the g)144 441.2 Q
(amut compression procedure or NULL.)-.055 E F2(white_adjust_pr)72 458.1
Q(oc)-.495 E F1(Speci\214es the white adjustment procedure that is to b\
e applied when the Client)144 471.1 Q(White Point dif)144 484.1 Q
(fers from the Screen White Point.)-.275 E(NULL indicates that no white)
5.5 E(point adjustment is desired.)144 497.1 Q F2
(white_adjust_client_data)72 514 Q F1(Speci\214es client data for use w\
ith the white point adjustment procedure or NULL.)144 527 Q 36 522.65 36
533.65 DL 36 520.65 36 531.65 DL 41.5 531.9 36 531.9 DL 43.5 531.9 38
531.9 DL 49 531.9 43.5 531.9 DL(The)72 556.9 Q F0(XcmsCr)3.666 E
(eateCCC)-.198 E F1(function creates a CCC for the speci\214ed display)
3.666 E 2.75(,s)-.715 G(creen, and visual.)-2.75 E 1.76 -.88(To f)72
586.8 T(ree a CCC, use).88 E F0(XcmsFr)3.666 E(eeCCC)-.198 E F1(.).916 E
36 604.55 36 615.55 DL 36 602.55 36 613.55 DL 41.5 600.8 36 600.8 DL
43.5 600.8 38 600.8 DL 49 600.8 43.5 600.8 DL -.22(vo)72 616.7 S
(id XcmsFreeCCC).22 E(\().916 E F2(ccc).916 E F1(\)).916 E(XcmsCCC)88.5
629.7 Q F2(ccc)2.75 E F1(;).916 E F2(ccc)72 650.5 Q F1
(Speci\214es the CCC.)57.348 E 36 646.15 36 657.15 DL 36 644.15 36
655.15 DL 41.5 655.4 36 655.4 DL 43.5 655.4 38 655.4 DL 49 655.4 43.5
655.4 DL(The)72 680.4 Q F0(XcmsFr)3.666 E(eeCCC)-.198 E F1
(function frees the memory used for the speci\214ed CCC.)3.666 E
(Note that def)5.5 E(ault)-.11 E
(CCCs and those currently associated with colormaps are ignored.)72
693.4 Q F0(105)279.75 769 Q 0 Cg EP
%%Page: 106 111
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E 2.75(6.9. Con)72 85 R -.11(ve)-.44 G
(rting between Color Spaces).11 E/F1 11/Times-Roman@0 SF 1.76 -.88(To c)
72 114.9 T(on).88 E -.165(ve)-.44 G(rt an array of color speci\214catio\
ns in arbitrary color formats to a single destination for).165 E(-)-.22
E(mat, use)72 127.9 Q F0(XcmsCon)3.666 E -.11(ve)-.44 G(rtColors).11 E
F1(.).916 E .44 LW 36 145.65 36 156.65 DL 36 143.65 36 154.65 DL 41.5
141.9 36 141.9 DL 43.5 141.9 38 141.9 DL 49 141.9 43.5 141.9 DL
(Status XcmsCon)72 157.8 Q -.165(ve)-.44 G -1.834(rtColors \().165 F/F2
11/Times-Italic@0 SF(ccc).916 E F1(,).916 E F2(color)2.75 E(s_in_out)
-.11 E F1(,).916 E F2(ncolor)2.75 E(s)-.11 E F1(,).916 E F2(tar)2.75 E
-.11(ge)-.407 G(t_format).11 E F1(,).916 E F2(compr)2.75 E(ession_\215a)
-.407 E(gs_r)-.11 E(eturn)-.407 E F1(\)).916 E(XcmsCCC)88.5 170.8 Q F2
(ccc)2.75 E F1(;).916 E(XcmsColor)88.5 183.8 Q F2(color)2.75 E(s_in_out)
-.11 E F1 .916([];).916 G(unsigned int)88.5 196.8 Q F2(ncolor)2.75 E(s)
-.11 E F1(;).916 E(XcmsColorF)88.5 209.8 Q(ormat)-.165 E F2(tar)2.75 E
-.11(ge)-.407 G(t_format).11 E F1(;).916 E(Bool)88.5 222.8 Q F2(compr)
2.75 E(ession_\215a)-.407 E(gs_r)-.11 E(eturn)-.407 E F1 .916([];).916 G
F2(ccc)72 243.6 Q F1(Speci\214es the CCC.)57.348 E(If con)5.5 E -.165
(ve)-.44 G(rsion is between de).165 E(vice-independent color spaces)
-.275 E(only \(for e)144 256.6 Q(xample, T)-.165 E
(ekHVC to CIELuv\), the CCC is necessary only to specify)-.77 E
(the Client White Point.)144 269.6 Q F2(color)72 286.5 Q(s_in_out)-.11 E
F1(Speci\214es an array of color speci\214cations.)10.994 E(Pix)5.5 E
(el members are ignored and remain)-.165 E(unchanged upon return.)144
299.5 Q F2(ncolor)72 316.4 Q(s)-.11 E F1(Speci\214es the number of)39.11
E F0(XcmsColor)3.666 E F1(structures in the color)3.666 E
(-speci\214cation array)-.22 E(.)-.715 E F2(tar)72 333.3 Q -.11(ge)-.407
G(t_format).11 E F1(Speci\214es the tar)11.401 E
(get color speci\214cation format.)-.198 E F2(compr)72 350.2 Q
(ession_\215a)-.407 E(gs_r)-.11 E(eturn)-.407 E F1
(Returns an array of Boolean v)144 363.2 Q
(alues indicating compression status.)-.275 E(If a non-)5.5 E
(NULL pointer is supplied, each element of the array is set to)144 376.2
Q F0 -.814(Tr)3.666 G(ue).814 E F1(if the corre-)3.666 E
(sponding color w)144 389.2 Q(as compressed and)-.11 E F0 -.275(Fa)3.666
G(lse).275 E F1 2.75(otherwise. P)3.666 F(ass NULL if the com-)-.165 E
(pression status is not useful.)144 402.2 Q 36 397.85 36 408.85 DL 36
395.85 36 406.85 DL 41.5 407.1 36 407.1 DL 43.5 407.1 38 407.1 DL 49
407.1 43.5 407.1 DL(The)72 432.1 Q F0(XcmsCon)3.666 E -.11(ve)-.44 G
(rtColors).11 E F1(function con)3.666 E -.165(ve)-.44 G
(rts the color speci\214cations in the speci\214ed array of).165 E F0
(XcmsColor)72.916 445.1 Q F1
(structures from their current format to a single tar)3.666 E
(get format, using the speci\214ed)-.198 E 2.75(CCC. When)72 458.1 R
(the return v)2.75 E(alue is)-.275 E F0(XcmsF)3.666 E(ailur)-.275 E(e)
-.198 E F1 2.75(,t).916 G
(he contents of the color speci\214cation array are left)-2.75 E
(unchanged.)72 471.1 Q(The array may contain a mixture of color speci\
\214cation formats \(for e)72 488 Q(xample, 3 CIE XYZ, 2 CIE)-.165 E
(Luv)72 501 Q 2.75(,a)-.715 G(nd so on\).)-2.75 E
(When the array contains both de)5.5 E(vice-independent and de)-.275 E
(vice-dependent color)-.275 E(speci\214cations and the tar)72 514 Q
(get_format ar)-.198 E(gument speci\214es a de)-.198 E
(vice-dependent format \(for e)-.275 E(xample,)-.165 E F0(XcmsRGBiF)
72.916 527 Q(ormat)-.275 E F1(,).916 E F0(XcmsRGBF)3.666 E(ormat)-.275 E
F1(\), all speci\214cations are con).916 E -.165(ve)-.44 G
(rted to CIE XYZ format).165 E(and then to the tar)72 540 Q(get de)-.198
E(vice-dependent format.)-.275 E F0 2.75(6.10. Callback)72 566 R
(Functions)2.75 E F1(This section describes the g)72 582.9 Q
(amut compression and white point adjustment callbacks.)-.055 E(The g)72
599.8 Q(amut compression procedure speci\214ed in the CCC is called whe\
n an attempt to con)-.055 E -.165(ve)-.44 G(rt a).165 E
(color speci\214cation from)72 612.8 Q F0(XcmsCIEXYZ)3.666 E F1(to a de)
3.666 E(vice-dependent format \(typically)-.275 E F0(XcmsRGBi)3.666 E F1
(\)).916 E(results in a color that lies outside the screen')72 625.8 Q
2.75(sc)-.605 G(olor g)-2.75 E 2.75(amut. If)-.055 F(the g)2.75 E
(amut compression procedure)-.055 E
(requires client data, this data is passed via the g)72 638.8 Q
(amut compression client data in the CCC.)-.055 E
(During color speci\214cation con)72 655.7 Q -.165(ve)-.44 G
(rsion between de).165 E(vice-independent and de)-.275 E
(vice-dependent color)-.275 E(spaces, if a white point adjustment proce\
dure is speci\214ed in the CCC, it is triggered when the)72 668.7 Q
(Client White Point and Screen White Point dif)72 681.7 Q(fer)-.275 E
5.5(.I)-.605 G 2.75(fr)-5.5 G
(equired, the client data is obtained from the)-2.75 E(CCC.)72 694.7 Q
F0(106)279.75 769 Q 0 Cg EP
%%Page: 107 112
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E 2.75(6.10.1. Pr)72 85 R
(ototype Gamut Compr)-.198 E(ession Pr)-.198 E(ocedur)-.198 E(e)-.198 E
/F1 11/Times-Roman@0 SF(The g)72 101.9 Q
(amut compression callback interf)-.055 E(ace must adhere to the follo)
-.11 E(wing:)-.275 E .44 LW 36 119.65 36 130.65 DL 36 117.65 36 128.65
DL 41.5 115.9 36 115.9 DL 43.5 115.9 38 115.9 DL 49 115.9 43.5 115.9 DL
(typedef Status \(*)72 131.8 Q -1.834(XcmsCompressionProc \) \().916 F
/F2 11/Times-Italic@0 SF(ccc).916 E F1(,).916 E F2(color)2.75 E
(s_in_out)-.11 E F1(,).916 E F2(ncolor)2.75 E(s)-.11 E F1(,).916 E F2
(inde)2.75 E(x)-.22 E F1(,).916 E F2(compr)2.75 E(ession_\215a)-.407 E
(gs_r)-.11 E(eturn)-.407 E F1(\)).916 E(XcmsCCC)88.5 144.8 Q F2(ccc)2.75
E F1(;).916 E(XcmsColor)88.5 157.8 Q F2(color)2.75 E(s_in_out[])-.11 E
F1(;).916 E(unsigned int)88.5 170.8 Q F2(ncolor)2.75 E(s)-.11 E F1(;)
.916 E(unsigned int)88.5 183.8 Q F2(inde)2.75 E(x)-.22 E F1(;).916 E
(Bool)88.5 196.8 Q F2(compr)2.75 E(ession_\215a)-.407 E(gs_r)-.11 E
(eturn[])-.407 E F1(;).916 E F2(ccc)72 217.6 Q F1(Speci\214es the CCC.)
57.348 E F2(color)72 234.5 Q(s_in_out)-.11 E F1
(Speci\214es an array of color speci\214cations.)10.994 E(Pix)5.5 E
(el members should be ignored and)-.165 E
(must remain unchanged upon return.)144 247.5 Q F2(ncolor)72 264.4 Q(s)
-.11 E F1(Speci\214es the number of)39.11 E F0(XcmsColor)3.666 E F1
(structures in the color)3.666 E(-speci\214cation array)-.22 E(.)-.715 E
F2(inde)72 281.3 Q(x)-.22 E F1(Speci\214es the inde)48.394 E 2.75(xi)
-.165 G(nto the array of)-2.75 E F0(XcmsColor)3.666 E F1
(structures for the encountered)3.666 E
(color speci\214cation that lies outside the screen')144 294.3 Q 2.75
(sc)-.605 G(olor g)-2.75 E 2.75(amut. V)-.055 F(alid v)-1.221 E
(alues are 0)-.275 E(\(for the \214rst element\) to ncolors \255 1.)144
307.3 Q F2(compr)72 324.2 Q(ession_\215a)-.407 E(gs_r)-.11 E(eturn)-.407
E F1(Returns an array of Boolean v)144 337.2 Q
(alues for indicating compression status.)-.275 E(If a non-)5.5 E
(NULL pointer is supplied and a color at a gi)144 350.2 Q -.165(ve)-.275
G 2.75(ni).165 G(nde)-2.75 E 2.75(xi)-.165 G 2.75(sc)-2.75 G
(ompressed, then)-2.75 E F0 -.814(Tr)3.666 G(ue).814 E F1
(should be stored at the corresponding inde)144 363.2 Q 2.75(xi)-.165 G
2.75(nt)-2.75 G(his array; otherwise, the array)-2.75 E
(should not be modi\214ed.)144 376.2 Q 36 371.85 36 382.85 DL 36 369.85
36 380.85 DL 41.5 381.1 36 381.1 DL 43.5 381.1 38 381.1 DL 49 381.1 43.5
381.1 DL(When implementing a g)72 406.1 Q
(amut compression procedure, consider the follo)-.055 E
(wing rules and assump-)-.275 E(tions:)72 419.1 Q 23.65<8354>72 436 S
(he g)-23.65 E(amut compression procedure can attempt to compress one o\
r multiple speci\214cations)-.055 E(at a time.)99.5 449 Q 23.65<8357>72
465.9 S(hen called, elements 0 to inde)-23.65 E 2.75(x\2551i)-.165 G
2.75(nt)-2.75 G(he color speci\214cation array can be assumed to f)-2.75
E(all)-.11 E(within the screen')99.5 478.9 Q 2.75(sc)-.605 G(olor g)
-2.75 E 2.75(amut. In)-.055 F
(addition, these color speci\214cations are already in some)2.75 E(de)
99.5 491.9 Q(vice-dependent format \(typically)-.275 E F0(XcmsRGBi)3.666
E F1 2.75(\). If).916 F(an)2.75 E 2.75(ym)-.165 G
(odi\214cations are made to these)-2.75 E(color speci\214cations, the)
99.5 504.9 Q 2.75(ym)-.165 G(ust be in their initial de)-2.75 E
(vice-dependent format upon return.)-.275 E 23.65<8357>72 521.8 S(hen c\
alled, the element in the color speci\214cation array speci\214ed by th\
e inde)-23.65 E 2.75(xa)-.165 G -.198(rg)-2.75 G(ument).198 E
(contains the color speci\214cation outside the screen')99.5 534.8 Q
2.75(sc)-.605 G(olor g)-2.75 E(amut encountered by the calling)-.055 E
2.75(routine. In)99.5 547.8 R
(addition, this color speci\214cation can be assumed to be in)2.75 E F0
(XcmsCIEXYZ)3.666 E F1(.).916 E
(Upon return, this color speci\214cation must be in)99.5 560.8 Q F0
(XcmsCIEXYZ)3.666 E F1(.).916 E 23.65<8357>72 577.7 S
(hen called, elements from inde)-23.65 E 2.75(xt)-.165 G 2.75(on)-2.75 G
(colors \255 1 in the color speci\214cation array may or)-2.75 E
(may not f)99.5 590.7 Q(all within the screen')-.11 E 2.75(sc)-.605 G
(olor g)-2.75 E 2.75(amut. In)-.055 F
(addition, these color speci\214cations can be)2.75 E(assumed to be in)
99.5 603.7 Q F0(XcmsCIEXYZ)3.666 E F1 5.5(.I).916 G 2.75(fa)-5.5 G .33
-.165(ny m)-2.75 H(odi\214cations are made to these color speci\214ca-)
.165 E(tions, the)99.5 616.7 Q 2.75(ym)-.165 G(ust be in)-2.75 E F0
(XcmsCIEXYZ)3.666 E F1(upon return.)3.666 E 23.65<8354>72 633.6 S
(he color speci\214cations passed to the g)-23.65 E
(amut compression procedure ha)-.055 E .33 -.165(ve a)-.22 H
(lready been).165 E(adjusted to the Screen White Point.)99.5 646.6 Q
(This means that at this point the color speci\214cation')5.5 E(s)-.605
E(white point is the Screen White Point.)99.5 659.6 Q 23.65<8349>72
676.5 S 2.75(ft)-23.65 G(he g)-2.75 E
(amut compression procedure uses a de)-.055 E
(vice-independent color space not initially)-.275 E
(accessible for use in the color management system, use)99.5 689.5 Q F0
(XcmsAddColorSpace)3.666 E F1(to ensure)3.666 E(that it is added.)99.5
702.5 Q F0(107)279.75 769 Q 0 Cg EP
%%Page: 108 113
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E 2.75(6.10.2. Supplied)72 85 R
(Gamut Compr)2.75 E(ession Pr)-.198 E(ocedur)-.198 E(es)-.198 E/F1 11
/Times-Roman@0 SF(The follo)72 101.9 Q
(wing equations are useful in describing g)-.275 E
(amut compression functions:)-.055 E/F2 11/Times-Italic@0 SF 1.133
(CIELab Psychometric)71.824 138.775 R(Chroma)3.245 E/F3 11/Symbol SF(=)
3.366 E F2(sqrt)3.454 E F1(\().748 E F2(a).363 E F1(_).286 E F2(star)
.374 E/F4 7.7/Times-Roman@0 SF(2).803 -4.62 M F3(+)3.63 4.62 M F2(b)
3.377 E F1(_).253 E F2(star).374 E F4(2).803 -4.62 M F1(\)).55 4.62 M F2
1.133(CIELab Psychometric)71.824 174.785 R(Hue)4.059 E F3(=)3.278 E F1
(tan)3.08 E/F5 7.7/Symbol SF(-)-4.62 I F4(1)A F3<e9>2.42 -4.565 M<ea>
-4.224 11 M<eb>-4.224 11 M F2(b)1.666 -20.515 M F1(_).253 E F2(star).374
E(a)-28.726 15.4 M F1(_).286 E F2(star).374 E .44 LW 264.624 171.925
234.682 171.925 DL F3<f9>265.944 165.6 Q<fa>-4.224 11 M<fb>-4.224 11 M
F2 1.232(CIELuv Psychometric)71.824 211.05 R(Chroma)3.245 E F3(=)3.366 E
F2(sqrt)3.454 E F1(\().748 E F2(u).088 E F1(_).275 E F2(star).374 E F4
(2).803 -4.62 M F3(+)3.63 4.62 M F2(v)3.399 E F1(_).352 E F2(star).374 E
F4(2).803 -4.62 M F1(\)).55 4.62 M F2 1.232(CIELuv Psychometric)71.824
241.56 R(Hue)4.059 E F3(=)3.278 E F1(tan)3.08 E F5(-)-4.62 I F4(1)A F3
<e9>2.42 .935 M<eb>-4.224 11 M F2(v)1.793 -15.015 M F1(_).352 E F2(star)
.374 E(u)-28.611 15.4 M F1(_).275 E F2(star).374 E 263.821 238.7 234.165
238.7 DL F3<f9>265.141 237.875 Q<fb>-4.224 11 M F1(The g)72 270.185 Q
(amut compression callback procedures pro)-.055 E
(vided by Xlib are as follo)-.165 E(ws:)-.275 E<83>72 287.085 Q F0
(XcmsCIELabClipL)24.566 E F1(This brings the encountered out-of-g)99.5
303.985 Q(amut color speci\214cation into the screen')-.055 E 2.75(sc)
-.605 G(olor g)-2.75 E(amut)-.055 E(by reducing or increasing CIE metri\
c lightness \(L*\) in the CIE L*a*b* color space until the)99.5 316.985
Q(color is within the g)99.5 329.985 Q 2.75(amut. If)-.055 F
(the Psychometric Chroma of the color speci\214cation is be)2.75 E(yond)
-.165 E(maximum for the Psychometric Hue Angle, then while maintaining \
the same Psychometric)99.5 342.985 Q(Hue Angle, the color will be clipp\
ed to the CIE L*a*b* coordinates of maximum Psycho-)99.5 355.985 Q
(metric Chroma.)99.5 368.985 Q(See)5.5 E F0(XcmsCIELabQueryMaxC)3.666 E
F1 5.5(.N).916 G 2.75(oc)-5.5 G(lient data is necessary)-2.75 E(.)-.715
E<83>72 385.885 Q F0(XcmsCIELabClipab)24.566 E F1
(This brings the encountered out-of-g)99.5 402.785 Q
(amut color speci\214cation into the screen')-.055 E 2.75(sc)-.605 G
(olor g)-2.75 E(amut)-.055 E(by reducing Psychometric Chroma, while mai\
ntaining Psychometric Hue Angle, until the)99.5 415.785 Q
(color is within the g)99.5 428.785 Q 2.75(amut. No)-.055 F
(client data is necessary)2.75 E(.)-.715 E<83>72 445.685 Q F0
(XcmsCIELabClipLab)24.566 E F1(This brings the encountered out-of-g)99.5
462.585 Q(amut color speci\214cation into the screen')-.055 E 2.75(sc)
-.605 G(olor g)-2.75 E(amut)-.055 E
(by replacing it with CIE L*a*b* coordinates that f)99.5 475.585 Q
(all within the color g)-.11 E(amut while main-)-.055 E
(taining the original Psychometric Hue Angle and whose v)99.5 488.585 Q
(ector to the original coordinates)-.165 E(is the shortest attainable.)
99.5 501.585 Q(No client data is necessary)5.5 E(.)-.715 E<83>72 518.485
Q F0(XcmsCIELuvClipL)24.566 E F1(This brings the encountered out-of-g)
99.5 535.385 Q(amut color speci\214cation into the screen')-.055 E 2.75
(sc)-.605 G(olor g)-2.75 E(amut)-.055 E(by reducing or increasing CIE m\
etric lightness \(L*\) in the CIE L*u*v* color space until the)99.5
548.385 Q(color is within the g)99.5 561.385 Q 2.75(amut. If)-.055 F
(the Psychometric Chroma of the color speci\214cation is be)2.75 E(yond)
-.165 E(maximum for the Psychometric Hue Angle, then, while maintaining\
 the same Psychometric)99.5 574.385 Q(Hue Angle, the color will be clip\
ped to the CIE L*u*v* coordinates of maximum Psycho-)99.5 587.385 Q
(metric Chroma.)99.5 600.385 Q(See)5.5 E F0(XcmsCIELuvQueryMaxC)3.666 E
F1 5.5(.N).916 G 2.75(oc)-5.5 G(lient data is necessary)-2.75 E(.)-.715
E<83>72 617.285 Q F0(XcmsCIELuvClipuv)24.566 E F1
(This brings the encountered out-of-g)99.5 634.185 Q
(amut color speci\214cation into the screen')-.055 E 2.75(sc)-.605 G
(olor g)-2.75 E(amut)-.055 E(by reducing Psychometric Chroma, while mai\
ntaining Psychometric Hue Angle, until the)99.5 647.185 Q
(color is within the g)99.5 660.185 Q 2.75(amut. No)-.055 F
(client data is necessary)2.75 E(.)-.715 E<83>72 677.085 Q F0
(XcmsCIELuvClipLuv)24.566 E F1(This brings the encountered out-of-g)99.5
693.985 Q(amut color speci\214cation into the screen')-.055 E 2.75(sc)
-.605 G(olor g)-2.75 E(amut)-.055 E
(by replacing it with CIE L*u*v* coordinates that f)99.5 706.985 Q
(all within the color g)-.11 E(amut while main-)-.055 E
(taining the original Psychometric Hue Angle and whose v)99.5 719.985 Q
(ector to the original coordinates)-.165 E(is the shortest attainable.)
99.5 732.985 Q(No client data is necessary)5.5 E(.)-.715 E F0(108)279.75
769 Q 0 Cg EP
%%Page: 109 114
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E/F1 11/Times-Roman@0 SF<83>72 85 Q F0
(XcmsT)24.566 E(ekHVCClipV)-1.012 E F1
(This brings the encountered out-of-g)99.5 101.9 Q
(amut color speci\214cation into the screen')-.055 E 2.75(sc)-.605 G
(olor g)-2.75 E(amut)-.055 E(by reducing or increasing the V)99.5 114.9
Q(alue dimension in the T)-1.221 E(ekHVC color space until the color is)
-.77 E(within the g)99.5 127.9 Q 2.75(amut. If)-.055 F
(Chroma of the color speci\214cation is be)2.75 E
(yond maximum for the particu-)-.165 E(lar Hue, then, while maintaining\
 the same Hue, the color will be clipped to the V)99.5 140.9 Q(alue and)
-1.221 E(Chroma coordinates that represent maximum Chroma for that part\
icular Hue.)99.5 153.9 Q(No client)5.5 E(data is necessary)99.5 166.9 Q
(.)-.715 E<83>72 183.8 Q F0(XcmsT)24.566 E(ekHVCClipC)-1.012 E F1
(This brings the encountered out-of-g)99.5 200.7 Q
(amut color speci\214cation into the screen')-.055 E 2.75(sc)-.605 G
(olor g)-2.75 E(amut)-.055 E(by reducing the Chroma dimension in the T)
99.5 213.7 Q(ekHVC color space until the color is within the)-.77 E
-.055(ga)99.5 226.7 S 2.75(mut. No).055 F(client data is necessary)2.75
E(.)-.715 E<83>72 243.6 Q F0(XcmsT)24.566 E(ekHVCClipVC)-1.012 E F1
(This brings the encountered out-of-g)99.5 260.5 Q
(amut color speci\214cation into the screen')-.055 E 2.75(sc)-.605 G
(olor g)-2.75 E(amut)-.055 E(by replacing it with T)99.5 273.5 Q
(ekHVC coordinates that f)-.77 E(all within the color g)-.11 E
(amut while maintaining)-.055 E(the original Hue and whose v)99.5 286.5
Q(ector to the original coordinates is the shortest attainable.)-.165 E
(No)5.5 E(client data is necessary)99.5 299.5 Q(.)-.715 E F0 2.75
(6.10.3. Pr)72 325.5 R(ototype White P)-.198 E(oint Adjustment Pr)-.22 E
(ocedur)-.198 E(e)-.198 E F1
(The white point adjustment procedure interf)72 342.4 Q
(ace must adhere to the follo)-.11 E(wing:)-.275 E .44 LW 36 360.15 36
371.15 DL 36 358.15 36 369.15 DL 41.5 356.4 36 356.4 DL 43.5 356.4 38
356.4 DL 49 356.4 43.5 356.4 DL(typedef Status \(*)72 372.3 Q -1.834
(XcmsWhiteAdjustProc \) \().916 F/F2 11/Times-Italic@0 SF(ccc).916 E F1
(,).916 E F2(initial_white_point)2.75 E F1(,).916 E F2(tar)2.75 E -.11
(ge)-.407 G(t_white_point).11 E F1(,).916 E F2(tar)2.75 E -.11(ge)-.407
G(t_format).11 E F1(,).916 E F2(color)116 385.3 Q(s_in_out)-.11 E F1(,)
.916 E F2(ncolor)2.75 E(s)-.11 E F1(,).916 E F2(compr)2.75 E
(ession_\215a)-.407 E(gs_r)-.11 E(eturn)-.407 E F1(\)).916 E(XcmsCCC)
91.25 398.3 Q F2(ccc)2.75 E F1(;).916 E(XcmsColor *)91.25 411.3 Q F2
(initial_white_point)A F1(;).916 E(XcmsColor *)91.25 424.3 Q F2(tar)A
-.11(ge)-.407 G(t_white_point).11 E F1(;).916 E(XcmsColorF)91.25 437.3 Q
(ormat)-.165 E F2(tar)2.75 E -.11(ge)-.407 G(t_format).11 E F1(;).916 E
(XcmsColor)91.25 450.3 Q F2(color)2.75 E(s_in_out[])-.11 E F1(;).916 E
(unsigned int)91.25 463.3 Q F2(ncolor)2.75 E(s)-.11 E F1(;).916 E(Bool)
91.25 476.3 Q F2(compr)2.75 E(ession_\215a)-.407 E(gs_r)-.11 E(eturn[])
-.407 E F1(;).916 E F2(ccc)72 497.1 Q F1(Speci\214es the CCC.)57.348 E
F2(initial_white_point)72 514 Q F1(Speci\214es the initial white point.)
144 527 Q F2(tar)72 543.9 Q -.11(ge)-.407 G(t_white_point).11 E F1
(Speci\214es the tar)144 556.9 Q(get white point.)-.198 E F2(tar)72
573.8 Q -.11(ge)-.407 G(t_format).11 E F1(Speci\214es the tar)11.401 E
(get color speci\214cation format.)-.198 E F2(color)72 590.7 Q(s_in_out)
-.11 E F1(Speci\214es an array of color speci\214cations.)10.994 E(Pix)
5.5 E(el members should be ignored and)-.165 E
(must remain unchanged upon return.)144 603.7 Q F2(ncolor)72 620.6 Q(s)
-.11 E F1(Speci\214es the number of)39.11 E F0(XcmsColor)3.666 E F1
(structures in the color)3.666 E(-speci\214cation array)-.22 E(.)-.715 E
F2(compr)72 637.5 Q(ession_\215a)-.407 E(gs_r)-.11 E(eturn)-.407 E F1
(Returns an array of Boolean v)144 650.5 Q
(alues for indicating compression status.)-.275 E(If a non-)5.5 E
(NULL pointer is supplied and a color at a gi)144 663.5 Q -.165(ve)-.275
G 2.75(ni).165 G(nde)-2.75 E 2.75(xi)-.165 G 2.75(sc)-2.75 G
(ompressed, then)-2.75 E F0 -.814(Tr)3.666 G(ue).814 E F1
(should be stored at the corresponding inde)144 676.5 Q 2.75(xi)-.165 G
2.75(nt)-2.75 G(his array; otherwise, the array)-2.75 E
(should not be modi\214ed.)144 689.5 Q 36 685.15 36 696.15 DL 36 683.15
36 694.15 DL 41.5 694.4 36 694.4 DL 43.5 694.4 38 694.4 DL 49 694.4 43.5
694.4 DL F0(109)279.75 769 Q 0 Cg EP
%%Page: 110 115
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E 2.75(6.10.4. Supplied)72 85 R(White P)
2.75 E(oint Adjustment Pr)-.22 E(ocedur)-.198 E(es)-.198 E/F1 11
/Times-Roman@0 SF(White point adjustment procedures pro)72 101.9 Q
(vided by Xlib are as follo)-.165 E(ws:)-.275 E<83>72 118.8 Q F0
(XcmsCIELabWhiteShiftColors)24.566 E F1(This uses the CIE L*a*b* color \
space for adjusting the chromatic character of colors to)99.5 135.7 Q
(compensate for the chromatic dif)99.5 148.7 Q
(ferences between the source and destination white points.)-.275 E
(This procedure simply con)99.5 161.7 Q -.165(ve)-.44 G
(rts the color speci\214cations to).165 E F0(XcmsCIELab)3.666 E F1
(using the source)3.666 E(white point and then con)99.5 174.7 Q -.165
(ve)-.44 G(rts to the tar).165 E
(get speci\214cation format using the destination')-.198 E 2.75(sw)-.605
G(hite)-2.75 E 2.75(point. No)99.5 187.7 R(client data is necessary)2.75
E(.)-.715 E<83>72 204.6 Q F0(XcmsCIELuvWhiteShiftColors)24.566 E F1(Thi\
s uses the CIE L*u*v* color space for adjusting the chromatic character\
 of colors to)99.5 221.5 Q(compensate for the chromatic dif)99.5 234.5 Q
(ferences between the source and destination white points.)-.275 E
(This procedure simply con)99.5 247.5 Q -.165(ve)-.44 G
(rts the color speci\214cations to).165 E F0(XcmsCIELuv)3.666 E F1
(using the source)3.666 E(white point and then con)99.5 260.5 Q -.165
(ve)-.44 G(rts to the tar).165 E
(get speci\214cation format using the destination')-.198 E 2.75(sw)-.605
G(hite)-2.75 E 2.75(point. No)99.5 273.5 R(client data is necessary)2.75
E(.)-.715 E<83>72 290.4 Q F0(XcmsT)24.566 E(ekHVCWhiteShiftColors)-1.012
E F1(This uses the T)99.5 307.3 Q(ekHVC color space for adjusting the c\
hromatic character of colors to com-)-.77 E
(pensate for the chromatic dif)99.5 320.3 Q
(ferences between the source and destination white points.)-.275 E(This)
5.5 E(procedure simply con)99.5 333.3 Q -.165(ve)-.44 G
(rts the color speci\214cations to).165 E F0(XcmsT)3.666 E(ekHVC)-1.012
E F1(using the source)3.666 E(white point and then con)99.5 346.3 Q
-.165(ve)-.44 G(rts to the tar).165 E
(get speci\214cation format using the destination')-.198 E 2.75(sw)-.605
G(hite)-2.75 E 2.75(point. An)99.5 359.3 R(adv)2.75 E
(antage of this procedure o)-.275 E -.165(ve)-.165 G 2.75(rt).165 G
(hose pre)-2.75 E(viously described is an attempt to min-)-.275 E
(imize hue shift.)99.5 372.3 Q(No client data is necessary)5.5 E(.)-.715
E(From an implementation point of vie)72 389.2 Q 1.43 -.715(w, t)-.275 H
(hese white point adjustment procedures con).715 E -.165(ve)-.44 G
(rt the color).165 E(speci\214cations to a de)72 402.2 Q
(vice-independent b)-.275 E
(ut white-point-dependent color space \(for e)-.22 E(xample, CIE)-.165 E
(L*u*v*, CIE L*a*b*, T)72 415.2 Q
(ekHVC\) using one white point and then con)-.77 E -.165(ve)-.44 G
(rting those speci\214cations to).165 E(the tar)72 428.2 Q
(get color space using another white point.)-.198 E(In other w)5.5 E
(ords, the speci\214cation goes in the)-.11 E
(color space with one white point b)72 441.2 Q
(ut comes out with another white point, resulting in a chromatic)-.22 E
(shift based on the chromatic displacement between the initial white po\
int and tar)72 454.2 Q(get white point.)-.198 E(The CIE color spaces th\
at are assumed to be white-point-independent are CIE u')72 467.2 Q(v'Y)
-.55 E 2.75(,C)-1.419 G(IE XYZ,)-2.75 E(and CIE xyY)72 480.2 Q 5.5(.W)
-1.419 G(hen de)-5.5 E -.165(ve)-.275 G
(loping a custom white point adjustment procedure that uses a de).165 E
(vice-)-.275 E(independent color space not initially accessible for use\
 in the color management system, use)72 493.2 Q F0(XcmsAddColorSpace)
72.916 506.2 Q F1(to ensure that it is added.)3.666 E(As an e)72 523.1 Q
(xample, if the CCC speci\214es a white point adjustment procedure and \
if the Client White)-.165 E(Point and Screen White Point dif)72 536.1 Q
(fer)-.275 E 2.75(,t)-.44 G(he)-2.75 E F0(XcmsAllocColor)3.666 E F1
(function will use the white point)3.666 E(adjustment procedure twice:)
72 549.1 Q 23.65<834f>72 566 S(nce to con)-23.65 E -.165(ve)-.44 G
(rt to).165 E F0(XcmsRGB)3.666 E F1 23.65<8341>72 582.9 S
(second time to con)-20.9 E -.165(ve)-.44 G(rt from).165 E F0(XcmsRGB)
3.666 E F1 -.165(Fo)72 599.8 S 2.75(re).165 G
(xample, assume the speci\214cation is in)-2.915 E F0(XcmsCIEuvY)3.666 E
F1(and the adjustment procedure is)3.666 E F0(Xcm-)3.666 E
(sCIELuvWhiteShiftColors)72 612.8 Q F1 5.5(.D).916 G(uring con)-5.5 E
-.165(ve)-.44 G(rsion to).165 E F0(XcmsRGB)3.666 E F1 2.75(,t).916 G
(he call to)-2.75 E F0(XcmsAllocColor)3.666 E F1(results in the follo)72
625.8 Q(wing series of color speci\214cation con)-.275 E -.165(ve)-.44 G
(rsions:).165 E 23.65<8346>72 642.7 S(rom)-23.65 E F0(XcmsCIEuvY)3.666 E
F1(to)3.666 E F0(XcmsCIELuv)3.666 E F1(using the Client White Point)
3.666 E 23.65<8346>72 659.6 S(rom)-23.65 E F0(XcmsCIELuv)3.666 E F1(to)
3.666 E F0(XcmsCIEuvY)3.666 E F1(using the Screen White Point)3.666 E
23.65<8346>72 676.5 S(rom)-23.65 E F0(XcmsCIEuvY)3.666 E F1(to)3.666 E
F0(XcmsCIEXYZ)3.666 E F1(\(CIE u')3.666 E
(v'Y and XYZ are white-point-independent)-.55 E(color spaces\))99.5
689.5 Q 23.65<8346>72 706.4 S(rom)-23.65 E F0(XcmsCIEXYZ)3.666 E F1(to)
3.666 E F0(XcmsRGBi)3.666 E(110)279.75 769 Q 0 Cg EP
%%Page: 111 116
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E/F1 11/Times-Roman@0 SF 23.65<8346>72
85 S(rom)-23.65 E F0(XcmsRGBi)3.666 E F1(to)3.666 E F0(XcmsRGB)3.666 E
F1(The resulting RGB speci\214cation is passed to)72 101.9 Q F0
(XAllocColor)3.666 E F1 2.75(,a).916 G
(nd the RGB speci\214cation returned)-2.75 E(by)72 114.9 Q F0
(XAllocColor)3.666 E F1(is con)3.666 E -.165(ve)-.44 G(rted back to).165
E F0(XcmsCIEuvY)3.666 E F1(by re)3.666 E -.165(ve)-.275 G
(rsing the color con).165 E -.165(ve)-.44 G(rsion sequence.).165 E F0
2.75(6.11. Gamut)72 140.9 R(Querying Functions)2.75 E F1
(This section describes the g)72 157.8 Q
(amut querying functions that Xlib pro)-.055 E 2.75(vides. These)-.165 F
(functions allo)2.75 E(w)-.275 E
(the client to query the boundary of the screen')72 170.8 Q 2.75(sc)
-.605 G(olor g)-2.75 E(amut in terms of the CIE L*a*b*, CIE)-.055 E
(L*u*v*, and T)72 183.8 Q(ekHVC color spaces.)-.77 E
(Functions are also pro)5.5 E(vided that allo)-.165 E 2.75(wy)-.275 G
(ou to query the color)-2.75 E(speci\214cation of:)72 196.8 Q 23.65
<8357>72 213.7 S(hite \(full-intensity red, green, and blue\))-23.65 E
23.65<8352>72 230.6 S
(ed \(full-intensity red while green and blue are zero\))-23.65 E 23.65
<8347>72 247.5 S
(reen \(full-intensity green while red and blue are zero\))-23.65 E
23.65<8342>72 264.4 S
(lue \(full-intensity blue while red and green are zero\))-23.65 E 23.65
<8342>72 281.3 S(lack \(zero-intensity red, green, and blue\))-23.65 E(\
The white point associated with color speci\214cations passed to and re\
turned from these g)72 298.2 Q(amut)-.055 E
(querying functions is assumed to be the Screen White Point.)72 311.2 Q
(This is a reasonable assumption,)5.5 E
(because the client is trying to query the screen')72 324.2 Q 2.75(sc)
-.605 G(olor g)-2.75 E(amut.)-.055 E(The follo)72 341.1 Q
(wing naming con)-.275 E -.165(ve)-.44 G
(ntion is used for the Max and Min functions:).165 E(Xcms)72 364.5 Q/F2
11/Times-Italic@0 SF(<color_space>)A F1(QueryMax)A F2(<dimensions>)A F1
(Xcms)72 390.5 Q F2(<color_space>)A F1(QueryMin)A F2(<dimensions>)A F1(\
The <dimensions> consists of a letter or letters that identify the dime\
nsions of the color space that)72 413.9 Q(are not \214x)72 426.9 Q 2.75
(ed. F)-.165 F(or e)-.165 E(xample,)-.165 E F0(XcmsT)3.666 E
(ekHVCQueryMaxC)-1.012 E F1(is gi)3.666 E -.165(ve)-.275 G 2.75(na\214)
.165 G -.165(xe)-2.75 G 2.75(dH).165 G(ue and V)-2.75 E(alue for)-1.221
E(which maximum Chroma is found.)72 439.9 Q F0 2.75(6.11.1. Red,)72
465.9 R(Gr)2.75 E(een, and Blue Queries)-.198 E F1 1.76 -.88(To o)72
482.8 T(btain the color speci\214cation for black \(zero-intensity red,\
 green, and blue\), use).88 E F0(XcmsQuery-)3.666 E(Black)72 495.8 Q F1
(.).916 E .44 LW 36 513.55 36 524.55 DL 36 511.55 36 522.55 DL 41.5
509.8 36 509.8 DL 43.5 509.8 38 509.8 DL 49 509.8 43.5 509.8 DL
(Status XcmsQueryBlack)72 525.7 Q(\().916 E F2(ccc).916 E F1(,).916 E F2
(tar)2.75 E -.11(ge)-.407 G(t_format).11 E F1(,).916 E F2(color_r)2.75 E
(eturn)-.407 E F1(\)).916 E(XcmsCCC)88.5 538.7 Q F2(ccc)2.75 E F1(;).916
E(XcmsColorF)88.5 551.7 Q(ormat)-.165 E F2(tar)2.75 E -.11(ge)-.407 G
(t_format).11 E F1(;).916 E(XcmsColor *)88.5 564.7 Q F2(color_r)A(eturn)
-.407 E F1(;).916 E F2(ccc)72 585.5 Q F1(Speci\214es the CCC.)57.348 E
(The CCC')5.5 E 2.75(sC)-.605 G
(lient White Point and white point adjustment)-2.75 E
(procedures are ignored.)144 598.5 Q F2(tar)72 615.4 Q -.11(ge)-.407 G
(t_format).11 E F1(Speci\214es the tar)11.401 E
(get color speci\214cation format.)-.198 E F2(color_r)72 632.3 Q(eturn)
-.407 E F1(Returns the color speci\214cation in the speci\214ed tar)
16.186 E(get format for zero-intensity)-.198 E(red, green, and blue.)144
645.3 Q(The white point associated with the returned color speci\214-)
5.5 E(cation is the Screen White Point.)144 658.3 Q(The v)5.5 E
(alue returned in the pix)-.275 E(el member is)-.165 E(unde\214ned.)144
671.3 Q 36 666.95 36 677.95 DL 36 664.95 36 675.95 DL 41.5 676.2 36
676.2 DL 43.5 676.2 38 676.2 DL 49 676.2 43.5 676.2 DL(The)72 701.2 Q F0
(XcmsQueryBlack)3.666 E F1
(function returns the color speci\214cation in the speci\214ed tar)3.666
E(get format for)-.198 E(zero-intensity red, green, and blue.)72 714.2 Q
F0(111)279.75 769 Q 0 Cg EP
%%Page: 112 117
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E/F1 11/Times-Roman@0 SF 1.76 -.88(To o)
72 85 T(btain the color speci\214cation for blue \(full-intensity blue \
while red and green are zero\), use).88 E F0(XcmsQueryBlue)72.916 98 Q
F1(.).916 E .44 LW 36 115.75 36 126.75 DL 36 113.75 36 124.75 DL 41.5
112 36 112 DL 43.5 112 38 112 DL 49 112 43.5 112 DL
(Status XcmsQueryBlue)72 127.9 Q(\().916 E/F2 11/Times-Italic@0 SF(ccc)
.916 E F1(,).916 E F2(tar)2.75 E -.11(ge)-.407 G(t_format).11 E F1(,)
.916 E F2(color_r)2.75 E(eturn)-.407 E F1(\)).916 E(XcmsCCC)88.5 140.9 Q
F2(ccc)2.75 E F1(;).916 E(XcmsColorF)88.5 153.9 Q(ormat)-.165 E F2(tar)
2.75 E -.11(ge)-.407 G(t_format).11 E F1(;).916 E(XcmsColor *)88.5 166.9
Q F2(color_r)A(eturn)-.407 E F1(;).916 E F2(ccc)72 187.7 Q F1
(Speci\214es the CCC.)57.348 E(The CCC')5.5 E 2.75(sC)-.605 G
(lient White Point and white point adjustment)-2.75 E
(procedures are ignored.)144 200.7 Q F2(tar)72 217.6 Q -.11(ge)-.407 G
(t_format).11 E F1(Speci\214es the tar)11.401 E
(get color speci\214cation format.)-.198 E F2(color_r)72 234.5 Q(eturn)
-.407 E F1(Returns the color speci\214cation in the speci\214ed tar)
16.186 E(get format for full-intensity)-.198 E
(blue while red and green are zero.)144 247.5 Q
(The white point associated with the returned)5.5 E
(color speci\214cation is the Screen White Point.)144 260.5 Q(The v)5.5
E(alue returned in the pix)-.275 E(el)-.165 E(member is unde\214ned.)144
273.5 Q 36 269.15 36 280.15 DL 36 267.15 36 278.15 DL 41.5 278.4 36
278.4 DL 43.5 278.4 38 278.4 DL 49 278.4 43.5 278.4 DL(The)72 303.4 Q F0
(XcmsQueryBlue)3.666 E F1
(function returns the color speci\214cation in the speci\214ed tar)3.666
E(get format for)-.198 E
(full-intensity blue while red and green are zero.)72 316.4 Q 1.76 -.88
(To o)72 346.3 T(btain the color speci\214cation for green \(full-inten\
sity green while red and blue are zero\), use).88 E F0(XcmsQueryGr)
72.916 359.3 Q(een)-.198 E F1(.).916 E 36 377.05 36 388.05 DL 36 375.05
36 386.05 DL 41.5 373.3 36 373.3 DL 43.5 373.3 38 373.3 DL 49 373.3 43.5
373.3 DL(Status XcmsQueryGreen)72 389.2 Q(\().916 E F2(ccc).916 E F1(,)
.916 E F2(tar)2.75 E -.11(ge)-.407 G(t_format).11 E F1(,).916 E F2
(color_r)2.75 E(eturn)-.407 E F1(\)).916 E(XcmsCCC)88.5 402.2 Q F2(ccc)
2.75 E F1(;).916 E(XcmsColorF)88.5 415.2 Q(ormat)-.165 E F2(tar)2.75 E
-.11(ge)-.407 G(t_format).11 E F1(;).916 E(XcmsColor *)88.5 428.2 Q F2
(color_r)A(eturn)-.407 E F1(;).916 E F2(ccc)72 449 Q F1
(Speci\214es the CCC.)57.348 E(The CCC')5.5 E 2.75(sC)-.605 G
(lient White Point and white point adjustment)-2.75 E
(procedures are ignored.)144 462 Q F2(tar)72 478.9 Q -.11(ge)-.407 G
(t_format).11 E F1(Speci\214es the tar)11.401 E
(get color speci\214cation format.)-.198 E F2(color_r)72 495.8 Q(eturn)
-.407 E F1(Returns the color speci\214cation in the speci\214ed tar)
16.186 E(get format for full-intensity)-.198 E
(green while red and blue are zero.)144 508.8 Q
(The white point associated with the returned)5.5 E
(color speci\214cation is the Screen White Point.)144 521.8 Q(The v)5.5
E(alue returned in the pix)-.275 E(el)-.165 E(member is unde\214ned.)144
534.8 Q 36 530.45 36 541.45 DL 36 528.45 36 539.45 DL 41.5 539.7 36
539.7 DL 43.5 539.7 38 539.7 DL 49 539.7 43.5 539.7 DL(The)72 564.7 Q F0
(XcmsQueryGr)3.666 E(een)-.198 E F1
(function returns the color speci\214cation in the speci\214ed tar)3.666
E(get format for)-.198 E
(full-intensity green while red and blue are zero.)72 577.7 Q 1.76 -.88
(To o)72 607.6 T(btain the color speci\214cation for red \(full-intensi\
ty red while green and blue are zero\), use).88 E F0(XcmsQueryRed)72.916
620.6 Q F1(.).916 E F0(112)279.75 769 Q 0 Cg EP
%%Page: 113 118
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E .44 LW 36 76.75 36 87.75 DL 36 74.75
36 85.75 DL 41.5 73 36 73 DL 43.5 73 38 73 DL 49 73 43.5 73 DL/F1 11
/Times-Roman@0 SF(Status XcmsQueryRed)72 88.9 Q(\().916 E/F2 11
/Times-Italic@0 SF(ccc).916 E F1(,).916 E F2(tar)2.75 E -.11(ge)-.407 G
(t_format).11 E F1(,).916 E F2(color_r)2.75 E(eturn)-.407 E F1(\)).916 E
(XcmsCCC)88.5 101.9 Q F2(ccc)2.75 E F1(;).916 E(XcmsColorF)88.5 114.9 Q
(ormat)-.165 E F2(tar)2.75 E -.11(ge)-.407 G(t_format).11 E F1(;).916 E
(XcmsColor *)88.5 127.9 Q F2(color_r)A(eturn)-.407 E F1(;).916 E F2(ccc)
72 148.7 Q F1(Speci\214es the CCC.)57.348 E(The CCC')5.5 E 2.75(sC)-.605
G(lient White Point and white point adjustment)-2.75 E
(procedures are ignored.)144 161.7 Q F2(tar)72 178.6 Q -.11(ge)-.407 G
(t_format).11 E F1(Speci\214es the tar)11.401 E
(get color speci\214cation format.)-.198 E F2(color_r)72 195.5 Q(eturn)
-.407 E F1(Returns the color speci\214cation in the speci\214ed tar)
16.186 E(get format for full-intensity red)-.198 E
(while green and blue are zero.)144 208.5 Q
(The white point associated with the returned color)5.5 E
(speci\214cation is the Screen White Point.)144 221.5 Q(The v)5.5 E
(alue returned in the pix)-.275 E(el member)-.165 E(is unde\214ned.)144
234.5 Q 36 230.15 36 241.15 DL 36 228.15 36 239.15 DL 41.5 239.4 36
239.4 DL 43.5 239.4 38 239.4 DL 49 239.4 43.5 239.4 DL(The)72 264.4 Q F0
(XcmsQueryRed)3.666 E F1
(function returns the color speci\214cation in the speci\214ed tar)3.666
E(get format for)-.198 E
(full-intensity red while green and blue are zero.)72 277.4 Q 1.76 -.88
(To o)72 307.3 T(btain the color speci\214cation for white \(full-inten\
sity red, green, and blue\), use).88 E F0(XcmsQuery-)3.666 E(White)72
320.3 Q F1(.).916 E 36 338.05 36 349.05 DL 36 336.05 36 347.05 DL 41.5
334.3 36 334.3 DL 43.5 334.3 38 334.3 DL 49 334.3 43.5 334.3 DL
(Status XcmsQueryWhite)72 350.2 Q(\().916 E F2(ccc).916 E F1(,).916 E F2
(tar)2.75 E -.11(ge)-.407 G(t_format).11 E F1(,).916 E F2(color_r)2.75 E
(eturn)-.407 E F1(\)).916 E(XcmsCCC)88.5 363.2 Q F2(ccc)2.75 E F1(;).916
E(XcmsColorF)88.5 376.2 Q(ormat)-.165 E F2(tar)2.75 E -.11(ge)-.407 G
(t_format).11 E F1(;).916 E(XcmsColor *)88.5 389.2 Q F2(color_r)A(eturn)
-.407 E F1(;).916 E F2(ccc)72 410 Q F1(Speci\214es the CCC.)57.348 E
(The CCC')5.5 E 2.75(sC)-.605 G
(lient White Point and white point adjustment)-2.75 E
(procedures are ignored.)144 423 Q F2(tar)72 439.9 Q -.11(ge)-.407 G
(t_format).11 E F1(Speci\214es the tar)11.401 E
(get color speci\214cation format.)-.198 E F2(color_r)72 456.8 Q(eturn)
-.407 E F1(Returns the color speci\214cation in the speci\214ed tar)
16.186 E(get format for full-intensity red,)-.198 E(green, and blue.)144
469.8 Q
(The white point associated with the returned color speci\214cation)5.5
E(is the Screen White Point.)144 482.8 Q(The v)5.5 E
(alue returned in the pix)-.275 E(el member is unde\214ned.)-.165 E 36
478.45 36 489.45 DL 36 476.45 36 487.45 DL 41.5 487.7 36 487.7 DL 43.5
487.7 38 487.7 DL 49 487.7 43.5 487.7 DL(The)72 512.7 Q F0
(XcmsQueryWhite)3.666 E F1
(function returns the color speci\214cation in the speci\214ed tar)3.666
E(get format for)-.198 E(full-intensity red, green, and blue.)72 525.7 Q
F0 2.75(6.11.2. CIELab)72 551.7 R(Queries)2.75 E F1(The follo)72 568.6 Q
(wing equations are useful in describing the CIELab query functions:)
-.275 E F2 1.133(CIELab Psychometric)71.824 605.475 R(Chroma)3.245 E/F3
11/Symbol SF(=)3.366 E F2(sqrt)3.454 E F1(\().748 E F2(a).363 E F1(_)
.286 E F2(star).374 E/F4 7.7/Times-Roman@0 SF(2).803 -4.62 M F3(+)3.63
4.62 M F2(b)3.377 E F1(_).253 E F2(star).374 E F4(2).803 -4.62 M F1(\))
.55 4.62 M F2 1.133(CIELab Psychometric)71.824 641.485 R(Hue)4.059 E F3
(=)3.278 E F1(tan)3.08 E/F5 7.7/Symbol SF(-)-4.62 I F4(1)A F3<e9>2.42
-4.565 M<ea>-4.224 11 M<eb>-4.224 11 M F2(b)1.666 -20.515 M F1(_).253 E
F2(star).374 E(a)-28.726 15.4 M F1(_).286 E F2(star).374 E 264.624
638.625 234.682 638.625 DL F3<f9>265.944 632.3 Q<fa>-4.224 11 M<fb>
-4.224 11 M F1 1.76 -.88(To o)72 683.775 T(btain the CIE L*a*b* coordin\
ates of maximum Psychometric Chroma for a gi).88 E -.165(ve)-.275 G 2.75
(nP).165 G(sychome-)-2.75 E
(tric Hue Angle and CIE metric lightness \(L*\), use)72 696.775 Q F0
(XcmsCIELabQueryMaxC)3.666 E F1(.).916 E F0(113)279.75 769 Q 0 Cg EP
%%Page: 114 119
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E .44 LW 36 76.75 36 87.75 DL 36 74.75
36 85.75 DL 41.5 73 36 73 DL 43.5 73 38 73 DL 49 73 43.5 73 DL/F1 11
/Times-Roman@0 SF(Status XcmsCIELabQueryMaxC)72 88.9 Q(\().916 E/F2 11
/Times-Italic@0 SF(ccc).916 E F1(,).916 E F2(hue_angle)2.75 E F1(,).916
E F2(L_star)2.75 E F1(,).916 E F2(color_r)2.75 E(eturn)-.407 E F1(\))
.916 E(XcmsCCC)88.5 101.9 Q F2(ccc)2.75 E F1(;).916 E(XcmsFloat)88.5
114.9 Q F2(hue_angle)2.75 E F1(;).916 E(XcmsFloat)88.5 127.9 Q F2
(L_star)2.75 E F1(;).916 E(XcmsColor *)88.5 140.9 Q F2(color_r)A(eturn)
-.407 E F1(;).916 E F2(ccc)72 161.7 Q F1(Speci\214es the CCC.)57.348 E
(The CCC')5.5 E 2.75(sC)-.605 G
(lient White Point and white point adjustment)-2.75 E
(procedures are ignored.)144 174.7 Q F2(hue_angle)72 191.6 Q F1
(Speci\214es the hue angle \(in de)26.174 E
(grees\) at which to \214nd maximum chroma.)-.165 E F2(L_star)72 208.5 Q
F1(Speci\214es the lightness \(L*\) at which to \214nd maximum chroma.)
43.268 E F2(color_r)72 225.4 Q(eturn)-.407 E F1(Returns the CIE L*a*b* \
coordinates of maximum chroma displayable by the)16.186 E
(screen for the gi)144 238.4 Q -.165(ve)-.275 G 2.75(nh).165 G
(ue angle and lightness.)-2.75 E(The white point associated with the)5.5
E(returned color speci\214cation is the Screen White Point.)144 251.4 Q
(The v)5.5 E(alue returned in the)-.275 E(pix)144 264.4 Q
(el member is unde\214ned.)-.165 E 36 260.05 36 271.05 DL 36 258.05 36
269.05 DL 41.5 269.3 36 269.3 DL 43.5 269.3 38 269.3 DL 49 269.3 43.5
269.3 DL(The)72 294.3 Q F0(XcmsCIELabQueryMaxC)3.666 E F1(function, gi)
3.666 E -.165(ve)-.275 G 2.75(nah).165 G
(ue angle and lightness, \214nds the point of)-2.75 E
(maximum chroma displayable by the screen.)72 307.3 Q
(It returns this point in CIE L*a*b* coordinates.)5.5 E 1.76 -.88(To o)
72 337.2 T(btain the CIE L*a*b* coordinates of maximum CIE metric light\
ness \(L*\) for a gi).88 E -.165(ve)-.275 G 2.75(nP).165 G(sycho-)-2.75
E(metric Hue Angle and Psychometric Chroma, use)72 350.2 Q F0
(XcmsCIELabQueryMaxL)3.666 E F1(.).916 E 36 367.95 36 378.95 DL 36
365.95 36 376.95 DL 41.5 364.2 36 364.2 DL 43.5 364.2 38 364.2 DL 49
364.2 43.5 364.2 DL(Status XcmsCIELabQueryMaxL)72 380.1 Q(\().916 E F2
(ccc).916 E F1(,).916 E F2(hue_angle)2.75 E F1(,).916 E F2 -.165(ch)2.75
G -.495(ro).165 G(ma).495 E F1(,).916 E F2(color_r)2.75 E(eturn)-.407 E
F1(\)).916 E(XcmsCCC)88.5 393.1 Q F2(ccc)2.75 E F1(;).916 E(XcmsFloat)
88.5 406.1 Q F2(hue_angle)2.75 E F1(;).916 E(XcmsFloat)88.5 419.1 Q F2
-.165(ch)2.75 G -.495(ro).165 G(ma).495 E F1(;).916 E(XcmsColor *)88.5
432.1 Q F2(color_r)A(eturn)-.407 E F1(;).916 E F2(ccc)72 452.9 Q F1
(Speci\214es the CCC.)57.348 E(The CCC')5.5 E 2.75(sC)-.605 G
(lient White Point and white point adjustment)-2.75 E
(procedures are ignored.)144 465.9 Q F2(hue_angle)72 482.8 Q F1
(Speci\214es the hue angle \(in de)26.174 E
(grees\) at which to \214nd maximum lightness.)-.165 E F2 -.165(ch)72
499.7 S -.495(ro).165 G(ma).495 E F1
(Speci\214es the chroma at which to \214nd maximum lightness.)39.055 E
F2(color_r)72 516.6 Q(eturn)-.407 E F1(Returns the CIE L*a*b* coordinat\
es of maximum lightness displayable by the)16.186 E(screen for the gi)
144 529.6 Q -.165(ve)-.275 G 2.75(nh).165 G(ue angle and chroma.)-2.75 E
(The white point associated with the)5.5 E
(returned color speci\214cation is the Screen White Point.)144 542.6 Q
(The v)5.5 E(alue returned in the)-.275 E(pix)144 555.6 Q
(el member is unde\214ned.)-.165 E 36 551.25 36 562.25 DL 36 549.25 36
560.25 DL 41.5 560.5 36 560.5 DL 43.5 560.5 38 560.5 DL 49 560.5 43.5
560.5 DL(The)72 585.5 Q F0(XcmsCIELabQueryMaxL)3.666 E F1(function, gi)
3.666 E -.165(ve)-.275 G 2.75(nah).165 G
(ue angle and chroma, \214nds the point in CIE)-2.75 E(L*a*b* color spa\
ce of maximum lightness \(L*\) displayable by the screen.)72 598.5 Q
(It returns this point in)5.5 E(CIE L*a*b* coordinates.)72 611.5 Q(An)
5.5 E F0(XcmsF)3.666 E(ailur)-.275 E(e)-.198 E F1(return v)3.666 E
(alue usually indicates that the gi)-.275 E -.165(ve)-.275 G 2.75(nc)
.165 G(hroma)-2.75 E(is be)72 624.5 Q(yond maximum for the gi)-.165 E
-.165(ve)-.275 G 2.75(nh).165 G(ue angle.)-2.75 E 1.76 -.88(To o)72
654.4 T(btain the CIE L*a*b* coordinates of maximum Psychometric Chroma\
 for a gi).88 E -.165(ve)-.275 G 2.75(nP).165 G(sychome-)-2.75 E
(tric Hue Angle, use)72 667.4 Q F0(XcmsCIELabQueryMaxLC)3.666 E F1(.)
.916 E F0(114)279.75 769 Q 0 Cg EP
%%Page: 115 120
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E .44 LW 36 76.75 36 87.75 DL 36 74.75
36 85.75 DL 41.5 73 36 73 DL 43.5 73 38 73 DL 49 73 43.5 73 DL/F1 11
/Times-Roman@0 SF(Status XcmsCIELabQueryMaxLC)72 88.9 Q(\().916 E/F2 11
/Times-Italic@0 SF(ccc).916 E F1(,).916 E F2(hue_angle)2.75 E F1(,).916
E F2(color_r)2.75 E(eturn)-.407 E F1(\)).916 E(XcmsCCC)88.5 101.9 Q F2
(ccc)2.75 E F1(;).916 E(XcmsFloat)88.5 114.9 Q F2(hue_angle)2.75 E F1(;)
.916 E(XcmsColor *)88.5 127.9 Q F2(color_r)A(eturn)-.407 E F1(;).916 E
F2(ccc)72 148.7 Q F1(Speci\214es the CCC.)57.348 E(The CCC')5.5 E 2.75
(sC)-.605 G(lient White Point and white point adjustment)-2.75 E
(procedures are ignored.)144 161.7 Q F2(hue_angle)72 178.6 Q F1
(Speci\214es the hue angle \(in de)26.174 E
(grees\) at which to \214nd maximum chroma.)-.165 E F2(color_r)72 195.5
Q(eturn)-.407 E F1(Returns the CIE L*a*b* coordinates of maximum chroma\
 displayable by the)16.186 E(screen for the gi)144 208.5 Q -.165(ve)
-.275 G 2.75(nh).165 G(ue angle.)-2.75 E
(The white point associated with the returned)5.5 E
(color speci\214cation is the Screen White Point.)144 221.5 Q(The v)5.5
E(alue returned in the pix)-.275 E(el)-.165 E(member is unde\214ned.)144
234.5 Q 36 230.15 36 241.15 DL 36 228.15 36 239.15 DL 41.5 239.4 36
239.4 DL 43.5 239.4 38 239.4 DL 49 239.4 43.5 239.4 DL(The)72 264.4 Q F0
(XcmsCIELabQueryMaxLC)3.666 E F1(function, gi)3.666 E -.165(ve)-.275 G
2.75(nah).165 G(ue angle, \214nds the point of maximum)-2.75 E
(chroma displayable by the screen.)72 277.4 Q
(It returns this point in CIE L*a*b* coordinates.)5.5 E 1.76 -.88(To o)
72 307.3 T(btain the CIE L*a*b* coordinates of minimum CIE metric light\
ness \(L*\) for a gi).88 E -.165(ve)-.275 G 2.75(nP).165 G(sycho-)-2.75
E(metric Hue Angle and Psychometric Chroma, use)72 320.3 Q F0
(XcmsCIELabQueryMinL)3.666 E F1(.).916 E 36 338.05 36 349.05 DL 36
336.05 36 347.05 DL 41.5 334.3 36 334.3 DL 43.5 334.3 38 334.3 DL 49
334.3 43.5 334.3 DL(Status XcmsCIELabQueryMinL)72 350.2 Q(\().916 E F2
(ccc).916 E F1(,).916 E F2(hue_angle)2.75 E F1(,).916 E F2 -.165(ch)2.75
G -.495(ro).165 G(ma).495 E F1(,).916 E F2(color_r)2.75 E(eturn)-.407 E
F1(\)).916 E(XcmsCCC)88.5 363.2 Q F2(ccc)2.75 E F1(;).916 E(XcmsFloat)
88.5 376.2 Q F2(hue_angle)2.75 E F1(;).916 E(XcmsFloat)88.5 389.2 Q F2
-.165(ch)2.75 G -.495(ro).165 G(ma).495 E F1(;).916 E(XcmsColor *)88.5
402.2 Q F2(color_r)A(eturn)-.407 E F1(;).916 E F2(ccc)72 423 Q F1
(Speci\214es the CCC.)57.348 E(The CCC')5.5 E 2.75(sC)-.605 G
(lient White Point and white point adjustment)-2.75 E
(procedures are ignored.)144 436 Q F2(hue_angle)72 452.9 Q F1
(Speci\214es the hue angle \(in de)26.174 E
(grees\) at which to \214nd minimum lightness.)-.165 E F2 -.165(ch)72
469.8 S -.495(ro).165 G(ma).495 E F1
(Speci\214es the chroma at which to \214nd minimum lightness.)39.055 E
F2(color_r)72 486.7 Q(eturn)-.407 E F1(Returns the CIE L*a*b* coordinat\
es of minimum lightness displayable by the)16.186 E(screen for the gi)
144 499.7 Q -.165(ve)-.275 G 2.75(nh).165 G(ue angle and chroma.)-2.75 E
(The white point associated with the)5.5 E
(returned color speci\214cation is the Screen White Point.)144 512.7 Q
(The v)5.5 E(alue returned in the)-.275 E(pix)144 525.7 Q
(el member is unde\214ned.)-.165 E 36 521.35 36 532.35 DL 36 519.35 36
530.35 DL 41.5 530.6 36 530.6 DL 43.5 530.6 38 530.6 DL 49 530.6 43.5
530.6 DL(The)72 555.6 Q F0(XcmsCIELabQueryMinL)3.666 E F1(function, gi)
3.666 E -.165(ve)-.275 G 2.75(nah).165 G
(ue angle and chroma, \214nds the point of mini-)-2.75 E
(mum lightness \(L*\) displayable by the screen.)72 568.6 Q
(It returns this point in CIE L*a*b* coordinates.)5.5 E(An)72 581.6 Q F0
(XcmsF)3.666 E(ailur)-.275 E(e)-.198 E F1(return v)3.666 E
(alue usually indicates that the gi)-.275 E -.165(ve)-.275 G 2.75(nc)
.165 G(hroma is be)-2.75 E(yond maximum for the)-.165 E(gi)72 594.6 Q
-.165(ve)-.275 G 2.75(nh).165 G(ue angle.)-2.75 E F0 2.75
(6.11.3. CIELuv)72 620.6 R(Queries)2.75 E F1(The follo)72 637.5 Q
(wing equations are useful in describing the CIELuv query functions:)
-.275 E F2 1.232(CIELuv Psychometric)71.824 674.375 R(Chroma)3.245 E/F3
11/Symbol SF(=)3.366 E F2(sqrt)3.454 E F1(\().748 E F2(u).088 E F1(_)
.275 E F2(star).374 E/F4 7.7/Times-Roman@0 SF(2).803 -4.62 M F3(+)3.63
4.62 M F2(v)3.399 E F1(_).352 E F2(star).374 E F4(2).803 -4.62 M F1(\))
.55 4.62 M F2 1.232(CIELuv Psychometric)71.824 704.885 R(Hue)4.059 E F3
(=)3.278 E F1(tan)3.08 E/F5 7.7/Symbol SF(-)-4.62 I F4(1)A F3<e9>2.42
.935 M<eb>-4.224 11 M F2(v)1.793 -15.015 M F1(_).352 E F2(star).374 E(u)
-28.611 15.4 M F1(_).275 E F2(star).374 E 263.821 702.025 234.165
702.025 DL F3<f9>265.141 701.2 Q<fb>-4.224 11 M F0(115)279.75 769 Q 0 Cg
EP
%%Page: 116 121
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E/F1 11/Times-Roman@0 SF 1.76 -.88(To o)
72 85 T(btain the CIE L*u*v* coordinates of maximum Psychometric Chroma\
 for a gi).88 E -.165(ve)-.275 G 2.75(nP).165 G(sychome-)-2.75 E
(tric Hue Angle and CIE metric lightness \(L*\), use)72 98 Q F0
(XcmsCIELuvQueryMaxC)3.666 E F1(.).916 E .44 LW 36 115.75 36 126.75 DL
36 113.75 36 124.75 DL 41.5 112 36 112 DL 43.5 112 38 112 DL 49 112 43.5
112 DL(Status XcmsCIELuvQueryMaxC)72 127.9 Q(\().916 E/F2 11
/Times-Italic@0 SF(ccc).916 E F1(,).916 E F2(hue_angle)2.75 E F1(,).916
E F2(L_star)2.75 E F1(,).916 E F2(color_r)2.75 E(eturn)-.407 E F1(\))
.916 E(XcmsCCC)88.5 140.9 Q F2(ccc)2.75 E F1(;).916 E(XcmsFloat)88.5
153.9 Q F2(hue_angle)2.75 E F1(;).916 E(XcmsFloat)88.5 166.9 Q F2
(L_star)2.75 E F1(;).916 E(XcmsColor *)88.5 179.9 Q F2(color_r)A(eturn)
-.407 E F1(;).916 E F2(ccc)72 200.7 Q F1(Speci\214es the CCC.)57.348 E
(The CCC')5.5 E 2.75(sC)-.605 G
(lient White Point and white point adjustment)-2.75 E
(procedures are ignored.)144 213.7 Q F2(hue_angle)72 230.6 Q F1
(Speci\214es the hue angle \(in de)26.174 E
(grees\) at which to \214nd maximum chroma.)-.165 E F2(L_star)72 247.5 Q
F1(Speci\214es the lightness \(L*\) at which to \214nd maximum chroma.)
43.268 E F2(color_r)72 264.4 Q(eturn)-.407 E F1(Returns the CIE L*u*v* \
coordinates of maximum chroma displayable by the)16.186 E
(screen for the gi)144 277.4 Q -.165(ve)-.275 G 2.75(nh).165 G
(ue angle and lightness.)-2.75 E(The white point associated with the)5.5
E(returned color speci\214cation is the Screen White Point.)144 290.4 Q
(The v)5.5 E(alue returned in the)-.275 E(pix)144 303.4 Q
(el member is unde\214ned.)-.165 E 36 299.05 36 310.05 DL 36 297.05 36
308.05 DL 41.5 308.3 36 308.3 DL 43.5 308.3 38 308.3 DL 49 308.3 43.5
308.3 DL(The)72 333.3 Q F0(XcmsCIELuvQueryMaxC)3.666 E F1(function, gi)
3.666 E -.165(ve)-.275 G 2.75(nah).165 G
(ue angle and lightness, \214nds the point of)-2.75 E
(maximum chroma displayable by the screen.)72 346.3 Q
(It returns this point in CIE L*u*v* coordinates.)5.5 E 1.76 -.88(To o)
72 376.2 T(btain the CIE L*u*v* coordinates of maximum CIE metric light\
ness \(L*\) for a gi).88 E -.165(ve)-.275 G 2.75(nP).165 G(sycho-)-2.75
E(metric Hue Angle and Psychometric Chroma, use)72 389.2 Q F0
(XcmsCIELuvQueryMaxL)3.666 E F1(.).916 E 36 406.95 36 417.95 DL 36
404.95 36 415.95 DL 41.5 403.2 36 403.2 DL 43.5 403.2 38 403.2 DL 49
403.2 43.5 403.2 DL(Status XcmsCIELuvQueryMaxL)72 419.1 Q(\().916 E F2
(ccc).916 E F1(,).916 E F2(hue_angle)2.75 E F1(,).916 E F2 -.165(ch)2.75
G -.495(ro).165 G(ma).495 E F1(,).916 E F2(color_r)2.75 E(eturn)-.407 E
F1(\)).916 E(XcmsCCC)88.5 432.1 Q F2(ccc)2.75 E F1(;).916 E(XcmsFloat)
88.5 445.1 Q F2(hue_angle)2.75 E F1(;).916 E(XcmsFloat)88.5 458.1 Q F2
-.165(ch)2.75 G -.495(ro).165 G(ma).495 E F1(;).916 E(XcmsColor *)88.5
471.1 Q F2(color_r)A(eturn)-.407 E F1(;).916 E F2(ccc)72 491.9 Q F1
(Speci\214es the CCC.)57.348 E(The CCC')5.5 E 2.75(sC)-.605 G
(lient White Point and white point adjustment)-2.75 E
(procedures are ignored.)144 504.9 Q F2(hue_angle)72 521.8 Q F1
(Speci\214es the hue angle \(in de)26.174 E
(grees\) at which to \214nd maximum lightness.)-.165 E F2(L_star)72
538.7 Q F1
(Speci\214es the lightness \(L*\) at which to \214nd maximum lightness.)
43.268 E F2(color_r)72 555.6 Q(eturn)-.407 E F1(Returns the CIE L*u*v* \
coordinates of maximum lightness displayable by the)16.186 E
(screen for the gi)144 568.6 Q -.165(ve)-.275 G 2.75(nh).165 G
(ue angle and chroma.)-2.75 E(The white point associated with the)5.5 E
(returned color speci\214cation is the Screen White Point.)144 581.6 Q
(The v)5.5 E(alue returned in the)-.275 E(pix)144 594.6 Q
(el member is unde\214ned.)-.165 E 36 590.25 36 601.25 DL 36 588.25 36
599.25 DL 41.5 599.5 36 599.5 DL 43.5 599.5 38 599.5 DL 49 599.5 43.5
599.5 DL(The)72 624.5 Q F0(XcmsCIELuvQueryMaxL)3.666 E F1(function, gi)
3.666 E -.165(ve)-.275 G 2.75(nah).165 G
(ue angle and chroma, \214nds the point in CIE)-2.75 E(L*u*v* color spa\
ce of maximum lightness \(L*\) displayable by the screen.)72 637.5 Q
(It returns this point in)5.5 E(CIE L*u*v* coordinates.)72 650.5 Q(An)
5.5 E F0(XcmsF)3.666 E(ailur)-.275 E(e)-.198 E F1(return v)3.666 E
(alue usually indicates that the gi)-.275 E -.165(ve)-.275 G 2.75(nc)
.165 G(hroma)-2.75 E(is be)72 663.5 Q(yond maximum for the gi)-.165 E
-.165(ve)-.275 G 2.75(nh).165 G(ue angle.)-2.75 E 1.76 -.88(To o)72
693.4 T(btain the CIE L*u*v* coordinates of maximum Psychometric Chroma\
 for a gi).88 E -.165(ve)-.275 G 2.75(nP).165 G(sychome-)-2.75 E
(tric Hue Angle, use)72 706.4 Q F0(XcmsCIELuvQueryMaxLC)3.666 E F1(.)
.916 E F0(116)279.75 769 Q 0 Cg EP
%%Page: 117 122
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E .44 LW 36 76.75 36 87.75 DL 36 74.75
36 85.75 DL 41.5 73 36 73 DL 43.5 73 38 73 DL 49 73 43.5 73 DL/F1 11
/Times-Roman@0 SF(Status XcmsCIELuvQueryMaxLC)72 88.9 Q(\().916 E/F2 11
/Times-Italic@0 SF(ccc).916 E F1(,).916 E F2(hue_angle)2.75 E F1(,).916
E F2(color_r)2.75 E(eturn)-.407 E F1(\)).916 E(XcmsCCC)88.5 101.9 Q F2
(ccc)2.75 E F1(;).916 E(XcmsFloat)88.5 114.9 Q F2(hue_angle)2.75 E F1(;)
.916 E(XcmsColor *)88.5 127.9 Q F2(color_r)A(eturn)-.407 E F1(;).916 E
F2(ccc)72 148.7 Q F1(Speci\214es the CCC.)57.348 E(The CCC')5.5 E 2.75
(sC)-.605 G(lient White Point and white point adjustment)-2.75 E
(procedures are ignored.)144 161.7 Q F2(hue_angle)72 178.6 Q F1
(Speci\214es the hue angle \(in de)26.174 E
(grees\) at which to \214nd maximum chroma.)-.165 E F2(color_r)72 195.5
Q(eturn)-.407 E F1(Returns the CIE L*u*v* coordinates of maximum chroma\
 displayable by the)16.186 E(screen for the gi)144 208.5 Q -.165(ve)
-.275 G 2.75(nh).165 G(ue angle.)-2.75 E
(The white point associated with the returned)5.5 E
(color speci\214cation is the Screen White Point.)144 221.5 Q(The v)5.5
E(alue returned in the pix)-.275 E(el)-.165 E(member is unde\214ned.)144
234.5 Q 36 230.15 36 241.15 DL 36 228.15 36 239.15 DL 41.5 239.4 36
239.4 DL 43.5 239.4 38 239.4 DL 49 239.4 43.5 239.4 DL(The)72 264.4 Q F0
(XcmsCIELuvQueryMaxLC)3.666 E F1(function, gi)3.666 E -.165(ve)-.275 G
2.75(nah).165 G(ue angle, \214nds the point of maximum)-2.75 E
(chroma displayable by the screen.)72 277.4 Q
(It returns this point in CIE L*u*v* coordinates.)5.5 E 1.76 -.88(To o)
72 307.3 T(btain the CIE L*u*v* coordinates of minimum CIE metric light\
ness \(L*\) for a gi).88 E -.165(ve)-.275 G 2.75(nP).165 G(sycho-)-2.75
E(metric Hue Angle and Psychometric Chroma, use)72 320.3 Q F0
(XcmsCIELuvQueryMinL)3.666 E F1(.).916 E 36 338.05 36 349.05 DL 36
336.05 36 347.05 DL 41.5 334.3 36 334.3 DL 43.5 334.3 38 334.3 DL 49
334.3 43.5 334.3 DL(Status XcmsCIELuvQueryMinL)72 350.2 Q(\().916 E F2
(ccc).916 E F1(,).916 E F2(hue_angle)2.75 E F1(,).916 E F2 -.165(ch)2.75
G -.495(ro).165 G(ma).495 E F1(,).916 E F2(color_r)2.75 E(eturn)-.407 E
F1(\)).916 E(XcmsCCC)88.5 363.2 Q F2(ccc)2.75 E F1(;).916 E(XcmsFloat)
88.5 376.2 Q F2(hue_angle)2.75 E F1(;).916 E(XcmsFloat)88.5 389.2 Q F2
-.165(ch)2.75 G -.495(ro).165 G(ma).495 E F1(;).916 E(XcmsColor *)88.5
402.2 Q F2(color_r)A(eturn)-.407 E F1(;).916 E F2(ccc)72 423 Q F1
(Speci\214es the CCC.)57.348 E(The CCC')5.5 E 2.75(sC)-.605 G
(lient White Point and white point adjustment)-2.75 E
(procedures are ignored.)144 436 Q F2(hue_angle)72 452.9 Q F1
(Speci\214es the hue angle \(in de)26.174 E
(grees\) at which to \214nd minimum lightness.)-.165 E F2 -.165(ch)72
469.8 S -.495(ro).165 G(ma).495 E F1
(Speci\214es the chroma at which to \214nd minimum lightness.)39.055 E
F2(color_r)72 486.7 Q(eturn)-.407 E F1(Returns the CIE L*u*v* coordinat\
es of minimum lightness displayable by the)16.186 E(screen for the gi)
144 499.7 Q -.165(ve)-.275 G 2.75(nh).165 G(ue angle and chroma.)-2.75 E
(The white point associated with the)5.5 E
(returned color speci\214cation is the Screen White Point.)144 512.7 Q
(The v)5.5 E(alue returned in the)-.275 E(pix)144 525.7 Q
(el member is unde\214ned.)-.165 E 36 521.35 36 532.35 DL 36 519.35 36
530.35 DL 41.5 530.6 36 530.6 DL 43.5 530.6 38 530.6 DL 49 530.6 43.5
530.6 DL(The)72 555.6 Q F0(XcmsCIELuvQueryMinL)3.666 E F1(function, gi)
3.666 E -.165(ve)-.275 G 2.75(nah).165 G
(ue angle and chroma, \214nds the point of mini-)-2.75 E
(mum lightness \(L*\) displayable by the screen.)72 568.6 Q
(It returns this point in CIE L*u*v* coordinates.)5.5 E(An)72 581.6 Q F0
(XcmsF)3.666 E(ailur)-.275 E(e)-.198 E F1(return v)3.666 E
(alue usually indicates that the gi)-.275 E -.165(ve)-.275 G 2.75(nc)
.165 G(hroma is be)-2.75 E(yond maximum for the)-.165 E(gi)72 594.6 Q
-.165(ve)-.275 G 2.75(nh).165 G(ue angle.)-2.75 E F0 2.75(6.11.4. T)72
620.6 R(ekHVC Queries)-1.012 E F1 1.76 -.88(To o)72 637.5 T
(btain the maximum Chroma for a gi).88 E -.165(ve)-.275 G 2.75(nH).165 G
(ue and V)-2.75 E(alue, use)-1.221 E F0(XcmsT)3.666 E(ekHVCQueryMaxC)
-1.012 E F1(.).916 E F0(117)279.75 769 Q 0 Cg EP
%%Page: 118 123
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E .44 LW 36 76.75 36 87.75 DL 36 74.75
36 85.75 DL 41.5 73 36 73 DL 43.5 73 38 73 DL 49 73 43.5 73 DL/F1 11
/Times-Roman@0 SF(Status XcmsT)72 88.9 Q -1.834(ekHVCQueryMaxC \()-.77 F
/F2 11/Times-Italic@0 SF(ccc).916 E F1(,).916 E F2(hue)2.75 E F1(,).916
E F2(value)2.75 E F1(,).916 E F2(color_r)2.75 E(eturn)-.407 E F1(\)).916
E(XcmsCCC)88.5 101.9 Q F2(ccc)2.75 E F1(;).916 E(XcmsFloat)88.5 114.9 Q
F2(hue)2.75 E F1(;).916 E(XcmsFloat)88.5 127.9 Q F2(value)2.75 E F1(;)
.916 E(XcmsColor *)88.5 140.9 Q F2(color_r)A(eturn)-.407 E F1(;).916 E
F2(ccc)72 161.7 Q F1(Speci\214es the CCC.)57.348 E(The CCC')5.5 E 2.75
(sC)-.605 G(lient White Point and white point adjustment)-2.75 E
(procedures are ignored.)144 174.7 Q F2(hue)72 191.6 Q F1
(Speci\214es the Hue in which to \214nd the maximum Chroma.)56.116 E F2
(value)72 208.5 Q F1(Speci\214es the V)48.174 E
(alue in which to \214nd the maximum Chroma.)-1.221 E F2(color_r)72
225.4 Q(eturn)-.407 E F1
(Returns the maximum Chroma along with the actual Hue and V)16.186 E
2.75(alue at)-1.221 F(which the)2.75 E(maximum Chroma w)144 238.4 Q
(as found.)-.11 E(The white point associated with the returned)5.5 E
(color speci\214cation is the Screen White Point.)144 251.4 Q(The v)5.5
E(alue returned in the pix)-.275 E(el)-.165 E(member is unde\214ned.)144
264.4 Q 36 260.05 36 271.05 DL 36 258.05 36 269.05 DL 41.5 269.3 36
269.3 DL 43.5 269.3 38 269.3 DL 49 269.3 43.5 269.3 DL(The)72 294.3 Q F0
(XcmsT)3.666 E(ekHVCQueryMaxC)-1.012 E F1(function, gi)3.666 E -.165(ve)
-.275 G 2.75(naH).165 G(ue and V)-2.75 E(alue, determines the maximum)
-1.221 E(Chroma in T)72 307.3 Q
(ekHVC color space displayable by the screen.)-.77 E
(It returns the maximum Chroma)5.5 E(along with the actual Hue and V)72
320.3 Q(alue at which the maximum Chroma w)-1.221 E(as found.)-.11 E
1.76 -.88(To o)72 350.2 T(btain the maximum V).88 E(alue for a gi)-1.221
E -.165(ve)-.275 G 2.75(nH).165 G(ue and Chroma, use)-2.75 E F0(XcmsT)
3.666 E(ekHVCQueryMaxV)-1.012 E F1(.).916 E 36 367.95 36 378.95 DL 36
365.95 36 376.95 DL 41.5 364.2 36 364.2 DL 43.5 364.2 38 364.2 DL 49
364.2 43.5 364.2 DL(Status XcmsT)72 380.1 Q -1.834(ekHVCQueryMaxV \()
-.77 F F2(ccc).916 E F1(,).916 E F2(hue)2.75 E F1(,).916 E F2 -.165(ch)
2.75 G -.495(ro).165 G(ma).495 E F1(,).916 E F2(color_r)2.75 E(eturn)
-.407 E F1(\)).916 E(XcmsCCC)88.5 393.1 Q F2(ccc)2.75 E F1(;).916 E
(XcmsFloat)88.5 406.1 Q F2(hue)2.75 E F1(;).916 E(XcmsFloat)88.5 419.1 Q
F2 -.165(ch)2.75 G -.495(ro).165 G(ma).495 E F1(;).916 E(XcmsColor *)
88.5 432.1 Q F2(color_r)A(eturn)-.407 E F1(;).916 E F2(ccc)72 452.9 Q F1
(Speci\214es the CCC.)57.348 E(The CCC')5.5 E 2.75(sC)-.605 G
(lient White Point and white point adjustment)-2.75 E
(procedures are ignored.)144 465.9 Q F2(hue)72 482.8 Q F1
(Speci\214es the Hue in which to \214nd the maximum V)56.116 E(alue.)
-1.221 E F2 -.165(ch)72 499.7 S -.495(ro).165 G(ma).495 E F1
(Speci\214es the chroma at which to \214nd maximum V)39.055 E(alue.)
-1.221 E F2(color_r)72 516.6 Q(eturn)-.407 E F1(Returns the maximum V)
16.186 E(alue along with the Hue and Chroma at which the maxi-)-1.221 E
(mum V)144 529.6 Q(alue w)-1.221 E(as found.)-.11 E
(The white point associated with the returned color speci-)5.5 E
(\214cation is the Screen White Point.)144 542.6 Q(The v)5.5 E
(alue returned in the pix)-.275 E(el member is)-.165 E(unde\214ned.)144
555.6 Q 36 551.25 36 562.25 DL 36 549.25 36 560.25 DL 41.5 560.5 36
560.5 DL 43.5 560.5 38 560.5 DL 49 560.5 43.5 560.5 DL(The)72 585.5 Q F0
(XcmsT)3.666 E(ekHVCQueryMaxV)-1.012 E F1(function, gi)3.666 E -.165(ve)
-.275 G 2.75(naH).165 G(ue and Chroma, determines the maximum)-2.75 E
-1.221(Va)72 598.5 S(lue in T)1.221 E
(ekHVC color space displayable by the screen.)-.77 E
(It returns the maximum V)5.5 E(alue and the)-1.221 E
(actual Hue and Chroma at which the maximum V)72 611.5 Q(alue w)-1.221 E
(as found.)-.11 E 1.76 -.88(To o)72 641.4 T
(btain the maximum Chroma and V).88 E
(alue at which it is reached for a speci\214ed Hue, use)-1.221 E F0
(Xcm-)3.666 E(sT)72 654.4 Q(ekHVCQueryMaxVC)-1.012 E F1(.).916 E F0(118)
279.75 769 Q 0 Cg EP
%%Page: 119 124
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E .44 LW 36 76.75 36 87.75 DL 36 74.75
36 85.75 DL 41.5 73 36 73 DL 43.5 73 38 73 DL 49 73 43.5 73 DL/F1 11
/Times-Roman@0 SF(Status XcmsT)72 88.9 Q -1.834(ekHVCQueryMaxVC \()-.77
F/F2 11/Times-Italic@0 SF(ccc).916 E F1(,).916 E F2(hue)2.75 E F1(,).916
E F2(color_r)2.75 E(eturn)-.407 E F1(\)).916 E(XcmsCCC)88.5 101.9 Q F2
(ccc)2.75 E F1(;).916 E(XcmsFloat)88.5 114.9 Q F2(hue)2.75 E F1(;).916 E
(XcmsColor *)88.5 127.9 Q F2(color_r)A(eturn)-.407 E F1(;).916 E F2(ccc)
72 148.7 Q F1(Speci\214es the CCC.)57.348 E(The CCC')5.5 E 2.75(sC)-.605
G(lient White Point and white point adjustment)-2.75 E
(procedures are ignored.)144 161.7 Q F2(hue)72 178.6 Q F1
(Speci\214es the Hue in which to \214nd the maximum Chroma.)56.116 E F2
(color_r)72 195.5 Q(eturn)-.407 E F1
(Returns the color speci\214cation in XcmsT)16.186 E
(ekHVC for the maximum Chroma, the)-.77 E -1.221(Va)144 208.5 S(lue at \
which that maximum Chroma is reached, and the actual Hue at which)1.221
E(the maximum Chroma w)144 221.5 Q(as found.)-.11 E
(The white point associated with the returned)5.5 E
(color speci\214cation is the Screen White Point.)144 234.5 Q(The v)5.5
E(alue returned in the pix)-.275 E(el)-.165 E(member is unde\214ned.)144
247.5 Q 36 243.15 36 254.15 DL 36 241.15 36 252.15 DL 41.5 252.4 36
252.4 DL 43.5 252.4 38 252.4 DL 49 252.4 43.5 252.4 DL(The)72 277.4 Q F0
(XcmsT)3.666 E(ekHVCQueryMaxVC)-1.012 E F1(function, gi)3.666 E -.165
(ve)-.275 G 2.75(naH).165 G(ue, determines the maximum Chroma in)-2.75 E
-.77(Te)72 290.4 S(kHVC color space displayable by the screen and the V)
.77 E(alue at which that maximum Chroma is)-1.221 E 2.75(reached. It)72
303.4 R(returns the maximum Chroma, the V)2.75 E
(alue at which that maximum Chroma is reached,)-1.221 E
(and the actual Hue for which the maximum Chroma w)72 316.4 Q(as found.)
-.11 E 1.76 -.88(To o)72 346.3 T(btain a speci\214ed number of T).88 E
(ekHVC speci\214cations such that the)-.77 E 2.75(yc)-.165 G
(ontain maximum V)-2.75 E(alues)-1.221 E
(for a speci\214ed Hue and the Chroma at which the maximum V)72 359.3 Q
(alues are reached, use)-1.221 E F0(Xcm-)3.666 E(sT)72 372.3 Q
(ekHVCQueryMaxVSamples)-1.012 E F1(.).916 E 36 390.05 36 401.05 DL 36
388.05 36 399.05 DL 41.5 386.3 36 386.3 DL 43.5 386.3 38 386.3 DL 49
386.3 43.5 386.3 DL(Status XcmsT)72 402.2 Q -1.834
(ekHVCQueryMaxVSamples \()-.77 F F2(ccc).916 E F1(,).916 E F2(hue)2.75 E
F1(,).916 E F2(color)2.75 E(s_r)-.11 E(eturn)-.407 E F1(,).916 E F2
(nsamples)2.75 E F1(\)).916 E(XcmsCCC)88.5 415.2 Q F2(ccc)2.75 E F1(;)
.916 E(XcmsFloat)88.5 428.2 Q F2(hue)2.75 E F1(;).916 E(XcmsColor)88.5
441.2 Q F2(color)2.75 E(s_r)-.11 E(eturn[])-.407 E F1(;).916 E
(unsigned int)88.5 454.2 Q F2(nsamples)2.75 E F1(;).916 E F2(ccc)72 475
Q F1(Speci\214es the CCC.)57.348 E(The CCC')5.5 E 2.75(sC)-.605 G
(lient White Point and white point adjustment)-2.75 E
(procedures are ignored.)144 488 Q F2(hue)72 504.9 Q F1
(Speci\214es the Hue for maximum Chroma/V)56.116 E(alue samples.)-1.221
E F2(nsamples)72 521.8 Q F1(Speci\214es the number of samples.)31.058 E
F2(color)72 538.7 Q(s_r)-.11 E(eturn)-.407 E F1
(Returns nsamples of color speci\214cations in XcmsT)12.017 E
(ekHVC such that the Chroma)-.77 E(is the maximum attainable for the V)
144 551.7 Q(alue and Hue.)-1.221 E(The white point associated)5.5 E
(with the returned color speci\214cation is the Screen White Point.)144
564.7 Q(The v)5.5 E(alue)-.275 E(returned in the pix)144 577.7 Q
(el member is unde\214ned.)-.165 E 36 573.35 36 584.35 DL 36 571.35 36
582.35 DL 41.5 582.6 36 582.6 DL 43.5 582.6 38 582.6 DL 49 582.6 43.5
582.6 DL(The)72 607.6 Q F0(XcmsT)3.666 E(ekHVCQueryMaxVSamples)-1.012 E
F1(returns nsamples of maximum V)3.666 E(alue, the Chroma at)-1.221 E
(which that maximum V)72 620.6 Q
(alue is reached, and the actual Hue for which the maximum Chroma w)
-1.221 E(as)-.11 E 2.75(found. These)72 633.6 R
(sample points may then be used to plot the maximum V)2.75 E
(alue/Chroma boundary of)-1.221 E(the screen')72 646.6 Q 2.75(sc)-.605 G
(olor g)-2.75 E(amut for the speci\214ed Hue in T)-.055 E
(ekHVC color space.)-.77 E 1.76 -.88(To o)72 676.5 T
(btain the minimum V).88 E(alue for a gi)-1.221 E -.165(ve)-.275 G 2.75
(nH).165 G(ue and Chroma, use)-2.75 E F0(XcmsT)3.666 E(ekHVCQueryMinV)
-1.012 E F1(.).916 E F0(119)279.75 769 Q 0 Cg EP
%%Page: 120 125
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E .44 LW 36 76.75 36 87.75 DL 36 74.75
36 85.75 DL 41.5 73 36 73 DL 43.5 73 38 73 DL 49 73 43.5 73 DL/F1 11
/Times-Roman@0 SF(Status XcmsT)72 88.9 Q -1.834(ekHVCQueryMinV \()-.77 F
/F2 11/Times-Italic@0 SF(ccc).916 E F1(,).916 E F2(hue)2.75 E F1(,).916
E F2 -.165(ch)2.75 G -.495(ro).165 G(ma).495 E F1(,).916 E F2(color_r)
2.75 E(eturn)-.407 E F1(\)).916 E(XcmsCCC)88.5 101.9 Q F2(ccc)2.75 E F1
(;).916 E(XcmsFloat)88.5 114.9 Q F2(hue)2.75 E F1(;).916 E(XcmsFloat)
88.5 127.9 Q F2 -.165(ch)2.75 G -.495(ro).165 G(ma).495 E F1(;).916 E
(XcmsColor *)88.5 140.9 Q F2(color_r)A(eturn)-.407 E F1(;).916 E F2(ccc)
72 161.7 Q F1(Speci\214es the CCC.)57.348 E(The CCC')5.5 E 2.75(sC)-.605
G(lient White Point and white point adjustment)-2.75 E
(procedures are ignored.)144 174.7 Q F2(hue)72 191.6 Q F1
(Speci\214es the Hue in which to \214nd the minimum V)56.116 E(alue.)
-1.221 E F2(value)72 208.5 Q F1(Speci\214es the V)48.174 E
(alue in which to \214nd the minimum V)-1.221 E(alue.)-1.221 E F2
(color_r)72 225.4 Q(eturn)-.407 E F1(Returns the minimum V)16.186 E
(alue and the actual Hue and Chroma at which the mini-)-1.221 E(mum V)
144 238.4 Q(alue w)-1.221 E(as found.)-.11 E
(The white point associated with the returned color speci-)5.5 E
(\214cation is the Screen White Point.)144 251.4 Q(The v)5.5 E
(alue returned in the pix)-.275 E(el member is)-.165 E(unde\214ned.)144
264.4 Q 36 260.05 36 271.05 DL 36 258.05 36 269.05 DL 41.5 269.3 36
269.3 DL 43.5 269.3 38 269.3 DL 49 269.3 43.5 269.3 DL(The)72 294.3 Q F0
(XcmsT)3.666 E(ekHVCQueryMinV)-1.012 E F1(function, gi)3.666 E -.165(ve)
-.275 G 2.75(naH).165 G(ue and Chroma, determines the minimum)-2.75 E
-1.221(Va)72 307.3 S(lue in T)1.221 E
(ekHVC color space displayable by the screen.)-.77 E
(It returns the minimum V)5.5 E(alue and the)-1.221 E
(actual Hue and Chroma at which the minimum V)72 320.3 Q(alue w)-1.221 E
(as found.)-.11 E F0 2.75(6.12. Color)72 346.3 R(Management Extensions)
2.75 E F1(The Xlib color management f)72 363.2 Q(acilities can be e)-.11
E(xtended in tw)-.165 E 2.75(ow)-.11 G(ays:)-2.86 E 23.65<8344>72 380.1
S -.275(ev)-23.65 G(ice-Independent Color Spaces).275 E(De)99.5 397 Q
(vice-independent color spaces that are deri)-.275 E -.275(va)-.275 G
(ble to CIE XYZ space can be added using).275 E(the)99.5 410 Q F0
(XcmsAddColorSpace)3.666 E F1(function.)3.666 E 23.65<8343>72 426.9 S
(olor Characterization Function Set)-23.65 E 2.75(AC)99.5 443.8 S
(olor Characterization Function Set consists of de)-2.75 E
(vice-dependent color spaces and their)-.275 E(functions that con)99.5
456.8 Q -.165(ve)-.44 G
(rt between these color spaces and the CIE XYZ color space, b).165 E
(undled)-.22 E(together for a speci\214c class of output de)99.5 469.8 Q
2.75(vices. A)-.275 F(function set can be added using the)2.75 E F0
(Xcm-)3.666 E(sAddFunctionSet)99.5 482.8 Q F1(function.)3.666 E F0 2.75
(6.12.1. Color)72 508.8 R(Spaces)2.75 E F1(The CIE XYZ color space serv)
72 525.7 Q(es as the hub for all con)-.165 E -.165(ve)-.44 G
(rsions between de).165 E(vice-independent and)-.275 E(de)72 538.7 Q
(vice-dependent color spaces.)-.275 E(Therefore, the kno)5.5 E
(wledge to con)-.275 E -.165(ve)-.44 G(rt an).165 E F0(XcmsColor)3.666 E
F1(structure to)3.666 E
(and from CIE XYZ format is associated with each color space.)72 551.7 Q
-.165(Fo)5.5 G 2.75(re).165 G(xample, con)-2.915 E -.165(ve)-.44 G
(rsion from).165 E(CIE L*u*v* to RGB requires the kno)72 564.7 Q
(wledge to con)-.275 E -.165(ve)-.44 G
(rt from CIE L*u*v* to CIE XYZ and from).165 E(CIE XYZ to RGB.)72 577.7
Q(This kno)5.5 E(wledge is stored as an array of functions that, when a\
pplied in series,)-.275 E(will con)72 590.7 Q -.165(ve)-.44 G(rt the)
.165 E F0(XcmsColor)3.666 E F1(structure to or from CIE XYZ format.)
3.666 E(This color speci\214cation con-)5.5 E -.165(ve)72 603.7 S
(rsion mechanism f).165 E(acilitates the addition of color spaces.)-.11
E(Of course, when con)72 620.6 Q -.165(ve)-.44 G(rting between only de)
.165 E(vice-independent color spaces or only de)-.275 E(vice-depen-)
-.275 E(dent color spaces, shortcuts are tak)72 633.6 Q(en whene)-.11 E
-.165(ve)-.275 G 2.75(rp).165 G 2.75(ossible. F)-2.75 F(or e)-.165 E
(xample, con)-.165 E -.165(ve)-.44 G(rsion from T).165 E(ekHVC)-.77 E
(to CIE L*u*v* is performed by intermediate con)72 646.6 Q -.165(ve)-.44
G(rsion to CIE u*v*Y and then to CIE L*u*v*,).165 E(thus bypassing con)
72 659.6 Q -.165(ve)-.44 G(rsion between CIE u*v*Y and CIE XYZ.).165 E
F0 2.75(6.12.2. Adding)72 685.6 R(De)2.75 E
(vice-Independent Color Spaces)-.165 E F1 1.76 -.88(To a)72 702.5 T
(dd a de).88 E(vice-independent color space, use)-.275 E F0
(XcmsAddColorSpace)3.666 E F1(.).916 E F0(120)279.75 769 Q 0 Cg EP
%%Page: 121 126
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E .44 LW 36 76.75 36 87.75 DL 36 74.75
36 85.75 DL 41.5 73 36 73 DL 43.5 73 38 73 DL 49 73 43.5 73 DL/F1 11
/Times-Roman@0 SF(Status XcmsAddColorSpace)72 88.9 Q(\().916 E/F2 11
/Times-Italic@0 SF(color_space).916 E F1(\)).916 E(XcmsColorSpace *)88.5
101.9 Q F2(color_space)A F1(;).916 E F2(color_space)72 122.7 Q F1
(Speci\214es the de)18.232 E(vice-independent color space to add.)-.275
E 36 118.35 36 129.35 DL 36 116.35 36 127.35 DL 41.5 127.6 36 127.6 DL
43.5 127.6 38 127.6 DL 49 127.6 43.5 127.6 DL(The)72 152.6 Q F0
(XcmsAddColorSpace)3.666 E F1(function mak)3.666 E(es a de)-.11 E
(vice-independent color space \(actually an)-.275 E F0(Xcms-)3.666 E
(ColorSpace)72 165.6 Q F1
(structure\) accessible by the color management system.)3.666 E
(Because format v)5.5 E(alues for)-.275 E(unre)72 178.6 Q
(gistered color spaces are assigned at run time, the)-.165 E 2.75(ys)
-.165 G(hould be treated as pri)-2.75 E -.275(va)-.275 G
(te to the client.).275 E(If references to an unre)72 191.6 Q
(gistered color space must be made outside the client \(for e)-.165 E
(xample, storing)-.165 E
(color speci\214cations in a \214le using the unre)72 204.6 Q
(gistered color space\), then reference should be made by)-.165 E
(color space pre\214x \(see)72 217.6 Q F0(XcmsF)3.666 E(ormatOfPr)-.275
E(e\214x)-.198 E F1(and)3.666 E F0(XcmsPr)3.666 E(e\214xOfF)-.198 E
(ormat)-.275 E F1(\).).916 E(If the)72 234.5 Q F0(XcmsColorSpace)3.666 E
F1(structure is already accessible in the color management system,)3.666
E F0(Xcm-)3.666 E(sAddColorSpace)72 247.5 Q F1(returns)3.666 E F0
(XcmsSuccess)3.666 E F1(.).916 E(Note that added)72 264.4 Q F0
(XcmsColorSpaces)3.666 E F1(must be retained for reference by Xlib)3.666
E(.)-.44 E F0 2.75(6.12.3. Querying)72 290.4 R(Color Space F)2.75 E
(ormat and Pr)-.275 E(e\214x)-.198 E F1 1.76 -.88(To o)72 307.3 T(btain\
 the format associated with the color space associated with a speci\214\
ed color string pre-).88 E(\214x, use)72 320.3 Q F0(XcmsF)3.666 E
(ormatOfPr)-.275 E(e\214x)-.198 E F1(.).916 E 36 338.05 36 349.05 DL 36
336.05 36 347.05 DL 41.5 334.3 36 334.3 DL 43.5 334.3 38 334.3 DL 49
334.3 43.5 334.3 DL(XcmsColorF)72 350.2 Q(ormat XcmsF)-.165 E -1.834
(ormatOfPre\214x \()-.165 F F2(pr).916 E(e\214x)-.407 E F1(\)).916 E
(char *)88.5 363.2 Q F2(pr)A(e\214x)-.407 E F1(;).916 E F2(pr)72 384 Q
(e\214x)-.407 E F1
(Speci\214es the string that contains the color space pre\214x.)47.36 E
36 379.65 36 390.65 DL 36 377.65 36 388.65 DL 41.5 388.9 36 388.9 DL
43.5 388.9 38 388.9 DL 49 388.9 43.5 388.9 DL(The)72 413.9 Q F0(XcmsF)
3.666 E(ormatOfPr)-.275 E(e\214x)-.198 E F1(function returns the format\
 for the speci\214ed color space pre\214x \(for)3.666 E -.165(ex)72
426.9 S(ample, the string `).165 E(`CIEXYZ')-.814 E 2.75('\). The)-.814
F(pre\214x is case-insensiti)2.75 E -.165(ve)-.275 G 5.5(.I).165 G 2.75
(ft)-5.5 G(he color space is not accessi-)-2.75 E
(ble in the color management system,)72 439.9 Q F0(XcmsF)3.666 E
(ormatOfPr)-.275 E(e\214x)-.198 E F1(returns)3.666 E F0
(XcmsUnde\214nedF)3.666 E(ormat)-.275 E F1(.).916 E 1.76 -.88(To o)72
469.8 T(btain the color string pre\214x associated with the color space\
 speci\214ed by a color format, use).88 E F0(XcmsPr)72.916 482.8 Q
(e\214xOfF)-.198 E(ormat)-.275 E F1(.).916 E 36 500.55 36 511.55 DL 36
498.55 36 509.55 DL 41.5 496.8 36 496.8 DL 43.5 496.8 38 496.8 DL 49
496.8 43.5 496.8 DL(char *XcmsPre\214xOfF)72 512.7 Q -1.834(ormat \()
-.165 F F2(format).916 E F1(\)).916 E(XcmsColorF)88.5 525.7 Q(ormat)
-.165 E F2(format)2.75 E F1(;).916 E F2(format)72 546.5 Q F1
(Speci\214es the color speci\214cation format.)42.663 E 36 542.15 36
553.15 DL 36 540.15 36 551.15 DL 41.5 551.4 36 551.4 DL 43.5 551.4 38
551.4 DL 49 551.4 43.5 551.4 DL(The)72 576.4 Q F0(XcmsPr)3.666 E
(e\214xOfF)-.198 E(ormat)-.275 E F1(function returns the string pre\214\
x associated with the color speci\214ca-)3.666 E
(tion encoding speci\214ed by the format ar)72 589.4 Q 2.75
(gument. Otherwise,)-.198 F(if no encoding is found, it returns)2.75 E
2.75(NULL. The)72 602.4 R(returned string must be treated as read-only)
2.75 E(.)-.715 E F0 2.75(6.12.4. Cr)72 628.4 R
(eating Additional Color Spaces)-.198 E F1
(Color space speci\214c information necessary for color space con)72
645.3 Q -.165(ve)-.44 G(rsion and color string parsing is).165 E
(stored in an)72 658.3 Q F0(XcmsColorSpace)3.666 E F1 2.75
(structure. Therefore,)3.666 F 2.75(an)2.75 G .55 -.275(ew s)-2.75 H
(tructure containing this information).275 E
(is required for each additional color space.)72 671.3 Q
(In the case of de)5.5 E(vice-independent color spaces, a han-)-.275 E
(dle to this ne)72 684.3 Q 2.75(ws)-.275 G
(tructure \(that is, by means of a global v)-2.75 E
(ariable\) is usually made accessible to the)-.275 E
(client program for use with the)72 697.3 Q F0(XcmsAddColorSpace)3.666 E
F1(function.)3.666 E(If a ne)72 714.2 Q(w)-.275 E F0(XcmsColorSpace)
3.666 E F1(structure speci\214es a color space not re)3.666 E
(gistered with the X Consor)-.165 E(-)-.22 E(tium, the)72 727.2 Q 2.75
(ys)-.165 G(hould be treated as pri)-2.75 E -.275(va)-.275 G
(te to the client because format v).275 E(alues for unre)-.275 E
(gistered color)-.165 E F0(121)279.75 769 Q 0 Cg EP
%%Page: 122 127
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E/F1 11/Times-Roman@0 SF
(spaces are assigned at run time.)72 85 Q(If references to an unre)5.5 E
(gistered color space must be made outside)-.165 E(the client \(for e)72
98 Q(xample, storing color speci\214cations in a \214le using the unre)
-.165 E(gistered color space\),)-.165 E
(then reference should be made by color space pre\214x \(see)72 111 Q F0
(XcmsF)3.666 E(ormatOfPr)-.275 E(e\214x)-.198 E F1(and)3.666 E F0
(XcmsPr)3.666 E(e-)-.198 E(\214xOfF)72 124 Q(ormat)-.275 E F1(\).).916 E
.44 LW 36 141.75 36 152.75 DL 36 139.75 36 150.75 DL 41.5 138 36 138 DL
43.5 138 38 138 DL 49 138 43.5 138 DL(typedef \(*XcmsCon)72 160.4 Q
-.165(ve)-.44 G(rsionProc\)\(\);).165 E(typedef XcmsCon)72 173.4 Q -.165
(ve)-.44 G(rsionProc *XcmsFuncListPtr;).165 E
(/* A NULL terminated list of function pointers*/)252 186.4 Q
(typedef struct _XcmsColorSpace {)72 212.4 Q(char *pre\214x;)108 225.4 Q
(XcmsColorF)108 238.4 Q(ormat format;)-.165 E(XcmsP)108 251.4 Q
(arseStringProc parseString;)-.165 E(XcmsFuncListPtr to_CIEXYZ;)108
264.4 Q(XcmsFuncListPtr from_CIEXYZ;)108 277.4 Q(int in)108 290.4 Q
-.165(ve)-.44 G(rse_\215ag;).165 E 2.75(}X)72 303.4 S(cmsColorSpace;)
-2.75 E 36 305.55 36 316.55 DL 36 303.55 36 314.55 DL 41.5 314.8 36
314.8 DL 43.5 314.8 38 314.8 DL 49 314.8 43.5 314.8 DL(The pre\214x mem\
ber speci\214es the pre\214x that indicates a color string is in this c\
olor space')72 339.8 Q 2.75(ss)-.605 G(tring)-2.75 E 2.75(format. F)72
352.8 R(or e)-.165 E(xample, the strings `)-.165 E(`cie)-.814 E(xyz')
-.165 E 2.75('o)-.814 G 2.75(r`)-2.75 G(`CIEXYZ')-3.564 E 2.75('f)-.814
G(or CIE XYZ, and `)-2.75 E(`r)-.814 E(gb')-.198 E 2.75('o)-.814 G 2.75
(r`)-2.75 G(`RGB')-3.564 E(')-.814 E(for RGB.)72 365.8 Q
(The pre\214x is case insensiti)5.5 E -.165(ve)-.275 G 5.5(.T).165 G
(he format member speci\214es the color speci\214cation for)-5.5 E(-)
-.22 E 2.75(mat. F)72 378.8 R(ormats for unre)-.165 E
(gistered color spaces are assigned at run time.)-.165 E
(The parseString member)5.5 E(contains a pointer to the function that c\
an parse a color string into an)72 391.8 Q F0(XcmsColor)3.666 E F1 2.75
(structure. This)3.666 F(function returns an inte)72 404.8 Q
(ger \(int\): nonzero if it succeeded and zero otherwise.)-.165 E
(The to_CIEXYZ)5.5 E(and from_CIEXYZ members contain pointers, each to \
a NULL terminated list of function point-)72 417.8 Q 2.75(ers. When)72
430.8 R(the list of functions is e)2.75 E -.165(xe)-.165 G
(cuted in series, it will con).165 E -.165(ve)-.44 G
(rt the color speci\214ed in an).165 E F0(Xcm-)3.666 E(sColor)72 443.8 Q
F1(structure from/to the current color space format to/from the CIE XYZ\
 format.)3.666 E(Each func-)5.5 E(tion returns an inte)72 456.8 Q
(ger \(int\): nonzero if it succeeded and zero otherwise.)-.165 E
(The white point to be)5.5 E
(associated with the colors is speci\214ed e)72 469.8 Q(xplicitly)-.165
E 2.75(,e)-.715 G -.165(ve)-3.025 G 2.75(nt).165 G
(hough white points can be found in the)-2.75 E 2.75(CCC. The)72 482.8 R
(in)2.75 E -.165(ve)-.44 G(rse_\215ag member).165 E 2.75(,i)-.44 G 2.75
(fn)-2.75 G
(onzero, speci\214es that for each function listed in to_CIEXYZ,)-2.75 E
(its in)72 495.8 Q -.165(ve)-.44 G
(rse function can be found in from_CIEXYZ such that:).165 E(Gi)72 519.2
Q -.165(ve)-.275 G 2.75(n: n).165 F 2.75(=n)2.75 G
(umber of functions in each list)-2.75 E
(for each i, such that 0 <= i < n)72 545.2 Q
(from_CIEXYZ[n - i - 1] is the in)83 558.2 Q -.165(ve)-.44 G
(rse of to_CIEXYZ[i].).165 E(This allo)72 581.6 Q
(ws Xlib to use the shortest con)-.275 E -.165(ve)-.44 G
(rsion path, thus bypassing CIE XYZ if possible \(for).165 E -.165(ex)72
594.6 S(ample, T).165 E(ekHVC to CIE L*u*v*\).)-.77 E F0 2.75(6.12.5. P)
72 620.6 R(arse String Callback)-.11 E F1(The callback in the)72 637.5 Q
F0(XcmsColorSpace)3.666 E F1
(structure for parsing a color string for the particular color)3.666 E
(space must adhere to the follo)72 650.5 Q(wing softw)-.275 E
(are interf)-.11 E(ace speci\214cation:)-.11 E F0(122)279.75 769 Q 0 Cg
EP
%%Page: 123 128
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E .44 LW 36 76.75 36 87.75 DL 36 74.75
36 85.75 DL 41.5 73 36 73 DL 43.5 73 38 73 DL 49 73 43.5 73 DL/F1 11
/Times-Roman@0 SF(typedef int \(*XcmsP)72 88.9 Q -1.834
(arseStringProc\) \()-.165 F/F2 11/Times-Italic@0 SF(color_string).916 E
F1(,)A F2(color_r)2.75 E(eturn)-.407 E F1(\)).916 E(char *)88.5 101.9 Q
F2(color_string)A F1(;).916 E(XcmsColor *)88.5 114.9 Q F2(color_r)A
(eturn)-.407 E F1(;).916 E F2(color_string)72 135.7 Q F1
(Speci\214es the color string to parse.)17.605 E F2(color_r)72 152.6 Q
(eturn)-.407 E F1(Returns the color speci\214cation in the color space')
16.186 E 2.75(sf)-.605 G(ormat.)-2.75 E 36 148.25 36 159.25 DL 36 146.25
36 157.25 DL 41.5 157.5 36 157.5 DL 43.5 157.5 38 157.5 DL 49 157.5 43.5
157.5 DL F0 2.75(6.12.6. Color)72 195.5 R(Speci\214cation Con)2.75 E
-.11(ve)-.44 G(rsion Callback).11 E F1(Callback functions in the)72
212.4 Q F0(XcmsColorSpace)3.666 E F1(structure for con)3.666 E -.165(ve)
-.44 G(rting a color speci\214cation).165 E(between de)72 225.4 Q
(vice-independent spaces must adhere to the follo)-.275 E(wing softw)
-.275 E(are interf)-.11 E(ace speci\214cation:)-.11 E 36 243.15 36
254.15 DL 36 241.15 36 252.15 DL 41.5 239.4 36 239.4 DL 43.5 239.4 38
239.4 DL 49 239.4 43.5 239.4 DL(Status Con)72 255.3 Q -.165(ve)-.44 G
-1.834(rsionProc \().165 F F2(ccc).916 E F1(,)A F2(white_point)2.75 E F1
(,)A F2(color)2.75 E(s_in_out)-.11 E F1(,)A F2(ncolor)2.75 E(s)-.11 E F1
(\)).916 E(XcmsCCC)88.5 268.3 Q F2(ccc)2.75 E F1(;).916 E(XcmsColor *)
88.5 281.3 Q F2(white_point)A F1(;).916 E(XcmsColor *)88.5 294.3 Q F2
(color)A(s_in_out)-.11 E F1(;).916 E(unsigned int)88.5 307.3 Q F2
(ncolor)2.75 E(s)-.11 E F1(;).916 E F2(ccc)72 328.1 Q F1
(Speci\214es the CCC.)57.348 E F2(white_point)72 345 Q F1
(Speci\214es the white point associated with color speci\214cations.)
20.047 E(The pix)5.5 E(el member)-.165 E(should be ignored, and the ent\
ire structure remain unchanged upon return.)144 358 Q F2(color)72 374.9
Q(s_in_out)-.11 E F1(Speci\214es an array of color speci\214cations.)
10.994 E(Pix)5.5 E(el members should be ignored and)-.165 E
(must remain unchanged upon return.)144 387.9 Q F2(ncolor)72 404.8 Q(s)
-.11 E F1(Speci\214es the number of)39.11 E F0(XcmsColor)3.666 E F1
(structures in the color)3.666 E(-speci\214cation array)-.22 E(.)-.715 E
36 400.45 36 411.45 DL 36 398.45 36 409.45 DL 41.5 409.7 36 409.7 DL
43.5 409.7 38 409.7 DL 49 409.7 43.5 409.7 DL(Callback functions in the)
72 447.7 Q F0(XcmsColorSpace)3.666 E F1(structure for con)3.666 E -.165
(ve)-.44 G(rting a color speci\214cation to or).165 E(from a de)72 460.7
Q(vice-dependent space must adhere to the follo)-.275 E(wing softw)-.275
E(are interf)-.11 E(ace speci\214cation:)-.11 E 36 478.45 36 489.45 DL
36 476.45 36 487.45 DL 41.5 474.7 36 474.7 DL 43.5 474.7 38 474.7 DL 49
474.7 43.5 474.7 DL(Status Con)72 490.6 Q -.165(ve)-.44 G -1.834
(rsionProc \().165 F F2(ccc).916 E F1(,)A F2(color)2.75 E(s_in_out)-.11
E F1(,)A F2(ncolor)2.75 E(s)-.11 E F1(,)A F2(compr)2.75 E(ession_\215a)
-.407 E(gs_r)-.11 E(eturn)-.407 E F1(\)).916 E(XcmsCCC)88.5 503.6 Q F2
(ccc)2.75 E F1(;).916 E(XcmsColor *)88.5 516.6 Q F2(color)A(s_in_out)
-.11 E F1(;).916 E(unsigned int)88.5 529.6 Q F2(ncolor)2.75 E(s)-.11 E
F1(;).916 E(Bool)88.5 542.6 Q F2(compr)2.75 E(ession_\215a)-.407 E(gs_r)
-.11 E(eturn)-.407 E F1 .916([];).916 G F2(ccc)72 563.4 Q F1
(Speci\214es the CCC.)57.348 E F2(color)72 580.3 Q(s_in_out)-.11 E F1
(Speci\214es an array of color speci\214cations.)10.994 E(Pix)5.5 E
(el members should be ignored and)-.165 E
(must remain unchanged upon return.)144 593.3 Q F2(ncolor)72 610.2 Q(s)
-.11 E F1(Speci\214es the number of)39.11 E F0(XcmsColor)3.666 E F1
(structures in the color)3.666 E(-speci\214cation array)-.22 E(.)-.715 E
F2(compr)72 627.1 Q(ession_\215a)-.407 E(gs_r)-.11 E(eturn)-.407 E F1
(Returns an array of Boolean v)144 640.1 Q
(alues for indicating compression status.)-.275 E(If a non-)5.5 E
(NULL pointer is supplied and a color at a gi)144 653.1 Q -.165(ve)-.275
G 2.75(ni).165 G(nde)-2.75 E 2.75(xi)-.165 G 2.75(sc)-2.75 G
(ompressed, then)-2.75 E F0 -.814(Tr)3.666 G(ue).814 E F1
(should be stored at the corresponding inde)144 666.1 Q 2.75(xi)-.165 G
2.75(nt)-2.75 G(his array; otherwise, the array)-2.75 E
(should not be modi\214ed.)144 679.1 Q 36 674.75 36 685.75 DL 36 672.75
36 683.75 DL 41.5 684 36 684 DL 43.5 684 38 684 DL 49 684 43.5 684 DL
(Con)72 709 Q -.165(ve)-.44 G(rsion functions are a).165 E -.275(va)-.22
G(ilable globally for use by other color spaces.).275 E(The con)5.5 E
-.165(ve)-.44 G(rsion func-).165 E(tions pro)72 722 Q
(vided by Xlib are:)-.165 E F0(123)279.75 769 Q 0 Cg EP
%%Page: 124 129
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E .44 LW 493.8 76.75 72 76.75 DL 101.176
(Function Con)72 93 R -.11(ve)-.44 G(rts fr).11 E 75.37(om Con)-.198 F
-.11(ve)-.44 G(rts to).11 E 493.8 103.75 72 103.75 DL(XcmsCIELabT)72.916
120 Q(oCIEXYZ)-1.012 E(XcmsCIELabF)219.016 120 Q(ormat)-.275 E
(XcmsCIEXYZF)365.116 120 Q(ormat)-.275 E(XcmsCIELuvT)72.916 133 Q
(oCIEuvY)-1.012 E(XcmsCIELuvF)219.016 133 Q(ormat)-.275 E(XcmsCIEuvYF)
365.116 133 Q(ormat)-.275 E(XcmsCIEXYZT)72.916 146 Q(oCIELab)-1.012 E
(XcmsCIEXYZF)219.016 146 Q(ormat)-.275 E(XcmsCIELabF)365.116 146 Q
(ormat)-.275 E(XcmsCIEXYZT)72.916 159 Q(oCIEuvY)-1.012 E(XcmsCIEXYZF)
219.016 159 Q(ormat)-.275 E(XcmsCIEuvYF)365.116 159 Q(ormat)-.275 E
(XcmsCIEXYZT)72.916 172 Q(oCIExyY)-1.012 E(XcmsCIEXYZF)219.016 172 Q
(ormat)-.275 E(XcmsCIExyYF)365.116 172 Q(ormat)-.275 E(XcmsCIEXYZT)
72.916 185 Q(oRGBi)-1.012 E(XcmsCIEXYZF)219.016 185 Q(ormat)-.275 E
(XcmsRGBiF)365.116 185 Q(ormat)-.275 E(XcmsCIEuvYT)72.916 198 Q(oCIELuv)
-1.012 E(XcmsCIEuvYF)219.016 198 Q(ormat)-.275 E(XcmsCIELabF)365.116 198
Q(ormat)-.275 E(XcmsCIEuvYT)72.916 211 Q(oCIEXYZ)-1.012 E(XcmsCIEuvYF)
219.016 211 Q(ormat)-.275 E(XcmsCIEXYZF)365.116 211 Q(ormat)-.275 E
(XcmsCIEuvYT)72.916 224 Q(oT)-1.012 E(ekHVC)-1.012 E(XcmsCIEuvYF)219.016
224 Q(ormat)-.275 E(XcmsT)365.116 224 Q(ekHVCF)-1.012 E(ormat)-.275 E
(XcmsCIExyYT)72.916 237 Q(oCIEXYZ)-1.012 E(XcmsCIExyYF)219.016 237 Q
(ormat)-.275 E(XcmsCIEXYZF)365.116 237 Q(ormat)-.275 E(XcmsRGBT)72.916
250 Q(oRGBi)-1.012 E(XcmsRGBF)219.016 250 Q(ormat)-.275 E(XcmsRGBiF)
365.116 250 Q(ormat)-.275 E(XcmsRGBiT)72.916 263 Q(oCIEXYZ)-1.012 E
(XcmsRGBiF)219.016 263 Q(ormat)-.275 E(XcmsCIEXYZF)365.116 263 Q(ormat)
-.275 E(XcmsRGBiT)72.916 276 Q(oRGB)-1.012 E(XcmsRGBiF)219.016 276 Q
(ormat)-.275 E(XcmsRGBF)365.116 276 Q(ormat)-.275 E(XcmsT)72.916 289 Q
(ekHVCT)-1.012 E(oCIEuvY)-1.012 E(XcmsT)219.016 289 Q(ekHVCF)-1.012 E
(ormat)-.275 E(XcmsCIEuvYF)365.116 289 Q(ormat)-.275 E 493.8 299.75 72
299.75 DL 2.75(6.12.7. Function)72 329.5 R(Sets)2.75 E/F1 11
/Times-Roman@0 SF(Functions to con)72 346.4 Q -.165(ve)-.44 G
(rt between de).165 E(vice-dependent color spaces and CIE XYZ may dif)
-.275 E(fer for dif)-.275 E(fer)-.275 E(-)-.22 E
(ent classes of output de)72 359.4 Q(vices \(for e)-.275 E
(xample, color v)-.165 E(ersus gray monitors\).)-.165 E
(Therefore, the notion of a)5.5 E
(Color Characterization Function Set has been de)72 372.4 Q -.165(ve)
-.275 G 2.75(loped. A).165 F(function set consists of de)2.75 E(vice-)
-.275 E(dependent color spaces and the functions that con)72 385.4 Q
-.165(ve)-.44 G(rt color speci\214cations between these de).165 E(vice-)
-.275 E(dependent color spaces and the CIE XYZ color space appropriate \
for a particular class of output)72 398.4 Q(de)72 411.4 Q 2.75
(vices. The)-.275 F(function set also contains a function that reads co\
lor characterization data of)2.75 E 2.75(fr)-.275 G(oot)-2.75 E(windo)72
424.4 Q 2.75(wp)-.275 G 2.75(roperties. It)-2.75 F
(is this characterization data that will dif)2.75 E(fer between de)-.275
E(vices within a class)-.275 E(of output de)72 437.4 Q 2.75(vices. F)
-.275 F(or details about ho)-.165 E 2.75(wc)-.275 G
(olor characterization data is stored in root windo)-2.75 E(w)-.275 E
(properties, see the section on De)72 450.4 Q
(vice Color Characterization in the)-.275 E/F2 11/Times-Italic@0 SF
(Inter)2.75 E(-Client Communication)-.22 E(Con)72 463.4 Q
(ventions Manual)-.44 E F1 5.5(.T)C(he LINEAR_RGB function set is pro)
-5.5 E(vided by Xlib and will support most)-.165 E(color monitors.)72
476.4 Q(Function sets may require data that dif)5.5 E
(fers from those needed for the LIN-)-.275 E(EAR_RGB function set.)72
489.4 Q(In that case, its corresponding data may be stored on dif)5.5 E
(ferent root win-)-.275 E(do)72 502.4 Q 2.75(wp)-.275 G(roperties.)-2.75
E F0 2.75(6.12.8. Adding)72 528.4 R(Function Sets)2.75 E F1 1.76 -.88
(To a)72 545.3 T(dd a function set, use).88 E F0(XcmsAddFunctionSet)
3.666 E F1(.).916 E 36 563.05 36 574.05 DL 36 561.05 36 572.05 DL 41.5
559.3 36 559.3 DL 43.5 559.3 38 559.3 DL 49 559.3 43.5 559.3 DL
(Status XcmsAddFunctionSet)72 575.2 Q(\().916 E F2(function_set).916 E
F1(\)).916 E(XcmsFunctionSet *)88.5 588.2 Q F2(function_set)A F1(;).916
E F2(function_set)72 609 Q F1(Speci\214es the function set to add.)
18.221 E 36 604.65 36 615.65 DL 36 602.65 36 613.65 DL 41.5 613.9 36
613.9 DL 43.5 613.9 38 613.9 DL 49 613.9 43.5 613.9 DL(The)72 638.9 Q F0
(XcmsAddFunctionSet)3.666 E F1
(function adds a function set to the color management system.)3.666 E
(If the)5.5 E(function set uses de)72 651.9 Q(vice-dependent)-.275 E F0
(XcmsColorSpace)3.666 E F1(structures not accessible in the color man-)
3.666 E(agement system,)72 664.9 Q F0(XcmsAddFunctionSet)3.666 E F1
(adds them.)3.666 E(If an added)5.5 E F0(XcmsColorSpace)3.666 E F1
(structure is)3.666 E(for a de)72 677.9 Q
(vice-dependent color space not re)-.275 E
(gistered with the X Consortium, the)-.165 E 2.75(ys)-.165 G
(hould be treated)-2.75 E(as pri)72 690.9 Q -.275(va)-.275 G
(te to the client because format v).275 E(alues for unre)-.275 E
(gistered color spaces are assigned at run)-.165 E 2.75(time. If)72
703.9 R(references to an unre)2.75 E
(gistered color space must be made outside the client \(for e)-.165 E
(xample,)-.165 E
(storing color speci\214cations in a \214le using the unre)72 716.9 Q
(gistered color space\), then reference should be)-.165 E
(made by color space pre\214x \(see)72 729.9 Q F0(XcmsF)3.666 E
(ormatOfPr)-.275 E(e\214x)-.198 E F1(and)3.666 E F0(XcmsPr)3.666 E
(e\214xOfF)-.198 E(ormat)-.275 E F1(\).).916 E F0(124)279.75 769 Q 0 Cg
EP
%%Page: 125 130
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E/F1 11/Times-Roman@0 SF
(Additional function sets should be added before an)72 85 Q 2.75(yc)
-.165 G(alls to other Xlib routines are made.)-2.75 E(If not,)5.5 E(the)
72 98 Q F0(XcmsP)3.666 E(erScr)-.22 E(nInf)-.165 E(o)-.275 E F1
(member of a pre)3.666 E(viously created)-.275 E F0(XcmsCCC)3.666 E F1
(does not ha)3.666 E .33 -.165(ve t)-.22 H(he opportunity).165 E
(to initialize with the added function set.)72 111 Q F0 2.75(6.12.9. Cr)
72 137 R(eating Additional Function Sets)-.198 E F1(The creation of add\
itional function sets should be required only when an output de)72 153.9
Q(vice does not)-.275 E(conform to e)72 166.9 Q
(xisting function sets or when additional de)-.165 E
(vice-dependent color spaces are necessary)-.275 E(.)-.715 E 2.75(Af)72
179.9 S(unction set consists primarily of a collection of de)-2.75 E
(vice-dependent)-.275 E F0(XcmsColorSpace)3.666 E F1(struc-)3.666 E
(tures and a means to read and store a screen')72 192.9 Q 2.75(sc)-.605
G(olor characterization data.)-2.75 E(This data is stored in)5.5 E(an)72
205.9 Q F0(XcmsFunctionSet)3.666 E F1 2.75(structure. A)3.666 F
(handle to this structure \(that is, by means of global v)2.75 E
(ariable\))-.275 E
(is usually made accessible to the client program for use with)72 218.9
Q F0(XcmsAddFunctionSet)3.666 E F1(.).916 E(If a function set uses ne)72
235.8 Q 2.75(wd)-.275 G -.275(ev)-2.75 G(ice-dependent).275 E F0
(XcmsColorSpace)3.666 E F1(structures, the)3.666 E 2.75(yw)-.165 G
(ill be transpar)-2.75 E(-)-.22 E
(ently processed into the color management system.)72 248.8 Q
(Function sets can share an)5.5 E F0(XcmsColorSpace)3.666 E F1
(structure for a de)72 261.8 Q(vice-dependent color space.)-.275 E
(In addition, multiple)5.5 E F0(XcmsColorSpace)3.666 E F1(structures)
3.666 E(are allo)72 274.8 Q(wed for a de)-.275 E
(vice-dependent color space; ho)-.275 E(we)-.275 E -.165(ve)-.275 G .88
-.44(r, a f).165 H(unction set can reference only one of).44 E 2.75
(them. These)72 287.8 R F0(XcmsColorSpace)3.666 E F1
(structures will dif)3.666 E(fer in the functions to con)-.275 E -.165
(ve)-.44 G(rt to and from CIE).165 E
(XYZ, thus tailored for the speci\214c function set.)72 300.8 Q .44 LW
36 318.55 36 329.55 DL 36 316.55 36 327.55 DL 41.5 314.8 36 314.8 DL
43.5 314.8 38 314.8 DL 49 314.8 43.5 314.8 DL
(typedef struct _XcmsFunctionSet {)72 337.2 Q
(XcmsColorSpace **DDColorSpaces;)108 350.2 Q
(XcmsScreenInitProc screenInitProc;)108 363.2 Q
(XcmsScreenFreeProc screenFreeProc;)108 376.2 Q 2.75(}X)72 389.2 S
(cmsFunctionSet;)-2.75 E 36 391.35 36 402.35 DL 36 389.35 36 400.35 DL
41.5 400.6 36 400.6 DL 43.5 400.6 38 400.6 DL 49 400.6 43.5 400.6 DL(Th\
e DDColorSpaces member is a pointer to a NULL terminated list of pointe\
rs to)72 425.6 Q F0(XcmsCol-)3.666 E(orSpace)72 438.6 Q F1
(structures for the de)3.666 E
(vice-dependent color spaces that are supported by the function set.)
-.275 E(The screenInitProc member is set to the callback procedure \(se\
e the follo)72 451.6 Q(wing interf)-.275 E(ace speci\214ca-)-.11 E
(tion\) that initializes the)72 464.6 Q F0(XcmsP)3.666 E(erScr)-.22 E
(nInf)-.165 E(o)-.275 E F1(structure for a particular screen.)3.666 E
(The screen initialization callback must adhere to the follo)72 481.5 Q
(wing softw)-.275 E(are interf)-.11 E(ace speci\214cation:)-.11 E 36
499.25 36 510.25 DL 36 497.25 36 508.25 DL 41.5 495.5 36 495.5 DL 43.5
495.5 38 495.5 DL 49 495.5 43.5 495.5 DL
(typedef Status \(*XcmsScreenInitProc\))72 511.4 Q(\().916 E/F2 11
/Times-Italic@0 SF(display).916 E F1(,)A F2(scr)2.75 E(een_number)-.407
E F1(,)A F2(scr)2.75 E(een_info)-.407 E F1(\)).916 E(Display *)88.5
524.4 Q F2(display)A F1(;).916 E(int)88.5 537.4 Q F2(scr)2.75 E
(een_number)-.407 E F1(;).916 E(XcmsPerScrnInfo *)88.5 550.4 Q F2(scr)A
(een_info)-.407 E F1(;).916 E F2(display)72 571.2 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2(scr)72 588.1 Q(een_number)-.407 E F1
(Speci\214es the appropriate screen number on the host serv)144 601.1 Q
(er)-.165 E(.)-.605 E F2(scr)72 618 Q(een_info)-.407 E F1
(Speci\214es the)21.081 E F0(XcmsP)3.666 E(erScr)-.22 E(nInf)-.165 E(o)
-.275 E F1(structure, which contains the per screen infor)3.666 E(-)-.22
E(mation.)144 631 Q 36 626.65 36 637.65 DL 36 624.65 36 635.65 DL 41.5
635.9 36 635.9 DL 43.5 635.9 38 635.9 DL 49 635.9 43.5 635.9 DL
(The screen initialization callback in the)72 660.9 Q F0
(XcmsFunctionSet)3.666 E F1(structure fetches the color characteri-)
3.666 E(zation data \(de)72 673.9 Q
(vice pro\214le\) for the speci\214ed screen, typically of)-.275 E 2.75
(fp)-.275 G(roperties on the screen')-2.75 E 2.75(sr)-.605 G(oot)-2.75 E
(windo)72 686.9 Q 4.18 -.715(w. I)-.275 H 2.75(tt).715 G
(hen initializes the speci\214ed)-2.75 E F0(XcmsP)3.666 E(erScr)-.22 E
(nInf)-.165 E(o)-.275 E F1 2.75(structure. If)3.666 F
(successful, the proce-)2.75 E(dure \214lls in the)72 699.9 Q F0(XcmsP)
3.666 E(erScr)-.22 E(nInf)-.165 E(o)-.275 E F1(structure as follo)3.666
E(ws:)-.275 E 23.65<8349>72 716.8 S 2.75(ts)-23.65 G
(ets the screenData member to the address of the created de)-2.75 E
(vice pro\214le data structure)-.275 E(\(contents kno)99.5 729.8 Q
(wn only by the function set\).)-.275 E F0(125)279.75 769 Q 0 Cg EP
%%Page: 126 131
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E/F1 11/Times-Roman@0 SF 23.65<8349>72
85 S 2.75(tn)-23.65 G -.165(ex)-2.75 G 2.75(ts).165 G
(ets the screenWhitePoint member)-2.75 E(.)-.605 E 23.65<8349>72 101.9 S
2.75(tn)-23.65 G -.165(ex)-2.75 G 2.75(ts).165 G
(ets the functionSet member to the address of the)-2.75 E F0
(XcmsFunctionSet)3.666 E F1(structure.)3.666 E 23.65<8349>72 118.8 S
2.75(tt)-23.65 G(hen sets the state member to)-2.75 E F0
(XcmsInitSuccess)3.666 E F1(and \214nally returns)3.666 E F0
(XcmsSuccess)3.666 E F1(.).916 E
(If unsuccessful, the procedure sets the state member to)72 135.7 Q F0
(XcmsInitF)3.666 E(ailur)-.275 E(e)-.198 E F1(and returns)3.666 E F0
(XcmsF)3.666 E(ail-)-.275 E(ur)72 148.7 Q(e)-.198 E F1(.).916 E(The)72
165.6 Q F0(XcmsP)3.666 E(erScr)-.22 E(nInf)-.165 E(o)-.275 E F1
(structure contains:)3.666 E .44 LW 36 183.35 36 194.35 DL 36 181.35 36
192.35 DL 41.5 179.6 36 179.6 DL 43.5 179.6 38 179.6 DL 49 179.6 43.5
179.6 DL(typedef struct _XcmsPerScrnInfo {)72 202 Q
(XcmsColor screenWhitePoint;)108 215 Q(XPointer functionSet;)108 228 Q
(XPointer screenData;)108 241 Q(unsigned char state;)108 254 Q
(char pad[3];)108 267 Q 2.75(}X)72 280 S(cmsPerScrnInfo;)-2.75 E 36
282.15 36 293.15 DL 36 280.15 36 291.15 DL 41.5 291.4 36 291.4 DL 43.5
291.4 38 291.4 DL 49 291.4 43.5 291.4 DL(The screenWhitePoint member sp\
eci\214es the white point inherent to the screen.)72 316.4 Q
(The functionSet)5.5 E(member speci\214es the appropriate function set.)
72 329.4 Q(The screenData member speci\214es the de)5.5 E(vice pro-)
-.275 E 2.75(\214le. The)72 342.4 R
(state member is set to one of the follo)2.75 E(wing:)-.275 E<83>72
359.3 Q F0(XcmsInitNone)24.566 E F1
(indicates initialization has not been pre)3.666 E(viously attempted.)
-.275 E<83>72 376.2 Q F0(XcmsInitF)24.566 E(ailur)-.275 E(e)-.198 E F1
(indicates initialization has been pre)3.666 E(viously attempted b)-.275
E(ut f)-.22 E(ailed.)-.11 E<83>72 393.1 Q F0(XcmsInitSuccess)24.566 E F1
(indicates initialization has been pre)3.666 E
(viously attempted and succeeded.)-.275 E
(The screen free callback must adhere to the follo)72 410 Q(wing softw)
-.275 E(are interf)-.11 E(ace speci\214cation:)-.11 E 36 427.75 36
438.75 DL 36 425.75 36 436.75 DL 41.5 424 36 424 DL 43.5 424 38 424 DL
49 424 43.5 424 DL(typedef v)72 439.9 Q(oid \(*XcmsScreenFreeProc\))-.22
E(\().916 E/F2 11/Times-Italic@0 SF(scr).916 E(eenData)-.407 E F1(\))
.916 E(XPointer)88.5 452.9 Q F2(scr)2.75 E(eenData)-.407 E F1(;).916 E
F2(scr)72 473.7 Q(eenData)-.407 E F1(Speci\214es the data to be freed.)
21.697 E 36 469.35 36 480.35 DL 36 467.35 36 478.35 DL 41.5 478.6 36
478.6 DL 43.5 478.6 38 478.6 DL 49 478.6 43.5 478.6 DL
(This function is called to free the screenData stored in an)72 503.6 Q
F0(XcmsP)3.666 E(erScr)-.22 E(nInf)-.165 E(o)-.275 E F1(structure.)3.666
E F0(126)279.75 769 Q 0 Cg EP
%%Page: 127 132
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E/F1 12/Times-Bold@0 SF(Chapter 7)262.17
111 Q(Graphics Context Functions)215.664 137 Q/F2 11/Times-Roman@0 SF
2.75(An)72 179.9 S
(umber of resources are used when performing graphics operations in X.)
-2.75 E(Most information)5.5 E(about performing graphics \(for e)72
192.9 Q(xample, fore)-.165 E(ground color)-.165 E 2.75(,b)-.44 G
(ackground color)-2.75 E 2.75(,l)-.44 G(ine style, and so)-2.75 E
(on\) is stored in resources called graphics conte)72 205.9 Q
(xts \(GCs\).)-.165 E(Most graphics operations \(see chapter)5.5 E
(8\) tak)72 218.9 Q 2.75(eaG)-.11 G 2.75(Ca)-2.75 G 2.75(sa)-2.75 G 2.75
(na)-2.75 G -.198(rg)-2.75 G 2.75(ument. Although).198 F
(in theory the X protocol permits sharing of GCs between)2.75 E
(applications, it is e)72 231.9 Q
(xpected that applications will use their o)-.165 E
(wn GCs when performing operations.)-.275 E(Sharing of GCs is highly di\
scouraged because the library may cache GC state.)72 244.9 Q
(Graphics operations can be performed to either windo)72 261.8 Q
(ws or pixmaps, which collecti)-.275 E -.165(ve)-.275 G(ly are).165 E
(called dra)72 274.8 Q -.11(wa)-.165 G 2.75(bles. Each).11 F(dra)2.75 E
-.11(wa)-.165 G(ble e).11 E(xists on a single screen.)-.165 E 2.75(AG)
5.5 G 2.75(Ci)-2.75 G 2.75(sc)-2.75 G(reated for a speci\214c screen)
-2.75 E(and dra)72 287.8 Q -.11(wa)-.165 G
(ble depth and can only be used with dra).11 E -.11(wa)-.165 G
(bles of matching screen and depth.).11 E(This chapter discusses ho)72
304.7 Q 2.75(wt)-.275 G(o:)-2.75 E 23.65<834d>72 321.6 S
(anipulate graphics conte)-23.65 E(xt/state)-.165 E 23.65<8355>72 338.5
S(se graphics conte)-23.65 E(xt con)-.165 E -.165(ve)-.44 G
(nience functions).165 E F0 2.75(7.1. Manipulating)72 364.5 R
(Graphics Context/State)2.75 E F2(Most attrib)72 381.4 Q
(utes of graphics operations are stored in GCs.)-.22 E
(These include line width, line style,)5.5 E(plane mask, fore)72 394.4 Q
(ground, background, tile, stipple, clipping re)-.165 E
(gion, end style, join style, and so on.)-.165 E
(Graphics operations \(for e)72 407.4 Q(xample, dra)-.165 E
(wing lines\) use these v)-.165 E(alues to determine the actual dra)
-.275 E(wing)-.165 E 2.75(operation. Extensions)72 420.4 R
(to X may add additional components to GCs.)2.75 E
(The contents of a GC are)5.5 E(pri)72 433.4 Q -.275(va)-.275 G
(te to Xlib).275 E(.)-.44 E(Xlib implements a write-back cache for all \
elements of a GC that are not resource IDs to allo)72 450.3 Q(w)-.275 E
(Xlib to implement the transparent coalescing of changes to GCs.)72
463.3 Q -.165(Fo)5.5 G 2.75(re).165 G(xample, a call to)-2.915 E F0
(XSet-)3.666 E -.275(Fo)72 476.3 S -.198(re).275 G(gr).198 E(ound)-.198
E F2(of a GC follo)3.666 E(wed by a call to)-.275 E F0(XSetLineAttrib)
3.666 E(utes)-.22 E F2(results in only a single-change)3.666 E
(GC protocol request to the serv)72 489.3 Q(er)-.165 E 5.5(.G)-.605 G
(Cs are neither e)-5.5 E(xpected nor encouraged to be shared between)
-.165 E(client applications, so this write-back caching should present \
no problems.)72 502.3 Q(Applications cannot)5.5 E(share GCs without e)72
515.3 Q(xternal synchronization.)-.165 E
(Therefore, sharing GCs between applications is)5.5 E
(highly discouraged.)72 528.3 Q 1.76 -.88(To s)72 545.2 T(et an attrib)
.88 E(ute of a GC, set the appropriate member of the)-.22 E F0(XGCV)
3.666 E(alues)-1.012 E F2(structure and OR in)3.666 E
(the corresponding v)72 558.2 Q
(alue bitmask in your subsequent calls to)-.275 E F0(XCr)3.666 E(eateGC)
-.198 E F2 5.5(.T).916 G(he symbols for the)-5.5 E -.275(va)72 571.2 S
(lue mask bits and the).275 E F0(XGCV)3.666 E(alues)-1.012 E F2
(structure are:)3.666 E F0(127)279.75 769 Q 0 Cg EP
%%Page: 128 133
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E .44 LW 36 76.75 36 87.75 DL 36 74.75
36 85.75 DL 41.5 73 36 73 DL 43.5 73 38 73 DL 49 73 43.5 73 DL/F1 11
/Times-Roman@0 SF(/* GC attrib)72 88.9 Q(ute v)-.22 E(alue mask bits */)
-.275 E(#de\214ne)72 108.4 Q F0(GCFunction)125.416 108.4 Q F1(\(1L<<0\))
321 108.4 Q(#de\214ne)72 121.4 Q F0(GCPlaneMask)125.416 121.4 Q F1
(\(1L<<1\))321 121.4 Q(#de\214ne)72 134.4 Q F0(GCF)125.416 134.4 Q(or)
-.275 E(egr)-.198 E(ound)-.198 E F1(\(1L<<2\))321 134.4 Q(#de\214ne)72
147.4 Q F0(GCBackgr)125.416 147.4 Q(ound)-.198 E F1(\(1L<<3\))321 147.4
Q(#de\214ne)72 160.4 Q F0(GCLineW)125.416 160.4 Q(idth)-.198 E F1
(\(1L<<4\))321 160.4 Q(#de\214ne)72 173.4 Q F0(GCLineStyle)125.416 173.4
Q F1(\(1L<<5\))321 173.4 Q(#de\214ne)72 186.4 Q F0(GCCapStyle)125.416
186.4 Q F1(\(1L<<6\))321 186.4 Q(#de\214ne)72 199.4 Q F0(GCJ)125.416
199.4 Q(oinStyle)-.165 E F1(\(1L<<7\))321 199.4 Q(#de\214ne)72 212.4 Q
F0(GCFillStyle)125.416 212.4 Q F1(\(1L<<8\))321 212.4 Q(#de\214ne)72
225.4 Q F0(GCFillRule)125.416 225.4 Q F1(\(1L<<9\))321 225.4 Q
(#de\214ne)72 238.4 Q F0(GCT)125.416 238.4 Q(ile)-.198 E F1(\(1L<<10\))
321 238.4 Q(#de\214ne)72 251.4 Q F0(GCStipple)125.416 251.4 Q F1
(\(1L<<11\))321 251.4 Q(#de\214ne)72 264.4 Q F0(GCT)125.416 264.4 Q
(ileStipXOrigin)-.198 E F1(\(1L<<12\))321 264.4 Q(#de\214ne)72 277.4 Q
F0(GCT)125.416 277.4 Q(ileStipY)-.198 E(Origin)-.385 E F1(\(1L<<13\))321
277.4 Q(#de\214ne)72 290.4 Q F0(GCF)125.416 290.4 Q(ont)-.275 E F1
(\(1L<<14\))321 290.4 Q(#de\214ne)72 303.4 Q F0(GCSubwindo)125.416 303.4
Q(wMode)-.11 E F1(\(1L<<15\))321 303.4 Q(#de\214ne)72 316.4 Q F0
(GCGraphicsExposur)125.416 316.4 Q(es)-.198 E F1(\(1L<<16\))321 316.4 Q
(#de\214ne)72 329.4 Q F0(GCClipXOrigin)125.416 329.4 Q F1(\(1L<<17\))321
329.4 Q(#de\214ne)72 342.4 Q F0(GCClipY)125.416 342.4 Q(Origin)-.385 E
F1(\(1L<<18\))321 342.4 Q(#de\214ne)72 355.4 Q F0(GCClipMask)125.416
355.4 Q F1(\(1L<<19\))321 355.4 Q(#de\214ne)72 368.4 Q F0(GCDashOffset)
125.416 368.4 Q F1(\(1L<<20\))321 368.4 Q(#de\214ne)72 381.4 Q F0
(GCDashList)125.416 381.4 Q F1(\(1L<<21\))321 381.4 Q(#de\214ne)72 394.4
Q F0(GCAr)125.416 394.4 Q(cMode)-.198 E F1(\(1L<<22\))321 394.4 Q(/* V)
72 420.4 Q(alues */)-1.221 E(typedef struct {)72 446.4 Q(int function;)
108 459.4 Q(/* logical operation */)125.913 E(unsigned long plane_mask;)
108 472.4 Q(/* plane mask */)59.616 E(unsigned long fore)108 485.4 Q
60.705(ground; /*)-.165 F(fore)2.75 E(ground pix)-.165 E(el */)-.165 E
(unsigned long background;)108 498.4 Q(/* background pix)60.232 E(el */)
-.165 E(int line_width;)108 511.4 Q(/* line width \(in pix)115.518 E
(els\) */)-.165 E(int line_style;)108 524.4 Q(/* LineSolid, LineOnOf)
119.797 E(fDash, LineDoubleDash */)-.275 E(int cap_style;)108 537.4 Q
(/* CapNotLast, CapButt, CapRound, CapProjecting */)121.029 E
(int join_style;)108 550.4 Q(/* JoinMiter)119.181 E 2.75(,J)-.44 G
(oinRound, JoinBe)-2.75 E -.165(ve)-.275 G 2.75(l*).165 G(/)-2.75 E
(int \214ll_style;)108 563.4 Q(/* FillSolid, FillT)124.065 E
(iled, FillStippled FillOpaqueStippled*/)-.385 E(int \214ll_rule;)108
576.4 Q(/* Ev)127.739 E(enOddRule, W)-.165 E(indingRule */)-.44 E
(int arc_mode;)108 589.4 Q(/* ArcChord, ArcPieSlice */)119.203 E
(Pixmap tile;)108 602.4 Q(/* tile pixmap for tiling operations */)
126.518 E(Pixmap stipple;)108 615.4 Q
(/* stipple 1 plane pixmap for stippling */)111.239 E(int ts_x_origin;)
108 628.4 Q(/* of)112.46 E(fset for tile or stipple operations */)-.275
E(int ts_y_origin;)108 641.4 Q -.165(Fo)108 654.4 S(nt font;).165 E
(/* def)136.462 E(ault te)-.11 E(xt font for te)-.165 E
(xt operations */)-.165 E(int subwindo)108 667.4 Q 79.438(w_mode; /*)
-.275 F(ClipByChildren, IncludeInferiors */)2.75 E(Bool graphics_e)108
680.4 Q 63.455(xposures; /*)-.165 F(boolean, should e)2.75 E
(xposures be generated */)-.165 E(int clip_x_origin;)108 693.4 Q
(/* origin for clipping */)103.297 E(int clip_y_origin;)108 706.4 Q
(Pixmap clip_mask;)108 719.4 Q
(/* bitmap clipping; other calls for rects */)95.355 E(int dash_of)108
732.4 Q 109.391(fset; /*)-.275 F(patterned/dashed line information */)
2.75 E F0(128)279.75 769 Q 0 Cg EP
%%Page: 129 134
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E/F1 11/Times-Roman@0 SF(char dashes;)
108 85 Q 2.75(}X)72 98 S(GCV)-2.75 E(alues;)-1.221 E .44 LW 36 100.15 36
111.15 DL 36 98.15 36 109.15 DL 41.5 109.4 36 109.4 DL 43.5 109.4 38
109.4 DL 49 109.4 43.5 109.4 DL(The def)72 134.4 Q(ault GC v)-.11 E
(alues are:)-.275 E 444.713 145.65 72 145.65 DL F0 45.342
(Component Default)72 161.9 R 444.713 172.65 72 172.65 DL F1(function)72
188.9 Q F0(GXcopy)176.008 188.9 Q F1 47.795(plane_mask All)72 201.9 R
(ones)2.75 E(fore)72 214.9 Q 51.634(ground 0)-.165 F 48.411
(background 1)72 227.9 R 53.284(line_width 0)72 240.9 R(line_style)72
253.9 Q F0(LineSolid)176.008 253.9 Q F1(cap_style)72 266.9 Q F0(CapButt)
176.008 266.9 Q F1(join_style)72 279.9 Q F0 -.165(Jo)176.008 279.9 S
(inMiter).165 E F1(\214ll_style)72 292.9 Q F0(FillSolid)176.008 292.9 Q
F1(\214ll_rule)72 305.9 Q F0(Ev)176.008 305.9 Q(enOddRule)-.11 E F1
(arc_mode)72 318.9 Q F0(Ar)176.008 318.9 Q(cPieSlice)-.198 E F1 86.284
(tile Pixmap)72 331.9 R(of unspeci\214ed size \214lled with fore)2.75 E
(ground pix)-.165 E(el)-.165 E(\(that is, client speci\214ed pix)175.092
344.9 Q(el if an)-.165 E 1.43 -.715(y, e)-.165 H(lse 0\)).715 E
(\(subsequent changes to fore)175.092 357.9 Q(ground do not af)-.165 E
(fect this pixmap\))-.275 E 71.005(stipple Pixmap)72 370.9 R
(of unspeci\214ed size \214lled with ones)2.75 E 50.226(ts_x_origin 0)72
383.9 R 50.226(ts_y_origin 0)72 396.9 R 82.621(font <implementation)72
409.9 R(dependent>)2.75 E(subwindo)72 422.9 Q(w_mode)-.275 E F0
(ClipByChildr)176.008 422.9 Q(en)-.198 E F1(graphics_e)72 435.9 Q
(xposures)-.165 E F0 -.814(Tr)176.008 435.9 S(ue).814 E F1 41.063
(clip_x_origin 0)72 448.9 R 41.063(clip_y_origin 0)72 461.9 R(clip_mask)
72 474.9 Q F0(None)176.008 474.9 Q F1(dash_of)72 487.9 Q 49.907(fset 0)
-.275 F 71.016(dashes 4)72 500.9 R(\(that is, the list [4, 4]\))2.75 E
444.713 511.65 72 511.65 DL(Note that fore)72 532.3 Q
(ground and background are not set to an)-.165 E 2.75(yv)-.165 G
(alues lik)-3.025 E(ely to be useful in a windo)-.11 E -.715(w.)-.275 G
(The function attrib)72 549.2 Q
(utes of a GC are used when you update a section of a dra)-.22 E -.11
(wa)-.165 G(ble \(the destina-).11 E(tion\) with bits from some)72 562.2
Q(where else \(the source\).)-.275 E(The function in a GC de\214nes ho)
5.5 E 2.75(wt)-.275 G(he ne)-2.75 E 2.75(wd)-.275 G(es-)-2.75 E(tinatio\
n bits are to be computed from the source bits and the old destination \
bits.)72 575.2 Q F0(GXcopy)6.416 E F1(is typ-)3.666 E
(ically the most useful because it will w)72 588.2 Q
(ork on a color display)-.11 E 2.75(,b)-.715 G
(ut special applications may use)-2.97 E(other functions, particularly \
in concert with particular planes of a color display)72 601.2 Q 5.5(.T)
-.715 G(he 16 GC func-)-5.5 E(tions, de\214ned in <)72 614.2 Q F0
(X11/X.h)A F1(>, are:)A 393 625.45 72 625.45 DL F0(Function Name)72
641.7 Q -1.012(Va)56.843 G 18.506(lue Operation)1.012 F 393 652.45 72
652.45 DL(GXclear)72.916 668.7 Q F1(0x0)206.25 668.7 Q(0)249 668.7 Q F0
(GXand)72.916 681.7 Q F1(0x1)206.25 681.7 Q(src AND dst)249 681.7 Q F0
(GXandRe)72.916 694.7 Q -.11(ve)-.165 G(rse).11 E F1(0x2)206.25 694.7 Q
(src AND NO)249 694.7 Q 2.75(Td)-.44 G(st)-2.75 E F0(GXcopy)72.916 707.7
Q F1(0x3)206.25 707.7 Q(src)249 707.7 Q F0(129)279.75 769 Q 0 Cg EP
%%Page: 130 135
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E .44 LW 393 76.75 72 76.75 DL
(Function Name)72 93 Q -1.012(Va)56.843 G 18.506(lue Operation)1.012 F
393 103.75 72 103.75 DL(GXandIn)72.916 120 Q -.11(ve)-.44 G(rted).11 E
/F1 11/Times-Roman@0 SF(0x4)206.25 120 Q(\(NO)249 120 Q 2.75(Ts)-.44 G
(rc\) AND dst)-2.75 E F0(GXnoop)72.916 133 Q F1(0x5)206.25 133 Q(dst)249
133 Q F0(GXxor)72.916 146 Q F1(0x6)206.25 146 Q(src XOR dst)249 146 Q F0
(GXor)72.916 159 Q F1(0x7)206.25 159 Q(src OR dst)249 159 Q F0(GXnor)
72.916 172 Q F1(0x8)206.25 172 Q(\(NO)249 172 Q 2.75(Ts)-.44 G
(rc\) AND \(NO)-2.75 E 2.75(Td)-.44 G(st\))-2.75 E F0(GXequi)72.916 185
Q(v)-.11 E F1(0x9)206.25 185 Q(\(NO)249 185 Q 2.75(Ts)-.44 G
(rc\) XOR dst)-2.75 E F0(GXin)72.916 198 Q -.11(ve)-.44 G(rt).11 E F1
(0xa)206.558 198 Q(NO)249 198 Q 2.75(Td)-.44 G(st)-2.75 E F0(GXorRe)
72.916 211 Q -.11(ve)-.165 G(rse).11 E F1(0xb)206.25 211 Q(src OR \(NO)
249 211 Q 2.75(Td)-.44 G(st\))-2.75 E F0(GXcopyIn)72.916 224 Q -.11(ve)
-.44 G(rted).11 E F1(0xc)206.558 224 Q(NO)249 224 Q 2.75(Ts)-.44 G(rc)
-2.75 E F0(GXorIn)72.916 237 Q -.11(ve)-.44 G(rted).11 E F1(0xd)206.25
237 Q(\(NO)249 237 Q 2.75(Ts)-.44 G(rc\) OR dst)-2.75 E F0(GXnand)72.916
250 Q F1(0x)206.64 250 Q(e)-.165 E(\(NO)249 250 Q 2.75(Ts)-.44 G
(rc\) OR \(NO)-2.75 E 2.75(Td)-.44 G(st\))-2.75 E F0(GXset)72.916 263 Q
F1(0xf)207.168 263 Q(1)249 263 Q 393 273.75 72 273.75 DL(Man)72 294.4 Q
2.75(yg)-.165 G(raphics operations depend on either pix)-2.75 E(el v)
-.165 E(alues or planes in a GC.)-.275 E(The planes attrib)5.5 E(ute is)
-.22 E(of type long, and it speci\214es which planes of the destination\
 are to be modi\214ed, one bit per plane.)72 307.4 Q 2.75(Am)72 320.4 S
(onochrome display has only one plane and will be the least signi\214ca\
nt bit of the w)-2.75 E 2.75(ord. As)-.11 F
(planes are added to the display hardw)72 333.4 Q(are, the)-.11 E 2.75
(yw)-.165 G(ill occup)-2.75 E 2.75(ym)-.11 G
(ore signi\214cant bits in the plane)-2.75 E(mask.)72 346.4 Q
(In graphics operations, gi)72 363.3 Q -.165(ve)-.275 G 2.75(nas).165 G
(ource and destination pix)-2.75 E
(el, the result is computed bitwise on cor)-.165 E(-)-.22 E
(responding bits of the pix)72 376.3 Q 2.75(els. That)-.165 F
(is, a Boolean operation is performed in each bit plane.)2.75 E(The)5.5
E(plane_mask restricts the operation to a subset of planes.)72 389.3 Q
2.75(Am)5.5 G(acro constant)-2.75 E F0(AllPlanes)3.666 E F1(can be used)
3.666 E(to refer to all planes of the screen simultaneously)72 402.3 Q
5.5(.T)-.715 G(he result is computed by the follo)-5.5 E(wing:)-.275 E
(\(\(src FUNC dst\) AND plane-mask\) OR \(dst AND \(NO)108 425.7 Q 2.75
(Tp)-.44 G(lane-mask\)\))-2.75 E
(Range checking is not performed on the v)72 449.1 Q(alues for fore)
-.275 E(ground, background, or plane_mask.)-.165 E(The)5.5 E(y)-.165 E
(are simply truncated to the appropriate number of bits.)72 462.1 Q
(The line-width is measured in pix)5.5 E(els and)-.165 E(either can be \
greater than or equal to one \(wide line\) or can be the special v)72
475.1 Q(alue zero \(thin line\).)-.275 E -.44(Wi)72 492 S
(de lines are dra).44 E
(wn centered on the path described by the graphics request.)-.165 E
(Unless otherwise)5.5 E(speci\214ed by the join-style or cap-style, the\
 bounding box of a wide line with endpoints [x1, y1],)72 505 Q
([x2, y2] and width w is a rectangle with v)72 518 Q
(ertices at the follo)-.165 E(wing real coordinates:)-.275 E
([x1-\(w*sn/2\), y1+\(w*cs/2\)], [x1+\(w*sn/2\), y1-\(w*cs/2\)],)108
541.4 Q([x2-\(w*sn/2\), y2+\(w*cs/2\)], [x2+\(w*sn/2\), y2-\(w*cs/2\)])
108 554.4 Q(Here sn is the sine of the angle of the line, and cs is the\
 cosine of the angle of the line.)72 577.8 Q 2.75(Ap)5.5 G(ix)-2.75 E
(el is)-.165 E(part of the line and so is dra)72 590.8 Q
(wn if the center of the pix)-.165 E
(el is fully inside the bounding box \(which is)-.165 E(vie)72 603.8 Q
(wed as ha)-.275 E(ving in\214nitely thin edges\).)-.22 E
(If the center of the pix)5.5 E(el is e)-.165 E
(xactly on the bounding box,)-.165 E(it is part of the line if and only\
 if the interior is immediately to its right \(x increasing direction\)\
.)72 616.8 Q(Pix)72 629.8 Q(els with centers on a horizontal edge are a\
 special case and are part of the line if and only if)-.165 E
(the interior or the boundary is immediately belo)72 642.8 Q 2.75(w\()
-.275 G 2.75(yi)-2.75 G(ncreasing direction\) and the interior or the)
-2.75 E
(boundary is immediately to the right \(x increasing direction\).)72
655.8 Q(Thin lines \(zero line-width\) are one-pix)72 672.7 Q
(el-wide lines dra)-.165 E(wn using an unspeci\214ed, de)-.165 E
(vice-depen-)-.275 E(dent algorithm.)72 685.7 Q(There are only tw)5.5 E
2.75(oc)-.11 G(onstraints on this algorithm.)-2.75 E 16.5(1. If)72 702.6
R 2.75(al)2.75 G(ine is dra)-2.75 E
(wn unclipped from [x1,y1] to [x2,y2] and if another line is dra)-.165 E
(wn unclipped)-.165 E
(from [x1+dx,y1+dy] to [x2+dx,y2+dy], a point [x,y] is touched by dra)
99.5 715.6 Q(wing the \214rst line if)-.165 E
(and only if the point [x+dx,y+dy] is touched by dra)99.5 728.6 Q
(wing the second line.)-.165 E F0(130)279.75 769 Q 0 Cg EP
%%Page: 131 136
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E/F1 11/Times-Roman@0 SF 16.5(2. The)72
85 R(ef)2.75 E(fecti)-.275 E .33 -.165(ve s)-.275 H
(et of points comprising a line cannot be af).165 E(fected by clipping.)
-.275 E(That is, a point)5.5 E(is touched in a clipped line if and only\
 if the point lies inside the clipping re)99.5 98 Q(gion and the)-.165 E
(point w)99.5 111 Q(ould be touched by the line when dra)-.11 E
(wn unclipped.)-.165 E 2.75(Aw)72 127.9 S(ide line dra)-2.75 E
(wn from [x1,y1] to [x2,y2] al)-.165 E -.11(wa)-.11 G(ys dra).11 E
(ws the same pix)-.165 E(els as a wide line dra)-.165 E(wn)-.165 E
(from [x2,y2] to [x1,y1], not counting cap-style and join-style.)72
140.9 Q(It is recommended that this prop-)5.5 E
(erty be true for thin lines, b)72 153.9 Q(ut this is not required.)-.22
E 2.75(Al)5.5 G(ine-width of zero may dif)-2.75 E(fer from a line-)-.275
E(width of one in which pix)72 166.9 Q(els are dra)-.165 E 2.75
(wn. This)-.165 F(permits the use of man)2.75 E 2.75(ym)-.165 G(anuf)
-2.75 E(acturers' line dra)-.11 E(w-)-.165 E(ing hardw)72 179.9 Q
(are, which may run man)-.11 E 2.75(yt)-.165 G(imes f)-2.75 E
(aster than the more precisely speci\214ed wide lines.)-.11 E
(In general, dra)72 196.8 Q(wing a thin line will be f)-.165 E
(aster than dra)-.11 E(wing a wide line of width one.)-.165 E(Ho)5.5 E
(we)-.275 E -.165(ve)-.275 G -.44(r,).165 G(because of their dif)72
209.8 Q(ferent dra)-.275 E
(wing algorithms, thin lines may not mix well aesthetically with wide)
-.165 E 2.75(lines. If)72 222.8 R(it is desirable to obtain precise and\
 uniform results across all displays, a client should)2.75 E(al)72 235.8
Q -.11(wa)-.11 G
(ys use a line-width of one rather than a line-width of zero.).11 E
(The line-style de\214nes which sections of a line are dra)72 252.7 Q
(wn:)-.165 E F0(LineSolid)72.916 272.2 Q F1
(The full path of the line is dra)182.1 272.2 Q(wn.)-.165 E F0
(LineDoubleDash)72.916 291.2 Q F1(The full path of the line is dra)182.1
291.2 Q(wn, b)-.165 E(ut the e)-.22 E -.165(ve)-.275 G 2.75(nd).165 G
(ashes are \214lled dif)-2.75 E(fer)-.275 E(-)-.22 E
(ently from the odd dashes \(see \214ll-style\) with)182.1 304.2 Q F0
(CapButt)3.666 E F1(style used where)3.666 E -2.365 -.275(ev e)182.1
317.2 T 2.75(na).275 G(nd odd dashes meet.)-2.75 E F0(LineOnOffDash)
72.916 336.2 Q F1(Only the e)182.1 336.2 Q -.165(ve)-.275 G 2.75(nd).165
G(ashes are dra)-2.75 E(wn, and cap-style applies to all internal ends)
-.165 E(of the indi)182.1 349.2 Q(vidual dashes, e)-.275 E(xcept)-.165 E
F0(CapNotLast)3.666 E F1(is treated as)3.666 E F0(CapButt)3.666 E F1(.)
.916 E(The cap-style de\214nes ho)72 372.6 Q 2.75(wt)-.275 G
(he endpoints of a path are dra)-2.75 E(wn:)-.165 E F0(CapNotLast)72.916
392.1 Q F1(This is equi)182.1 392.1 Q -.275(va)-.275 G(lent to).275 E F0
(CapButt)3.666 E F1 -.165(ex)3.666 G
(cept that for a line-width of zero the).165 E
(\214nal endpoint is not dra)182.1 405.1 Q(wn.)-.165 E F0(CapButt)72.916
424.1 Q F1(The line is square at the endpoint \(perpendicular to the sl\
ope of the line\))182.1 424.1 Q(with no projection be)182.1 437.1 Q
(yond.)-.165 E F0(CapRound)72.916 456.1 Q F1(The line has a circular ar\
c with the diameter equal to the line-width, cen-)182.1 456.1 Q
(tered on the endpoint.)182.1 469.1 Q(\(This is equi)5.5 E -.275(va)
-.275 G(lent to).275 E F0(CapButt)3.666 E F1(for line-width of)3.666 E
(zero\).)182.1 482.1 Q F0(CapPr)72.916 501.1 Q(ojecting)-.198 E F1
(The line is square at the end, b)182.1 501.1 Q
(ut the path continues be)-.22 E(yond the endpoint)-.165 E
(for a distance equal to half the line-width.)182.1 514.1 Q
(\(This is equi)5.5 E -.275(va)-.275 G(lent to).275 E F0(Cap-)3.666 E
(Butt)182.1 527.1 Q F1(for line-width of zero\).)3.666 E
(The join-style de\214nes ho)72 550.5 Q 2.75(wc)-.275 G(orners are dra)
-2.75 E(wn for wide lines:)-.165 E F0 -.165(Jo)72.916 570 S(inMiter).165
E F1(The outer edges of tw)182.1 570 Q 2.75(ol)-.11 G(ines e)-2.75 E
(xtend to meet at an angle.)-.165 E(Ho)5.5 E(we)-.275 E -.165(ve)-.275 G
.88 -.44(r, i).165 H 2.75(ft).44 G(he)-2.75 E(angle is less than 11 de)
182.1 583 Q(grees, then a)-.165 E F0 -.165(Jo)3.666 G(inBe).165 E -.11
(ve)-.165 G(l).11 E F1(join-style is used instead.)3.666 E F0 -.165(Jo)
72.916 602 S(inRound).165 E F1(The corner is a circular arc with the di\
ameter equal to the line-width,)182.1 602 Q(centered on the joinpoint.)
182.1 615 Q F0 -.165(Jo)72.916 634 S(inBe).165 E -.11(ve)-.165 G(l).11 E
F1(The corner has)182.1 634 Q F0(CapButt)3.666 E F1
(endpoint styles with the triangular notch \214lled.)3.666 E -.165(Fo)72
657.4 S 2.75(ral).165 G(ine with coincident endpoints \(x1=x2, y1=y2\),\
 when the cap-style is applied to both end-)-2.75 E
(points, the semantics depends on the line-width and the cap-style:)72
670.4 Q F0(CapNotLast)72.916 689.9 Q F1(thin)182.1 689.9 Q
(The results are de)234.6 689.9 Q(vice dependent, b)-.275 E
(ut the desired ef)-.22 E(fect is that)-.275 E(nothing is dra)234.6
702.9 Q(wn.)-.165 E F0(131)279.75 769 Q 0 Cg EP
%%Page: 132 137
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E(CapButt)72.916 85 Q/F1 11
/Times-Roman@0 SF(thin)182.1 85 Q(The results are de)234.6 85 Q
(vice dependent, b)-.275 E(ut the desired ef)-.22 E(fect is that a)-.275
E(single pix)234.6 98 Q(el is dra)-.165 E(wn.)-.165 E F0(CapRound)72.916
117 Q F1(thin)182.1 117 Q(The results are the same as for)234.6 117 Q F0
(CapButt)3.666 E F1(/thin.).916 E F0(CapPr)72.916 136 Q(ojecting)-.198 E
F1(thin)182.1 136 Q(The results are the same as for)234.6 136 Q F0
(CapButt)3.666 E F1(/thin.).916 E F0(CapButt)72.916 155 Q F1(wide)182.1
155 Q(Nothing is dra)234.6 155 Q(wn.)-.165 E F0(CapRound)72.916 174 Q F1
(wide)182.1 174 Q
(The closed path is a circle, centered at the endpoint, and with the)
234.6 174 Q(diameter equal to the line-width.)234.6 187 Q F0(CapPr)
72.916 206 Q(ojecting)-.198 E F1(wide)182.1 206 Q
(The closed path is a square, aligned with the coordinate ax)234.6 206 Q
(es,)-.165 E
(centered at the endpoint, and with the sides equal to the line-)234.6
219 Q(width.)234.6 232 Q -.165(Fo)72 255.4 S 2.75(ral).165 G(ine with c\
oincident endpoints \(x1=x2, y1=y2\), when the join-style is applied at\
 one or both)-2.75 E(endpoints, the ef)72 268.4 Q
(fect is as if the line w)-.275 E(as remo)-.11 E -.165(ve)-.165 G 2.75
(df).165 G(rom the o)-2.75 E -.165(ve)-.165 G(rall path.).165 E(Ho)5.5 E
(we)-.275 E -.165(ve)-.275 G .88 -.44(r, i).165 H 2.75(ft).44 G
(he total path)-2.75 E
(consists of or is reduced to a single point joined with itself, the ef)
72 281.4 Q(fect is the same as when the cap-)-.275 E
(style is applied at both endpoints.)72 294.4 Q
(The tile/stipple represents an in\214nite tw)72 311.3 Q
(o-dimensional plane, with the tile/stipple replicated in all)-.11 E
2.75(dimensions. When)72 324.3 R(that plane is superimposed on the dra)
2.75 E -.11(wa)-.165 G(ble for use in a graphics operation,).11 E
(the upper)72 337.3 Q(-left corner of some instance of the tile/stipple\
 is at the coordinates within the dra)-.22 E -.11(wa)-.165 G(ble).11 E
(speci\214ed by the tile/stipple origin.)72 350.3 Q
(The tile/stipple and clip origins are interpreted relati)5.5 E .33
-.165(ve t)-.275 H 2.75(ot).165 G(he)-2.75 E(origin of whate)72 363.3 Q
-.165(ve)-.275 G 2.75(rd).165 G(estination dra)-2.75 E -.11(wa)-.165 G
(ble is speci\214ed in a graphics request.).11 E(The tile pixmap must)
5.5 E(ha)72 376.3 Q .33 -.165(ve t)-.22 H
(he same root and depth as the GC, or a).165 E F0(BadMatch)3.666 E F1
(error results.)3.666 E(The stipple pixmap must)5.5 E(ha)72 389.3 Q .33
-.165(ve d)-.22 H(epth one and must ha).165 E .33 -.165(ve t)-.22 H
(he same root as the GC, or a).165 E F0(BadMatch)3.666 E F1
(error results.)3.666 E -.165(Fo)5.5 G 2.75(rs).165 G(tipple)-2.75 E
(operations where the \214ll-style is)72 402.3 Q F0(FillStippled)3.666 E
F1 -.22(bu)3.666 G 2.75(tn).22 G(ot)-2.75 E F0(FillOpaqueStippled)3.666
E F1 2.75(,t).916 G(he stipple pattern is)-2.75 E(tiled in a single pla\
ne and acts as an additional clip mask to be ANDed with the clip-mask.)
72 415.3 Q(Although some sizes may be f)72 428.3 Q
(aster to use than others, an)-.11 E 2.75(ys)-.165 G
(ize pixmap can be used for tiling or)-2.75 E(stippling.)72 441.3 Q
(The \214ll-style de\214nes the contents of the source for line, te)72
458.2 Q(xt, and \214ll requests.)-.165 E -.165(Fo)5.5 G 2.75(ra).165 G
(ll te)-2.75 E(xt and \214ll)-.165 E(requests \(for e)72 471.2 Q
(xample,)-.165 E F0(XDrawT)3.666 E(ext)-1.012 E F1(,).916 E F0(XDrawT)
3.666 E(ext16)-1.012 E F1(,).916 E F0(XFillRectangle)3.666 E F1(,).916 E
F0(XFillP)3.666 E(olygon)-.22 E F1 2.75(,a).916 G(nd)-2.75 E F0(XFil-)
3.666 E(lAr)72 484.2 Q(c)-.198 E F1
(\); for line requests with line-style).916 E F0(LineSolid)3.666 E F1
(\(for e)3.666 E(xample,)-.165 E F0(XDrawLine)3.666 E F1(,).916 E F0
(XDrawSegments)3.666 E F1(,).916 E F0(XDrawRectangle)72.916 497.2 Q F1
(,).916 E F0(XDrawAr)3.666 E(c)-.198 E F1(\); and for the e).916 E -.165
(ve)-.275 G 2.75(nd).165 G(ashes for line requests with line-style)-2.75
E F0(LineOnOffDash)72.916 510.2 Q F1(or)3.666 E F0(LineDoubleDash)3.666
E F1 2.75(,t).916 G(he follo)-2.75 E(wing apply:)-.275 E F0(FillSolid)
72.916 529.7 Q F1 -.165(Fo)218.1 529.7 S(re).165 E(ground)-.165 E F0
(FillT)72.916 548.7 Q(iled)-.198 E F1 -.385(Ti)218.1 548.7 S(le).385 E
F0(FillOpaqueStippled)72.916 567.7 Q F1 2.75(At)218.1 567.7 S
(ile with the same width and height as stipple, b)-2.75 E(ut with back-)
-.22 E(ground e)218.1 580.7 Q -.165(ve)-.275 G
(rywhere stipple has a zero and with fore).165 E(ground e)-.165 E -.165
(ve)-.275 G(ry-).165 E(where stipple has a one)218.1 593.7 Q F0
(FillStippled)72.916 612.7 Q F1 -.165(Fo)218.1 612.7 S(re).165 E
(ground mask)-.165 E(ed by stipple)-.11 E(When dra)72 636.1 Q
(wing lines with line-style)-.165 E F0(LineDoubleDash)3.666 E F1 2.75
(,t).916 G(he odd dashes are controlled by the \214ll-)-2.75 E
(style in the follo)72 649.1 Q(wing manner:)-.275 E F0(FillSolid)72.916
668.6 Q F1(Background)218.1 668.6 Q F0(FillT)72.916 687.6 Q(iled)-.198 E
F1(Same as for e)218.1 687.6 Q -.165(ve)-.275 G 2.75(nd).165 G(ashes)
-2.75 E F0(FillOpaqueStippled)72.916 706.6 Q F1(Same as for e)218.1
706.6 Q -.165(ve)-.275 G 2.75(nd).165 G(ashes)-2.75 E F0(132)279.75 769
Q 0 Cg EP
%%Page: 133 138
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E(FillStippled)72.916 85 Q/F1 11
/Times-Roman@0 SF(Background mask)218.1 85 Q(ed by stipple)-.11 E
(Storing a pixmap in a GC might or might not result in a cop)72 108.4 Q
2.75(yb)-.11 G(eing made.)-2.75 E(If the pixmap is later)5.5 E(used as \
the destination for a graphics request, the change might or might not b\
e re\215ected in the)72 121.4 Q 2.75(GC. If)72 134.4 R(the pixmap is us\
ed simultaneously in a graphics request both as a destination and as a \
tile)2.75 E(or stipple, the results are unde\214ned.)72 147.4 Q -.165
(Fo)72 164.3 S 2.75(ro).165 G(ptimum performance, you should dra)-2.75 E
2.75(wa)-.165 G 2.75(sm)-2.75 G
(uch as possible with the same GC \(without)-2.75 E
(changing its components\).)72 177.3 Q
(The costs of changing GC components relati)5.5 E .33 -.165(ve t)-.275 H
2.75(ou).165 G(sing dif)-2.75 E(ferent GCs)-.275 E
(depend on the display hardw)72 190.3 Q(are and the serv)-.11 E
(er implementation.)-.165 E(It is quite lik)5.5 E(ely that some)-.11 E
(amount of GC information will be cached in display hardw)72 203.3 Q
(are and that such hardw)-.11 E(are can only)-.11 E
(cache a small number of GCs.)72 216.3 Q(The dashes v)72 233.2 Q(alue i\
s actually a simpli\214ed form of the more general patterns that can be\
 set with)-.275 E F0(XSetDashes)72.916 246.2 Q F1 5.5(.S).916 G
(pecifying a v)-5.5 E(alue of N is equi)-.275 E -.275(va)-.275 G
(lent to specifying the tw).275 E(o-element list [N, N] in)-.11 E F0
(XSetDashes)72.916 259.2 Q F1 5.5(.T).916 G(he v)-5.5 E
(alue must be nonzero, or a)-.275 E F0(BadV)3.666 E(alue)-1.012 E F1
(error results.)3.666 E
(The clip-mask restricts writes to the destination dra)72 276.1 Q -.11
(wa)-.165 G 2.75(ble. If).11 F(the clip-mask is set to a pixmap, it)2.75
E(must ha)72 289.1 Q .33 -.165(ve d)-.22 H(epth one and ha).165 E .33
-.165(ve t)-.22 H(he same root as the GC, or a).165 E F0(BadMatch)3.666
E F1(error results.)3.666 E(If clip-)5.5 E(mask is set to)72 302.1 Q F0
(None)3.666 E F1 2.75(,t).916 G(he pix)-2.75 E(els are al)-.165 E -.11
(wa)-.11 G(ys dra).11 E(wn re)-.165 E -.055(ga)-.165 G
(rdless of the clip origin.).055 E(The clip-mask also)5.5 E
(can be set by calling the)72 315.1 Q F0(XSetClipRectangles)3.666 E F1
(or)3.666 E F0(XSetRegion)3.666 E F1 2.75(functions. Only)3.666 F(pix)
2.75 E(els where the)-.165 E(clip-mask has a bit set to 1 are dra)72
328.1 Q 2.75(wn. Pix)-.165 F(els are not dra)-.165 E
(wn outside the area co)-.165 E -.165(ve)-.165 G(red by the clip-).165 E
(mask or where the clip-mask has a bit set to 0.)72 341.1 Q
(The clip-mask af)5.5 E(fects all graphics requests.)-.275 E(The)5.5 E
(clip-mask does not clip sources.)72 354.1 Q
(The clip-mask origin is interpreted relati)5.5 E .33 -.165(ve t)-.275 H
2.75(ot).165 G(he origin of what-)-2.75 E -2.365 -.275(ev e)72 367.1 T
2.75(rd).275 G(estination dra)-2.75 E -.11(wa)-.165 G
(ble is speci\214ed in a graphics request.).11 E -1.21(Yo)72 384 S 2.75
(uc)1.21 G(an set the subwindo)-2.75 E(w-mode to)-.275 E F0
(ClipByChildr)3.666 E(en)-.198 E F1(or)3.666 E F0(IncludeInferiors)3.666
E F1 5.5(.F).916 G(or)-5.665 E F0(ClipByChil-)3.666 E(dr)72 397 Q(en)
-.198 E F1 2.75(,b).916 G(oth source and destination windo)-2.75 E
(ws are additionally clipped by all vie)-.275 E -.11(wa)-.275 G(ble).11
E F0(InputOut-)3.666 E(put)72 410 Q F1 2.75(children. F)3.666 F(or)-.165
E F0(IncludeInferiors)3.666 E F1 2.75(,n).916 G
(either source nor destination windo)-2.75 E 2.75(wi)-.275 G 2.75(sc)
-2.75 G(lipped by inferi-)-2.75 E 2.75(ors. This)72 423 R
(will result in including subwindo)2.75 E 2.75(wc)-.275 G
(ontents in the source and dra)-2.75 E(wing through subwin-)-.165 E(do)
72 436 Q 2.75(wb)-.275 G(oundaries of the destination.)-2.75 E
(The use of)5.5 E F0(IncludeInferiors)3.666 E F1(on a windo)3.666 E 2.75
(wo)-.275 G 2.75(fo)-2.75 G(ne depth with)-2.75 E
(mapped inferiors of dif)72 449 Q(fering depth is not ille)-.275 E -.055
(ga)-.165 G(l, b).055 E
(ut the semantics are unde\214ned by the core pro-)-.22 E(tocol.)72 462
Q(The \214ll-rule de\214nes what pix)72 478.9 Q(els are inside \(dra)
-.165 E(wn\) for paths gi)-.165 E -.165(ve)-.275 G 2.75(ni).165 G(n)
-2.75 E F0(XFillP)3.666 E(olygon)-.22 E F1(requests and)3.666 E
(can be set to)72 491.9 Q F0(Ev)3.666 E(enOddRule)-.11 E F1(or)3.666 E
F0 -.198(Wi)3.666 G(ndingRule).198 E F1 5.5(.F).916 G(or)-5.665 E F0(Ev)
3.666 E(enOddRule)-.11 E F1 2.75(,ap).916 G
(oint is inside if an in\214nite)-2.75 E
(ray with the point as origin crosses the path an odd number of times.)
72 504.9 Q -.165(Fo)5.5 G(r).165 E F0 -.198(Wi)3.666 G(ndingRule).198 E
F1 2.75(,ap).916 G(oint)-2.75 E(is inside if an in\214nite ray with the\
 point as origin crosses an unequal number of clockwise and)72 517.9 Q
(counterclockwise directed path se)72 530.9 Q 2.75(gments. A)-.165 F
(clockwise directed path se)2.75 E(gment is one that crosses)-.165 E
(the ray from left to right as observ)72 543.9 Q(ed from the point.)
-.165 E 2.75(Ac)5.5 G(ounterclockwise se)-2.75 E(gment is one that)-.165
E(crosses the ray from right to left as observ)72 556.9 Q
(ed from the point.)-.165 E(The case where a directed line se)5.5 E(g-)
-.165 E(ment is coincident with the ray is uninteresting because you ca\
n simply choose a dif)72 569.9 Q(ferent ray that)-.275 E
(is not coincident with a se)72 582.9 Q(gment.)-.165 E -.165(Fo)72 599.8
S 2.75(rb).165 G(oth)-2.75 E F0(Ev)3.666 E(enOddRule)-.11 E F1(and)3.666
E F0 -.198(Wi)3.666 G(ndingRule).198 E F1 2.75(,ap).916 G
(oint is in\214nitely small, and the path is an in\214nite-)-2.75 E
(ly thin line.)72 612.8 Q 2.75(Ap)5.5 G(ix)-2.75 E
(el is inside if the center point of the pix)-.165 E
(el is inside and the center point is not on)-.165 E(the boundary)72
625.8 Q 5.5(.I)-.715 G 2.75(ft)-5.5 G
(he center point is on the boundary)-2.75 E 2.75(,t)-.715 G(he pix)-2.75
E(el is inside if and only if the polygon)-.165 E
(interior is immediately to its right \(x increasing direction\).)72
638.8 Q(Pix)5.5 E(els with centers on a horizontal)-.165 E(edge are a s\
pecial case and are inside if and only if the polygon interior is immed\
iately belo)72 651.8 Q 2.75(w\()-.275 G(y)-2.75 E
(increasing direction\).)72 664.8 Q
(The arc-mode controls \214lling in the)72 681.7 Q F0(XFillAr)3.666 E
(cs)-.198 E F1(function and can be set to)3.666 E F0(Ar)3.666 E
(cPieSlice)-.198 E F1(or)3.666 E F0(Ar)3.666 E(c-)-.198 E(Chord)72 694.7
Q F1 5.5(.F).916 G(or)-5.665 E F0(Ar)3.666 E(cPieSlice)-.198 E F1 2.75
(,t).916 G(he arcs are pie-slice \214lled.)-2.75 E -.165(Fo)5.5 G(r).165
E F0(Ar)3.666 E(cChord)-.198 E F1 2.75(,t).916 G
(he arcs are chord \214lled.)-2.75 E(The graphics-e)72 711.6 Q
(xposure \215ag controls)-.165 E F0(GraphicsExpose)3.666 E F1 -2.365
-.275(ev e)3.666 H(nt generation for).275 E F0(XCopyAr)3.666 E(ea)-.198
E F1(and)3.666 E F0(XCopyPlane)72.916 724.6 Q F1(requests \(and an)3.666
E 2.75(ys)-.165 G(imilar requests de\214ned by e)-2.75 E(xtensions\).)
-.165 E F0(133)279.75 769 Q 0 Cg EP
%%Page: 134 139
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E/F1 11/Times-Roman@0 SF 1.76 -.88(To c)
72 85 T(reate a ne).88 E 2.75(wG)-.275 G 2.75(Ct)-2.75 G
(hat is usable on a gi)-2.75 E -.165(ve)-.275 G 2.75(ns).165 G
(creen with a depth of dra)-2.75 E -.11(wa)-.165 G(ble, use).11 E F0
(XCr)3.666 E(eateGC)-.198 E F1(.).916 E .44 LW 36 102.75 36 113.75 DL 36
100.75 36 111.75 DL 41.5 99 36 99 DL 43.5 99 38 99 DL 49 99 43.5 99 DL
(GC XCreateGC)72 114.9 Q(\().916 E/F2 11/Times-Italic@0 SF(display).916
E F1(,)A F2(d)2.75 E F1(,).916 E F2(valuemask)2.75 E F1(,).916 E F2
(values)2.75 E F1(\)).916 E(Display *)88.5 127.9 Q F2(display)A F1(;)
.916 E(Dra)88.5 140.9 Q -.11(wa)-.165 G(ble).11 E F2(d)2.75 E F1(;).916
E(unsigned long)88.5 153.9 Q F2(valuemask)2.75 E F1(;).916 E(XGCV)88.5
166.9 Q(alues *)-1.221 E F2(values).916 E F1(;).916 E F2(display)72
187.7 Q F1(Speci\214es the connection to the X serv)40.221 E(er)-.165 E
(.)-.605 E F2(d)72 204.6 Q F1(Speci\214es the dra)66.5 E -.11(wa)-.165 G
(ble.).11 E F2(valuemask)72 221.5 Q F1(Speci\214es which components in \
the GC are to be set using the information in the)25.569 E
(speci\214ed v)144 234.5 Q(alues structure.)-.275 E(This ar)5.5 E
(gument is the bitwise inclusi)-.198 E .33 -.165(ve O)-.275 H 2.75(Ro)
.165 G 2.75(fz)-2.75 G(ero or)-2.75 E(more of the v)144 247.5 Q
(alid GC component mask bits.)-.275 E F2(values)72 264.4 Q F1
(Speci\214es an)43.895 E 2.75(yv)-.165 G(alues as speci\214ed by the v)
-3.025 E(aluemask.)-.275 E 36 260.05 36 271.05 DL 36 258.05 36 269.05 DL
41.5 269.3 36 269.3 DL 43.5 269.3 38 269.3 DL 49 269.3 43.5 269.3 DL
(The)72 294.3 Q F0(XCr)3.666 E(eateGC)-.198 E F1
(function creates a graphics conte)3.666 E(xt and returns a GC.)-.165 E
(The GC can be used with)5.5 E(an)72 307.3 Q 2.75(yd)-.165 G
(estination dra)-2.75 E -.11(wa)-.165 G(ble ha).11 E
(ving the same root and depth as the speci\214ed dra)-.22 E -.11(wa)
-.165 G 2.75(ble. Use).11 F(with)2.75 E(other dra)72 320.3 Q -.11(wa)
-.165 G(bles results in a).11 E F0(BadMatch)3.666 E F1(error)3.666 E(.)
-.605 E F0(XCr)72.916 337.2 Q(eateGC)-.198 E F1(can generate)3.666 E F0
(BadAlloc)3.666 E F1(,).916 E F0(BadDrawable)3.666 E F1(,).916 E F0
(BadF)3.666 E(ont)-.275 E F1(,).916 E F0(BadMatch)3.666 E F1(,).916 E F0
(BadPixmap)3.666 E F1 2.75(,a).916 G(nd)-2.75 E F0(BadV)72.916 350.2 Q
(alue)-1.012 E F1(errors.)3.666 E 1.76 -.88(To c)72 380.1 T(op).88 E
2.75(yc)-.11 G(omponents from a source GC to a destination GC, use)-2.75
E F0(XCopyGC)3.666 E F1(.).916 E 36 397.85 36 408.85 DL 36 395.85 36
406.85 DL 41.5 394.1 36 394.1 DL 43.5 394.1 38 394.1 DL 49 394.1 43.5
394.1 DL(XCop)72 410 Q -1.834(yGC \()-.11 F F2(display).916 E F1(,)A F2
(sr)2.75 E(c)-.407 E F1(,).916 E F2(valuemask)2.75 E F1(,).916 E F2
(dest)2.75 E F1(\)).916 E(Display *)88.5 423 Q F2(display)A F1(;).916 E
(GC)88.5 436 Q F2(sr)2.75 E(c)-.407 E F1(,).916 E F2(dest)2.75 E F1(;)
.916 E(unsigned long)88.5 449 Q F2(valuemask)2.75 E F1(;).916 E F2
(display)72 469.8 Q F1(Speci\214es the connection to the X serv)40.221 E
(er)-.165 E(.)-.605 E F2(sr)72 486.7 Q(c)-.407 E F1
(Speci\214es the components of the source GC.)58.965 E F2(valuemask)72
503.6 Q F1(Speci\214es which components in the GC are to be copied to t\
he destination GC.)25.569 E(This ar)144 516.6 Q
(gument is the bitwise inclusi)-.198 E .33 -.165(ve O)-.275 H 2.75(Ro)
.165 G 2.75(fz)-2.75 G(ero or more of the v)-2.75 E(alid GC com-)-.275 E
(ponent mask bits.)144 529.6 Q F2(dest)72 546.5 Q F1
(Speci\214es the destination GC.)54.279 E 36 542.15 36 553.15 DL 36
540.15 36 551.15 DL 41.5 551.4 36 551.4 DL 43.5 551.4 38 551.4 DL 49
551.4 43.5 551.4 DL(The)72 576.4 Q F0(XCopyGC)3.666 E F1(function copie\
s the speci\214ed components from the source GC to the destination)3.666
E 2.75(GC. The)72 589.4 R(source and destination GCs must ha)2.75 E .33
-.165(ve t)-.22 H(he same root and depth, or a).165 E F0(BadMatch)3.666
E F1(error)3.666 E 2.75(results. The)72 602.4 R -.275(va)2.75 G
(luemask speci\214es which component to cop).275 E 1.43 -.715(y, a)-.11
H 2.75(sf).715 G(or)-2.75 E F0(XCr)3.666 E(eateGC)-.198 E F1(.).916 E F0
(XCopyGC)72.916 619.3 Q F1(can generate)3.666 E F0(BadAlloc)3.666 E F1
(,).916 E F0(BadGC)3.666 E F1 2.75(,a).916 G(nd)-2.75 E F0(BadMatch)
3.666 E F1(errors.)3.666 E 1.76 -.88(To c)72 649.2 T
(hange the components in a gi).88 E -.165(ve)-.275 G 2.75(nG).165 G
(C, use)-2.75 E F0(XChangeGC)3.666 E F1(.).916 E F0(134)279.75 769 Q 0
Cg EP
%%Page: 135 140
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E .44 LW 36 76.75 36 87.75 DL 36 74.75
36 85.75 DL 41.5 73 36 73 DL 43.5 73 38 73 DL 49 73 43.5 73 DL/F1 11
/Times-Roman@0 SF -1.834(XChangeGC \()72 88.9 R/F2 11/Times-Italic@0 SF
(display).916 E F1(,)A F2(gc)2.75 E F1(,).916 E F2(valuemask)2.75 E F1
(,).916 E F2(values)2.75 E F1(\)).916 E(Display *)88.5 101.9 Q F2
(display)A F1(;).916 E(GC)88.5 114.9 Q F2(gc)2.75 E F1(;).916 E
(unsigned long)88.5 127.9 Q F2(valuemask)2.75 E F1(;).916 E(XGCV)88.5
140.9 Q(alues *)-1.221 E F2(values).916 E F1(;).916 E F2(display)72
161.7 Q F1(Speci\214es the connection to the X serv)40.221 E(er)-.165 E
(.)-.605 E F2(gc)72 178.6 Q F1(Speci\214es the GC.)61.616 E F2
(valuemask)72 195.5 Q F1(Speci\214es which components in the GC are to \
be changed using information in the)25.569 E(speci\214ed v)144 208.5 Q
(alues structure.)-.275 E(This ar)5.5 E(gument is the bitwise inclusi)
-.198 E .33 -.165(ve O)-.275 H 2.75(Ro).165 G 2.75(fz)-2.75 G(ero or)
-2.75 E(more of the v)144 221.5 Q(alid GC component mask bits.)-.275 E
F2(values)72 238.4 Q F1(Speci\214es an)43.895 E 2.75(yv)-.165 G
(alues as speci\214ed by the v)-3.025 E(aluemask.)-.275 E 36 234.05 36
245.05 DL 36 232.05 36 243.05 DL 41.5 243.3 36 243.3 DL 43.5 243.3 38
243.3 DL 49 243.3 43.5 243.3 DL(The)72 268.3 Q F0(XChangeGC)3.666 E F1
(function changes the components speci\214ed by v)3.666 E
(aluemask for the speci\214ed GC.)-.275 E(The v)72 281.3 Q(alues ar)
-.275 E(gument contains the v)-.198 E(alues to be set.)-.275 E(The v)5.5
E(alues and restrictions are the same as for)-.275 E F0(XCr)72.916 294.3
Q(eateGC)-.198 E F1 5.5(.C).916 G(hanging the clip-mask o)-5.5 E -.165
(ve)-.165 G(rrides an).165 E 2.75(yp)-.165 G(re)-2.75 E(vious)-.275 E F0
(XSetClipRectangles)3.666 E F1(request on)3.666 E(the conte)72 307.3 Q
2.75(xt. Changing)-.165 F(the dash-of)2.75 E(fset or dash-list o)-.275 E
-.165(ve)-.165 G(rrides an).165 E 2.75(yp)-.165 G(re)-2.75 E(vious)-.275
E F0(XSetDashes)3.666 E F1(request on)3.666 E(the conte)72 320.3 Q 2.75
(xt. The)-.165 F(order in which components are v)2.75 E
(eri\214ed and altered is serv)-.165 E(er dependent.)-.165 E(If an)5.5 E
(error is generated, a subset of the components may ha)72 333.3 Q .33
-.165(ve b)-.22 H(een altered.).165 E F0(XChangeGC)72.916 350.2 Q F1
(can generate)3.666 E F0(BadAlloc)3.666 E F1(,).916 E F0(BadF)3.666 E
(ont)-.275 E F1(,).916 E F0(BadGC)3.666 E F1(,).916 E F0(BadMatch)3.666
E F1(,).916 E F0(BadPixmap)3.666 E F1 2.75(,a).916 G(nd)-2.75 E F0(Bad-)
3.666 E -1.012(Va)72 363.2 S(lue)1.012 E F1(errors.)3.666 E 1.76 -.88
(To o)72 393.1 T(btain components of a gi).88 E -.165(ve)-.275 G 2.75
(nG).165 G(C, use)-2.75 E F0(XGetGCV)3.666 E(alues)-1.012 E F1(.).916 E
36 410.85 36 421.85 DL 36 408.85 36 419.85 DL 41.5 407.1 36 407.1 DL
43.5 407.1 38 407.1 DL 49 407.1 43.5 407.1 DL(Status XGetGCV)72 423 Q
-1.834(alues \()-1.221 F F2(display).916 E F1(,)A F2(gc)2.75 E F1(,)A F2
(valuemask)2.75 E F1(,)A F2(values_r)2.75 E(eturn)-.407 E F1(\)).916 E
(Display *)88.5 436 Q F2(display)A F1(;).916 E(GC)88.5 449 Q F2(gc)2.75
E F1(;).916 E(unsigned long)88.5 462 Q F2(valuemask)2.75 E F1(;).916 E
(XGCV)88.5 475 Q(alues *)-1.221 E F2(values_r)A(eturn)-.407 E F1(;).916
E F2(display)72 495.8 Q F1(Speci\214es the connection to the X serv)
40.221 E(er)-.165 E(.)-.605 E F2(gc)72 512.7 Q F1(Speci\214es the GC.)
61.616 E F2(valuemask)72 529.6 Q F1
(Speci\214es which components in the GC are to be returned in the v)
25.569 E(alues_return)-.275 E(ar)144 542.6 Q 2.75(gument. This)-.198 F
(ar)2.75 E(gument is the bitwise inclusi)-.198 E .33 -.165(ve O)-.275 H
2.75(Ro).165 G 2.75(fz)-2.75 G(ero or more of the v)-2.75 E(alid)-.275 E
(GC component mask bits.)144 555.6 Q F2(values_r)72 572.5 Q(eturn)-.407
E F1(Returns the GC v)11.302 E(alues in the speci\214ed)-.275 E F0(XGCV)
3.666 E(alues)-1.012 E F1(structure.)3.666 E 36 568.15 36 579.15 DL 36
566.15 36 577.15 DL 41.5 577.4 36 577.4 DL 43.5 577.4 38 577.4 DL 49
577.4 43.5 577.4 DL(The)72 602.4 Q F0(XGetGCV)3.666 E(alues)-1.012 E F1
(function returns the components speci\214ed by v)3.666 E
(aluemask for the speci\214ed)-.275 E 2.75(GC. If)72 615.4 R(the v)2.75
E(aluemask contains a v)-.275 E(alid set of GC mask bits \()-.275 E F0
(GCFunction).916 E F1(,).916 E F0(GCPlaneMask)3.666 E F1(,).916 E F0
(GCF)72.916 628.4 Q(or)-.275 E(egr)-.198 E(ound)-.198 E F1(,).916 E F0
(GCBackgr)3.666 E(ound)-.198 E F1(,).916 E F0(GCLineW)3.666 E(idth)-.198
E F1(,).916 E F0(GCLineStyle)3.666 E F1(,).916 E F0(GCCapStyle)3.666 E
F1(,).916 E F0(GCJ)3.666 E(oin-)-.165 E(Style)72 641.4 Q F1(,).916 E F0
(GCFillStyle)3.666 E F1(,).916 E F0(GCFillRule)3.666 E F1(,).916 E F0
(GCT)3.666 E(ile)-.198 E F1(,).916 E F0(GCStipple)3.666 E F1(,).916 E F0
(GCT)3.666 E(ileStipXOrigin)-.198 E F1(,).916 E F0(GCT)3.666 E(ileStipY)
-.198 E(O-)-.385 E(rigin)72 654.4 Q F1(,).916 E F0(GCF)3.666 E(ont)-.275
E F1(,).916 E F0(GCSubwindo)3.666 E(wMode)-.11 E F1(,).916 E F0
(GCGraphicsExposur)3.666 E(es)-.198 E F1(,).916 E F0(GCClipXOrigin)3.666
E F1(,).916 E F0(GCCLipY)3.666 E(-)-1.012 E(Origin)72 667.4 Q F1(,).916
E F0(GCDashOffset)3.666 E F1 2.75(,o).916 G(r)-2.75 E F0(GCAr)3.666 E
(cMode)-.198 E F1 2.75(\)a).916 G(nd no error occurs,)-2.75 E F0
(XGetGCV)3.666 E(alues)-1.012 E F1(sets the)3.666 E
(requested components in v)72 680.4 Q
(alues_return and returns a nonzero status.)-.275 E
(Otherwise, it returns a zero)5.5 E 2.75(status. Note)72 693.4 R
(that the clip-mask and dash-list \(represented by the)2.75 E F0
(GCClipMask)3.666 E F1(and)3.666 E F0(GCDashList)3.666 E F1
(bits, respecti)72 706.4 Q -.165(ve)-.275 G(ly).165 E 2.75(,i)-.715 G
2.75(nt)-2.75 G(he v)-2.75 E(aluemask\) cannot be requested.)-.275 E
(Also note that an in)5.5 E -.275(va)-.44 G(lid resource ID).275 E(\(wi\
th one or more of the three most signi\214cant bits set to 1\) will be \
returned for)72 719.4 Q F0(GCF)3.666 E(ont)-.275 E F1(,).916 E F0(GCT)
72.916 732.4 Q(ile)-.198 E F1 2.75(,a).916 G(nd)-2.75 E F0(GCStipple)
3.666 E F1(if the component has ne)3.666 E -.165(ve)-.275 G 2.75(rb).165
G(een e)-2.75 E(xplicitly set by the client.)-.165 E F0(135)279.75 769 Q
0 Cg EP
%%Page: 136 141
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E/F1 11/Times-Roman@0 SF 1.76 -.88(To f)
72 85 T(ree a gi).88 E -.165(ve)-.275 G 2.75(nG).165 G(C, use)-2.75 E F0
(XFr)3.666 E(eeGC)-.198 E F1(.).916 E .44 LW 36 102.75 36 113.75 DL 36
100.75 36 111.75 DL 41.5 99 36 99 DL 43.5 99 38 99 DL 49 99 43.5 99 DL
-1.834(XFreeGC \()72 114.9 R/F2 11/Times-Italic@0 SF(display).916 E F1
(,)A F2(gc)2.75 E F1(\)).916 E(Display *)88.5 127.9 Q F2(display)A F1(;)
.916 E(GC)88.5 140.9 Q F2(gc)2.75 E F1(;).916 E F2(display)72 161.7 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2(gc)72 178.6 Q F1(Speci\214es the GC.)61.616 E 36 174.25 36 185.25 DL
36 172.25 36 183.25 DL 41.5 183.5 36 183.5 DL 43.5 183.5 38 183.5 DL 49
183.5 43.5 183.5 DL(The)72 208.5 Q F0(XFr)3.666 E(eeGC)-.198 E F1
(function destro)3.666 E
(ys the speci\214ed GC as well as all the associated storage.)-.11 E F0
(XFr)72.916 225.4 Q(eeGC)-.198 E F1(can generate a)3.666 E F0(BadGC)
3.666 E F1(error)3.666 E(.)-.605 E 1.76 -.88(To o)72 255.3 T(btain the)
.88 E F0(GContext)3.666 E F1(resource ID for a gi)3.666 E -.165(ve)-.275
G 2.75(nG).165 G(C, use)-2.75 E F0(XGContextFr)3.666 E(omGC)-.198 E F1
(.).916 E 36 273.05 36 284.05 DL 36 271.05 36 282.05 DL 41.5 269.3 36
269.3 DL 43.5 269.3 38 269.3 DL 49 269.3 43.5 269.3 DL(GConte)72 285.2 Q
(xt XGConte)-.165 E -1.834(xtFromGC \()-.165 F F2(gc).916 E F1(\)).916 E
(GC)88.5 298.2 Q F2(gc)2.75 E F1(;).916 E F2(gc)72 319 Q F1
(Speci\214es the GC for which you w)61.616 E(ant the resource ID.)-.11 E
36 314.65 36 325.65 DL 36 312.65 36 323.65 DL 41.5 323.9 36 323.9 DL
43.5 323.9 38 323.9 DL 49 323.9 43.5 323.9 DL(Xlib usually defers sendi\
ng changes to the components of a GC to the serv)72 361.9 Q
(er until a graphics)-.165 E(function is actually called with that GC.)
72 374.9 Q(This permits batching of component changes into a sin-)5.5 E
(gle serv)72 387.9 Q(er request.)-.165 E(In some circumstances, ho)5.5 E
(we)-.275 E -.165(ve)-.275 G .88 -.44(r, i).165 H 2.75(tm).44 G
(ay be necessary for the client to e)-2.75 E(xplic-)-.165 E
(itly force sending the changes to the serv)72 400.9 Q(er)-.165 E 5.5
(.A)-.605 G 2.75(ne)-5.5 G(xample might be when a protocol e)-2.915 E
(xtension uses)-.165 E(the GC indirectly)72 413.9 Q 2.75(,i)-.715 G 2.75
(ns)-2.75 G(uch a w)-2.75 E(ay that the e)-.11 E(xtension interf)-.165 E
(ace cannot kno)-.11 E 2.75(ww)-.275 G(hat GC will be used.)-2.75 E 1.76
-.88(To f)72 426.9 T(orce sending GC component changes, use).88 E F0
(XFlushGC)3.666 E F1(.).916 E 36 444.65 36 455.65 DL 36 442.65 36 453.65
DL 41.5 440.9 36 440.9 DL 43.5 440.9 38 440.9 DL 49 440.9 43.5 440.9 DL
-.22(vo)72 456.8 S(id XFlushGC).22 E(\().916 E F2(display).916 E F1(,)A
F2(gc)2.75 E F1(\)).916 E(Display *)88.5 469.8 Q F2(display)A F1(;).916
E(GC)88.5 482.8 Q F2(gc)2.75 E F1(;).916 E F2(display)72 503.6 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2(gc)72 520.5 Q F1(Speci\214es the GC.)61.616 E 36 516.15 36 527.15 DL
36 514.15 36 525.15 DL 41.5 525.4 36 525.4 DL 43.5 525.4 38 525.4 DL 49
525.4 43.5 525.4 DL F0 2.75(7.2. Using)72 563.4 R(Graphics Context Con)
2.75 E -.11(ve)-.44 G(nience Routines).11 E F1
(This section discusses ho)72 580.3 Q 2.75(wt)-.275 G 2.75(os)-2.75 G
(et the:)-2.75 E 23.65<8346>72 597.2 S(ore)-23.815 E
(ground, background, plane mask, or function components)-.165 E 23.65
<834c>72 614.1 S(ine attrib)-23.65 E(utes and dashes components)-.22 E
23.65<8346>72 631 S(ill style and \214ll rule components)-23.65 E 23.65
<8346>72 647.9 S(ill tile and stipple components)-23.65 E 23.65<8346>72
664.8 S(ont component)-23.815 E 23.65<8343>72 681.7 S(lip re)-23.65 E
(gion component)-.165 E 23.65<8341>72 698.6 S(rc mode, subwindo)-23.65 E
2.75(wm)-.275 G(ode, and graphics e)-2.75 E(xposure components)-.165 E
F0(136)279.75 769 Q 0 Cg EP
%%Page: 137 142
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E 2.75(7.2.1. Setting)72 85 R(the F)2.75
E(or)-.275 E(egr)-.198 E(ound, Backgr)-.198 E
(ound, Function, or Plane Mask)-.198 E/F1 11/Times-Roman@0 SF 1.76 -.88
(To s)72 101.9 T(et the fore).88 E
(ground, background, plane mask, and function components for a gi)-.165
E -.165(ve)-.275 G 2.75(nG).165 G(C, use)-2.75 E F0(XSetState)72.916
114.9 Q F1(.).916 E .44 LW 36 132.65 36 143.65 DL 36 130.65 36 141.65 DL
41.5 128.9 36 128.9 DL 43.5 128.9 38 128.9 DL 49 128.9 43.5 128.9 DL
-1.834(XSetState \()72 144.8 R/F2 11/Times-Italic@0 SF(display).916 E F1
(,)A F2(gc)2.75 E F1(,).916 E F2(for)2.75 E -.44(eg)-.407 G -.495(ro).44
G(und).495 E F1(,).916 E F2(bac)2.75 E(kgr)-.22 E(ound)-.495 E F1(,).916
E F2(function)2.75 E F1(,).916 E F2(plane_mask)2.75 E F1(\)).916 E
(Display *)88.5 157.8 Q F2(display)A F1(;).916 E(GC)88.5 170.8 Q F2(gc)
2.75 E F1(;).916 E(unsigned long)88.5 183.8 Q F2(for)2.75 E -.44(eg)
-.407 G -.495(ro).44 G(und).495 E F1(,).916 E F2(bac)2.75 E(kgr)-.22 E
(ound)-.495 E F1(;).916 E(int)88.5 196.8 Q F2(function)2.75 E F1(;).916
E(unsigned long)88.5 209.8 Q F2(plane_mask)2.75 E F1(;).916 E F2
(display)72 230.6 Q F1(Speci\214es the connection to the X serv)40.221 E
(er)-.165 E(.)-.605 E F2(gc)72 247.5 Q F1(Speci\214es the GC.)61.616 E
F2(for)72 264.4 Q -.44(eg)-.407 G -.495(ro).44 G(und).495 E F1
(Speci\214es the fore)23.842 E(ground you w)-.165 E
(ant to set for the speci\214ed GC.)-.11 E F2(bac)72 281.3 Q(kgr)-.22 E
(ound)-.495 E F1(Speci\214es the background you w)20.168 E
(ant to set for the speci\214ed GC.)-.11 E F2(function)72 298.2 Q F1
(Speci\214es the function you w)35.942 E
(ant to set for the speci\214ed GC.)-.11 E F2(plane_mask)72 315.1 Q F1
(Speci\214es the plane mask.)19.453 E 36 310.75 36 321.75 DL 36 308.75
36 319.75 DL 41.5 320 36 320 DL 43.5 320 38 320 DL 49 320 43.5 320 DL F0
(XSetState)72.916 345 Q F1(can generate)3.666 E F0(BadAlloc)3.666 E F1
(,).916 E F0(BadGC)3.666 E F1 2.75(,a).916 G(nd)-2.75 E F0(BadV)3.666 E
(alue)-1.012 E F1(errors.)3.666 E 1.76 -.88(To s)72 374.9 T(et the fore)
.88 E(ground of a gi)-.165 E -.165(ve)-.275 G 2.75(nG).165 G(C, use)
-2.75 E F0(XSetF)3.666 E(or)-.275 E(egr)-.198 E(ound)-.198 E F1(.).916 E
36 392.65 36 403.65 DL 36 390.65 36 401.65 DL 41.5 388.9 36 388.9 DL
43.5 388.9 38 388.9 DL 49 388.9 43.5 388.9 DL(XSetF)72 404.8 Q(ore)-.165
E -1.834(ground \()-.165 F F2(display).916 E F1(,)A F2(gc)2.75 E F1(,)
.916 E F2(for)2.75 E -.44(eg)-.407 G -.495(ro).44 G(und).495 E F1(\))
.916 E(Display *)88.5 417.8 Q F2(display)A F1(;).916 E(GC)88.5 430.8 Q
F2(gc)2.75 E F1(;).916 E(unsigned long)88.5 443.8 Q F2(for)2.75 E -.44
(eg)-.407 G -.495(ro).44 G(und).495 E F1(;).916 E F2(display)72 464.6 Q
F1(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605
E F2(gc)72 481.5 Q F1(Speci\214es the GC.)61.616 E F2(for)72 498.4 Q
-.44(eg)-.407 G -.495(ro).44 G(und).495 E F1(Speci\214es the fore)23.842
E(ground you w)-.165 E(ant to set for the speci\214ed GC.)-.11 E 36
494.05 36 505.05 DL 36 492.05 36 503.05 DL 41.5 503.3 36 503.3 DL 43.5
503.3 38 503.3 DL 49 503.3 43.5 503.3 DL F0(XSetF)72.916 528.3 Q(or)
-.275 E(egr)-.198 E(ound)-.198 E F1(can generate)3.666 E F0(BadAlloc)
3.666 E F1(and)3.666 E F0(BadGC)3.666 E F1(errors.)3.666 E 1.76 -.88
(To s)72 558.2 T(et the background of a gi).88 E -.165(ve)-.275 G 2.75
(nG).165 G(C, use)-2.75 E F0(XSetBackgr)3.666 E(ound)-.198 E F1(.).916 E
36 575.95 36 586.95 DL 36 573.95 36 584.95 DL 41.5 572.2 36 572.2 DL
43.5 572.2 38 572.2 DL 49 572.2 43.5 572.2 DL -1.834(XSetBackground \()
72 588.1 R F2(display).916 E F1(,)A F2(gc)2.75 E F1(,).916 E F2(bac)2.75
E(kgr)-.22 E(ound)-.495 E F1(\)).916 E(Display *)88.5 601.1 Q F2
(display)A F1(;).916 E(GC)88.5 614.1 Q F2(gc)2.75 E F1(;).916 E
(unsigned long)88.5 627.1 Q F2(bac)2.75 E(kgr)-.22 E(ound)-.495 E F1(;)
.916 E F2(display)72 647.9 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2(gc)72 664.8 Q F1(Speci\214es the GC.)61.616 E F2(bac)72 681.7 Q(kgr)
-.22 E(ound)-.495 E F1(Speci\214es the background you w)20.168 E
(ant to set for the speci\214ed GC.)-.11 E 36 677.35 36 688.35 DL 36
675.35 36 686.35 DL 41.5 686.6 36 686.6 DL 43.5 686.6 38 686.6 DL 49
686.6 43.5 686.6 DL F0(XSetBackgr)72.916 711.6 Q(ound)-.198 E F1
(can generate)3.666 E F0(BadAlloc)3.666 E F1(and)3.666 E F0(BadGC)3.666
E F1(errors.)3.666 E F0(137)279.75 769 Q 0 Cg EP
%%Page: 138 143
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E/F1 11/Times-Roman@0 SF 1.76 -.88(To s)
72 85 T(et the display function in a gi).88 E -.165(ve)-.275 G 2.75(nG)
.165 G(C, use)-2.75 E F0(XSetFunction)3.666 E F1(.).916 E .44 LW 36
102.75 36 113.75 DL 36 100.75 36 111.75 DL 41.5 99 36 99 DL 43.5 99 38
99 DL 49 99 43.5 99 DL -1.834(XSetFunction \()72 114.9 R/F2 11
/Times-Italic@0 SF(display).916 E F1(,)A F2(gc)2.75 E F1(,).916 E F2
(function)2.75 E F1(\)).916 E(Display *)88.5 127.9 Q F2(display)A F1(;)
.916 E(GC)88.5 140.9 Q F2(gc)2.75 E F1(;).916 E(int)88.5 153.9 Q F2
(function)2.75 E F1(;).916 E F2(display)72 174.7 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2(gc)72 191.6 Q F1(Speci\214es the GC.)61.616 E F2(function)72 208.5 Q
F1(Speci\214es the function you w)35.942 E
(ant to set for the speci\214ed GC.)-.11 E 36 204.15 36 215.15 DL 36
202.15 36 213.15 DL 41.5 213.4 36 213.4 DL 43.5 213.4 38 213.4 DL 49
213.4 43.5 213.4 DL F0(XSetFunction)72.916 238.4 Q F1(can generate)3.666
E F0(BadAlloc)3.666 E F1(,).916 E F0(BadGC)3.666 E F1 2.75(,a).916 G(nd)
-2.75 E F0(BadV)3.666 E(alue)-1.012 E F1(errors.)3.666 E 1.76 -.88(To s)
72 268.3 T(et the plane mask of a gi).88 E -.165(ve)-.275 G 2.75(nG).165
G(C, use)-2.75 E F0(XSetPlaneMask)3.666 E F1(.).916 E 36 286.05 36
297.05 DL 36 284.05 36 295.05 DL 41.5 282.3 36 282.3 DL 43.5 282.3 38
282.3 DL 49 282.3 43.5 282.3 DL -1.834(XSetPlaneMask \()72 298.2 R F2
(display).916 E F1(,)A F2(gc)2.75 E F1(,).916 E F2(plane_mask)2.75 E F1
(\)).916 E(Display *)88.5 311.2 Q F2(display)A F1(;).916 E(GC)88.5 324.2
Q F2(gc)2.75 E F1(;).916 E(unsigned long)88.5 337.2 Q F2(plane_mask)2.75
E F1(;).916 E F2(display)72 358 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2(gc)72 374.9 Q F1(Speci\214es the GC.)61.616 E F2(plane_mask)72 391.8
Q F1(Speci\214es the plane mask.)19.453 E 36 387.45 36 398.45 DL 36
385.45 36 396.45 DL 41.5 396.7 36 396.7 DL 43.5 396.7 38 396.7 DL 49
396.7 43.5 396.7 DL F0(XSetPlaneMask)72.916 421.7 Q F1(can generate)
3.666 E F0(BadAlloc)3.666 E F1(and)3.666 E F0(BadGC)3.666 E F1(errors.)
3.666 E F0 2.75(7.2.2. Setting)72 447.7 R(the Line Attrib)2.75 E
(utes and Dashes)-.22 E F1 1.76 -.88(To s)72 464.6 T(et the line dra).88
E(wing components of a gi)-.165 E -.165(ve)-.275 G 2.75(nG).165 G
(C, use)-2.75 E F0(XSetLineAttrib)3.666 E(utes)-.22 E F1(.).916 E F0
(138)279.75 769 Q 0 Cg EP
%%Page: 139 144
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E .44 LW 36 76.75 36 87.75 DL 36 74.75
36 85.75 DL 41.5 73 36 73 DL 43.5 73 38 73 DL 49 73 43.5 73 DL/F1 11
/Times-Roman@0 SF(XSetLineAttrib)72 88.9 Q -1.834(utes \()-.22 F/F2 11
/Times-Italic@0 SF(display).916 E F1(,)A F2(gc)2.75 E F1(,).916 E F2
(line_width)2.75 E F1(,).916 E F2(line_style)2.75 E F1(,).916 E F2
(cap_style)2.75 E F1(,).916 E F2(join_style)2.75 E F1(\)).916 E
(Display *)88.5 101.9 Q F2(display)A F1(;).916 E(GC)88.5 114.9 Q F2(gc)
2.75 E F1(;).916 E(unsigned int)88.5 127.9 Q F2(line_width)2.75 E F1(;)
.916 E(int)88.5 140.9 Q F2(line_style)2.75 E F1(;).916 E(int)88.5 153.9
Q F2(cap_style)2.75 E F1(;).916 E(int)88.5 166.9 Q F2(join_style)2.75 E
F1(;).916 E F2(display)72 187.7 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2(gc)72 204.6 Q F1(Speci\214es the GC.)61.616 E F2(line_width)72 221.5
Q F1(Speci\214es the line-width you w)25.547 E
(ant to set for the speci\214ed GC.)-.11 E F2(line_style)72 238.4 Q F1
(Speci\214es the line-style you w)29.837 E
(ant to set for the speci\214ed GC.)-.11 E -1.21(Yo)5.5 G 2.75(uc)1.21 G
(an pass)-2.75 E F0(LineSolid)144.916 251.4 Q F1(,).916 E F0
(LineOnOffDash)3.666 E F1 2.75(,o).916 G(r)-2.75 E F0(LineDoubleDash)
3.666 E F1(.).916 E F2(cap_style)72 268.3 Q F1
(Speci\214es the line-style and cap-style you w)30.453 E
(ant to set for the speci\214ed GC.)-.11 E -1.21(Yo)5.5 G(u)1.21 E
(can pass)144 281.3 Q F0(CapNotLast)3.666 E F1(,).916 E F0(CapButt)3.666
E F1(,).916 E F0(CapRound)3.666 E F1 2.75(,o).916 G(r)-2.75 E F0(CapPr)
3.666 E(ojecting)-.198 E F1(.).916 E F2(join_style)72 298.2 Q F1
(Speci\214es the line join-style you w)29.221 E
(ant to set for the speci\214ed GC.)-.11 E -1.21(Yo)5.5 G 2.75(uc)1.21 G
(an pass)-2.75 E F0 -.165(Jo)144.916 311.2 S(inMiter).165 E F1(,).916 E
F0 -.165(Jo)3.666 G(inRound).165 E F1 2.75(,o).916 G(r)-2.75 E F0 -.165
(Jo)3.666 G(inBe).165 E -.11(ve)-.165 G(l).11 E F1(.).916 E 36 306.85 36
317.85 DL 36 304.85 36 315.85 DL 41.5 316.1 36 316.1 DL 43.5 316.1 38
316.1 DL 49 316.1 43.5 316.1 DL F0(XSetLineAttrib)72.916 341.1 Q(utes)
-.22 E F1(can generate)3.666 E F0(BadAlloc)3.666 E F1(,).916 E F0(BadGC)
3.666 E F1 2.75(,a).916 G(nd)-2.75 E F0(BadV)3.666 E(alue)-1.012 E F1
(errors.)3.666 E 1.76 -.88(To s)72 371 T(et the dash-of).88 E
(fset and dash-list for dashed line styles of a gi)-.275 E -.165(ve)
-.275 G 2.75(nG).165 G(C, use)-2.75 E F0(XSetDashes)3.666 E F1(.).916 E
36 388.75 36 399.75 DL 36 386.75 36 397.75 DL 41.5 385 36 385 DL 43.5
385 38 385 DL 49 385 43.5 385 DL -1.834(XSetDashes \()72 400.9 R F2
(display).916 E F1(,)A F2(gc)2.75 E F1(,).916 E F2(dash_of)2.75 E(fset)
-.198 E F1(,).916 E F2(dash_list)2.75 E F1(,).916 E F2(n)2.75 E F1(\))
.916 E(Display *)94 413.9 Q F2(display)A F1(;).916 E(GC)94 426.9 Q F2
(gc)2.75 E F1(;).916 E(int)94 439.9 Q F2(dash_of)2.75 E(fset)-.198 E F1
(;).916 E(char)94 452.9 Q F2(dash_list)2.75 E F1 -1.834([] ;)B(int)94
465.9 Q F2(n)2.75 E F1(;).916 E F2(display)72 486.7 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2(gc)72 503.6 Q F1(Speci\214es the GC.)61.616 E F2(dash_of)72 520.5 Q
(fset)-.198 E F1
(Speci\214es the phase of the pattern for the dashed line-style you w)
22.082 E(ant to set for the)-.11 E(speci\214ed GC.)144 533.5 Q F2
(dash_list)72 550.4 Q F1
(Speci\214es the dash-list for the dashed line-style you w)32.268 E
(ant to set for the speci\214ed)-.11 E(GC.)144 563.4 Q F2(n)72 580.3 Q
F1(Speci\214es the number of elements in dash_list.)66.5 E 36 575.95 36
586.95 DL 36 573.95 36 584.95 DL 41.5 585.2 36 585.2 DL 43.5 585.2 38
585.2 DL 49 585.2 43.5 585.2 DL(The)72 610.2 Q F0(XSetDashes)3.666 E F1
(function sets the dash-of)3.666 E(fset and dash-list attrib)-.275 E
(utes for dashed line styles in the)-.22 E(speci\214ed GC.)72 623.2 Q
(There must be at least one element in the speci\214ed dash_list, or a)
5.5 E F0(BadV)3.666 E(alue)-1.012 E F1(error)3.666 E 2.75(results. The)
72 636.2 R(initial and alternating elements \(second, fourth, and so on\
\) of the dash_list are the)2.75 E -2.365 -.275(ev e)72 649.2 T 2.75(nd)
.275 G(ashes, and the others are the odd dashes.)-2.75 E
(Each element speci\214es a dash length in pix)5.5 E(els.)-.165 E
(All of the elements must be nonzero, or a)72 662.2 Q F0(BadV)3.666 E
(alue)-1.012 E F1(error results.)3.666 E(Specifying an odd-length list)
5.5 E(is equi)72 675.2 Q -.275(va)-.275 G(lent to specifying the same l\
ist concatenated with itself to produce an e).275 E -.165(ve)-.275 G
(n-length list.).165 E(The dash-of)72 692.1 Q
(fset de\214nes the phase of the pattern, specifying ho)-.275 E 2.75(wm)
-.275 G(an)-2.75 E 2.75(yp)-.165 G(ix)-2.75 E
(els into the dash-list the)-.165 E(pattern should actually be)72 705.1
Q(gin in an)-.165 E 2.75(ys)-.165 G(ingle graphics request.)-2.75 E
(Dashing is continuous through path)5.5 E
(elements combined with a join-style b)72 718.1 Q
(ut is reset to the dash-of)-.22 E(fset between each sequence of)-.275 E
(joined lines.)72 731.1 Q F0(139)279.75 769 Q 0 Cg EP
%%Page: 140 145
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E/F1 11/Times-Roman@0 SF(The unit of me\
asure for dashes is the same for the ordinary coordinate system.)72 85 Q
(Ideally)5.5 E 2.75(,ad)-.715 G(ash)-2.75 E
(length is measured along the slope of the line, b)72 98 Q
(ut implementations are only required to match)-.22 E
(this ideal for horizontal and v)72 111 Q(ertical lines.)-.165 E -.165
(Fa)5.5 G(iling the ideal semantics, it is suggested that the).165 E
(length be measured along the major axis of the line.)72 124 Q
(The major axis is de\214ned as the x axis for)5.5 E(lines dra)72 137 Q
(wn at an angle of between \25545 and +45 de)-.165 E
(grees or between 135 and 225 de)-.165 E(grees from)-.165 E(the x axis.)
72 150 Q -.165(Fo)5.5 G 2.75(ra).165 G
(ll other lines, the major axis is the y axis.)-2.75 E F0(XSetDashes)
72.916 166.9 Q F1(can generate)3.666 E F0(BadAlloc)3.666 E F1(,).916 E
F0(BadGC)3.666 E F1 2.75(,a).916 G(nd)-2.75 E F0(BadV)3.666 E(alue)
-1.012 E F1(errors.)3.666 E F0 2.75(7.2.3. Setting)72 192.9 R
(the Fill Style and Fill Rule)2.75 E F1 1.76 -.88(To s)72 209.8 T
(et the \214ll-style of a gi).88 E -.165(ve)-.275 G 2.75(nG).165 G
(C, use)-2.75 E F0(XSetFillStyle)3.666 E F1(.).916 E .44 LW 36 227.55 36
238.55 DL 36 225.55 36 236.55 DL 41.5 223.8 36 223.8 DL 43.5 223.8 38
223.8 DL 49 223.8 43.5 223.8 DL -1.834(XSetFillStyle \()72 239.7 R/F2 11
/Times-Italic@0 SF(display).916 E F1(,)A F2(gc)2.75 E F1(,).916 E F2
(\214ll_style)2.75 E F1(\)).916 E(Display *)88.5 252.7 Q F2(display)A F1
(;).916 E(GC)88.5 265.7 Q F2(gc)2.75 E F1(;).916 E(int)88.5 278.7 Q F2
(\214ll_style)2.75 E F1(;).916 E F2(display)72 299.5 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2(gc)72 316.4 Q F1(Speci\214es the GC.)61.616 E F2(\214ll_style)72
333.3 Q F1(Speci\214es the \214ll-style you w)34.721 E
(ant to set for the speci\214ed GC.)-.11 E -1.21(Yo)5.5 G 2.75(uc)1.21 G
(an pass)-2.75 E F0(Fill-)3.666 E(Solid)144 346.3 Q F1(,).916 E F0
(FillT)3.666 E(iled)-.198 E F1(,).916 E F0(FillStippled)3.666 E F1 2.75
(,o).916 G(r)-2.75 E F0(FillOpaqueStippled)3.666 E F1(.).916 E 36 341.95
36 352.95 DL 36 339.95 36 350.95 DL 41.5 351.2 36 351.2 DL 43.5 351.2 38
351.2 DL 49 351.2 43.5 351.2 DL F0(XSetFillStyle)72.916 376.2 Q F1
(can generate)3.666 E F0(BadAlloc)3.666 E F1(,).916 E F0(BadGC)3.666 E
F1 2.75(,a).916 G(nd)-2.75 E F0(BadV)3.666 E(alue)-1.012 E F1(errors.)
3.666 E 1.76 -.88(To s)72 406.1 T(et the \214ll-rule of a gi).88 E -.165
(ve)-.275 G 2.75(nG).165 G(C, use)-2.75 E F0(XSetFillRule)3.666 E F1(.)
.916 E 36 423.85 36 434.85 DL 36 421.85 36 432.85 DL 41.5 420.1 36 420.1
DL 43.5 420.1 38 420.1 DL 49 420.1 43.5 420.1 DL -1.834(XSetFillRule \()
72 436 R F2(display).916 E F1(,)A F2(gc)2.75 E F1(,).916 E F2
(\214ll_rule)2.75 E F1(\)).916 E(Display *)88.5 449 Q F2(display)A F1(;)
.916 E(GC)88.5 462 Q F2(gc)2.75 E F1(;).916 E(int)88.5 475 Q F2
(\214ll_rule)2.75 E F1(;).916 E F2(display)72 495.8 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2(gc)72 512.7 Q F1(Speci\214es the GC.)61.616 E F2(\214ll_rule)72 529.6
Q F1(Speci\214es the \214ll-rule you w)37.163 E
(ant to set for the speci\214ed GC.)-.11 E -1.21(Yo)5.5 G 2.75(uc)1.21 G
(an pass)-2.75 E F0(Ev)3.666 E(en-)-.11 E(OddRule)144 542.6 Q F1(or)
3.666 E F0 -.198(Wi)3.666 G(ndingRule).198 E F1(.).916 E 36 538.25 36
549.25 DL 36 536.25 36 547.25 DL 41.5 547.5 36 547.5 DL 43.5 547.5 38
547.5 DL 49 547.5 43.5 547.5 DL F0(XSetFillRule)72.916 572.5 Q F1
(can generate)3.666 E F0(BadAlloc)3.666 E F1(,).916 E F0(BadGC)3.666 E
F1 2.75(,a).916 G(nd)-2.75 E F0(BadV)3.666 E(alue)-1.012 E F1(errors.)
3.666 E F0 2.75(7.2.4. Setting)72 598.5 R(the Fill T)2.75 E
(ile and Stipple)-.198 E F1(Some displays ha)72 615.4 Q .33 -.165(ve h)
-.22 H(ardw).165 E
(are support for tiling or stippling with patterns of speci\214c sizes.)
-.11 E -.385(Ti)5.5 G(ling).385 E
(and stippling operations that restrict themselv)72 628.4 Q
(es to those speci\214c sizes run much f)-.165 E(aster than such)-.11 E
(operations with arbitrary size patterns.)72 641.4 Q(Xlib pro)5.5 E
(vides functions that you can use to determine the)-.165 E(best size, t\
ile, or stipple for the display as well as to set the tile or stipple s\
hape and the tile or)72 654.4 Q(stipple origin.)72 667.4 Q 1.76 -.88
(To o)72 697.3 T(btain the best size of a tile, stipple, or cursor).88 E
2.75(,u)-.44 G(se)-2.75 E F0(XQueryBestSize)3.666 E F1(.).916 E F0(140)
279.75 769 Q 0 Cg EP
%%Page: 141 146
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E .44 LW 36 76.75 36 87.75 DL 36 74.75
36 85.75 DL 41.5 73 36 73 DL 43.5 73 38 73 DL 49 73 43.5 73 DL/F1 11
/Times-Roman@0 SF(Status XQueryBestSize)72 88.9 Q(\().916 E/F2 11
/Times-Italic@0 SF(display).916 E F1(,)A F2(class)2.75 E F1(,)A F2(whic)
2.75 E(h_scr)-.165 E(een)-.407 E F1(,)A F2(width)2.75 E F1(,)A F2
(height)2.75 E F1(,)A F2(width_r)2.75 E(eturn)-.407 E F1(,)A F2
(height_r)2.75 E(eturn)-.407 E F1(\)).916 E(Display *)88.5 101.9 Q F2
(display)A F1(;).916 E(int)88.5 114.9 Q F2(class)2.75 E F1(;).916 E(Dra)
88.5 127.9 Q -.11(wa)-.165 G(ble).11 E F2(whic)2.75 E(h_scr)-.165 E(een)
-.407 E F1(;).916 E(unsigned int)88.5 140.9 Q F2(width)2.75 E F1(,)A F2
(height)2.75 E F1(;).916 E(unsigned int *)88.5 153.9 Q F2(width_r)A
(eturn)-.407 E F1 2.75(,*)C F2(height_r)-2.75 E(eturn)-.407 E F1(;).916
E F2(display)72 174.7 Q F1(Speci\214es the connection to the X serv)
40.221 E(er)-.165 E(.)-.605 E F2(class)72 191.6 Q F1
(Speci\214es the class that you are interested in.)50 E -1.21(Yo)5.5 G
2.75(uc)1.21 G(an pass)-2.75 E F0 -.198(Ti)3.666 G(leShape).198 E F1(,)
.916 E F0(Cursor)3.666 E(-)-.407 E(Shape)144 204.6 Q F1 2.75(,o).916 G
(r)-2.75 E F0(StippleShape)3.666 E F1(.).916 E F2(whic)72 221.5 Q(h_scr)
-.165 E(een)-.407 E F1(Speci\214es an)12.083 E 2.75(yd)-.165 G(ra)-2.75
E -.11(wa)-.165 G(ble on the screen.).11 E F2(width)72 238.4 Q(height)72
251.4 Q F1(Specify the width and height.)44.5 E F2(width_r)72 268.3 Q
(eturn)-.407 E(height_r)72 281.3 Q(eturn)-.407 E F1(Return the width an\
d height of the object best supported by the display hardw)11.907 E
(are.)-.11 E 36 276.95 36 287.95 DL 36 274.95 36 285.95 DL 41.5 286.2 36
286.2 DL 43.5 286.2 38 286.2 DL 49 286.2 43.5 286.2 DL(The)72 311.2 Q F0
(XQueryBestSize)3.666 E F1
(function returns the best or closest size to the speci\214ed size.)
3.666 E -.165(Fo)5.5 G(r).165 E F0(Cursor)3.666 E(-)-.407 E(Shape)72
324.2 Q F1 2.75(,t).916 G(his is the lar)-2.75 E(gest size that can be \
fully displayed on the screen speci\214ed by which_screen.)-.198 E -.165
(Fo)72 337.2 S(r).165 E F0 -.198(Ti)3.666 G(leShape).198 E F1 2.75(,t)
.916 G(his is the size that can be tiled f)-2.75 E 2.75(astest. F)-.11 F
(or)-.165 E F0(StippleShape)3.666 E F1 2.75(,t).916 G
(his is the size that)-2.75 E(can be stippled f)72 350.2 Q 2.75
(astest. F)-.11 F(or)-.165 E F0(CursorShape)3.666 E F1 2.75(,t).916 G
(he dra)-2.75 E -.11(wa)-.165 G(ble indicates the desired screen.).11 E
-.165(Fo)5.5 G(r).165 E F0 -.198(Ti)3.666 G(le-).198 E(Shape)72 363.2 Q
F1(and)3.666 E F0(StippleShape)3.666 E F1 2.75(,t).916 G(he dra)-2.75 E
-.11(wa)-.165 G(ble indicates the screen and possibly the windo).11 E
2.75(wc)-.275 G(lass and)-2.75 E 2.75(depth. An)72 376.2 R F0(InputOnly)
3.666 E F1(windo)3.666 E 2.75(wc)-.275 G(annot be used as the dra)-2.75
E -.11(wa)-.165 G(ble for).11 E F0 -.198(Ti)3.666 G(leShape).198 E F1
(or)3.666 E F0(StippleShape)3.666 E F1(,).916 E(or a)72 389.2 Q F0
(BadMatch)3.666 E F1(error results.)3.666 E F0(XQueryBestSize)72.916
406.1 Q F1(can generate)3.666 E F0(BadDrawable)3.666 E F1(,).916 E F0
(BadMatch)3.666 E F1 2.75(,a).916 G(nd)-2.75 E F0(BadV)3.666 E(alue)
-1.012 E F1(errors.)3.666 E 1.76 -.88(To o)72 436 T
(btain the best \214ll tile shape, use).88 E F0(XQueryBestT)3.666 E(ile)
-.198 E F1(.).916 E 36 453.75 36 464.75 DL 36 451.75 36 462.75 DL 41.5
450 36 450 DL 43.5 450 38 450 DL 49 450 43.5 450 DL(Status XQueryBestT)
72 465.9 Q -1.834(ile \()-.385 F F2(display).916 E F1(,)A F2(whic)2.75 E
(h_scr)-.165 E(een)-.407 E F1(,)A F2(width)2.75 E F1(,)A F2(height)2.75
E F1(,)A F2(width_r)2.75 E(eturn)-.407 E F1(,)A F2(height_r)2.75 E
(eturn)-.407 E F1(\)).916 E(Display *)88.5 478.9 Q F2(display)A F1(;)
.916 E(Dra)88.5 491.9 Q -.11(wa)-.165 G(ble).11 E F2(whic)2.75 E(h_scr)
-.165 E(een)-.407 E F1(;).916 E(unsigned int)88.5 504.9 Q F2(width)2.75
E F1(,)A F2(height)2.75 E F1(;).916 E(unsigned int *)88.5 517.9 Q F2
(width_r)A(eturn)-.407 E F1 2.75(,*)C F2(height_r)-2.75 E(eturn)-.407 E
F1(;).916 E F2(display)72 538.7 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2(whic)72 555.6 Q(h_scr)-.165 E(een)-.407 E F1(Speci\214es an)12.083 E
2.75(yd)-.165 G(ra)-2.75 E -.11(wa)-.165 G(ble on the screen.).11 E F2
(width)72 572.5 Q(height)72 585.5 Q F1(Specify the width and height.)
44.5 E F2(width_r)72 602.4 Q(eturn)-.407 E(height_r)72 615.4 Q(eturn)
-.407 E F1(Return the width and height of the object best supported by \
the display hardw)11.907 E(are.)-.11 E 36 611.05 36 622.05 DL 36 609.05
36 620.05 DL 41.5 620.3 36 620.3 DL 43.5 620.3 38 620.3 DL 49 620.3 43.5
620.3 DL(The)72 645.3 Q F0(XQueryBestT)3.666 E(ile)-.198 E F1(function \
returns the best or closest size, that is, the size that can be tiled)
3.666 E -.11(fa)72 658.3 S
(stest on the screen speci\214ed by which_screen.).11 E(The dra)5.5 E
-.11(wa)-.165 G(ble indicates the screen and possibly).11 E(the windo)72
671.3 Q 2.75(wc)-.275 G(lass and depth.)-2.75 E(If an)5.5 E F0
(InputOnly)3.666 E F1(windo)3.666 E 2.75(wi)-.275 G 2.75(su)-2.75 G
(sed as the dra)-2.75 E -.11(wa)-.165 G(ble, a).11 E F0(BadMatch)3.666 E
F1(error results.)72 684.3 Q F0(XQueryBestT)72.916 701.2 Q(ile)-.198 E
F1(can generate)3.666 E F0(BadDrawable)3.666 E F1(and)3.666 E F0
(BadMatch)3.666 E F1(errors.)3.666 E 1.76 -.88(To o)72 731.1 T
(btain the best stipple shape, use).88 E F0(XQueryBestStipple)3.666 E F1
(.).916 E F0(141)279.75 769 Q 0 Cg EP
%%Page: 142 147
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E .44 LW 36 76.75 36 87.75 DL 36 74.75
36 85.75 DL 41.5 73 36 73 DL 43.5 73 38 73 DL 49 73 43.5 73 DL/F1 11
/Times-Roman@0 SF(Status XQueryBestStipple)72 88.9 Q(\().916 E/F2 11
/Times-Italic@0 SF(display).916 E F1(,)A F2(whic)2.75 E(h_scr)-.165 E
(een)-.407 E F1(,)A F2(width)2.75 E F1(,)A F2(height)2.75 E F1(,)A F2
(width_r)2.75 E(eturn)-.407 E F1(,)A F2(height_r)2.75 E(eturn)-.407 E F1
(\)).916 E(Display *)88.5 101.9 Q F2(display)A F1(;).916 E(Dra)88.5
114.9 Q -.11(wa)-.165 G(ble).11 E F2(whic)2.75 E(h_scr)-.165 E(een)-.407
E F1(;).916 E(unsigned int)88.5 127.9 Q F2(width)2.75 E F1(,)A F2
(height)2.75 E F1(;).916 E(unsigned int *)88.5 140.9 Q F2(width_r)A
(eturn)-.407 E F1 2.75(,*)C F2(height_r)-2.75 E(eturn)-.407 E F1(;).916
E F2(display)72 161.7 Q F1(Speci\214es the connection to the X serv)
40.221 E(er)-.165 E(.)-.605 E F2(whic)72 178.6 Q(h_scr)-.165 E(een)-.407
E F1(Speci\214es an)12.083 E 2.75(yd)-.165 G(ra)-2.75 E -.11(wa)-.165 G
(ble on the screen.).11 E F2(width)72 195.5 Q(height)72 208.5 Q F1
(Specify the width and height.)44.5 E F2(width_r)72 225.4 Q(eturn)-.407
E(height_r)72 238.4 Q(eturn)-.407 E F1(Return the width and height of t\
he object best supported by the display hardw)11.907 E(are.)-.11 E 36
234.05 36 245.05 DL 36 232.05 36 243.05 DL 41.5 243.3 36 243.3 DL 43.5
243.3 38 243.3 DL 49 243.3 43.5 243.3 DL(The)72 268.3 Q F0
(XQueryBestStipple)3.666 E F1(function returns the best or closest size\
, that is, the size that can be stip-)3.666 E(pled f)72 281.3 Q
(astest on the screen speci\214ed by which_screen.)-.11 E(The dra)5.5 E
-.11(wa)-.165 G(ble indicates the screen and pos-).11 E(sibly the windo)
72 294.3 Q 2.75(wc)-.275 G(lass and depth.)-2.75 E(If an)5.5 E F0
(InputOnly)3.666 E F1(windo)3.666 E 2.75(wi)-.275 G 2.75(su)-2.75 G
(sed as the dra)-2.75 E -.11(wa)-.165 G(ble, a).11 E F0(Bad-)3.666 E
(Match)72 307.3 Q F1(error results.)3.666 E F0(XQueryBestStipple)72.916
324.2 Q F1(can generate)3.666 E F0(BadDrawable)3.666 E F1(and)3.666 E F0
(BadMatch)3.666 E F1(errors.)3.666 E 1.76 -.88(To s)72 354.1 T
(et the \214ll tile of a gi).88 E -.165(ve)-.275 G 2.75(nG).165 G
(C, use)-2.75 E F0(XSetT)3.666 E(ile)-.198 E F1(.).916 E 36 371.85 36
382.85 DL 36 369.85 36 380.85 DL 41.5 368.1 36 368.1 DL 43.5 368.1 38
368.1 DL 49 368.1 43.5 368.1 DL(XSetT)72 384 Q -1.834(ile \()-.385 F F2
(display).916 E F1(,)A F2(gc)2.75 E F1(,).916 E F2(tile)2.75 E F1(\))
.916 E(Display *)88.5 397 Q F2(display)A F1(;).916 E(GC)88.5 410 Q F2
(gc)2.75 E F1(;).916 E(Pixmap)88.5 423 Q F2(tile)2.75 E F1(;).916 E F2
(display)72 443.8 Q F1(Speci\214es the connection to the X serv)40.221 E
(er)-.165 E(.)-.605 E F2(gc)72 460.7 Q F1(Speci\214es the GC.)61.616 E
F2(tile)72 477.6 Q F1(Speci\214es the \214ll tile you w)57.942 E
(ant to set for the speci\214ed GC.)-.11 E 36 473.25 36 484.25 DL 36
471.25 36 482.25 DL 41.5 482.5 36 482.5 DL 43.5 482.5 38 482.5 DL 49
482.5 43.5 482.5 DL(The tile and GC must ha)72 507.5 Q .33 -.165(ve t)
-.22 H(he same depth, or a).165 E F0(BadMatch)3.666 E F1(error results.)
3.666 E F0(XSetT)72.916 524.4 Q(ile)-.198 E F1(can generate)3.666 E F0
(BadAlloc)3.666 E F1(,).916 E F0(BadGC)3.666 E F1(,).916 E F0(BadMatch)
3.666 E F1 2.75(,a).916 G(nd)-2.75 E F0(BadPixmap)3.666 E F1(errors.)
3.666 E 1.76 -.88(To s)72 554.3 T(et the stipple of a gi).88 E -.165(ve)
-.275 G 2.75(nG).165 G(C, use)-2.75 E F0(XSetStipple)3.666 E F1(.).916 E
36 572.05 36 583.05 DL 36 570.05 36 581.05 DL 41.5 568.3 36 568.3 DL
43.5 568.3 38 568.3 DL 49 568.3 43.5 568.3 DL -1.834(XSetStipple \()72
584.2 R F2(display).916 E F1(,)A F2(gc)2.75 E F1(,).916 E F2(stipple)
2.75 E F1(\)).916 E(Display *)88.5 597.2 Q F2(display)A F1(;).916 E(GC)
88.5 610.2 Q F2(gc)2.75 E F1(;).916 E(Pixmap)88.5 623.2 Q F2(stipple)
2.75 E F1(;).916 E F2(display)72 644 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2(gc)72 660.9 Q F1(Speci\214es the GC.)61.616 E F2(stipple)72 677.8 Q
F1(Speci\214es the stipple you w)42.663 E
(ant to set for the speci\214ed GC.)-.11 E 36 673.45 36 684.45 DL 36
671.45 36 682.45 DL 41.5 682.7 36 682.7 DL 43.5 682.7 38 682.7 DL 49
682.7 43.5 682.7 DL(The stipple must ha)72 707.7 Q .33 -.165(ve a d)-.22
H(epth of one, or a).165 E F0(BadMatch)3.666 E F1(error results.)3.666 E
F0(142)279.75 769 Q 0 Cg EP
%%Page: 143 148
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E(XSetStipple)72.916 85 Q/F1 11
/Times-Roman@0 SF(can generate)3.666 E F0(BadAlloc)3.666 E F1(,).916 E
F0(BadGC)3.666 E F1(,).916 E F0(BadMatch)3.666 E F1 2.75(,a).916 G(nd)
-2.75 E F0(BadPixmap)3.666 E F1(errors.)3.666 E 1.76 -.88(To s)72 114.9
T(et the tile or stipple origin of a gi).88 E -.165(ve)-.275 G 2.75(nG)
.165 G(C, use)-2.75 E F0(XSetTSOrigin)3.666 E F1(.).916 E .44 LW 36
132.65 36 143.65 DL 36 130.65 36 141.65 DL 41.5 128.9 36 128.9 DL 43.5
128.9 38 128.9 DL 49 128.9 43.5 128.9 DL -1.834(XSetTSOrigin \()72 144.8
R/F2 11/Times-Italic@0 SF(display).916 E F1(,)A F2(gc)2.75 E F1(,).916 E
F2(ts_x_origin)2.75 E F1(,).916 E F2(ts_y_origin)2.75 E F1(\)).916 E
(Display *)88.5 157.8 Q F2(display)A F1(;).916 E(GC)88.5 170.8 Q F2(gc)
2.75 E F1(;).916 E(int)88.5 183.8 Q F2(ts_x_origin)2.75 E F1(,).916 E F2
(ts_y_origin)2.75 E F1(;).916 E F2(display)72 204.6 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2(gc)72 221.5 Q F1(Speci\214es the GC.)61.616 E F2(ts_x_origin)72 238.4
Q(ts_y_origin)72 251.4 Q F1
(Specify the x and y coordinates of the tile and stipple origin.)21.884
E 36 247.05 36 258.05 DL 36 245.05 36 256.05 DL 41.5 256.3 36 256.3 DL
43.5 256.3 38 256.3 DL 49 256.3 43.5 256.3 DL
(When graphics requests call for tiling or stippling, the parent')72
281.3 Q 2.75(so)-.605 G(rigin will be interpreted relati)-2.75 E -.165
(ve)-.275 G(to whate)72 294.3 Q -.165(ve)-.275 G 2.75(rd).165 G
(estination dra)-2.75 E -.11(wa)-.165 G
(ble is speci\214ed in the graphics request.).11 E F0(XSetTSOrigin)
72.916 311.2 Q F1(can generate)3.666 E F0(BadAlloc)3.666 E F1(and)3.666
E F0(BadGC)3.666 E F1(errors.)3.666 E F0 2.75(7.2.5. Setting)72 337.2 R
(the Curr)2.75 E(ent F)-.198 E(ont)-.275 E F1 1.76 -.88(To s)72 354.1 T
(et the current font of a gi).88 E -.165(ve)-.275 G 2.75(nG).165 G
(C, use)-2.75 E F0(XSetF)3.666 E(ont)-.275 E F1(.).916 E 36 371.85 36
382.85 DL 36 369.85 36 380.85 DL 41.5 368.1 36 368.1 DL 43.5 368.1 38
368.1 DL 49 368.1 43.5 368.1 DL(XSetF)72 384 Q -1.834(ont \()-.165 F F2
(display).916 E F1(,)A F2(gc)2.75 E F1(,).916 E F2(font)2.75 E F1(\))
.916 E(Display *)88.5 397 Q F2(display)A F1(;).916 E(GC)88.5 410 Q F2
(gc)2.75 E F1(;).916 E -.165(Fo)88.5 423 S(nt).165 E F2(font)2.75 E F1
(;).916 E F2(display)72 443.8 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2(gc)72 460.7 Q F1(Speci\214es the GC.)61.616 E F2(font)72 477.6 Q F1
(Speci\214es the font.)54.884 E 36 473.25 36 484.25 DL 36 471.25 36
482.25 DL 41.5 482.5 36 482.5 DL 43.5 482.5 38 482.5 DL 49 482.5 43.5
482.5 DL F0(XSetF)72.916 507.5 Q(ont)-.275 E F1(can generate)3.666 E F0
(BadAlloc)3.666 E F1(,).916 E F0(BadF)3.666 E(ont)-.275 E F1 2.75(,a)
.916 G(nd)-2.75 E F0(BadGC)3.666 E F1(errors.)3.666 E F0 2.75
(7.2.6. Setting)72 533.5 R(the Clip Region)2.75 E F1(Xlib pro)72 550.4 Q
(vides functions that you can use to set the clip-origin and the clip-m\
ask or set the clip-)-.165 E(mask to a list of rectangles.)72 563.4 Q
1.76 -.88(To s)72 593.3 T(et the clip-origin of a gi).88 E -.165(ve)
-.275 G 2.75(nG).165 G(C, use)-2.75 E F0(XSetClipOrigin)3.666 E F1(.)
.916 E F0(143)279.75 769 Q 0 Cg EP
%%Page: 144 149
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E .44 LW 36 76.75 36 87.75 DL 36 74.75
36 85.75 DL 41.5 73 36 73 DL 43.5 73 38 73 DL 49 73 43.5 73 DL/F1 11
/Times-Roman@0 SF -1.834(XSetClipOrigin \()72 88.9 R/F2 11
/Times-Italic@0 SF(display).916 E F1(,)A F2(gc)2.75 E F1(,).916 E F2
(clip_x_origin)2.75 E F1(,).916 E F2(clip_y_origin)2.75 E F1(\)).916 E
(Display *)88.5 101.9 Q F2(display)A F1(;).916 E(GC)88.5 114.9 Q F2(gc)
2.75 E F1(;).916 E(int)88.5 127.9 Q F2(clip_x_origin)2.75 E F1(,).916 E
F2(clip_y_origin)2.75 E F1(;).916 E F2(display)72 148.7 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2(gc)72 165.6 Q F1(Speci\214es the GC.)61.616 E F2(clip_x_origin)72
182.5 Q(clip_y_origin)72 195.5 Q F1
(Specify the x and y coordinates of the clip-mask origin.)12.721 E 36
191.15 36 202.15 DL 36 189.15 36 200.15 DL 41.5 200.4 36 200.4 DL 43.5
200.4 38 200.4 DL 49 200.4 43.5 200.4 DL
(The clip-mask origin is interpreted relati)72 225.4 Q .33 -.165(ve t)
-.275 H 2.75(ot).165 G(he origin of whate)-2.75 E -.165(ve)-.275 G 2.75
(rd).165 G(estination dra)-2.75 E -.11(wa)-.165 G(ble is spec-).11 E
(i\214ed in the graphics request.)72 238.4 Q F0(XSetClipOrigin)72.916
255.3 Q F1(can generate)3.666 E F0(BadAlloc)3.666 E F1(and)3.666 E F0
(BadGC)3.666 E F1(errors.)3.666 E 1.76 -.88(To s)72 285.2 T
(et the clip-mask of a gi).88 E -.165(ve)-.275 G 2.75(nG).165 G 2.75(Ct)
-2.75 G 2.75(ot)-2.75 G(he speci\214ed pixmap, use)-2.75 E F0
(XSetClipMask)3.666 E F1(.).916 E 36 302.95 36 313.95 DL 36 300.95 36
311.95 DL 41.5 299.2 36 299.2 DL 43.5 299.2 38 299.2 DL 49 299.2 43.5
299.2 DL -1.834(XSetClipMask \()72 315.1 R F2(display).916 E F1(,)A F2
(gc)2.75 E F1(,)A F2(pixmap)2.75 E F1(\)).916 E(Display *)88.5 328.1 Q
F2(display)A F1(;).916 E(GC)88.5 341.1 Q F2(gc)2.75 E F1(;).916 E
(Pixmap)88.5 354.1 Q F2(pixmap)2.75 E F1(;).916 E F2(display)72 374.9 Q
F1(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605
E F2(gc)72 391.8 Q F1(Speci\214es the GC.)61.616 E F2(pixmap)72 408.7 Q
F1(Speci\214es the pixmap or)39.616 E F0(None)3.666 E F1(.).916 E 36
404.35 36 415.35 DL 36 402.35 36 413.35 DL 41.5 413.6 36 413.6 DL 43.5
413.6 38 413.6 DL 49 413.6 43.5 413.6 DL(If the clip-mask is set to)72
438.6 Q F0(None)3.666 E F1 2.75(,t).916 G(he pix)-2.75 E(els are al)
-.165 E -.11(wa)-.11 G(ys dra).11 E(wn \(re)-.165 E -.055(ga)-.165 G
(rdless of the clip-origin\).).055 E F0(XSetClipMask)72.916 455.5 Q F1
(can generate)3.666 E F0(BadAlloc)3.666 E F1(,).916 E F0(BadGC)3.666 E
F1(,).916 E F0(BadMatch)3.666 E F1 2.75(,a).916 G(nd)-2.75 E F0
(BadPixmap)3.666 E F1(errors.)3.666 E 1.76 -.88(To s)72 485.4 T
(et the clip-mask of a gi).88 E -.165(ve)-.275 G 2.75(nG).165 G 2.75(Ct)
-2.75 G 2.75(ot)-2.75 G(he speci\214ed list of rectangles, use)-2.75 E
F0(XSetClipRectangles)3.666 E F1(.).916 E F0(144)279.75 769 Q 0 Cg EP
%%Page: 145 150
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E .44 LW 36 76.75 36 87.75 DL 36 74.75
36 85.75 DL 41.5 73 36 73 DL 43.5 73 38 73 DL 49 73 43.5 73 DL/F1 11
/Times-Roman@0 SF -1.834(XSetClipRectangles \()72 88.9 R/F2 11
/Times-Italic@0 SF(display).916 E F1(,)A F2(gc)2.75 E F1(,).916 E F2
(clip_x_origin)2.75 E F1(,).916 E F2(clip_y_origin)2.75 E F1(,).916 E F2
-.407(re)2.75 G(ctangles).407 E F1(,).916 E F2(n)2.75 E F1(,).916 E F2
(or)2.75 E(dering)-.407 E F1(\)).916 E(Display *)88.5 101.9 Q F2
(display)A F1(;).916 E(GC)88.5 114.9 Q F2(gc)2.75 E F1(;).916 E(int)88.5
127.9 Q F2(clip_x_origin)2.75 E F1(,).916 E F2(clip_y_origin)2.75 E F1
(;).916 E(XRectangle)88.5 140.9 Q F2 -.407(re)2.75 G(ctangles).407 E F1
-1.834([] ;)B(int)88.5 153.9 Q F2(n)2.75 E F1(;).916 E(int)88.5 166.9 Q
F2(or)2.75 E(dering)-.407 E F1(;).916 E F2(display)72 187.7 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2(gc)72 204.6 Q F1(Speci\214es the GC.)61.616 E F2(clip_x_origin)72
221.5 Q(clip_y_origin)72 234.5 Q F1
(Specify the x and y coordinates of the clip-mask origin.)12.721 E F2
-.407(re)72 251.4 S(ctangles).407 E F1
(Speci\214es an array of rectangles that de\214ne the clip-mask.)26.581
E F2(n)72 268.3 Q F1(Speci\214es the number of rectangles.)66.5 E F2(or)
72 285.2 Q(dering)-.407 E F1
(Speci\214es the ordering relations on the rectangles.)33.907 E -1.21
(Yo)5.5 G 2.75(uc)1.21 G(an pass)-2.75 E F0(Unsorted)3.666 E F1(,).916 E
F0(YSorted)144.916 298.2 Q F1(,).916 E F0(YXSorted)3.666 E F1 2.75(,o)
.916 G(r)-2.75 E F0(YXBanded)3.666 E F1(.).916 E 36 293.85 36 304.85 DL
36 291.85 36 302.85 DL 41.5 303.1 36 303.1 DL 43.5 303.1 38 303.1 DL 49
303.1 43.5 303.1 DL(The)72 328.1 Q F0(XSetClipRectangles)3.666 E F1(fun\
ction changes the clip-mask in the speci\214ed GC to the speci\214ed li\
st)3.666 E(of rectangles and sets the clip origin.)72 341.1 Q
(The output is clipped to remain contained within the rectan-)5.5 E 2.75
(gles. The)72 354.1 R(clip-origin is interpreted relati)2.75 E .33 -.165
(ve t)-.275 H 2.75(ot).165 G(he origin of whate)-2.75 E -.165(ve)-.275 G
2.75(rd).165 G(estination dra)-2.75 E -.11(wa)-.165 G(ble is spec-).11 E
(i\214ed in a graphics request.)72 367.1 Q
(The rectangle coordinates are interpreted relati)5.5 E .33 -.165(ve t)
-.275 H 2.75(ot).165 G(he clip-origin.)-2.75 E(The rectangles should be\
 nonintersecting, or the graphics results will be unde\214ned.)72 380.1
Q(Note that the)5.5 E(list of rectangles can be empty)72 393.1 Q 2.75
(,w)-.715 G(hich ef)-2.75 E(fecti)-.275 E -.165(ve)-.275 G
(ly disables output.).165 E(This is the opposite of passing)5.5 E F0
(None)72.916 406.1 Q F1(as the clip-mask in)3.666 E F0(XCr)3.666 E
(eateGC)-.198 E F1(,).916 E F0(XChangeGC)3.666 E F1 2.75(,a).916 G(nd)
-2.75 E F0(XSetClipMask)3.666 E F1(.).916 E(If kno)72 423 Q(wn by the c\
lient, ordering relations on the rectangles can be speci\214ed with the\
 ordering)-.275 E(ar)72 436 Q 2.75(gument. This)-.198 F(may pro)2.75 E
(vide f)-.165 E(aster operation by the serv)-.11 E(er)-.165 E 5.5(.I)
-.605 G 2.75(fa)-5.5 G 2.75(ni)-2.75 G
(ncorrect ordering is speci\214ed,)-2.75 E(the X serv)72 449 Q
(er may generate a)-.165 E F0(BadMatch)3.666 E F1(error)3.666 E 2.75(,b)
-.44 G(ut it is not required to do so.)-2.97 E(If no error is gener)5.5
E(-)-.22 E(ated, the graphics results are unde\214ned.)72 462 Q F0
(Unsorted)6.416 E F1(means the rectangles are in arbitrary order)3.666 E
(.)-.605 E F0(YSorted)72.916 475 Q F1
(means that the rectangles are nondecreasing in their Y origin.)3.666 E
F0(YXSorted)6.416 E F1(additionally)3.666 E(constrains)72 488 Q F0
(YSorted)3.666 E F1(order in that all rectangles with an equal Y origin\
 are nondecreasing in their)3.666 E 2.75(Xo)72 501 S(rigin.)-2.75 E F0
(YXBanded)6.416 E F1(additionally constrains)3.666 E F0(YXSorted)3.666 E
F1(by requiring that, for e)3.666 E -.165(ve)-.275 G(ry possible Y).165
E(scanline, all rectangles that include that scanline ha)72 514 Q .33
-.165(ve a)-.22 H 2.75(ni).165 G(dentical Y origins and Y e)-2.75 E
(xtents.)-.165 E F0(XSetClipRectangles)72.916 530.9 Q F1(can generate)
3.666 E F0(BadAlloc)3.666 E F1(,).916 E F0(BadGC)3.666 E F1(,).916 E F0
(BadMatch)3.666 E F1 2.75(,a).916 G(nd)-2.75 E F0(BadV)3.666 E(alue)
-1.012 E F1(errors.)3.666 E(Xlib pro)72 547.8 Q
(vides a set of basic functions for performing re)-.165 E
(gion arithmetic.)-.165 E -.165(Fo)5.5 G 2.75(ri).165 G
(nformation about)-2.75 E(these functions, see section 16.5.)72 560.8 Q
F0 2.75(7.2.7. Setting)72 586.8 R(the Ar)2.75 E 2.75(cM)-.198 G
(ode, Subwindo)-2.75 E 2.75(wM)-.11 G(ode, and Graphics Exposur)-2.75 E
(e)-.198 E F1 1.76 -.88(To s)72 603.7 T(et the arc mode of a gi).88 E
-.165(ve)-.275 G 2.75(nG).165 G(C, use)-2.75 E F0(XSetAr)3.666 E(cMode)
-.198 E F1(.).916 E F0(145)279.75 769 Q 0 Cg EP
%%Page: 146 151
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E .44 LW 36 76.75 36 87.75 DL 36 74.75
36 85.75 DL 41.5 73 36 73 DL 43.5 73 38 73 DL 49 73 43.5 73 DL/F1 11
/Times-Roman@0 SF -1.834(XSetArcMode \()72 88.9 R/F2 11/Times-Italic@0
SF(display).916 E F1(,)A F2(gc)2.75 E F1(,).916 E F2(ar)2.75 E(c_mode)
-.407 E F1(\)).916 E(Display *)88.5 101.9 Q F2(display)A F1(;).916 E(GC)
88.5 114.9 Q F2(gc)2.75 E F1(;).916 E(int)88.5 127.9 Q F2(ar)2.75 E
(c_mode)-.407 E F1(;).916 E F2(display)72 148.7 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2(gc)72 165.6 Q F1(Speci\214es the GC.)61.616 E F2(ar)72 182.5 Q
(c_mode)-.407 E F1(Speci\214es the arc mode.)28.418 E -1.21(Yo)5.5 G
2.75(uc)1.21 G(an pass)-2.75 E F0(Ar)3.666 E(cChord)-.198 E F1(or)3.666
E F0(Ar)3.666 E(cPieSlice)-.198 E F1(.).916 E 36 178.15 36 189.15 DL 36
176.15 36 187.15 DL 41.5 187.4 36 187.4 DL 43.5 187.4 38 187.4 DL 49
187.4 43.5 187.4 DL F0(XSetAr)72.916 212.4 Q(cMode)-.198 E F1
(can generate)3.666 E F0(BadAlloc)3.666 E F1(,).916 E F0(BadGC)3.666 E
F1 2.75(,a).916 G(nd)-2.75 E F0(BadV)3.666 E(alue)-1.012 E F1(errors.)
3.666 E 1.76 -.88(To s)72 242.3 T(et the subwindo).88 E 2.75(wm)-.275 G
(ode of a gi)-2.75 E -.165(ve)-.275 G 2.75(nG).165 G(C, use)-2.75 E F0
(XSetSubwindo)3.666 E(wMode)-.11 E F1(.).916 E 36 260.05 36 271.05 DL 36
258.05 36 269.05 DL 41.5 256.3 36 256.3 DL 43.5 256.3 38 256.3 DL 49
256.3 43.5 256.3 DL(XSetSubwindo)72 272.2 Q -1.834(wMode \()-.275 F F2
(display).916 E F1(,)A F2(gc)2.75 E F1(,).916 E F2(subwindow_mode)2.75 E
F1(\)).916 E(Display *)88.5 285.2 Q F2(display)A F1(;).916 E(GC)88.5
298.2 Q F2(gc)2.75 E F1(;).916 E(int)88.5 311.2 Q F2(subwindow_mode)2.75
E F1(;).916 E F2(display)72 332 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2(gc)72 348.9 Q F1(Speci\214es the GC.)61.616 E F2(subwindow_mode)72
365.8 Q F1(Speci\214es the subwindo)144 378.8 Q 2.75(wm)-.275 G 2.75
(ode. Y)-2.75 F(ou can pass)-1.21 E F0(ClipByChildr)3.666 E(en)-.198 E
F1(or)3.666 E F0(IncludeInfe-)3.666 E(riors)144 391.8 Q F1(.).916 E 36
387.45 36 398.45 DL 36 385.45 36 396.45 DL 41.5 396.7 36 396.7 DL 43.5
396.7 38 396.7 DL 49 396.7 43.5 396.7 DL F0(XSetSubwindo)72.916 421.7 Q
(wMode)-.11 E F1(can generate)3.666 E F0(BadAlloc)3.666 E F1(,).916 E F0
(BadGC)3.666 E F1 2.75(,a).916 G(nd)-2.75 E F0(BadV)3.666 E(alue)-1.012
E F1(errors.)3.666 E 1.76 -.88(To s)72 451.6 T(et the graphics-e).88 E
(xposures \215ag of a gi)-.165 E -.165(ve)-.275 G 2.75(nG).165 G(C, use)
-2.75 E F0(XSetGraphicsExposur)3.666 E(es)-.198 E F1(.).916 E 36 469.35
36 480.35 DL 36 467.35 36 478.35 DL 41.5 465.6 36 465.6 DL 43.5 465.6 38
465.6 DL 49 465.6 43.5 465.6 DL -1.834(XSetGraphicsExposures \()72 481.5
R F2(display).916 E F1(,)A F2(gc)2.75 E F1(,).916 E F2(gr)2.75 E
(aphics_e)-.165 E(xposur)-.22 E(es)-.407 E F1(\)).916 E(Display *)88.5
494.5 Q F2(display)A F1(;).916 E(GC)88.5 507.5 Q F2(gc)2.75 E F1(;).916
E(Bool)88.5 520.5 Q F2(gr)2.75 E(aphics_e)-.165 E(xposur)-.22 E(es)-.407
E F1(;).916 E F2(display)72 541.3 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2(gc)72 558.2 Q F1(Speci\214es the GC.)61.616 E F2(gr)72 575.1 Q
(aphics_e)-.165 E(xposur)-.22 E(es)-.407 E F1(Speci\214es a Boolean v)
144 588.1 Q(alue that indicates whether you w)-.275 E(ant)-.11 E F0
(GraphicsExpose)3.666 E F1(and)3.666 E F0(NoExpose)144.916 601.1 Q F1
-2.365 -.275(ev e)3.666 H(nts to be reported when calling).275 E F0
(XCopyAr)3.666 E(ea)-.198 E F1(and)3.666 E F0(XCopyPlane)3.666 E F1
(with this GC.)144 614.1 Q 36 609.75 36 620.75 DL 36 607.75 36 618.75 DL
41.5 619 36 619 DL 43.5 619 38 619 DL 49 619 43.5 619 DL F0
(XSetGraphicsExposur)72.916 644 Q(es)-.198 E F1(can generate)3.666 E F0
(BadAlloc)3.666 E F1(,).916 E F0(BadGC)3.666 E F1 2.75(,a).916 G(nd)
-2.75 E F0(BadV)3.666 E(alue)-1.012 E F1(errors.)3.666 E F0(146)279.75
769 Q 0 Cg EP
%%Page: 147 152
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E/F1 12/Times-Bold@0 SF(Chapter 8)262.17
111 Q(Graphics Functions)237.492 137 Q/F2 11/Times-Roman@0 SF
(Once you ha)72 179.9 Q .33 -.165(ve e)-.22 H
(stablished a connection to a display).165 E 2.75(,y)-.715 G
(ou can use the Xlib graphics functions to:)-2.75 E 23.65<8343>72 196.8
S(lear and cop)-23.65 E 2.75(ya)-.11 G(reas)-2.75 E 23.65<8344>72 213.7
S(ra)-23.65 E 2.75(wp)-.165 G(oints, lines, rectangles, and arcs)-2.75 E
23.65<8346>72 230.6 S(ill areas)-23.65 E 23.65<834d>72 247.5 S
(anipulate fonts)-23.65 E 23.65<8344>72 264.4 S(ra)-23.65 E 2.75(wt)
-.165 G -.165(ex)-2.75 G(t).165 E 23.65<8354>72 281.3 S
(ransfer images between clients and the serv)-24.035 E(er)-.165 E
(If the same dra)72 298.2 Q -.11(wa)-.165 G
(ble and GC is used for each call, Xlib batches back-to-back calls to)
.11 E F0(XDraw-)3.666 E -.22(Po)72 311.2 S(int).22 E F2(,).916 E F0
(XDrawLine)3.666 E F2(,).916 E F0(XDrawRectangle)3.666 E F2(,).916 E F0
(XFillAr)3.666 E(c)-.198 E F2 2.75(,a).916 G(nd)-2.75 E F0
(XFillRectangle)3.666 E F2 5.5(.N).916 G(ote that this reduces)-5.5 E
(the total number of requests sent to the serv)72 324.2 Q(er)-.165 E(.)
-.605 E F0 2.75(8.1. Clearing)72 350.2 R(Ar)2.75 E(eas)-.198 E F2
(Xlib pro)72 367.1 Q
(vides functions that you can use to clear an area or the entire windo)
-.165 E 4.18 -.715(w. B)-.275 H(ecause pixmaps).715 E(do not ha)72 380.1
Q .33 -.165(ve d)-.22 H(e\214ned backgrounds, the).165 E 2.75(yc)-.165 G
(annot be \214lled by using the functions described in this)-2.75 E 2.75
(section. Instead,)72 393.1 R
(to accomplish an analogous operation on a pixmap, you should use)2.75 E
F0(XFillRect-)3.666 E(angle)72 406.1 Q F2 2.75(,w).916 G
(hich sets the pixmap to a kno)-2.75 E(wn v)-.275 E(alue.)-.275 E 1.76
-.88(To c)72 436 T(lear a rectangular area of a gi).88 E -.165(ve)-.275
G 2.75(nw).165 G(indo)-2.75 E 1.43 -.715(w, u)-.275 H(se).715 E F0
(XClearAr)3.666 E(ea)-.198 E F2(.).916 E .44 LW 36 453.75 36 464.75 DL
36 451.75 36 462.75 DL 41.5 450 36 450 DL 43.5 450 38 450 DL 49 450 43.5
450 DL -1.834(XClearArea \()72 465.9 R/F3 11/Times-Italic@0 SF(display)
.916 E F2(,)A F3(w)2.75 E F2(,).916 E F3(x)2.75 E F2(,).916 E F3(y)2.75
E F2(,).916 E F3(width)2.75 E F2(,).916 E F3(height)2.75 E F2(,).916 E
F3 -.22(ex)2.75 G(posur).22 E(es)-.407 E F2(\)).916 E(Display *)88.5
478.9 Q F3(display)A F2(;).916 E -.44(Wi)88.5 491.9 S(ndo).44 E(w)-.275
E F3(w)2.75 E F2(;).916 E(int)88.5 504.9 Q F3(x)2.75 E F2(,).916 E F3(y)
2.75 E F2(;).916 E(unsigned int)88.5 517.9 Q F3(width)2.75 E F2(,).916 E
F3(height)2.75 E F2(;).916 E(Bool)88.5 530.9 Q F3 -.22(ex)2.75 G(posur)
.22 E(es)-.407 E F2(;).916 E F3(display)72 551.7 Q F2
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F3(w)72 568.6 Q F2(Speci\214es the windo)64.663 E -.715(w.)-.275 G F3(x)
72 585.5 Q(y)72 598.5 Q F2
(Specify the x and y coordinates, which are relati)67.116 E .33 -.165
(ve t)-.275 H 2.75(ot).165 G(he origin of the windo)-2.75 E(w)-.275 E
(and specify the upper)144 611.5 Q(-left corner of the rectangle.)-.22 E
F3(width)72 628.4 Q(height)72 641.4 Q F2(Specify the width and height, \
which are the dimensions of the rectangle.)44.5 E F3 -.22(ex)72 658.3 S
(posur).22 E(es)-.407 E F2(Speci\214es a Boolean v)28.638 E
(alue that indicates if)-.275 E F0(Expose)3.666 E F2 -2.365 -.275(ev e)
3.666 H(nts are to be generated.).275 E 36 653.95 36 664.95 DL 36 651.95
36 662.95 DL 41.5 663.2 36 663.2 DL 43.5 663.2 38 663.2 DL 49 663.2 43.5
663.2 DL(The)72 688.2 Q F0(XClearAr)3.666 E(ea)-.198 E F2
(function paints a rectangular area in the speci\214ed windo)3.666 E
2.75(wa)-.275 G(ccording to the)-2.75 E
(speci\214ed dimensions with the windo)72 701.2 Q(w')-.275 E 2.75(sb)
-.605 G(ackground pix)-2.75 E(el or pixmap.)-.165 E(The subwindo)5.5 E
(w-mode)-.275 E(ef)72 714.2 Q(fecti)-.275 E -.165(ve)-.275 G(ly is).165
E F0(ClipByChildr)3.666 E(en)-.198 E F2 5.5(.I).916 G 2.75(fw)-5.5 G
(idth is zero, it is replaced with the current width of the win-)-2.75 E
(do)72 727.2 Q 2.75(wm)-.275 G(inus x.)-2.75 E
(If height is zero, it is replaced with the current height of the windo)
5.5 E 2.75(wm)-.275 G(inus y)-2.75 E 5.5(.I)-.715 G(f)-5.5 E F0(147)
279.75 769 Q 0 Cg EP
%%Page: 148 153
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E/F1 11/Times-Roman@0 SF(the windo)72 85
Q 2.75(wh)-.275 G
(as a de\214ned background tile, the rectangle clipped by an)-2.75 E
2.75(yc)-.165 G(hildren is \214lled with this)-2.75 E 2.75(tile. If)72
98 R(the windo)2.75 E 2.75(wh)-.275 G(as background)-2.75 E F0(None)
3.666 E F1 2.75(,t).916 G(he contents of the windo)-2.75 E 2.75(wa)-.275
G(re not changed.)-2.75 E(In either)5.5 E(case, if e)72 111 Q
(xposures is)-.165 E F0 -.814(Tr)3.666 G(ue).814 E F1 2.75(,o).916 G
(ne or more)-2.75 E F0(Expose)3.666 E F1 -2.365 -.275(ev e)3.666 H
(nts are generated for re).275 E(gions of the rectangle)-.165 E
(that are either visible or are being retained in a backing store.)72
124 Q(If you specify a windo)5.5 E 2.75(ww)-.275 G(hose)-2.75 E
(class is)72 137 Q F0(InputOnly)3.666 E F1 2.75(,a).916 G F0(BadMatch)
.916 E F1(error results.)3.666 E F0(XClearAr)72.916 153.9 Q(ea)-.198 E
F1(can generate)3.666 E F0(BadMatch)3.666 E F1(,).916 E F0(BadV)3.666 E
(alue)-1.012 E F1 2.75(,a).916 G(nd)-2.75 E F0(BadW)3.666 E(indo)-.198 E
(w)-.11 E F1(errors.)3.666 E 1.76 -.88(To c)72 183.8 T
(lear the entire area in a gi).88 E -.165(ve)-.275 G 2.75(nw).165 G
(indo)-2.75 E 1.43 -.715(w, u)-.275 H(se).715 E F0(XClearW)3.666 E(indo)
-.198 E(w)-.11 E F1(.).916 E .44 LW 36 201.55 36 212.55 DL 36 199.55 36
210.55 DL 41.5 197.8 36 197.8 DL 43.5 197.8 38 197.8 DL 49 197.8 43.5
197.8 DL(XClearW)72 213.7 Q(indo)-.44 E .916(w\()-.275 G/F2 11
/Times-Italic@0 SF(display)A F1(,)A F2(w)2.75 E F1(\)).916 E(Display *)
88.5 226.7 Q F2(display)A F1(;).916 E -.44(Wi)88.5 239.7 S(ndo).44 E(w)
-.275 E F2(w)2.75 E F1(;).916 E F2(display)72 260.5 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2(w)72 277.4 Q F1(Speci\214es the windo)64.663 E -.715(w.)-.275 G 36
273.05 36 284.05 DL 36 271.05 36 282.05 DL 41.5 282.3 36 282.3 DL 43.5
282.3 38 282.3 DL 49 282.3 43.5 282.3 DL(The)72 307.3 Q F0(XClearW)3.666
E(indo)-.198 E(w)-.11 E F1
(function clears the entire area in the speci\214ed windo)3.666 E 2.75
(wa)-.275 G(nd is equi)-2.75 E -.275(va)-.275 G(lent to).275 E F0
(XClearAr)72.916 320.3 Q(ea)-.198 E F1(\(display)3.666 E 2.75(,w)-.715 G
2.75(,0)-3.465 G 2.75(,0)-2.75 G 2.75(,0)-2.75 G 2.75(,0)-2.75 G(,)-2.75
E F0 -.275(Fa)3.666 G(lse).275 E F1 2.75(\). If).916 F(the windo)2.75 E
2.75(wh)-.275 G(as a de\214ned background tile, the rec-)-2.75 E
(tangle is tiled with a plane-mask of all ones and)72 333.3 Q F0(GXcopy)
3.666 E F1 2.75(function. If)3.666 F(the windo)2.75 E 2.75(wh)-.275 G
(as back-)-2.75 E(ground)72 346.3 Q F0(None)3.666 E F1 2.75(,t).916 G
(he contents of the windo)-2.75 E 2.75(wa)-.275 G(re not changed.)-2.75
E(If you specify a windo)5.5 E 2.75(ww)-.275 G(hose class)-2.75 E(is)72
359.3 Q F0(InputOnly)3.666 E F1 2.75(,a).916 G F0(BadMatch).916 E F1
(error results.)3.666 E F0(XClearW)72.916 376.2 Q(indo)-.198 E(w)-.11 E
F1(can generate)3.666 E F0(BadMatch)3.666 E F1(and)3.666 E F0(BadW)3.666
E(indo)-.198 E(w)-.11 E F1(errors.)3.666 E F0 2.75(8.2. Copying)72 402.2
R(Ar)2.75 E(eas)-.198 E F1(Xlib pro)72 419.1 Q
(vides functions that you can use to cop)-.165 E 2.75(ya)-.11 G 2.75(na)
-2.75 G(rea or a bit plane.)-2.75 E 1.76 -.88(To c)72 449 T(op).88 E
2.75(ya)-.11 G 2.75(na)-2.75 G(rea between dra)-2.75 E -.11(wa)-.165 G
(bles of the same root and depth, use).11 E F0(XCopyAr)3.666 E(ea)-.198
E F1(.).916 E F0(148)279.75 769 Q 0 Cg EP
%%Page: 149 154
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E .44 LW 36 76.75 36 87.75 DL 36 74.75
36 85.75 DL 41.5 73 36 73 DL 43.5 73 38 73 DL 49 73 43.5 73 DL/F1 11
/Times-Roman@0 SF(XCop)72 88.9 Q -1.834(yArea \()-.11 F/F2 11
/Times-Italic@0 SF(display).916 E F1(,)A F2(sr)2.75 E(c)-.407 E F1(,)
.916 E F2(dest)2.75 E F1(,).916 E F2(gc)2.75 E F1(,).916 E F2(sr)2.75 E
(c_x)-.407 E F1(,).916 E F2(sr)2.75 E(c_y)-.407 E F1(,).916 E F2(width)
2.75 E F1(,).916 E F2(height)2.75 E F1(,).916 E F2(dest_x)5.5 E F1(,)
.916 E F2(dest_y)2.75 E F1(\)).916 E(Display *)88.5 101.9 Q F2(display)A
F1(;).916 E(Dra)88.5 114.9 Q -.11(wa)-.165 G(ble).11 E F2(sr)2.75 E(c)
-.407 E F1(,).916 E F2(dest)2.75 E F1(;).916 E(GC)88.5 127.9 Q F2(gc)
2.75 E F1(;).916 E(int)88.5 140.9 Q F2(sr)2.75 E(c_x)-.407 E F1(,).916 E
F2(sr)2.75 E(c_y)-.407 E F1(;).916 E(unsigned int)88.5 153.9 Q F2(width)
2.75 E F1(,).916 E F2(height)2.75 E F1(;).916 E(int)88.5 166.9 Q F2
(dest_x)2.75 E F1(,).916 E F2(dest_y)2.75 E F1(;).916 E F2(display)72
187.7 Q F1(Speci\214es the connection to the X serv)40.221 E(er)-.165 E
(.)-.605 E F2(sr)72 204.6 Q(c)-.407 E(dest)72 217.6 Q F1
(Specify the source and destination rectangles to be combined.)54.279 E
F2(gc)72 234.5 Q F1(Speci\214es the GC.)61.616 E F2(sr)72 251.4 Q(c_x)
-.407 E(sr)72 264.4 Q(c_y)-.407 E F1
(Specify the x and y coordinates, which are relati)48.581 E .33 -.165
(ve t)-.275 H 2.75(ot).165 G(he origin of the source rec-)-2.75 E
(tangle and specify its upper)144 277.4 Q(-left corner)-.22 E(.)-.605 E
F2(width)72 294.3 Q(height)72 307.3 Q F1(Specify the width and height, \
which are the dimensions of both the source and)44.5 E
(destination rectangles.)144 320.3 Q F2(dest_x)72 337.2 Q(dest_y)72
350.2 Q F1(Specify the x and y coordinates, which are relati)43.895 E
.33 -.165(ve t)-.275 H 2.75(ot).165 G(he origin of the destination)-2.75
E(rectangle and specify its upper)144 363.2 Q(-left corner)-.22 E(.)
-.605 E 36 358.85 36 369.85 DL 36 356.85 36 367.85 DL 41.5 368.1 36
368.1 DL 43.5 368.1 38 368.1 DL 49 368.1 43.5 368.1 DL(The)72 393.1 Q F0
(XCopyAr)3.666 E(ea)-.198 E F1(function combines the speci\214ed rectan\
gle of src with the speci\214ed rectangle of)3.666 E 2.75(dest. The)72
406.1 R(dra)2.75 E -.11(wa)-.165 G(bles must ha).11 E .33 -.165(ve t)
-.22 H(he same root and depth, or a).165 E F0(BadMatch)3.666 E F1
(error results.)3.666 E(If re)72 423 Q
(gions of the source rectangle are obscured and ha)-.165 E .33 -.165
(ve n)-.22 H(ot been retained in backing store or if).165 E(re)72 436 Q
(gions outside the boundaries of the source dra)-.165 E -.11(wa)-.165 G
(ble are speci\214ed, those re).11 E(gions are not copied.)-.165 E
(Instead, the follo)72 449 Q
(wing occurs on all corresponding destination re)-.275 E
(gions that are either visible or are)-.165 E
(retained in backing store.)72 462 Q(If the destination is a windo)5.5 E
2.75(ww)-.275 G(ith a background other than)-2.75 E F0(None)3.666 E F1
2.75(,c).916 G(or)-2.75 E(-)-.22 E(responding re)72 475 Q(gions of the \
destination are tiled with that background \(with plane-mask of all one\
s)-.165 E(and)72 488 Q F0(GXcopy)3.666 E F1 2.75(function\). Re)3.666 F
-.055(ga)-.165 G(rdless of tiling or whether the destination is a windo)
.055 E 2.75(wo)-.275 G 2.75(rap)-2.75 G(ixmap,)-2.75 E(if graphics-e)72
501 Q(xposures is)-.165 E F0 -.814(Tr)3.666 G(ue).814 E F1 2.75(,t).916
G(hen)-2.75 E F0(GraphicsExpose)3.666 E F1 -2.365 -.275(ev e)3.666 H
(nts for all corresponding destination).275 E(re)72 514 Q
(gions are generated.)-.165 E(If graphics-e)5.5 E(xposures is)-.165 E F0
-.814(Tr)3.666 G(ue).814 E F1 -.22(bu)3.666 G 2.75(tn).22 G(o)-2.75 E F0
(GraphicsExpose)3.666 E F1 -2.365 -.275(ev e)3.666 H(nts are gener).275
E(-)-.22 E(ated, a)72 527 Q F0(NoExpose)3.666 E F1 -2.365 -.275(ev e)
3.666 H(nt is generated.).275 E(Note that by def)5.5 E(ault graphics-e)
-.11 E(xposures is)-.165 E F0 -.814(Tr)3.666 G(ue).814 E F1(in ne)3.666
E(w)-.275 E(GCs.)72 540 Q
(This function uses these GC components: function, plane-mask, subwindo)
72 556.9 Q(w-mode, graphics-)-.275 E -.165(ex)72 569.9 S
(posures, clip-x-origin, clip-y-origin, and clip-mask.).165 E F0
(XCopyAr)72.916 586.8 Q(ea)-.198 E F1(can generate)3.666 E F0
(BadDrawable)3.666 E F1(,).916 E F0(BadGC)3.666 E F1 2.75(,a).916 G(nd)
-2.75 E F0(BadMatch)3.666 E F1(errors.)3.666 E 1.76 -.88(To c)72 616.7 T
(op).88 E 2.75(yas)-.11 G(ingle bit plane of a gi)-2.75 E -.165(ve)-.275
G 2.75(nd).165 G(ra)-2.75 E -.11(wa)-.165 G(ble, use).11 E F0
(XCopyPlane)3.666 E F1(.).916 E F0(149)279.75 769 Q 0 Cg EP
%%Page: 150 155
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E .44 LW 36 76.75 36 87.75 DL 36 74.75
36 85.75 DL 41.5 73 36 73 DL 43.5 73 38 73 DL 49 73 43.5 73 DL/F1 11
/Times-Roman@0 SF(XCop)72 88.9 Q -1.834(yPlane \()-.11 F/F2 11
/Times-Italic@0 SF(display).916 E F1(,)A F2(sr)2.75 E(c)-.407 E F1(,)
.916 E F2(dest)2.75 E F1(,).916 E F2(gc)2.75 E F1(,).916 E F2(sr)2.75 E
(c_x)-.407 E F1(,).916 E F2(sr)2.75 E(c_y)-.407 E F1(,).916 E F2(width)
2.75 E F1(,).916 E F2(height)2.75 E F1(,).916 E F2(dest_x)2.75 E F1(,)
.916 E F2(dest_y)2.75 E F1(,).916 E F2(plane)2.75 E F1(\)).916 E
(Display *)88.5 101.9 Q F2(display)A F1(;).916 E(Dra)88.5 114.9 Q -.11
(wa)-.165 G(ble).11 E F2(sr)2.75 E(c)-.407 E F1(,).916 E F2(dest)2.75 E
F1(;).916 E(GC)88.5 127.9 Q F2(gc)2.75 E F1(;).916 E(int)88.5 140.9 Q F2
(sr)2.75 E(c_x)-.407 E F1(,).916 E F2(sr)2.75 E(c_y)-.407 E F1(;).916 E
(unsigned int)88.5 153.9 Q F2(width)2.75 E F1(,).916 E F2(height)2.75 E
F1(;).916 E(int)88.5 166.9 Q F2(dest_x)2.75 E F1(,).916 E F2(dest_y)2.75
E F1(;).916 E(unsigned long)88.5 179.9 Q F2(plane)2.75 E F1(;).916 E F2
(display)72 200.7 Q F1(Speci\214es the connection to the X serv)40.221 E
(er)-.165 E(.)-.605 E F2(sr)72 217.6 Q(c)-.407 E(dest)72 230.6 Q F1
(Specify the source and destination rectangles to be combined.)54.279 E
F2(gc)72 247.5 Q F1(Speci\214es the GC.)61.616 E F2(sr)72 264.4 Q(c_x)
-.407 E(sr)72 277.4 Q(c_y)-.407 E F1
(Specify the x and y coordinates, which are relati)48.581 E .33 -.165
(ve t)-.275 H 2.75(ot).165 G(he origin of the source rec-)-2.75 E
(tangle and specify its upper)144 290.4 Q(-left corner)-.22 E(.)-.605 E
F2(width)72 307.3 Q(height)72 320.3 Q F1(Specify the width and height, \
which are the dimensions of both the source and)44.5 E
(destination rectangles.)144 333.3 Q F2(dest_x)72 350.2 Q(dest_y)72
363.2 Q F1(Specify the x and y coordinates, which are relati)43.895 E
.33 -.165(ve t)-.275 H 2.75(ot).165 G(he origin of the destination)-2.75
E(rectangle and specify its upper)144 376.2 Q(-left corner)-.22 E(.)
-.605 E F2(plane)72 393.1 Q F1(Speci\214es the bit plane.)47.558 E -1.21
(Yo)5.5 G 2.75(um)1.21 G(ust set e)-2.75 E(xactly one bit to 1.)-.165 E
36 388.75 36 399.75 DL 36 386.75 36 397.75 DL 41.5 398 36 398 DL 43.5
398 38 398 DL 49 398 43.5 398 DL(The)72 423 Q F0(XCopyPlane)3.666 E F1(\
function uses a single bit plane of the speci\214ed source rectangle co\
mbined)3.666 E
(with the speci\214ed GC to modify the speci\214ed rectangle of dest.)72
436 Q(The dra)5.5 E -.11(wa)-.165 G(bles must ha).11 E .33 -.165(ve t)
-.22 H(he).165 E(same root b)72 449 Q(ut need not ha)-.22 E .33 -.165
(ve t)-.22 H(he same depth.).165 E(If the dra)5.5 E -.11(wa)-.165 G
(bles do not ha).11 E .33 -.165(ve t)-.22 H(he same root, a).165 E F0
(Bad-)3.666 E(Match)72 462 Q F1(error results.)3.666 E
(If plane does not ha)5.5 E .33 -.165(ve ex)-.22 H
(actly one bit set to 1 and the v).165 E(alue of plane is not)-.275 E
(less than 2)72 475 Q/F3 7.7/Times-Italic@0 SF(n).277 -4.62 M F1 2.75
(,w).735 4.62 O(here)-2.75 E F2(n)2.75 E F1(is the depth of src, a)2.75
E F0(BadV)3.666 E(alue)-1.012 E F1(error results.)3.666 E(Ef)72 491.9 Q
(fecti)-.275 E -.165(ve)-.275 G(ly).165 E(,)-.715 E F0(XCopyPlane)3.666
E F1
(forms a pixmap of the same depth as the rectangle of dest and with a)
3.666 E(size speci\214ed by the source re)72 504.9 Q 2.75(gion. It)-.165
F(uses the fore)2.75 E(ground/background pix)-.165 E
(els in the GC \(fore-)-.165 E(ground e)72 517.9 Q -.165(ve)-.275 G
(rywhere the bit plane in src contains a bit set to 1, background e).165
E -.165(ve)-.275 G(rywhere the bit).165 E
(plane in src contains a bit set to 0\) and the equi)72 530.9 Q -.275
(va)-.275 G(lent of a).275 E F0(CopyAr)3.666 E(ea)-.198 E F1
(protocol request is per)3.666 E(-)-.22 E(formed with all the same e)72
543.9 Q(xposure semantics.)-.165 E
(This can also be thought of as using the speci\214ed)5.5 E(re)72 556.9
Q(gion of the source bit plane as a stipple with a \214ll-style of)-.165
E F0(FillOpaqueStippled)3.666 E F1(for \214lling a)3.666 E
(rectangular area of the destination.)72 569.9 Q
(This function uses these GC components: function, plane-mask, fore)72
586.8 Q(ground, background, subwin-)-.165 E(do)72 599.8 Q
(w-mode, graphics-e)-.275 E
(xposures, clip-x-origin, clip-y-origin, and clip-mask.)-.165 E F0
(XCopyPlane)72.916 616.7 Q F1(can generate)3.666 E F0(BadDrawable)3.666
E F1(,).916 E F0(BadGC)3.666 E F1(,).916 E F0(BadMatch)3.666 E F1 2.75
(,a).916 G(nd)-2.75 E F0(BadV)3.666 E(alue)-1.012 E F1(errors.)3.666 E
F0 2.75(8.3. Drawing)72 642.7 R -.22(Po)2.75 G
(ints, Lines, Rectangles, and Ar).22 E(cs)-.198 E F1(Xlib pro)72 659.6 Q
(vides functions that you can use to dra)-.165 E(w:)-.165 E 23.65<8341>
72 676.5 S(single point or multiple points)-20.9 E 23.65<8341>72 693.4 S
(single line or multiple lines)-20.9 E 23.65<8341>72 710.3 S
(single rectangle or multiple rectangles)-20.9 E F0(150)279.75 769 Q 0
Cg EP
%%Page: 151 156
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E/F1 11/Times-Roman@0 SF 23.65<8341>72
85 S(single arc or multiple arcs)-20.9 E
(Some of the functions described in the follo)72 101.9 Q
(wing sections use these structures:)-.275 E .44 LW 36 123.55 36 134.55
DL 36 121.55 36 132.55 DL 41.5 119.8 36 119.8 DL 43.5 119.8 38 119.8 DL
49 119.8 43.5 119.8 DL(typedef struct {)72 138.3 Q
(short x1, y1, x2, y2;)108 151.3 Q 2.75(}X)72 164.3 S(Se)-2.75 E(gment;)
-.165 E 36 166.45 36 177.45 DL 36 164.45 36 175.45 DL 41.5 175.7 36
175.7 DL 43.5 175.7 38 175.7 DL 49 175.7 43.5 175.7 DL 36 205.45 36
216.45 DL 36 203.45 36 214.45 DL 41.5 201.7 36 201.7 DL 43.5 201.7 38
201.7 DL 49 201.7 43.5 201.7 DL(typedef struct {)72 220.2 Q(short x, y;)
108 233.2 Q 2.75(}X)72 246.2 S(Point;)-2.75 E 36 248.35 36 259.35 DL 36
246.35 36 257.35 DL 41.5 257.6 36 257.6 DL 43.5 257.6 38 257.6 DL 49
257.6 43.5 257.6 DL 36 287.35 36 298.35 DL 36 285.35 36 296.35 DL 41.5
283.6 36 283.6 DL 43.5 283.6 38 283.6 DL 49 283.6 43.5 283.6 DL
(typedef struct {)72 302.1 Q(short x, y;)108 315.1 Q
(unsigned short width, height;)108 328.1 Q 2.75(}X)72 341.1 S
(Rectangle;)-2.75 E 36 343.25 36 354.25 DL 36 341.25 36 352.25 DL 41.5
352.5 36 352.5 DL 43.5 352.5 38 352.5 DL 49 352.5 43.5 352.5 DL 36
382.25 36 393.25 DL 36 380.25 36 391.25 DL 41.5 378.5 36 378.5 DL 43.5
378.5 38 378.5 DL 49 378.5 43.5 378.5 DL(typedef struct {)72 397 Q
(short x, y;)108 410 Q(unsigned short width, height;)108 423 Q
(short angle1, angle2;)108 436 Q(/* De)35.75 E(grees * 64 */)-.165 E
2.75(}X)72 449 S(Arc;)-2.75 E 36 451.15 36 462.15 DL 36 449.15 36 460.15
DL 41.5 460.4 36 460.4 DL 43.5 460.4 38 460.4 DL 49 460.4 43.5 460.4 DL
(All x and y members are signed inte)72 485.4 Q 2.75(gers. The)-.165 F
(width and height members are 16-bit unsigned)2.75 E(inte)72 498.4 Q
2.75(gers. Y)-.165 F(ou should be careful not to generate coordinates a\
nd sizes out of the 16-bit ranges,)-1.21 E
(because the protocol only has 16-bit \214elds for these v)72 511.4 Q
(alues.)-.275 E F0 2.75(8.3.1. Drawing)72 537.4 R(Single and Multiple P)
2.75 E(oints)-.22 E F1 1.76 -.88(To d)72 558.2 T(ra).88 E 2.75(was)-.165
G(ingle point in a gi)-2.75 E -.165(ve)-.275 G 2.75(nd).165 G(ra)-2.75 E
-.11(wa)-.165 G(ble, use).11 E F0(XDrawP)3.666 E(oint)-.22 E F1(.).916 E
F0(151)279.75 769 Q 0 Cg EP
%%Page: 152 157
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E .44 LW 36 76.75 36 87.75 DL 36 74.75
36 85.75 DL 41.5 73 36 73 DL 43.5 73 38 73 DL 49 73 43.5 73 DL/F1 11
/Times-Roman@0 SF(XDra)72 88.9 Q -1.834(wPoint \()-.165 F/F2 11
/Times-Italic@0 SF(display).916 E F1(,)A F2(d)2.75 E F1(,).916 E F2(gc)
2.75 E F1(,).916 E F2(x)2.75 E F1(,).916 E F2(y)2.75 E F1(\)).916 E
(Display *)88.5 101.9 Q F2(display)A F1(;).916 E(Dra)88.5 114.9 Q -.11
(wa)-.165 G(ble).11 E F2(d)2.75 E F1(;).916 E(GC)88.5 127.9 Q F2(gc)2.75
E F1(;).916 E(int)88.5 140.9 Q F2(x)2.75 E F1(,).916 E F2(y)2.75 E F1(;)
.916 E F2(display)72 161.7 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2(d)72 178.6 Q F1(Speci\214es the dra)66.5 E -.11(wa)-.165 G(ble.).11 E
F2(gc)72 195.5 Q F1(Speci\214es the GC.)61.616 E F2(x)72 212.4 Q(y)72
225.4 Q F1(Specify the x and y coordinates where you w)67.116 E
(ant the point dra)-.11 E(wn.)-.165 E 36 221.05 36 232.05 DL 36 219.05
36 230.05 DL 41.5 230.3 36 230.3 DL 43.5 230.3 38 230.3 DL 49 230.3 43.5
230.3 DL 1.76 -.88(To d)72 268.3 T(ra).88 E 2.75(wm)-.165 G
(ultiple points in a gi)-2.75 E -.165(ve)-.275 G 2.75(nd).165 G(ra)-2.75
E -.11(wa)-.165 G(ble, use).11 E F0(XDrawP)3.666 E(oints)-.22 E F1(.)
.916 E 36 286.05 36 297.05 DL 36 284.05 36 295.05 DL 41.5 282.3 36 282.3
DL 43.5 282.3 38 282.3 DL 49 282.3 43.5 282.3 DL(XDra)72 298.2 Q -1.834
(wPoints \()-.165 F F2(display).916 E F1(,)A F2(d)2.75 E F1(,).916 E F2
(gc)2.75 E F1(,).916 E F2(points)2.75 E F1(,).916 E F2(npoints)2.75 E F1
(,).916 E F2(mode)2.75 E F1(\)).916 E(Display *)88.5 311.2 Q F2(display)
A F1(;).916 E(Dra)88.5 324.2 Q -.11(wa)-.165 G(ble).11 E F2(d)2.75 E F1
(;).916 E(GC)88.5 337.2 Q F2(gc)2.75 E F1(;).916 E(XPoint *)88.5 350.2 Q
F2(points)A F1(;).916 E(int)88.5 363.2 Q F2(npoints)2.75 E F1(;).916 E
(int)88.5 376.2 Q F2(mode)2.75 E F1(;).916 E F2(display)72 397 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2(d)72 413.9 Q F1(Speci\214es the dra)66.5 E -.11(wa)-.165 G(ble.).11 E
F2(gc)72 430.8 Q F1(Speci\214es the GC.)61.616 E F2(points)72 447.7 Q F1
(Speci\214es an array of points.)45.105 E F2(npoints)72 464.6 Q F1
(Speci\214es the number of points in the array)39.605 E(.)-.715 E F2
(mode)72 481.5 Q F1(Speci\214es the coordinate mode.)48.174 E -1.21(Yo)
5.5 G 2.75(uc)1.21 G(an pass)-2.75 E F0(CoordModeOrigin)3.666 E F1(or)
3.666 E F0(Coord-)3.666 E(ModePr)144 494.5 Q -.165(ev)-.198 G(ious).165
E F1(.).916 E 36 490.15 36 501.15 DL 36 488.15 36 499.15 DL 41.5 499.4
36 499.4 DL 43.5 499.4 38 499.4 DL 49 499.4 43.5 499.4 DL(The)72 524.4 Q
F0(XDrawP)3.666 E(oint)-.22 E F1(function uses the fore)3.666 E
(ground pix)-.165 E(el and function components of the GC to dra)-.165 E
(w)-.165 E 2.75(as)72 537.4 S(ingle point into the speci\214ed dra)-2.75
E -.11(wa)-.165 G(ble;).11 E F0(XDrawP)3.666 E(oints)-.22 E F1(dra)3.666
E(ws multiple points this w)-.165 E(ay)-.11 E(.)-.715 E F0(Coord-)6.416
E(ModeOrigin)72 550.4 Q F1(treats all coordinates as relati)3.666 E .33
-.165(ve t)-.275 H 2.75(ot).165 G(he origin, and)-2.75 E F0(CoordModePr)
3.666 E -.165(ev)-.198 G(ious).165 E F1(treats all)3.666 E
(coordinates after the \214rst as relati)72 563.4 Q .33 -.165(ve t)-.275
H 2.75(ot).165 G(he pre)-2.75 E(vious point.)-.275 E F0(XDrawP)6.416 E
(oints)-.22 E F1(dra)3.666 E(ws the points in the)-.165 E
(order listed in the array)72 576.4 Q(.)-.715 E
(Both functions use these GC components: function, plane-mask, fore)72
593.3 Q(ground, subwindo)-.165 E(w-mode,)-.275 E
(clip-x-origin, clip-y-origin, and clip-mask.)72 606.3 Q F0(XDrawP)
72.916 623.2 Q(oint)-.22 E F1(can generate)3.666 E F0(BadDrawable)3.666
E F1(,).916 E F0(BadGC)3.666 E F1 2.75(,a).916 G(nd)-2.75 E F0(BadMatch)
3.666 E F1(errors.)3.666 E F0(XDrawP)6.416 E(oints)-.22 E F1(can)3.666 E
(generate)72 636.2 Q F0(BadDrawable)3.666 E F1(,).916 E F0(BadGC)3.666 E
F1(,).916 E F0(BadMatch)3.666 E F1 2.75(,a).916 G(nd)-2.75 E F0(BadV)
3.666 E(alue)-1.012 E F1(errors.)3.666 E F0 2.75(8.3.2. Drawing)72 662.2
R(Single and Multiple Lines)2.75 E F1 1.76 -.88(To d)72 683 T(ra).88 E
2.75(was)-.165 G(ingle line between tw)-2.75 E 2.75(op)-.11 G
(oints in a gi)-2.75 E -.165(ve)-.275 G 2.75(nd).165 G(ra)-2.75 E -.11
(wa)-.165 G(ble, use).11 E F0(XDrawLine)3.666 E F1(.).916 E F0(152)
279.75 769 Q 0 Cg EP
%%Page: 153 158
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E .44 LW 36 76.75 36 87.75 DL 36 74.75
36 85.75 DL 41.5 73 36 73 DL 43.5 73 38 73 DL 49 73 43.5 73 DL/F1 11
/Times-Roman@0 SF(XDra)72 88.9 Q -1.834(wLine \()-.165 F/F2 11
/Times-Italic@0 SF(display).916 E F1(,)A F2(d)2.75 E F1(,).916 E F2(gc)
2.75 E F1(,).916 E F2(x1)2.75 E F1(,).916 E F2(y1)2.75 E F1(,).916 E F2
(x2)2.75 E F1(,).916 E F2(y2)2.75 E F1(\)).916 E(Display *)88.5 101.9 Q
F2(display)A F1(;).916 E(Dra)88.5 114.9 Q -.11(wa)-.165 G(ble).11 E F2
(d)2.75 E F1(;).916 E(GC)88.5 127.9 Q F2(gc)2.75 E F1(;).916 E(int)88.5
140.9 Q F2(x1)2.75 E F1(,).916 E F2(y1)2.75 E F1(,).916 E F2(x2)2.75 E
F1(,).916 E F2(y2)2.75 E F1(;).916 E F2(display)72 161.7 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2(d)72 178.6 Q F1(Speci\214es the dra)66.5 E -.11(wa)-.165 G(ble.).11 E
F2(gc)72 195.5 Q F1(Speci\214es the GC.)61.616 E F2(x1)72 212.4 Q(y1)72
225.4 Q(x2)72 238.4 Q(y2)72 251.4 Q F1
(Specify the points \(x1, y1\) and \(x2, y2\) to be connected.)61.616 E
36 247.05 36 258.05 DL 36 245.05 36 256.05 DL 41.5 256.3 36 256.3 DL
43.5 256.3 38 256.3 DL 49 256.3 43.5 256.3 DL 1.76 -.88(To d)72 294.3 T
(ra).88 E 2.75(wm)-.165 G(ultiple lines in a gi)-2.75 E -.165(ve)-.275 G
2.75(nd).165 G(ra)-2.75 E -.11(wa)-.165 G(ble, use).11 E F0(XDrawLines)
3.666 E F1(.).916 E 36 312.05 36 323.05 DL 36 310.05 36 321.05 DL 41.5
308.3 36 308.3 DL 43.5 308.3 38 308.3 DL 49 308.3 43.5 308.3 DL(XDra)72
324.2 Q -1.834(wLines \()-.165 F F2(display).916 E F1(,)A F2(d)2.75 E F1
(,).916 E F2(gc)2.75 E F1(,).916 E F2(points)2.75 E F1(,).916 E F2
(npoints)2.75 E F1(,).916 E F2(mode)2.75 E F1(\)).916 E(Display *)88.5
337.2 Q F2(display)A F1(;).916 E(Dra)88.5 350.2 Q -.11(wa)-.165 G(ble)
.11 E F2(d)2.75 E F1(;).916 E(GC)88.5 363.2 Q F2(gc)2.75 E F1(;).916 E
(XPoint *)88.5 376.2 Q F2(points)A F1(;).916 E(int)88.5 389.2 Q F2
(npoints)2.75 E F1(;).916 E(int)88.5 402.2 Q F2(mode)2.75 E F1(;).916 E
F2(display)72 423 Q F1(Speci\214es the connection to the X serv)40.221 E
(er)-.165 E(.)-.605 E F2(d)72 439.9 Q F1(Speci\214es the dra)66.5 E -.11
(wa)-.165 G(ble.).11 E F2(gc)72 456.8 Q F1(Speci\214es the GC.)61.616 E
F2(points)72 473.7 Q F1(Speci\214es an array of points.)45.105 E F2
(npoints)72 490.6 Q F1(Speci\214es the number of points in the array)
39.605 E(.)-.715 E F2(mode)72 507.5 Q F1
(Speci\214es the coordinate mode.)48.174 E -1.21(Yo)5.5 G 2.75(uc)1.21 G
(an pass)-2.75 E F0(CoordModeOrigin)3.666 E F1(or)3.666 E F0(Coord-)
3.666 E(ModePr)144 520.5 Q -.165(ev)-.198 G(ious).165 E F1(.).916 E 36
516.15 36 527.15 DL 36 514.15 36 525.15 DL 41.5 525.4 36 525.4 DL 43.5
525.4 38 525.4 DL 49 525.4 43.5 525.4 DL 1.76 -.88(To d)72 563.4 T(ra)
.88 E 2.75(wm)-.165 G(ultiple, unconnected lines in a gi)-2.75 E -.165
(ve)-.275 G 2.75(nd).165 G(ra)-2.75 E -.11(wa)-.165 G(ble, use).11 E F0
(XDrawSegments)3.666 E F1(.).916 E F0(153)279.75 769 Q 0 Cg EP
%%Page: 154 159
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E .44 LW 36 76.75 36 87.75 DL 36 74.75
36 85.75 DL 41.5 73 36 73 DL 43.5 73 38 73 DL 49 73 43.5 73 DL/F1 11
/Times-Roman@0 SF(XDra)72 88.9 Q(wSe)-.165 E -1.834(gments \()-.165 F/F2
11/Times-Italic@0 SF(display).916 E F1(,)A F2(d)2.75 E F1(,).916 E F2
(gc)2.75 E F1(,).916 E F2(se)2.75 E(gments)-.44 E F1(,).916 E F2(nse)
2.75 E(gments)-.44 E F1(\)).916 E(Display *)88.5 101.9 Q F2(display)A F1
(;).916 E(Dra)88.5 114.9 Q -.11(wa)-.165 G(ble).11 E F2(d)2.75 E F1(;)
.916 E(GC)88.5 127.9 Q F2(gc)2.75 E F1(;).916 E(XSe)88.5 140.9 Q
(gment *)-.165 E F2(se)A(gments)-.44 E F1(;).916 E(int)88.5 153.9 Q F2
(nse)2.75 E(gments)-.44 E F1(;).916 E F2(display)72 174.7 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2(d)72 191.6 Q F1(Speci\214es the dra)66.5 E -.11(wa)-.165 G(ble.).11 E
F2(gc)72 208.5 Q F1(Speci\214es the GC.)61.616 E F2(se)72 225.4 Q
(gments)-.44 E F1(Speci\214es an array of se)32.114 E(gments.)-.165 E F2
(nse)72 242.3 Q(gments)-.44 E F1(Speci\214es the number of se)26.614 E
(gments in the array)-.165 E(.)-.715 E 36 237.95 36 248.95 DL 36 235.95
36 246.95 DL 41.5 247.2 36 247.2 DL 43.5 247.2 38 247.2 DL 49 247.2 43.5
247.2 DL(The)72 272.2 Q F0(XDrawLine)3.666 E F1
(function uses the components of the speci\214ed GC to dra)3.666 E 2.75
(wal)-.165 G(ine between the)-2.75 E
(speci\214ed set of points \(x1, y1\) and \(x2, y2\).)72 285.2 Q
(It does not perform joining at coincident endpoints.)5.5 E -.165(Fo)72
298.2 S 2.75(ra).165 G .33 -.165(ny g)-2.75 H -2.365 -.275(iv e).165 H
2.75(nl).275 G(ine,)-2.75 E F0(XDrawLine)3.666 E F1(does not dra)3.666 E
2.75(wap)-.165 G(ix)-2.75 E(el more than once.)-.165 E
(If lines intersect, the)5.5 E(intersecting pix)72 311.2 Q(els are dra)
-.165 E(wn multiple times.)-.165 E(The)72 328.1 Q F0(XDrawLines)3.666 E
F1(function uses the components of the speci\214ed GC to dra)3.666 E
2.75(wn)-.165 G(points\2551 lines)-2.75 E
(between each pair of points \(point[i], point[i+1]\) in the array of)72
341.1 Q F0(XP)3.666 E(oint)-.22 E F1 2.75(structures. It)3.666 F(dra)
2.75 E(ws the)-.165 E(lines in the order listed in the array)72 354.1 Q
5.5(.T)-.715 G
(he lines join correctly at all intermediate points, and if the)-5.5 E(\
\214rst and last points coincide, the \214rst and last lines also join \
correctly)72 367.1 Q 5.5(.F)-.715 G(or an)-5.665 E 2.75(yg)-.165 G
-2.365 -.275(iv e)-2.75 H 2.75(nl).275 G(ine,)-2.75 E F0(XDrawLines)
72.916 380.1 Q F1(does not dra)3.666 E 2.75(wap)-.165 G(ix)-2.75 E
(el more than once.)-.165 E
(If thin \(zero line-width\) lines intersect, the)5.5 E
(intersecting pix)72 393.1 Q(els are dra)-.165 E(wn multiple times.)
-.165 E(If wide lines intersect, the intersecting pix)5.5 E(els are)
-.165 E(dra)72 406.1 Q(wn only once, as though the entire)-.165 E F0
-.22(Po)3.666 G(lyLine).22 E F1
(protocol request were a single, \214lled shape.)3.666 E F0
(CoordModeOrigin)72.916 419.1 Q F1(treats all coordinates as relati)
3.666 E .33 -.165(ve t)-.275 H 2.75(ot).165 G(he origin, and)-2.75 E F0
(CoordModePr)3.666 E -.165(ev)-.198 G(ious).165 E F1
(treats all coordinates after the \214rst as relati)72 432.1 Q .33 -.165
(ve t)-.275 H 2.75(ot).165 G(he pre)-2.75 E(vious point.)-.275 E(The)72
449 Q F0(XDrawSegments)3.666 E F1(function dra)3.666 E
(ws multiple, unconnected lines.)-.165 E -.165(Fo)5.5 G 2.75(re).165 G
(ach se)-2.75 E(gment,)-.165 E F0(XDrawSegments)72.916 462 Q F1(dra)
3.666 E(ws a line between \(x1, y1\) and \(x2, y2\).)-.165 E(It dra)5.5
E(ws the lines in the order)-.165 E(listed in the array of)72 475 Q F0
(XSegment)3.666 E F1
(structures and does not perform joining at coincident endpoints.)3.666
E -.165(Fo)72 488 S 2.75(ra).165 G .33 -.165(ny g)-2.75 H -2.365 -.275
(iv e).165 H 2.75(nl).275 G(ine,)-2.75 E F0(XDrawSegments)3.666 E F1
(does not dra)3.666 E 2.75(wap)-.165 G(ix)-2.75 E(el more than once.)
-.165 E(If lines intersect, the)5.5 E(intersecting pix)72 501 Q
(els are dra)-.165 E(wn multiple times.)-.165 E(All three functions use\
 these GC components: function, plane-mask, line-width, line-style, cap\
-)72 517.9 Q(style, \214ll-style, subwindo)72 530.9 Q
(w-mode, clip-x-origin, clip-y-origin, and clip-mask.)-.275 E(The)5.5 E
F0(XDrawLines)3.666 E F1
(function also uses the join-style GC component.)72 543.9 Q
(All three functions also use these GC mode-)5.5 E
(dependent components: fore)72 556.9 Q(ground, background, tile, stippl\
e, tile-stipple-x-origin, tile-stipple-y-)-.165 E(origin, dash-of)72
569.9 Q(fset, and dash-list.)-.275 E F0(XDrawLine)72.916 586.8 Q F1(,)
.916 E F0(XDrawLines)3.666 E F1 2.75(,a).916 G(nd)-2.75 E F0
(XDrawSegments)3.666 E F1(can generate)3.666 E F0(BadDrawable)3.666 E F1
(,).916 E F0(BadGC)3.666 E F1 2.75(,a).916 G(nd)-2.75 E F0(BadMatch)
72.916 599.8 Q F1(errors.)3.666 E F0(XDrawLines)6.416 E F1
(also can generate)3.666 E F0(BadV)3.666 E(alue)-1.012 E F1(errors.)
3.666 E F0 2.75(8.3.3. Drawing)72 625.8 R
(Single and Multiple Rectangles)2.75 E F1 1.76 -.88(To d)72 646.6 T(ra)
.88 E 2.75(wt)-.165 G(he outline of a single rectangle in a gi)-2.75 E
-.165(ve)-.275 G 2.75(nd).165 G(ra)-2.75 E -.11(wa)-.165 G(ble, use).11
E F0(XDrawRectangle)3.666 E F1(.).916 E F0(154)279.75 769 Q 0 Cg EP
%%Page: 155 160
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E .44 LW 36 76.75 36 87.75 DL 36 74.75
36 85.75 DL 41.5 73 36 73 DL 43.5 73 38 73 DL 49 73 43.5 73 DL/F1 11
/Times-Roman@0 SF(XDra)72 88.9 Q -1.834(wRectangle \()-.165 F/F2 11
/Times-Italic@0 SF(display).916 E F1(,)A F2(d)2.75 E F1(,).916 E F2(gc)
2.75 E F1(,).916 E F2(x)2.75 E F1(,).916 E F2(y)2.75 E F1(,).916 E F2
(width)2.75 E F1(,).916 E F2(height)2.75 E F1(\)).916 E(Display *)88.5
101.9 Q F2(display)A F1(;).916 E(Dra)88.5 114.9 Q -.11(wa)-.165 G(ble)
.11 E F2(d)2.75 E F1(;).916 E(GC)88.5 127.9 Q F2(gc)2.75 E F1(;).916 E
(int)88.5 140.9 Q F2(x)2.75 E F1(,).916 E F2(y)2.75 E F1(;).916 E
(unsigned int)88.5 153.9 Q F2(width)2.75 E F1(,).916 E F2(height)2.75 E
F1(;).916 E F2(display)72 174.7 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2(d)72 191.6 Q F1(Speci\214es the dra)66.5 E -.11(wa)-.165 G(ble.).11 E
F2(gc)72 208.5 Q F1(Speci\214es the GC.)61.616 E F2(x)72 225.4 Q(y)72
238.4 Q F1(Specify the x and y coordinates, which specify the upper)
67.116 E(-left corner of the rectan-)-.22 E(gle.)144 251.4 Q F2(width)72
268.3 Q(height)72 281.3 Q F1(Specify the width and height, which specif\
y the dimensions of the rectangle.)44.5 E 36 276.95 36 287.95 DL 36
274.95 36 285.95 DL 41.5 286.2 36 286.2 DL 43.5 286.2 38 286.2 DL 49
286.2 43.5 286.2 DL 1.76 -.88(To d)72 324.2 T(ra).88 E 2.75(wt)-.165 G
(he outline of multiple rectangles in a gi)-2.75 E -.165(ve)-.275 G 2.75
(nd).165 G(ra)-2.75 E -.11(wa)-.165 G(ble, use).11 E F0(XDrawRectangles)
3.666 E F1(.).916 E 36 341.95 36 352.95 DL 36 339.95 36 350.95 DL 41.5
338.2 36 338.2 DL 43.5 338.2 38 338.2 DL 49 338.2 43.5 338.2 DL(XDra)72
354.1 Q -1.834(wRectangles \()-.165 F F2(display).916 E F1(,)A F2(d)2.75
E F1(,).916 E F2(gc)2.75 E F1(,).916 E F2 -.407(re)2.75 G(ctangles).407
E F1(,).916 E F2(nr)2.75 E(ectangles)-.407 E F1(\)).916 E(Display *)88.5
367.1 Q F2(display)A F1(;).916 E(Dra)88.5 380.1 Q -.11(wa)-.165 G(ble)
.11 E F2(d)2.75 E F1(;).916 E(GC)88.5 393.1 Q F2(gc)2.75 E F1(;).916 E
(XRectangle)88.5 406.1 Q F2 -.407(re)2.75 G(ctangles).407 E F1 .916([];)
.916 G(int)88.5 419.1 Q F2(nr)2.75 E(ectangles)-.407 E F1(;).916 E F2
(display)72 439.9 Q F1(Speci\214es the connection to the X serv)40.221 E
(er)-.165 E(.)-.605 E F2(d)72 456.8 Q F1(Speci\214es the dra)66.5 E -.11
(wa)-.165 G(ble.).11 E F2(gc)72 473.7 Q F1(Speci\214es the GC.)61.616 E
F2 -.407(re)72 490.6 S(ctangles).407 E F1
(Speci\214es an array of rectangles.)26.581 E F2(nr)72 507.5 Q
(ectangles)-.407 E F1(Speci\214es the number of rectangles in the array)
21.081 E(.)-.715 E 36 503.15 36 514.15 DL 36 501.15 36 512.15 DL 41.5
512.4 36 512.4 DL 43.5 512.4 38 512.4 DL 49 512.4 43.5 512.4 DL(The)72
537.4 Q F0(XDrawRectangle)3.666 E F1(and)3.666 E F0(XDrawRectangles)
3.666 E F1(functions dra)3.666 E 2.75(wt)-.165 G
(he outlines of the speci\214ed rec-)-2.75 E
(tangle or rectangles as if a \214v)72 550.4 Q(e-point)-.165 E F0 -.22
(Po)3.666 G(lyLine).22 E F1
(protocol request were speci\214ed for each rectangle:)3.666 E
([x,y] [x+width,y] [x+width,y+height] [x,y+height] [x,y])99.5 567.3 Q
-.165(Fo)72 584.2 S 2.75(rt).165 G
(he speci\214ed rectangle or rectangles, these functions do not dra)
-2.75 E 2.75(wap)-.165 G(ix)-2.75 E(el more than once.)-.165 E F0
(XDrawRectangles)72.916 597.2 Q F1(dra)3.666 E
(ws the rectangles in the order listed in the array)-.165 E 5.5(.I)-.715
G 2.75(fr)-5.5 G(ectangles intersect,)-2.75 E(the intersecting pix)72
610.2 Q(els are dra)-.165 E(wn multiple times.)-.165 E(Both functions u\
se these GC components: function, plane-mask, line-width, line-style, c\
ap-style,)72 627.1 Q(join-style, \214ll-style, subwindo)72 640.1 Q
(w-mode, clip-x-origin, clip-y-origin, and clip-mask.)-.275 E(The)5.5 E
2.75(ya)-.165 G(lso use)-2.75 E
(these GC mode-dependent components: fore)72 653.1 Q
(ground, background, tile, stipple, tile-stipple-x-ori-)-.165 E
(gin, tile-stipple-y-origin, dash-of)72 666.1 Q(fset, and dash-list.)
-.275 E F0(XDrawRectangle)72.916 683 Q F1(and)3.666 E F0
(XDrawRectangles)3.666 E F1(can generate)3.666 E F0(BadDrawable)3.666 E
F1(,).916 E F0(BadGC)3.666 E F1 2.75(,a).916 G(nd)-2.75 E F0(Bad-)3.666
E(Match)72 696 Q F1(errors.)3.666 E F0(155)279.75 769 Q 0 Cg EP
%%Page: 156 161
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E 2.75(8.3.4. Drawing)72 85 R
(Single and Multiple Ar)2.75 E(cs)-.198 E/F1 11/Times-Roman@0 SF 1.76
-.88(To d)72 118.8 T(ra).88 E 2.75(was)-.165 G(ingle arc in a gi)-2.75 E
-.165(ve)-.275 G 2.75(nd).165 G(ra)-2.75 E -.11(wa)-.165 G(ble, use).11
E F0(XDrawAr)3.666 E(c)-.198 E F1(.).916 E .44 LW 36 136.55 36 147.55 DL
36 134.55 36 145.55 DL 41.5 132.8 36 132.8 DL 43.5 132.8 38 132.8 DL 49
132.8 43.5 132.8 DL(XDra)72 148.7 Q -1.834(wArc \()-.165 F/F2 11
/Times-Italic@0 SF(display).916 E F1(,)A F2(d)2.75 E F1(,).916 E F2(gc)
2.75 E F1(,).916 E F2(x)2.75 E F1(,).916 E F2(y)2.75 E F1(,).916 E F2
(width)2.75 E F1(,).916 E F2(height)2.75 E F1(,).916 E F2(angle1)2.75 E
F1(,).916 E F2(angle2)2.75 E F1(\)).916 E(Display *)88.5 161.7 Q F2
(display)A F1(;).916 E(Dra)88.5 174.7 Q -.11(wa)-.165 G(ble).11 E F2(d)
2.75 E F1(;).916 E(GC)88.5 187.7 Q F2(gc)2.75 E F1(;).916 E(int)88.5
200.7 Q F2(x)2.75 E F1(,).916 E F2(y)2.75 E F1(;).916 E(unsigned int)
88.5 213.7 Q F2(width)2.75 E F1(,).916 E F2(height)2.75 E F1(;).916 E
(int)88.5 226.7 Q F2(angle1)2.75 E F1(,).916 E F2(angle2)2.75 E F1(;)
.916 E F2(display)72 247.5 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2(d)72 264.4 Q F1(Speci\214es the dra)66.5 E -.11(wa)-.165 G(ble.).11 E
F2(gc)72 281.3 Q F1(Speci\214es the GC.)61.616 E F2(x)72 298.2 Q(y)72
311.2 Q F1(Specify the x and y coordinates, which are relati)67.116 E
.33 -.165(ve t)-.275 H 2.75(ot).165 G(he origin of the dra)-2.75 E -.11
(wa)-.165 G(ble).11 E(and specify the upper)144 324.2 Q
(-left corner of the bounding rectangle.)-.22 E F2(width)72 341.1 Q
(height)72 354.1 Q F1
(Specify the width and height, which are the major and minor ax)44.5 E
(es of the arc.)-.165 E F2(angle1)72 371 Q F1
(Speci\214es the start of the arc relati)42.058 E .33 -.165(ve t)-.275 H
2.75(ot).165 G(he three-o'clock position from the center)-2.75 E(,)-.44
E(in units of de)144 384 Q(grees * 64.)-.165 E F2(angle2)72 400.9 Q F1
(Speci\214es the path and e)42.058 E(xtent of the arc relati)-.165 E .33
-.165(ve t)-.275 H 2.75(ot).165 G(he start of the arc, in units of)-2.75
E(de)144 413.9 Q(grees * 64.)-.165 E 36 409.55 36 420.55 DL 36 407.55 36
418.55 DL 41.5 418.8 36 418.8 DL 43.5 418.8 38 418.8 DL 49 418.8 43.5
418.8 DL 1.76 -.88(To d)72 456.8 T(ra).88 E 2.75(wm)-.165 G
(ultiple arcs in a gi)-2.75 E -.165(ve)-.275 G 2.75(nd).165 G(ra)-2.75 E
-.11(wa)-.165 G(ble, use).11 E F0(XDrawAr)3.666 E(cs)-.198 E F1(.).916 E
36 474.55 36 485.55 DL 36 472.55 36 483.55 DL 41.5 470.8 36 470.8 DL
43.5 470.8 38 470.8 DL 49 470.8 43.5 470.8 DL(XDra)72 486.7 Q -1.834
(wArcs \()-.165 F F2(display).916 E F1(,)A F2(d)2.75 E F1(,).916 E F2
(gc)2.75 E F1(,).916 E F2(ar)2.75 E(cs)-.407 E F1(,).916 E F2(nar)2.75 E
(cs)-.407 E F1(\)).916 E(Display *)88.5 499.7 Q F2(display)A F1(;).916 E
(Dra)88.5 512.7 Q -.11(wa)-.165 G(ble).11 E F2(d)2.75 E F1(;).916 E(GC)
88.5 525.7 Q F2(gc)2.75 E F1(;).916 E(XArc *)88.5 538.7 Q F2(ar)A(cs)
-.407 E F1(;).916 E(int)88.5 551.7 Q F2(nar)2.75 E(cs)-.407 E F1(;).916
E F2(display)72 572.5 Q F1(Speci\214es the connection to the X serv)
40.221 E(er)-.165 E(.)-.605 E F2(d)72 589.4 Q F1(Speci\214es the dra)
66.5 E -.11(wa)-.165 G(ble.).11 E F2(gc)72 606.3 Q F1
(Speci\214es the GC.)61.616 E F2(ar)72 623.2 Q(cs)-.407 E F1
(Speci\214es an array of arcs.)53.465 E F2(nar)72 640.1 Q(cs)-.407 E F1
(Speci\214es the number of arcs in the array)47.965 E(.)-.715 E 36
635.75 36 646.75 DL 36 633.75 36 644.75 DL 41.5 645 36 645 DL 43.5 645
38 645 DL 49 645 43.5 645 DL F0(XDrawAr)72.916 683 Q(c)-.198 E F1(dra)
3.666 E(ws a single circular or elliptical arc, and)-.165 E F0(XDrawAr)
3.666 E(cs)-.198 E F1(dra)3.666 E(ws multiple circular or)-.165 E
(elliptical arcs.)72 696 Q
(Each arc is speci\214ed by a rectangle and tw)5.5 E 2.75(oa)-.11 G 2.75
(ngles. The)-2.75 F(center of the circle or)2.75 E
(ellipse is the center of the rectangle, and the major and minor ax)72
709 Q(es are speci\214ed by the width and)-.165 E 2.75(height. Positi)72
722 R .33 -.165(ve a)-.275 H
(ngles indicate counterclockwise motion, and ne).165 E -.055(ga)-.165 G
(ti).055 E .33 -.165(ve a)-.275 H(ngles indicate clockwise).165 E F0
(156)279.75 769 Q 0 Cg EP
%%Page: 157 162
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E/F1 11/Times-Roman@0 SF 2.75
(motion. If)72 85 R(the magnitude of angle2 is greater than 360 de)2.75
E(grees,)-.165 E F0(XDrawAr)3.666 E(c)-.198 E F1(or)3.666 E F0(XDrawAr)
3.666 E(cs)-.198 E F1(truncates it to 360 de)72 98 Q(grees.)-.165 E
-.165(Fo)72 114.9 S 2.75(ra).165 G 2.75(na)-2.75 G(rc speci\214ed as [)
-2.75 E/F2 11/Times-Italic@0 SF(x)3.927 E F1(,).583 E F2(y)3.894 E F1(,)
.352 E F2(width)3.454 E F1(,).308 E F2(height)3.421 E F1(,).748 E F2
(angle)3.443 E F1(1,).198 E F2(angle)3.443 E F1
(2], the origin of the major and minor).198 E(ax)72 133.763 Q
(es is at [)-.165 E F2(x).847 E/F3 11/Symbol SF(+)3.003 E F2(width)3.564
-7.7 M F1(2)-15.01 15.4 M .44 LW 161.672 130.903 136.537 130.903 DL(,)
164.862 133.763 Q F2(y)3.894 E F3(+)2.772 E F2(height)3.531 -7.7 M F1(2)
-16.297 15.4 M 216.98 130.903 188.391 130.903 DL
(], and the in\214nitely thin path describing the entire circle or)218.3
133.763 Q(ellipse intersects the horizontal axis at [)72 156.476 Q F2(x)
.847 E F1(,).583 E F2(y)3.894 E F3(+)2.772 E F2(height)3.531 -7.7 M F1
(2)-16.297 15.4 M 304.573 153.616 275.984 153.616 DL 2.75(]a)305.893
156.476 S(nd [)-2.75 E F2(x).847 E F3(+)3.003 E F2(width)2.244 E F1(,)
.308 E F2(y)3.894 E F3(+)2.772 E F2(height)3.531 -7.7 M F1(2)-16.297
15.4 M 428.499 153.616 399.91 153.616 DL 2.75(]a)429.819 156.476 S
(nd intersects)-2.75 E(the v)72 179.189 Q(ertical axis at [)-.165 E F2
(x).847 E F3(+)3.003 E F2(width)3.564 -7.7 M F1(2)-15.01 15.4 M 201.69
176.329 176.555 176.329 DL(,)204.88 179.189 Q F2(y)3.894 E F1 2.75(]a)
.352 G(nd [)-2.75 E F2(x).847 E F3(+)3.003 E F2(width)3.564 -7.7 M F1(2)
-15.01 15.4 M 288.568 176.329 263.433 176.329 DL(,)291.758 179.189 Q F2
(y)3.894 E F3(+)2.772 E F2(height)2.211 E F1 2.75(]. These).748 F
(coordinates can be frac-)2.75 E
(tional and so are not truncated to discrete coordinates.)72 196.039 Q
(The path should be de\214ned by the ideal)5.5 E(mathematical path.)72
209.039 Q -.165(Fo)5.5 G 2.75(raw).165 G(ide line with line-width l)
-2.75 E 1.43 -.715(w, t)-.11 H
(he bounding outlines for \214lling are gi).715 E -.165(ve)-.275 G(n)
.165 E(by the tw)72 222.039 Q 2.75(oi)-.11 G(n\214nitely thin paths con\
sisting of all points whose perpendicular distance from the)-2.75 E
(path of the circle/ellipse is equal to l)72 235.039 Q
(w/2 \(which may be a fractional v)-.11 E 2.75(alue\). The)-.275 F
(cap-style and)2.75 E(join-style are applied the same as for a line cor\
responding to the tangent of the circle/ellipse at the)72 248.039 Q
(endpoint.)72 261.039 Q -.165(Fo)72 277.939 S 2.75(ra).165 G 2.75(na)
-2.75 G(rc speci\214ed as [)-2.75 E F2(x)3.927 E F1(,).583 E F2(y)3.894
E F1(,).352 E F2(width)3.454 E F1(,).308 E F2(height)3.421 E F1(,).748 E
F2(angle)3.443 E F1(1,).198 E F2(angle)3.443 E F1
(2], the angles must be speci\214ed in the).198 E(ef)72 290.939 Q(fecti)
-.275 E -.165(ve)-.275 G(ly sk).165 E -.275(ew)-.11 G(ed coordinate sys\
tem of the ellipse \(for a circle, the angles and coordinate sys-).275 E
(tems are identical\).)72 303.939 Q
(The relationship between these angles and angles e)5.5 E
(xpressed in the normal)-.165 E(coordinate system of the screen \(as me\
asured with a protractor\) is as follo)72 316.939 Q(ws:)-.275 E(sk)108
347.225 Q -.275(ew)-.11 G(ed-angle).275 E F3(=)3.08 E F2(atan)3.443 E F3
<e6>.264 -6.05 M<e8>-4.224 13.343 M F1 -.33(tan\(normal-angle\) *).176
-7.293 N F2(width)5.841 -7.7 M(height)-26.213 15.4 M 324.546 344.365
295.957 344.365 DL F3<f6>325.866 341.175 Q<f8>-4.224 13.343 M(+)2.596
-7.293 M F2(adjust)2.233 E F1(The sk)72 377.291 Q -.275(ew)-.11 G
(ed-angle and normal-angle are e).275 E
(xpressed in radians \(rather than in de)-.165 E(grees scaled by 64\))
-.165 E(in the range [0,)72 393.404 Q(2)3.08 E/F4 11/Symbol-Slanted SF
(p)-.088 E F1 2.75(]a)1.76 G(nd where atan returns a v)-2.75 E
(alue in the range [)-.275 E F3(-)A F4(p)3.102 -7.7 M F1(2)-4.516 15.4 M
371.827 390.544 364.776 390.544 DL(,)375.017 393.404 Q F4(p)4.312 -7.7 M
F1(2)-4.516 15.4 M 389.218 390.544 382.167 390.544 DL 2.75(]a)390.538
393.404 S(nd adjust is:)-2.75 E 66.5(0f)108 423.767 S
(or normal-angle in the range [0,)-66.5 E F4(p)4.312 -7.7 M F1(2)-4.516
15.4 M 335.023 420.907 327.972 420.907 DL(])336.343 423.767 Q F4(p)
107.912 446.403 Q F1(for normal-angle in the range [)66.709 E F4(p)1.232
-7.7 M F1(2)-4.516 15.4 M 323.693 443.543 316.642 443.543 DL(,)326.883
446.403 Q(3)4.4 -7.7 M F4(p)-.088 E F1(2)-7.266 15.4 M 346.584 443.543
334.033 443.543 DL(])347.904 446.403 Q(2)108 469.039 Q F4(p)-.088 E F1
(for normal-angle in the range [)61.209 E(3)1.32 -7.7 M F4(p)-.088 E F1
(2)-7.266 15.4 M 329.193 466.179 316.642 466.179 DL 3.08(,2)332.383
469.039 S F4(p)-3.168 E F1(])1.76 E -.165(Fo)72 496.289 S 2.75(ra).165 G
.33 -.165(ny g)-2.75 H -2.365 -.275(iv e).165 H 2.75(na).275 G(rc,)-2.75
E F0(XDrawAr)3.666 E(c)-.198 E F1(and)3.666 E F0(XDrawAr)3.666 E(cs)
-.198 E F1(do not dra)3.666 E 2.75(wap)-.165 G(ix)-2.75 E
(el more than once.)-.165 E(If tw)5.5 E 2.75(oa)-.11 G(rcs)-2.75 E(join\
 correctly and if the line-width is greater than zero and the arcs inte\
rsect,)72 509.289 Q F0(XDrawAr)3.666 E(c)-.198 E F1(and)3.666 E F0
(XDrawAr)72.916 522.289 Q(cs)-.198 E F1(do not dra)3.666 E 2.75(wap)
-.165 G(ix)-2.75 E(el more than once.)-.165 E
(Otherwise, the intersecting pix)5.5 E(els of intersect-)-.165 E
(ing arcs are dra)72 535.289 Q(wn multiple times.)-.165 E
(Specifying an arc with one endpoint and a clockwise e)5.5 E(xtent)-.165
E(dra)72 548.289 Q(ws the same pix)-.165 E
(els as specifying the other endpoint and an equi)-.165 E -.275(va)-.275
G(lent counterclockwise e).275 E(xtent,)-.165 E -.165(ex)72 561.289 S
(cept as it af).165 E(fects joins.)-.275 E(If the last point in one arc\
 coincides with the \214rst point in the follo)72 578.189 Q
(wing arc, the tw)-.275 E 2.75(oa)-.11 G(rcs will join)-2.75 E
(correctly)72 591.189 Q 5.5(.I)-.715 G 2.75(ft)-5.5 G(he \214rst point \
in the \214rst arc coincides with the last point in the last arc, the t\
w)-2.75 E 2.75(oa)-.11 G(rcs)-2.75 E(will join correctly)72 604.189 Q
5.5(.B)-.715 G 2.75(ys)-5.5 G
(pecifying one axis to be zero, a horizontal or v)-2.75 E
(ertical line can be dra)-.165 E(wn.)-.165 E(Angles are computed based \
solely on the coordinate system and ignore the aspect ratio.)72 617.189
Q(Both functions use these GC components: function, plane-mask, line-wi\
dth, line-style, cap-style,)72 634.089 Q
(join-style, \214ll-style, subwindo)72 647.089 Q
(w-mode, clip-x-origin, clip-y-origin, and clip-mask.)-.275 E(The)5.5 E
2.75(ya)-.165 G(lso use)-2.75 E
(these GC mode-dependent components: fore)72 660.089 Q
(ground, background, tile, stipple, tile-stipple-x-ori-)-.165 E
(gin, tile-stipple-y-origin, dash-of)72 673.089 Q(fset, and dash-list.)
-.275 E F0(XDrawAr)72.916 689.989 Q(c)-.198 E F1(and)3.666 E F0(XDrawAr)
3.666 E(cs)-.198 E F1(can generate)3.666 E F0(BadDrawable)3.666 E F1(,)
.916 E F0(BadGC)3.666 E F1 2.75(,a).916 G(nd)-2.75 E F0(BadMatch)3.666 E
F1(errors.)3.666 E F0(157)279.75 769 Q 0 Cg EP
%%Page: 158 163
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E 2.75(8.4. Filling)72 85 R(Ar)2.75 E
(eas)-.198 E/F1 11/Times-Roman@0 SF(Xlib pro)72 101.9 Q
(vides functions that you can use to \214ll:)-.165 E 23.65<8341>72 118.8
S(single rectangle or multiple rectangles)-20.9 E 23.65<8341>72 135.7 S
(single polygon)-20.9 E 23.65<8341>72 152.6 S
(single arc or multiple arcs)-20.9 E F0 2.75(8.4.1. Filling)72 178.6 R
(Single and Multiple Rectangles)2.75 E F1 1.76 -.88(To \214)72 212.4 T
(ll a single rectangular area in a gi).88 E -.165(ve)-.275 G 2.75(nd)
.165 G(ra)-2.75 E -.11(wa)-.165 G(ble, use).11 E F0(XFillRectangle)3.666
E F1(.).916 E .44 LW 36 230.15 36 241.15 DL 36 228.15 36 239.15 DL 41.5
226.4 36 226.4 DL 43.5 226.4 38 226.4 DL 49 226.4 43.5 226.4 DL -1.834
(XFillRectangle \()72 242.3 R/F2 11/Times-Italic@0 SF(display).916 E F1
(,)A F2(d)2.75 E F1(,).916 E F2(gc)2.75 E F1(,).916 E F2(x)2.75 E F1(,)
.916 E F2(y)2.75 E F1(,).916 E F2(width)2.75 E F1(,).916 E F2(height)
2.75 E F1(\)).916 E(Display *)88.5 255.3 Q F2(display)A F1(;).916 E(Dra)
88.5 268.3 Q -.11(wa)-.165 G(ble).11 E F2(d)2.75 E F1(;).916 E(GC)88.5
281.3 Q F2(gc)2.75 E F1(;).916 E(int)88.5 294.3 Q F2(x)2.75 E F1(,).916
E F2(y)2.75 E F1(;).916 E(unsigned int)88.5 307.3 Q F2(width)2.75 E F1
(,).916 E F2(height)2.75 E F1(;).916 E F2(display)72 328.1 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2(d)72 345 Q F1(Speci\214es the dra)66.5 E -.11(wa)-.165 G(ble.).11 E
F2(gc)72 361.9 Q F1(Speci\214es the GC.)61.616 E F2(x)72 378.8 Q(y)72
391.8 Q F1(Specify the x and y coordinates, which are relati)67.116 E
.33 -.165(ve t)-.275 H 2.75(ot).165 G(he origin of the dra)-2.75 E -.11
(wa)-.165 G(ble).11 E(and specify the upper)144 404.8 Q
(-left corner of the rectangle.)-.22 E F2(width)72 421.7 Q(height)72
434.7 Q F1(Specify the width and height, which are the dimensions of th\
e rectangle to be)44.5 E(\214lled.)144 447.7 Q 36 443.35 36 454.35 DL 36
441.35 36 452.35 DL 41.5 452.6 36 452.6 DL 43.5 452.6 38 452.6 DL 49
452.6 43.5 452.6 DL 1.76 -.88(To \214)72 490.6 T
(ll multiple rectangular areas in a gi).88 E -.165(ve)-.275 G 2.75(nd)
.165 G(ra)-2.75 E -.11(wa)-.165 G(ble, use).11 E F0(XFillRectangles)
3.666 E F1(.).916 E 36 508.35 36 519.35 DL 36 506.35 36 517.35 DL 41.5
504.6 36 504.6 DL 43.5 504.6 38 504.6 DL 49 504.6 43.5 504.6 DL -1.834
(XFillRectangles \()72 520.5 R F2(display).916 E F1(,)A F2(d)2.75 E F1
(,).916 E F2(gc)2.75 E F1(,).916 E F2 -.407(re)2.75 G(ctangles).407 E F1
(,).916 E F2(nr)2.75 E(ectangles)-.407 E F1(\)).916 E(Display *)88.5
533.5 Q F2(display)A F1(;).916 E(Dra)88.5 546.5 Q -.11(wa)-.165 G(ble)
.11 E F2(d)2.75 E F1(;).916 E(GC)88.5 559.5 Q F2(gc)2.75 E F1(;).916 E
(XRectangle *)88.5 572.5 Q F2 -.407(re)C(ctangles).407 E F1(;).916 E
(int)88.5 585.5 Q F2(nr)2.75 E(ectangles)-.407 E F1(;).916 E F2(display)
72 606.3 Q F1(Speci\214es the connection to the X serv)40.221 E(er)-.165
E(.)-.605 E F2(d)72 623.2 Q F1(Speci\214es the dra)66.5 E -.11(wa)-.165
G(ble.).11 E F2(gc)72 640.1 Q F1(Speci\214es the GC.)61.616 E F2 -.407
(re)72 657 S(ctangles).407 E F1(Speci\214es an array of rectangles.)
26.581 E F2(nr)72 673.9 Q(ectangles)-.407 E F1
(Speci\214es the number of rectangles in the array)21.081 E(.)-.715 E 36
669.55 36 680.55 DL 36 667.55 36 678.55 DL 41.5 678.8 36 678.8 DL 43.5
678.8 38 678.8 DL 49 678.8 43.5 678.8 DL(The)72 703.8 Q F0
(XFillRectangle)3.666 E F1(and)3.666 E F0(XFillRectangles)3.666 E F1
(functions \214ll the speci\214ed rectangle or rectangles as if)3.666 E
2.75(af)72 716.8 S(our)-2.75 E(-point)-.22 E F0(FillP)3.666 E(olygon)
-.22 E F1(protocol request were speci\214ed for each rectangle:)3.666 E
F0(158)279.75 769 Q 0 Cg EP
%%Page: 159 164
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E/F1 11/Times-Roman@0 SF
([x,y] [x+width,y] [x+width,y+height] [x,y+height])108 85 Q(Each functi\
on uses the x and y coordinates, width and height dimensions, and GC yo\
u specify)72 108.4 Q(.)-.715 E F0(XFillRectangles)72.916 125.3 Q F1
(\214lls the rectangles in the order listed in the array)3.666 E 5.5(.F)
-.715 G(or an)-5.665 E 2.75(yg)-.165 G -2.365 -.275(iv e)-2.75 H 2.75
(nr).275 G(ectangle,)-2.75 E F0(XFillRectangle)72.916 138.3 Q F1(and)
3.666 E F0(XFillRectangles)3.666 E F1(do not dra)3.666 E 2.75(wap)-.165
G(ix)-2.75 E(el more than once.)-.165 E(If rectangles inter)5.5 E(-)-.22
E(sect, the intersecting pix)72 151.3 Q(els are dra)-.165 E
(wn multiple times.)-.165 E(Both functions use these GC components: fun\
ction, plane-mask, \214ll-style, subwindo)72 168.2 Q(w-mode,)-.275 E
(clip-x-origin, clip-y-origin, and clip-mask.)72 181.2 Q(The)5.5 E 2.75
(ya)-.165 G(lso use these GC mode-dependent components:)-2.75 E(fore)72
194.2 Q(ground, background, tile, stipple, tile-stipple-x-origin, and t\
ile-stipple-y-origin.)-.165 E F0(XFillRectangle)72.916 211.1 Q F1(and)
3.666 E F0(XFillRectangles)3.666 E F1(can generate)3.666 E F0
(BadDrawable)3.666 E F1(,).916 E F0(BadGC)3.666 E F1 2.75(,a).916 G(nd)
-2.75 E F0(BadMatch)3.666 E F1(errors.)72 224.1 Q F0 2.75
(8.4.2. Filling)72 250.1 R 2.75(aS)2.75 G(ingle P)-2.75 E(olygon)-.22 E
F1 1.76 -.88(To \214)72 280 T(ll a polygon area in a gi).88 E -.165(ve)
-.275 G 2.75(nd).165 G(ra)-2.75 E -.11(wa)-.165 G(ble, use).11 E F0
(XFillP)3.666 E(olygon)-.22 E F1(.).916 E .44 LW 36 297.75 36 308.75 DL
36 295.75 36 306.75 DL 41.5 294 36 294 DL 43.5 294 38 294 DL 49 294 43.5
294 DL -1.834(XFillPolygon \()72 309.9 R/F2 11/Times-Italic@0 SF
(display).916 E F1(,)A F2(d)2.75 E F1(,).916 E F2(gc)2.75 E F1(,).916 E
F2(points)2.75 E F1(,).916 E F2(npoints)2.75 E F1(,).916 E F2(shape)2.75
E F1(,).916 E F2(mode)2.75 E F1(\)).916 E(Display *)88.5 322.9 Q F2
(display)A F1(;).916 E(Dra)88.5 335.9 Q -.11(wa)-.165 G(ble).11 E F2(d)
2.75 E F1(;).916 E(GC)88.5 348.9 Q F2(gc)2.75 E F1(;).916 E(XPoint *)
88.5 361.9 Q F2(points)A F1(;).916 E(int)88.5 374.9 Q F2(npoints)2.75 E
F1(;).916 E(int)88.5 387.9 Q F2(shape)2.75 E F1(;).916 E(int)88.5 400.9
Q F2(mode)2.75 E F1(;).916 E F2(display)72 421.7 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2(d)72 438.6 Q F1(Speci\214es the dra)66.5 E -.11(wa)-.165 G(ble.).11 E
F2(gc)72 455.5 Q F1(Speci\214es the GC.)61.616 E F2(points)72 472.4 Q F1
(Speci\214es an array of points.)45.105 E F2(npoints)72 489.3 Q F1
(Speci\214es the number of points in the array)39.605 E(.)-.715 E F2
(shape)72 506.2 Q F1(Speci\214es a shape that helps the serv)46.337 E
(er to impro)-.165 E .33 -.165(ve p)-.165 H 2.75(erformance. Y).165 F
(ou can pass)-1.21 E F0(Complex)144.916 519.2 Q F1(,).916 E F0(Con)3.666
E -.11(ve)-.44 G(x).11 E F1 2.75(,o).916 G(r)-2.75 E F0(Noncon)3.666 E
-.11(ve)-.44 G(x).11 E F1(.).916 E F2(mode)72 536.1 Q F1
(Speci\214es the coordinate mode.)48.174 E -1.21(Yo)5.5 G 2.75(uc)1.21 G
(an pass)-2.75 E F0(CoordModeOrigin)3.666 E F1(or)3.666 E F0(Coord-)
3.666 E(ModePr)144 549.1 Q -.165(ev)-.198 G(ious).165 E F1(.).916 E 36
544.75 36 555.75 DL 36 542.75 36 553.75 DL 41.5 554 36 554 DL 43.5 554
38 554 DL 49 554 43.5 554 DL F0(XFillP)72.916 579 Q(olygon)-.22 E F1
(\214lls the re)3.666 E(gion closed by the speci\214ed path.)-.165 E
(The path is closed automatically if the)5.5 E
(last point in the list does not coincide with the \214rst point.)72 592
Q F0(XFillP)6.416 E(olygon)-.22 E F1(does not dra)3.666 E 2.75(wap)-.165
G(ix)-2.75 E(el of)-.165 E(the re)72 605 Q(gion more than once.)-.165 E
F0(CoordModeOrigin)6.416 E F1(treats all coordinates as relati)3.666 E
.33 -.165(ve t)-.275 H 2.75(ot).165 G(he origin, and)-2.75 E F0
(CoordModePr)72.916 618 Q -.165(ev)-.198 G(ious).165 E F1
(treats all coordinates after the \214rst as relati)3.666 E .33 -.165
(ve t)-.275 H 2.75(ot).165 G(he pre)-2.75 E(vious point.)-.275 E
(Depending on the speci\214ed shape, the follo)72 634.9 Q(wing occurs:)
-.275 E 23.65<8349>72 651.8 S 2.75(fs)-23.65 G(hape is)-2.75 E F0
(Complex)3.666 E F1 2.75(,t).916 G(he path may self-intersect.)-2.75 E
(Note that contiguous coincident points in)5.5 E
(the path are not treated as self-intersection.)99.5 664.8 Q 23.65<8349>
72 681.7 S 2.75(fs)-23.65 G(hape is)-2.75 E F0(Con)3.666 E -.11(ve)-.44
G(x).11 E F1 2.75(,f).916 G(or e)-2.75 E -.165(ve)-.275 G
(ry pair of points inside the polygon, the line se).165 E
(gment connecting)-.165 E(them does not intersect the path.)99.5 694.7 Q
(If kno)5.5 E(wn by the client, specifying)-.275 E F0(Con)3.666 E -.11
(ve)-.44 G(x).11 E F1(can impro)3.666 E -.165(ve)-.165 G 2.75
(performance. If)99.5 707.7 R(you specify)2.75 E F0(Con)3.666 E -.11(ve)
-.44 G(x).11 E F1(for a path that is not con)3.666 E -.165(vex)-.44 G
2.75(,t).165 G(he graphics results are)-2.75 E(unde\214ned.)99.5 720.7 Q
F0(159)279.75 769 Q 0 Cg EP
%%Page: 160 165
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E/F1 11/Times-Roman@0 SF 23.65<8349>72
85 S 2.75(fs)-23.65 G(hape is)-2.75 E F0(Noncon)3.666 E -.11(ve)-.44 G
(x).11 E F1 2.75(,t).916 G(he path does not self-intersect, b)-2.75 E
(ut the shape is not wholly con)-.22 E -.165(vex)-.44 G(.).165 E(If kno)
99.5 98 Q(wn by the client, specifying)-.275 E F0(Noncon)3.666 E -.11
(ve)-.44 G(x).11 E F1(instead of)3.666 E F0(Complex)3.666 E F1
(may impro)3.666 E .33 -.165(ve p)-.165 H(erfor).165 E(-)-.22 E 2.75
(mance. If)99.5 111 R(you specify)2.75 E F0(Noncon)3.666 E -.11(ve)-.44
G(x).11 E F1(for a self-intersecting path, the graphics results are)
3.666 E(unde\214ned.)99.5 124 Q
(The \214ll-rule of the GC controls the \214lling beha)72 140.9 Q
(vior of self-intersecting polygons.)-.22 E(This function uses these GC\
 components: function, plane-mask, \214ll-style, \214ll-rule, subwindo)
72 157.8 Q(w-)-.275 E
(mode, clip-x-origin, clip-y-origin, and clip-mask.)72 170.8 Q
(It also uses these GC mode-dependent compo-)5.5 E(nents: fore)72 183.8
Q(ground, background, tile, stipple, tile-stipple-x-origin, and tile-st\
ipple-y-origin.)-.165 E F0(XFillP)72.916 200.7 Q(olygon)-.22 E F1
(can generate)3.666 E F0(BadDrawable)3.666 E F1(,).916 E F0(BadGC)3.666
E F1(,).916 E F0(BadMatch)3.666 E F1 2.75(,a).916 G(nd)-2.75 E F0(BadV)
3.666 E(alue)-1.012 E F1(errors.)3.666 E F0 2.75(8.4.3. Filling)72 226.7
R(Single and Multiple Ar)2.75 E(cs)-.198 E F1 1.76 -.88(To \214)72 243.6
T(ll a single arc in a gi).88 E -.165(ve)-.275 G 2.75(nd).165 G(ra)-2.75
E -.11(wa)-.165 G(ble, use).11 E F0(XFillAr)3.666 E(c)-.198 E F1(.).916
E .44 LW 36 261.35 36 272.35 DL 36 259.35 36 270.35 DL 41.5 257.6 36
257.6 DL 43.5 257.6 38 257.6 DL 49 257.6 43.5 257.6 DL -1.834
(XFillArc \()72 273.5 R/F2 11/Times-Italic@0 SF(display).916 E F1(,)A F2
(d)2.75 E F1(,).916 E F2(gc)2.75 E F1(,).916 E F2(x)5.5 E F1(,).916 E F2
(y)2.75 E F1(,).916 E F2(width)2.75 E F1(,).916 E F2(height)2.75 E F1(,)
.916 E F2(angle1)2.75 E F1(,).916 E F2(angle2)2.75 E F1(\)).916 E
(Display *)88.5 286.5 Q F2(display)A F1(;).916 E(Dra)88.5 299.5 Q -.11
(wa)-.165 G(ble).11 E F2(d)2.75 E F1(;).916 E(GC)88.5 312.5 Q F2(gc)2.75
E F1(;).916 E(int)88.5 325.5 Q F2(x)2.75 E F1(,).916 E F2(y)2.75 E F1(;)
.916 E(unsigned int)88.5 338.5 Q F2(width)2.75 E F1(,).916 E F2(height)
2.75 E F1(;).916 E(int)88.5 351.5 Q F2(angle1)2.75 E F1(,).916 E F2
(angle2)2.75 E F1(;).916 E F2(display)72 372.3 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2(d)72 389.2 Q F1(Speci\214es the dra)66.5 E -.11(wa)-.165 G(ble.).11 E
F2(gc)72 406.1 Q F1(Speci\214es the GC.)61.616 E F2(x)72 423 Q(y)72 436
Q F1(Specify the x and y coordinates, which are relati)67.116 E .33
-.165(ve t)-.275 H 2.75(ot).165 G(he origin of the dra)-2.75 E -.11(wa)
-.165 G(ble).11 E(and specify the upper)144 449 Q
(-left corner of the bounding rectangle.)-.22 E F2(width)72 465.9 Q
(height)72 478.9 Q F1
(Specify the width and height, which are the major and minor ax)44.5 E
(es of the arc.)-.165 E F2(angle1)72 495.8 Q F1
(Speci\214es the start of the arc relati)42.058 E .33 -.165(ve t)-.275 H
2.75(ot).165 G(he three-o'clock position from the center)-2.75 E(,)-.44
E(in units of de)144 508.8 Q(grees * 64.)-.165 E F2(angle2)72 525.7 Q F1
(Speci\214es the path and e)42.058 E(xtent of the arc relati)-.165 E .33
-.165(ve t)-.275 H 2.75(ot).165 G(he start of the arc, in units of)-2.75
E(de)144 538.7 Q(grees * 64.)-.165 E 36 534.35 36 545.35 DL 36 532.35 36
543.35 DL 41.5 543.6 36 543.6 DL 43.5 543.6 38 543.6 DL 49 543.6 43.5
543.6 DL 1.76 -.88(To \214)72 581.6 T(ll multiple arcs in a gi).88 E
-.165(ve)-.275 G 2.75(nd).165 G(ra)-2.75 E -.11(wa)-.165 G(ble, use).11
E F0(XFillAr)3.666 E(cs)-.198 E F1(.).916 E F0(160)279.75 769 Q 0 Cg EP
%%Page: 161 166
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E .44 LW 36 76.75 36 87.75 DL 36 74.75
36 85.75 DL 41.5 73 36 73 DL 43.5 73 38 73 DL 49 73 43.5 73 DL/F1 11
/Times-Roman@0 SF -1.834(XFillArcs \()72 88.9 R/F2 11/Times-Italic@0 SF
(display).916 E F1(,)A F2(d)2.75 E F1(,).916 E F2(gc)2.75 E F1(,).916 E
F2(ar)2.75 E(cs)-.407 E F1(,).916 E F2(nar)2.75 E(cs)-.407 E F1(\)).916
E(Display *)88.5 101.9 Q F2(display)A F1(;).916 E(Dra)88.5 114.9 Q -.11
(wa)-.165 G(ble).11 E F2(d)2.75 E F1(;).916 E(GC)88.5 127.9 Q F2(gc)2.75
E F1(;).916 E(XArc *)88.5 140.9 Q F2(ar)A(cs)-.407 E F1(;).916 E(int)
88.5 153.9 Q F2(nar)2.75 E(cs)-.407 E F1(;).916 E F2(display)72 174.7 Q
F1(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605
E F2(d)72 191.6 Q F1(Speci\214es the dra)66.5 E -.11(wa)-.165 G(ble.).11
E F2(gc)72 208.5 Q F1(Speci\214es the GC.)61.616 E F2(ar)72 225.4 Q(cs)
-.407 E F1(Speci\214es an array of arcs.)53.465 E F2(nar)72 242.3 Q(cs)
-.407 E F1(Speci\214es the number of arcs in the array)47.965 E(.)-.715
E 36 237.95 36 248.95 DL 36 235.95 36 246.95 DL 41.5 247.2 36 247.2 DL
43.5 247.2 38 247.2 DL 49 247.2 43.5 247.2 DL -.165(Fo)72 272.2 S 2.75
(re).165 G(ach arc,)-2.75 E F0(XFillAr)3.666 E(c)-.198 E F1(or)3.666 E
F0(XFillAr)3.666 E(cs)-.198 E F1(\214lls the re)3.666 E
(gion closed by the in\214nitely thin path described)-.165 E(by the spe\
ci\214ed arc and, depending on the arc-mode speci\214ed in the GC, one \
or tw)72 285.2 Q 2.75(ol)-.11 G(ine se)-2.75 E(g-)-.165 E 2.75(ments. F)
72 298.2 R(or)-.165 E F0(Ar)3.666 E(cChord)-.198 E F1 2.75(,t).916 G
(he single line se)-2.75 E
(gment joining the endpoints of the arc is used.)-.165 E -.165(Fo)5.5 G
(r).165 E F0(Ar)72.916 311.2 Q(cPieSlice)-.198 E F1 2.75(,t).916 G
(he tw)-2.75 E 2.75(ol)-.11 G(ine se)-2.75 E
(gments joining the endpoints of the arc with the center point are)-.165
E(used.)72 324.2 Q F0(XFillAr)6.416 E(cs)-.198 E F1
(\214lls the arcs in the order listed in the array)3.666 E 5.5(.F)-.715
G(or an)-5.665 E 2.75(yg)-.165 G -2.365 -.275(iv e)-2.75 H 2.75(na).275
G(rc,)-2.75 E F0(XFillAr)3.666 E(c)-.198 E F1(and)3.666 E F0(XFillAr)
72.916 337.2 Q(cs)-.198 E F1(do not dra)3.666 E 2.75(wap)-.165 G(ix)
-2.75 E(el more than once.)-.165 E(If re)5.5 E
(gions intersect, the intersecting pix)-.165 E(els are)-.165 E(dra)72
350.2 Q(wn multiple times.)-.165 E(Both functions use these GC componen\
ts: function, plane-mask, \214ll-style, arc-mode, subwindo)72 367.1 Q
(w-)-.275 E(mode, clip-x-origin, clip-y-origin, and clip-mask.)72 380.1
Q(The)5.5 E 2.75(ya)-.165 G(lso use these GC mode-dependent com-)-2.75 E
(ponents: fore)72 393.1 Q(ground, background, tile, stipple, tile-stipp\
le-x-origin, and tile-stipple-y-origin.)-.165 E F0(XFillAr)72.916 410 Q
(c)-.198 E F1(and)3.666 E F0(XFillAr)3.666 E(cs)-.198 E F1(can generate)
3.666 E F0(BadDrawable)3.666 E F1(,).916 E F0(BadGC)3.666 E F1 2.75(,a)
.916 G(nd)-2.75 E F0(BadMatch)3.666 E F1(errors.)3.666 E F0 2.75(8.5. F)
72 436 R(ont Metrics)-.275 E F1 2.75(Af)72 452.9 S(ont is a graphical d\
escription of a set of characters that are used to increase ef)-2.75 E
(\214cienc)-.275 E 2.75(yw)-.165 G(hen-)-2.75 E -2.365 -.275(ev e)72
465.9 T 2.75(ras).275 G
(et of small, similar sized patterns are repeatedly used.)-2.75 E
(This section discusses ho)72 482.8 Q 2.75(wt)-.275 G(o:)-2.75 E 23.65
<834c>72 499.7 S(oad and free fonts)-23.65 E 23.65<834f>72 516.6 S
(btain and free font names)-23.65 E 23.65<8343>72 533.5 S
(ompute character string sizes)-23.65 E 23.65<8343>72 550.4 S
(ompute logical e)-23.65 E(xtents)-.165 E 23.65<8351>72 567.3 S
(uery character string sizes)-23.65 E(The X serv)72 584.2 Q
(er loads fonts whene)-.165 E -.165(ve)-.275 G 2.75(rap).165 G
(rogram requests a ne)-2.75 E 2.75(wf)-.275 G 2.75(ont. The)-2.75 F
(serv)2.75 E(er can cache fonts for)-.165 E(quick lookup.)72 597.2 Q
-.165(Fo)5.5 G(nts are global across all screens in a serv).165 E(er)
-.165 E 5.5(.S)-.605 G -2.365 -.275(ev e)-5.5 H(ral le).275 E -.165(ve)
-.275 G(ls are possible when).165 E(dealing with fonts.)72 610.2 Q
(Most applications simply use)5.5 E F0(XLoadQueryF)3.666 E(ont)-.275 E
F1(to load a font and query the)3.666 E(font metrics.)72 623.2 Q
(Characters in fonts are re)72 640.1 Q -.055(ga)-.165 G(rded as masks.)
.055 E(Except for image te)5.5 E(xt requests, the only pix)-.165 E
(els modi-)-.165 E
(\214ed are those in which bits are set to 1 in the character)72 653.1 Q
5.5(.T)-.605 G(his means that it mak)-5.5 E(es sense to dra)-.11 E(w)
-.165 E(te)72 666.1 Q(xt using stipples or tiles \(for e)-.165 E
(xample, man)-.165 E 2.75(ym)-.165 G(enus gray-out unusable entries\).)
-2.75 E F0(161)279.75 769 Q 0 Cg EP
%%Page: 162 167
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E .44 LW 36 76.75 36 87.75 DL 36 74.75
36 85.75 DL 41.5 73 36 73 DL 43.5 73 38 73 DL 49 73 43.5 73 DL/F1 11
/Times-Roman@0 SF(The)72 85 Q F0(XF)3.666 E(ontStruct)-.275 E F1(struct\
ure contains all of the information for the font and consists of the fo\
nt-)3.666 E(speci\214c information as well as a pointer to an array of)
72 98 Q F0(XCharStruct)3.666 E F1(structures for the characters)3.666 E
(contained in the font.)72 111 Q(The)5.5 E F0(XF)3.666 E(ontStruct)-.275
E F1(,).916 E F0(XF)3.666 E(ontPr)-.275 E(op)-.198 E F1 2.75(,a).916 G
(nd)-2.75 E F0(XCharStruct)3.666 E F1(structures contain:)3.666 E
(typedef struct {)72 134.4 Q(short lbearing;)108 147.4 Q
(/* origin to left edge of raster */)116.145 E(short rbearing;)108 160.4
Q(/* origin to right edge of raster */)115.54 E(short width;)108 173.4 Q
(/* adv)127.134 E(ance to ne)-.275 E(xt char')-.165 E 2.75(so)-.605 G
(rigin */)-2.75 E(short ascent;)108 186.4 Q
(/* baseline to top edge of raster */)124.703 E(short descent;)108 199.4
Q(/* baseline to bottom edge of raster */)119.203 E
(unsigned short attrib)108 212.4 Q 66.249(utes; /*)-.22 F
(per char \215ags \(not prede\214ned\) */)2.75 E 2.75(}X)72 225.4 S
(CharStruct;)-2.75 E(typedef struct {)72 255.3 Q 8.192(Atom name;)108
268.3 R(unsigned long card32;)108 281.3 Q 2.75(}X)72 294.3 S -.165(Fo)
-2.75 G(ntProp;).165 E(typedef struct {)72 324.2 Q
(/* normal 16 bit characters are tw)147.789 E 2.75(ob)-.11 G(ytes */)
-2.75 E(unsigned char byte1;)83 337.2 Q(unsigned char byte2;)83 350.2 Q
2.75(}X)72 363.2 S(Char2b;)-2.75 E(typedef struct {)72 393.1 Q
(XExtData *e)108 406.1 Q 84.85(xt_data; /*)-.165 F(hook for e)2.75 E
(xtension to hang data */)-.165 E -.165(Fo)108 419.1 S(nt \214d;).165 E
(/* F)142.567 E(ont id for this font */)-.165 E(unsigned direction;)108
432.1 Q(/* hint about the direction font is painted */)95.366 E
(unsigned min_char_or_byte2;)108 445.1 Q(/* \214rst character */)48.319
E(unsigned max_char_or_byte2;)108 458.1 Q(/* last character */)46.493 E
(unsigned min_byte1;)108 471.1 Q(/* \214rst ro)87.413 E 2.75(wt)-.275 G
(hat e)-2.75 E(xists */)-.165 E(unsigned max_byte1;)108 484.1 Q
(/* last ro)85.587 E 2.75(wt)-.275 G(hat e)-2.75 E(xists */)-.165 E
(Bool all_chars_e)108 497.1 Q 84.223(xist; /*)-.165 F
(\215ag if all characters ha)2.75 E .33 -.165(ve n)-.22 H
(onzero size */).165 E(unsigned def)108 510.1 Q 76.853(ault_char; /*)
-.11 F(char to print for unde\214ned character */)2.75 E
(int n_properties;)108 523.1 Q(/* ho)107.587 E 2.75(wm)-.275 G(an)-2.75
E 2.75(yp)-.165 G(roperties there are */)-2.75 E(XF)108 536.1 Q
(ontProp *properties;)-.165 E
(/* pointer to array of additional properties */)75.973 E
(XCharStruct min_bounds;)108 549.1 Q(/* minimum bounds o)64.192 E -.165
(ve)-.165 G 2.75(ra).165 G(ll e)-2.75 E(xisting char */)-.165 E
(XCharStruct max_bounds;)108 562.1 Q(/* maximum bounds o)62.366 E -.165
(ve)-.165 G 2.75(ra).165 G(ll e)-2.75 E(xisting char */)-.165 E
(XCharStruct *per_char;)108 575.1 Q
(/* \214rst_char to last_char information */)74.609 E(int ascent;)108
588.1 Q(/* logical e)135.087 E(xtent abo)-.165 E .33 -.165(ve b)-.165 H
(aseline for spacing */).165 E(int descent;)108 601.1 Q
(/* logical descent belo)129.587 E 2.75(wb)-.275 G
(aseline for spacing */)-2.75 E 2.75(}X)72 614.1 S -.165(Fo)-2.75 G
(ntStruct;).165 E 36 616.25 36 627.25 DL 36 614.25 36 625.25 DL 41.5
625.5 36 625.5 DL 43.5 625.5 38 625.5 DL 49 625.5 43.5 625.5 DL 2.75(Xs)
72 650.5 S(upports single byte/character)-2.75 E 2.75(,t)-.44 G .22 -.11
(wo b)-2.75 H(ytes/character matrix, and 16-bit character te).11 E
(xt operations.)-.165 E(Note that an)72 663.5 Q 2.75(yo)-.165 G 2.75(ft)
-2.75 G(hese forms can be used with a font, b)-2.75 E
(ut a single byte/character te)-.22 E(xt request can)-.165 E
(only specify a single byte \(that is, the \214rst ro)72 676.5 Q 2.75
(wo)-.275 G 2.75(fa2)-2.75 G(-byte font\).)-2.75 E -1.21(Yo)5.5 G 2.75
(us)1.21 G(hould vie)-2.75 E 2.75(w2)-.275 G(-byte fonts as)-2.75 E 2.75
(at)72 689.5 S -.11(wo)-2.75 G(-dimensional matrix of de\214ned charact\
ers: byte1 speci\214es the range of de\214ned ro).11 E(ws and)-.275 E
(byte2 de\214nes the range of de\214ned columns of the font.)72 702.5 Q
(Single byte/character fonts ha)5.5 E .33 -.165(ve o)-.22 H(ne ro).165 E
(w)-.275 E(de\214ned, and the byte2 range speci\214ed in the structure \
de\214nes a range of characters.)72 715.5 Q F0(162)279.75 769 Q 0 Cg EP
%%Page: 163 168
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E/F1 11/Times-Roman@0 SF
(The bounding box of a character is de\214ned by the)72 85 Q F0
(XCharStruct)3.666 E F1(of that character)3.666 E 5.5(.W)-.605 G
(hen charac-)-5.5 E(ters are absent from a font, the def)72 98 Q
(ault_char is used.)-.11 E(When fonts ha)5.5 E .33 -.165(ve a)-.22 H
(ll characters of the same).165 E(size, only the information in the)72
111 Q F0(XF)3.666 E(ontStruct)-.275 E F1(min and max bounds are used.)
3.666 E(The members of the)72 127.9 Q F0(XF)3.666 E(ontStruct)-.275 E F1
(ha)3.666 E .33 -.165(ve t)-.22 H(he follo).165 E(wing semantics:)-.275
E 23.65<8354>72 144.8 S(he direction member can be either)-23.65 E F0
-.275(Fo)3.666 G(ntLeftT).275 E(oRight)-1.012 E F1(or)3.666 E F0 -.275
(Fo)3.666 G(ntRightT).275 E(oLeft)-1.012 E F1 5.5(.I).916 G 2.75(ti)-5.5
G 2.75(sj)-2.75 G(ust a)-2.75 E(hint as to whether most)99.5 157.8 Q F0
(XCharStruct)3.666 E F1(elements ha)3.666 E .33 -.165(ve a p)-.22 H
(ositi).165 E .33 -.165(ve \()-.275 H F0 -.275(Fo)1.081 G(ntLeftT).275 E
(oRight)-1.012 E F1 2.75(\)o).916 G 2.75(ra)-2.75 G(ne)99.5 170.8 Q
-.055(ga)-.165 G(ti).055 E .33 -.165(ve \()-.275 H F0 -.275(Fo)1.081 G
(ntRightT).275 E(oLeft)-1.012 E F1 2.75(\)c).916 G
(haracter width metric.)-2.75 E(The core protocol de\214nes no support)
5.5 E(for v)99.5 183.8 Q(ertical te)-.165 E(xt.)-.165 E 23.65<8349>72
200.7 S 2.75(ft)-23.65 G(he min_byte1 and max_byte1 members are both ze\
ro, min_char_or_byte2 speci\214es the)-2.75 E(linear character inde)99.5
213.7 Q 2.75(xc)-.165 G
(orresponding to the \214rst element of the per_char array)-2.75 E 2.75
(,a)-.715 G(nd)-2.75 E
(max_char_or_byte2 speci\214es the linear character inde)99.5 226.7 Q
2.75(xo)-.165 G 2.75(ft)-2.75 G(he last element.)-2.75 E(If either min_\
byte1 or max_byte1 are nonzero, both min_char_or_byte2 and)99.5 243.6 Q
(max_char_or_byte2 are less than 256, and the 2-byte character inde)99.5
256.6 Q 2.75(xv)-.165 G(alues corresponding)-3.025 E
(to the per_char array element N \(counting from 0\) are:)99.5 269.6 Q
(byte1 = N/D + min_byte1)127 286.5 Q(byte2 = N\\D + min_char_or_byte2)
127 299.5 Q(where:)99.5 316.4 Q 2.75(D=m)121.5 333.3 S
(ax_char_or_byte2 \255 min_char_or_byte2 + 1)-2.75 E 2.75(/=i)121.5
346.3 S(nte)-2.75 E(ger di)-.165 E(vision)-.275 E 2.75(\\=i)121.5 359.3
S(nte)-2.75 E(ger modulus)-.165 E 23.65<8349>72 376.2 S 2.75(ft)-23.65 G
(he per_char pointer is NULL, all glyphs between the \214rst and last c\
haracter inde)-2.75 E -.165(xe)-.165 G(s).165 E(inclusi)99.5 389.2 Q .33
-.165(ve h)-.275 H -2.475 -.22(av e).165 H(the same information, as gi)
2.97 E -.165(ve)-.275 G 2.75(nb).165 G 2.75(yb)-2.75 G
(oth min_bounds and max_bounds.)-2.75 E 23.65<8349>72 406.1 S 2.75(fa)
-23.65 G(ll_chars_e)-2.75 E(xist is)-.165 E F0 -.814(Tr)3.666 G(ue).814
E F1 2.75(,a).916 G(ll characters in the per_char array ha)-2.75 E .33
-.165(ve n)-.22 H(onzero bounding).165 E(box)99.5 419.1 Q(es.)-.165 E
23.65<8354>72 436 S(he def)-23.65 E(ault_char member speci\214es the ch\
aracter that will be used when an unde\214ned or)-.11 E(none)99.5 449 Q
(xistent character is printed.)-.165 E(The def)5.5 E
(ault_char is a 16-bit character \(not a 2-byte charac-)-.11 E 2.75
(ter\). F)99.5 462 R(or a font using 2-byte matrix format, the def)-.165
E(ault_char has byte1 in the most-signi\214-)-.11 E
(cant byte and byte2 in the least signi\214cant byte.)99.5 475 Q
(If the def)5.5 E(ault_char itself speci\214es an unde-)-.11 E
(\214ned or none)99.5 488 Q(xistent character)-.165 E 2.75(,n)-.44 G
2.75(op)-2.75 G(rinting is performed for an unde\214ned or none)-2.75 E
(xistent)-.165 E(character)99.5 501 Q(.)-.605 E 23.65<8354>72 517.9 S
(he min_bounds and max_bounds members contain the most e)-23.65 E
(xtreme v)-.165 E(alues of each indi-)-.275 E(vidual)99.5 530.9 Q F0
(XCharStruct)3.666 E F1(component o)3.666 E -.165(ve)-.165 G 2.75(ra)
.165 G(ll elements of this array \(and ignore none)-2.75 E(xistent)-.165
E 2.75(characters\). The)99.5 543.9 R
(bounding box of the font \(the smallest rectangle enclosing the shape)
2.75 E(obtained by superimposing all of the characters at the same orig\
in [x,y]\) has its upper)99.5 556.9 Q(-left)-.22 E(coordinate at:)99.5
569.9 Q([x + min_bounds.lbearing, y \255 max_bounds.ascent])163 589.4 Q
(Its width is:)99.5 612.8 Q
(max_bounds.rbearing \255 min_bounds.lbearing)163 632.3 Q
(Its height is:)99.5 655.7 Q(max_bounds.ascent + max_bounds.descent)163
675.2 Q 23.65<8354>72 698.6 S(he ascent member is the logical e)-23.65 E
(xtent of the font abo)-.165 E .33 -.165(ve t)-.165 H
(he baseline that is used for deter).165 E(-)-.22 E
(mining line spacing.)99.5 711.6 Q(Speci\214c characters may e)5.5 E
(xtend be)-.165 E(yond this.)-.165 E F0(163)279.75 769 Q 0 Cg EP
%%Page: 164 169
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E/F1 11/Times-Roman@0 SF 23.65<8354>72
85 S(he descent member is the logical e)-23.65 E
(xtent of the font at or belo)-.165 E 2.75(wt)-.275 G
(he baseline that is used for)-2.75 E(determining line spacing.)99.5 98
Q(Speci\214c characters may e)5.5 E(xtend be)-.165 E(yond this.)-.165 E
23.65<8349>72 114.9 S 2.75(ft)-23.65 G(he baseline is at Y)-2.75 E
(-coordinate y)-1.221 E 2.75(,t)-.715 G(he logical e)-2.75 E
(xtent of the font is inclusi)-.165 E .33 -.165(ve b)-.275 H(etween the)
.165 E -1.221(Y-)99.5 127.9 S(coordinate v)1.221 E
(alues \(y \255 font.ascent\) and \(y + font.descent \255 1\).)-.275 E
-.88(Ty)5.5 G(pically).88 E 2.75(,t)-.715 G(he minimum)-2.75 E
(interline spacing between ro)99.5 140.9 Q(ws of te)-.275 E(xt is gi)
-.165 E -.165(ve)-.275 G 2.75(nb).165 G 2.75(ya)-2.75 G
(scent + descent.)-2.75 E -.165(Fo)72 157.8 S 2.75(rac).165 G(haracter \
origin at [x,y], the bounding box of a character \(that is, the smalles\
t rectangle that)-2.75 E(encloses the character')72 170.8 Q 2.75(ss)
-.605 G(hape\) described in terms of)-2.75 E F0(XCharStruct)3.666 E F1
(components is a rectangle)3.666 E(with its upper)72 183.8 Q
(-left corner at:)-.22 E([x + lbearing, y \255 ascent])108 207.2 Q
(Its width is:)72 230.6 Q(rbearing \255 lbearing)108 254 Q
(Its height is:)72 277.4 Q(ascent + descent)108 300.8 Q
(The origin for the ne)72 324.2 Q(xt character is de\214ned to be:)-.165
E([x + width, y])108 347.6 Q(The lbearing member de\214nes the e)72 371
Q(xtent of the left edge of the character ink from the origin.)-.165 E
(The)5.5 E(rbearing member de\214nes the e)72 384 Q
(xtent of the right edge of the character ink from the origin.)-.165 E
(The)5.5 E(ascent member de\214nes the e)72 397 Q
(xtent of the top edge of the character ink from the origin.)-.165 E
(The)5.5 E(descent member de\214nes the e)72 410 Q
(xtent of the bottom edge of the character ink from the origin.)-.165 E
(The)5.5 E(width member de\214nes the logical width of the character)72
423 Q(.)-.605 E(Note that the baseline \(the y position of the characte\
r origin\) is logically vie)72 439.9 Q(wed as being the)-.275 E
(scanline just belo)72 452.9 Q 2.75(wn)-.275 G(ondescending characters.)
-2.75 E(When descent is zero, only pix)5.5 E(els with Y)-.165 E
(-coordi-)-1.221 E(nates less than y are dra)72 465.9 Q
(wn, and the origin is logically vie)-.165 E
(wed as being coincident with the left)-.275 E(edge of a nonk)72 478.9 Q
(erned character)-.11 E 5.5(.W)-.605 G(hen lbearing is zero, no pix)-5.5
E(els with X-coordinate less than x are)-.165 E(dra)72 491.9 Q 2.75
(wn. An)-.165 F 2.75(yo)-.165 G 2.75(ft)-2.75 G(he)-2.75 E F0
(XCharStruct)3.666 E F1(metric members could be ne)3.666 E -.055(ga)
-.165 G(ti).055 E -.165(ve)-.275 G 5.5(.I).165 G 2.75(ft)-5.5 G
(he width is ne)-2.75 E -.055(ga)-.165 G(ti).055 E -.165(ve)-.275 G 2.75
(,t).165 G(he)-2.75 E(ne)72 504.9 Q
(xt character will be placed to the left of the current origin.)-.165 E
(The X protocol does not de\214ne the interpretation of the attrib)72
521.8 Q(utes member in the)-.22 E F0(XCharStruct)3.666 E F1 2.75
(structure. A)72 534.8 R(none)2.75 E
(xistent character is represented with all members of its)-.165 E F0
(XCharStruct)3.666 E F1(set to)3.666 E(zero.)72 547.8 Q 2.75(Af)72 564.7
S(ont is not guaranteed to ha)-2.75 E .33 -.165(ve a)-.22 H .33 -.165
(ny p).165 H 2.75(roperties. The).165 F
(interpretation of the property v)2.75 E(alue \(for)-.275 E -.165(ex)72
577.7 S(ample, long or unsigned long\) must be deri).165 E -.165(ve)
-.275 G 2.75(df).165 G(rom)-2.75 E/F2 11/Times-Italic@0 SF 2.75(ap)2.75
G(riori)-2.75 E F1(kno)2.75 E(wledge of the property)-.275 E 5.5(.A)
-.715 G(basic set of font properties is speci\214ed in the X Consortium\
 standard)72 590.7 Q F2 2.75(XL)2.75 G -.11(og)-2.75 G(ical F).11 E
(ont Description)-1.155 E(Con)72 603.7 Q(ventions)-.44 E F1(.)A F0 2.75
(8.5.1. Loading)72 629.7 R(and Fr)2.75 E(eeing F)-.198 E(onts)-.275 E F1
(Xlib pro)72 646.6 Q(vides functions that you can use to load fonts, ge\
t font information, unload fonts, and free)-.165 E(font information.)72
659.6 Q 2.75(Af)5.5 G .55 -.275(ew f)-2.75 H(ont functions use a).275 E
F0(GContext)3.666 E F1(resource ID or a font ID interchangeably)3.666 E
(.)-.715 E 1.76 -.88(To l)72 689.5 T(oad a gi).88 E -.165(ve)-.275 G
2.75(nf).165 G(ont, use)-2.75 E F0(XLoadF)3.666 E(ont)-.275 E F1(.).916
E F0(164)279.75 769 Q 0 Cg EP
%%Page: 165 170
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E .44 LW 36 76.75 36 87.75 DL 36 74.75
36 85.75 DL 41.5 73 36 73 DL 43.5 73 38 73 DL 49 73 43.5 73 DL/F1 11
/Times-Roman@0 SF -.165(Fo)72 88.9 S(nt XLoadF).165 E -1.834(ont \()
-.165 F/F2 11/Times-Italic@0 SF(display).916 E F1(,)A F2(name)2.75 E F1
(\)).916 E(Display *)88.5 101.9 Q F2(display)A F1(;).916 E(char *)88.5
114.9 Q F2(name)A F1(;).916 E F2(display)72 135.7 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2(name)72 152.6 Q F1
(Speci\214es the name of the font, which is a null-terminated string.)
48.174 E 36 148.25 36 159.25 DL 36 146.25 36 157.25 DL 41.5 157.5 36
157.5 DL 43.5 157.5 38 157.5 DL 49 157.5 43.5 157.5 DL(The)72 182.5 Q F0
(XLoadF)3.666 E(ont)-.275 E F1(function loads the speci\214ed font and \
returns its associated font ID.)3.666 E(If the font)5.5 E(name is not i\
n the Host Portable Character Encoding, the result is implementation-de\
pendent.)72 195.5 Q(Use of uppercase or lo)72 208.5 Q
(wercase does not matter)-.275 E 5.5(.W)-.605 G(hen the characters `)
-5.5 E(`?')-.814 E 2.75('a)-.814 G(nd `)-2.75 E(`*')-.814 E 2.75('a)
-.814 G(re used in a)-2.75 E
(font name, a pattern match is performed and an)72 221.5 Q 2.75(ym)-.165
G(atching font is used.)-2.75 E(In the pattern, the `)5.5 E(`?')-.814 E
(')-.814 E(character will match an)72 234.5 Q 2.75(ys)-.165 G
(ingle character)-2.75 E 2.75(,a)-.44 G(nd the `)-2.75 E(`*')-.814 E
2.75('c)-.814 G(haracter will match an)-2.75 E 2.75(yn)-.165 G
(umber of char)-2.75 E(-)-.22 E 2.75(acters. A)72 247.5 R(structured fo\
rmat for font names is speci\214ed in the X Consortium standard)2.75 E
F2 2.75(XL)2.75 G -.11(og)-2.75 G(ical).11 E -1.155(Fo)72 260.5 S
(nt Description Con)1.155 E(ventions)-.44 E F1 5.5(.I)C(f)-5.5 E F0
(XLoadF)3.666 E(ont)-.275 E F1 -.11(wa)3.666 G 2.75(su).11 G
(nsuccessful at loading the speci\214ed font, a)-2.75 E F0(BadName)
72.916 273.5 Q F1(error results.)3.666 E -.165(Fo)5.5 G
(nts are not associated with a particular screen and can be stored as a)
.165 E(component of an)72 286.5 Q 2.75(yG)-.165 G 2.75(C. When)-2.75 F
(the font is no longer needed, call)2.75 E F0(XUnloadF)3.666 E(ont)-.275
E F1(.).916 E F0(XLoadF)72.916 303.4 Q(ont)-.275 E F1(can generate)3.666
E F0(BadAlloc)3.666 E F1(and)3.666 E F0(BadName)3.666 E F1(errors.)3.666
E 1.76 -.88(To r)72 333.3 T(eturn information about an a).88 E -.275(va)
-.22 G(ilable font, use).275 E F0(XQueryF)3.666 E(ont)-.275 E F1(.).916
E 36 351.05 36 362.05 DL 36 349.05 36 360.05 DL 41.5 347.3 36 347.3 DL
43.5 347.3 38 347.3 DL 49 347.3 43.5 347.3 DL(XF)72 363.2 Q
(ontStruct *XQueryF)-.165 E -1.834(ont \()-.165 F F2(display).916 E F1
(,)A F2(font_ID)2.75 E F1(\)).916 E(Display *)88.5 376.2 Q F2(display)A
F1(;).916 E(XID)88.5 389.2 Q F2(font_ID)2.75 E F1(;).916 E F2(display)72
410 Q F1(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)
-.605 E F2(font_ID)72 426.9 Q F1(Speci\214es the font ID or the)37.779 E
F0(GContext)3.666 E F1(ID.)3.666 E 36 422.55 36 433.55 DL 36 420.55 36
431.55 DL 41.5 431.8 36 431.8 DL 43.5 431.8 38 431.8 DL 49 431.8 43.5
431.8 DL(The)72 456.8 Q F0(XQueryF)3.666 E(ont)-.275 E F1
(function returns a pointer to the)3.666 E F0(XF)3.666 E(ontStruct)-.275
E F1(structure, which contains infor)3.666 E(-)-.22 E
(mation associated with the font.)72 469.8 Q -1.21(Yo)5.5 G 2.75(uc)1.21
G(an query a font or the font stored in a GC.)-2.75 E(The font ID)5.5 E
(stored in the)72 482.8 Q F0(XF)3.666 E(ontStruct)-.275 E F1
(structure will be the)3.666 E F0(GContext)3.666 E F1
(ID, and you need to be careful when)3.666 E
(using this ID in other functions \(see)72 495.8 Q F0(XGContextFr)3.666
E(omGC)-.198 E F1 2.75(\). If).916 F(the font does not e)2.75 E(xist,)
-.165 E F0(XQuery-)3.666 E -.275(Fo)72 508.8 S(nt).275 E F1
(returns NULL.)3.666 E 1.76 -.88(To f)5.5 H(ree this data, use).88 E F0
(XFr)3.666 E(eeF)-.198 E(ontInf)-.275 E(o)-.275 E F1(.).916 E 1.76 -.88
(To p)72 538.7 T(erform a).88 E F0(XLoadF)3.666 E(ont)-.275 E F1(and)
3.666 E F0(XQueryF)3.666 E(ont)-.275 E F1(in a single operation, use)
3.666 E F0(XLoadQueryF)3.666 E(ont)-.275 E F1(.).916 E 36 556.45 36
567.45 DL 36 554.45 36 565.45 DL 41.5 552.7 36 552.7 DL 43.5 552.7 38
552.7 DL 49 552.7 43.5 552.7 DL(XF)72 568.6 Q(ontStruct *XLoadQueryF)
-.165 E -1.834(ont \()-.165 F F2(display).916 E F1(,)A F2(name)2.75 E F1
(\)).916 E(Display *)88.5 581.6 Q F2(display)A F1(;).916 E(char *)88.5
594.6 Q F2(name)A F1(;).916 E F2(display)72 615.4 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2(name)72 632.3 Q F1
(Speci\214es the name of the font, which is a null-terminated string.)
48.174 E 36 627.95 36 638.95 DL 36 625.95 36 636.95 DL 41.5 637.2 36
637.2 DL 43.5 637.2 38 637.2 DL 49 637.2 43.5 637.2 DL(The)72 662.2 Q F0
(XLoadQueryF)3.666 E(ont)-.275 E F1(function pro)3.666 E
(vides the most common w)-.165 E(ay for accessing a font.)-.11 E F0
(XLoad-)6.416 E(QueryF)72 675.2 Q(ont)-.275 E F1(both opens \(loads\) t\
he speci\214ed font and returns a pointer to the appropriate)3.666 E F0
(XF)72.916 688.2 Q(ontStruct)-.275 E F1 2.75(structure. If)3.666 F
(the font name is not in the Host Portable Character Encoding, the)2.75
E(result is implementation-dependent.)72 701.2 Q(If the font does not e)
5.5 E(xist,)-.165 E F0(XLoadQueryF)3.666 E(ont)-.275 E F1(returns NULL.)
3.666 E F0(XLoadQueryF)72.916 718.1 Q(ont)-.275 E F1(can generate a)
3.666 E F0(BadAlloc)3.666 E F1(error)3.666 E(.)-.605 E F0(165)279.75 769
Q 0 Cg EP
%%Page: 166 171
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E/F1 11/Times-Roman@0 SF 1.76 -.88(To u)
72 85 T
(nload the font and free the storage used by the font structure that w)
.88 E(as allocated by)-.11 E F0(XQuery-)3.666 E -.275(Fo)72 98 S(nt).275
E F1(or)3.666 E F0(XLoadQueryF)3.666 E(ont)-.275 E F1 2.75(,u).916 G(se)
-2.75 E F0(XFr)3.666 E(eeF)-.198 E(ont)-.275 E F1(.).916 E .44 LW 36
115.75 36 126.75 DL 36 113.75 36 124.75 DL 41.5 112 36 112 DL 43.5 112
38 112 DL 49 112 43.5 112 DL(XFreeF)72 127.9 Q -1.834(ont \()-.165 F/F2
11/Times-Italic@0 SF(display).916 E F1(,)A F2(font_struct)2.75 E F1(\))
.916 E(Display *)88.5 140.9 Q F2(display)A F1(;).916 E(XF)88.5 153.9 Q
(ontStruct *)-.165 E F2(font_struct)A F1(;).916 E F2(display)72 174.7 Q
F1(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605
E F2(font_struct)72 191.6 Q F1
(Speci\214es the storage associated with the font.)24.326 E 36 187.25 36
198.25 DL 36 185.25 36 196.25 DL 41.5 196.5 36 196.5 DL 43.5 196.5 38
196.5 DL 49 196.5 43.5 196.5 DL(The)72 221.5 Q F0(XFr)3.666 E(eeF)-.198
E(ont)-.275 E F1(function deletes the association between the font reso\
urce ID and the speci\214ed)3.666 E(font and frees the)72 234.5 Q F0(XF)
3.666 E(ontStruct)-.275 E F1 2.75(structure. The)3.666 F
(font itself will be freed when no other resource)2.75 E(references it.)
72 247.5 Q(The data and the font should not be referenced ag)5.5 E(ain.)
-.055 E F0(XFr)72.916 264.4 Q(eeF)-.198 E(ont)-.275 E F1(can generate a)
3.666 E F0(BadF)3.666 E(ont)-.275 E F1(error)3.666 E(.)-.605 E 1.76 -.88
(To r)72 294.3 T(eturn a gi).88 E -.165(ve)-.275 G 2.75(nf).165 G
(ont property)-2.75 E 2.75(,u)-.715 G(se)-2.75 E F0(XGetF)3.666 E(ontPr)
-.275 E(operty)-.198 E F1(.).916 E 36 312.05 36 323.05 DL 36 310.05 36
321.05 DL 41.5 308.3 36 308.3 DL 43.5 308.3 38 308.3 DL 49 308.3 43.5
308.3 DL(Bool XGetF)72 324.2 Q -1.834(ontProperty \()-.165 F F2
(font_struct).916 E F1(,).916 E F2(atom)3.666 E F1(,).916 E F2(value_r)
3.666 E(eturn)-.407 E F1(\)).916 E(XF)88.5 337.2 Q(ontStruct *)-.165 E
F2(font_struct)A F1(;).916 E(Atom)88.5 350.2 Q F2(atom)2.75 E F1(;).916
E(unsigned long *)88.5 363.2 Q F2(value_r)A(eturn)-.407 E F1(;).916 E F2
(font_struct)72 384 Q F1
(Speci\214es the storage associated with the font.)24.326 E F2(atom)72
400.9 Q F1(Speci\214es the atom for the property name you w)50 E
(ant returned.)-.11 E F2(value_r)72 417.8 Q(eturn)-.407 E F1
(Returns the v)15.581 E(alue of the font property)-.275 E(.)-.715 E 36
413.45 36 424.45 DL 36 411.45 36 422.45 DL 41.5 422.7 36 422.7 DL 43.5
422.7 38 422.7 DL 49 422.7 43.5 422.7 DL(Gi)72 447.7 Q -.165(ve)-.275 G
2.75(nt).165 G(he atom for that property)-2.75 E 2.75(,t)-.715 G(he)
-2.75 E F0(XGetF)3.666 E(ontPr)-.275 E(operty)-.198 E F1
(function returns the v)3.666 E(alue of the speci-)-.275 E
(\214ed font property)72 460.7 Q(.)-.715 E F0(XGetF)6.416 E(ontPr)-.275
E(operty)-.198 E F1(also returns)3.666 E F0 -.275(Fa)3.666 G(lse).275 E
F1(if the property w)3.666 E(as not de\214ned or)-.11 E F0 -.814(Tr)
72.916 473.7 S(ue).814 E F1(if it w)3.666 E(as de\214ned.)-.11 E 2.75
(As)5.5 G(et of prede\214ned atoms e)-2.75 E
(xists for font properties, which can be found)-.165 E(in <)72 486.7 Q
F0(X11/Xatom.h)A F1 2.75(>. This)B
(set contains the standard properties associated with a font.)2.75 E
(Although it)5.5 E(is not guaranteed, it is lik)72 499.7 Q
(ely that the prede\214ned font properties will be present.)-.11 E 1.76
-.88(To u)72 529.6 T(nload a font that w).88 E(as loaded by)-.11 E F0
(XLoadF)3.666 E(ont)-.275 E F1 2.75(,u).916 G(se)-2.75 E F0(XUnloadF)
3.666 E(ont)-.275 E F1(.).916 E 36 547.35 36 558.35 DL 36 545.35 36
556.35 DL 41.5 543.6 36 543.6 DL 43.5 543.6 38 543.6 DL 49 543.6 43.5
543.6 DL(XUnloadF)72 559.5 Q -1.834(ont \()-.165 F F2(display).916 E F1
(,)A F2(font)2.75 E F1(\)).916 E(Display *)88.5 572.5 Q F2(display)A F1
(;).916 E -.165(Fo)88.5 585.5 S(nt).165 E F2(font)2.75 E F1(;).916 E F2
(display)72 606.3 Q F1(Speci\214es the connection to the X serv)40.221 E
(er)-.165 E(.)-.605 E F2(font)72 623.2 Q F1(Speci\214es the font.)54.884
E 36 618.85 36 629.85 DL 36 616.85 36 627.85 DL 41.5 628.1 36 628.1 DL
43.5 628.1 38 628.1 DL 49 628.1 43.5 628.1 DL(The)72 653.1 Q F0
(XUnloadF)3.666 E(ont)-.275 E F1(function deletes the association betwe\
en the font resource ID and the speci-)3.666 E(\214ed font.)72 666.1 Q
(The font itself will be freed when no other resource references it.)5.5
E(The font should not)5.5 E(be referenced ag)72 679.1 Q(ain.)-.055 E F0
(XUnloadF)72.916 696 Q(ont)-.275 E F1(can generate a)3.666 E F0(BadF)
3.666 E(ont)-.275 E F1(error)3.666 E(.)-.605 E F0(166)279.75 769 Q 0 Cg
EP
%%Page: 167 172
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E 2.75(8.5.2. Obtaining)72 85 R(and Fr)
2.75 E(eeing F)-.198 E(ont Names and Inf)-.275 E(ormation)-.275 E/F1 11
/Times-Roman@0 SF -1.21(Yo)72 101.9 S 2.75(uo)1.21 G(btain font names a\
nd information by matching a wildcard speci\214cation when querying a)
-2.75 E(font type for a list of a)72 114.9 Q -.275(va)-.22 G
(ilable sizes and so on.).275 E 1.76 -.88(To r)72 144.8 T
(eturn a list of the a).88 E -.275(va)-.22 G(ilable font names, use).275
E F0(XListF)3.666 E(onts)-.275 E F1(.).916 E .44 LW 36 162.55 36 173.55
DL 36 160.55 36 171.55 DL 41.5 158.8 36 158.8 DL 43.5 158.8 38 158.8 DL
49 158.8 43.5 158.8 DL(char **XListF)72 174.7 Q -1.834(onts \()-.165 F
/F2 11/Times-Italic@0 SF(display).916 E F1(,)A F2(pattern)2.75 E F1(,)
.916 E F2(maxnames)2.75 E F1(,)A F2(actual_count_r)2.75 E(eturn)-.407 E
F1(\)).916 E(Display *)88.5 187.7 Q F2(display).916 E F1(;).916 E
(char *)88.5 200.7 Q F2(pattern).916 E F1(;).916 E(int)88.5 213.7 Q F2
(maxnames)2.75 E F1(;).916 E(int *)88.5 226.7 Q F2(actual_count_r).916 E
(eturn)-.407 E F1(;).916 E F2(display)72 247.5 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2(pattern)72 264.4 Q F1(Speci\214es the null-terminated pattern string\
 that can contain wildcard characters.)40.221 E F2(maxnames)72 281.3 Q
F1(Speci\214es the maximum number of names to be returned.)25.569 E F2
(actual_count_r)72 298.2 Q(eturn)-.407 E F1
(Returns the actual number of font names.)144 311.2 Q 36 306.85 36
317.85 DL 36 304.85 36 315.85 DL 41.5 316.1 36 316.1 DL 43.5 316.1 38
316.1 DL 49 316.1 43.5 316.1 DL(The)72 341.1 Q F0(XListF)3.666 E(onts)
-.275 E F1(function returns an array of a)3.666 E -.275(va)-.22 G
(ilable font names \(as controlled by the font).275 E(search path; see)
72 354.1 Q F0(XSetF)3.666 E(ontP)-.275 E(ath)-.11 E F1 2.75(\)t).916 G
(hat match the string you passed to the pattern ar)-2.75 E 2.75
(gument. The)-.198 F(pattern string can contain an)72 367.1 Q 2.75(yc)
-.165 G(haracters, b)-2.75 E
(ut each asterisk \(*\) is a wildcard for an)-.22 E 2.75(yn)-.165 G
(umber of)-2.75 E(characters, and each question mark \(?\) is a wildcar\
d for a single character)72 380.1 Q 5.5(.I)-.605 G 2.75(ft)-5.5 G
(he pattern string is)-2.75 E(not in the Host Portable Character Encodi\
ng, the result is implementation-dependent.)72 393.1 Q(Use of)5.5 E
(uppercase or lo)72 406.1 Q(wercase does not matter)-.275 E 5.5(.E)-.605
G(ach returned string is null-terminated.)-5.5 E(If the data)5.5 E
(returned by the serv)72 419.1 Q(er is in the Latin Portable Character \
Encoding, then the returned strings are in)-.165 E
(the Host Portable Character Encoding.)72 432.1 Q
(Otherwise, the result is implementation-dependent.)5.5 E(If)5.5 E
(there are no matching font names,)72 445.1 Q F0(XListF)3.666 E(onts)
-.275 E F1(returns NULL.)3.666 E(The client should call)5.5 E F0(XFr)
3.666 E(ee-)-.198 E -.275(Fo)72 458.1 S(ntNames).275 E F1
(when \214nished with the result to free the memory)3.666 E(.)-.715 E
1.76 -.88(To f)72 488 T(ree a font name array).88 E 2.75(,u)-.715 G(se)
-2.75 E F0(XFr)3.666 E(eeF)-.198 E(ontNames)-.275 E F1(.).916 E 36
505.75 36 516.75 DL 36 503.75 36 514.75 DL 41.5 502 36 502 DL 43.5 502
38 502 DL 49 502 43.5 502 DL(XFreeF)72 517.9 Q -1.834(ontNames \()-.165
F F2(list).916 E F1(\)).916 E(char *)88.5 530.9 Q F2(list)A F1 .916([];)
.916 G F2(list)72 551.7 Q F1(Speci\214es the array of strings you w)
58.547 E(ant to free.)-.11 E 36 547.35 36 558.35 DL 36 545.35 36 556.35
DL 41.5 556.6 36 556.6 DL 43.5 556.6 38 556.6 DL 49 556.6 43.5 556.6 DL
(The)72 581.6 Q F0(XFr)3.666 E(eeF)-.198 E(ontNames)-.275 E F1
(function frees the array and strings returned by)3.666 E F0(XListF)
3.666 E(onts)-.275 E F1(or)3.666 E F0(XList-)3.666 E -.275(Fo)72 594.6 S
(ntsW).275 E(ithInf)-.198 E(o)-.275 E F1(.).916 E 1.76 -.88(To o)72
624.5 T(btain the names and information about a).88 E -.275(va)-.22 G
(ilable fonts, use).275 E F0(XListF)3.666 E(ontsW)-.275 E(ithInf)-.198 E
(o)-.275 E F1(.).916 E F0(167)279.75 769 Q 0 Cg EP
%%Page: 168 173
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E .44 LW 36 76.75 36 87.75 DL 36 74.75
36 85.75 DL 41.5 73 36 73 DL 43.5 73 38 73 DL 49 73 43.5 73 DL/F1 11
/Times-Roman@0 SF(char **XListF)72 88.9 Q(ontsW)-.165 E -1.834
(ithInfo \()-.44 F/F2 11/Times-Italic@0 SF(display).916 E F1(,)A F2
(pattern)2.75 E F1(,)A F2(maxnames)2.75 E F1(,)A F2(count_r)2.75 E
(eturn)-.407 E F1(,)A F2(info_r)2.75 E(eturn)-.407 E F1(\)).916 E
(Display *)88.5 101.9 Q F2(display)A F1(;).916 E(char *)88.5 114.9 Q F2
(pattern)A F1(;).916 E(int)88.5 127.9 Q F2(maxnames)2.75 E F1(;).916 E
(int *)88.5 140.9 Q F2(count_r)A(eturn)-.407 E F1(;).916 E(XF)88.5 153.9
Q(ontStruct **)-.165 E F2(info_r)A(eturn)-.407 E F1(;).916 E F2(display)
72 174.7 Q F1(Speci\214es the connection to the X serv)40.221 E(er)-.165
E(.)-.605 E F2(pattern)72 191.6 Q F1(Speci\214es the null-terminated pa\
ttern string that can contain wildcard characters.)40.221 E F2(maxnames)
72 208.5 Q F1(Speci\214es the maximum number of names to be returned.)
25.569 E F2(count_r)72 225.4 Q(eturn)-.407 E F1
(Returns the actual number of matched font names.)14.965 E F2(info_r)72
242.3 Q(eturn)-.407 E F1(Returns the font information.)22.291 E 36
237.95 36 248.95 DL 36 235.95 36 246.95 DL 41.5 247.2 36 247.2 DL 43.5
247.2 38 247.2 DL 49 247.2 43.5 247.2 DL(The)72 272.2 Q F0(XListF)3.666
E(ontsW)-.275 E(ithInf)-.198 E(o)-.275 E F1(function returns a list of \
font names that match the speci\214ed pattern)3.666 E
(and their associated font information.)72 285.2 Q
(The list of names is limited to size speci\214ed by maxnames.)5.5 E
(The information returned for each font is identical to what)72 298.2 Q
F0(XLoadQueryF)3.666 E(ont)-.275 E F1 -.11(wo)3.666 G(uld return).11 E
-.165(ex)72 311.2 S(cept that the per).165 E
(-character metrics are not returned.)-.22 E
(The pattern string can contain an)5.5 E 2.75(yc)-.165 G(harac-)-2.75 E
(ters, b)72 324.2 Q(ut each asterisk \(*\) is a wildcard for an)-.22 E
2.75(yn)-.165 G(umber of characters, and each question mark \(?\))-2.75
E(is a wildcard for a single character)72 337.2 Q 5.5(.I)-.605 G 2.75
(ft)-5.5 G(he pattern string is not in the Host Portable Character)-2.75
E(Encoding, the result is implementation-dependent.)72 350.2 Q
(Use of uppercase or lo)5.5 E(wercase does not mat-)-.275 E(ter)72 363.2
Q 5.5(.E)-.605 G(ach returned string is null-terminated.)-5.5 E
(If the data returned by the serv)5.5 E(er is in the Latin Por)-.165 E
(-)-.22 E(table Character Encoding, then the returned strings are in th\
e Host Portable Character Encoding.)72 376.2 Q
(Otherwise, the result is implementation-dependent.)72 389.2 Q
(If there are no matching font names,)5.5 E F0(XList-)3.666 E -.275(Fo)
72 402.2 S(ntsW).275 E(ithInf)-.198 E(o)-.275 E F1(returns NULL.)3.666 E
1.76 -.88(To f)72 419.1 T(ree only the allocated name array).88 E 2.75
(,t)-.715 G(he client should call)-2.75 E F0(XFr)3.666 E(eeF)-.198 E
(ontNames)-.275 E F1 5.5(.T).916 G 2.75(of)-6.38 G(ree both the)-2.75 E
(name array and the font information array or to free just the font inf\
ormation array)72 432.1 Q 2.75(,t)-.715 G(he client)-2.75 E(should call)
72 445.1 Q F0(XFr)3.666 E(eeF)-.198 E(ontInf)-.275 E(o)-.275 E F1(.).916
E 1.76 -.88(To f)72 475 T(ree font structures and font names, use).88 E
F0(XFr)3.666 E(eeF)-.198 E(ontInf)-.275 E(o)-.275 E F1(.).916 E 36
492.75 36 503.75 DL 36 490.75 36 501.75 DL 41.5 489 36 489 DL 43.5 489
38 489 DL 49 489 43.5 489 DL(XFreeF)72 504.9 Q(ontInfo\()-.165 E F2
(names).916 E F1(,)A F2(fr)2.75 E(ee_info)-.407 E F1(,)A F2
(actual_count)2.75 E F1(\)).916 E(char **)88.5 517.9 Q F2(names)A F1(;)
.916 E(XF)88.5 530.9 Q(ontStruct *)-.165 E F2(fr)A(ee_info)-.407 E F1(;)
A(int)88.5 543.9 Q F2(actual_count)2.75 E F1(;).916 E F2(names)72 564.7
Q F1(Speci\214es the list of font names.)43.895 E F2(fr)72 594.6 Q
(ee_info)-.407 E F1(Speci\214es the font information.)32.686 E F2
(actual_count)72 624.5 Q F1
(Speci\214es the actual number of font names.)14.558 E 36 633.15 36
644.15 DL 36 631.15 36 642.15 DL 41.5 642.4 36 642.4 DL 43.5 642.4 38
642.4 DL 49 642.4 43.5 642.4 DL(The)72 667.4 Q F0(XFr)3.666 E(eeF)-.198
E(ontInf)-.275 E(o)-.275 E F1(function frees a font structure or an arr\
ay of font structures and optionally)3.666 E(an array of font names.)72
680.4 Q(If NULL is passed for names, no font names are freed.)5.5 E
(If a font structure)5.5 E(for an open font \(returned by)72 693.4 Q F0
(XLoadQueryF)3.666 E(ont)-.275 E F1 2.75(\)i).916 G 2.75(sp)-2.75 G
(assed, the structure is freed, b)-2.75 E(ut the font is)-.22 E
(not closed; use)72 706.4 Q F0(XUnloadF)3.666 E(ont)-.275 E F1
(to close the font.)3.666 E F0(168)279.75 769 Q 0 Cg EP
%%Page: 169 174
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E 2.75(8.5.3. Computing)72 85 R
(Character String Sizes)2.75 E/F1 11/Times-Roman@0 SF(Xlib pro)72 101.9
Q(vides functions that you can use to compute the width, the logical e)
-.165 E(xtents, and the serv)-.165 E(er)-.165 E
(information about 8-bit and 2-byte te)72 114.9 Q(xt strings.)-.165 E
(The width is computed by adding the character)5.5 E
(widths of all the characters.)72 127.9 Q
(It does not matter if the font is an 8-bit or 2-byte font.)5.5 E
(These func-)5.5 E(tions return the sum of the character metrics in pix)
72 140.9 Q(els.)-.165 E 1.76 -.88(To d)72 170.8 T
(etermine the width of an 8-bit character string, use).88 E F0(XT)3.666
E(extW)-1.012 E(idth)-.198 E F1(.).916 E .44 LW 36 188.55 36 199.55 DL
36 186.55 36 197.55 DL 41.5 184.8 36 184.8 DL 43.5 184.8 38 184.8 DL 49
184.8 43.5 184.8 DL(int XT)72 200.7 Q -.165(ex)-.77 G(tW).165 E -1.834
(idth \()-.44 F/F2 11/Times-Italic@0 SF(font_struct).916 E F1(,).916 E
F2(string)2.75 E F1(,)A F2(count)2.75 E F1(\)).916 E(XF)88.5 213.7 Q
(ontStruct *)-.165 E F2(font_struct)A F1(;).916 E(char *)88.5 226.7 Q F2
(string)A F1(;).916 E(int)88.5 239.7 Q F2(count)2.75 E F1(;).916 E F2
(font_struct)72 260.5 Q F1
(Speci\214es the font used for the width computation.)24.326 E F2
(string)72 277.4 Q F1(Speci\214es the character string.)46.326 E F2
(count)72 294.3 Q F1
(Speci\214es the character count in the speci\214ed string.)47.558 E 36
289.95 36 300.95 DL 36 287.95 36 298.95 DL 41.5 299.2 36 299.2 DL 43.5
299.2 38 299.2 DL 49 299.2 43.5 299.2 DL 1.76 -.88(To d)72 337.2 T
(etermine the width of a 2-byte character string, use).88 E F0(XT)3.666
E(extW)-1.012 E(idth16)-.198 E F1(.).916 E 36 354.95 36 365.95 DL 36
352.95 36 363.95 DL 41.5 351.2 36 351.2 DL 43.5 351.2 38 351.2 DL 49
351.2 43.5 351.2 DL(int XT)72 367.1 Q -.165(ex)-.77 G(tW).165 E -1.834
(idth16 \()-.44 F F2(font_struct).916 E F1(,).916 E F2(string)2.75 E F1
(,)A F2(count)2.75 E F1(\)).916 E(XF)88.5 380.1 Q(ontStruct *)-.165 E F2
(font_struct)A F1(;).916 E(XChar2b *)88.5 393.1 Q F2(string)A F1(;).916
E(int)88.5 406.1 Q F2(count)2.75 E F1(;).916 E F2(font_struct)72 426.9 Q
F1(Speci\214es the font used for the width computation.)24.326 E F2
(string)72 443.8 Q F1(Speci\214es the character string.)46.326 E F2
(count)72 460.7 Q F1
(Speci\214es the character count in the speci\214ed string.)47.558 E 36
456.35 36 467.35 DL 36 454.35 36 465.35 DL 41.5 465.6 36 465.6 DL 43.5
465.6 38 465.6 DL 49 465.6 43.5 465.6 DL F0 2.75(8.5.4. Computing)72
503.6 R(Logical Extents)2.75 E F1 1.76 -.88(To c)72 520.5 T
(ompute the bounding box of an 8-bit character string in a gi).88 E
-.165(ve)-.275 G 2.75(nf).165 G(ont, use)-2.75 E F0(XT)3.666 E
(extExtents)-1.012 E F1(.).916 E F0(169)279.75 769 Q 0 Cg EP
%%Page: 170 175
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E .44 LW 36 76.75 36 87.75 DL 36 74.75
36 85.75 DL 41.5 73 36 73 DL 43.5 73 38 73 DL 49 73 43.5 73 DL/F1 11
/Times-Roman@0 SF(XT)72 88.9 Q -.165(ex)-.77 G -1.834(tExtents \().165 F
/F2 11/Times-Italic@0 SF(font_struct).916 E F1(,).916 E F2(string)2.75 E
F1(,).916 E F2(nc)2.75 E(har)-.165 E(s)-.11 E F1(,).916 E F2(dir)2.75 E
(ection_r)-.407 E(eturn)-.407 E F1(,)A F2(font_ascent_r)2.75 E(eturn)
-.407 E F1(,)A F2(font_descent_r)110.5 101.9 Q(eturn)-.407 E F1(,)A F2
-.11(ov)2.75 G(er).11 E(all_r)-.165 E(eturn)-.407 E F1(\)).916 E(XF)88.5
114.9 Q(ontStruct *)-.165 E F2(font_struct)A F1(;).916 E(char *)88.5
127.9 Q F2(string)A F1(;).916 E(int)88.5 140.9 Q F2(nc)2.75 E(har)-.165
E(s)-.11 E F1(;).916 E(int *)88.5 153.9 Q F2(dir)A(ection_r)-.407 E
(eturn)-.407 E F1(;).916 E(int *)88.5 166.9 Q F2(font_ascent_r)A(eturn)
-.407 E F1 2.75(,*)C F2(font_descent_r)-2.75 E(eturn)-.407 E F1(;).916 E
(XCharStruct *)88.5 179.9 Q F2 -.11(ov)C(er).11 E(all_r)-.165 E(eturn)
-.407 E F1(;).916 E F2(font_struct)72 213.7 Q F1(Speci\214es the)24.326
E F0(XF)3.666 E(ontStruct)-.275 E F1(structure.)3.666 E F2(string)72
230.6 Q F1(Speci\214es the character string.)46.326 E F2(nc)72 247.5 Q
(har)-.165 E(s)-.11 E F1
(Speci\214es the number of characters in the character string.)42.333 E
F2(dir)72 264.4 Q(ection_r)-.407 E(eturn)-.407 E F1(Returns the v)144
277.4 Q(alue of the direction hint \()-.275 E F0 -.275(Fo).916 G
(ntLeftT).275 E(oRight)-1.012 E F1(or)3.666 E F0 -.275(Fo)3.666 G
(ntRightT).275 E(oLeft)-1.012 E F1(\).).916 E F2(font_ascent_r)72 294.3
Q(eturn)-.407 E F1(Returns the font ascent.)144 307.3 Q F2
(font_descent_r)72 324.2 Q(eturn)-.407 E F1(Returns the font descent.)
144 337.2 Q F2 -.11(ov)72 354.1 S(er).11 E(all_r)-.165 E(eturn)-.407 E
F1(Returns the o)8.519 E -.165(ve)-.165 G(rall size in the speci\214ed)
.165 E F0(XCharStruct)3.666 E F1(structure.)3.666 E 36 349.75 36 360.75
DL 36 347.75 36 358.75 DL 41.5 359 36 359 DL 43.5 359 38 359 DL 49 359
43.5 359 DL 1.76 -.88(To c)72 397 T
(ompute the bounding box of a 2-byte character string in a gi).88 E
-.165(ve)-.275 G 2.75(nf).165 G(ont, use)-2.75 E F0(XT)3.666 E
(extExtents16)-1.012 E F1(.).916 E 36 414.75 36 425.75 DL 36 412.75 36
423.75 DL 41.5 411 36 411 DL 43.5 411 38 411 DL 49 411 43.5 411 DL(XT)72
426.9 Q -.165(ex)-.77 G -1.834(tExtents16 \().165 F F2(font_struct).916
E F1(,).916 E F2(string)2.75 E F1(,).916 E F2(nc)2.75 E(har)-.165 E(s)
-.11 E F1(,).916 E F2(dir)2.75 E(ection_r)-.407 E(eturn)-.407 E F1(,)A
F2(font_ascent_r)2.75 E(eturn)-.407 E F1(,)A F2(font_descent_r)116 439.9
Q(eturn)-.407 E F1(,)A F2 -.11(ov)2.75 G(er).11 E(all_r)-.165 E(eturn)
-.407 E F1(\)).916 E(XF)88.5 452.9 Q(ontStruct *)-.165 E F2(font_struct)
A F1(;).916 E(XChar2b *)88.5 465.9 Q F2(string)A F1(;).916 E(int)88.5
478.9 Q F2(nc)2.75 E(har)-.165 E(s)-.11 E F1(;).916 E(int *)88.5 491.9 Q
F2(dir)A(ection_r)-.407 E(eturn)-.407 E F1(;).916 E(int *)88.5 504.9 Q
F2(font_ascent_r)A(eturn)-.407 E F1 2.75(,*)C F2(font_descent_r)-2.75 E
(eturn)-.407 E F1(;).916 E(XCharStruct *)88.5 517.9 Q F2 -.11(ov)C(er)
.11 E(all_r)-.165 E(eturn)-.407 E F1(;).916 E F2(font_struct)72 551.7 Q
F1(Speci\214es the)24.326 E F0(XF)3.666 E(ontStruct)-.275 E F1
(structure.)3.666 E F2(string)72 568.6 Q F1
(Speci\214es the character string.)46.326 E F2(nc)72 585.5 Q(har)-.165 E
(s)-.11 E F1
(Speci\214es the number of characters in the character string.)42.333 E
F2(dir)72 602.4 Q(ection_r)-.407 E(eturn)-.407 E F1(Returns the v)144
615.4 Q(alue of the direction hint \()-.275 E F0 -.275(Fo).916 G
(ntLeftT).275 E(oRight)-1.012 E F1(or)3.666 E F0 -.275(Fo)3.666 G
(ntRightT).275 E(oLeft)-1.012 E F1(\).).916 E F2(font_ascent_r)72 632.3
Q(eturn)-.407 E F1(Returns the font ascent.)144 645.3 Q F2
(font_descent_r)72 662.2 Q(eturn)-.407 E F1(Returns the font descent.)
144 675.2 Q F2 -.11(ov)72 692.1 S(er).11 E(all_r)-.165 E(eturn)-.407 E
F1(Returns the o)8.519 E -.165(ve)-.165 G(rall size in the speci\214ed)
.165 E F0(XCharStruct)3.666 E F1(structure.)3.666 E 36 687.75 36 698.75
DL 36 685.75 36 696.75 DL 41.5 697 36 697 DL 43.5 697 38 697 DL 49 697
43.5 697 DL(The)72 722 Q F0(XT)3.666 E(extExtents)-1.012 E F1(and)3.666
E F0(XT)3.666 E(extExtents16)-1.012 E F1
(functions perform the size computation locally and,)3.666 E F0(170)
279.75 769 Q 0 Cg EP
%%Page: 171 176
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E/F1 11/Times-Roman@0 SF(thereby)72 85 Q
2.75(,a)-.715 G -.22(vo)-2.97 G(id the round-trip o).22 E -.165(ve)-.165
G(rhead of).165 E F0(XQueryT)3.666 E(extExtents)-1.012 E F1(and)3.666 E
F0(XQueryT)3.666 E(extExtents16)-1.012 E F1(.).916 E
(Both functions return an)72 98 Q F0(XCharStruct)3.666 E F1
(structure, whose members are set to the v)3.666 E(alues as follo)-.275
E(ws.)-.275 E(The ascent member is set to the maximum of the ascent met\
rics of all characters in the string.)72 114.9 Q
(The descent member is set to the maximum of the descent metrics.)72
127.9 Q(The width member is set to)5.5 E(the sum of the character)72
140.9 Q(-width metrics of all characters in the string.)-.22 E -.165(Fo)
5.5 G 2.75(re).165 G(ach character in the)-2.75 E
(string, let W be the sum of the character)72 153.9 Q
(-width metrics of all characters preceding it in the string.)-.22 E
(Let L be the left-side-bearing metric of the character plus W)72 166.9
Q 5.5(.L)-1.012 G(et R be the right-side-bearing met-)-5.5 E
(ric of the character plus W)72 179.9 Q 5.5(.T)-1.012 G
(he lbearing member is set to the minimum L of all characters in the)
-5.5 E 2.75(string. The)72 192.9 R
(rbearing member is set to the maximum R.)2.75 E -.165(Fo)72 209.8 S
2.75(rf).165 G(onts de\214ned with linear inde)-2.75 E
(xing rather than 2-byte matrix inde)-.165 E(xing, each)-.165 E F0
(XChar2b)3.666 E F1(struc-)3.666 E(ture is interpreted as a 16-bit numb\
er with byte1 as the most signi\214cant byte.)72 222.8 Q
(If the font has no)5.5 E(de\214ned def)72 235.8 Q(ault character)-.11 E
2.75(,u)-.44 G(nde\214ned characters in the string are tak)-2.75 E
(en to ha)-.11 E .33 -.165(ve a)-.22 H(ll zero metrics.).165 E F0 2.75
(8.5.5. Querying)72 261.8 R(Character String Sizes)2.75 E F1 1.76 -.88
(To q)72 278.7 T(uery the serv).88 E
(er for the bounding box of an 8-bit character string in a gi)-.165 E
-.165(ve)-.275 G 2.75(nf).165 G(ont, use)-2.75 E F0(XQuery-)3.666 E
-1.012(Te)72 291.7 S(xtExtents)1.012 E F1(.).916 E .44 LW 36 309.45 36
320.45 DL 36 307.45 36 318.45 DL 41.5 305.7 36 305.7 DL 43.5 305.7 38
305.7 DL 49 305.7 43.5 305.7 DL(XQueryT)72 321.6 Q -.165(ex)-.77 G
-1.834(tExtents \().165 F/F2 11/Times-Italic@0 SF(display).916 E F1(,)A
F2(font_ID)2.75 E F1(,)A F2(string)2.75 E F1(,)A F2(nc)2.75 E(har)-.165
E(s)-.11 E F1(,)A F2(dir)2.75 E(ection_r)-.407 E(eturn)-.407 E F1(,)A F2
(font_ascent_r)2.75 E(eturn)-.407 E F1(,)A F2(font_descent_r)127 334.6 Q
(eturn)-.407 E F1(,)A F2 -.11(ov)2.75 G(er).11 E(all_r)-.165 E(eturn)
-.407 E F1(\)).916 E(Display *)88.5 347.6 Q F2(display)A F1(;).916 E
(XID)88.5 360.6 Q F2(font_ID)2.75 E F1(;).916 E(char *)88.5 373.6 Q F2
(string)A F1(;).916 E(int)88.5 386.6 Q F2(nc)2.75 E(har)-.165 E(s)-.11 E
F1(;).916 E(int *)88.5 399.6 Q F2(dir)A(ection_r)-.407 E(eturn)-.407 E
F1(;).916 E(int *)88.5 412.6 Q F2(font_ascent_r)A(eturn)-.407 E F1 2.75
(,*)C F2(font_descent_r)-2.75 E(eturn)-.407 E F1(;).916 E(XCharStruct *)
88.5 425.6 Q F2 -.11(ov)C(er).11 E(all_r)-.165 E(eturn)-.407 E F1(;).916
E F2(display)72 446.4 Q F1(Speci\214es the connection to the X serv)
40.221 E(er)-.165 E(.)-.605 E F2(font_ID)72 463.3 Q F1
(Speci\214es either the font ID or the)37.779 E F0(GContext)3.666 E F1
(ID that contains the font.)3.666 E F2(string)72 480.2 Q F1
(Speci\214es the character string.)46.326 E F2(nc)72 497.1 Q(har)-.165 E
(s)-.11 E F1
(Speci\214es the number of characters in the character string.)42.333 E
F2(dir)72 514 Q(ection_r)-.407 E(eturn)-.407 E F1(Returns the v)144 527
Q(alue of the direction hint \()-.275 E F0 -.275(Fo).916 G(ntLeftT).275
E(oRight)-1.012 E F1(or)3.666 E F0 -.275(Fo)3.666 G(ntRightT).275 E
(oLeft)-1.012 E F1(\).).916 E F2(font_ascent_r)72 543.9 Q(eturn)-.407 E
F1(Returns the font ascent.)144 556.9 Q F2(font_descent_r)72 573.8 Q
(eturn)-.407 E F1(Returns the font descent.)144 586.8 Q F2 -.11(ov)72
603.7 S(er).11 E(all_r)-.165 E(eturn)-.407 E F1(Returns the o)8.519 E
-.165(ve)-.165 G(rall size in the speci\214ed).165 E F0(XCharStruct)
3.666 E F1(structure.)3.666 E 36 599.35 36 610.35 DL 36 597.35 36 608.35
DL 41.5 608.6 36 608.6 DL 43.5 608.6 38 608.6 DL 49 608.6 43.5 608.6 DL
1.76 -.88(To q)72 646.6 T(uery the serv).88 E
(er for the bounding box of a 2-byte character string in a gi)-.165 E
-.165(ve)-.275 G 2.75(nf).165 G(ont, use)-2.75 E F0(XQueryT)72.916 659.6
Q(extExtents16)-1.012 E F1(.).916 E F0(171)279.75 769 Q 0 Cg EP
%%Page: 172 177
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E .44 LW 36 76.75 36 87.75 DL 36 74.75
36 85.75 DL 41.5 73 36 73 DL 43.5 73 38 73 DL 49 73 43.5 73 DL/F1 11
/Times-Roman@0 SF(XQueryT)72 88.9 Q -.165(ex)-.77 G -1.834
(tExtents16 \().165 F/F2 11/Times-Italic@0 SF(display).916 E F1(,)A F2
(font_ID)2.75 E F1(,)A F2(string)2.75 E F1(,)A F2(nc)2.75 E(har)-.165 E
(s)-.11 E F1(,)A F2(dir)2.75 E(ection_r)-.407 E(eturn)-.407 E F1(,)A F2
(font_ascent_r)2.75 E(eturn)-.407 E F1(,)A F2(font_descent_r)138 101.9 Q
(eturn)-.407 E F1(,)A F2 -.11(ov)2.75 G(er).11 E(all_r)-.165 E(eturn)
-.407 E F1(\)).916 E(Display *)88.5 114.9 Q F2(display)A F1(;).916 E
(XID)88.5 127.9 Q F2(font_ID)2.75 E F1(;).916 E(XChar2b *)88.5 140.9 Q
F2(string)A F1(;).916 E(int)88.5 153.9 Q F2(nc)2.75 E(har)-.165 E(s)-.11
E F1(;).916 E(int *)88.5 166.9 Q F2(dir)A(ection_r)-.407 E(eturn)-.407 E
F1(;).916 E(int *)88.5 179.9 Q F2(font_ascent_r)A(eturn)-.407 E F1 2.75
(,*)C F2(font_descent_r)-2.75 E(eturn)-.407 E F1(;).916 E(XCharStruct *)
88.5 192.9 Q F2 -.11(ov)C(er).11 E(all_r)-.165 E(eturn)-.407 E F1(;).916
E F2(display)72 213.7 Q F1(Speci\214es the connection to the X serv)
40.221 E(er)-.165 E(.)-.605 E F2(font_ID)72 230.6 Q F1
(Speci\214es either the font ID or the)37.779 E F0(GContext)3.666 E F1
(ID that contains the font.)3.666 E F2(string)72 247.5 Q F1
(Speci\214es the character string.)46.326 E F2(nc)72 264.4 Q(har)-.165 E
(s)-.11 E F1
(Speci\214es the number of characters in the character string.)42.333 E
F2(dir)72 281.3 Q(ection_r)-.407 E(eturn)-.407 E F1(Returns the v)144
294.3 Q(alue of the direction hint \()-.275 E F0 -.275(Fo).916 G
(ntLeftT).275 E(oRight)-1.012 E F1(or)3.666 E F0 -.275(Fo)3.666 G
(ntRightT).275 E(oLeft)-1.012 E F1(\).).916 E F2(font_ascent_r)72 311.2
Q(eturn)-.407 E F1(Returns the font ascent.)144 324.2 Q F2
(font_descent_r)72 341.1 Q(eturn)-.407 E F1(Returns the font descent.)
144 354.1 Q F2 -.11(ov)72 371 S(er).11 E(all_r)-.165 E(eturn)-.407 E F1
(Returns the o)8.519 E -.165(ve)-.165 G(rall size in the speci\214ed)
.165 E F0(XCharStruct)3.666 E F1(structure.)3.666 E 36 366.65 36 377.65
DL 36 364.65 36 375.65 DL 41.5 375.9 36 375.9 DL 43.5 375.9 38 375.9 DL
49 375.9 43.5 375.9 DL(The)72 400.9 Q F0(XQueryT)3.666 E(extExtents)
-1.012 E F1(and)3.666 E F0(XQueryT)3.666 E(extExtents16)-1.012 E F1
(functions return the bounding box of the)3.666 E(speci\214ed 8-bit and\
 16-bit character string in the speci\214ed font or the font contained \
in the speci-)72 413.9 Q(\214ed GC.)72 426.9 Q
(These functions query the X serv)5.5 E(er and, therefore, suf)-.165 E
(fer the round-trip o)-.275 E -.165(ve)-.165 G(rhead that is).165 E -.22
(avo)72 439.9 S(ided by).22 E F0(XT)3.666 E(extExtents)-1.012 E F1(and)
3.666 E F0(XT)3.666 E(extExtents16)-1.012 E F1 5.5(.B).916 G
(oth functions return a)-5.5 E F0(XCharStruct)3.666 E F1(struc-)3.666 E
(ture, whose members are set to the v)72 452.9 Q(alues as follo)-.275 E
(ws.)-.275 E(The ascent member is set to the maximum of the ascent metr\
ics of all characters in the string.)72 469.8 Q
(The descent member is set to the maximum of the descent metrics.)72
482.8 Q(The width member is set to)5.5 E(the sum of the character)72
495.8 Q(-width metrics of all characters in the string.)-.22 E -.165(Fo)
5.5 G 2.75(re).165 G(ach character in the)-2.75 E
(string, let W be the sum of the character)72 508.8 Q
(-width metrics of all characters preceding it in the string.)-.22 E
(Let L be the left-side-bearing metric of the character plus W)72 521.8
Q 5.5(.L)-1.012 G(et R be the right-side-bearing met-)-5.5 E
(ric of the character plus W)72 534.8 Q 5.5(.T)-1.012 G
(he lbearing member is set to the minimum L of all characters in the)
-5.5 E 2.75(string. The)72 547.8 R
(rbearing member is set to the maximum R.)2.75 E -.165(Fo)72 564.7 S
2.75(rf).165 G(onts de\214ned with linear inde)-2.75 E
(xing rather than 2-byte matrix inde)-.165 E(xing, each)-.165 E F0
(XChar2b)3.666 E F1(struc-)3.666 E(ture is interpreted as a 16-bit numb\
er with byte1 as the most signi\214cant byte.)72 577.7 Q
(If the font has no)5.5 E(de\214ned def)72 590.7 Q(ault character)-.11 E
2.75(,u)-.44 G(nde\214ned characters in the string are tak)-2.75 E
(en to ha)-.11 E .33 -.165(ve a)-.22 H(ll zero metrics.).165 E
(Characters with all zero metrics are ignored.)72 607.6 Q
(If the font has no de\214ned def)5.5 E(ault_char)-.11 E 2.75(,t)-.44 G
(he unde-)-2.75 E(\214ned characters in the string are also ignored.)72
620.6 Q F0(XQueryT)72.916 637.5 Q(extExtents)-1.012 E F1(and)3.666 E F0
(XQueryT)3.666 E(extExtents16)-1.012 E F1(can generate)3.666 E F0(BadF)
3.666 E(ont)-.275 E F1(and)3.666 E F0(BadGC)3.666 E F1(errors.)3.666 E
F0 2.75(8.6. Drawing)72 663.5 R -1.012(Te)2.75 G(xt)1.012 E F1
(This section discusses ho)72 680.4 Q 2.75(wt)-.275 G 2.75(od)-2.75 G
(ra)-2.75 E(w:)-.165 E 23.65<8343>72 697.3 S(omple)-23.65 E 2.75(xt)
-.165 G -.165(ex)-2.75 G(t).165 E 23.65<8354>72 714.2 S -.165(ex)-24.42
G 2.75(tc).165 G(haracters)-2.75 E F0(172)279.75 769 Q 0 Cg EP
%%Page: 173 178
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E/F1 11/Times-Roman@0 SF 23.65<8349>72
85 S(mage te)-23.65 E(xt characters)-.165 E(The fundamental te)72 101.9
Q(xt functions)-.165 E F0(XDrawT)3.666 E(ext)-1.012 E F1(and)3.666 E F0
(XDrawT)3.666 E(ext16)-1.012 E F1(use the follo)3.666 E
(wing structures:)-.275 E .44 LW 36 123.55 36 134.55 DL 36 121.55 36
132.55 DL 41.5 119.8 36 119.8 DL 43.5 119.8 38 119.8 DL 49 119.8 43.5
119.8 DL(typedef struct {)72 138.3 Q(char *chars;)108 151.3 Q
(/* pointer to string */)126.551 E(int nchars;)108 164.3 Q
(/* number of characters */)133.866 E(int delta;)108 177.3 Q
(/* delta between strings */)141.192 E -.165(Fo)108 190.3 S(nt font;)
.165 E(/* F)136.462 E(ont to print it in, None don')-.165 E 2.75(tc)
-.198 G(hange */)-2.75 E 2.75(}X)72 203.3 S -1.375 -.77(Te x)-2.75 H
(tItem;).77 E(typedef struct {)72 233.2 Q(XChar2b *chars;)108 246.2 Q
(/* pointer to tw)105.156 E(o-byte characters */)-.11 E(int nchars;)108
259.2 Q(/* number of characters */)133.866 E(int delta;)108 272.2 Q
(/* delta between strings */)141.192 E -.165(Fo)108 285.2 S(nt font;)
.165 E(/* font to print it in, None don')136.462 E 2.75(tc)-.198 G
(hange */)-2.75 E 2.75(}X)72 298.2 S -1.375 -.77(Te x)-2.75 H(tItem16;)
.77 E 36 300.35 36 311.35 DL 36 298.35 36 309.35 DL 41.5 309.6 36 309.6
DL 43.5 309.6 38 309.6 DL 49 309.6 43.5 309.6 DL
(If the font member is not)72 334.6 Q F0(None)3.666 E F1 2.75(,t).916 G
(he font is changed before printing and also is stored in the GC.)-2.75
E(If an error w)72 347.6 Q(as generated during te)-.11 E(xt dra)-.165 E
(wing, the pre)-.165 E(vious items may ha)-.275 E .33 -.165(ve b)-.22 H
(een dra).165 E 2.75(wn. The)-.165 F(baseline of the characters are dra)
72 360.6 Q
(wn starting at the x and y coordinates that you pass in the te)-.165 E
(xt)-.165 E(dra)72 373.6 Q(wing functions.)-.165 E -.165(Fo)72 390.5 S
2.75(re).165 G(xample, consider the background rectangle dra)-2.915 E
(wn by)-.165 E F0(XDrawImageString)3.666 E F1 5.5(.I).916 G 2.75(fy)-5.5
G(ou w)-2.75 E(ant the)-.11 E(upper)72 403.5 Q
(-left corner of the background rectangle to be at pix)-.22 E
(el coordinate \(x,y\), pass the \(x,y +)-.165 E
(ascent\) as the baseline origin coordinates to the te)72 416.5 Q
(xt functions.)-.165 E(The ascent is the font ascent, as)5.5 E(gi)72
429.5 Q -.165(ve)-.275 G 2.75(ni).165 G 2.75(nt)-2.75 G(he)-2.75 E F0
(XF)3.666 E(ontStruct)-.275 E F1 2.75(structure. If)3.666 F(you w)2.75 E
(ant the lo)-.11 E(wer)-.275 E(-left corner of the background rectan-)
-.22 E(gle to be at pix)72 442.5 Q(el coordinate \(x,y\), pass the \(x,\
y \255 descent + 1\) as the baseline origin coordinates)-.165 E
(to the te)72 455.5 Q(xt functions.)-.165 E
(The descent is the font descent, as gi)5.5 E -.165(ve)-.275 G 2.75(ni)
.165 G 2.75(nt)-2.75 G(he)-2.75 E F0(XF)3.666 E(ontStruct)-.275 E F1
(structure.)3.666 E F0 2.75(8.6.1. Drawing)72 481.5 R(Complex T)2.75 E
(ext)-1.012 E F1 1.76 -.88(To d)72 502.3 T(ra).88 E 2.75(w8)-.165 G
(-bit characters in a gi)-2.75 E -.165(ve)-.275 G 2.75(nd).165 G(ra)
-2.75 E -.11(wa)-.165 G(ble, use).11 E F0(XDrawT)3.666 E(ext)-1.012 E F1
(.).916 E F0(173)279.75 769 Q 0 Cg EP
%%Page: 174 179
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E .44 LW 36 76.75 36 87.75 DL 36 74.75
36 85.75 DL 41.5 73 36 73 DL 43.5 73 38 73 DL 49 73 43.5 73 DL/F1 11
/Times-Roman@0 SF(XDra)72 88.9 Q(wT)-.165 E -.165(ex)-.77 G .916(t\()
.165 G/F2 11/Times-Italic@0 SF(display)A F1(,)A F2(d)2.75 E F1(,).916 E
F2(gc)2.75 E F1(,).916 E F2(x)2.75 E F1(,).916 E F2(y)2.75 E F1(,).916 E
F2(items)2.75 E F1(,).916 E F2(nitems)2.75 E F1(\)).916 E(Display *)88.5
101.9 Q F2(display)A F1(;).916 E(Dra)88.5 114.9 Q -.11(wa)-.165 G(ble)
.11 E F2(d)2.75 E F1(;).916 E(GC)88.5 127.9 Q F2(gc)2.75 E F1(;).916 E
(int)88.5 140.9 Q F2(x)2.75 E F1(,).916 E F2(y)2.75 E F1(;).916 E(XT)
88.5 153.9 Q -.165(ex)-.77 G(tItem *).165 E F2(items)A F1(;).916 E(int)
88.5 166.9 Q F2(nitems)2.75 E F1(;).916 E F2(display)72 187.7 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2(d)72 204.6 Q F1(Speci\214es the dra)66.5 E -.11(wa)-.165 G(ble.).11 E
F2(gc)72 221.5 Q F1(Speci\214es the GC.)61.616 E F2(x)72 238.4 Q(y)72
251.4 Q F1(Specify the x and y coordinates, which are relati)67.116 E
.33 -.165(ve t)-.275 H 2.75(ot).165 G(he origin of the speci\214ed)-2.75
E(dra)144 264.4 Q -.11(wa)-.165 G
(ble and de\214ne the origin of the \214rst character).11 E(.)-.605 E F2
(items)72 281.3 Q F1(Speci\214es an array of te)48.779 E(xt items.)-.165
E F2(nitems)72 298.2 Q F1(Speci\214es the number of te)43.279 E
(xt items in the array)-.165 E(.)-.715 E 36 293.85 36 304.85 DL 36
291.85 36 302.85 DL 41.5 303.1 36 303.1 DL 43.5 303.1 38 303.1 DL 49
303.1 43.5 303.1 DL 1.76 -.88(To d)72 341.1 T(ra).88 E 2.75(w2)-.165 G
(-byte characters in a gi)-2.75 E -.165(ve)-.275 G 2.75(nd).165 G(ra)
-2.75 E -.11(wa)-.165 G(ble, use).11 E F0(XDrawT)3.666 E(ext16)-1.012 E
F1(.).916 E 36 358.85 36 369.85 DL 36 356.85 36 367.85 DL 41.5 355.1 36
355.1 DL 43.5 355.1 38 355.1 DL 49 355.1 43.5 355.1 DL(XDra)72 371 Q(wT)
-.165 E -.165(ex)-.77 G -1.834(t16 \().165 F F2(display).916 E F1(,)A F2
(d)2.75 E F1(,).916 E F2(gc)2.75 E F1(,).916 E F2(x)2.75 E F1(,).916 E
F2(y)2.75 E F1(,).916 E F2(items)2.75 E F1(,).916 E F2(nitems)2.75 E F1
(\)).916 E(Display *)88.5 384 Q F2(display)A F1(;).916 E(Dra)88.5 397 Q
-.11(wa)-.165 G(ble).11 E F2(d)2.75 E F1(;).916 E(GC)88.5 410 Q F2(gc)
2.75 E F1(;).916 E(int)88.5 423 Q F2(x)2.75 E F1(,).916 E F2(y)2.75 E F1
(;).916 E(XT)88.5 436 Q -.165(ex)-.77 G(tItem16 *).165 E F2(items)A F1
(;).916 E(int)88.5 449 Q F2(nitems)2.75 E F1(;).916 E F2(display)72
469.8 Q F1(Speci\214es the connection to the X serv)40.221 E(er)-.165 E
(.)-.605 E F2(d)72 486.7 Q F1(Speci\214es the dra)66.5 E -.11(wa)-.165 G
(ble.).11 E F2(gc)72 503.6 Q F1(Speci\214es the GC.)61.616 E F2(x)72
520.5 Q(y)72 533.5 Q F1
(Specify the x and y coordinates, which are relati)67.116 E .33 -.165
(ve t)-.275 H 2.75(ot).165 G(he origin of the speci\214ed)-2.75 E(dra)
144 546.5 Q -.11(wa)-.165 G
(ble and de\214ne the origin of the \214rst character).11 E(.)-.605 E F2
(items)72 563.4 Q F1(Speci\214es an array of te)48.779 E(xt items.)-.165
E F2(nitems)72 580.3 Q F1(Speci\214es the number of te)43.279 E
(xt items in the array)-.165 E(.)-.715 E 36 575.95 36 586.95 DL 36
573.95 36 584.95 DL 41.5 585.2 36 585.2 DL 43.5 585.2 38 585.2 DL 49
585.2 43.5 585.2 DL(The)72 610.2 Q F0(XDrawT)3.666 E(ext16)-1.012 E F1
(function is similar to)3.666 E F0(XDrawT)3.666 E(ext)-1.012 E F1 -.165
(ex)3.666 G(cept that it uses 2-byte or 16-bit charac-).165 E 2.75
(ters. Both)72 623.2 R(functions allo)2.75 E 2.75(wc)-.275 G(omple)-2.75
E 2.75(xs)-.165 G(pacing and font shifts between counted strings.)-2.75
E(Each te)72 640.1 Q(xt item is processed in turn.)-.165 E 2.75(Af)5.5 G
(ont member other than)-2.75 E F0(None)3.666 E F1
(in an item causes the font to)3.666 E
(be stored in the GC and used for subsequent te)72 653.1 Q 2.75(xt. A)
-.165 F(te)2.75 E(xt element delta speci\214es an additional)-.165 E
(change in the position along the x axis before the string is dra)72
666.1 Q 2.75(wn. The)-.165 F(delta is al)2.75 E -.11(wa)-.11 G
(ys added to).11 E(the character origin and is not dependent on an)72
679.1 Q 2.75(yc)-.165 G(haracteristics of the font.)-2.75 E
(Each character image,)5.5 E(as de\214ned by the font in the GC, is tre\
ated as an additional mask for a \214ll operation on the dra)72 692.1 Q
(w-)-.165 E 2.75(able. The)72 705.1 R(dra)2.75 E -.11(wa)-.165 G
(ble is modi\214ed only where the font character has a bit set to 1.).11
E(If a te)5.5 E(xt item gen-)-.165 E(erates a)72 718.1 Q F0(BadF)3.666 E
(ont)-.275 E F1(error)3.666 E 2.75(,t)-.44 G(he pre)-2.75 E(vious te)
-.275 E(xt items may ha)-.165 E .33 -.165(ve b)-.22 H(een dra).165 E
(wn.)-.165 E F0(174)279.75 769 Q 0 Cg EP
%%Page: 175 180
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E/F1 11/Times-Roman@0 SF -.165(Fo)72 85
S 2.75(rf).165 G(onts de\214ned with linear inde)-2.75 E
(xing rather than 2-byte matrix inde)-.165 E(xing, each)-.165 E F0
(XChar2b)3.666 E F1(struc-)3.666 E(ture is interpreted as a 16-bit numb\
er with byte1 as the most signi\214cant byte.)72 98 Q(Both functions us\
e these GC components: function, plane-mask, \214ll-style, font, subwin\
do)72 114.9 Q(w-)-.275 E
(mode, clip-x-origin, clip-y-origin, and clip-mask.)72 127.9 Q(The)5.5 E
2.75(ya)-.165 G(lso use these GC mode-dependent com-)-2.75 E
(ponents: fore)72 140.9 Q(ground, background, tile, stipple, tile-stipp\
le-x-origin, and tile-stipple-y-origin.)-.165 E F0(XDrawT)72.916 157.8 Q
(ext)-1.012 E F1(and)3.666 E F0(XDrawT)3.666 E(ext16)-1.012 E F1
(can generate)3.666 E F0(BadDrawable)3.666 E F1(,).916 E F0(BadF)3.666 E
(ont)-.275 E F1(,).916 E F0(BadGC)3.666 E F1 2.75(,a).916 G(nd)-2.75 E
F0(Bad-)3.666 E(Match)72 170.8 Q F1(errors.)3.666 E F0 2.75
(8.6.2. Drawing)72 196.8 R -1.012(Te)2.75 G(xt Characters)1.012 E F1
1.76 -.88(To d)72 213.7 T(ra).88 E 2.75(w8)-.165 G
(-bit characters in a gi)-2.75 E -.165(ve)-.275 G 2.75(nd).165 G(ra)
-2.75 E -.11(wa)-.165 G(ble, use).11 E F0(XDrawString)3.666 E F1(.).916
E .44 LW 36 231.45 36 242.45 DL 36 229.45 36 240.45 DL 41.5 227.7 36
227.7 DL 43.5 227.7 38 227.7 DL 49 227.7 43.5 227.7 DL(XDra)72 243.6 Q
-1.834(wString \()-.165 F/F2 11/Times-Italic@0 SF(display).916 E F1(,)A
F2(d)2.75 E F1(,).916 E F2(gc)2.75 E F1(,).916 E F2(x)2.75 E F1(,).916 E
F2(y)2.75 E F1(,).916 E F2(string)2.75 E F1(,).916 E F2(length)2.75 E F1
(\)).916 E(Display *)88.5 256.6 Q F2(display)A F1(;).916 E(Dra)88.5
269.6 Q -.11(wa)-.165 G(ble).11 E F2(d)2.75 E F1(;).916 E(GC)88.5 282.6
Q F2(gc)2.75 E F1(;).916 E(int)88.5 295.6 Q F2(x)2.75 E F1(,).916 E F2
(y)2.75 E F1(;).916 E(char *)88.5 308.6 Q F2(string)A F1(;).916 E(int)
88.5 321.6 Q F2(length)2.75 E F1(;).916 E F2(display)72 342.4 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2(d)72 359.3 Q F1(Speci\214es the dra)66.5 E -.11(wa)-.165 G(ble.).11 E
F2(gc)72 376.2 Q F1(Speci\214es the GC.)61.616 E F2(x)72 393.1 Q(y)72
406.1 Q F1(Specify the x and y coordinates, which are relati)67.116 E
.33 -.165(ve t)-.275 H 2.75(ot).165 G(he origin of the speci\214ed)-2.75
E(dra)144 419.1 Q -.11(wa)-.165 G
(ble and de\214ne the origin of the \214rst character).11 E(.)-.605 E F2
(string)72 436 Q F1(Speci\214es the character string.)46.326 E F2
(length)72 452.9 Q F1
(Speci\214es the number of characters in the string ar)44.5 E(gument.)
-.198 E 36 448.55 36 459.55 DL 36 446.55 36 457.55 DL 41.5 457.8 36
457.8 DL 43.5 457.8 38 457.8 DL 49 457.8 43.5 457.8 DL 1.76 -.88(To d)72
495.8 T(ra).88 E 2.75(w2)-.165 G(-byte characters in a gi)-2.75 E -.165
(ve)-.275 G 2.75(nd).165 G(ra)-2.75 E -.11(wa)-.165 G(ble, use).11 E F0
(XDrawString16)3.666 E F1(.).916 E F0(175)279.75 769 Q 0 Cg EP
%%Page: 176 181
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E .44 LW 36 76.75 36 87.75 DL 36 74.75
36 85.75 DL 41.5 73 36 73 DL 43.5 73 38 73 DL 49 73 43.5 73 DL/F1 11
/Times-Roman@0 SF(XDra)72 88.9 Q -1.834(wString16 \()-.165 F/F2 11
/Times-Italic@0 SF(display).916 E F1(,)A F2(d)2.75 E F1(,).916 E F2(gc)
2.75 E F1(,).916 E F2(x)2.75 E F1(,).916 E F2(y)2.75 E F1(,).916 E F2
(string)2.75 E F1(,).916 E F2(length)2.75 E F1(\)).916 E(Display *)88.5
101.9 Q F2(display)A F1(;).916 E(Dra)88.5 114.9 Q -.11(wa)-.165 G(ble)
.11 E F2(d)2.75 E F1(;).916 E(GC)88.5 127.9 Q F2(gc)2.75 E F1(;).916 E
(int)88.5 140.9 Q F2(x)2.75 E F1(,).916 E F2(y)2.75 E F1(;).916 E
(XChar2b *)88.5 153.9 Q F2(string)A F1(;).916 E(int)88.5 166.9 Q F2
(length)2.75 E F1(;).916 E F2(display)72 187.7 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2(d)72 204.6 Q F1(Speci\214es the dra)66.5 E -.11(wa)-.165 G(ble.).11 E
F2(gc)72 221.5 Q F1(Speci\214es the GC.)61.616 E F2(x)72 238.4 Q(y)72
251.4 Q F1(Specify the x and y coordinates, which are relati)67.116 E
.33 -.165(ve t)-.275 H 2.75(ot).165 G(he origin of the speci\214ed)-2.75
E(dra)144 264.4 Q -.11(wa)-.165 G
(ble and de\214ne the origin of the \214rst character).11 E(.)-.605 E F2
(string)72 281.3 Q F1(Speci\214es the character string.)46.326 E F2
(length)72 298.2 Q F1
(Speci\214es the number of characters in the string ar)44.5 E(gument.)
-.198 E 36 293.85 36 304.85 DL 36 291.85 36 302.85 DL 41.5 303.1 36
303.1 DL 43.5 303.1 38 303.1 DL 49 303.1 43.5 303.1 DL(Each character i\
mage, as de\214ned by the font in the GC, is treated as an additional m\
ask for a \214ll)72 328.1 Q(operation on the dra)72 341.1 Q -.11(wa)
-.165 G 2.75(ble. The).11 F(dra)2.75 E -.11(wa)-.165 G
(ble is modi\214ed only where the font character has a bit set to).11 E
2.75(1. F)72 354.1 R(or fonts de\214ned with 2-byte matrix inde)-.165 E
(xing and used with)-.165 E F0(XDrawString16)3.666 E F1 2.75(,e).916 G
(ach byte is)-2.75 E(used as a byte2 with a byte1 of zero.)72 367.1 Q(B\
oth functions use these GC components: function, plane-mask, \214ll-sty\
le, font, subwindo)72 384 Q(w-)-.275 E
(mode, clip-x-origin, clip-y-origin, and clip-mask.)72 397 Q(The)5.5 E
2.75(ya)-.165 G(lso use these GC mode-dependent com-)-2.75 E
(ponents: fore)72 410 Q(ground, background, tile, stipple, tile-stipple\
-x-origin, and tile-stipple-y-origin.)-.165 E F0(XDrawString)72.916
426.9 Q F1(and)3.666 E F0(XDrawString16)3.666 E F1(can generate)3.666 E
F0(BadDrawable)3.666 E F1(,).916 E F0(BadGC)3.666 E F1 2.75(,a).916 G
(nd)-2.75 E F0(BadMatch)3.666 E F1(errors.)72 439.9 Q F0 2.75
(8.6.3. Drawing)72 465.9 R(Image T)2.75 E(ext Characters)-1.012 E F1(So\
me applications, in particular terminal emulators, need to print image \
te)72 482.8 Q(xt in which both the)-.165 E(fore)72 495.8 Q
(ground and background bits of each character are painted.)-.165 E
(This pre)5.5 E -.165(ve)-.275 G(nts anno).165 E(ying \215ick)-.11 E
(er on)-.11 E(man)72 508.8 Q 2.75(yd)-.165 G(isplays.)-2.75 E 1.76 -.88
(To d)72 538.7 T(ra).88 E 2.75(w8)-.165 G(-bit image te)-2.75 E
(xt characters in a gi)-.165 E -.165(ve)-.275 G 2.75(nd).165 G(ra)-2.75
E -.11(wa)-.165 G(ble, use).11 E F0(XDrawImageString)3.666 E F1(.).916 E
F0(176)279.75 769 Q 0 Cg EP
%%Page: 177 182
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E .44 LW 36 76.75 36 87.75 DL 36 74.75
36 85.75 DL 41.5 73 36 73 DL 43.5 73 38 73 DL 49 73 43.5 73 DL/F1 11
/Times-Roman@0 SF(XDra)72 88.9 Q -1.834(wImageString \()-.165 F/F2 11
/Times-Italic@0 SF(display).916 E F1(,)A F2(d)2.75 E F1(,).916 E F2(gc)
2.75 E F1(,).916 E F2(x)2.75 E F1(,).916 E F2(y)2.75 E F1(,).916 E F2
(string)2.75 E F1(,).916 E F2(length)2.75 E F1(\)).916 E(Display *)88.5
101.9 Q F2(display)A F1(;).916 E(Dra)88.5 114.9 Q -.11(wa)-.165 G(ble)
.11 E F2(d)2.75 E F1(;).916 E(GC)88.5 127.9 Q F2(gc)2.75 E F1(;).916 E
(int)88.5 140.9 Q F2(x)2.75 E F1(,).916 E F2(y)2.75 E F1(;).916 E
(char *)88.5 153.9 Q F2(string)A F1(;).916 E(int)88.5 166.9 Q F2(length)
2.75 E F1(;).916 E F2(display)72 187.7 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2(d)72 204.6 Q F1(Speci\214es the dra)66.5 E -.11(wa)-.165 G(ble.).11 E
F2(gc)72 221.5 Q F1(Speci\214es the GC.)61.616 E F2(x)72 238.4 Q(y)72
251.4 Q F1(Specify the x and y coordinates, which are relati)67.116 E
.33 -.165(ve t)-.275 H 2.75(ot).165 G(he origin of the speci\214ed)-2.75
E(dra)144 264.4 Q -.11(wa)-.165 G
(ble and de\214ne the origin of the \214rst character).11 E(.)-.605 E F2
(string)72 281.3 Q F1(Speci\214es the character string.)46.326 E F2
(length)72 298.2 Q F1
(Speci\214es the number of characters in the string ar)44.5 E(gument.)
-.198 E 36 293.85 36 304.85 DL 36 291.85 36 302.85 DL 41.5 303.1 36
303.1 DL 43.5 303.1 38 303.1 DL 49 303.1 43.5 303.1 DL 1.76 -.88(To d)72
341.1 T(ra).88 E 2.75(w2)-.165 G(-byte image te)-2.75 E
(xt characters in a gi)-.165 E -.165(ve)-.275 G 2.75(nd).165 G(ra)-2.75
E -.11(wa)-.165 G(ble, use).11 E F0(XDrawImageString16)3.666 E F1(.).916
E 36 358.85 36 369.85 DL 36 356.85 36 367.85 DL 41.5 355.1 36 355.1 DL
43.5 355.1 38 355.1 DL 49 355.1 43.5 355.1 DL(XDra)72 371 Q -1.834
(wImageString16 \()-.165 F F2(display).916 E F1(,)A F2(d)2.75 E F1(,)
.916 E F2(gc)2.75 E F1(,).916 E F2(x)2.75 E F1(,).916 E F2(y)2.75 E F1
(,).916 E F2(string)2.75 E F1(,).916 E F2(length)2.75 E F1(\)).916 E
(Display *)88.5 384 Q F2(display)A F1(;).916 E(Dra)88.5 397 Q -.11(wa)
-.165 G(ble).11 E F2(d)2.75 E F1(;).916 E(GC)88.5 410 Q F2(gc)2.75 E F1
(;).916 E(int)88.5 423 Q F2(x)2.75 E F1(,).916 E F2(y)2.75 E F1(;).916 E
(XChar2b *)88.5 436 Q F2(string)A F1(;).916 E(int)88.5 449 Q F2(length)
2.75 E F1(;).916 E F2(display)72 469.8 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2(d)72 486.7 Q F1(Speci\214es the dra)66.5 E -.11(wa)-.165 G(ble.).11 E
F2(gc)72 503.6 Q F1(Speci\214es the GC.)61.616 E F2(x)72 520.5 Q(y)72
533.5 Q F1(Specify the x and y coordinates, which are relati)67.116 E
.33 -.165(ve t)-.275 H 2.75(ot).165 G(he origin of the speci\214ed)-2.75
E(dra)144 546.5 Q -.11(wa)-.165 G
(ble and de\214ne the origin of the \214rst character).11 E(.)-.605 E F2
(string)72 563.4 Q F1(Speci\214es the character string.)46.326 E F2
(length)72 580.3 Q F1
(Speci\214es the number of characters in the string ar)44.5 E(gument.)
-.198 E 36 575.95 36 586.95 DL 36 573.95 36 584.95 DL 41.5 585.2 36
585.2 DL 43.5 585.2 38 585.2 DL 49 585.2 43.5 585.2 DL(The)72 610.2 Q F0
(XDrawImageString16)3.666 E F1(function is similar to)3.666 E F0
(XDrawImageString)3.666 E F1 -.165(ex)3.666 G(cept that it uses 2-byte)
.165 E(or 16-bit characters.)72 623.2 Q
(Both functions also use both the fore)5.5 E(ground and background pix)
-.165 E(els of the)-.165 E(GC in the destination.)72 636.2 Q(The ef)72
653.1 Q(fect is \214rst to \214ll a destination rectangle with the back\
ground pix)-.275 E(el de\214ned in the GC and)-.165 E
(then to paint the te)72 666.1 Q(xt with the fore)-.165 E(ground pix)
-.165 E 2.75(el. The)-.165 F(upper)2.75 E
(-left corner of the \214lled rectangle is at:)-.22 E
([x, y \255 font-ascent])108 689.5 Q(The width is:)72 712.9 Q F0(177)
279.75 769 Q 0 Cg EP
%%Page: 178 183
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E/F1 11/Times-Roman@0 SF -.165(ove)108
85 S(rall-width).165 E(The height is:)72 108.4 Q
(font-ascent + font-descent)108 131.8 Q(The o)72 155.2 Q -.165(ve)-.165
G(rall-width, font-ascent, and font-descent are as w).165 E
(ould be returned by)-.11 E F0(XQueryT)3.666 E(extEx-)-1.012 E(tents)72
168.2 Q F1(using gc and string.)3.666 E(The function and \214ll-style d\
e\214ned in the GC are ignored for these)5.5 E 2.75(functions. The)72
181.2 R(ef)2.75 E(fecti)-.275 E .33 -.165(ve f)-.275 H(unction is).165 E
F0(GXcopy)3.666 E F1 2.75(,a).916 G(nd the ef)-2.75 E(fecti)-.275 E .33
-.165(ve \214)-.275 H(ll-style is).165 E F0(FillSolid)3.666 E F1(.).916
E -.165(Fo)72 198.1 S 2.75(rf).165 G
(onts de\214ned with 2-byte matrix inde)-2.75 E(xing and used with)-.165
E F0(XDrawImageString)3.666 E F1 2.75(,e).916 G(ach byte is)-2.75 E
(used as a byte2 with a byte1 of zero.)72 211.1 Q
(Both functions use these GC components: plane-mask, fore)72 228 Q
(ground, background, font, subwin-)-.165 E(do)72 241 Q
(w-mode, clip-x-origin, clip-y-origin, and clip-mask.)-.275 E F0
(XDrawImageString)72.916 257.9 Q F1(and)3.666 E F0(XDrawImageString16)
3.666 E F1(can generate)3.666 E F0(BadDrawable)3.666 E F1(,).916 E F0
(BadGC)3.666 E F1 2.75(,a).916 G(nd)-2.75 E F0(BadMatch)72.916 270.9 Q
F1(errors.)3.666 E F0 2.75(8.7. T)72 300.8 R
(ransferring Images between Client and Ser)-.814 E -.11(ve)-.11 G(r).11
E F1(Xlib pro)72 317.7 Q(vides functions that you can use to transfer i\
mages between a client and the serv)-.165 E(er)-.165 E(.)-.605 E
(Because the serv)72 330.7 Q(er may require di)-.165 E -.165(ve)-.275 G
(rse data formats, Xlib pro).165 E(vides an image object that fully)
-.165 E(describes the data in memory and that pro)72 343.7 Q
(vides for basic operations on that data.)-.165 E -1.21(Yo)5.5 G 2.75
(us)1.21 G(hould ref-)-2.75 E(erence the data through the image object \
rather than referencing the data directly)72 356.7 Q 5.5(.H)-.715 G
-.275(ow)-5.5 G -2.365 -.275(ev e).275 H .88 -.44(r, s).275 H(ome).44 E
(implementations of the Xlib library may ef)72 369.7 Q
(\214ciently deal with frequently used data formats by)-.275 E
(replacing functions in the procedure v)72 382.7 Q
(ector with special case functions.)-.165 E(Supported operations)5.5 E
(include destro)72 395.7 Q(ying the image, getting a pix)-.11 E
(el, storing a pix)-.165 E(el, e)-.165 E
(xtracting a subimage of an image,)-.165 E
(and adding a constant to an image \(see section 16.8\).)72 408.7 Q
(All the image manipulation functions discussed in this section mak)72
425.6 Q 2.75(eu)-.11 G(se of the)-2.75 E F0(XImage)3.666 E F1
(structure,)3.666 E(which describes an image as it e)72 438.6 Q
(xists in the client')-.165 E 2.75(sm)-.605 G(emory)-2.75 E(.)-.715 E F0
(178)279.75 769 Q 0 Cg EP
%%Page: 179 184
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E .44 LW 36 76.75 36 87.75 DL 36 74.75
36 85.75 DL 41.5 73 36 73 DL 43.5 73 38 73 DL 49 73 43.5 73 DL/F1 11
/Times-Roman@0 SF(typedef struct _XImage {)72 91.5 Q(int width, height;)
108 104.5 Q(/* size of image */)104.518 E(int xof)108 117.5 Q 129.554
(fset; /*)-.275 F(number of pix)2.75 E(els of)-.165 E
(fset in X direction */)-.275 E(int format;)108 130.5 Q
(/* XYBitmap, XYPixmap, ZPixmap */)133.25 E(char *data;)108 143.5 Q
(/* pointer to image data */)131.435 E(int byte_order;)108 156.5 Q
(/* data byte order)114.924 E 2.75(,L)-.44 G(SBFirst, MSBFirst */)-2.75
E(int bitmap_unit;)108 169.5 Q(/* quant. of scanline 8, 16, 32 */)
109.402 E(int bitmap_bit_order;)108 182.5 Q(/* LSBFirst, MSBFirst */)
86.192 E(int bitmap_pad;)108 195.5 Q
(/* 8, 16, 32 either XY or ZPixmap */)110.634 E(int depth;)108 208.5 Q
(/* depth of image */)138.134 E(int bytes_per_line;)108 221.5 Q
(/* accelerator to ne)97.808 E(xt scanline */)-.165 E(int bits_per_pix)
108 234.5 Q 97.049(el; /*)-.165 F(bits per pix)2.75 E(el \(ZPixmap\) */)
-.165 E(unsigned long red_mask;)108 247.5 Q(/* bits in z arrangement */)
69.395 E(unsigned long green_mask;)108 260.5 Q(unsigned long blue_mask;)
108 273.5 Q(XPointer obdata;)108 286.5 Q
(/* hook for the object routines to hang on */)105.145 E(struct funcs {)
108 299.5 Q(/* image manipulation routines */)120.952 E
(struct _XImage *\(*create_image\)\(\);)144 312.5 Q(int \(*destro)144
325.5 Q(y_image\)\(\);)-.11 E(unsigned long \(*get_pix)144 338.5 Q
(el\)\(\);)-.165 E(int \(*put_pix)144 351.5 Q(el\)\(\);)-.165 E
(struct _XImage *\(*sub_image\)\(\);)144 364.5 Q(int \(*add_pix)144
377.5 Q(el\)\(\);)-.165 E 2.75(}f)108 390.5 S(;)-2.75 E 2.75(}X)72 403.5
S(Image;)-2.75 E 36 405.65 36 416.65 DL 36 403.65 36 414.65 DL 41.5
414.9 36 414.9 DL 43.5 414.9 38 414.9 DL 49 414.9 43.5 414.9 DL 1.76
-.88(To i)72 452.9 T
(nitialize the image manipulation routines of an image structure, use)
.88 E F0(XInitImage)3.666 E F1(.).916 E 36 470.65 36 481.65 DL 36 468.65
36 479.65 DL 41.5 466.9 36 466.9 DL 43.5 466.9 38 466.9 DL 49 466.9 43.5
466.9 DL(Status XInitImage)72 482.8 Q(\().916 E/F2 11/Times-Italic@0 SF
(ima).916 E -.11(ge)-.11 G F1(\))1.026 E(XImage *)88.5 495.8 Q F2(ima)A
-.11(ge)-.11 G F1(;)1.026 E F2(xima)72 516.6 Q -.11(ge)-.11 G F1
(Speci\214es the image.)40.562 E 36 512.25 36 523.25 DL 36 510.25 36
521.25 DL 41.5 521.5 36 521.5 DL 43.5 521.5 38 521.5 DL 49 521.5 43.5
521.5 DL(The)72 546.5 Q F0(XInitImage)3.666 E F1(function initializes t\
he internal image manipulation routines of an image struc-)3.666 E
(ture, based on the v)72 559.5 Q(alues of the v)-.275 E
(arious structure members.)-.275 E
(All \214elds other than the manipulation)5.5 E
(routines must already be initialized.)72 572.5 Q
(If the bytes_per_line member is zero,)5.5 E F0(XInitImage)3.666 E F1
(will)3.666 E(assume the image data is contiguous in memory and set the\
 bytes_per_line member to an appro-)72 585.5 Q(priate v)72 598.5 Q
(alue based on the other members; otherwise, the v)-.275 E
(alue of bytes_per_line is not changed.)-.275 E(All of the manipulation\
 routines are initialized to functions that other Xlib image manipulati\
on)72 611.5 Q(functions need to operate on the type of image speci\214e\
d by the rest of the structure.)72 624.5 Q
(This function must be called for an)72 641.4 Q 2.75(yi)-.165 G
(mage constructed by the client before passing it to an)-2.75 E 2.75(yo)
-.165 G(ther)-2.75 E(Xlib function.)72 654.4 Q(Image structures created\
 or returned by Xlib do not need to be initialized in this)5.5 E -.11
(fa)72 667.4 S(shion.).11 E(This function returns a nonzero status if i\
nitialization of the structure is successful.)72 684.3 Q
(It returns zero)5.5 E(if it detected some error or inconsistenc)72
697.3 Q 2.75(yi)-.165 G 2.75(nt)-2.75 G
(he structure, in which case the image is not changed.)-2.75 E 1.76 -.88
(To c)72 727.2 T(ombine an image with a rectangle of a dra).88 E -.11
(wa)-.165 G(ble on the display).11 E 2.75(,u)-.715 G(se)-2.75 E F0
(XPutImage)3.666 E F1(.).916 E F0(179)279.75 769 Q 0 Cg EP
%%Page: 180 185
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E .44 LW 36 76.75 36 87.75 DL 36 74.75
36 85.75 DL 41.5 73 36 73 DL 43.5 73 38 73 DL 49 73 43.5 73 DL/F1 11
/Times-Roman@0 SF -1.834(XPutImage \()72 88.9 R/F2 11/Times-Italic@0 SF
(display).916 E F1(,)A F2(d)2.75 E F1(,).916 E F2(gc)2.75 E F1(,).916 E
F2(ima)2.75 E -.11(ge)-.11 G F1(,)1.026 E F2(sr)2.75 E(c_x)-.407 E F1(,)
A F2(sr)2.75 E(c_y)-.407 E F1(,)A F2(dest_x)2.75 E F1(,).916 E F2
(dest_y)2.75 E F1(,).916 E F2(width)2.75 E F1(,).916 E F2(height)2.75 E
F1(\)).916 E(Display *)94 101.9 Q F2(display)A F1(;).916 E(Dra)94 114.9
Q -.11(wa)-.165 G(ble).11 E F2(d)2.75 E F1(;).916 E(GC)94 127.9 Q F2(gc)
2.75 E F1(;).916 E(XImage *)94 140.9 Q F2(ima)A -.11(ge)-.11 G F1(;)
1.026 E(int)94 153.9 Q F2(sr)2.75 E(c_x)-.407 E F1(,).916 E F2(sr)2.75 E
(c_y)-.407 E F1(;).916 E(int)94 166.9 Q F2(dest_x)2.75 E F1(,).916 E F2
(dest_y)2.75 E F1(;).916 E(unsigned int)94 179.9 Q F2(width)2.75 E F1(,)
.916 E F2(height)2.75 E F1(;).916 E F2(display)72 200.7 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2(d)72 217.6 Q F1(Speci\214es the dra)66.5 E -.11(wa)-.165 G(ble.).11 E
F2(gc)72 234.5 Q F1(Speci\214es the GC.)61.616 E F2(ima)72 251.4 Q -.11
(ge)-.11 G F1(Speci\214es the image you w)45.446 E
(ant combined with the rectangle.)-.11 E F2(sr)72 268.3 Q(c_x)-.407 E F1
(Speci\214es the of)48.581 E
(fset in X from the left edge of the image de\214ned by the)-.275 E F0
(XImage)3.666 E F1(structure.)144 281.3 Q F2(sr)72 298.2 Q(c_y)-.407 E
F1(Speci\214es the of)48.581 E
(fset in Y from the top edge of the image de\214ned by the)-.275 E F0
(XImage)3.666 E F1(structure.)144 311.2 Q F2(dest_x)72 328.1 Q(dest_y)72
341.1 Q F1(Specify the x and y coordinates, which are relati)43.895 E
.33 -.165(ve t)-.275 H 2.75(ot).165 G(he origin of the dra)-2.75 E -.11
(wa)-.165 G(ble).11 E(and are the coordinates of the subimage.)144 354.1
Q F2(width)72 371 Q(height)72 384 Q F1(Specify the width and height of \
the subimage, which de\214ne the dimensions of the)44.5 E(rectangle.)144
397 Q 36 392.65 36 403.65 DL 36 390.65 36 401.65 DL 41.5 401.9 36 401.9
DL 43.5 401.9 38 401.9 DL 49 401.9 43.5 401.9 DL(The)72 426.9 Q F0
(XPutImage)3.666 E F1
(function combines an image with a rectangle of the speci\214ed dra)
3.666 E -.11(wa)-.165 G 2.75(ble. The).11 F
(section of the image de\214ned by the src_x, src_y)72 439.9 Q 2.75(,w)
-.715 G(idth, and height ar)-2.75 E(guments is dra)-.198 E(wn on the)
-.165 E(speci\214ed part of the dra)72 452.9 Q -.11(wa)-.165 G 2.75
(ble. If).11 F F0(XYBitmap)3.666 E F1
(format is used, the depth of the image must be one,)3.666 E(or a)72
465.9 Q F0(BadMatch)3.666 E F1(error results.)3.666 E(The fore)5.5 E
(ground pix)-.165 E(el in the GC de\214nes the source for the one bits)
-.165 E(in the image, and the background pix)72 478.9 Q
(el de\214nes the source for the zero bits.)-.165 E -.165(Fo)5.5 G(r)
.165 E F0(XYPixmap)3.666 E F1(and)3.666 E F0(ZPixmap)72.916 491.9 Q F1
2.75(,t).916 G(he depth of the image must match the depth of the dra)
-2.75 E -.11(wa)-.165 G(ble, or a).11 E F0(BadMatch)3.666 E F1(error)
3.666 E(results.)72 504.9 Q(If the characteristics of the image \(for e)
72 521.8 Q(xample, byte_order and bitmap_unit\) dif)-.165 E
(fer from what the)-.275 E(serv)72 534.8 Q(er requires,)-.165 E F0
(XPutImage)3.666 E F1(automatically mak)3.666 E(es the appropriate con)
-.11 E -.165(ve)-.44 G(rsions.).165 E
(This function uses these GC components: function, plane-mask, subwindo)
72 551.7 Q(w-mode, clip-x-origin,)-.275 E(clip-y-origin, and clip-mask.)
72 564.7 Q(It also uses these GC mode-dependent components: fore)5.5 E
(ground and)-.165 E(background.)72 577.7 Q F0(XPutImage)72.916 594.6 Q
F1(can generate)3.666 E F0(BadDrawable)3.666 E F1(,).916 E F0(BadGC)
3.666 E F1(,).916 E F0(BadMatch)3.666 E F1 2.75(,a).916 G(nd)-2.75 E F0
(BadV)3.666 E(alue)-1.012 E F1(errors.)3.666 E 1.76 -.88(To r)72 624.5 T
(eturn the contents of a rectangle in a gi).88 E -.165(ve)-.275 G 2.75
(nd).165 G(ra)-2.75 E -.11(wa)-.165 G(ble on the display).11 E 2.75(,u)
-.715 G(se)-2.75 E F0(XGetImage)3.666 E F1 5.5(.T).916 G(his)-5.5 E
(function speci\214cally supports rudimentary screen dumps.)72 637.5 Q
F0(180)279.75 769 Q 0 Cg EP
%%Page: 181 186
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E .44 LW 36 76.75 36 87.75 DL 36 74.75
36 85.75 DL 41.5 73 36 73 DL 43.5 73 38 73 DL 49 73 43.5 73 DL/F1 11
/Times-Roman@0 SF(XImage *XGetImage)72 88.9 Q(\().916 E/F2 11
/Times-Italic@0 SF(display).916 E F1(,)A F2(d)2.75 E F1(,).916 E F2(x)
2.75 E F1(,).916 E F2(y)2.75 E F1(,).916 E F2(width)2.75 E F1(,).916 E
F2(height)2.75 E F1(,).916 E F2(plane_mask)2.75 E F1(,)A F2(format)2.75
E F1(\)).916 E(Display *)94 101.9 Q F2(display)A F1(;).916 E(Dra)94
114.9 Q -.11(wa)-.165 G(ble).11 E F2(d)2.75 E F1(;).916 E(int)94 127.9 Q
F2(x)2.75 E F1(,).916 E F2(y)2.75 E F1(;).916 E(unsigned int)94 140.9 Q
F2(width)2.75 E F1(,).916 E F2(height)2.75 E F1(;).916 E(unsigned long)
94 153.9 Q F2(plane_mask)2.75 E F1(;).916 E(int)94 166.9 Q F2(format)
2.75 E F1(;).916 E F2(display)72 187.7 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2(d)72 204.6 Q F1(Speci\214es the dra)66.5 E -.11(wa)-.165 G(ble.).11 E
F2(x)72 221.5 Q(y)72 234.5 Q F1
(Specify the x and y coordinates, which are relati)67.116 E .33 -.165
(ve t)-.275 H 2.75(ot).165 G(he origin of the dra)-2.75 E -.11(wa)-.165
G(ble).11 E(and de\214ne the upper)144 247.5 Q
(-left corner of the rectangle.)-.22 E F2(width)72 264.4 Q(height)72
277.4 Q F1(Specify the width and height of the subimage, which de\214ne\
 the dimensions of the)44.5 E(rectangle.)144 290.4 Q F2(plane_mask)72
307.3 Q F1(Speci\214es the plane mask.)19.453 E F2(format)72 324.2 Q F1
(Speci\214es the format for the image.)42.663 E -1.21(Yo)5.5 G 2.75(uc)
1.21 G(an pass)-2.75 E F0(XYPixmap)3.666 E F1(or)3.666 E F0(ZPixmap)
3.666 E F1(.).916 E 36 319.85 36 330.85 DL 36 317.85 36 328.85 DL 41.5
329.1 36 329.1 DL 43.5 329.1 38 329.1 DL 49 329.1 43.5 329.1 DL(The)72
354.1 Q F0(XGetImage)3.666 E F1(function returns a pointer to an)3.666 E
F0(XImage)3.666 E F1 2.75(structure. This)3.666 F(structure pro)2.75 E
(vides you)-.165 E
(with the contents of the speci\214ed rectangle of the dra)72 367.1 Q
-.11(wa)-.165 G(ble in the format you specify).11 E 5.5(.I)-.715 G 2.75
(ft)-5.5 G(he for)-2.75 E(-)-.22 E(mat ar)72 380.1 Q(gument is)-.198 E
F0(XYPixmap)3.666 E F1 2.75(,t).916 G
(he image contains only the bit planes you passed to the)-2.75 E
(plane_mask ar)72 393.1 Q 2.75(gument. If)-.198 F(the plane_mask ar)2.75
E(gument only requests a subset of the planes of the)-.198 E(display)72
406.1 Q 2.75(,t)-.715 G
(he depth of the returned image will be the number of planes requested.)
-2.75 E(If the format)5.5 E(ar)72 419.1 Q(gument is)-.198 E F0(ZPixmap)
3.666 E F1(,).916 E F0(XGetImage)3.666 E F1
(returns as zero the bits in all planes not speci\214ed in the)3.666 E
(plane_mask ar)72 432.1 Q 2.75(gument. The)-.198 F
(function performs no range checking on the v)2.75 E
(alues in plane_mask)-.275 E(and ignores e)72 445.1 Q(xtraneous bits.)
-.165 E F0(XGetImage)72.916 462 Q F1
(returns the depth of the image to the depth member of the)3.666 E F0
(XImage)3.666 E F1 2.75(structure. The)3.666 F
(depth of the image is as speci\214ed when the dra)72 475 Q -.11(wa)
-.165 G(ble w).11 E(as created, e)-.11 E(xcept when getting a subset of)
-.165 E(the planes in)72 488 Q F0(XYPixmap)3.666 E F1
(format, when the depth is gi)3.666 E -.165(ve)-.275 G 2.75(nb).165 G
2.75(yt)-2.75 G(he number of bits set to 1 in)-2.75 E(plane_mask.)72 501
Q(If the dra)72 517.9 Q -.11(wa)-.165 G(ble is a pixmap, the gi).11 E
-.165(ve)-.275 G 2.75(nr).165 G
(ectangle must be wholly contained within the pixmap, or a)-2.75 E F0
(BadMatch)72.916 530.9 Q F1(error results.)3.666 E(If the dra)5.5 E -.11
(wa)-.165 G(ble is a windo).11 E 1.43 -.715(w, t)-.275 H(he windo).715 E
2.75(wm)-.275 G(ust be vie)-2.75 E -.11(wa)-.275 G(ble, and it must).11
E(be the case that if there were no inferiors or o)72 543.9 Q -.165(ve)
-.165 G(rlapping windo).165 E(ws, the speci\214ed rectangle of the)-.275
E(windo)72 556.9 Q 2.75(ww)-.275 G(ould be fully visible on the screen \
and wholly contained within the outside edges of the)-2.86 E(windo)72
569.9 Q 1.43 -.715(w, o)-.275 H 2.75(ra).715 G F0(BadMatch).916 E F1
(error results.)3.666 E(Note that the borders of the windo)5.5 E 2.75
(wc)-.275 G(an be included and)-2.75 E(read with this request.)72 582.9
Q(If the windo)5.5 E 2.75(wh)-.275 G
(as backing-store, the backing-store contents are returned)-2.75 E
(for re)72 595.9 Q(gions of the windo)-.165 E 2.75(wt)-.275 G
(hat are obscured by noninferior windo)-2.75 E 2.75(ws. If)-.275 F
(the windo)2.75 E 2.75(wd)-.275 G(oes not)-2.75 E(ha)72 608.9 Q .33
-.165(ve b)-.22 H
(acking-store, the returned contents of such obscured re).165 E
(gions are unde\214ned.)-.165 E(The returned)5.5 E
(contents of visible re)72 621.9 Q(gions of inferiors of a dif)-.165 E
(ferent depth than the speci\214ed windo)-.275 E(w')-.275 E 2.75(sd)
-.605 G(epth are)-2.75 E(also unde\214ned.)72 634.9 Q
(The pointer cursor image is not included in the returned contents.)5.5
E(If a problem)5.5 E(occurs,)72 647.9 Q F0(XGetImage)3.666 E F1
(returns NULL.)3.666 E F0(XGetImage)72.916 664.8 Q F1(can generate)3.666
E F0(BadDrawable)3.666 E F1(,).916 E F0(BadMatch)3.666 E F1 2.75(,a).916
G(nd)-2.75 E F0(BadV)3.666 E(alue)-1.012 E F1(errors.)3.666 E 1.76 -.88
(To c)72 694.7 T(op).88 E 2.75(yt)-.11 G
(he contents of a rectangle on the display to a location within a pree)
-2.75 E(xisting image struc-)-.165 E(ture, use)72 707.7 Q F0
(XGetSubImage)3.666 E F1(.).916 E F0(181)279.75 769 Q 0 Cg EP
%%Page: 182 187
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E .44 LW 36 76.75 36 87.75 DL 36 74.75
36 85.75 DL 41.5 73 36 73 DL 43.5 73 38 73 DL 49 73 43.5 73 DL/F1 11
/Times-Roman@0 SF(XImage *XGetSubImage)72 88.9 Q(\().916 E/F2 11
/Times-Italic@0 SF(display).916 E F1(,)A F2(d)2.75 E F1(,).916 E F2(x)
2.75 E F1(,).916 E F2(y)2.75 E F1(,).916 E F2(width)2.75 E F1(,).916 E
F2(height)2.75 E F1(,).916 E F2(plane_mask)2.75 E F1(,)A F2(format)2.75
E F1(,).916 E F2(dest_ima)2.75 E -.11(ge)-.11 G F1(,)1.026 E F2(dest_x)
2.75 E F1(,).916 E F2(dest_y)129.75 101.9 Q F1(\)).916 E(Display *)88.5
114.9 Q F2(display)A F1(;).916 E(Dra)88.5 127.9 Q -.11(wa)-.165 G(ble)
.11 E F2(d)2.75 E F1(;).916 E(int)88.5 140.9 Q F2(x)2.75 E F1(,).916 E
F2(y)2.75 E F1(;).916 E(unsigned int)88.5 153.9 Q F2(width)2.75 E F1(,)
.916 E F2(height)2.75 E F1(;).916 E(unsigned long)88.5 166.9 Q F2
(plane_mask)2.75 E F1(;).916 E(int)88.5 179.9 Q F2(format)2.75 E F1(;)
.916 E(XImage *)88.5 192.9 Q F2(dest_ima)A -.11(ge)-.11 G F1(;)1.026 E
(int)88.5 205.9 Q F2(dest_x)2.75 E F1(,).916 E F2(dest_y)2.75 E F1(;)
.916 E F2(display)72 226.7 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2(d)72 243.6 Q F1(Speci\214es the dra)66.5 E -.11(wa)-.165 G(ble.).11 E
F2(x)72 260.5 Q(y)72 273.5 Q F1
(Specify the x and y coordinates, which are relati)67.116 E .33 -.165
(ve t)-.275 H 2.75(ot).165 G(he origin of the dra)-2.75 E -.11(wa)-.165
G(ble).11 E(and de\214ne the upper)144 286.5 Q
(-left corner of the rectangle.)-.22 E F2(width)72 303.4 Q(height)72
316.4 Q F1(Specify the width and height of the subimage, which de\214ne\
 the dimensions of the)44.5 E(rectangle.)144 329.4 Q F2(plane_mask)72
346.3 Q F1(Speci\214es the plane mask.)19.453 E F2(format)72 363.2 Q F1
(Speci\214es the format for the image.)42.663 E -1.21(Yo)5.5 G 2.75(uc)
1.21 G(an pass)-2.75 E F0(XYPixmap)3.666 E F1(or)3.666 E F0(ZPixmap)
3.666 E F1(.).916 E F2(dest_ima)72 380.1 Q -.11(ge)-.11 G F1
(Speci\214es the destination image.)22.225 E F2(dest_x)72 397 Q(dest_y)
72 410 Q F1(Specify the x and y coordinates, which are relati)43.895 E
.33 -.165(ve t)-.275 H 2.75(ot).165 G(he origin of the destination)-2.75
E(rectangle, specify its upper)144 423 Q(-left corner)-.22 E 2.75(,a)
-.44 G(nd determine where the subimage is)-2.75 E
(placed in the destination image.)144 436 Q 36 431.65 36 442.65 DL 36
429.65 36 440.65 DL 41.5 440.9 36 440.9 DL 43.5 440.9 38 440.9 DL 49
440.9 43.5 440.9 DL(The)72 465.9 Q F0(XGetSubImage)3.666 E F1(function \
updates dest_image with the speci\214ed subimage in the same man-)3.666
E(ner as)72 478.9 Q F0(XGetImage)3.666 E F1 5.5(.I).916 G 2.75(ft)-5.5 G
(he format ar)-2.75 E(gument is)-.198 E F0(XYPixmap)3.666 E F1 2.75(,t)
.916 G(he image contains only the bit planes)-2.75 E
(you passed to the plane_mask ar)72 491.9 Q 2.75(gument. If)-.198 F
(the format ar)2.75 E(gument is)-.198 E F0(ZPixmap)3.666 E F1(,).916 E
F0(XGetSubImage)3.666 E F1(returns as zero the bits in all planes not s\
peci\214ed in the plane_mask ar)72 504.9 Q 2.75(gument. The)-.198 F
(function per)2.75 E(-)-.22 E(forms no range checking on the v)72 517.9
Q(alues in plane_mask and ignores e)-.275 E(xtraneous bits.)-.165 E
(As a con-)5.5 E -.165(ve)72 530.9 S(nience,).165 E F0(XGetSubImage)
3.666 E F1(returns a pointer to the same)3.666 E F0(XImage)3.666 E F1
(structure speci\214ed by)3.666 E(dest_image.)72 543.9 Q
(The depth of the destination)72 560.8 Q F0(XImage)3.666 E F1
(structure must be the same as that of the dra)3.666 E -.11(wa)-.165 G
2.75(ble. If).11 F(the)2.75 E(speci\214ed subimage does not \214t at th\
e speci\214ed location on the destination image, the right and)72 573.8
Q(bottom edges are clipped.)72 586.8 Q(If the dra)5.5 E -.11(wa)-.165 G
(ble is a pixmap, the gi).11 E -.165(ve)-.275 G 2.75(nr).165 G
(ectangle must be wholly con-)-2.75 E(tained within the pixmap, or a)72
599.8 Q F0(BadMatch)3.666 E F1(error results.)3.666 E(If the dra)5.5 E
-.11(wa)-.165 G(ble is a windo).11 E 1.43 -.715(w, t)-.275 H(he windo)
.715 E(w)-.275 E(must be vie)72 612.8 Q -.11(wa)-.275 G
(ble, and it must be the case that if there were no inferiors or o).11 E
-.165(ve)-.165 G(rlapping windo).165 E(ws,)-.275 E
(the speci\214ed rectangle of the windo)72 625.8 Q 2.75(ww)-.275 G
(ould be fully visible on the screen and wholly contained)-2.86 E
(within the outside edges of the windo)72 638.8 Q 1.43 -.715(w, o)-.275
H 2.75(ra).715 G F0(BadMatch).916 E F1(error results.)3.666 E
(If the windo)5.5 E 2.75(wh)-.275 G(as back-)-2.75 E
(ing-store, then the backing-store contents are returned for re)72 651.8
Q(gions of the windo)-.165 E 2.75(wt)-.275 G(hat are obscured)-2.75 E
(by noninferior windo)72 664.8 Q 2.75(ws. If)-.275 F(the windo)2.75 E
2.75(wd)-.275 G(oes not ha)-2.75 E .33 -.165(ve b)-.22 H
(acking-store, the returned contents of).165 E(such obscured re)72 677.8
Q(gions are unde\214ned.)-.165 E(The returned contents of visible re)5.5
E(gions of inferiors of a)-.165 E(dif)72 690.8 Q
(ferent depth than the speci\214ed windo)-.275 E(w')-.275 E 2.75(sd)
-.605 G(epth are also unde\214ned.)-2.75 E(If a problem occurs,)5.5 E F0
(XGet-)3.666 E(SubImage)72 703.8 Q F1(returns NULL.)3.666 E F0(182)
279.75 769 Q 0 Cg EP
%%Page: 183 188
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E(XGetSubImage)72.916 85 Q/F1 11
/Times-Roman@0 SF(can generate)3.666 E F0(BadDrawable)3.666 E F1(,).916
E F0(BadGC)3.666 E F1(,).916 E F0(BadMatch)3.666 E F1 2.75(,a).916 G(nd)
-2.75 E F0(BadV)3.666 E(alue)-1.012 E F1(errors.)3.666 E F0(183)279.75
769 Q 0 Cg EP
%%Page: 184 189
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E/F1 12/Times-Bold@0 SF(Chapter 9)262.17
111 Q -.216(Wi)183.486 137 S(ndo).216 E 3(wa)-.12 G
(nd Session Manager Functions)-3 E/F2 11/Times-Roman@0 SF
(Although it is dif)72 179.9 Q(\214cult to cate)-.275 E
(gorize functions as e)-.165 E(xclusi)-.165 E -.165(ve)-.275 G
(ly for an application, a windo).165 E 2.75(wm)-.275 G(an-)-2.75 E(ager)
72 192.9 Q 2.75(,o)-.44 G 2.75(ras)-2.75 G(ession manager)-2.75 E 2.75
(,t)-.44 G(he functions in this chapter are most often used by windo)
-2.75 E 2.75(wm)-.275 G(anagers)-2.75 E(and session managers.)72 205.9 Q
(It is not e)5.5 E
(xpected that these functions will be used by most application)-.165 E
2.75(programs. Xlib)72 218.9 R(pro)2.75 E
(vides management functions to:)-.165 E 23.65<8343>72 235.8 S
(hange the parent of a windo)-23.65 E(w)-.275 E 23.65<8343>72 252.7 S
(ontrol the lifetime of a windo)-23.65 E(w)-.275 E 23.65<834d>72 269.6 S
(anage installed colormaps)-23.65 E 23.65<8353>72 286.5 S(et and retrie)
-23.65 E .33 -.165(ve t)-.275 H(he font search path).165 E 23.65<8347>72
303.4 S(rab the serv)-23.65 E(er)-.165 E 23.65<834b>72 320.3 S
(ill a client)-23.65 E 23.65<8343>72 337.2 S(ontrol the screen sa)-23.65
E -.165(ve)-.22 G(r).165 E 23.65<8343>72 354.1 S(ontrol host access)
-23.65 E F0 2.75(9.1. Changing)72 380.1 R(the P)2.75 E(ar)-.11 E
(ent of a W)-.198 E(indo)-.198 E(w)-.11 E F2 1.76 -.88(To c)72 397 T
(hange a windo).88 E(w')-.275 E 2.75(sp)-.605 G(arent to another windo)
-2.75 E 2.75(wo)-.275 G 2.75(nt)-2.75 G(he same screen, use)-2.75 E F0
(XRepar)3.666 E(entW)-.198 E(indo)-.198 E(w)-.11 E F2(.).916 E
(There is no w)72 410 Q(ay to mo)-.11 E .33 -.165(ve a w)-.165 H(indo)
.165 E 2.75(wb)-.275 G(etween screens.)-2.75 E .44 LW 36 427.75 36
438.75 DL 36 425.75 36 436.75 DL 41.5 424 36 424 DL 43.5 424 38 424 DL
49 424 43.5 424 DL(XReparentW)72 439.9 Q(indo)-.44 E .916(w\()-.275 G/F3
11/Times-Italic@0 SF(display)A F2(,)A F3(w)2.75 E F2(,).916 E F3(par)
2.75 E(ent)-.407 E F2(,).916 E F3(x)2.75 E F2(,).916 E F3(y)2.75 E F2
(\)).916 E(Display *)88.5 452.9 Q F3(display)A F2(;).916 E -.44(Wi)88.5
465.9 S(ndo).44 E(w)-.275 E F3(w)2.75 E F2(;).916 E -.44(Wi)88.5 478.9 S
(ndo).44 E(w)-.275 E F3(par)2.75 E(ent)-.407 E F2(;).916 E(int)88.5
491.9 Q F3(x)2.75 E F2(,).916 E F3(y)2.75 E F2(;).916 E F3(display)72
512.7 Q F2(Speci\214es the connection to the X serv)40.221 E(er)-.165 E
(.)-.605 E F3(w)72 529.6 Q F2(Speci\214es the windo)64.663 E -.715(w.)
-.275 G F3(par)72 546.5 Q(ent)-.407 E F2(Speci\214es the parent windo)
43.686 E -.715(w.)-.275 G F3(x)72 563.4 Q(y)72 576.4 Q F2
(Specify the x and y coordinates of the position in the ne)67.116 E 2.75
(wp)-.275 G(arent windo)-2.75 E -.715(w.)-.275 G 36 572.05 36 583.05 DL
36 570.05 36 581.05 DL 41.5 581.3 36 581.3 DL 43.5 581.3 38 581.3 DL 49
581.3 43.5 581.3 DL(If the speci\214ed windo)72 606.3 Q 2.75(wi)-.275 G
2.75(sm)-2.75 G(apped,)-2.75 E F0(XRepar)3.666 E(entW)-.198 E(indo)-.198
E(w)-.11 E F2(automatically performs an)3.666 E F0(UnmapW)3.666 E(in-)
-.198 E(do)72 619.3 Q(w)-.11 E F2(request on it, remo)3.666 E -.165(ve)
-.165 G 2.75(si).165 G 2.75(tf)-2.75 G
(rom its current position in the hierarch)-2.75 E 1.43 -.715(y, a)-.055
H(nd inserts it as the child).715 E(of the speci\214ed parent.)72 632.3
Q(The windo)5.5 E 2.75(wi)-.275 G 2.75(sp)-2.75 G
(laced in the stacking order on top with respect to sibling)-2.75 E
(windo)72 645.3 Q(ws.)-.275 E(After reparenting the speci\214ed windo)72
662.2 Q -.715(w,)-.275 G F0(XRepar)4.381 E(entW)-.198 E(indo)-.198 E(w)
-.11 E F2(causes the X serv)3.666 E(er to generate a)-.165 E F0(Repar)
72.916 675.2 Q(entNotify)-.198 E F2 -2.365 -.275(ev e)3.666 H 2.75
(nt. The).275 F -.165(ove)2.75 G
(rride_redirect member returned in this e).165 E -.165(ve)-.275 G
(nt is set to the win-).165 E(do)72 688.2 Q(w')-.275 E 2.75(sc)-.605 G
(orresponding attrib)-2.75 E 2.75(ute. W)-.22 F(indo)-.44 E 2.75(wm)
-.275 G(anager clients usually should ignore this windo)-2.75 E 2.75(wi)
-.275 G 2.75(ft)-2.75 G(his)-2.75 E(member is set to)72 701.2 Q F0 -.814
(Tr)3.666 G(ue).814 E F2 5.5(.F).916 G(inally)-5.5 E 2.75(,i)-.715 G
2.75(ft)-2.75 G(he speci\214ed windo)-2.75 E 2.75(ww)-.275 G
(as originally mapped, the X serv)-2.86 E(er)-.165 E
(automatically performs a)72 714.2 Q F0(MapW)3.666 E(indo)-.198 E(w)-.11
E F2(request on it.)3.666 E F0(184)279.75 769 Q 0 Cg EP
%%Page: 185 190
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E/F1 11/Times-Roman@0 SF(The X serv)72
85 Q(er performs normal e)-.165 E
(xposure processing on formerly obscured windo)-.165 E 2.75(ws. The)
-.275 F 2.75(Xs)2.75 G(erv)-2.75 E(er)-.165 E(might not generate)72 98 Q
F0(Expose)3.666 E F1 -2.365 -.275(ev e)3.666 H(nts for re).275 E
(gions from the initial)-.165 E F0(UnmapW)3.666 E(indo)-.198 E(w)-.11 E
F1(request that are)3.666 E(immediately obscured by the \214nal)72 111 Q
F0(MapW)3.666 E(indo)-.198 E(w)-.11 E F1 2.75(request. A)3.666 F F0
(BadMatch)3.666 E F1(error results if:)3.666 E 23.65<8354>72 127.9 S
(he ne)-23.65 E 2.75(wp)-.275 G(arent windo)-2.75 E 2.75(wi)-.275 G 2.75
(sn)-2.75 G(ot on the same screen as the old parent windo)-2.75 E -.715
(w.)-.275 G 23.65<8354>72 144.8 S(he ne)-23.65 E 2.75(wp)-.275 G
(arent windo)-2.75 E 2.75(wi)-.275 G 2.75(st)-2.75 G
(he speci\214ed windo)-2.75 E 2.75(wo)-.275 G 2.75(ra)-2.75 G 2.75(ni)
-2.75 G(nferior of the speci\214ed windo)-2.75 E -.715(w.)-.275 G 23.65
<8354>72 161.7 S(he ne)-23.65 E 2.75(wp)-.275 G(arent is)-2.75 E F0
(InputOnly)3.666 E F1 2.75(,a).916 G(nd the windo)-2.75 E 2.75(wi)-.275
G 2.75(sn)-2.75 G(ot.)-2.75 E 23.65<8354>72 178.6 S
(he speci\214ed windo)-23.65 E 2.75(wh)-.275 G(as a)-2.75 E F0 -.11(Pa)
3.666 G -.198(re).11 G(ntRelati).198 E -.11(ve)-.11 G F1
(background, and the ne)3.776 E 2.75(wp)-.275 G(arent windo)-2.75 E 2.75
(wi)-.275 G 2.75(sn)-2.75 G(ot)-2.75 E
(the same depth as the speci\214ed windo)99.5 191.6 Q -.715(w.)-.275 G
F0(XRepar)72.916 208.5 Q(entW)-.198 E(indo)-.198 E(w)-.11 E F1
(can generate)3.666 E F0(BadMatch)3.666 E F1(and)3.666 E F0(BadW)3.666 E
(indo)-.198 E(w)-.11 E F1(errors.)3.666 E F0 2.75(9.2. Contr)72 234.5 R
(olling the Lifetime of a W)-.198 E(indo)-.198 E(w)-.11 E F1(The sa)72
251.4 Q -.165(ve)-.22 G
(-set of a client is a list of other clients' windo).165 E
(ws that, if the)-.275 E 2.75(ya)-.165 G(re inferiors of one of the)
-2.75 E(client')72 264.4 Q 2.75(sw)-.605 G(indo)-2.75 E
(ws at connection close, should not be destro)-.275 E
(yed and should be remapped if the)-.11 E 2.75(ya)-.165 G(re)-2.75 E
2.75(unmapped. F)72 277.4 R(or further information about close-connecti\
on processing, see section 2.6.)-.165 E 1.76 -.88(To a)5.5 H(llo).88 E
(w)-.275 E(an application')72 290.4 Q 2.75(sw)-.605 G(indo)-2.75 E 2.75
(wt)-.275 G 2.75(os)-2.75 G(urvi)-2.75 E .33 -.165(ve w)-.275 H
(hen a windo).165 E 2.75(wm)-.275 G(anager that has reparented a windo)
-2.75 E 2.75(wf)-.275 G(ails,)-2.86 E(Xlib pro)72 303.4 Q(vides the sa)
-.165 E -.165(ve)-.22 G
(-set functions that you can use to control the longe).165 E
(vity of subwindo)-.275 E(ws that)-.275 E(are normally destro)72 316.4 Q
(yed when the parent is destro)-.11 E 2.75(yed. F)-.11 F(or e)-.165 E
(xample, a windo)-.165 E 2.75(wm)-.275 G(anager that w)-2.75 E(ants)-.11
E(to add decoration to a windo)72 329.4 Q 2.75(wb)-.275 G 2.75(ya)-2.75
G(dding a frame might reparent an application')-2.75 E 2.75(sw)-.605 G
(indo)-2.75 E 4.18 -.715(w. W)-.275 H(hen).715 E(the frame is destro)72
342.4 Q(yed, the application')-.11 E 2.75(sw)-.605 G(indo)-2.75 E 2.75
(ws)-.275 G(hould not be destro)-2.75 E(yed b)-.11 E
(ut be returned to its)-.22 E(pre)72 355.4 Q(vious place in the windo)
-.275 E 2.75(wh)-.275 G(ierarch)-2.75 E -.715(y.)-.055 G(The X serv)72
372.3 Q(er automatically remo)-.165 E -.165(ve)-.165 G 2.75(sw).165 G
(indo)-2.75 E(ws from the sa)-.275 E -.165(ve)-.22 G(-set when the).165
E 2.75(ya)-.165 G(re destro)-2.75 E(yed.)-.11 E 1.76 -.88(To a)72 402.2
T(dd or remo).88 E .33 -.165(ve a w)-.165 H(indo).165 E 2.75(wf)-.275 G
(rom the client')-2.75 E 2.75(ss)-.605 G -2.475 -.22(av e)-2.75 H
(-set, use).22 E F0(XChangeSa)3.666 E -.11(ve)-.275 G(Set).11 E F1(.)
.916 E .44 LW 36 419.95 36 430.95 DL 36 417.95 36 428.95 DL 41.5 416.2
36 416.2 DL 43.5 416.2 38 416.2 DL 49 416.2 43.5 416.2 DL(XChangeSa)72
432.1 Q -.165(ve)-.22 G -1.834(Set \().165 F/F2 11/Times-Italic@0 SF
(display).916 E F1(,)A F2(w)2.75 E F1(,).916 E F2 -.165(ch)2.75 G(ang)
.165 E(e_mode)-.11 E F1(\)).916 E(Display *)88.5 445.1 Q F2(display)A F1
(;).916 E -.44(Wi)88.5 458.1 S(ndo).44 E(w)-.275 E F2(w)2.75 E F1(;).916
E(int)88.5 471.1 Q F2 -.165(ch)2.75 G(ang).165 E(e_mode)-.11 E F1(;).916
E F2(display)72 491.9 Q F1(Speci\214es the connection to the X serv)
40.221 E(er)-.165 E(.)-.605 E F2(w)72 508.8 Q F1(Speci\214es the windo)
64.663 E 2.75(wt)-.275 G(hat you w)-2.75 E
(ant to add to or delete from the client')-.11 E 2.75(ss)-.605 G -2.475
-.22(av e)-2.75 H(-set.).22 E F2 -.165(ch)72 525.7 S(ang).165 E(e_mode)
-.11 E F1(Speci\214es the mode.)11.181 E -1.21(Yo)5.5 G 2.75(uc)1.21 G
(an pass)-2.75 E F0(SetModeInsert)3.666 E F1(or)3.666 E F0
(SetModeDelete)3.666 E F1(.).916 E 36 521.35 36 532.35 DL 36 519.35 36
530.35 DL 41.5 530.6 36 530.6 DL 43.5 530.6 38 530.6 DL 49 530.6 43.5
530.6 DL(Depending on the speci\214ed mode,)72 555.6 Q F0(XChangeSa)
3.666 E -.11(ve)-.275 G(Set).11 E F1
(either inserts or deletes the speci\214ed win-)3.666 E(do)72 568.6 Q
2.75(wf)-.275 G(rom the client')-2.75 E 2.75(ss)-.605 G -2.475 -.22
(av e)-2.75 H 2.75(-set. The).22 F(speci\214ed windo)2.75 E 2.75(wm)
-.275 G(ust ha)-2.75 E .33 -.165(ve b)-.22 H(een created by some other)
.165 E(client, or a)72 581.6 Q F0(BadMatch)3.666 E F1(error results.)
3.666 E F0(XChangeSa)72.916 598.5 Q -.11(ve)-.275 G(Set).11 E F1
(can generate)3.666 E F0(BadMatch)3.666 E F1(,).916 E F0(BadV)3.666 E
(alue)-1.012 E F1 2.75(,a).916 G(nd)-2.75 E F0(BadW)3.666 E(indo)-.198 E
(w)-.11 E F1(errors.)3.666 E 1.76 -.88(To a)72 628.4 T(dd a windo).88 E
2.75(wt)-.275 G 2.75(ot)-2.75 G(he client')-2.75 E 2.75(ss)-.605 G
-2.475 -.22(av e)-2.75 H(-set, use).22 E F0(XAddT)3.666 E(oSa)-1.012 E
-.11(ve)-.275 G(Set).11 E F1(.).916 E F0(185)279.75 769 Q 0 Cg EP
%%Page: 186 191
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E .44 LW 36 76.75 36 87.75 DL 36 74.75
36 85.75 DL 41.5 73 36 73 DL 43.5 73 38 73 DL 49 73 43.5 73 DL/F1 11
/Times-Roman@0 SF(XAddT)72 88.9 Q(oSa)-.88 E -.165(ve)-.22 G -1.834
(Set \().165 F/F2 11/Times-Italic@0 SF(display).916 E F1(,)A F2(w)2.75 E
F1(\)).916 E(Display *)88.5 101.9 Q F2(display)A F1(;).916 E -.44(Wi)
88.5 114.9 S(ndo).44 E(w)-.275 E F2(w)2.75 E F1(;).916 E F2(display)72
135.7 Q F1(Speci\214es the connection to the X serv)40.221 E(er)-.165 E
(.)-.605 E F2(w)72 152.6 Q F1(Speci\214es the windo)64.663 E 2.75(wt)
-.275 G(hat you w)-2.75 E(ant to add to the client')-.11 E 2.75(ss)-.605
G -2.475 -.22(av e)-2.75 H(-set.).22 E 36 148.25 36 159.25 DL 36 146.25
36 157.25 DL 41.5 157.5 36 157.5 DL 43.5 157.5 38 157.5 DL 49 157.5 43.5
157.5 DL(The)72 182.5 Q F0(XAddT)3.666 E(oSa)-1.012 E -.11(ve)-.275 G
(Set).11 E F1(function adds the speci\214ed windo)3.666 E 2.75(wt)-.275
G 2.75(ot)-2.75 G(he client')-2.75 E 2.75(ss)-.605 G -2.475 -.22(av e)
-2.75 H 2.75(-set. The).22 F(speci\214ed)2.75 E(windo)72 195.5 Q 2.75
(wm)-.275 G(ust ha)-2.75 E .33 -.165(ve b)-.22 H
(een created by some other client, or a).165 E F0(BadMatch)3.666 E F1
(error results.)3.666 E F0(XAddT)72.916 212.4 Q(oSa)-1.012 E -.11(ve)
-.275 G(Set).11 E F1(can generate)3.666 E F0(BadMatch)3.666 E F1(and)
3.666 E F0(BadW)3.666 E(indo)-.198 E(w)-.11 E F1(errors.)3.666 E 1.76
-.88(To r)72 242.3 T(emo).88 E .33 -.165(ve a w)-.165 H(indo).165 E 2.75
(wf)-.275 G(rom the client')-2.75 E 2.75(ss)-.605 G -2.475 -.22(av e)
-2.75 H(-set, use).22 E F0(XRemo)3.666 E -.11(ve)-.11 G(Fr).11 E(omSa)
-.198 E -.11(ve)-.275 G(Set).11 E F1(.).916 E 36 260.05 36 271.05 DL 36
258.05 36 269.05 DL 41.5 256.3 36 256.3 DL 43.5 256.3 38 256.3 DL 49
256.3 43.5 256.3 DL(XRemo)72 272.2 Q -.165(ve)-.165 G(FromSa).165 E
-.165(ve)-.22 G -1.834(Set \().165 F F2(display).916 E F1(,)A F2(w)2.75
E F1(\)).916 E(Display *)88.5 285.2 Q F2(display)A F1(;).916 E -.44(Wi)
88.5 298.2 S(ndo).44 E(w)-.275 E F2(w)2.75 E F1(;).916 E F2(display)72
319 Q F1(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)
-.605 E F2(w)72 335.9 Q F1(Speci\214es the windo)64.663 E 2.75(wt)-.275
G(hat you w)-2.75 E(ant to delete from the client')-.11 E 2.75(ss)-.605
G -2.475 -.22(av e)-2.75 H(-set.).22 E 36 331.55 36 342.55 DL 36 329.55
36 340.55 DL 41.5 340.8 36 340.8 DL 43.5 340.8 38 340.8 DL 49 340.8 43.5
340.8 DL(The)72 365.8 Q F0(XRemo)3.666 E -.11(ve)-.11 G(Fr).11 E(omSa)
-.198 E -.11(ve)-.275 G(Set).11 E F1(function remo)3.666 E -.165(ve)
-.165 G 2.75(st).165 G(he speci\214ed windo)-2.75 E 2.75(wf)-.275 G
(rom the client')-2.75 E 2.75(ss)-.605 G -2.475 -.22(av e)-2.75 H(-set.)
.22 E(The speci\214ed windo)72 378.8 Q 2.75(wm)-.275 G(ust ha)-2.75 E
.33 -.165(ve b)-.22 H(een created by some other client, or a).165 E F0
(BadMatch)3.666 E F1(error results.)3.666 E F0(XRemo)72.916 395.7 Q -.11
(ve)-.11 G(Fr).11 E(omSa)-.198 E -.11(ve)-.275 G(Set).11 E F1
(can generate)3.666 E F0(BadMatch)3.666 E F1(and)3.666 E F0(BadW)3.666 E
(indo)-.198 E(w)-.11 E F1(errors.)3.666 E F0 2.75(9.3. Managing)72 421.7
R(Installed Colormaps)2.75 E F1(The X serv)72 438.6 Q
(er maintains a list of installed colormaps.)-.165 E -.44(Wi)5.5 G(ndo)
.44 E(ws using these colormaps are guaran-)-.275 E
(teed to display with correct colors; windo)72 451.6 Q
(ws using other colormaps may or may not display with)-.275 E
(correct colors.)72 464.6 Q(Xlib pro)5.5 E(vides functions that you can\
 use to install a colormap, uninstall a col-)-.165 E
(ormap, and obtain a list of installed colormaps.)72 477.6 Q(At an)72
494.5 Q 2.75(yt)-.165 G
(ime, there is a subset of the installed maps that is vie)-2.75 E
(wed as an ordered list and is called)-.275 E(the required list.)72
507.5 Q(The length of the required list is at most M, where M is the mi\
nimum number of)5.5 E(installed colormaps speci\214ed for the screen in\
 the connection setup.)72 520.5 Q(The required list is main-)5.5 E
(tained as follo)72 533.5 Q 2.75(ws. When)-.275 F 2.75(ac)2.75 G
(olormap is speci\214ed to)-2.75 E F0(XInstallColormap)3.666 E F1 2.75
(,i).916 G 2.75(ti)-2.75 G 2.75(sa)-2.75 G(dded to the head of)-2.75 E
(the list; the list is truncated at the tail, if necessary)72 546.5 Q
2.75(,t)-.715 G 2.75(ok)-2.75 G(eep its length to at most M.)-2.86 E
(When a col-)5.5 E(ormap is speci\214ed to)72 559.5 Q F0
(XUninstallColormap)3.666 E F1
(and it is in the required list, it is remo)3.666 E -.165(ve)-.165 G
2.75(df).165 G(rom the)-2.75 E 2.75(list. A)72 572.5 R(colormap is not \
added to the required list when it is implicitly installed by the X ser\
v)2.75 E(er)-.165 E(,)-.44 E(and the X serv)72 585.5 Q(er cannot implic\
itly uninstall a colormap that is in the required list.)-.165 E 1.76
-.88(To i)72 615.4 T(nstall a colormap, use).88 E F0(XInstallColormap)
3.666 E F1(.).916 E F0(186)279.75 769 Q 0 Cg EP
%%Page: 187 192
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E .44 LW 36 76.75 36 87.75 DL 36 74.75
36 85.75 DL 41.5 73 36 73 DL 43.5 73 38 73 DL 49 73 43.5 73 DL/F1 11
/Times-Roman@0 SF -1.834(XInstallColormap \()72 88.9 R/F2 11
/Times-Italic@0 SF(display).916 E F1(,)A F2(colormap)2.75 E F1(\)).916 E
(Display *)88.5 101.9 Q F2(display)A F1(;).916 E(Colormap)88.5 114.9 Q
F2(colormap)2.75 E F1(;).916 E F2(display)72 135.7 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2(colormap)72 152.6 Q F1(Speci\214es the colormap.)29.837 E 36 148.25
36 159.25 DL 36 146.25 36 157.25 DL 41.5 157.5 36 157.5 DL 43.5 157.5 38
157.5 DL 49 157.5 43.5 157.5 DL(The)72 182.5 Q F0(XInstallColormap)3.666
E F1
(function installs the speci\214ed colormap for its associated screen.)
3.666 E(All)5.5 E(windo)72 195.5 Q
(ws associated with this colormap immediately display with true colors.)
-.275 E -1.21(Yo)5.5 G 2.75(ua)1.21 G(ssociated the)-2.75 E(windo)72
208.5 Q(ws with this colormap when you created them by calling)-.275 E
F0(XCr)3.666 E(eateW)-.198 E(indo)-.198 E(w)-.11 E F1(,).916 E F0(XCr)
3.666 E(eateSim-)-.198 E(pleW)72 221.5 Q(indo)-.198 E(w)-.11 E F1(,).916
E F0(XChangeW)3.666 E(indo)-.198 E(wAttrib)-.11 E(utes)-.22 E F1 2.75
(,o).916 G(r)-2.75 E F0(XSetW)3.666 E(indo)-.198 E(wColormap)-.11 E F1
(.).916 E(If the speci\214ed colormap is not already an installed color\
map, the X serv)72 238.4 Q(er generates a)-.165 E F0(Col-)3.666 E
(ormapNotify)72 251.4 Q F1 -2.365 -.275(ev e)3.666 H(nt on each windo)
.275 E 2.75(wt)-.275 G(hat has that colormap.)-2.75 E
(In addition, for e)5.5 E -.165(ve)-.275 G(ry other col-).165 E
(ormap that is installed as a result of a call to)72 264.4 Q F0
(XInstallColormap)3.666 E F1 2.75(,t).916 G(he X serv)-2.75 E
(er generates a)-.165 E F0(Col-)3.666 E(ormapNotify)72 277.4 Q F1 -2.365
-.275(ev e)3.666 H(nt on each windo).275 E 2.75(wt)-.275 G
(hat has that colormap.)-2.75 E F0(XInstallColormap)72.916 294.3 Q F1
(can generate a)3.666 E F0(BadColor)3.666 E F1(error)3.666 E(.)-.605 E
1.76 -.88(To u)72 324.2 T(ninstall a colormap, use).88 E F0
(XUninstallColormap)3.666 E F1(.).916 E 36 341.95 36 352.95 DL 36 339.95
36 350.95 DL 41.5 338.2 36 338.2 DL 43.5 338.2 38 338.2 DL 49 338.2 43.5
338.2 DL -1.834(XUninstallColormap \()72 354.1 R F2(display).916 E F1(,)
A F2(colormap)2.75 E F1(\)).916 E(Display *)88.5 367.1 Q F2(display)A F1
(;).916 E(Colormap)88.5 380.1 Q F2(colormap)2.75 E F1(;).916 E F2
(display)72 400.9 Q F1(Speci\214es the connection to the X serv)40.221 E
(er)-.165 E(.)-.605 E F2(colormap)72 417.8 Q F1
(Speci\214es the colormap.)29.837 E 36 413.45 36 424.45 DL 36 411.45 36
422.45 DL 41.5 422.7 36 422.7 DL 43.5 422.7 38 422.7 DL 49 422.7 43.5
422.7 DL(The)72 447.7 Q F0(XUninstallColormap)3.666 E F1(function remo)
3.666 E -.165(ve)-.165 G 2.75(st).165 G
(he speci\214ed colormap from the required list for its)-2.75 E 2.75
(screen. As)72 460.7 R 2.75(ar)2.75 G
(esult, the speci\214ed colormap might be uninstalled, and the X serv)
-2.75 E(er might implic-)-.165 E
(itly install or uninstall additional colormaps.)72 473.7 Q
(Which colormaps get installed or uninstalled is)5.5 E(serv)72 486.7 Q
(er dependent e)-.165 E
(xcept that the required list must remain installed.)-.165 E
(If the speci\214ed colormap becomes uninstalled, the X serv)72 503.6 Q
(er generates a)-.165 E F0(ColormapNotify)3.666 E F1 -2.365 -.275(ev e)
3.666 H(nt).275 E(on each windo)72 516.6 Q 2.75(wt)-.275 G
(hat has that colormap.)-2.75 E(In addition, for e)5.5 E -.165(ve)-.275
G(ry other colormap that is installed or).165 E
(uninstalled as a result of a call to)72 529.6 Q F0(XUninstallColormap)
3.666 E F1 2.75(,t).916 G(he X serv)-2.75 E(er generates a)-.165 E F0
(ColormapNo-)3.666 E(tify)72 542.6 Q F1 -2.365 -.275(ev e)3.666 H
(nt on each windo).275 E 2.75(wt)-.275 G(hat has that colormap.)-2.75 E
F0(XUninstallColormap)72.916 559.5 Q F1(can generate a)3.666 E F0
(BadColor)3.666 E F1(error)3.666 E(.)-.605 E 1.76 -.88(To o)72 589.4 T
(btain a list of the currently installed colormaps for a gi).88 E -.165
(ve)-.275 G 2.75(ns).165 G(creen, use)-2.75 E F0(XListInstalledCol-)
3.666 E(ormaps)72 602.4 Q F1(.).916 E F0(187)279.75 769 Q 0 Cg EP
%%Page: 188 193
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E .44 LW 36 76.75 36 87.75 DL 36 74.75
36 85.75 DL 41.5 73 36 73 DL 43.5 73 38 73 DL 49 73 43.5 73 DL/F1 11
/Times-Roman@0 SF(Colormap *XListInstalledColormaps)72 88.9 Q(\().916 E
/F2 11/Times-Italic@0 SF(display).916 E F1(,)A F2(w)2.75 E F1(,)A F2
(num_r)2.75 E(eturn)-.407 E F1(\)).916 E(Display *)88.5 101.9 Q F2
(display)A F1(;).916 E -.44(Wi)88.5 114.9 S(ndo).44 E(w)-.275 E F2(w)
2.75 E F1(;).916 E(int *)88.5 127.9 Q F2(num_r)A(eturn)-.407 E F1(;).916
E F2(display)72 148.7 Q F1(Speci\214es the connection to the X serv)
40.221 E(er)-.165 E(.)-.605 E F2(w)72 165.6 Q F1(Speci\214es the windo)
64.663 E 2.75(wt)-.275 G(hat determines the screen.)-2.75 E F2(num_r)72
182.5 Q(eturn)-.407 E F1
(Returns the number of currently installed colormaps.)20.465 E 36 178.15
36 189.15 DL 36 176.15 36 187.15 DL 41.5 187.4 36 187.4 DL 43.5 187.4 38
187.4 DL 49 187.4 43.5 187.4 DL(The)72 212.4 Q F0
(XListInstalledColormaps)3.666 E F1
(function returns a list of the currently installed colormaps for the)
3.666 E(screen of the speci\214ed windo)72 225.4 Q 4.18 -.715(w. T)-.275
H(he order of the colormaps in the list is not signi\214cant and is no)
.715 E -.165(ex)72 238.4 S(plicit indication of the required list.).165
E(When the allocated list is no longer needed, free it by)5.5 E(using)72
251.4 Q F0(XFr)3.666 E(ee)-.198 E F1(.).916 E F0
(XListInstalledColormaps)72.916 268.3 Q F1(can generate a)3.666 E F0
(BadW)3.666 E(indo)-.198 E(w)-.11 E F1(error)3.666 E(.)-.605 E F0 2.75
(9.4. Setting)72 294.3 R(and Retrie)2.75 E(ving the F)-.165 E(ont Sear)
-.275 E(ch P)-.198 E(ath)-.11 E F1(The set of fonts a)72 311.2 Q -.275
(va)-.22 G(ilable from a serv).275 E(er depends on a font search path.)
-.165 E(Xlib pro)5.5 E(vides functions to)-.165 E(set and retrie)72
324.2 Q .33 -.165(ve t)-.275 H(he search path for a serv).165 E(er)-.165
E(.)-.605 E 1.76 -.88(To s)72 354.1 T(et the font search path, use).88 E
F0(XSetF)3.666 E(ontP)-.275 E(ath)-.11 E F1(.).916 E 36 371.85 36 382.85
DL 36 369.85 36 380.85 DL 41.5 368.1 36 368.1 DL 43.5 368.1 38 368.1 DL
49 368.1 43.5 368.1 DL(XSetF)72 384 Q(ontP)-.165 E -1.834(ath \()-.165 F
F2(display).916 E F1(,)A F2(dir)2.75 E(ectories)-.407 E F1(,).916 E F2
(ndir)2.75 E(s)-.11 E F1(\)).916 E(Display *)88.5 397 Q F2(display)A F1
(;).916 E(char **)88.5 410 Q F2(dir)A(ectories)-.407 E F1(;).916 E(int)
88.5 423 Q F2(ndir)2.75 E(s)-.11 E F1(;).916 E F2(display)72 443.8 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2(dir)72 460.7 Q(ectories)-.407 E F1
(Speci\214es the directory path used to look for a font.)24.744 E
(Setting the path to the empty)5.5 E(list restores the def)144 473.7 Q
(ault path de\214ned for the X serv)-.11 E(er)-.165 E(.)-.605 E F2(ndir)
72 490.6 Q(s)-.11 E F1
(Speci\214es the number of directories in the path.)49.494 E 36 486.25
36 497.25 DL 36 484.25 36 495.25 DL 41.5 495.5 36 495.5 DL 43.5 495.5 38
495.5 DL 49 495.5 43.5 495.5 DL(The)72 520.5 Q F0(XSetF)3.666 E(ontP)
-.275 E(ath)-.11 E F1
(function de\214nes the directory search path for font lookup.)3.666 E
(There is only one)5.5 E(search path per X serv)72 533.5 Q(er)-.165 E
2.75(,n)-.44 G(ot one per client.)-2.75 E
(The encoding and interpretation of the strings are)5.5 E
(implementation-dependent, b)72 546.5 Q(ut typically the)-.22 E 2.75(ys)
-.165 G(pecify directories or font serv)-2.75 E(ers to be searched in)
-.165 E(the order listed.)72 559.5 Q(An X serv)5.5 E
(er is permitted to cache font information internally; for e)-.165 E
(xample, it)-.165 E(might cache an entire font from a \214le and not ch\
eck on subsequent opens of that font to see if the)72 572.5 Q
(underlying font \214le has changed.)72 585.5 Q(Ho)5.5 E(we)-.275 E
-.165(ve)-.275 G .88 -.44(r, w).165 H
(hen the font path is changed, the X serv).44 E(er is guaran-)-.165 E(t\
eed to \215ush all cached information about fonts for which there curre\
ntly are no e)72 598.5 Q(xplicit resource)-.165 E(IDs allocated.)72
611.5 Q
(The meaning of an error from this request is implementation-dependent.)
5.5 E F0(XSetF)72.916 628.4 Q(ontP)-.275 E(ath)-.11 E F1(can generate a)
3.666 E F0(BadV)3.666 E(alue)-1.012 E F1(error)3.666 E(.)-.605 E 1.76
-.88(To g)72 658.3 T(et the current font search path, use).88 E F0
(XGetF)3.666 E(ontP)-.275 E(ath)-.11 E F1(.).916 E F0(188)279.75 769 Q 0
Cg EP
%%Page: 189 194
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E .44 LW 36 76.75 36 87.75 DL 36 74.75
36 85.75 DL 41.5 73 36 73 DL 43.5 73 38 73 DL 49 73 43.5 73 DL/F1 11
/Times-Roman@0 SF(char **XGetF)72 88.9 Q(ontP)-.165 E -1.834(ath \()
-.165 F/F2 11/Times-Italic@0 SF(display).916 E F1(,)A F2(npaths_r)2.75 E
(eturn)-.407 E F1(\)).916 E(Display *)88.5 101.9 Q F2(display)A F1(;)
.916 E(int *)88.5 114.9 Q F2(npaths_r)A(eturn)-.407 E F1(;).916 E F2
(display)72 148.7 Q F1(Speci\214es the connection to the X serv)40.221 E
(er)-.165 E(.)-.605 E F2(npaths_r)72 165.6 Q(eturn)-.407 E F1
(Returns the number of strings in the font path array)10.07 E(.)-.715 E
36 161.25 36 172.25 DL 36 159.25 36 170.25 DL 41.5 170.5 36 170.5 DL
43.5 170.5 38 170.5 DL 49 170.5 43.5 170.5 DL(The)72 195.5 Q F0(XGetF)
3.666 E(ontP)-.275 E(ath)-.11 E F1(function allocates and returns an ar\
ray of strings containing the search path.)3.666 E(The contents of thes\
e strings are implementation-dependent and are not intended to be inter\
preted)72 208.5 Q(by client applications.)72 221.5 Q(When it is no long\
er needed, the data in the font path should be freed by)5.5 E(using)72
234.5 Q F0(XFr)3.666 E(eeF)-.198 E(ontP)-.275 E(ath)-.11 E F1(.).916 E
1.76 -.88(To f)72 264.4 T(ree data returned by).88 E F0(XGetF)3.666 E
(ontP)-.275 E(ath)-.11 E F1 2.75(,u).916 G(se)-2.75 E F0(XFr)3.666 E
(eeF)-.198 E(ontP)-.275 E(ath)-.11 E F1(.).916 E 36 282.15 36 293.15 DL
36 280.15 36 291.15 DL 41.5 278.4 36 278.4 DL 43.5 278.4 38 278.4 DL 49
278.4 43.5 278.4 DL(XFreeF)72 294.3 Q(ontP)-.165 E -1.834(ath \()-.165 F
F2(list).916 E F1(\)).916 E(char **)88.5 307.3 Q F2(list)A F1(;).916 E
F2(list)72 341.1 Q F1(Speci\214es the array of strings you w)58.547 E
(ant to free.)-.11 E 36 336.75 36 347.75 DL 36 334.75 36 345.75 DL 41.5
346 36 346 DL 43.5 346 38 346 DL 49 346 43.5 346 DL(The)72 371 Q F0(XFr)
3.666 E(eeF)-.198 E(ontP)-.275 E(ath)-.11 E F1
(function frees the data allocated by)3.666 E F0(XGetF)3.666 E(ontP)
-.275 E(ath)-.11 E F1(.).916 E F0 2.75(9.5. Grab)72 397 R(bing the Ser)
-.11 E -.11(ve)-.11 G(r).11 E F1(Xlib pro)72 413.9 Q
(vides functions that you can use to grab and ungrab the serv)-.165 E
(er)-.165 E 5.5(.T)-.605 G(hese functions can be)-5.5 E
(used to control processing of output on other connections by the windo)
72 426.9 Q 2.75(ws)-.275 G(ystem serv)-2.75 E(er)-.165 E 5.5(.W)-.605 G
(hile)-5.5 E(the serv)72 439.9 Q
(er is grabbed, no processing of requests or close do)-.165 E(wns on an)
-.275 E 2.75(yo)-.165 G(ther connection will)-2.75 E(occur)72 452.9 Q
5.5(.A)-.605 G
(client closing its connection automatically ungrabs the serv)-2.75 E
(er)-.165 E 5.5(.A)-.605 G(lthough grabbing the)-5.5 E(serv)72 465.9 Q
(er is highly discouraged, it is sometimes necessary)-.165 E(.)-.715 E
1.76 -.88(To g)72 495.8 T(rab the serv).88 E(er)-.165 E 2.75(,u)-.44 G
(se)-2.75 E F0(XGrabSer)3.666 E -.11(ve)-.11 G(r).11 E F1(.).916 E 36
513.55 36 524.55 DL 36 511.55 36 522.55 DL 41.5 509.8 36 509.8 DL 43.5
509.8 38 509.8 DL 49 509.8 43.5 509.8 DL(XGrabServ)72 525.7 Q -1.834
(er \()-.165 F F2(display).916 E F1(\)).916 E(Display *)88.5 538.7 Q F2
(display)A F1(;).916 E F2(display)72 559.5 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
36 555.15 36 566.15 DL 36 553.15 36 564.15 DL 41.5 564.4 36 564.4 DL
43.5 564.4 38 564.4 DL 49 564.4 43.5 564.4 DL(The)72 589.4 Q F0
(XGrabSer)3.666 E -.11(ve)-.11 G(r).11 E F1
(function disables processing of requests and close do)3.666 E
(wns on all other connec-)-.275 E(tions than the one this request arri)
72 602.4 Q -.165(ve)-.275 G 2.75(do).165 G 2.75(n. Y)-2.75 F
(ou should not grab the X serv)-1.21 E(er an)-.165 E 2.75(ym)-.165 G
(ore than is)-2.75 E(absolutely necessary)72 615.4 Q(.)-.715 E 1.76 -.88
(To u)72 645.3 T(ngrab the serv).88 E(er)-.165 E 2.75(,u)-.44 G(se)-2.75
E F0(XUngrabSer)3.666 E -.11(ve)-.11 G(r).11 E F1(.).916 E F0(189)279.75
769 Q 0 Cg EP
%%Page: 190 195
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E .44 LW 36 76.75 36 87.75 DL 36 74.75
36 85.75 DL 41.5 73 36 73 DL 43.5 73 38 73 DL 49 73 43.5 73 DL/F1 11
/Times-Roman@0 SF(XUngrabServ)72 88.9 Q -1.834(er \()-.165 F/F2 11
/Times-Italic@0 SF(display).916 E F1(\)).916 E(Display *)88.5 101.9 Q F2
(display)A F1(;).916 E F2(display)72 122.7 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
36 118.35 36 129.35 DL 36 116.35 36 127.35 DL 41.5 127.6 36 127.6 DL
43.5 127.6 38 127.6 DL 49 127.6 43.5 127.6 DL(The)72 152.6 Q F0
(XUngrabSer)3.666 E -.11(ve)-.11 G(r).11 E F1
(function restarts processing of requests and close do)3.666 E
(wns on other connec-)-.275 E 2.75(tions. Y)72 165.6 R(ou should a)-1.21
E -.22(vo)-.22 G(id grabbing the X serv).22 E(er as much as possible.)
-.165 E F0 2.75(9.6. Killing)72 191.6 R(Clients)2.75 E F1(Xlib pro)72
208.5 Q(vides a function to cause the connection to a client to be clos\
ed and its resources to be)-.165 E(destro)72 221.5 Q 2.75(yed. T)-.11 F
2.75(od)-.88 G(estro)-2.75 E 2.75(yac)-.11 G(lient, use)-2.75 E F0
(XKillClient)3.666 E F1(.).916 E 36 239.25 36 250.25 DL 36 237.25 36
248.25 DL 41.5 235.5 36 235.5 DL 43.5 235.5 38 235.5 DL 49 235.5 43.5
235.5 DL -1.834(XKillClient \()72 251.4 R F2(display).916 E F1(,)A F2
-.407(re)2.75 G(sour).407 E(ce)-.407 E F1(\)).916 E(Display *)88.5 264.4
Q F2(display)A F1(;).916 E(XID)88.5 277.4 Q F2 -.407(re)2.75 G(sour).407
E(ce)-.407 E F1(;).916 E F2(display)72 298.2 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2 -.407(re)72 315.1 S(sour).407 E(ce)-.407 E F1(Speci\214es an)34.325 E
2.75(yr)-.165 G(esource associated with the client that you w)-2.75 E
(ant to destro)-.11 E 2.75(yo)-.11 G(r)-2.75 E F0(All-)3.666 E -1.012
(Te)144 328.1 S(mporary)1.012 E F1(.).916 E 36 323.75 36 334.75 DL 36
321.75 36 332.75 DL 41.5 333 36 333 DL 43.5 333 38 333 DL 49 333 43.5
333 DL(The)72 358 Q F0(XKillClient)3.666 E F1
(function forces a close do)3.666 E
(wn of the client that created the resource if a v)-.275 E(alid)-.275 E
(resource is speci\214ed.)72 371 Q
(If the client has already terminated in either)5.5 E F0(RetainP)3.666 E
(ermanent)-.22 E F1(or)3.666 E F0(Retain-)3.666 E -1.012(Te)72 384 S
(mporary)1.012 E F1(mode, all of the client')3.666 E 2.75(sr)-.605 G
(esources are destro)-2.75 E 2.75(yed. If)-.11 F F0(AllT)3.666 E
(emporary)-1.012 E F1(is speci\214ed, the)3.666 E
(resources of all clients that ha)72 397 Q .33 -.165(ve t)-.22 H
(erminated in).165 E F0(RetainT)3.666 E(emporary)-1.012 E F1(are destro)
3.666 E(yed \(see section 2.5\).)-.11 E
(This permits implementation of windo)72 410 Q 2.75(wm)-.275 G(anager f)
-2.75 E(acilities that aid deb)-.11 E 2.75(ugging. A)-.22 F
(client can set)2.75 E(its close-do)72 423 Q(wn mode to)-.275 E F0
(RetainT)3.666 E(emporary)-1.012 E F1 5.5(.I).916 G 2.75(ft)-5.5 G
(he client then crashes, its windo)-2.75 E(ws w)-.275 E(ould not be)-.11
E(destro)72 436 Q 2.75(yed. The)-.11 F
(programmer can then inspect the application')2.75 E 2.75(sw)-.605 G
(indo)-2.75 E 2.75(wt)-.275 G(ree and use the windo)-2.75 E(w)-.275 E
(manager to destro)72 449 Q 2.75(yt)-.11 G(he zombie windo)-2.75 E(ws.)
-.275 E F0(XKillClient)72.916 465.9 Q F1(can generate a)3.666 E F0(BadV)
3.666 E(alue)-1.012 E F1(error)3.666 E(.)-.605 E F0 2.75(9.7. Contr)72
491.9 R(olling the Scr)-.198 E(een Sa)-.198 E -.11(ve)-.275 G(r).11 E F1
(Xlib pro)72 508.8 Q(vides functions that you can use to set or reset t\
he mode of the screen sa)-.165 E -.165(ve)-.22 G .88 -.44(r, t).165 H
2.75(of).44 G(orce or)-2.75 E(acti)72 521.8 Q -.275(va)-.275 G
(te the screen sa).275 E -.165(ve)-.22 G .88 -.44(r, o).165 H 2.75(rt)
.44 G 2.75(oo)-2.75 G(btain the current screen sa)-2.75 E -.165(ve)-.22
G 2.75(rv).165 G(alues.)-3.025 E 1.76 -.88(To s)72 551.7 T
(et the screen sa).88 E -.165(ve)-.22 G 2.75(rm).165 G(ode, use)-2.75 E
F0(XSetScr)3.666 E(eenSa)-.198 E -.11(ve)-.275 G(r).11 E F1(.).916 E F0
(190)279.75 769 Q 0 Cg EP
%%Page: 191 196
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E .44 LW 36 76.75 36 87.75 DL 36 74.75
36 85.75 DL 41.5 73 36 73 DL 43.5 73 38 73 DL 49 73 43.5 73 DL/F1 11
/Times-Roman@0 SF(XSetScreenSa)72 88.9 Q -.165(ve)-.22 G .916(r\().165 G
/F2 11/Times-Italic@0 SF(display)A F1(,)A F2(timeout)2.75 E F1(,).916 E
F2(interval)2.75 E F1(,).916 E F2(pr)2.75 E(efer_blanking)-.407 E F1(,)
.916 E F2(allow_e)2.75 E(xposur)-.22 E(es)-.407 E F1(\)).916 E
(Display *)88.5 101.9 Q F2(display)A F1(;).916 E(int)88.5 114.9 Q F2
(timeout)2.75 E F1(,).916 E F2(interval)2.75 E F1(;).916 E(int)88.5
127.9 Q F2(pr)2.75 E(efer_blanking)-.407 E F1(;).916 E(int)88.5 140.9 Q
F2(allow_e)2.75 E(xposur)-.22 E(es)-.407 E F1(;).916 E F2(display)72
161.7 Q F1(Speci\214es the connection to the X serv)40.221 E(er)-.165 E
(.)-.605 E F2(timeout)72 178.6 Q F1
(Speci\214es the timeout, in seconds, until the screen sa)39 E -.165(ve)
-.22 G 2.75(rt).165 G(urns on.)-2.75 E F2(interval)72 195.5 Q F1
(Speci\214es the interv)37.779 E(al, in seconds, between screen sa)-.275
E -.165(ve)-.22 G 2.75(ra).165 G(lterations.)-2.75 E F2(pr)72 212.4 Q
(efer_blanking)-.407 E F1(Speci\214es ho)144 225.4 Q 2.75(wt)-.275 G
2.75(oe)-2.75 G(nable screen blanking.)-2.75 E -1.21(Yo)5.5 G 2.75(uc)
1.21 G(an pass)-2.75 E F0(DontPr)3.666 E(eferBlanking)-.198 E F1(,).916
E F0(Pr)144.916 238.4 Q(eferBlanking)-.198 E F1 2.75(,o).916 G(r)-2.75 E
F0(DefaultBlanking)3.666 E F1(.).916 E F2(allow_e)72 255.3 Q(xposur)-.22
E(es)-.407 E F1(Speci\214es the screen sa)144 268.3 Q .33 -.165(ve c)
-.22 H(ontrol v).165 E 2.75(alues. Y)-.275 F(ou can pass)-1.21 E F0
(DontAllo)3.666 E(wExposur)-.11 E(es)-.198 E F1(,).916 E F0(Allo)144.916
281.3 Q(wExposur)-.11 E(es)-.198 E F1 2.75(,o).916 G(r)-2.75 E F0
(DefaultExposur)3.666 E(es)-.198 E F1(.).916 E 36 276.95 36 287.95 DL 36
274.95 36 285.95 DL 41.5 286.2 36 286.2 DL 43.5 286.2 38 286.2 DL 49
286.2 43.5 286.2 DL -.385(Ti)72 311.2 S(meout and interv).385 E
(al are speci\214ed in seconds.)-.275 E 2.75(At)5.5 G
(imeout of 0 disables the screen sa)-2.75 E -.165(ve)-.22 G 2.75(r\()
.165 G -.22(bu)-2.75 G 2.75(ta).22 G(n)-2.75 E(acti)72 324.2 Q -.275(va)
-.275 G(ted screen sa).275 E -.165(ve)-.22 G 2.75(ri).165 G 2.75(sn)
-2.75 G(ot deacti)-2.75 E -.275(va)-.275 G
(ted\), and a timeout of \2551 restores the def).275 E 2.75(ault. Other)
-.11 F(ne)2.75 E -.055(ga)-.165 G(ti).055 E -.165(ve)-.275 G -.275(va)72
337.2 S(lues generate a).275 E F0(BadV)3.666 E(alue)-1.012 E F1(error)
3.666 E 5.5(.I)-.605 G 2.75(ft)-5.5 G(he timeout v)-2.75 E
(alue is nonzero,)-.275 E F0(XSetScr)3.666 E(eenSa)-.198 E -.11(ve)-.275
G(r).11 E F1(enables the)3.666 E(screen sa)72 350.2 Q -.165(ve)-.22 G
3.96 -.605(r. A).165 H 2.75(ni).605 G(nterv)-2.75 E
(al of 0 disables the random-pattern motion.)-.275 E
(If no input from de)5.5 E(vices)-.275 E(\(k)72 363.2 Q -.165(ey)-.11 G
(board, mouse, and so on\) is generated for the speci\214ed number of t\
imeout seconds once the).165 E(screen sa)72 376.2 Q -.165(ve)-.22 G 2.75
(ri).165 G 2.75(se)-2.75 G(nabled, the screen sa)-2.75 E -.165(ve)-.22 G
2.75(ri).165 G 2.75(sa)-2.75 G(cti)-2.75 E -.275(va)-.275 G(ted.).275 E
-.165(Fo)72 393.1 S 2.75(re).165 G
(ach screen, if blanking is preferred and the hardw)-2.75 E
(are supports video blanking, the screen)-.11 E(simply goes blank.)72
406.1 Q(Otherwise, if either e)5.5 E(xposures are allo)-.165 E
(wed or the screen can be re)-.275 E(generated)-.165 E(without sending)
72 419.1 Q F0(Expose)3.666 E F1 -2.365 -.275(ev e)3.666 H
(nts to clients, the screen is tiled with the root windo).275 E 2.75(wb)
-.275 G(ackground)-2.75 E(tile randomly re-origined each interv)72 432.1
Q(al seconds.)-.275 E(Otherwise, the screens' state do not change, and)
5.5 E(the screen sa)72 445.1 Q -.165(ve)-.22 G 2.75(ri).165 G 2.75(sn)
-2.75 G(ot acti)-2.75 E -.275(va)-.275 G 2.75(ted. The).275 F(screen sa)
2.75 E -.165(ve)-.22 G 2.75(ri).165 G 2.75(sd)-2.75 G(eacti)-2.75 E
-.275(va)-.275 G(ted, and all screen states are restored).275 E
(at the ne)72 458.1 Q(xt k)-.165 E -.165(ey)-.11 G
(board or pointer input or at the ne).165 E(xt call to)-.165 E F0(XF)
3.666 E(or)-.275 E(ceScr)-.198 E(eenSa)-.198 E -.11(ve)-.275 G(r).11 E
F1(with mode)3.666 E F0(Scr)72.916 471.1 Q(eenSa)-.198 E -.11(ve)-.275 G
(rReset).11 E F1(.).916 E(If the serv)72 488 Q(er)-.165 E
(-dependent screen sa)-.22 E -.165(ve)-.22 G 2.75(rm).165 G
(ethod supports periodic change, the interv)-2.75 E(al ar)-.275 E
(gument)-.198 E(serv)72 501 Q(es as a hint about ho)-.165 E 2.75(wl)
-.275 G
(ong the change period should be, and zero hints that no periodic)-2.75
E(change should be made.)72 514 Q(Examples of w)5.5 E
(ays to change the screen include scrambling the colormap)-.11 E
(periodically)72 527 Q 2.75(,m)-.715 G -.165(ov)-2.75 G
(ing an icon image around the screen periodically).165 E 2.75(,o)-.715 G
2.75(rt)-2.75 G(iling the screen with the)-2.75 E(root windo)72 540 Q
2.75(wb)-.275 G(ackground tile, randomly re-origined periodically)-2.75
E(.)-.715 E F0(XSetScr)72.916 556.9 Q(eenSa)-.198 E -.11(ve)-.275 G(r)
.11 E F1(can generate a)3.666 E F0(BadV)3.666 E(alue)-1.012 E F1(error)
3.666 E(.)-.605 E 1.76 -.88(To f)72 586.8 T(orce the screen sa).88 E
-.165(ve)-.22 G 2.75(ro).165 G 2.75(no)-2.75 G 2.75(ro)-2.75 G -.275(ff)
-2.75 G 2.75(,u).275 G(se)-2.75 E F0(XF)3.666 E(or)-.275 E(ceScr)-.198 E
(eenSa)-.198 E -.11(ve)-.275 G(r).11 E F1(.).916 E 36 604.55 36 615.55
DL 36 602.55 36 613.55 DL 41.5 600.8 36 600.8 DL 43.5 600.8 38 600.8 DL
49 600.8 43.5 600.8 DL(XF)72 616.7 Q(orceScreenSa)-.165 E -.165(ve)-.22
G .916(r\().165 G F2(display)A F1(,).916 E F2(mode)2.75 E F1(\)).916 E
(Display *)88.5 629.7 Q F2(display)A F1(;).916 E(int)88.5 642.7 Q F2
(mode)2.75 E F1(;).916 E F2(display)72 663.5 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2(mode)72 680.4 Q F1(Speci\214es the mode that is to be applied.)48.174
E -1.21(Yo)5.5 G 2.75(uc)1.21 G(an pass)-2.75 E F0(Scr)3.666 E(eenSa)
-.198 E -.11(ve)-.275 G(rActi).11 E -.11(ve)-.11 G F1(or)3.776 E F0(Scr)
144.916 693.4 Q(eenSa)-.198 E -.11(ve)-.275 G(rReset).11 E F1(.).916 E
36 689.05 36 700.05 DL 36 687.05 36 698.05 DL 41.5 698.3 36 698.3 DL
43.5 698.3 38 698.3 DL 49 698.3 43.5 698.3 DL
(If the speci\214ed mode is)72 723.3 Q F0(Scr)3.666 E(eenSa)-.198 E -.11
(ve)-.275 G(rActi).11 E -.11(ve)-.11 G F1(and the screen sa)3.776 E
-.165(ve)-.22 G 2.75(rc).165 G(urrently is deacti)-2.75 E -.275(va)-.275
G(ted,).275 E F0(191)279.75 769 Q 0 Cg EP
%%Page: 192 197
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E(XF)72.916 85 Q(or)-.275 E(ceScr)-.198
E(eenSa)-.198 E -.11(ve)-.275 G(r).11 E/F1 11/Times-Roman@0 SF(acti)
3.666 E -.275(va)-.275 G(tes the screen sa).275 E -.165(ve)-.22 G 2.75
(re).165 G -.165(ve)-3.025 G 2.75(ni).165 G 2.75(ft)-2.75 G
(he screen sa)-2.75 E -.165(ve)-.22 G 2.75(rh).165 G
(ad been disabled with a)-2.75 E(timeout of zero.)72 98 Q
(If the speci\214ed mode is)5.5 E F0(Scr)3.666 E(eenSa)-.198 E -.11(ve)
-.275 G(rReset).11 E F1(and the screen sa)3.666 E -.165(ve)-.22 G 2.75
(rc).165 G(urrently is)-2.75 E(enabled,)72 111 Q F0(XF)3.666 E(or)-.275
E(ceScr)-.198 E(eenSa)-.198 E -.11(ve)-.275 G(r).11 E F1(deacti)3.666 E
-.275(va)-.275 G(tes the screen sa).275 E -.165(ve)-.22 G 2.75(ri).165 G
2.75(fi)-2.75 G 2.75(tw)-2.75 G(as acti)-2.86 E -.275(va)-.275 G
(ted, and the acti).275 E -.275(va)-.275 G(tion).275 E
(timer is reset to its initial state \(as if de)72 124 Q
(vice input had been recei)-.275 E -.165(ve)-.275 G(d\).).165 E F0(XF)
72.916 140.9 Q(or)-.275 E(ceScr)-.198 E(eenSa)-.198 E -.11(ve)-.275 G(r)
.11 E F1(can generate a)3.666 E F0(BadV)3.666 E(alue)-1.012 E F1(error)
3.666 E(.)-.605 E 1.76 -.88(To a)72 170.8 T(cti).88 E -.275(va)-.275 G
(te the screen sa).275 E -.165(ve)-.22 G .88 -.44(r, u).165 H(se).44 E
F0(XActi)3.666 E -.11(va)-.11 G(teScr).11 E(eenSa)-.198 E -.11(ve)-.275
G(r).11 E F1(.).916 E .44 LW 36 188.55 36 199.55 DL 36 186.55 36 197.55
DL 41.5 184.8 36 184.8 DL 43.5 184.8 38 184.8 DL 49 184.8 43.5 184.8 DL
(XActi)72 200.7 Q -.275(va)-.275 G(teScreenSa).275 E -.165(ve)-.22 G
.916(r\().165 G/F2 11/Times-Italic@0 SF(display)A F1(\)).916 E
(Display *)88.5 213.7 Q F2(display)A F1(;).916 E F2(display)72 234.5 Q
F1(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605
E 36 230.15 36 241.15 DL 36 228.15 36 239.15 DL 41.5 239.4 36 239.4 DL
43.5 239.4 38 239.4 DL 49 239.4 43.5 239.4 DL 1.76 -.88(To r)72 277.4 T
(eset the screen sa).88 E -.165(ve)-.22 G .88 -.44(r, u).165 H(se).44 E
F0(XResetScr)3.666 E(eenSa)-.198 E -.11(ve)-.275 G(r).11 E F1(.).916 E
36 295.15 36 306.15 DL 36 293.15 36 304.15 DL 41.5 291.4 36 291.4 DL
43.5 291.4 38 291.4 DL 49 291.4 43.5 291.4 DL(XResetScreenSa)72 307.3 Q
-.165(ve)-.22 G .916(r\().165 G F2(display)A F1(\)).916 E(Display *)88.5
320.3 Q F2(display)A F1(;).916 E F2(display)72 341.1 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
36 336.75 36 347.75 DL 36 334.75 36 345.75 DL 41.5 346 36 346 DL 43.5
346 38 346 DL 49 346 43.5 346 DL 1.76 -.88(To g)72 384 T
(et the current screen sa).88 E -.165(ve)-.22 G 2.75(rv).165 G
(alues, use)-3.025 E F0(XGetScr)3.666 E(eenSa)-.198 E -.11(ve)-.275 G(r)
.11 E F1(.).916 E 36 401.75 36 412.75 DL 36 399.75 36 410.75 DL 41.5 398
36 398 DL 43.5 398 38 398 DL 49 398 43.5 398 DL(XGetScreenSa)72 413.9 Q
-.165(ve)-.22 G .916(r\().165 G F2(display)A F1(,)A F2(timeout_r)2.75 E
(eturn)-.407 E F1(,).916 E F2(interval_r)2.75 E(eturn)-.407 E F1(,).916
E F2(pr)2.75 E(efer_blanking_r)-.407 E(eturn)-.407 E F1(,).916 E F2
(allow_e)121.5 426.9 Q(xposur)-.22 E(es_r)-.407 E(eturn)-.407 E F1(\))
.916 E(Display *)88.5 439.9 Q F2(display)A F1(;).916 E(int *)88.5 452.9
Q F2(timeout_r)A(eturn)-.407 E F1 2.75(,*).916 G F2(interval_r)-2.75 E
(eturn)-.407 E F1(;).916 E(int *)88.5 465.9 Q F2(pr)A(efer_blanking_r)
-.407 E(eturn)-.407 E F1(;).916 E(int *)88.5 478.9 Q F2(allow_e)A
(xposur)-.22 E(es_r)-.407 E(eturn)-.407 E F1(;).916 E F2(display)72
499.7 Q F1(Speci\214es the connection to the X serv)40.221 E(er)-.165 E
(.)-.605 E F2(timeout_r)72 516.6 Q(eturn)-.407 E F1
(Returns the timeout, in seconds, until the screen sa)6.407 E -.165(ve)
-.22 G 2.75(rt).165 G(urns on.)-2.75 E F2(interval_r)72 533.5 Q(eturn)
-.407 E F1(Returns the interv)144 546.5 Q(al between screen sa)-.275 E
-.165(ve)-.22 G 2.75(ri).165 G -2.09 -.44(nv o)-2.75 H(cations.).44 E F2
(pr)72 563.4 Q(efer_blanking_r)-.407 E(eturn)-.407 E F1
(Returns the current screen blanking preference \()144 576.4 Q F0
(DontPr).916 E(eferBlanking)-.198 E F1(,).916 E F0(Pr)144.916 589.4 Q
(eferBlanking)-.198 E F1 2.75(,o).916 G(r)-2.75 E F0(DefaultBlanking)
3.666 E F1(\).).916 E F2(allow_e)72 606.3 Q(xposur)-.22 E(es_r)-.407 E
(eturn)-.407 E F1(Returns the current screen sa)144 619.3 Q .33 -.165
(ve c)-.22 H(ontrol v).165 E(alue \()-.275 E F0(DontAllo).916 E
(wExposur)-.11 E(es)-.198 E F1(,).916 E F0(Allo)3.666 E(wEx-)-.11 E
(posur)144 632.3 Q(es)-.198 E F1 2.75(,o).916 G(r)-2.75 E F0
(DefaultExposur)3.666 E(es)-.198 E F1(\).).916 E 36 627.95 36 638.95 DL
36 625.95 36 636.95 DL 41.5 637.2 36 637.2 DL 43.5 637.2 38 637.2 DL 49
637.2 43.5 637.2 DL F0 2.75(9.8. Contr)72 675.2 R(olling Host Access)
-.198 E F1(This section discusses ho)72 692.1 Q 2.75(wt)-.275 G(o:)-2.75
E 23.65<8341>72 709 S(dd, get, or remo)-23.65 E .33 -.165(ve h)-.165 H
(osts from the access control list).165 E F0(192)279.75 769 Q 0 Cg EP
%%Page: 193 198
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E/F1 11/Times-Roman@0 SF 23.65<8343>72
85 S(hange, enable, or disable access)-23.65 E 2.75(Xd)72 101.9 S
(oes not pro)-2.75 E(vide an)-.165 E 2.75(yp)-.165 G(rotection on a per)
-2.75 E(-windo)-.22 E 2.75(wb)-.275 G 2.75(asis. If)-2.75 F
(you \214nd out the resource ID of a)2.75 E
(resource, you can manipulate it.)72 114.9 Q 1.76 -.88(To p)5.5 H(ro).88
E(vide some minimal le)-.165 E -.165(ve)-.275 G 2.75(lo).165 G 2.75(fp)
-2.75 G(rotection, ho)-2.75 E(we)-.275 E -.165(ve)-.275 G .88 -.44(r, c)
.165 H(onnec-).44 E(tions are permitted only from machines you trust.)72
127.9 Q(This is adequate on single-user w)5.5 E(orkstations)-.11 E -.22
(bu)72 140.9 S 2.75(to).22 G -.165(bv)-2.75 G(iously breaks do).165 E
(wn on timesharing machines.)-.275 E(Although pro)5.5 E(visions e)-.165
E(xist in the X protocol)-.165 E(for proper connection authentication, \
the lack of a standard authentication serv)72 153.9 Q(er lea)-.165 E
-.165(ve)-.22 G 2.75(sh).165 G(ost-le)-2.75 E -.165(ve)-.275 G(l).165 E
(access control as the only common mechanism.)72 166.9 Q
(The initial set of hosts allo)72 183.8 Q
(wed to open connections typically consists of:)-.275 E 23.65<8354>72
200.7 S(he host the windo)-23.65 E 2.75(ws)-.275 G(ystem is running on.)
-2.75 E 23.65<834f>72 217.6 S 2.75(nP)-23.65 G
(OSIX-conformant systems, each host listed in the)-2.75 E F0
(/etc/X?.hosts)3.666 E F1 2.75(\214le. The)3.666 F 2.75(?i)2.75 G
(ndicates)-2.75 E(the number of the display)99.5 230.6 Q 5.5(.T)-.715 G
(his \214le should consist of host names separated by ne)-5.5 E(wlines.)
-.275 E(DECnet nodes must terminate in :: to distinguish them from Inte\
rnet hosts.)99.5 243.6 Q(If a host is not in the access control list wh\
en the access control mechanism is enabled and if the)72 260.5 Q
(host attempts to establish a connection, the serv)72 273.5 Q
(er refuses the connection.)-.165 E 1.76 -.88(To c)5.5 H
(hange the access).88 E
(list, the client must reside on the same host as the serv)72 286.5 Q
(er and/or must ha)-.165 E .33 -.165(ve b)-.22 H(een granted permis-)
.165 E(sion in the initial authorization at connection setup.)72 299.5 Q
(Serv)72 316.4 Q(ers also can implement other access control policies i\
n addition to or in place of this host)-.165 E(access f)72 329.4 Q
(acility)-.11 E 5.5(.F)-.715 G(or further information about other acces\
s control implementations, see `)-5.665 E(`X W)-.814 E(in-)-.44 E(do)72
342.4 Q 2.75(wS)-.275 G(ystem Protocol.)-2.75 E -.814('')-.77 G F0 2.75
(9.8.1. Adding,)72 368.4 R(Getting, or Remo)2.75 E(ving Hosts)-.11 E F1
(Xlib pro)72 385.3 Q
(vides functions that you can use to add, get, or remo)-.165 E .33 -.165
(ve h)-.165 H(osts from the access control list.).165 E
(All the host access control functions use the)72 398.3 Q F0(XHostAddr)
3.666 E(ess)-.198 E F1(structure, which contains:)3.666 E .44 LW 36
419.95 36 430.95 DL 36 417.95 36 428.95 DL 41.5 416.2 36 416.2 DL 43.5
416.2 38 416.2 DL 49 416.2 43.5 416.2 DL(typedef struct {)72 434.7 Q
(int f)108 447.7 Q 131.215(amily; /*)-.11 F(for e)2.75 E(xample F)-.165
E(amilyInternet */)-.165 E(int length;)108 460.7 Q
(/* length of address, in bytes */)135.076 E(char *address;)108 473.7 Q
(/* pointer to where to \214nd the address */)116.772 E 2.75(}X)72 486.7
S(HostAddress;)-2.75 E 36 488.85 36 499.85 DL 36 486.85 36 497.85 DL
41.5 498.1 36 498.1 DL 43.5 498.1 38 498.1 DL 49 498.1 43.5 498.1 DL
(The f)72 523.1 Q(amily member speci\214es which protocol address f)-.11
E(amily to use \(for e)-.11 E(xample, TCP/IP or DEC-)-.165 E
(net\) and can be)72 536.1 Q F0 -.275(Fa)3.666 G(milyInter).275 E(net)
-.165 E F1(,).916 E F0 -.275(Fa)3.666 G(milyInter).275 E(net6)-.165 E F1
(,).916 E F0 -.275(Fa)3.666 G(milyDECnet).275 E F1 2.75(,o).916 G(r)
-2.75 E F0 -.275(Fa)3.666 G(milyChaos).275 E F1 5.5(.T).916 G(he)-5.5 E
(length member speci\214es the length of the address in bytes.)72 549.1
Q(The address member speci\214es a)5.5 E(pointer to the address.)72
562.1 Q -.165(Fo)72 579 S 2.75(rT).165 G(CP/IP)-2.75 E 2.75(,t)-1.221 G
(he address should be in netw)-2.75 E(ork byte order)-.11 E 5.5(.F)-.605
G(or IP v)-5.665 E(ersion 4 addresses, the f)-.165 E(amily)-.11 E
(should be F)72 592 Q(amilyInternet and the length should be 4 bytes.)
-.165 E -.165(Fo)5.5 G 2.75(rI).165 G 2.75(Pv)-2.75 G
(ersion 6 addresses, the f)-2.915 E(amily)-.11 E(should be F)72 605 Q
(amilyInternet6 and the length should be 16 bytes.)-.165 E -.165(Fo)72
621.9 S 2.75(rt).165 G(he DECnet f)-2.75 E(amily)-.11 E 2.75(,t)-.715 G
(he serv)-2.75 E(er performs no automatic sw)-.165 E
(apping on the address bytes.)-.11 E 2.75(AP)5.5 G(hase)-2.75 E
(IV address is 2 bytes long.)72 634.9 Q(The \214rst byte contains the l\
east signi\214cant 8 bits of the node number)5.5 E(.)-.605 E(The second\
 byte contains the most signi\214cant 2 bits of the node number in the \
least signi\214cant 2)72 647.9 Q(bits of the byte and the area in the m\
ost signi\214cant 6 bits of the byte.)72 660.9 Q 1.76 -.88(To a)72 690.8
T(dd a single host, use).88 E F0(XAddHost)3.666 E F1(.).916 E F0(193)
279.75 769 Q 0 Cg EP
%%Page: 194 199
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E .44 LW 36 76.75 36 87.75 DL 36 74.75
36 85.75 DL 41.5 73 36 73 DL 43.5 73 38 73 DL 49 73 43.5 73 DL/F1 11
/Times-Roman@0 SF -1.834(XAddHost \()72 88.9 R/F2 11/Times-Italic@0 SF
(display).916 E F1(,)A F2(host)2.75 E F1(\)).916 E(Display *)88.5 101.9
Q F2(display)A F1(;).916 E(XHostAddress *)88.5 114.9 Q F2(host)A F1(;)
.916 E F2(display)72 135.7 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2(host)72 152.6 Q F1(Speci\214es the host that is to be added.)53.663 E
36 148.25 36 159.25 DL 36 146.25 36 157.25 DL 41.5 157.5 36 157.5 DL
43.5 157.5 38 157.5 DL 49 157.5 43.5 157.5 DL(The)72 182.5 Q F0
(XAddHost)3.666 E F1(function adds the speci\214ed host to the access c\
ontrol list for that display)3.666 E 5.5(.T)-.715 G(he)-5.5 E(serv)72
195.5 Q
(er must be on the same host as the client issuing the command, or a)
-.165 E F0(BadAccess)3.666 E F1(error results.)3.666 E F0(XAddHost)
72.916 212.4 Q F1(can generate)3.666 E F0(BadAccess)3.666 E F1(and)3.666
E F0(BadV)3.666 E(alue)-1.012 E F1(errors.)3.666 E 1.76 -.88(To a)72
242.3 T(dd multiple hosts at one time, use).88 E F0(XAddHosts)3.666 E F1
(.).916 E 36 260.05 36 271.05 DL 36 258.05 36 269.05 DL 41.5 256.3 36
256.3 DL 43.5 256.3 38 256.3 DL 49 256.3 43.5 256.3 DL -1.834
(XAddHosts \()72 272.2 R F2(display).916 E F1(,)A F2(hosts)2.75 E F1(,)A
F2(num_hosts)2.75 E F1(\)).916 E(Display *)88.5 285.2 Q F2(display)A F1
(;).916 E(XHostAddress *)88.5 298.2 Q F2(hosts)A F1(;).916 E(int)88.5
311.2 Q F2(num_hosts)2.75 E F1(;).916 E F2(display)72 332 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2(hosts)72 348.9 Q F1(Speci\214es each host that is to be added.)49.384
E F2(num_hosts)72 365.8 Q F1(Speci\214es the number of hosts.)24.942 E
36 361.45 36 372.45 DL 36 359.45 36 370.45 DL 41.5 370.7 36 370.7 DL
43.5 370.7 38 370.7 DL 49 370.7 43.5 370.7 DL(The)72 395.7 Q F0
(XAddHosts)3.666 E F1(function adds each speci\214ed host to the access\
 control list for that display)3.666 E 5.5(.T)-.715 G(he)-5.5 E(serv)72
408.7 Q
(er must be on the same host as the client issuing the command, or a)
-.165 E F0(BadAccess)3.666 E F1(error results.)3.666 E F0(XAddHosts)
72.916 425.6 Q F1(can generate)3.666 E F0(BadAccess)3.666 E F1(and)3.666
E F0(BadV)3.666 E(alue)-1.012 E F1(errors.)3.666 E 1.76 -.88(To o)72
455.5 T(btain a host list, use).88 E F0(XListHosts)3.666 E F1(.).916 E
36 473.25 36 484.25 DL 36 471.25 36 482.25 DL 41.5 469.5 36 469.5 DL
43.5 469.5 38 469.5 DL 49 469.5 43.5 469.5 DL(XHostAddress *XListHosts)
72 485.4 Q(\().916 E F2(display).916 E F1(,)A F2(nhosts_r)2.75 E(eturn)
-.407 E F1(,)A F2(state_r)2.75 E(eturn)-.407 E F1(\)).916 E(Display *)
88.5 498.4 Q F2(display)A F1(;).916 E(int *)88.5 511.4 Q F2(nhosts_r)A
(eturn)-.407 E F1(;).916 E(Bool *)88.5 524.4 Q F2(state_r)A(eturn)-.407
E F1(;).916 E F2(display)72 545.2 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2(nhosts_r)72 562.1 Q(eturn)-.407 E F1
(Returns the number of hosts currently in the access control list.)
11.291 E F2(state_r)72 579 Q(eturn)-.407 E F1
(Returns the state of the access control.)18.628 E 36 574.65 36 585.65
DL 36 572.65 36 583.65 DL 41.5 583.9 36 583.9 DL 43.5 583.9 38 583.9 DL
49 583.9 43.5 583.9 DL(The)72 608.9 Q F0(XListHosts)3.666 E F1(function\
 returns the current access control list as well as whether the use of \
the)3.666 E(list at connection setup w)72 621.9 Q
(as enabled or disabled.)-.11 E F0(XListHosts)6.416 E F1(allo)3.666 E
(ws a program to \214nd out what)-.275 E(machines can mak)72 634.9 Q
2.75(ec)-.11 G 2.75(onnections. It)-2.75 F
(also returns a pointer to a list of host structures that were allo-)
2.75 E(cated by the function.)72 647.9 Q
(When no longer needed, this memory should be freed by calling)5.5 E F0
(XFr)3.666 E(ee)-.198 E F1(.).916 E 1.76 -.88(To r)72 677.8 T(emo).88 E
.33 -.165(ve a s)-.165 H(ingle host, use).165 E F0(XRemo)3.666 E -.11
(ve)-.11 G(Host).11 E F1(.).916 E F0(194)279.75 769 Q 0 Cg EP
%%Page: 195 200
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E .44 LW 36 76.75 36 87.75 DL 36 74.75
36 85.75 DL 41.5 73 36 73 DL 43.5 73 38 73 DL 49 73 43.5 73 DL/F1 11
/Times-Roman@0 SF(XRemo)72 88.9 Q -.165(ve)-.165 G -1.834(Host \().165 F
/F2 11/Times-Italic@0 SF(display).916 E F1(,)A F2(host)2.75 E F1(\)).916
E(Display *)88.5 101.9 Q F2(display)A F1(;).916 E(XHostAddress *)88.5
114.9 Q F2(host)A F1(;).916 E F2(display)72 135.7 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2(host)72 152.6 Q F1(Speci\214es the host that is to be remo)53.663 E
-.165(ve)-.165 G(d.).165 E 36 148.25 36 159.25 DL 36 146.25 36 157.25 DL
41.5 157.5 36 157.5 DL 43.5 157.5 38 157.5 DL 49 157.5 43.5 157.5 DL
(The)72 182.5 Q F0(XRemo)3.666 E -.11(ve)-.11 G(Host).11 E F1
(function remo)3.666 E -.165(ve)-.165 G 2.75(st).165 G
(he speci\214ed host from the access control list for that dis-)-2.75 E
(play)72 195.5 Q 5.5(.T)-.715 G(he serv)-5.5 E
(er must be on the same host as the client process, or a)-.165 E F0
(BadAccess)3.666 E F1(error results.)3.666 E(If)5.5 E(you remo)72 208.5
Q .33 -.165(ve y)-.165 H(our machine from the access list, you can no l\
onger connect to that serv).165 E(er)-.165 E 2.75(,a)-.44 G(nd this)
-2.75 E(operation cannot be re)72 221.5 Q -.165(ve)-.275 G
(rsed unless you reset the serv).165 E(er)-.165 E(.)-.605 E F0(XRemo)
72.916 238.4 Q -.11(ve)-.11 G(Host).11 E F1(can generate)3.666 E F0
(BadAccess)3.666 E F1(and)3.666 E F0(BadV)3.666 E(alue)-1.012 E F1
(errors.)3.666 E 1.76 -.88(To r)72 268.3 T(emo).88 E .33 -.165(ve m)
-.165 H(ultiple hosts at one time, use).165 E F0(XRemo)3.666 E -.11(ve)
-.11 G(Hosts).11 E F1(.).916 E 36 286.05 36 297.05 DL 36 284.05 36
295.05 DL 41.5 282.3 36 282.3 DL 43.5 282.3 38 282.3 DL 49 282.3 43.5
282.3 DL(XRemo)72 298.2 Q -.165(ve)-.165 G -1.834(Hosts \().165 F F2
(display).916 E F1(,)A F2(hosts)2.75 E F1(,)A F2(num_hosts)2.75 E F1(\))
.916 E(Display *)88.5 311.2 Q F2(display)A F1(;).916 E(XHostAddress *)
88.5 324.2 Q F2(hosts)A F1(;).916 E(int)88.5 337.2 Q F2(num_hosts)2.75 E
F1(;).916 E F2(display)72 358 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2(hosts)72 374.9 Q F1(Speci\214es each host that is to be remo)49.384 E
-.165(ve)-.165 G(d.).165 E F2(num_hosts)72 391.8 Q F1
(Speci\214es the number of hosts.)24.942 E 36 387.45 36 398.45 DL 36
385.45 36 396.45 DL 41.5 396.7 36 396.7 DL 43.5 396.7 38 396.7 DL 49
396.7 43.5 396.7 DL(The)72 421.7 Q F0(XRemo)3.666 E -.11(ve)-.11 G
(Hosts).11 E F1(function remo)3.666 E -.165(ve)-.165 G 2.75(se).165 G
(ach speci\214ed host from the access control list for that)-2.75 E
(display)72 434.7 Q 5.5(.T)-.715 G(he X serv)-5.5 E
(er must be on the same host as the client process, or a)-.165 E F0
(BadAccess)3.666 E F1(error)3.666 E 2.75(results. If)72 447.7 R
(you remo)2.75 E .33 -.165(ve y)-.165 H
(our machine from the access list, you can no longer connect to that)
.165 E(serv)72 460.7 Q(er)-.165 E 2.75(,a)-.44 G
(nd this operation cannot be re)-2.75 E -.165(ve)-.275 G
(rsed unless you reset the serv).165 E(er)-.165 E(.)-.605 E F0(XRemo)
72.916 477.6 Q -.11(ve)-.11 G(Hosts).11 E F1(can generate)3.666 E F0
(BadAccess)3.666 E F1(and)3.666 E F0(BadV)3.666 E(alue)-1.012 E F1
(errors.)3.666 E F0 2.75(9.8.2. Changing,)72 503.6 R
(Enabling, or Disabling Access Contr)2.75 E(ol)-.198 E F1(Xlib pro)72
520.5 Q(vides functions that you can use to enable, disable, or change \
access control.)-.165 E -.165(Fo)72 537.4 S 2.75(rt).165 G
(hese functions to e)-2.75 E -.165(xe)-.165 G(cute successfully).165 E
2.75(,t)-.715 G(he client application must reside on the same host as)
-2.75 E(the X serv)72 550.4 Q(er and/or ha)-.165 E .33 -.165(ve b)-.22 H
(een gi).165 E -.165(ve)-.275 G 2.75(np).165 G
(ermission in the initial authorization at connection setup.)-2.75 E
1.76 -.88(To c)72 580.3 T(hange access control, use).88 E F0
(XSetAccessContr)3.666 E(ol)-.198 E F1(.).916 E 36 598.05 36 609.05 DL
36 596.05 36 607.05 DL 41.5 594.3 36 594.3 DL 43.5 594.3 38 594.3 DL 49
594.3 43.5 594.3 DL -1.834(XSetAccessControl \()72 610.2 R F2(display)
.916 E F1(,)A F2(mode)2.75 E F1(\)).916 E(Display *)88.5 623.2 Q F2
(display)A F1(;).916 E(int)88.5 636.2 Q F2(mode)2.75 E F1(;).916 E F2
(display)72 657 Q F1(Speci\214es the connection to the X serv)40.221 E
(er)-.165 E(.)-.605 E F2(mode)72 673.9 Q F1(Speci\214es the mode.)48.174
E -1.21(Yo)5.5 G 2.75(uc)1.21 G(an pass)-2.75 E F0(EnableAccess)3.666 E
F1(or)3.666 E F0(DisableAccess)3.666 E F1(.).916 E 36 669.55 36 680.55
DL 36 667.55 36 678.55 DL 41.5 678.8 36 678.8 DL 43.5 678.8 38 678.8 DL
49 678.8 43.5 678.8 DL(The)72 703.8 Q F0(XSetAccessContr)3.666 E(ol)
-.198 E F1(function either enables or disables the use of the access co\
ntrol list at)3.666 E(each connection setup.)72 716.8 Q F0(195)279.75
769 Q 0 Cg EP
%%Page: 196 201
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E(XSetAccessContr)72.916 85 Q(ol)-.198 E
/F1 11/Times-Roman@0 SF(can generate)3.666 E F0(BadAccess)3.666 E F1
(and)3.666 E F0(BadV)3.666 E(alue)-1.012 E F1(errors.)3.666 E 1.76 -.88
(To e)72 114.9 T(nable access control, use).88 E F0(XEnableAccessContr)
3.666 E(ol)-.198 E F1(.).916 E .44 LW 36 132.65 36 143.65 DL 36 130.65
36 141.65 DL 41.5 128.9 36 128.9 DL 43.5 128.9 38 128.9 DL 49 128.9 43.5
128.9 DL -1.834(XEnableAccessControl \()72 144.8 R/F2 11/Times-Italic@0
SF(display).916 E F1(\)).916 E(Display *)88.5 157.8 Q F2(display)A F1(;)
.916 E F2(display)72 178.6 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
36 174.25 36 185.25 DL 36 172.25 36 183.25 DL 41.5 183.5 36 183.5 DL
43.5 183.5 38 183.5 DL 49 183.5 43.5 183.5 DL(The)72 208.5 Q F0
(XEnableAccessContr)3.666 E(ol)-.198 E F1
(function enables the use of the access control list at each connec-)
3.666 E(tion setup.)72 221.5 Q F0(XEnableAccessContr)72.916 238.4 Q(ol)
-.198 E F1(can generate a)3.666 E F0(BadAccess)3.666 E F1(error)3.666 E
(.)-.605 E 1.76 -.88(To d)72 268.3 T(isable access control, use).88 E F0
(XDisableAccessContr)3.666 E(ol)-.198 E F1(.).916 E 36 286.05 36 297.05
DL 36 284.05 36 295.05 DL 41.5 282.3 36 282.3 DL 43.5 282.3 38 282.3 DL
49 282.3 43.5 282.3 DL -1.834(XDisableAccessControl \()72 298.2 R F2
(display).916 E F1(\)).916 E(Display *)88.5 311.2 Q F2(display)A F1(;)
.916 E F2(display)72 332 Q F1(Speci\214es the connection to the X serv)
40.221 E(er)-.165 E(.)-.605 E 36 327.65 36 338.65 DL 36 325.65 36 336.65
DL 41.5 336.9 36 336.9 DL 43.5 336.9 38 336.9 DL 49 336.9 43.5 336.9 DL
(The)72 361.9 Q F0(XDisableAccessContr)3.666 E(ol)-.198 E F1
(function disables the use of the access control list at each connec-)
3.666 E(tion setup.)72 374.9 Q F0(XDisableAccessContr)72.916 391.8 Q(ol)
-.198 E F1(can generate a)3.666 E F0(BadAccess)3.666 E F1(error)3.666 E
(.)-.605 E F0(196)279.75 769 Q 0 Cg EP
%%Page: 197 202
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E/F1 12/Times-Bold@0 SF(Chapter 10)
259.17 111 Q(Ev)270.726 137 Q(ents)-.12 E/F2 11/Times-Roman@0 SF 2.75
(Ac)72 179.9 S(lient application communicates with the X serv)-2.75 E
(er through the connection you establish with)-.165 E(the)72 192.9 Q F0
(XOpenDisplay)3.666 E F2 2.75(function. A)3.666 F
(client application sends requests to the X serv)2.75 E(er o)-.165 E
-.165(ve)-.165 G 2.75(rt).165 G(his con-)-2.75 E 2.75(nection. These)72
205.9 R(requests are made by the Xlib functions that are called in the \
client application.)2.75 E(Man)72 218.9 Q 2.75(yX)-.165 G
(lib functions cause the X serv)-2.75 E(er to generate e)-.165 E -.165
(ve)-.275 G(nts, and the user').165 E 2.75(st)-.605 G(yping or mo)-2.75
E(ving the)-.165 E(pointer can generate e)72 231.9 Q -.165(ve)-.275 G
(nts asynchronously).165 E 5.5(.T)-.715 G(he X serv)-5.5 E(er returns e)
-.165 E -.165(ve)-.275 G(nts to the client on the same).165 E
(connection.)72 244.9 Q(This chapter discusses the follo)72 261.8 Q
(wing topics associated with e)-.275 E -.165(ve)-.275 G(nts:).165 E
23.65<8345>72 278.7 S -.165(ve)-23.65 G(nt types).165 E 23.65<8345>72
295.6 S -.165(ve)-23.65 G(nt structures).165 E 23.65<8345>72 312.5 S
-.165(ve)-23.65 G(nt masks).165 E 23.65<8345>72 329.4 S -.165(ve)-23.65
G(nt processing).165 E(Functions for handling e)72 346.3 Q -.165(ve)
-.275 G(nts are dealt with in the ne).165 E(xt chapter)-.165 E(.)-.605 E
F0 2.75(10.1. Ev)72 372.3 R(ent T)-.11 E(ypes)-.814 E F2(An e)72 389.2 Q
-.165(ve)-.275 G(nt is data generated asynchronously by the X serv).165
E(er as a result of some de)-.165 E(vice acti)-.275 E(vity or)-.275 E
(as side ef)72 402.2 Q(fects of a request sent by an Xlib function.)
-.275 E(De)5.5 E(vice-related e)-.275 E -.165(ve)-.275 G(nts propag).165
E(ate from the)-.055 E(source windo)72 415.2 Q 2.75(wt)-.275 G 2.75(oa)
-2.75 G(ncestor windo)-2.75 E
(ws until some client application has selected that e)-.275 E -.165(ve)
-.275 G(nt type or).165 E(until the e)72 428.2 Q -.165(ve)-.275 G
(nt is e).165 E(xplicitly discarded.)-.165 E(The X serv)5.5 E
(er generally sends an e)-.165 E -.165(ve)-.275 G
(nt to a client applica-).165 E
(tion only if the client has speci\214cally ask)72 441.2 Q
(ed to be informed of that e)-.11 E -.165(ve)-.275 G
(nt type, typically by setting).165 E(the e)72 454.2 Q -.165(ve)-.275 G
(nt-mask attrib).165 E(ute of the windo)-.22 E 4.18 -.715(w. T)-.275 H
(he mask can also be set when you create a windo).715 E 2.75(wo)-.275 G
(r)-2.75 E(by changing the windo)72 467.2 Q(w')-.275 E 2.75(se)-.605 G
-.165(ve)-3.025 G 2.75(nt-mask. Y).165 F(ou can also mask out e)-1.21 E
-.165(ve)-.275 G(nts that w).165 E(ould propag)-.11 E(ate to)-.055 E
(ancestor windo)72 480.2 Q(ws by manipulating the do-not-propag)-.275 E
(ate mask of the windo)-.055 E(w')-.275 E 2.75(sa)-.605 G(ttrib)-2.75 E
2.75(utes. Ho)-.22 F(w-)-.275 E -2.365 -.275(ev e)72 493.2 T -.44(r,)
.275 G F0(MappingNotify)4.106 E F2 -2.365 -.275(ev e)3.666 H(nts are al)
.275 E -.11(wa)-.11 G(ys sent to all clients.).11 E(An e)72 510.1 Q
-.165(ve)-.275 G(nt type describes a speci\214c e).165 E -.165(ve)-.275
G(nt generated by the X serv).165 E(er)-.165 E 5.5(.F)-.605 G(or each e)
-5.665 E -.165(ve)-.275 G(nt type, a corre-).165 E
(sponding constant name is de\214ned in <)72 523.1 Q F0(X11/X.h)A F2
(>, which is used when referring to an e)A -.165(ve)-.275 G(nt type.)
.165 E(The follo)72 536.1 Q(wing table lists the e)-.275 E -.165(ve)
-.275 G(nt cate).165 E(gory and its associated e)-.165 E -.165(ve)-.275
G(nt type or types.).165 E(The processing)5.5 E(associated with these e)
72 549.1 Q -.165(ve)-.275 G(nts is discussed in section 10.5.).165 E .44
LW 502.5 568.15 72 568.15 DL F0(Ev)72 584.4 Q(ent Category)-.11 E(Ev)
104.987 E(ent T)-.11 E(ype)-.814 E 502.5 595.15 72 595.15 DL F2 -2.365
-.275(Ke y)72 611.4 T(board e).275 E -.165(ve)-.275 G(nts).165 E F0
-.275(Ke)251.416 611.4 S(yPr).275 E(ess)-.198 E F2(,).916 E F0 -.275(Ke)
3.666 G(yRelease).275 E F2(Pointer e)72 630.4 Q -.165(ve)-.275 G(nts)
.165 E F0(ButtonPr)251.416 630.4 Q(ess)-.198 E F2(,).916 E F0
(ButtonRelease)3.666 E F2(,).916 E F0(MotionNotify)3.666 E F2 -.44(Wi)72
649.4 S(ndo).44 E 2.75(wc)-.275 G(rossing e)-2.75 E -.165(ve)-.275 G
(nts).165 E F0(EnterNotify)251.416 649.4 Q F2(,).916 E F0(Lea)3.666 E
-.11(ve)-.275 G(Notify).11 E F2(Input focus e)72 668.4 Q -.165(ve)-.275
G(nts).165 E F0 -.275(Fo)251.416 668.4 S(cusIn).275 E F2(,).916 E F0
-.275(Fo)3.666 G(cusOut).275 E F2 -2.365 -.275(Ke y)72 687.4 T
(map state noti\214cation e).275 E -.165(ve)-.275 G(nt).165 E F0 -.275
(Ke)251.416 687.4 S(ymapNotify).275 E F2(Exposure e)72 706.4 Q -.165(ve)
-.275 G(nts).165 E F0(Expose)251.416 706.4 Q F2(,).916 E F0
(GraphicsExpose)3.666 E F2(,).916 E F0(NoExpose)3.666 E(197)279.75 769 Q
0 Cg EP
%%Page: 198 203
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E .44 LW 502.5 76.75 72 76.75 DL(Ev)72
93 Q(ent Category)-.11 E(Ev)104.987 E(ent T)-.11 E(ype)-.814 E 502.5
103.75 72 103.75 DL/F1 11/Times-Roman@0 SF(Structure control e)72 120 Q
-.165(ve)-.275 G(nts).165 E F0(Cir)251.416 120 Q(culateRequest)-.198 E
F1(,).916 E F0(Con\214gur)3.666 E(eRequest)-.198 E F1(,).916 E F0
(MapRequest)3.666 E F1(,).916 E F0(ResizeRequest)251.416 133 Q F1 -.44
(Wi)72 152 S(ndo).44 E 2.75(ws)-.275 G(tate noti\214cation e)-2.75 E
-.165(ve)-.275 G(nts).165 E F0(Cir)251.416 152 Q(culateNotify)-.198 E F1
(,).916 E F0(Con\214gur)3.666 E(eNotify)-.198 E F1(,).916 E F0(Cr)3.666
E(eateNotify)-.198 E F1(,).916 E F0(Destr)251.416 165 Q(oyNotify)-.198 E
F1(,).916 E F0(Gra)3.666 E(vityNotify)-.275 E F1(,).916 E F0(MapNotify)
3.666 E F1(,).916 E F0(Map-)3.666 E(pingNotify)250.5 178 Q F1(,).916 E
F0(Repar)3.666 E(entNotify)-.198 E F1(,).916 E F0(UnmapNotify)3.666 E F1
(,).916 E F0 -.407(Vi)251.416 191 S(sibilityNotify).407 E F1
(Colormap state noti\214cation e)72 210 Q -.165(ve)-.275 G(nt).165 E F0
(ColormapNotify)251.416 210 Q F1(Client communication e)72 229 Q -.165
(ve)-.275 G(nts).165 E F0(ClientMessage)251.416 229 Q F1(,).916 E F0(Pr)
3.666 E(opertyNotify)-.198 E F1(,).916 E F0(SelectionClear)3.666 E F1(,)
.916 E F0(SelectionNotify)251.416 242 Q F1(,).916 E F0(SelectionRequest)
3.666 E 502.5 252.75 72 252.75 DL 2.75(10.2. Ev)72 282.5 R(ent Structur)
-.11 E(es)-.198 E F1 -.165(Fo)72 299.4 S 2.75(re).165 G(ach e)-2.75 E
-.165(ve)-.275 G(nt type, a corresponding structure is declared in <)
.165 E F0(X11/Xlib)A(.h)-.44 E F1 2.75(>. All)B(the e)2.75 E -.165(ve)
-.275 G(nt struc-).165 E(tures ha)72 312.4 Q .33 -.165(ve t)-.22 H
(he follo).165 E(wing common members:)-.275 E 36 334.05 36 345.05 DL 36
332.05 36 343.05 DL 41.5 330.3 36 330.3 DL 43.5 330.3 38 330.3 DL 49
330.3 43.5 330.3 DL(typedef struct {)72 348.8 Q(int type;)108 361.8 Q
(unsigned long serial;)108 374.8 Q
(/* # of last request processed by serv)88.337 E(er */)-.165 E
(Bool send_e)108 387.8 Q -.165(ve)-.275 G 100.998(nt; /*).165 F
(true if this came from a SendEv)2.75 E(ent request */)-.165 E
(Display *display;)108 400.8 Q(/* Display the e)102.692 E -.165(ve)-.275
G(nt w).165 E(as read from */)-.11 E -.44(Wi)108 413.8 S(ndo).44 E 2.75
(ww)-.275 G(indo)-2.75 E(w;)-.275 E 2.75(}X)72 426.8 S(An)-2.75 E(yEv)
-.165 E(ent;)-.165 E 36 428.95 36 439.95 DL 36 426.95 36 437.95 DL 41.5
438.2 36 438.2 DL 43.5 438.2 38 438.2 DL 49 438.2 43.5 438.2 DL
(The type member is set to the e)72 463.2 Q -.165(ve)-.275 G
(nt type constant name that uniquely identi\214es it.).165 E -.165(Fo)
5.5 G 2.75(re).165 G(xample,)-2.915 E(when the X serv)72 476.2 Q
(er reports a)-.165 E F0(GraphicsExpose)3.666 E F1 -2.365 -.275(ev e)
3.666 H(nt to a client application, it sends an).275 E F0(XGraph-)3.666
E(icsExposeEv)72 489.2 Q(ent)-.11 E F1
(structure with the type member set to)3.666 E F0(GraphicsExpose)3.666 E
F1 5.5(.T).916 G(he display member is)-5.5 E
(set to a pointer to the display the e)72 502.2 Q -.165(ve)-.275 G(nt w)
.165 E(as read on.)-.11 E(The send_e)5.5 E -.165(ve)-.275 G
(nt member is set to).165 E F0 -.814(Tr)3.666 G(ue).814 E F1(if the)
3.666 E -2.365 -.275(ev e)72 515.2 T(nt came from a).275 E F0(SendEv)
3.666 E(ent)-.11 E F1(protocol request.)3.666 E
(The serial member is set from the serial number)5.5 E
(reported in the protocol b)72 528.2 Q(ut e)-.22 E
(xpanded from the 16-bit least-signi\214cant bits to a full 32-bit v)
-.165 E(alue.)-.275 E(The windo)72 541.2 Q 2.75(wm)-.275 G
(ember is set to the windo)-2.75 E 2.75(wt)-.275 G
(hat is most useful to toolkit dispatchers.)-2.75 E(The X serv)72 558.1
Q(er can send e)-.165 E -.165(ve)-.275 G(nts at an).165 E 2.75(yt)-.165
G(ime in the input stream.)-2.75 E(Xlib stores an)5.5 E 2.75(ye)-.165 G
-.165(ve)-3.025 G(nts recei).165 E -.165(ve)-.275 G(d).165 E(while w)72
571.1 Q(aiting for a reply in an e)-.11 E -.165(ve)-.275 G
(nt queue for later use.).165 E(Xlib also pro)5.5 E
(vides functions that allo)-.165 E(w)-.275 E(you to check e)72 584.1 Q
-.165(ve)-.275 G(nts in the e).165 E -.165(ve)-.275 G
(nt queue \(see section 11.3\).).165 E(In addition to the indi)72 601 Q
(vidual structures declared for each e)-.275 E -.165(ve)-.275 G
(nt type, the).165 E F0(XEv)3.666 E(ent)-.11 E F1(structure is a)3.666 E
(union of the indi)72 614 Q(vidual structures declared for each e)-.275
E -.165(ve)-.275 G(nt type.).165 E(Depending on the type, you)5.5 E
(should access members of each e)72 627 Q -.165(ve)-.275 G
(nt by using the).165 E F0(XEv)3.666 E(ent)-.11 E F1(union.)3.666 E F0
(198)279.75 769 Q 0 Cg EP
%%Page: 199 204
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E .44 LW 36 76.75 36 87.75 DL 36 74.75
36 85.75 DL 41.5 73 36 73 DL 43.5 73 38 73 DL 49 73 43.5 73 DL/F1 11
/Times-Roman@0 SF(typedef union _XEv)72 91.5 Q(ent {)-.165 E(int type;)
108 104.5 Q(/* must not be changed */)143.634 E(XAn)108 117.5 Q(yEv)
-.165 E(ent xan)-.165 E(y;)-.165 E(XK)108 130.5 Q -.165(ey)-.275 G(Ev)
.165 E(ent xk)-.165 E -.165(ey)-.11 G(;).165 E(XButtonEv)108 143.5 Q
(ent xb)-.165 E(utton;)-.22 E(XMotionEv)108 156.5 Q(ent xmotion;)-.165 E
(XCrossingEv)108 169.5 Q(ent xcrossing;)-.165 E(XF)108 182.5 Q
(ocusChangeEv)-.165 E(ent xfocus;)-.165 E(XExposeEv)108 195.5 Q(ent x)
-.165 E -.165(ex)-.165 G(pose;).165 E(XGraphicsExposeEv)108 208.5 Q
(ent xgraphicse)-.165 E(xpose;)-.165 E(XNoExposeEv)108 221.5 Q(ent xnoe)
-.165 E(xpose;)-.165 E(XV)108 234.5 Q(isibilityEv)-.66 E
(ent xvisibility;)-.165 E(XCreateW)108 247.5 Q(indo)-.44 E(wEv)-.275 E
(ent xcreate)-.165 E(windo)-.275 E(w;)-.275 E(XDestro)108 260.5 Q(yW)
-.11 E(indo)-.44 E(wEv)-.275 E(ent xdestro)-.165 E(ywindo)-.11 E(w;)
-.275 E(XUnmapEv)108 273.5 Q(ent xunmap;)-.165 E(XMapEv)108 286.5 Q
(ent xmap;)-.165 E(XMapRequestEv)108 299.5 Q(ent xmaprequest;)-.165 E
(XReparentEv)108 312.5 Q(ent xreparent;)-.165 E(XCon\214gureEv)108 325.5
Q(ent xcon\214gure;)-.165 E(XGra)108 338.5 Q(vityEv)-.22 E(ent xgra)
-.165 E(vity;)-.22 E(XResizeRequestEv)108 351.5 Q(ent xresizerequest;)
-.165 E(XCon\214gureRequestEv)108 364.5 Q(ent xcon\214gurerequest;)-.165
E(XCirculateEv)108 377.5 Q(ent xcirculate;)-.165 E(XCirculateRequestEv)
108 390.5 Q(ent xcirculaterequest;)-.165 E(XPropertyEv)108 403.5 Q
(ent xproperty;)-.165 E(XSelectionClearEv)108 416.5 Q
(ent xselectionclear;)-.165 E(XSelectionRequestEv)108 429.5 Q
(ent xselectionrequest;)-.165 E(XSelectionEv)108 442.5 Q
(ent xselection;)-.165 E(XColormapEv)108 455.5 Q(ent xcolormap;)-.165 E
(XClientMessageEv)108 468.5 Q(ent xclient;)-.165 E(XMappingEv)108 481.5
Q(ent xmapping;)-.165 E(XErrorEv)108 494.5 Q(ent x)-.165 E(error;)-.165
E(XK)108 507.5 Q -.165(ey)-.275 G(mapEv).165 E(ent xk)-.165 E -.165(ey)
-.11 G(map;).165 E(long pad[24];)108 520.5 Q 2.75(}X)72 533.5 S(Ev)-2.75
E(ent;)-.165 E 36 535.65 36 546.65 DL 36 533.65 36 544.65 DL 41.5 544.9
36 544.9 DL 43.5 544.9 38 544.9 DL 49 544.9 43.5 544.9 DL(An)72 569.9 Q
F0(XEv)3.666 E(ent)-.11 E F1(structure')3.666 E 2.75<738c>-.605 G
(rst entry al)-2.75 E -.11(wa)-.11 G(ys is the type member).11 E 2.75
(,w)-.44 G(hich is set to the e)-2.75 E -.165(ve)-.275 G(nt type.).165 E
(The)5.5 E(second member al)72 582.9 Q -.11(wa)-.11 G
(ys is the serial number of the protocol request that generated the e)
.11 E -.165(ve)-.275 G 2.75(nt. The).165 F(third member al)72 595.9 Q
-.11(wa)-.11 G(ys is send_e).11 E -.165(ve)-.275 G(nt, which is a).165 E
F0(Bool)3.666 E F1(that indicates if the e)3.666 E -.165(ve)-.275 G
(nt w).165 E(as sent by a dif-)-.11 E(ferent client.)72 608.9 Q
(The fourth member al)5.5 E -.11(wa)-.11 G(ys is a display).11 E 2.75
(,w)-.715 G(hich is the display that the e)-2.75 E -.165(ve)-.275 G
(nt w).165 E(as read)-.11 E 2.75(from. Except)72 621.9 R(for k)2.75 E
-.165(ey)-.11 G(map e).165 E -.165(ve)-.275 G
(nts, the \214fth member al).165 E -.11(wa)-.11 G(ys is a windo).11 E
1.43 -.715(w, w)-.275 H(hich has been carefully).715 E
(selected to be useful to toolkit dispatchers.)72 634.9 Q 1.76 -.88
(To a)5.5 H -.22(vo).66 G
(id breaking toolkits, the order of these \214rst \214v).22 E(e)-.165 E
(entries is not to change.)72 647.9 Q(Most e)5.5 E -.165(ve)-.275 G
(nts also contain a time member).165 E 2.75(,w)-.44 G
(hich is the time at which an)-2.75 E -2.365 -.275(ev e)72 660.9 T
(nt occurred.).275 E(In addition, a pointer to the generic e)5.5 E -.165
(ve)-.275 G(nt must be cast before it is used to access).165 E(an)72
673.9 Q 2.75(yo)-.165 G(ther information in the structure.)-2.75 E F0
2.75(10.3. Ev)72 699.9 R(ent Masks)-.11 E F1(Clients select e)72 716.8 Q
-.165(ve)-.275 G(nt reporting of most e).165 E -.165(ve)-.275 G
(nts relati).165 E .33 -.165(ve t)-.275 H 2.75(oaw).165 G(indo)-2.75 E
4.18 -.715(w. T)-.275 H 2.75(od)-.165 G 2.75(ot)-2.75 G(his, pass an e)
-2.75 E -.165(ve)-.275 G(nt mask).165 E(to an Xlib e)72 729.8 Q -.165
(ve)-.275 G(nt-handling function that tak).165 E(es an e)-.11 E -.165
(ve)-.275 G(nt_mask ar).165 E 2.75(gument. The)-.198 F(bits of the e)
2.75 E -.165(ve)-.275 G(nt).165 E F0(199)279.75 769 Q 0 Cg EP
%%Page: 200 205
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E/F1 11/Times-Roman@0 SF
(mask are de\214ned in <)72 85 Q F0(X11/X.h)A F1 2.75(>. Each)B
(bit in the e)2.75 E -.165(ve)-.275 G(nt mask maps to an e).165 E -.165
(ve)-.275 G(nt mask name, which).165 E(describes the e)72 98 Q -.165(ve)
-.275 G(nt or e).165 E -.165(ve)-.275 G(nts you w).165 E(ant the X serv)
-.11 E(er to return to a client application.)-.165 E
(Unless the client has speci\214cally ask)72 114.9 Q
(ed for them, most e)-.11 E -.165(ve)-.275 G
(nts are not reported to clients when).165 E(the)72 127.9 Q 2.75(ya)
-.165 G(re generated.)-2.75 E
(Unless the client suppresses them by setting graphics-e)5.5 E
(xposures in the GC to)-.165 E F0 -.275(Fa)72.916 140.9 S(lse).275 E F1
(,).916 E F0(GraphicsExpose)3.666 E F1(and)3.666 E F0(NoExpose)3.666 E
F1(are reported by def)3.666 E(ault as a result of)-.11 E F0(XCopyPlane)
3.666 E F1(and)3.666 E F0(XCopyAr)72.916 153.9 Q(ea)-.198 E F1(.).916 E
F0(SelectionClear)6.416 E F1(,).916 E F0(SelectionRequest)3.666 E F1(,)
.916 E F0(SelectionNotify)3.666 E F1 2.75(,o).916 G(r)-2.75 E F0
(ClientMessage)3.666 E F1(cannot)3.666 E(be mask)72 166.9 Q 2.75
(ed. Selection-related)-.11 F -2.365 -.275(ev e)2.75 H
(nts are only sent to clients cooperating with selections \(see sec-)
.275 E(tion 4.5\).)72 179.9 Q(When the k)5.5 E -.165(ey)-.11 G
(board or pointer mapping is changed,).165 E F0(MappingNotify)3.666 E F1
(is al)3.666 E -.11(wa)-.11 G(ys sent to).11 E(clients.)72 192.9 Q
(The follo)72 209.8 Q(wing table lists the e)-.275 E -.165(ve)-.275 G
(nt mask constants you can pass to the e).165 E -.165(ve)-.275 G
(nt_mask ar).165 E(gument and)-.198 E(the circumstances in which you w)
72 222.8 Q(ould w)-.11 E(ant to specify the e)-.11 E -.165(ve)-.275 G
(nt mask:).165 E .44 LW 484.5 237.95 72 237.95 DL F0(Ev)72 254.2 Q
(ent Mask)-.11 E(Cir)104.081 E(cumstances)-.198 E 484.5 264.95 72 264.95
DL(NoEv)72.916 281.2 Q(entMask)-.11 E F1(No e)232.5 281.2 Q -.165(ve)
-.275 G(nts w).165 E(anted)-.11 E F0 -.275(Ke)72.916 294.2 S(yPr).275 E
(essMask)-.198 E F1 -2.365 -.275(Ke y)232.5 294.2 T(board do).275 E
(wn e)-.275 E -.165(ve)-.275 G(nts w).165 E(anted)-.11 E F0 -.275(Ke)
72.916 307.2 S(yReleaseMask).275 E F1 -2.365 -.275(Ke y)232.5 307.2 T
(board up e).275 E -.165(ve)-.275 G(nts w).165 E(anted)-.11 E F0
(ButtonPr)72.916 320.2 Q(essMask)-.198 E F1(Pointer b)232.5 320.2 Q
(utton do)-.22 E(wn e)-.275 E -.165(ve)-.275 G(nts w).165 E(anted)-.11 E
F0(ButtonReleaseMask)72.916 333.2 Q F1(Pointer b)232.5 333.2 Q
(utton up e)-.22 E -.165(ve)-.275 G(nts w).165 E(anted)-.11 E F0(EnterW)
72.916 346.2 Q(indo)-.198 E(wMask)-.11 E F1(Pointer windo)232.5 346.2 Q
2.75(we)-.275 G(ntry e)-2.75 E -.165(ve)-.275 G(nts w).165 E(anted)-.11
E F0(Lea)72.916 359.2 Q -.11(ve)-.275 G -.198(Wi).11 G(ndo).198 E(wMask)
-.11 E F1(Pointer windo)232.5 359.2 Q 2.75(wl)-.275 G(ea)-2.75 E .33
-.165(ve e)-.22 H -.165(ve)-.11 G(nts w).165 E(anted)-.11 E F0 -.22(Po)
72.916 372.2 S(interMotionMask).22 E F1(Pointer motion e)232.5 372.2 Q
-.165(ve)-.275 G(nts w).165 E(anted)-.11 E F0 -.22(Po)72.916 385.2 S
(interMotionHintMask).22 E F1(Pointer motion hints w)232.5 385.2 Q
(anted)-.11 E F0(Button1MotionMask)72.916 398.2 Q F1
(Pointer motion while b)232.5 398.2 Q(utton 1 do)-.22 E(wn)-.275 E F0
(Button2MotionMask)72.916 411.2 Q F1(Pointer motion while b)232.5 411.2
Q(utton 2 do)-.22 E(wn)-.275 E F0(Button3MotionMask)72.916 424.2 Q F1
(Pointer motion while b)232.5 424.2 Q(utton 3 do)-.22 E(wn)-.275 E F0
(Button4MotionMask)72.916 437.2 Q F1(Pointer motion while b)232.5 437.2
Q(utton 4 do)-.22 E(wn)-.275 E F0(Button5MotionMask)72.916 450.2 Q F1
(Pointer motion while b)232.5 450.2 Q(utton 5 do)-.22 E(wn)-.275 E F0
(ButtonMotionMask)72.916 463.2 Q F1(Pointer motion while an)232.5 463.2
Q 2.75(yb)-.165 G(utton do)-2.97 E(wn)-.275 E F0 -.275(Ke)72.916 476.2 S
(ymapStateMask).275 E F1 -2.365 -.275(Ke y)232.5 476.2 T(board state w)
.275 E(anted at windo)-.11 E 2.75(we)-.275 G(ntry and focus in)-2.75 E
F0(Exposur)72.916 489.2 Q(eMask)-.198 E F1(An)232.5 489.2 Q 2.75(ye)
-.165 G(xposure w)-2.915 E(anted)-.11 E F0 -.407(Vi)72.916 502.2 S
(sibilityChangeMask).407 E F1(An)232.5 502.2 Q 2.75(yc)-.165 G
(hange in visibility w)-2.75 E(anted)-.11 E F0(Structur)72.916 515.2 Q
(eNotifyMask)-.198 E F1(An)232.5 515.2 Q 2.75(yc)-.165 G(hange in windo)
-2.75 E 2.75(ws)-.275 G(tructure w)-2.75 E(anted)-.11 E F0(ResizeRedir)
72.916 528.2 Q(ectMask)-.198 E F1(Redirect resize of this windo)232.5
528.2 Q(w)-.275 E F0(Substructur)72.916 541.2 Q(eNotifyMask)-.198 E F1
(Substructure noti\214cation w)232.5 541.2 Q(anted)-.11 E F0
(Substructur)72.916 554.2 Q(eRedir)-.198 E(ectMask)-.198 E F1
(Redirect structure requests on children)232.5 554.2 Q F0 -.275(Fo)
72.916 567.2 S(cusChangeMask).275 E F1(An)232.5 567.2 Q 2.75(yc)-.165 G
(hange in input focus w)-2.75 E(anted)-.11 E F0(Pr)72.916 580.2 Q
(opertyChangeMask)-.198 E F1(An)232.5 580.2 Q 2.75(yc)-.165 G
(hange in property w)-2.75 E(anted)-.11 E F0(ColormapChangeMask)72.916
593.2 Q F1(An)232.5 593.2 Q 2.75(yc)-.165 G(hange in colormap w)-2.75 E
(anted)-.11 E F0(OwnerGrabButtonMask)72.916 606.2 Q F1
(Automatic grabs should acti)232.5 606.2 Q -.275(va)-.275 G(te with o)
.275 E(wner_e)-.275 E -.165(ve)-.275 G(nts set).165 E(to)232.5 619.2 Q
F0 -.814(Tr)3.666 G(ue).814 E 484.5 629.95 72 629.95 DL 2.75(10.4. Ev)72
663.6 R(ent Pr)-.11 E(ocessing Ov)-.198 E(er)-.11 E(view)-.11 E F1
(The e)72 680.5 Q -.165(ve)-.275 G
(nt reported to a client application during e).165 E -.165(ve)-.275 G
(nt processing depends on which e).165 E -.165(ve)-.275 G(nt masks).165
E(you pro)72 693.5 Q(vide as the e)-.165 E -.165(ve)-.275 G
(nt-mask attrib).165 E(ute for a windo)-.22 E 4.18 -.715(w. F)-.275 H
(or some e).55 E -.165(ve)-.275 G(nt masks, there is a one-to-).165 E
(one correspondence between the e)72 706.5 Q -.165(ve)-.275 G
(nt mask constant and the e).165 E -.165(ve)-.275 G(nt type constant.)
.165 E -.165(Fo)5.5 G 2.75(re).165 G(xample,)-2.915 E(if you pass the e)
72 719.5 Q -.165(ve)-.275 G(nt mask).165 E F0(ButtonPr)3.666 E(essMask)
-.198 E F1 2.75(,t).916 G(he X serv)-2.75 E(er sends back only)-.165 E
F0(ButtonPr)3.666 E(ess)-.198 E F1 -2.365 -.275(ev e)3.666 H(nts.).275 E
(Most e)72 732.5 Q -.165(ve)-.275 G(nts contain a time member).165 E
2.75(,w)-.44 G(hich is the time at which an e)-2.75 E -.165(ve)-.275 G
(nt occurred.).165 E F0(200)279.75 769 Q 0 Cg EP
%%Page: 201 206
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E/F1 11/Times-Roman@0 SF
(In other cases, one e)72 85 Q -.165(ve)-.275 G
(nt mask constant can map to se).165 E -.165(ve)-.275 G(ral e).165 E
-.165(ve)-.275 G(nt type constants.).165 E -.165(Fo)5.5 G 2.75(re).165 G
(xample, if)-2.915 E(you pass the e)72 98 Q -.165(ve)-.275 G(nt mask)
.165 E F0(Substructur)3.666 E(eNotifyMask)-.198 E F1 2.75(,t).916 G
(he X serv)-2.75 E(er can send back)-.165 E F0(Cir)3.666 E(culateNo-)
-.198 E(tify)72 111 Q F1(,).916 E F0(Con\214gur)3.666 E(eNotify)-.198 E
F1(,).916 E F0(Cr)3.666 E(eateNotify)-.198 E F1(,).916 E F0(Destr)3.666
E(oyNotify)-.198 E F1(,).916 E F0(Gra)3.666 E(vityNotify)-.275 E F1(,)
.916 E F0(MapNotify)3.666 E F1(,).916 E F0(Repar)3.666 E(ent-)-.198 E
(Notify)72 124 Q F1 2.75(,o).916 G(r)-2.75 E F0(UnmapNotify)3.666 E F1
-2.365 -.275(ev e)3.666 H(nts.).275 E(In another case, tw)72 140.9 Q
2.75(oe)-.11 G -.165(ve)-3.025 G(nt masks can map to one e).165 E -.165
(ve)-.275 G(nt type.).165 E -.165(Fo)5.5 G 2.75(re).165 G
(xample, if you pass either)-2.915 E F0 -.22(Po)72.916 153.9 S
(interMotionMask).22 E F1(or)3.666 E F0(ButtonMotionMask)3.666 E F1 2.75
(,t).916 G(he X serv)-2.75 E(er sends back a)-.165 E F0(MotionNotify)
3.666 E F1 -2.365 -.275(ev e)3.666 H(nt.).275 E(The follo)72 170.8 Q
(wing table lists the e)-.275 E -.165(ve)-.275 G
(nt mask, its associated e).165 E -.165(ve)-.275 G
(nt type or types, and the structure name).165 E(associated with the e)
72 183.8 Q -.165(ve)-.275 G(nt type.).165 E
(Some of these structures actually are typedefs to a generic struc-)5.5
E(ture that is shared between tw)72 196.8 Q 2.75(oe)-.11 G -.165(ve)
-3.025 G(nt types.).165 E
(Note that N.A. appears in columns for which the)5.5 E
(information is not applicable.)72 209.8 Q .36 LW 508.5 224.45 72 224.45
DL/F2 9/Times-Bold@0 SF(Ev)72 241.2 Q(ent Mask)-.09 E(Ev)75.339 E(ent T)
-.09 E 39.753(ype Structur)-.666 F 84.672(eG)-.162 G(eneric Structur)
-84.672 E(e)-.162 E 508.5 251.45 72 251.45 DL/F3 9/Times-Roman@0 SF
48.24(ButtonMotionMask MotionNotify)72 268.2 R(XPointerMo)35.496 E -.135
(ve)-.135 G(dEv).135 E 40.662(ent XMotionEv)-.135 F(ent)-.135 E
(Button1MotionMask)72 281.2 Q(Button2MotionMask)72 294.2 Q
(Button3MotionMask)72 307.2 Q(Button4MotionMask)72 320.2 Q
(Button5MotionMask)72 333.2 Q 55.746(ButtonPressMask ButtonPress)72
352.2 R(XButtonPressedEv)41.994 E 39.888(ent XButtonEv)-.135 F(ent)-.135
E 46.755(ButtonReleaseMask ButtonRelease)72 371.2 R(XButtonReleasedEv)
33.003 E 34.893(ent XButtonEv)-.135 F(ent)-.135 E 35.757
(ColormapChangeMask ColormapNotify)72 390.2 R(XColormapEv)26.001 E(ent)
-.135 E(EnterW)72 409.2 Q(indo)-.36 E 49.347(wMask EnterNotify)-.225 F
(XEnterW)42.507 E(indo)-.36 E(wEv)-.225 E 41.985(ent XCrossingEv)-.135 F
(ent)-.135 E(Lea)72 428.2 Q -.135(ve)-.18 G -.36(Wi).135 G(ndo).36 E
47.169(wMask Lea)-.225 F -.135(ve)-.18 G 38.079(Notify XLea).135 F -.135
(ve)-.18 G -.36(Wi).135 G(ndo).36 E(wEv)-.225 E 39.807(ent XCrossingEv)
-.135 F(ent)-.135 E 65.259(ExposureMask Expose)72 447.2 R(XExposeEv)
59.004 E(ent)-.135 E(GCGraphicsExposures in GC)72 460.2 Q 24.264
(GraphicsExpose XGraphicsExposeEv)15.012 F(ent)-.135 E 45.756
(NoExpose XNoExposeEv)193.5 473.2 R(ent)-.135 E -.135(Fo)72 492.2 S
50.391(cusChangeMask F).135 F 54.387(ocusIn XF)-.135 F(ocusInEv)-.135 E
63.027(ent XF)-.135 F(ocusChangeEv)-.135 E(ent)-.135 E -.135(Fo)193.5
505.2 S 48.384(cusOut XF).135 F(ocusOutEv)-.135 E 57.024(ent XF)-.135 F
(ocusChangeEv)-.135 E(ent)-.135 E -1.935 -.225(Ke y)72 524.2 T 51.12
(mapStateMask K).225 F -.135(ey)-.225 G 29.619(mapNotify XK).135 F -.135
(ey)-.225 G(mapEv).135 E(ent)-.135 E -1.935 -.225(Ke y)72 543.2 T 65.619
(PressMask K).225 F -.135(ey)-.225 G 49.617(Press XK).135 F -.135(ey)
-.225 G(PressedEv).135 E 49.761(ent XK)-.135 F -.135(ey)-.225 G(Ev).135
E(ent)-.135 E -1.935 -.225(Ke y)72 556.2 T 56.628(ReleaseMask K).225 F
-.135(ey)-.225 G 40.626(Release XK).135 F -.135(ey)-.225 G(ReleasedEv)
.135 E 44.766(ent XK)-.135 F -.135(ey)-.225 G(Ev).135 E(ent)-.135 E
32.265(OwnerGrabButtonMask N.A.)72 575.2 R(N.A.)68.004 E 46.746
(PointerMotionMask MotionNotify)72 594.2 R(XPointerMo)35.496 E -.135(ve)
-.135 G(dEv).135 E 40.662(ent XMotionEv)-.135 F(ent)-.135 E 30.744
(PointerMotionHintMask N.A.)72 607.2 R(N.A.)68.004 E 40.761
(PropertyChangeMask PropertyNotify)72 626.2 R(XPropertyEv)31.005 E(ent)
-.135 E 44.766(ResizeRedirectMask ResizeRequest)72 645.2 R
(XResizeRequestEv)32.508 E(ent)-.135 E 42.759
(StructureNotifyMask CirculateNotify)72 664.2 R(XCirculateEv)29.007 E
(ent)-.135 E 23.751(Con\214gureNotify XCon\214gureEv)193.5 677.2 R(ent)
-.135 E(Destro)193.5 690.2 Q 31.347(yNotify XDestro)-.09 F(yW)-.09 E
(indo)-.36 E(wEv)-.225 E(ent)-.135 E(Gra)193.5 703.2 Q 32.436
(vityNotify XGra)-.18 F(vityEv)-.18 E(ent)-.135 E 43.254
(MapNotify XMapEv)193.5 716.2 R(ent)-.135 E F2(201)281.25 769 Q 0 Cg EP
%%Page: 202 207
%%BeginPageSetup
BP
%%EndPageSetup
/F0 9/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)270.882 E .36 LW 508.5 76.25 72 76.25 DL(Ev)72
93 Q(ent Mask)-.09 E(Ev)75.339 E(ent T)-.09 E 39.753(ype Structur)-.666
F 84.672(eG)-.162 G(eneric Structur)-84.672 E(e)-.162 E 508.5 103.25 72
103.25 DL/F1 9/Times-Roman@0 SF 27.261(ReparentNotify XReparentEv)193.5
120 R(ent)-.135 E 33.255(UnmapNotify XUnmapEv)193.5 133 R(ent)-.135 E
30.258(SubstructureNotifyMask CirculateNotify)72 152 R(XCirculateEv)
29.007 E(ent)-.135 E 23.751(Con\214gureNotify XCon\214gureEv)193.5 165 R
(ent)-.135 E 36.261(CreateNotify XCreateW)193.5 178 R(indo)-.36 E(wEv)
-.225 E(ent)-.135 E(Destro)193.5 191 Q 31.347(yNotify XDestro)-.09 F(yW)
-.09 E(indo)-.36 E(wEv)-.225 E(ent)-.135 E(Gra)193.5 204 Q 32.436
(vityNotify XGra)-.18 F(vityEv)-.18 E(ent)-.135 E 43.254
(MapNotify XMapEv)193.5 217 R(ent)-.135 E 27.261
(ReparentNotify XReparentEv)193.5 230 R(ent)-.135 E 33.255
(UnmapNotify XUnmapEv)193.5 243 R(ent)-.135 E 23.265
(SubstructureRedirectMask CirculateRequest)72 262 R(XCirculateRequestEv)
23.508 E(ent)-.135 E 18.252(Con\214gureRequest XCon\214gureRequestEv)
193.5 275 R(ent)-.135 E 37.755(MapRequest XMapRequestEv)193.5 288 R(ent)
-.135 E 101.754(N.A. ClientMessage)72 307 R(XClientMessageEv)32.004 E
(ent)-.135 E 101.754(N.A. MappingNotify)72 326 R(XMappingEv)29.502 E
(ent)-.135 E 101.754(N.A. SelectionClear)72 345 R(XSelectionClearEv)
32.508 E(ent)-.135 E 101.754(N.A. SelectionNotify)72 364 R(XSelectionEv)
28.503 E(ent)-.135 E 101.754(N.A. SelectionRequest)72 383 R
(XSelectionRequestEv)23.004 E(ent)-.135 E -.54(Vi)72 402 S 38.286
(sibilityChangeMask V).54 F 26.28(isibilityNotify XV)-.54 F(isibilityEv)
-.54 E(ent)-.135 E 508.5 412.25 72 412.25 DL/F2 11/Times-Roman@0 SF
(The sections that follo)72 433.4 Q 2.75(wd)-.275 G
(escribe the processing that occurs when you select the dif)-2.75 E
(ferent e)-.275 E -.165(ve)-.275 G(nt).165 E 2.75(masks. The)72 446.4 R
(sections are or)2.75 E -.055(ga)-.198 G
(nized according to these processing cate).055 E(gories:)-.165 E 23.65
<834b>72 463.3 S -.165(ey)-23.925 G(board and pointer e).165 E -.165(ve)
-.275 G(nts).165 E 23.65<8357>72 480.2 S(indo)-24.09 E 2.75(wc)-.275 G
(rossing e)-2.75 E -.165(ve)-.275 G(nts).165 E 23.65<8349>72 497.1 S
(nput focus e)-23.65 E -.165(ve)-.275 G(nts).165 E 23.65<834b>72 514 S
-.165(ey)-23.925 G(map state noti\214cation e).165 E -.165(ve)-.275 G
(nts).165 E 23.65<8345>72 530.9 S(xposure e)-23.65 E -.165(ve)-.275 G
(nts).165 E 23.65<8357>72 547.8 S(indo)-24.09 E 2.75(ws)-.275 G
(tate noti\214cation e)-2.75 E -.165(ve)-.275 G(nts).165 E 23.65<8353>72
564.7 S(tructure control e)-23.65 E -.165(ve)-.275 G(nts).165 E 23.65
<8343>72 581.6 S(olormap state noti\214cation e)-23.65 E -.165(ve)-.275
G(nts).165 E 23.65<8343>72 598.5 S(lient communication e)-23.65 E -.165
(ve)-.275 G(nts).165 E/F3 11/Times-Bold@0 SF 2.75(10.5. K)72 624.5 R
(eyboard and P)-.275 E(ointer Ev)-.22 E(ents)-.11 E F2
(This section discusses:)72 641.4 Q 23.65<8350>72 658.3 S(ointer b)
-23.65 E(utton e)-.22 E -.165(ve)-.275 G(nts).165 E 23.65<834b>72 675.2
S -.165(ey)-23.925 G(board and pointer e).165 E -.165(ve)-.275 G(nts)
.165 E F3 2.75(10.5.1. P)72 701.2 R(ointer Button Ev)-.22 E(ents)-.11 E
F2(The follo)72 718.1 Q(wing describes the e)-.275 E -.165(ve)-.275 G
(nt processing that occurs when a pointer b).165 E
(utton press is processed)-.22 E(with the pointer in some windo)72 731.1
Q 2.75(wwa)-.275 G(nd when no acti)-2.75 E .33 -.165(ve p)-.275 H
(ointer grab is in progress.).165 E F3(202)279.75 769 Q 0 Cg EP
%%Page: 203 208
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E/F1 11/Times-Roman@0 SF(The X serv)72
85 Q(er searches the ancestors of w from the root do)-.165 E
(wn, looking for a passi)-.275 E .33 -.165(ve g)-.275 H(rab to acti-)
.165 E -.275(va)72 98 S 2.75(te. If).275 F(no matching passi)2.75 E .33
-.165(ve g)-.275 H(rab on the b).165 E(utton e)-.22 E(xists, the X serv)
-.165 E(er automatically starts an acti)-.165 E -.165(ve)-.275 G
(grab for the client recei)72 111 Q(ving the e)-.275 E -.165(ve)-.275 G
(nt and sets the last-pointer).165 E(-grab time to the current serv)-.22
E(er)-.165 E 2.75(time. The)72 124 R(ef)2.75 E(fect is essentially equi)
-.275 E -.275(va)-.275 G(lent to an).275 E F0(XGrabButton)3.666 E F1
(with these client passed ar)3.666 E(gu-)-.198 E(ments:)72 137 Q .44 LW
448.5 148.25 72 148.25 DL F0(Ar)72 164.5 Q 73.592(gument V)-.11 F(alue)
-1.012 E 448.5 175.25 72 175.25 DL/F2 11/Times-Italic@0 SF(w)72 191.5 Q
F1(The e)196.5 191.5 Q -.165(ve)-.275 G(nt windo).165 E(w)-.275 E F2
-.165(ev)72 204.5 S(ent_mask).165 E F1(The client')196.5 204.5 Q 2.75
(ss)-.605 G(elected pointer e)-2.75 E -.165(ve)-.275 G(nts on the e).165
E -.165(ve)-.275 G(nt windo).165 E(w)-.275 E F2(pointer_mode)72 217.5 Q
F0(GrabModeAsync)197.416 217.5 Q F2 -.11(ke)72 230.5 S(yboar)-.22 E
(d_mode)-.407 E F0(GrabModeAsync)197.416 230.5 Q F2(owner_e)72 243.5 Q
(vents)-.165 E F0 -.814(Tr)197.416 243.5 S(ue).814 E F1 2.75(,i).916 G
2.75(ft)-2.75 G(he client has selected)-2.75 E F0(OwnerGrabButton-)3.666
E(Mask)196.5 256.5 Q F1(on the e)3.666 E -.165(ve)-.275 G(nt windo).165
E 1.43 -.715(w, o)-.275 H(therwise).715 E F0 -.275(Fa)3.666 G(lse).275 E
F2(con\214ne_to)72 269.5 Q F0(None)197.416 269.5 Q F2(cur)72 282.5 Q
(sor)-.11 E F0(None)197.416 282.5 Q 448.5 293.25 72 293.25 DL F1
(The acti)72 313.9 Q .33 -.165(ve g)-.275 H(rab is automatically termin\
ated when the logical state of the pointer has all b).165 E(uttons)-.22
E 2.75(released. Clients)72 326.9 R(can modify the acti)2.75 E .33 -.165
(ve g)-.275 H(rab by calling).165 E F0(XUngrabP)3.666 E(ointer)-.22 E F1
(and)3.666 E F0(XChangeAc-)3.666 E(ti)72 339.9 Q -.11(ve)-.11 G -.22(Po)
.11 G(interGrab).22 E F1(.).916 E F0 2.75(10.5.2. K)72 365.9 R
(eyboard and P)-.275 E(ointer Ev)-.22 E(ents)-.11 E F1
(This section discusses the processing that occurs for the k)72 382.8 Q
-.165(ey)-.11 G(board e).165 E -.165(ve)-.275 G(nts).165 E F0 -.275(Ke)
3.666 G(yPr).275 E(ess)-.198 E F1(and)3.666 E F0 -.275(Ke)3.666 G(yRe-)
.275 E(lease)72 395.8 Q F1(and the pointer e)3.666 E -.165(ve)-.275 G
(nts).165 E F0(ButtonPr)3.666 E(ess)-.198 E F1(,).916 E F0
(ButtonRelease)3.666 E F1 2.75(,a).916 G(nd)-2.75 E F0(MotionNotify)
3.666 E F1 5.5(.F).916 G(or information)-5.665 E(about the k)72 408.8 Q
-.165(ey)-.11 G(board e).165 E -.165(ve)-.275 G
(nt-handling utilities, see chapter 11.).165 E(The X serv)72 425.7 Q
(er reports)-.165 E F0 -.275(Ke)3.666 G(yPr).275 E(ess)-.198 E F1(or)
3.666 E F0 -.275(Ke)3.666 G(yRelease).275 E F1 -2.365 -.275(ev e)3.666 H
(nts to clients w).275 E(anting information about k)-.11 E -.165(ey)-.11
G(s).165 E(that logically change state.)72 438.7 Q(Note that these e)5.5
E -.165(ve)-.275 G(nts are generated for all k).165 E -.165(ey)-.11 G
(s, e).165 E -.165(ve)-.275 G 2.75(nt).165 G(hose mapped)-2.75 E
(to modi\214er bits.)72 451.7 Q(The X serv)5.5 E(er reports)-.165 E F0
(ButtonPr)3.666 E(ess)-.198 E F1(or)3.666 E F0(ButtonRelease)3.666 E F1
-2.365 -.275(ev e)3.666 H(nts to clients w).275 E(anting)-.11 E
(information about b)72 464.7 Q(uttons that logically change state.)-.22
E(The X serv)72 481.6 Q(er reports)-.165 E F0(MotionNotify)3.666 E F1
-2.365 -.275(ev e)3.666 H(nts to clients w).275 E
(anting information about when the pointer)-.11 E(logically mo)72 494.6
Q -.165(ve)-.165 G 2.75(s. The).165 F 2.75(Xs)2.75 G(erv)-2.75 E
(er generates this e)-.165 E -.165(ve)-.275 G(nt whene).165 E -.165(ve)
-.275 G 2.75(rt).165 G(he pointer is mo)-2.75 E -.165(ve)-.165 G 2.75
(da).165 G(nd the pointer)-2.75 E(motion be)72 507.6 Q
(gins and ends in the windo)-.165 E 4.18 -.715(w. T)-.275 H
(he granularity of).715 E F0(MotionNotify)3.666 E F1 -2.365 -.275(ev e)
3.666 H(nts is not guaran-).275 E(teed, b)72 520.6 Q
(ut a client that selects this e)-.22 E -.165(ve)-.275 G
(nt type is guaranteed to recei).165 E .33 -.165(ve a)-.275 H 2.75(tl)
.165 G(east one e)-2.75 E -.165(ve)-.275 G(nt when the).165 E
(pointer mo)72 533.6 Q -.165(ve)-.165 G 2.75(sa).165 G(nd then rests.)
-2.75 E(The generation of the logical changes lags the ph)72 550.5 Q
(ysical changes if de)-.055 E(vice e)-.275 E -.165(ve)-.275 G
(nt processing is).165 E(frozen.)72 563.5 Q 1.76 -.88(To r)72 580.4 T
(ecei).88 E -.165(ve)-.275 G F0 -.275(Ke)3.831 G(yPr).275 E(ess)-.198 E
F1(,).916 E F0 -.275(Ke)3.666 G(yRelease).275 E F1(,).916 E F0(ButtonPr)
3.666 E(ess)-.198 E F1 2.75(,a).916 G(nd)-2.75 E F0(ButtonRelease)3.666
E F1 -2.365 -.275(ev e)3.666 H(nts, set).275 E F0 -.275(Ke)3.666 G(yPr)
.275 E(ess-)-.198 E(Mask)72 593.4 Q F1(,).916 E F0 -.275(Ke)3.666 G
(yReleaseMask).275 E F1(,).916 E F0(ButtonPr)3.666 E(essMask)-.198 E F1
2.75(,a).916 G(nd)-2.75 E F0(ButtonReleaseMask)3.666 E F1(bits in the e)
3.666 E -.165(ve)-.275 G(nt-mask).165 E(attrib)72 606.4 Q
(ute of the windo)-.22 E -.715(w.)-.275 G 1.76 -.88(To r)72 623.3 T
(ecei).88 E -.165(ve)-.275 G F0(MotionNotify)3.831 E F1 -2.365 -.275
(ev e)3.666 H(nts, set one or more of the follo).275 E(wing e)-.275 E
-.165(ve)-.275 G(nt masks bits in the e).165 E -.165(ve)-.275 G(nt-).165
E(mask attrib)72 636.3 Q(ute of the windo)-.22 E -.715(w.)-.275 G<83>72
653.2 Q F0(Button1MotionMask)24.566 E F1<ad>3.666 E F0
(Button5MotionMask)3.666 E F1(The client application recei)99.5 670.1 Q
-.165(ve)-.275 G(s).165 E F0(MotionNotify)3.666 E F1 -2.365 -.275(ev e)
3.666 H(nts only when one or more of the speci-).275 E(\214ed b)99.5
683.1 Q(uttons is pressed.)-.22 E<83>72 700 Q F0(ButtonMotionMask)24.566
E F1(The client application recei)99.5 716.9 Q -.165(ve)-.275 G(s).165 E
F0(MotionNotify)3.666 E F1 -2.365 -.275(ev e)3.666 H
(nts only when at least one b).275 E(utton is)-.22 E(pressed.)99.5 729.9
Q F0(203)279.75 769 Q 0 Cg EP
%%Page: 204 209
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E/F1 11/Times-Roman@0 SF<83>72 85 Q F0
-.22(Po)24.566 G(interMotionMask).22 E F1(The client application recei)
99.5 101.9 Q -.165(ve)-.275 G(s).165 E F0(MotionNotify)3.666 E F1 -2.365
-.275(ev e)3.666 H(nts independent of the state of the pointer).275 E
-.22(bu)99.5 114.9 S(ttons.).22 E<83>72 131.8 Q F0 -.22(Po)24.566 G
(interMotionHintMask).22 E F1(If)99.5 148.7 Q F0 -.22(Po)3.666 G
(interMotionHintMask).22 E F1
(is selected in combination with one or more of the abo)3.666 E -.165
(ve)-.165 G(masks, the X serv)99.5 161.7 Q(er is free to send only one)
-.165 E F0(MotionNotify)3.666 E F1 -2.365 -.275(ev e)3.666 H
(nt \(with the is_hint member).275 E(of the)99.5 174.7 Q F0(XP)3.666 E
(ointerMo)-.22 E -.11(ve)-.11 G(dEv).11 E(ent)-.11 E F1
(structure set to)3.666 E F0(NotifyHint)3.666 E F1 2.75(\)t).916 G 2.75
(ot)-2.75 G(he client for the e)-2.75 E -.165(ve)-.275 G(nt win-).165 E
(do)99.5 187.7 Q 1.43 -.715(w, u)-.275 H(ntil either the k).715 E .33
-.165(ey o)-.11 H 2.75(rb).165 G(utton state changes, the pointer lea)
-2.97 E -.165(ve)-.22 G 2.75(st).165 G(he e)-2.75 E -.165(ve)-.275 G
(nt windo).165 E 1.43 -.715(w, o)-.275 H 2.75(rt).715 G(he)-2.75 E
(client calls)99.5 200.7 Q F0(XQueryP)3.666 E(ointer)-.22 E F1(or)3.666
E F0(XGetMotionEv)3.666 E(ents)-.11 E F1 5.5(.T).916 G(he serv)-5.5 E
(er still may send)-.165 E F0(Motion-)3.666 E(Notify)99.5 213.7 Q F1
-2.365 -.275(ev e)3.666 H(nts without is_hint set to).275 E F0
(NotifyHint)3.666 E F1(.).916 E(The source of the e)72 230.6 Q -.165(ve)
-.275 G(nt is the vie).165 E -.11(wa)-.275 G(ble windo).11 E 2.75(wt)
-.275 G(hat the pointer is in.)-2.75 E(The windo)5.5 E 2.75(wu)-.275 G
(sed by the X)-2.75 E(serv)72 243.6 Q(er to report these e)-.165 E -.165
(ve)-.275 G(nts depends on the windo).165 E(w')-.275 E 2.75(sp)-.605 G
(osition in the windo)-2.75 E 2.75(wh)-.275 G(ierarch)-2.75 E 2.75(ya)
-.055 G(nd)-2.75 E(whether an)72 256.6 Q 2.75(yi)-.165 G(nterv)-2.75 E
(ening windo)-.165 E 2.75(wp)-.275 G(rohibits the generation of these e)
-2.75 E -.165(ve)-.275 G 2.75(nts. Starting).165 F(with the)2.75 E
(source windo)72 269.6 Q 1.43 -.715(w, t)-.275 H(he X serv).715 E
(er searches up the windo)-.165 E 2.75(wh)-.275 G(ierarch)-2.75 E 2.75
(yu)-.055 G(ntil it locates the \214rst windo)-2.75 E(w)-.275 E
(speci\214ed by a client as ha)72 282.6 Q(ving an interest in these e)
-.22 E -.165(ve)-.275 G 2.75(nts. If).165 F(one of the interv)2.75 E
(ening windo)-.165 E(ws has)-.275 E(its do-not-propag)72 295.6 Q
(ate-mask set to prohibit generation of the e)-.055 E -.165(ve)-.275 G
(nt type, the e).165 E -.165(ve)-.275 G(nts of those types).165 E
(will be suppressed.)72 308.6 Q(Clients can modify the actual windo)5.5
E 2.75(wu)-.275 G(sed for reporting by performing)-2.75 E(acti)72 321.6
Q .33 -.165(ve g)-.275 H(rabs and, in the case of k).165 E -.165(ey)-.11
G(board e).165 E -.165(ve)-.275 G(nts, by using the focus windo).165 E
-.715(w.)-.275 G(The structures for these e)72 338.5 Q -.165(ve)-.275 G
(nt types contain:).165 E F0(204)279.75 769 Q 0 Cg EP
%%Page: 205 210
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E .44 LW 36 76.75 36 87.75 DL 36 74.75
36 85.75 DL 41.5 73 36 73 DL 43.5 73 38 73 DL 49 73 43.5 73 DL/F1 11
/Times-Roman@0 SF(typedef struct {)72 91.5 Q(int type;)108 104.5 Q
(/* ButtonPress or ButtonRelease */)143.634 E(unsigned long serial;)108
117.5 Q(/* # of last request processed by serv)88.337 E(er */)-.165 E
(Bool send_e)108 130.5 Q -.165(ve)-.275 G 100.998(nt; /*).165 F
(true if this came from a SendEv)2.75 E(ent request */)-.165 E
(Display *display;)108 143.5 Q(/* Display the e)102.692 E -.165(ve)-.275
G(nt w).165 E(as read from */)-.11 E -.44(Wi)108 156.5 S(ndo).44 E 2.75
(ww)-.275 G(indo)-2.75 E 99.106(w; /*)-.275 F -.814(``)2.75 G -2.365
-.275(ev e).814 H(nt').275 E 2.75('w)-.814 G(indo)-2.75 E 2.75(wi)-.275
G 2.75(ti)-2.75 G 2.75(sr)-2.75 G(eported relati)-2.75 E .33 -.165(ve t)
-.275 H 2.75(o*).165 G(/)-2.75 E -.44(Wi)108 169.5 S(ndo).44 E 2.75(wr)
-.275 G 116.552(oot; /*)-2.75 F(root windo)2.75 E 2.75(wt)-.275 G
(hat the e)-2.75 E -.165(ve)-.275 G(nt occurred on */).165 E -.44(Wi)108
182.5 S(ndo).44 E 2.75(ws)-.275 G(ubwindo)-2.75 E 83.827(w; /*)-.275 F
(child windo)2.75 E 2.75(w*)-.275 G(/)-2.75 E -.385(Ti)108 195.5 S
(me time;).385 E(/* milliseconds */)131.798 E(int x, y;)108 208.5 Q
(/* pointer x, y coordinates in e)146.076 E -.165(ve)-.275 G(nt windo)
.165 E 2.75(w*)-.275 G(/)-2.75 E(int x_root, y_root;)108 221.5 Q
(/* coordinates relati)99.634 E .33 -.165(ve t)-.275 H 2.75(or).165 G
(oot */)-2.75 E(unsigned int state;)108 234.5 Q(/* k)99.942 E .33 -.165
(ey o)-.11 H 2.75(rb).165 G(utton mask */)-2.97 E(unsigned int b)108
247.5 Q 89.459(utton; /*)-.22 F(detail */)2.75 E(Bool same_screen;)108
260.5 Q(/* same screen \215ag */)96.598 E 2.75(}X)72 273.5 S(ButtonEv)
-2.75 E(ent;)-.165 E(typedef XButtonEv)72 286.5 Q(ent XButtonPressedEv)
-.165 E(ent;)-.165 E(typedef XButtonEv)72 299.5 Q(ent XButtonReleasedEv)
-.165 E(ent;)-.165 E(typedef struct {)72 329.4 Q(int type;)108 342.4 Q
(/* K)143.634 E -.165(ey)-.275 G(Press or K).165 E -.165(ey)-.275 G
(Release */).165 E(unsigned long serial;)108 355.4 Q
(/* # of last request processed by serv)88.337 E(er */)-.165 E
(Bool send_e)108 368.4 Q -.165(ve)-.275 G 100.998(nt; /*).165 F
(true if this came from a SendEv)2.75 E(ent request */)-.165 E
(Display *display;)108 381.4 Q(/* Display the e)102.692 E -.165(ve)-.275
G(nt w).165 E(as read from */)-.11 E -.44(Wi)108 394.4 S(ndo).44 E 2.75
(ww)-.275 G(indo)-2.75 E 99.106(w; /*)-.275 F -.814(``)2.75 G -2.365
-.275(ev e).814 H(nt').275 E 2.75('w)-.814 G(indo)-2.75 E 2.75(wi)-.275
G 2.75(ti)-2.75 G 2.75(sr)-2.75 G(eported relati)-2.75 E .33 -.165(ve t)
-.275 H 2.75(o*).165 G(/)-2.75 E -.44(Wi)108 407.4 S(ndo).44 E 2.75(wr)
-.275 G 116.552(oot; /*)-2.75 F(root windo)2.75 E 2.75(wt)-.275 G
(hat the e)-2.75 E -.165(ve)-.275 G(nt occurred on */).165 E -.44(Wi)108
420.4 S(ndo).44 E 2.75(ws)-.275 G(ubwindo)-2.75 E 83.827(w; /*)-.275 F
(child windo)2.75 E 2.75(w*)-.275 G(/)-2.75 E -.385(Ti)108 433.4 S
(me time;).385 E(/* milliseconds */)131.798 E(int x, y;)108 446.4 Q
(/* pointer x, y coordinates in e)146.076 E -.165(ve)-.275 G(nt windo)
.165 E 2.75(w*)-.275 G(/)-2.75 E(int x_root, y_root;)108 459.4 Q
(/* coordinates relati)99.634 E .33 -.165(ve t)-.275 H 2.75(or).165 G
(oot */)-2.75 E(unsigned int state;)108 472.4 Q(/* k)99.942 E .33 -.165
(ey o)-.11 H 2.75(rb).165 G(utton mask */)-2.97 E(unsigned int k)108
485.4 Q -.165(ey)-.11 G 80.978(code; /*).165 F(detail */)2.75 E
(Bool same_screen;)108 498.4 Q(/* same screen \215ag */)96.598 E 2.75
(}X)72 511.4 S -2.365 -.275(Ke y)-2.75 H(Ev).275 E(ent;)-.165 E
(typedef XK)72 524.4 Q -.165(ey)-.275 G(Ev).165 E(ent XK)-.165 E -.165
(ey)-.275 G(PressedEv).165 E(ent;)-.165 E(typedef XK)72 537.4 Q -.165
(ey)-.275 G(Ev).165 E(ent XK)-.165 E -.165(ey)-.275 G(ReleasedEv).165 E
(ent;)-.165 E(typedef struct {)72 567.3 Q(int type;)108 580.3 Q
(/* MotionNotify */)143.634 E(unsigned long serial;)108 593.3 Q
(/* # of last request processed by serv)88.337 E(er */)-.165 E
(Bool send_e)108 606.3 Q -.165(ve)-.275 G 100.998(nt; /*).165 F
(true if this came from a SendEv)2.75 E(ent request */)-.165 E
(Display *display;)108 619.3 Q(/* Display the e)102.692 E -.165(ve)-.275
G(nt w).165 E(as read from */)-.11 E -.44(Wi)108 632.3 S(ndo).44 E 2.75
(ww)-.275 G(indo)-2.75 E 99.106(w; /*)-.275 F -.814(``)2.75 G -2.365
-.275(ev e).814 H(nt').275 E 2.75('w)-.814 G(indo)-2.75 E 2.75(wr)-.275
G(eported relati)-2.75 E .33 -.165(ve t)-.275 H 2.75(o*).165 G(/)-2.75 E
-.44(Wi)108 645.3 S(ndo).44 E 2.75(wr)-.275 G 116.552(oot; /*)-2.75 F
(root windo)2.75 E 2.75(wt)-.275 G(hat the e)-2.75 E -.165(ve)-.275 G
(nt occurred on */).165 E -.44(Wi)108 658.3 S(ndo).44 E 2.75(ws)-.275 G
(ubwindo)-2.75 E 83.827(w; /*)-.275 F(child windo)2.75 E 2.75(w*)-.275 G
(/)-2.75 E -.385(Ti)108 671.3 S(me time;).385 E(/* milliseconds */)
131.798 E(int x, y;)108 684.3 Q(/* pointer x, y coordinates in e)146.076
E -.165(ve)-.275 G(nt windo).165 E 2.75(w*)-.275 G(/)-2.75 E
(int x_root, y_root;)108 697.3 Q(/* coordinates relati)99.634 E .33
-.165(ve t)-.275 H 2.75(or).165 G(oot */)-2.75 E(unsigned int state;)108
710.3 Q(/* k)99.942 E .33 -.165(ey o)-.11 H 2.75(rb).165 G
(utton mask */)-2.97 E(char is_hint;)108 723.3 Q(/* detail */)125.308 E
F0(205)279.75 769 Q 0 Cg EP
%%Page: 206 211
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E/F1 11/Times-Roman@0 SF
(Bool same_screen;)108 85 Q(/* same screen \215ag */)96.598 E 2.75(}X)72
98 S(MotionEv)-2.75 E(ent;)-.165 E(typedef XMotionEv)72 111 Q
(ent XPointerMo)-.165 E -.165(ve)-.165 G(dEv).165 E(ent;)-.165 E .44 LW
36 113.15 36 124.15 DL 36 111.15 36 122.15 DL 41.5 122.4 36 122.4 DL
43.5 122.4 38 122.4 DL 49 122.4 43.5 122.4 DL(These structures ha)72
147.4 Q .33 -.165(ve t)-.22 H(he follo).165 E
(wing common members: windo)-.275 E 1.43 -.715(w, r)-.275 H
(oot, subwindo).715 E 1.43 -.715(w, t)-.275 H(ime, x, y).715 E(,)-.715 E
(x_root, y_root, state, and same_screen.)72 160.4 Q(The windo)5.5 E 2.75
(wm)-.275 G(ember is set to the windo)-2.75 E 2.75(wo)-.275 G 2.75(nw)
-2.75 G(hich the)-2.75 E -2.365 -.275(ev e)72 173.4 T(nt w).275 E
(as generated and is referred to as the e)-.11 E -.165(ve)-.275 G
(nt windo).165 E 4.18 -.715(w. A)-.275 H 2.75(sl).715 G
(ong as the conditions pre)-2.75 E(viously)-.275 E
(discussed are met, this is the windo)72 186.4 Q 2.75(wu)-.275 G
(sed by the X serv)-2.75 E(er to report the e)-.165 E -.165(ve)-.275 G
2.75(nt. The).165 F(root member)2.75 E(is set to the source windo)72
199.4 Q(w')-.275 E 2.75(sr)-.605 G(oot windo)-2.75 E 4.18 -.715(w. T)
-.275 H(he x_root and y_root members are set to the).715 E(pointer')72
212.4 Q 2.75(sc)-.605 G(oordinates relati)-2.75 E .33 -.165(ve t)-.275 H
2.75(ot).165 G(he root windo)-2.75 E(w')-.275 E 2.75(so)-.605 G
(rigin at the time of the e)-2.75 E -.165(ve)-.275 G(nt.).165 E
(The same_screen member is set to indicate whether the e)72 229.3 Q
-.165(ve)-.275 G(nt windo).165 E 2.75(wi)-.275 G 2.75(so)-2.75 G 2.75
(nt)-2.75 G(he same screen as the)-2.75 E(root windo)72 242.3 Q 2.75(wa)
-.275 G(nd can be either)-2.75 E F0 -.814(Tr)3.666 G(ue).814 E F1(or)
3.666 E F0 -.275(Fa)3.666 G(lse).275 E F1 5.5(.I).916 G(f)-5.5 E F0
-.814(Tr)3.666 G(ue).814 E F1 2.75(,t).916 G(he e)-2.75 E -.165(ve)-.275
G(nt and root windo).165 E(ws are on the)-.275 E(same screen.)72 255.3 Q
(If)5.5 E F0 -.275(Fa)3.666 G(lse).275 E F1 2.75(,t).916 G(he e)-2.75 E
-.165(ve)-.275 G(nt and root windo).165 E
(ws are not on the same screen.)-.275 E(If the source windo)72 272.2 Q
2.75(wi)-.275 G 2.75(sa)-2.75 G 2.75(ni)-2.75 G(nferior of the e)-2.75 E
-.165(ve)-.275 G(nt windo).165 E 1.43 -.715(w, t)-.275 H(he subwindo)
.715 E 2.75(wm)-.275 G(ember of the structure)-2.75 E
(is set to the child of the e)72 285.2 Q -.165(ve)-.275 G(nt windo).165
E 2.75(wt)-.275 G(hat is the source windo)-2.75 E 2.75(wo)-.275 G 2.75
(rt)-2.75 G(he child of the e)-2.75 E -.165(ve)-.275 G(nt windo).165 E
(w)-.275 E(that is an ancestor of the source windo)72 298.2 Q 4.18 -.715
(w. O)-.275 H(therwise, the X serv).715 E(er sets the subwindo)-.165 E
2.75(wm)-.275 G(ember to)-2.75 E F0(None)72.916 311.2 Q F1 5.5(.T).916 G
(he time member is set to the time when the e)-5.5 E -.165(ve)-.275 G
(nt w).165 E(as generated and is e)-.11 E(xpressed in mil-)-.165 E
(liseconds.)72 324.2 Q(If the e)72 341.1 Q -.165(ve)-.275 G(nt windo)
.165 E 2.75(wi)-.275 G 2.75(so)-2.75 G 2.75(nt)-2.75 G
(he same screen as the root windo)-2.75 E 1.43 -.715(w, t)-.275 H
(he x and y members are set to the).715 E(coordinates relati)72 354.1 Q
.33 -.165(ve t)-.275 H 2.75(ot).165 G(he e)-2.75 E -.165(ve)-.275 G
(nt windo).165 E(w')-.275 E 2.75(so)-.605 G 2.75(rigin. Otherwise,)-2.75
F(these members are set to zero.)2.75 E
(The state member is set to indicate the logical state of the pointer b)
72 371 Q(uttons and modi\214er k)-.22 E -.165(ey)-.11 G 2.75(sj).165 G
(ust)-2.75 E(prior to the e)72 384 Q -.165(ve)-.275 G
(nt, which is the bitwise inclusi).165 E .33 -.165(ve O)-.275 H 2.75(Ro)
.165 G 2.75(fo)-2.75 G(ne or more of the b)-2.75 E
(utton or modi\214er k)-.22 E -.165(ey)-.11 G(masks:)72 397 Q F0
(Button1Mask)3.666 E F1(,).916 E F0(Button2Mask)3.666 E F1(,).916 E F0
(Button3Mask)3.666 E F1(,).916 E F0(Button4Mask)3.666 E F1(,).916 E F0
(Button5Mask)3.666 E F1(,).916 E F0(Shift-)3.666 E(Mask)72 410 Q F1(,)
.916 E F0(LockMask)3.666 E F1(,).916 E F0(Contr)3.666 E(olMask)-.198 E
F1(,).916 E F0(Mod1Mask)3.666 E F1(,).916 E F0(Mod2Mask)3.666 E F1(,)
.916 E F0(Mod3Mask)3.666 E F1(,).916 E F0(Mod4Mask)3.666 E F1 2.75(,a)
.916 G(nd)-2.75 E F0(Mod5Mask)72.916 423 Q F1(.).916 E
(Each of these structures also has a member that indicates the detail.)
72 439.9 Q -.165(Fo)5.5 G 2.75(rt).165 G(he)-2.75 E F0(XK)3.666 E(eyPr)
-.275 E(essedEv)-.198 E(ent)-.11 E F1(and)72 452.9 Q F0(XK)3.666 E
(eyReleasedEv)-.275 E(ent)-.11 E F1
(structures, this member is called a k)3.666 E -.165(ey)-.11 G 2.75
(code. It).165 F(is set to a number that)2.75 E(represents a ph)72 465.9
Q(ysical k)-.055 E .33 -.165(ey o)-.11 H 2.75(nt).165 G(he k)-2.75 E
-.165(ey)-.11 G 2.75(board. The).165 F -.11(ke)2.75 G
(ycode is an arbitrary representation for an)-.055 E 2.75(yk)-.165 G
-.165(ey)-2.86 G(on the k)72 478.9 Q -.165(ey)-.11 G
(board \(see sections 12.7 and 16.1\).).165 E -.165(Fo)72 495.8 S 2.75
(rt).165 G(he)-2.75 E F0(XButtonPr)3.666 E(essedEv)-.198 E(ent)-.11 E F1
(and)3.666 E F0(XButtonReleasedEv)3.666 E(ent)-.11 E F1
(structures, this member is called)3.666 E -.22(bu)72 508.8 S 2.75
(tton. It).22 F(represents the pointer b)2.75 E
(utton that changed state and can be the)-.22 E F0(Button1)3.666 E F1(,)
.916 E F0(Button2)3.666 E F1(,).916 E F0(Button3)72.916 521.8 Q F1(,)
.916 E F0(Button4)3.666 E F1 2.75(,o).916 G(r)-2.75 E F0(Button5)3.666 E
F1 -.275(va)3.666 G 2.75(lue. F).275 F(or the)-.165 E F0(XP)3.666 E
(ointerMo)-.22 E -.11(ve)-.11 G(dEv).11 E(ent)-.11 E F1
(structure, this member is)3.666 E(called is_hint.)72 534.8 Q
(It can be set to)5.5 E F0(NotifyNormal)3.666 E F1(or)3.666 E F0
(NotifyHint)3.666 E F1(.).916 E
(Some of the symbols mentioned in this section ha)72 551.7 Q .33 -.165
(ve \214)-.22 H -.165(xe).165 G 2.75(dv).165 G(alues, as follo)-3.025 E
(ws:)-.275 E 484.5 562.95 72 562.95 DL F0 122.297(Symbol V)72 579.2 R
(alue)-1.012 E 484.5 589.95 72 589.95 DL(Button1MotionMask)72.916 606.2
Q F1(\(1L<<8\))232.5 606.2 Q F0(Button2MotionMask)72.916 619.2 Q F1
(\(1L<<9\))232.5 619.2 Q F0(Button3MotionMask)72.916 632.2 Q F1
(\(1L<<10\))232.5 632.2 Q F0(Button4MotionMask)72.916 645.2 Q F1
(\(1L<<11\))232.5 645.2 Q F0(Button5MotionMask)72.916 658.2 Q F1
(\(1L<<12\))232.5 658.2 Q F0(Button1Mask)72.916 671.2 Q F1(\(1<<8\))
232.5 671.2 Q F0(Button2Mask)72.916 684.2 Q F1(\(1<<9\))232.5 684.2 Q F0
(Button3Mask)72.916 697.2 Q F1(\(1<<10\))232.5 697.2 Q F0(Button4Mask)
72.916 710.2 Q F1(\(1<<11\))232.5 710.2 Q F0(206)279.75 769 Q 0 Cg EP
%%Page: 207 212
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E .44 LW 484.5 76.75 72 76.75 DL 122.297
(Symbol V)72 93 R(alue)-1.012 E 484.5 103.75 72 103.75 DL(Button5Mask)
72.916 120 Q/F1 11/Times-Roman@0 SF(\(1<<12\))232.5 120 Q F0(ShiftMask)
72.916 133 Q F1(\(1<<0\))232.5 133 Q F0(LockMask)72.916 146 Q F1
(\(1<<1\))232.5 146 Q F0(Contr)72.916 159 Q(olMask)-.198 E F1(\(1<<2\))
232.5 159 Q F0(Mod1Mask)72.916 172 Q F1(\(1<<3\))232.5 172 Q F0
(Mod2Mask)72.916 185 Q F1(\(1<<4\))232.5 185 Q F0(Mod3Mask)72.916 198 Q
F1(\(1<<5\))232.5 198 Q F0(Mod4Mask)72.916 211 Q F1(\(1<<6\))232.5 211 Q
F0(Mod5Mask)72.916 224 Q F1(\(1<<7\))232.5 224 Q F0(Button1)72.916 237 Q
F1(1)232.5 237 Q F0(Button2)72.916 250 Q F1(2)232.5 250 Q F0(Button3)
72.916 263 Q F1(3)232.5 263 Q F0(Button4)72.916 276 Q F1(4)232.5 276 Q
F0(Button5)72.916 289 Q F1(5)232.5 289 Q 484.5 299.75 72 299.75 DL F0
2.75(10.6. W)72 329.5 R(indo)-.198 E 2.75(wE)-.11 G(ntry/Exit Ev)-2.75 E
(ents)-.11 E F1
(This section describes the processing that occurs for the windo)72
346.4 Q 2.75(wc)-.275 G(rossing e)-2.75 E -.165(ve)-.275 G(nts).165 E F0
(EnterNotify)3.666 E F1(and)72 359.4 Q F0(Lea)3.666 E -.11(ve)-.275 G
(Notify).11 E F1 5.5(.I).916 G 2.75(fap)-5.5 G(ointer motion or a windo)
-2.75 E 2.75(wh)-.275 G(ierarch)-2.75 E 2.75(yc)-.055 G
(hange causes the pointer to be in a)-2.75 E(dif)72 372.4 Q
(ferent windo)-.275 E 2.75(wt)-.275 G(han before, the X serv)-2.75 E
(er reports)-.165 E F0(EnterNotify)3.666 E F1(or)3.666 E F0(Lea)3.666 E
-.11(ve)-.275 G(Notify).11 E F1 -2.365 -.275(ev e)3.666 H
(nts to clients).275 E(who ha)72 385.4 Q .33 -.165(ve s)-.22 H
(elected for these e).165 E -.165(ve)-.275 G 2.75(nts. All).165 F F0
(EnterNotify)3.666 E F1(and)3.666 E F0(Lea)3.666 E -.11(ve)-.275 G
(Notify).11 E F1 -2.365 -.275(ev e)3.666 H(nts caused by a hierar).275 E
(-)-.22 E(ch)72 398.4 Q 2.75(yc)-.055 G(hange are generated after an)
-2.75 E 2.75(yh)-.165 G(ierarch)-2.75 E 2.75(ye)-.055 G -.165(ve)-3.025
G(nt \().165 E F0(UnmapNotify).916 E F1(,).916 E F0(MapNotify)3.666 E F1
(,).916 E F0(Con\214gur)3.666 E(eNo-)-.198 E(tify)72 411.4 Q F1(,).916 E
F0(Gra)3.666 E(vityNotify)-.275 E F1(,).916 E F0(Cir)3.666 E
(culateNotify)-.198 E F1 2.75(\)c).916 G(aused by that change; ho)-2.75
E(we)-.275 E -.165(ve)-.275 G .88 -.44(r, t).165 H
(he X protocol does not).44 E(constrain the ordering of)72 424.4 Q F0
(EnterNotify)3.666 E F1(and)3.666 E F0(Lea)3.666 E -.11(ve)-.275 G
(Notify).11 E F1 -2.365 -.275(ev e)3.666 H(nts with respect to).275 E F0
-.275(Fo)3.666 G(cusOut).275 E F1(,).916 E F0 -.407(Vi)3.666 G(si-).407
E(bilityNotify)72 437.4 Q F1 2.75(,a).916 G(nd)-2.75 E F0(Expose)3.666 E
F1 -2.365 -.275(ev e)3.666 H(nts.).275 E(This contrasts with)72 454.3 Q
F0(MotionNotify)3.666 E F1 -2.365 -.275(ev e)3.666 H
(nts, which are also generated when the pointer mo).275 E -.165(ve)-.165
G 2.75(sb).165 G(ut)-2.97 E(only when the pointer motion be)72 467.3 Q
(gins and ends in a single windo)-.165 E 4.18 -.715(w. A)-.275 H(n).715
E F0(EnterNotify)3.666 E F1(or)3.666 E F0(Lea)3.666 E -.11(ve)-.275 G
(No-).11 E(tify)72 480.3 Q F1 -2.365 -.275(ev e)3.666 H
(nt also can be generated when some client application calls).275 E F0
(XGrabP)3.666 E(ointer)-.22 E F1(and)3.666 E F0(XUn-)3.666 E(grabP)72
493.3 Q(ointer)-.22 E F1(.).916 E 1.76 -.88(To r)72 510.2 T(ecei).88 E
-.165(ve)-.275 G F0(EnterNotify)3.831 E F1(or)3.666 E F0(Lea)3.666 E
-.11(ve)-.275 G(Notify).11 E F1 -2.365 -.275(ev e)3.666 H(nts, set the)
.275 E F0(EnterW)3.666 E(indo)-.198 E(wMask)-.11 E F1(or)3.666 E F0(Lea)
3.666 E -.11(ve)-.275 G -.198(Wi).11 G(ndo).198 E(w-)-.11 E(Mask)72
523.2 Q F1(bits of the e)3.666 E -.165(ve)-.275 G(nt-mask attrib).165 E
(ute of the windo)-.22 E -.715(w.)-.275 G(The structure for these e)72
540.1 Q -.165(ve)-.275 G(nt types contains:).165 E F0(207)279.75 769 Q 0
Cg EP
%%Page: 208 213
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E .44 LW 36 76.75 36 87.75 DL 36 74.75
36 85.75 DL 41.5 73 36 73 DL 43.5 73 38 73 DL 49 73 43.5 73 DL/F1 11
/Times-Roman@0 SF(typedef struct {)72 91.5 Q(int type;)108 104.5 Q
(/* EnterNotify or Lea)143.634 E -.165(ve)-.22 G(Notify */).165 E
(unsigned long serial;)108 117.5 Q
(/* # of last request processed by serv)88.337 E(er */)-.165 E
(Bool send_e)108 130.5 Q -.165(ve)-.275 G 100.998(nt; /*).165 F
(true if this came from a SendEv)2.75 E(ent request */)-.165 E
(Display *display;)108 143.5 Q(/* Display the e)102.692 E -.165(ve)-.275
G(nt w).165 E(as read from */)-.11 E -.44(Wi)108 156.5 S(ndo).44 E 2.75
(ww)-.275 G(indo)-2.75 E 99.106(w; /*)-.275 F -.814(``)2.75 G -2.365
-.275(ev e).814 H(nt').275 E 2.75('w)-.814 G(indo)-2.75 E 2.75(wr)-.275
G(eported relati)-2.75 E .33 -.165(ve t)-.275 H 2.75(o*).165 G(/)-2.75 E
-.44(Wi)108 169.5 S(ndo).44 E 2.75(wr)-.275 G 116.552(oot; /*)-2.75 F
(root windo)2.75 E 2.75(wt)-.275 G(hat the e)-2.75 E -.165(ve)-.275 G
(nt occurred on */).165 E -.44(Wi)108 182.5 S(ndo).44 E 2.75(ws)-.275 G
(ubwindo)-2.75 E 83.827(w; /*)-.275 F(child windo)2.75 E 2.75(w*)-.275 G
(/)-2.75 E -.385(Ti)108 195.5 S(me time;).385 E(/* milliseconds */)
131.798 E(int x, y;)108 208.5 Q(/* pointer x, y coordinates in e)146.076
E -.165(ve)-.275 G(nt windo).165 E 2.75(w*)-.275 G(/)-2.75 E
(int x_root, y_root;)108 221.5 Q(/* coordinates relati)99.634 E .33
-.165(ve t)-.275 H 2.75(or).165 G(oot */)-2.75 E(int mode;)108 234.5 Q
(/* NotifyNormal, NotifyGrab, NotifyUngrab */)138.134 E(int detail;)108
247.5 Q(/*)288 260.5 Q 2.75(*N)288 273.5 S(otifyAncestor)-2.75 E 2.75
(,N)-.44 G(otifyV)-2.75 E(irtual, NotifyInferior)-.66 E(,)-.44 E 2.75
(*N)288 286.5 S(otifyNonlinear)-2.75 E(,NotifyNonlinearV)-.44 E(irtual)
-.66 E(*/)288 299.5 Q(Bool same_screen;)108 312.5 Q
(/* same screen \215ag */)96.598 E(Bool focus;)108 325.5 Q
(/* boolean focus */)128.971 E(unsigned int state;)108 338.5 Q(/* k)
99.942 E .33 -.165(ey o)-.11 H 2.75(rb).165 G(utton mask */)-2.97 E 2.75
(}X)72 351.5 S(CrossingEv)-2.75 E(ent;)-.165 E(typedef XCrossingEv)72
364.5 Q(ent XEnterW)-.165 E(indo)-.44 E(wEv)-.275 E(ent;)-.165 E
(typedef XCrossingEv)72 377.5 Q(ent XLea)-.165 E -.165(ve)-.22 G -.44
(Wi).165 G(ndo).44 E(wEv)-.275 E(ent;)-.165 E 36 379.65 36 390.65 DL 36
377.65 36 388.65 DL 41.5 388.9 36 388.9 DL 43.5 388.9 38 388.9 DL 49
388.9 43.5 388.9 DL(The windo)72 413.9 Q 2.75(wm)-.275 G
(ember is set to the windo)-2.75 E 2.75(wo)-.275 G 2.75(nw)-2.75 G
(hich the)-2.75 E F0(EnterNotify)3.666 E F1(or)3.666 E F0(Lea)3.666 E
-.11(ve)-.275 G(Notify).11 E F1 -2.365 -.275(ev e)3.666 H(nt w).275 E
(as)-.11 E(generated and is referred to as the e)72 426.9 Q -.165(ve)
-.275 G(nt windo).165 E 4.18 -.715(w. T)-.275 H(his is the windo).715 E
2.75(wu)-.275 G(sed by the X serv)-2.75 E(er to)-.165 E(report the e)72
439.9 Q -.165(ve)-.275 G(nt, and is relati).165 E .33 -.165(ve t)-.275 H
2.75(ot).165 G(he root windo)-2.75 E 2.75(wo)-.275 G 2.75(nw)-2.75 G
(hich the e)-2.75 E -.165(ve)-.275 G(nt occurred.).165 E(The root mem-)
5.5 E(ber is set to the root windo)72 452.9 Q 2.75(wo)-.275 G 2.75(ft)
-2.75 G(he screen on which the e)-2.75 E -.165(ve)-.275 G(nt occurred.)
.165 E -.165(Fo)72 469.8 S 2.75(ra).165 G F0(Lea).916 E -.11(ve)-.275 G
(Notify).11 E F1 -2.365 -.275(ev e)3.666 H(nt, if a child of the e).275
E -.165(ve)-.275 G(nt windo).165 E 2.75(wc)-.275 G
(ontains the initial position of the)-2.75 E(pointer)72 482.8 Q 2.75(,t)
-.44 G(he subwindo)-2.75 E 2.75(wc)-.275 G
(omponent is set to that child.)-2.75 E(Otherwise, the X serv)5.5 E
(er sets the subwin-)-.165 E(do)72 495.8 Q 2.75(wm)-.275 G(ember to)
-2.75 E F0(None)3.666 E F1 5.5(.F).916 G(or an)-5.665 E F0(EnterNotify)
3.666 E F1 -2.365 -.275(ev e)3.666 H(nt, if a child of the e).275 E
-.165(ve)-.275 G(nt windo).165 E 2.75(wc)-.275 G(ontains the)-2.75 E
(\214nal pointer position, the subwindo)72 508.8 Q 2.75(wc)-.275 G
(omponent is set to that child or)-2.75 E F0(None)3.666 E F1(.).916 E
(The time member is set to the time when the e)72 525.7 Q -.165(ve)-.275
G(nt w).165 E(as generated and is e)-.11 E(xpressed in millisec-)-.165 E
2.75(onds. The)72 538.7 R 2.75(xa)2.75 G(nd y members are set to the co\
ordinates of the pointer position in the e)-2.75 E -.165(ve)-.275 G
(nt windo).165 E -.715(w.)-.275 G(This position is al)72 551.7 Q -.11
(wa)-.11 G(ys the pointer').11 E 2.75<738c>-.605 G
(nal position, not its initial position.)-2.75 E(If the e)5.5 E -.165
(ve)-.275 G(nt windo).165 E 2.75(wi)-.275 G(s)-2.75 E
(on the same screen as the root windo)72 564.7 Q 1.43 -.715(w, x a)-.275
H(nd y are the pointer coordinates relati).715 E .33 -.165(ve t)-.275 H
2.75(ot).165 G(he e)-2.75 E -.165(ve)-.275 G(nt).165 E(windo)72 577.7 Q
(w')-.275 E 2.75(so)-.605 G 2.75(rigin. Otherwise,)-2.75 F 2.75(xa)2.75
G(nd y are set to zero.)-2.75 E
(The x_root and y_root members are set to)5.5 E(the pointer')72 590.7 Q
2.75(sc)-.605 G(oordinates relati)-2.75 E .33 -.165(ve t)-.275 H 2.75
(ot).165 G(he root windo)-2.75 E(w')-.275 E 2.75(so)-.605 G
(rigin at the time of the e)-2.75 E -.165(ve)-.275 G(nt.).165 E
(The same_screen member is set to indicate whether the e)72 607.6 Q
-.165(ve)-.275 G(nt windo).165 E 2.75(wi)-.275 G 2.75(so)-2.75 G 2.75
(nt)-2.75 G(he same screen as the)-2.75 E(root windo)72 620.6 Q 2.75(wa)
-.275 G(nd can be either)-2.75 E F0 -.814(Tr)3.666 G(ue).814 E F1(or)
3.666 E F0 -.275(Fa)3.666 G(lse).275 E F1 5.5(.I).916 G(f)-5.5 E F0
-.814(Tr)3.666 G(ue).814 E F1 2.75(,t).916 G(he e)-2.75 E -.165(ve)-.275
G(nt and root windo).165 E(ws are on the)-.275 E(same screen.)72 633.6 Q
(If)5.5 E F0 -.275(Fa)3.666 G(lse).275 E F1 2.75(,t).916 G(he e)-2.75 E
-.165(ve)-.275 G(nt and root windo).165 E
(ws are not on the same screen.)-.275 E
(The focus member is set to indicate whether the e)72 650.5 Q -.165(ve)
-.275 G(nt windo).165 E 2.75(wi)-.275 G 2.75(st)-2.75 G(he focus windo)
-2.75 E 2.75(wo)-.275 G 2.75(ra)-2.75 G 2.75(ni)-2.75 G(nferior)-2.75 E
(of the focus windo)72 663.5 Q 4.18 -.715(w. T)-.275 H(he X serv).715 E
(er can set this member to either)-.165 E F0 -.814(Tr)3.666 G(ue).814 E
F1(or)3.666 E F0 -.275(Fa)3.666 G(lse).275 E F1 5.5(.I).916 G(f)-5.5 E
F0 -.814(Tr)3.666 G(ue).814 E F1 2.75(,t).916 G(he)-2.75 E -2.365 -.275
(ev e)72 676.5 T(nt windo).275 E 2.75(wi)-.275 G 2.75(st)-2.75 G
(he focus windo)-2.75 E 2.75(wo)-.275 G 2.75(ra)-2.75 G 2.75(ni)-2.75 G
(nferior of the focus windo)-2.75 E 4.18 -.715(w. I)-.275 H(f).715 E F0
-.275(Fa)3.666 G(lse).275 E F1 2.75(,t).916 G(he e)-2.75 E -.165(ve)
-.275 G(nt win-).165 E(do)72 689.5 Q 2.75(wi)-.275 G 2.75(sn)-2.75 G
(ot the focus windo)-2.75 E 2.75(wo)-.275 G 2.75(ra)-2.75 G 2.75(ni)
-2.75 G(nferior of the focus windo)-2.75 E -.715(w.)-.275 G
(The state member is set to indicate the state of the pointer b)72 706.4
Q(uttons and modi\214er k)-.22 E -.165(ey)-.11 G 2.75(sj).165 G
(ust prior to)-2.75 E(the e)72 719.4 Q -.165(ve)-.275 G 2.75(nt. The)
.165 F 2.75(Xs)2.75 G(erv)-2.75 E
(er can set this member to the bitwise inclusi)-.165 E .33 -.165(ve O)
-.275 H 2.75(Ro).165 G 2.75(fo)-2.75 G(ne or more of the)-2.75 E -.22
(bu)72 732.4 S(tton or modi\214er k).22 E .33 -.165(ey m)-.11 H(asks:)
.165 E F0(Button1Mask)3.666 E F1(,).916 E F0(Button2Mask)3.666 E F1(,)
.916 E F0(Button3Mask)3.666 E F1(,).916 E F0(Button4Mask)3.666 E F1(,)
.916 E F0(208)279.75 769 Q 0 Cg EP
%%Page: 209 214
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E(Button5Mask)72.916 85 Q/F1 11
/Times-Roman@0 SF(,).916 E F0(ShiftMask)3.666 E F1(,).916 E F0(LockMask)
3.666 E F1(,).916 E F0(Contr)3.666 E(olMask)-.198 E F1(,).916 E F0
(Mod1Mask)3.666 E F1(,).916 E F0(Mod2Mask)3.666 E F1(,).916 E F0
(Mod3Mask)72.916 98 Q F1(,).916 E F0(Mod4Mask)3.666 E F1(,).916 E F0
(Mod5Mask)3.666 E F1(.).916 E
(The mode member is set to indicate whether the e)72 114.9 Q -.165(ve)
-.275 G(nts are normal e).165 E -.165(ve)-.275 G(nts, pseudo-motion e)
.165 E -.165(ve)-.275 G(nts).165 E(when a grab acti)72 127.9 Q -.275(va)
-.275 G(tes, or pseudo-motion e).275 E -.165(ve)-.275 G
(nts when a grab deacti).165 E -.275(va)-.275 G 2.75(tes. The).275 F
2.75(Xs)2.75 G(erv)-2.75 E(er can set)-.165 E(this member to)72 140.9 Q
F0(NotifyNormal)3.666 E F1(,).916 E F0(NotifyGrab)3.666 E F1 2.75(,o)
.916 G(r)-2.75 E F0(NotifyUngrab)3.666 E F1(.).916 E
(The detail member is set to indicate the notify detail and can be)72
157.8 Q F0(NotifyAncestor)3.666 E F1(,).916 E F0(NotifyV)3.666 E(irtual)
-.407 E F1(,).916 E F0(NotifyInferior)72.916 170.8 Q F1(,).916 E F0
(NotifyNonlinear)3.666 E F1 2.75(,o).916 G(r)-2.75 E F0
(NotifyNonlinearV)3.666 E(irtual)-.407 E F1(.).916 E F0 2.75
(10.6.1. Normal)72 196.8 R(Entry/Exit Ev)2.75 E(ents)-.11 E(EnterNotify)
72.916 213.7 Q F1(and)3.666 E F0(Lea)3.666 E -.11(ve)-.275 G(Notify).11
E F1 -2.365 -.275(ev e)3.666 H(nts are generated when the pointer mo)
.275 E -.165(ve)-.165 G 2.75(sf).165 G(rom one windo)-2.75 E 2.75(wt)
-.275 G(o)-2.75 E(another windo)72 226.7 Q 4.18 -.715(w. N)-.275 H
(ormal e).715 E -.165(ve)-.275 G(nts are identi\214ed by).165 E F0
(XEnterW)3.666 E(indo)-.198 E(wEv)-.11 E(ent)-.11 E F1(or)3.666 E F0
(XLea)3.666 E -.11(ve)-.275 G -.198(Wi).11 G(ndo).198 E(w-)-.11 E(Ev)72
239.7 Q(ent)-.11 E F1(structures whose mode member is set to)3.666 E F0
(NotifyNormal)3.666 E F1(.).916 E 23.65<8357>72 256.6 S
(hen the pointer mo)-23.65 E -.165(ve)-.165 G 2.75(sf).165 G(rom windo)
-2.75 E 2.75(wAt)-.275 G 2.75(ow)-2.75 G(indo)-2.75 E 2.75(wBa)-.275 G
(nd A is an inferior of B, the X)-2.75 E(serv)99.5 269.6 Q
(er does the follo)-.165 E(wing:)-.275 E 21.296<ad49>99.5 286.5 S 2.75
(tg)-21.296 G(enerates a)-2.75 E F0(Lea)3.666 E -.11(ve)-.275 G(Notify)
.11 E F1 -2.365 -.275(ev e)3.666 H(nt on windo).275 E 2.75(wA)-.275 G
2.75(,w)-2.75 G(ith the detail member of the)-2.75 E F0(XLea)127.916
299.5 Q -.11(ve)-.275 G -.198(Wi).11 G(ndo).198 E(wEv)-.11 E(ent)-.11 E
F1(structure set to)3.666 E F0(NotifyAncestor)3.666 E F1(.).916 E 21.296
<ad49>99.5 316.4 S 2.75(tg)-21.296 G(enerates a)-2.75 E F0(Lea)3.666 E
-.11(ve)-.275 G(Notify).11 E F1 -2.365 -.275(ev e)3.666 H
(nt on each windo).275 E 2.75(wb)-.275 G(etween windo)-2.75 E 2.75(wAa)
-.275 G(nd windo)-2.75 E(w)-.275 E(B, e)127 329.4 Q(xclusi)-.165 E -.165
(ve)-.275 G 2.75(,w).165 G(ith the detail member of each)-2.75 E F0
(XLea)3.666 E -.11(ve)-.275 G -.198(Wi).11 G(ndo).198 E(wEv)-.11 E(ent)
-.11 E F1(structure set to)3.666 E F0(NotifyV)127.916 342.4 Q(irtual)
-.407 E F1(.).916 E 21.296<ad49>99.5 359.3 S 2.75(tg)-21.296 G
(enerates an)-2.75 E F0(EnterNotify)3.666 E F1 -2.365 -.275(ev e)3.666 H
(nt on windo).275 E 2.75(wB)-.275 G 2.75(,w)-2.75 G
(ith the detail member of the)-2.75 E F0(XEn-)3.666 E(terW)127 372.3 Q
(indo)-.198 E(wEv)-.11 E(ent)-.11 E F1(structure set to)3.666 E F0
(NotifyInferior)3.666 E F1(.).916 E 23.65<8357>72 389.2 S
(hen the pointer mo)-23.65 E -.165(ve)-.165 G 2.75(sf).165 G(rom windo)
-2.75 E 2.75(wAt)-.275 G 2.75(ow)-2.75 G(indo)-2.75 E 2.75(wBa)-.275 G
(nd B is an inferior of A, the X)-2.75 E(serv)99.5 402.2 Q
(er does the follo)-.165 E(wing:)-.275 E 21.296<ad49>99.5 419.1 S 2.75
(tg)-21.296 G(enerates a)-2.75 E F0(Lea)3.666 E -.11(ve)-.275 G(Notify)
.11 E F1 -2.365 -.275(ev e)3.666 H(nt on windo).275 E 2.75(wA)-.275 G
2.75(,w)-2.75 G(ith the detail member of the)-2.75 E F0(XLea)127.916
432.1 Q -.11(ve)-.275 G -.198(Wi).11 G(ndo).198 E(wEv)-.11 E(ent)-.11 E
F1(structure set to)3.666 E F0(NotifyInferior)3.666 E F1(.).916 E 21.296
<ad49>99.5 449 S 2.75(tg)-21.296 G(enerates an)-2.75 E F0(EnterNotify)
3.666 E F1 -2.365 -.275(ev e)3.666 H(nt on each windo).275 E 2.75(wb)
-.275 G(etween windo)-2.75 E 2.75(wAa)-.275 G(nd windo)-2.75 E(w)-.275 E
(B, e)127 462 Q(xclusi)-.165 E -.165(ve)-.275 G 2.75(,w).165 G
(ith the detail member of each)-2.75 E F0(XEnterW)3.666 E(indo)-.198 E
(wEv)-.11 E(ent)-.11 E F1(structure set to)3.666 E F0(NotifyV)127.916
475 Q(irtual)-.407 E F1(.).916 E 21.296<ad49>99.5 491.9 S 2.75(tg)
-21.296 G(enerates an)-2.75 E F0(EnterNotify)3.666 E F1 -2.365 -.275
(ev e)3.666 H(nt on windo).275 E 2.75(wB)-.275 G 2.75(,w)-2.75 G
(ith the detail member of the)-2.75 E F0(XEn-)3.666 E(terW)127 504.9 Q
(indo)-.198 E(wEv)-.11 E(ent)-.11 E F1(structure set to)3.666 E F0
(NotifyAncestor)3.666 E F1(.).916 E 23.65<8357>72 521.8 S
(hen the pointer mo)-23.65 E -.165(ve)-.165 G 2.75(sf).165 G(rom windo)
-2.75 E 2.75(wAt)-.275 G 2.75(ow)-2.75 G(indo)-2.75 E 2.75(wBa)-.275 G
(nd windo)-2.75 E 2.75(wCi)-.275 G 2.75(st)-2.75 G(heir least common)
-2.75 E(ancestor)99.5 534.8 Q 2.75(,t)-.44 G(he X serv)-2.75 E
(er does the follo)-.165 E(wing:)-.275 E 21.296<ad49>99.5 551.7 S 2.75
(tg)-21.296 G(enerates a)-2.75 E F0(Lea)3.666 E -.11(ve)-.275 G(Notify)
.11 E F1 -2.365 -.275(ev e)3.666 H(nt on windo).275 E 2.75(wA)-.275 G
2.75(,w)-2.75 G(ith the detail member of the)-2.75 E F0(XLea)127.916
564.7 Q -.11(ve)-.275 G -.198(Wi).11 G(ndo).198 E(wEv)-.11 E(ent)-.11 E
F1(structure set to)3.666 E F0(NotifyNonlinear)3.666 E F1(.).916 E
21.296<ad49>99.5 581.6 S 2.75(tg)-21.296 G(enerates a)-2.75 E F0(Lea)
3.666 E -.11(ve)-.275 G(Notify).11 E F1 -2.365 -.275(ev e)3.666 H
(nt on each windo).275 E 2.75(wb)-.275 G(etween windo)-2.75 E 2.75(wAa)
-.275 G(nd windo)-2.75 E(w)-.275 E(C, e)127 594.6 Q(xclusi)-.165 E -.165
(ve)-.275 G 2.75(,w).165 G(ith the detail member of each)-2.75 E F0
(XLea)3.666 E -.11(ve)-.275 G -.198(Wi).11 G(ndo).198 E(wEv)-.11 E(ent)
-.11 E F1(structure set to)3.666 E F0(NotifyNonlinearV)127.916 607.6 Q
(irtual)-.407 E F1(.).916 E 21.296<ad49>99.5 624.5 S 2.75(tg)-21.296 G
(enerates an)-2.75 E F0(EnterNotify)3.666 E F1 -2.365 -.275(ev e)3.666 H
(nt on each windo).275 E 2.75(wb)-.275 G(etween windo)-2.75 E 2.75(wCa)
-.275 G(nd windo)-2.75 E(w)-.275 E(B, e)127 637.5 Q(xclusi)-.165 E -.165
(ve)-.275 G 2.75(,w).165 G(ith the detail member of each)-2.75 E F0
(XEnterW)3.666 E(indo)-.198 E(wEv)-.11 E(ent)-.11 E F1(structure set to)
3.666 E F0(NotifyNonlinearV)127.916 650.5 Q(irtual)-.407 E F1(.).916 E
21.296<ad49>99.5 667.4 S 2.75(tg)-21.296 G(enerates an)-2.75 E F0
(EnterNotify)3.666 E F1 -2.365 -.275(ev e)3.666 H(nt on windo).275 E
2.75(wB)-.275 G 2.75(,w)-2.75 G(ith the detail member of the)-2.75 E F0
(XEn-)3.666 E(terW)127 680.4 Q(indo)-.198 E(wEv)-.11 E(ent)-.11 E F1
(structure set to)3.666 E F0(NotifyNonlinear)3.666 E F1(.).916 E 23.65
<8357>72 697.3 S(hen the pointer mo)-23.65 E -.165(ve)-.165 G 2.75(sf)
.165 G(rom windo)-2.75 E 2.75(wAt)-.275 G 2.75(ow)-2.75 G(indo)-2.75 E
2.75(wBo)-.275 G 2.75(nd)-2.75 G(if)-2.75 E(ferent screens, the X serv)
-.275 E(er)-.165 E(does the follo)99.5 710.3 Q(wing:)-.275 E F0(209)
279.75 769 Q 0 Cg EP
%%Page: 210 215
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E/F1 11/Times-Roman@0 SF 21.296<ad49>
99.5 85 S 2.75(tg)-21.296 G(enerates a)-2.75 E F0(Lea)3.666 E -.11(ve)
-.275 G(Notify).11 E F1 -2.365 -.275(ev e)3.666 H(nt on windo).275 E
2.75(wA)-.275 G 2.75(,w)-2.75 G(ith the detail member of the)-2.75 E F0
(XLea)127.916 98 Q -.11(ve)-.275 G -.198(Wi).11 G(ndo).198 E(wEv)-.11 E
(ent)-.11 E F1(structure set to)3.666 E F0(NotifyNonlinear)3.666 E F1(.)
.916 E 21.296<ad49>99.5 114.9 S 2.75(fw)-21.296 G(indo)-2.75 E 2.75(wAi)
-.275 G 2.75(sn)-2.75 G(ot a root windo)-2.75 E 1.43 -.715(w, i)-.275 H
2.75(tg).715 G(enerates a)-2.75 E F0(Lea)3.666 E -.11(ve)-.275 G(Notify)
.11 E F1 -2.365 -.275(ev e)3.666 H(nt on each windo).275 E(w)-.275 E
(abo)127 127.9 Q .33 -.165(ve w)-.165 H(indo).165 E 2.75(wAu)-.275 G
2.75(pt)-2.75 G 2.75(oa)-2.75 G
(nd including its root, with the detail member of each)-2.75 E F0(XLea)
127.916 140.9 Q -.11(ve)-.275 G -.198(Wi).11 G(ndo).198 E(wEv)-.11 E
(ent)-.11 E F1(structure set to)3.666 E F0(NotifyNonlinearV)3.666 E
(irtual)-.407 E F1(.).916 E 21.296<ad49>99.5 157.8 S 2.75(fw)-21.296 G
(indo)-2.75 E 2.75(wBi)-.275 G 2.75(sn)-2.75 G(ot a root windo)-2.75 E
1.43 -.715(w, i)-.275 H 2.75(tg).715 G(enerates an)-2.75 E F0
(EnterNotify)3.666 E F1 -2.365 -.275(ev e)3.666 H(nt on each win-).275 E
(do)127 170.8 Q 2.75(wf)-.275 G(rom windo)-2.75 E 2.75(wB)-.275 G 1.21
-.605('s r)-2.75 H(oot do).605 E(wn to b)-.275 E(ut not including windo)
-.22 E 2.75(wB)-.275 G 2.75(,w)-2.75 G(ith the detail)-2.75 E
(member of each)127 183.8 Q F0(XEnterW)3.666 E(indo)-.198 E(wEv)-.11 E
(ent)-.11 E F1(structure set to)3.666 E F0(NotifyNonlinearV)3.666 E
(irtual)-.407 E F1(.).916 E 21.296<ad49>99.5 200.7 S 2.75(tg)-21.296 G
(enerates an)-2.75 E F0(EnterNotify)3.666 E F1 -2.365 -.275(ev e)3.666 H
(nt on windo).275 E 2.75(wB)-.275 G 2.75(,w)-2.75 G
(ith the detail member of the)-2.75 E F0(XEn-)3.666 E(terW)127 213.7 Q
(indo)-.198 E(wEv)-.11 E(ent)-.11 E F1(structure set to)3.666 E F0
(NotifyNonlinear)3.666 E F1(.).916 E F0 2.75(10.6.2. Grab)72 239.7 R
(and Ungrab Entry/Exit Ev)2.75 E(ents)-.11 E F1(Pseudo-motion mode)72
256.6 Q F0(EnterNotify)3.666 E F1(and)3.666 E F0(Lea)3.666 E -.11(ve)
-.275 G(Notify).11 E F1 -2.365 -.275(ev e)3.666 H
(nts are generated when a pointer grab).275 E(acti)72 269.6 Q -.275(va)
-.275 G(tes or deacti).275 E -.275(va)-.275 G 2.75(tes. Ev).275 F
(ents in which the pointer grab acti)-.165 E -.275(va)-.275 G
(tes are identi\214ed by).275 E F0(XEnterW)3.666 E(in-)-.198 E(do)72
282.6 Q(wEv)-.11 E(ent)-.11 E F1(or)3.666 E F0(XLea)3.666 E -.11(ve)
-.275 G -.198(Wi).11 G(ndo).198 E(wEv)-.11 E(ent)-.11 E F1
(structures whose mode member is set to)3.666 E F0(NotifyGrab)3.666 E F1
(.).916 E(Ev)72 295.6 Q(ents in which the pointer grab deacti)-.165 E
-.275(va)-.275 G(tes are identi\214ed by).275 E F0(XEnterW)3.666 E(indo)
-.198 E(wEv)-.11 E(ent)-.11 E F1(or)3.666 E F0(XLea)72.916 308.6 Q -.11
(ve)-.275 G -.198(Wi).11 G(ndo).198 E(wEv)-.11 E(ent)-.11 E F1
(structures whose mode member is set to)3.666 E F0(NotifyUngrab)3.666 E
F1(\(see)3.666 E F0(XGrab-)3.666 E -.22(Po)72 321.6 S(inter).22 E F1
(\).).916 E 23.65<8357>72 338.5 S(hen a pointer grab acti)-23.65 E -.275
(va)-.275 G(tes after an).275 E 2.75(yi)-.165 G(nitial w)-2.75 E
(arp into a con\214ne_to windo)-.11 E 2.75(wa)-.275 G(nd before)-2.75 E
(generating an)99.5 351.5 Q 2.75(ya)-.165 G(ctual)-2.75 E F0(ButtonPr)
3.666 E(ess)-.198 E F1 -2.365 -.275(ev e)3.666 H(nt that acti).275 E
-.275(va)-.275 G(tes the grab, G is the grab_windo).275 E 2.75(wf)-.275
G(or)-2.75 E(the grab, and P is the windo)99.5 364.5 Q 2.75(wt)-.275 G
(he pointer is in, the X serv)-2.75 E(er does the follo)-.165 E(wing:)
-.275 E 21.296<ad49>99.5 381.4 S 2.75(tg)-21.296 G(enerates)-2.75 E F0
(EnterNotify)3.666 E F1(and)3.666 E F0(Lea)3.666 E -.11(ve)-.275 G
(Notify).11 E F1 -2.365 -.275(ev e)3.666 H
(nts \(see section 10.6.1\) with the mode).275 E(members of the)127
394.4 Q F0(XEnterW)3.666 E(indo)-.198 E(wEv)-.11 E(ent)-.11 E F1(and)
3.666 E F0(XLea)3.666 E -.11(ve)-.275 G -.198(Wi).11 G(ndo).198 E(wEv)
-.11 E(ent)-.11 E F1(structures set to)3.666 E F0(NotifyGrab)127.916
407.4 Q F1 5.5(.T).916 G(hese e)-5.5 E -.165(ve)-.275 G
(nts are generated as if the pointer were to suddenly w).165 E(arp)-.11
E(from its current position in P to some position in G.)127 420.4 Q(Ho)
5.5 E(we)-.275 E -.165(ve)-.275 G .88 -.44(r, t).165 H
(he pointer does not).44 E -.11(wa)127 433.4 S(rp, and the X serv).11 E
(er uses the pointer position as both the initial and \214nal positions)
-.165 E(for the e)127 446.4 Q -.165(ve)-.275 G(nts.).165 E 23.65<8357>72
463.3 S(hen a pointer grab deacti)-23.65 E -.275(va)-.275 G
(tes after generating an).275 E 2.75(ya)-.165 G(ctual)-2.75 E F0
(ButtonRelease)3.666 E F1 -2.365 -.275(ev e)3.666 H(nt that).275 E
(deacti)99.5 476.3 Q -.275(va)-.275 G(tes the grab, G is the grab_windo)
.275 E 2.75(wf)-.275 G(or the grab, and P is the windo)-2.75 E 2.75(wt)
-.275 G(he pointer is)-2.75 E(in, the X serv)99.5 489.3 Q
(er does the follo)-.165 E(wing:)-.275 E 21.296<ad49>99.5 506.2 S 2.75
(tg)-21.296 G(enerates)-2.75 E F0(EnterNotify)3.666 E F1(and)3.666 E F0
(Lea)3.666 E -.11(ve)-.275 G(Notify).11 E F1 -2.365 -.275(ev e)3.666 H
(nts \(see section 10.6.1\) with the mode).275 E(members of the)127
519.2 Q F0(XEnterW)3.666 E(indo)-.198 E(wEv)-.11 E(ent)-.11 E F1(and)
3.666 E F0(XLea)3.666 E -.11(ve)-.275 G -.198(Wi).11 G(ndo).198 E(wEv)
-.11 E(ent)-.11 E F1(structures set to)3.666 E F0(NotifyUngrab)127.916
532.2 Q F1 5.5(.T).916 G(hese e)-5.5 E -.165(ve)-.275 G
(nts are generated as if the pointer were to suddenly w).165 E(arp)-.11
E(from some position in G to its current position in P)127 545.2 Q 5.5
(.H)-1.221 G -.275(ow)-5.5 G -2.365 -.275(ev e).275 H .88 -.44(r, t).275
H(he pointer does not).44 E -.11(wa)127 558.2 S(rp, and the X serv).11 E
(er uses the current pointer position as both the initial and \214nal)
-.165 E(positions for the e)127 571.2 Q -.165(ve)-.275 G(nts.).165 E F0
2.75(10.7. Input)72 597.2 R -.275(Fo)2.75 G(cus Ev).275 E(ents)-.11 E F1
(This section describes the processing that occurs for the input focus \
e)72 614.1 Q -.165(ve)-.275 G(nts).165 E F0 -.275(Fo)3.666 G(cusIn).275
E F1(and)3.666 E F0 -.275(Fo)3.666 G(cu-).275 E(sOut)72 627.1 Q F1 5.5
(.T).916 G(he X serv)-5.5 E(er can report)-.165 E F0 -.275(Fo)3.666 G
(cusIn).275 E F1(or)3.666 E F0 -.275(Fo)3.666 G(cusOut).275 E F1 -2.365
-.275(ev e)3.666 H(nts to clients w).275 E(anting information)-.11 E
(about when the input focus changes.)72 640.1 Q(The k)5.5 E -.165(ey)
-.11 G(board is al).165 E -.11(wa)-.11 G(ys attached to some windo).11 E
2.75(w\()-.275 G(typically)-2.75 E(,)-.715 E(the root windo)72 653.1 Q
2.75(wo)-.275 G 2.75(rat)-2.75 G(op-le)-2.75 E -.165(ve)-.275 G 2.75(lw)
.165 G(indo)-2.75 E(w\), which is called the focus windo)-.275 E 4.18
-.715(w. T)-.275 H(he focus windo).715 E(w)-.275 E
(and the position of the pointer determine the windo)72 666.1 Q 2.75(wt)
-.275 G(hat recei)-2.75 E -.165(ve)-.275 G 2.75(sk).165 G -.165(ey)-2.86
G(board input.).165 E(Clients may)5.5 E(need to kno)72 679.1 Q 2.75(ww)
-.275 G(hen the input focus changes to control highlighting of areas on\
 the screen.)-2.75 E 1.76 -.88(To r)72 696 T(ecei).88 E -.165(ve)-.275 G
F0 -.275(Fo)3.831 G(cusIn).275 E F1(or)3.666 E F0 -.275(Fo)3.666 G
(cusOut).275 E F1 -2.365 -.275(ev e)3.666 H(nts, set the).275 E F0 -.275
(Fo)3.666 G(cusChangeMask).275 E F1(bit in the e)3.666 E -.165(ve)-.275
G(nt-mask).165 E(attrib)72 709 Q(ute of the windo)-.22 E -.715(w.)-.275
G F0(210)279.75 769 Q 0 Cg EP
%%Page: 211 216
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E/F1 11/Times-Roman@0 SF
(The structure for these e)72 85 Q -.165(ve)-.275 G(nt types contains:)
.165 E .44 LW 36 106.65 36 117.65 DL 36 104.65 36 115.65 DL 41.5 102.9
36 102.9 DL 43.5 102.9 38 102.9 DL 49 102.9 43.5 102.9 DL
(typedef struct {)72 121.4 Q(int type;)108 134.4 Q(/* F)143.634 E
(ocusIn or F)-.165 E(ocusOut */)-.165 E(unsigned long serial;)108 147.4
Q(/* # of last request processed by serv)88.337 E(er */)-.165 E
(Bool send_e)108 160.4 Q -.165(ve)-.275 G 100.998(nt; /*).165 F
(true if this came from a SendEv)2.75 E(ent request */)-.165 E
(Display *display;)108 173.4 Q(/* Display the e)102.692 E -.165(ve)-.275
G(nt w).165 E(as read from */)-.11 E -.44(Wi)108 186.4 S(ndo).44 E 2.75
(ww)-.275 G(indo)-2.75 E 99.106(w; /*)-.275 F(windo)2.75 E 2.75(wo)-.275
G 2.75(fe)-2.75 G -.165(ve)-3.025 G(nt */).165 E(int mode;)108 199.4 Q
(/* NotifyNormal, NotifyGrab, NotifyUngrab */)138.134 E(int detail;)108
212.4 Q(/*)288 225.4 Q 2.75(*N)288 238.4 S(otifyAncestor)-2.75 E 2.75
(,N)-.44 G(otifyV)-2.75 E(irtual, NotifyInferior)-.66 E(,)-.44 E 2.75
(*N)288 251.4 S(otifyNonlinear)-2.75 E(,NotifyNonlinearV)-.44 E
(irtual, NotifyPointer)-.66 E(,)-.44 E 2.75(*N)288 264.4 S
(otifyPointerRoot, NotifyDetailNone)-2.75 E(*/)288 277.4 Q 2.75(}X)72
290.4 S -.165(Fo)-2.75 G(cusChangeEv).165 E(ent;)-.165 E(typedef XF)72
303.4 Q(ocusChangeEv)-.165 E(ent XF)-.165 E(ocusInEv)-.165 E(ent;)-.165
E(typedef XF)72 316.4 Q(ocusChangeEv)-.165 E(ent XF)-.165 E(ocusOutEv)
-.165 E(ent;)-.165 E 36 318.55 36 329.55 DL 36 316.55 36 327.55 DL 41.5
327.8 36 327.8 DL 43.5 327.8 38 327.8 DL 49 327.8 43.5 327.8 DL
(The windo)72 352.8 Q 2.75(wm)-.275 G(ember is set to the windo)-2.75 E
2.75(wo)-.275 G 2.75(nw)-2.75 G(hich the)-2.75 E F0 -.275(Fo)3.666 G
(cusIn).275 E F1(or)3.666 E F0 -.275(Fo)3.666 G(cusOut).275 E F1 -2.365
-.275(ev e)3.666 H(nt w).275 E(as gener)-.11 E(-)-.22 E 2.75(ated. This)
72 365.8 R(is the windo)2.75 E 2.75(wu)-.275 G(sed by the X serv)-2.75 E
(er to report the e)-.165 E -.165(ve)-.275 G 2.75(nt. The).165 F
(mode member is set to)2.75 E(indicate whether the focus e)72 378.8 Q
-.165(ve)-.275 G(nts are normal focus e).165 E -.165(ve)-.275 G
(nts, focus e).165 E -.165(ve)-.275 G(nts while grabbed, focus).165 E
-2.365 -.275(ev e)72 391.8 T(nts when a grab acti).275 E -.275(va)-.275
G(tes, or focus e).275 E -.165(ve)-.275 G(nts when a grab deacti).165 E
-.275(va)-.275 G 2.75(tes. The).275 F 2.75(Xs)2.75 G(erv)-2.75 E
(er can set the)-.165 E(mode member to)72 404.8 Q F0(NotifyNormal)3.666
E F1(,).916 E F0(NotifyWhileGrab)3.666 E(bed)-.11 E F1(,).916 E F0
(NotifyGrab)3.666 E F1 2.75(,o).916 G(r)-2.75 E F0(NotifyUngrab)3.666 E
F1(.).916 E(All)72 421.7 Q F0 -.275(Fo)3.666 G(cusOut).275 E F1 -2.365
-.275(ev e)3.666 H(nts caused by a windo).275 E 2.75(wu)-.275 G
(nmap are generated after an)-2.75 E(y)-.165 E F0(UnmapNotify)3.666 E F1
-2.365 -.275(ev e)3.666 H(nt;).275 E(ho)72 434.7 Q(we)-.275 E -.165(ve)
-.275 G .88 -.44(r, t).165 H
(he X protocol does not constrain the ordering of).44 E F0 -.275(Fo)
3.666 G(cusOut).275 E F1 -2.365 -.275(ev e)3.666 H
(nts with respect to gen-).275 E(erated)72 447.7 Q F0(EnterNotify)3.666
E F1(,).916 E F0(Lea)3.666 E -.11(ve)-.275 G(Notify).11 E F1(,).916 E F0
-.407(Vi)3.666 G(sibilityNotify).407 E F1 2.75(,a).916 G(nd)-2.75 E F0
(Expose)3.666 E F1 -2.365 -.275(ev e)3.666 H(nts.).275 E
(Depending on the e)72 464.6 Q -.165(ve)-.275 G(nt mode, the detail mem\
ber is set to indicate the notify detail and can be).165 E F0
(NotifyAncestor)72.916 477.6 Q F1(,).916 E F0(NotifyV)3.666 E(irtual)
-.407 E F1(,).916 E F0(NotifyInferior)3.666 E F1(,).916 E F0
(NotifyNonlinear)3.666 E F1(,).916 E F0(NotifyNonlinearV)3.666 E(irtual)
-.407 E F1(,).916 E F0(NotifyP)72.916 490.6 Q(ointer)-.22 E F1(,).916 E
F0(NotifyP)3.666 E(ointerRoot)-.22 E F1 2.75(,o).916 G(r)-2.75 E F0
(NotifyDetailNone)3.666 E F1(.).916 E F0 2.75(10.7.1. Normal)72 516.6 R
-.275(Fo)2.75 G(cus Ev).275 E(ents and F)-.11 E(ocus Ev)-.275 E
(ents While Grab)-.11 E(bed)-.11 E F1(Normal focus e)72 533.5 Q -.165
(ve)-.275 G(nts are identi\214ed by).165 E F0(XF)3.666 E(ocusInEv)-.275
E(ent)-.11 E F1(or)3.666 E F0(XF)3.666 E(ocusOutEv)-.275 E(ent)-.11 E F1
(structures whose)3.666 E(mode member is set to)72 546.5 Q F0
(NotifyNormal)3.666 E F1 5.5(.F).916 G(ocus e)-5.665 E -.165(ve)-.275 G
(nts while grabbed are identi\214ed by).165 E F0(XF)3.666 E(ocusIn-)
-.275 E(Ev)72 559.5 Q(ent)-.11 E F1(or)3.666 E F0(XF)3.666 E(ocusOutEv)
-.275 E(ent)-.11 E F1(structures whose mode member is set to)3.666 E F0
(NotifyWhileGrab)3.666 E(bed)-.11 E F1(.).916 E(The X serv)72 572.5 Q
(er processes normal focus and focus e)-.165 E -.165(ve)-.275 G
(nts while grabbed according to the follo).165 E(wing:)-.275 E 23.65
<8357>72 589.4 S(hen the focus mo)-23.65 E -.165(ve)-.165 G 2.75(sf).165
G(rom windo)-2.75 E 2.75(wAt)-.275 G 2.75(ow)-2.75 G(indo)-2.75 E 2.75
(wB)-.275 G 2.75(,Ai)-2.75 G 2.75(sa)-2.75 G 2.75(ni)-2.75 G
(nferior of B, and the pointer)-2.75 E(is in windo)99.5 602.4 Q 2.75(wP)
-.275 G 2.75(,t)-3.971 G(he X serv)-2.75 E(er does the follo)-.165 E
(wing:)-.275 E 21.296<ad49>99.5 619.3 S 2.75(tg)-21.296 G(enerates a)
-2.75 E F0 -.275(Fo)3.666 G(cusOut).275 E F1 -2.365 -.275(ev e)3.666 H
(nt on windo).275 E 2.75(wA)-.275 G 2.75(,w)-2.75 G
(ith the detail member of the)-2.75 E F0(XF)3.666 E(ocu-)-.275 E(sOutEv)
127 632.3 Q(ent)-.11 E F1(structure set to)3.666 E F0(NotifyAncestor)
3.666 E F1(.).916 E 21.296<ad49>99.5 649.2 S 2.75(tg)-21.296 G
(enerates a)-2.75 E F0 -.275(Fo)3.666 G(cusOut).275 E F1 -2.365 -.275
(ev e)3.666 H(nt on each windo).275 E 2.75(wb)-.275 G(etween windo)-2.75
E 2.75(wAa)-.275 G(nd windo)-2.75 E 2.75(wB)-.275 G(,)-2.75 E -.165(ex)
127 662.2 S(clusi).165 E -.165(ve)-.275 G 2.75(,w).165 G
(ith the detail member of each)-2.75 E F0(XF)3.666 E(ocusOutEv)-.275 E
(ent)-.11 E F1(structure set to)3.666 E F0(Noti-)3.666 E(fyV)127 675.2 Q
(irtual)-.407 E F1(.).916 E 21.296<ad49>99.5 692.1 S 2.75(tg)-21.296 G
(enerates a)-2.75 E F0 -.275(Fo)3.666 G(cusIn).275 E F1 -2.365 -.275
(ev e)3.666 H(nt on windo).275 E 2.75(wB)-.275 G 2.75(,w)-2.75 G
(ith the detail member of the)-2.75 E F0(XF)3.666 E(ocu-)-.275 E(sOutEv)
127 705.1 Q(ent)-.11 E F1(structure set to)3.666 E F0(NotifyInferior)
3.666 E F1(.).916 E F0(211)279.75 769 Q 0 Cg EP
%%Page: 212 217
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E/F1 11/Times-Roman@0 SF 21.296<ad49>
99.5 85 S 2.75(fw)-21.296 G(indo)-2.75 E 2.75(wPi)-.275 G 2.75(sa)-2.75
G 2.75(ni)-2.75 G(nferior of windo)-2.75 E 2.75(wBb)-.275 G(ut windo)
-2.97 E 2.75(wPi)-.275 G 2.75(sn)-2.75 G(ot windo)-2.75 E 2.75(wAo)-.275
G 2.75(ra)-2.75 G 2.75(ni)-2.75 G(nferior)-2.75 E(or ancestor of windo)
127 98 Q 2.75(wA)-.275 G 2.75(,i)-2.75 G 2.75(tg)-2.75 G(enerates a)
-2.75 E F0 -.275(Fo)3.666 G(cusIn).275 E F1 -2.365 -.275(ev e)3.666 H
(nt on each windo).275 E 2.75(wb)-.275 G(elo)-2.75 E 2.75(ww)-.275 G
(in-)-2.75 E(do)127 111 Q 2.75(wB)-.275 G 2.75(,d)-2.75 G -.275(ow)-2.75
G 2.75(nt).275 G 2.75(oa)-2.75 G(nd including windo)-2.75 E 2.75(wP)
-.275 G 2.75(,w)-3.971 G(ith the detail member of each)-2.75 E F0(XF)
3.666 E(ocusIn-)-.275 E(Ev)127 124 Q(ent)-.11 E F1(structure set to)
3.666 E F0(NotifyP)3.666 E(ointer)-.22 E F1(.).916 E 23.65<8357>72 140.9
S(hen the focus mo)-23.65 E -.165(ve)-.165 G 2.75(sf).165 G(rom windo)
-2.75 E 2.75(wAt)-.275 G 2.75(ow)-2.75 G(indo)-2.75 E 2.75(wB)-.275 G
2.75(,Bi)-2.75 G 2.75(sa)-2.75 G 2.75(ni)-2.75 G
(nferior of A, and the pointer)-2.75 E(is in windo)99.5 153.9 Q 2.75(wP)
-.275 G 2.75(,t)-3.971 G(he X serv)-2.75 E(er does the follo)-.165 E
(wing:)-.275 E 21.296<ad49>99.5 170.8 S 2.75(fw)-21.296 G(indo)-2.75 E
2.75(wPi)-.275 G 2.75(sa)-2.75 G 2.75(ni)-2.75 G(nferior of windo)-2.75
E 2.75(wAb)-.275 G(ut P is not an inferior of windo)-2.97 E 2.75(wBo)
-.275 G 2.75(ra)-2.75 G(n)-2.75 E(ancestor of B, it generates a)127
183.8 Q F0 -.275(Fo)3.666 G(cusOut).275 E F1 -2.365 -.275(ev e)3.666 H
(nt on each windo).275 E 2.75(wf)-.275 G(rom windo)-2.75 E 2.75(wPu)
-.275 G 2.75(pt)-2.75 G(o)-2.75 E -.22(bu)127 196.8 S 2.75(tn).22 G
(ot including windo)-2.75 E 2.75(wA)-.275 G 2.75(,w)-2.75 G
(ith the detail member of each)-2.75 E F0(XF)3.666 E(ocusOutEv)-.275 E
(ent)-.11 E F1(structure set to)127 209.8 Q F0(NotifyP)3.666 E(ointer)
-.22 E F1(.).916 E 21.296<ad49>99.5 226.7 S 2.75(tg)-21.296 G
(enerates a)-2.75 E F0 -.275(Fo)3.666 G(cusOut).275 E F1 -2.365 -.275
(ev e)3.666 H(nt on windo).275 E 2.75(wA)-.275 G 2.75(,w)-2.75 G
(ith the detail member of the)-2.75 E F0(XF)3.666 E(ocu-)-.275 E(sOutEv)
127 239.7 Q(ent)-.11 E F1(structure set to)3.666 E F0(NotifyInferior)
3.666 E F1(.).916 E 21.296<ad49>99.5 256.6 S 2.75(tg)-21.296 G
(enerates a)-2.75 E F0 -.275(Fo)3.666 G(cusIn).275 E F1 -2.365 -.275
(ev e)3.666 H(nt on each windo).275 E 2.75(wb)-.275 G(etween windo)-2.75
E 2.75(wAa)-.275 G(nd windo)-2.75 E 2.75(wB)-.275 G(,)-2.75 E -.165(ex)
127 269.6 S(clusi).165 E -.165(ve)-.275 G 2.75(,w).165 G
(ith the detail member of each)-2.75 E F0(XF)3.666 E(ocusInEv)-.275 E
(ent)-.11 E F1(structure set to)3.666 E F0(Noti-)3.666 E(fyV)127 282.6 Q
(irtual)-.407 E F1(.).916 E 21.296<ad49>99.5 299.5 S 2.75(tg)-21.296 G
(enerates a)-2.75 E F0 -.275(Fo)3.666 G(cusIn).275 E F1 -2.365 -.275
(ev e)3.666 H(nt on windo).275 E 2.75(wB)-.275 G 2.75(,w)-2.75 G
(ith the detail member of the)-2.75 E F0(XF)3.666 E(ocusIn-)-.275 E(Ev)
127 312.5 Q(ent)-.11 E F1(structure set to)3.666 E F0(NotifyAncestor)
3.666 E F1(.).916 E 23.65<8357>72 329.4 S(hen the focus mo)-23.65 E
-.165(ve)-.165 G 2.75(sf).165 G(rom windo)-2.75 E 2.75(wAt)-.275 G 2.75
(ow)-2.75 G(indo)-2.75 E 2.75(wB)-.275 G 2.75(,w)-2.75 G(indo)-2.75 E
2.75(wCi)-.275 G 2.75(st)-2.75 G(heir least common)-2.75 E(ancestor)99.5
342.4 Q 2.75(,a)-.44 G(nd the pointer is in windo)-2.75 E 2.75(wP)-.275
G 2.75(,t)-3.971 G(he X serv)-2.75 E(er does the follo)-.165 E(wing:)
-.275 E 21.296<ad49>99.5 359.3 S 2.75(fw)-21.296 G(indo)-2.75 E 2.75
(wPi)-.275 G 2.75(sa)-2.75 G 2.75(ni)-2.75 G(nferior of windo)-2.75 E
2.75(wA)-.275 G 2.75(,i)-2.75 G 2.75(tg)-2.75 G(enerates a)-2.75 E F0
-.275(Fo)3.666 G(cusOut).275 E F1 -2.365 -.275(ev e)3.666 H
(nt on each win-).275 E(do)127 372.3 Q 2.75(wf)-.275 G(rom windo)-2.75 E
2.75(wPu)-.275 G 2.75(pt)-2.75 G 2.75(ob)-2.75 G(ut not including windo)
-2.97 E 2.75(wA)-.275 G 2.75(,w)-2.75 G(ith the detail member of the)
-2.75 E F0(XF)127.916 385.3 Q(ocusOutEv)-.275 E(ent)-.11 E F1
(structure set to)3.666 E F0(NotifyP)3.666 E(ointer)-.22 E F1(.).916 E
21.296<ad49>99.5 402.2 S 2.75(tg)-21.296 G(enerates a)-2.75 E F0 -.275
(Fo)3.666 G(cusOut).275 E F1 -2.365 -.275(ev e)3.666 H(nt on windo).275
E 2.75(wA)-.275 G 2.75(,w)-2.75 G(ith the detail member of the)-2.75 E
F0(XF)3.666 E(ocu-)-.275 E(sOutEv)127 415.2 Q(ent)-.11 E F1
(structure set to)3.666 E F0(NotifyNonlinear)3.666 E F1(.).916 E 21.296
<ad49>99.5 432.1 S 2.75(tg)-21.296 G(enerates a)-2.75 E F0 -.275(Fo)
3.666 G(cusOut).275 E F1 -2.365 -.275(ev e)3.666 H(nt on each windo).275
E 2.75(wb)-.275 G(etween windo)-2.75 E 2.75(wAa)-.275 G(nd windo)-2.75 E
2.75(wC)-.275 G(,)-2.75 E -.165(ex)127 445.1 S(clusi).165 E -.165(ve)
-.275 G 2.75(,w).165 G(ith the detail member of each)-2.75 E F0(XF)3.666
E(ocusOutEv)-.275 E(ent)-.11 E F1(structure set to)3.666 E F0(Noti-)
3.666 E(fyNonlinearV)127 458.1 Q(irtual)-.407 E F1(.).916 E 21.296<ad49>
99.5 475 S 2.75(tg)-21.296 G(enerates a)-2.75 E F0 -.275(Fo)3.666 G
(cusIn).275 E F1 -2.365 -.275(ev e)3.666 H(nt on each windo).275 E 2.75
(wb)-.275 G(etween C and B, e)-2.75 E(xclusi)-.165 E -.165(ve)-.275 G
2.75(,w).165 G(ith the)-2.75 E(detail member of each)127 488 Q F0(XF)
3.666 E(ocusInEv)-.275 E(ent)-.11 E F1(structure set to)3.666 E F0
(NotifyNonlinearV)3.666 E(irtual)-.407 E F1(.).916 E 21.296<ad49>99.5
504.9 S 2.75(tg)-21.296 G(enerates a)-2.75 E F0 -.275(Fo)3.666 G(cusIn)
.275 E F1 -2.365 -.275(ev e)3.666 H(nt on windo).275 E 2.75(wB)-.275 G
2.75(,w)-2.75 G(ith the detail member of the)-2.75 E F0(XF)3.666 E
(ocusIn-)-.275 E(Ev)127 517.9 Q(ent)-.11 E F1(structure set to)3.666 E
F0(NotifyNonlinear)3.666 E F1(.).916 E 21.296<ad49>99.5 534.8 S 2.75(fw)
-21.296 G(indo)-2.75 E 2.75(wPi)-.275 G 2.75(sa)-2.75 G 2.75(ni)-2.75 G
(nferior of windo)-2.75 E 2.75(wB)-.275 G 2.75(,i)-2.75 G 2.75(tg)-2.75
G(enerates a)-2.75 E F0 -.275(Fo)3.666 G(cusIn).275 E F1 -2.365 -.275
(ev e)3.666 H(nt on each win-).275 E(do)127 547.8 Q 2.75(wb)-.275 G(elo)
-2.75 E 2.75(ww)-.275 G(indo)-2.75 E 2.75(wBd)-.275 G -.275(ow)-2.75 G
2.75(nt).275 G 2.75(oa)-2.75 G(nd including windo)-2.75 E 2.75(wP)-.275
G 2.75(,w)-3.971 G(ith the detail member of)-2.75 E(the)127 560.8 Q F0
(XF)3.666 E(ocusInEv)-.275 E(ent)-.11 E F1(structure set to)3.666 E F0
(NotifyP)3.666 E(ointer)-.22 E F1(.).916 E 23.65<8357>72 577.7 S
(hen the focus mo)-23.65 E -.165(ve)-.165 G 2.75(sf).165 G(rom windo)
-2.75 E 2.75(wAt)-.275 G 2.75(ow)-2.75 G(indo)-2.75 E 2.75(wBo)-.275 G
2.75(nd)-2.75 G(if)-2.75 E(ferent screens and the pointer is)-.275 E
(in windo)99.5 590.7 Q 2.75(wP)-.275 G 2.75(,t)-3.971 G(he X serv)-2.75
E(er does the follo)-.165 E(wing:)-.275 E 21.296<ad49>99.5 607.6 S 2.75
(fw)-21.296 G(indo)-2.75 E 2.75(wPi)-.275 G 2.75(sa)-2.75 G 2.75(ni)
-2.75 G(nferior of windo)-2.75 E 2.75(wA)-.275 G 2.75(,i)-2.75 G 2.75
(tg)-2.75 G(enerates a)-2.75 E F0 -.275(Fo)3.666 G(cusOut).275 E F1
-2.365 -.275(ev e)3.666 H(nt on each win-).275 E(do)127 620.6 Q 2.75(wf)
-.275 G(rom windo)-2.75 E 2.75(wPu)-.275 G 2.75(pt)-2.75 G 2.75(ob)-2.75
G(ut not including windo)-2.97 E 2.75(wA)-.275 G 2.75(,w)-2.75 G
(ith the detail member of)-2.75 E(each)127 633.6 Q F0(XF)3.666 E
(ocusOutEv)-.275 E(ent)-.11 E F1(structure set to)3.666 E F0(NotifyP)
3.666 E(ointer)-.22 E F1(.).916 E 21.296<ad49>99.5 650.5 S 2.75(tg)
-21.296 G(enerates a)-2.75 E F0 -.275(Fo)3.666 G(cusOut).275 E F1 -2.365
-.275(ev e)3.666 H(nt on windo).275 E 2.75(wA)-.275 G 2.75(,w)-2.75 G
(ith the detail member of the)-2.75 E F0(XF)3.666 E(ocu-)-.275 E(sOutEv)
127 663.5 Q(ent)-.11 E F1(structure set to)3.666 E F0(NotifyNonlinear)
3.666 E F1(.).916 E 21.296<ad49>99.5 680.4 S 2.75(fw)-21.296 G(indo)
-2.75 E 2.75(wAi)-.275 G 2.75(sn)-2.75 G(ot a root windo)-2.75 E 1.43
-.715(w, i)-.275 H 2.75(tg).715 G(enerates a)-2.75 E F0 -.275(Fo)3.666 G
(cusOut).275 E F1 -2.365 -.275(ev e)3.666 H(nt on each windo).275 E(w)
-.275 E(abo)127 693.4 Q .33 -.165(ve w)-.165 H(indo).165 E 2.75(wAu)
-.275 G 2.75(pt)-2.75 G 2.75(oa)-2.75 G
(nd including its root, with the detail member of each)-2.75 E F0(XF)
3.666 E(ocu-)-.275 E(sOutEv)127 706.4 Q(ent)-.11 E F1(structure set to)
3.666 E F0(NotifyNonlinearV)3.666 E(irtual)-.407 E F1(.).916 E F0(212)
279.75 769 Q 0 Cg EP
%%Page: 213 218
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E/F1 11/Times-Roman@0 SF 21.296<ad49>
99.5 85 S 2.75(fw)-21.296 G(indo)-2.75 E 2.75(wBi)-.275 G 2.75(sn)-2.75
G(ot a root windo)-2.75 E 1.43 -.715(w, i)-.275 H 2.75(tg).715 G
(enerates a)-2.75 E F0 -.275(Fo)3.666 G(cusIn).275 E F1 -2.365 -.275
(ev e)3.666 H(nt on each windo).275 E(w)-.275 E(from windo)127 98 Q 2.75
(wB)-.275 G 1.21 -.605('s r)-2.75 H(oot do).605 E(wn to b)-.275 E
(ut not including windo)-.22 E 2.75(wB)-.275 G 2.75(,w)-2.75 G
(ith the detail member)-2.75 E(of each)127 111 Q F0(XF)3.666 E(ocusInEv)
-.275 E(ent)-.11 E F1(structure set to)3.666 E F0(NotifyNonlinearV)3.666
E(irtual)-.407 E F1(.).916 E 21.296<ad49>99.5 127.9 S 2.75(tg)-21.296 G
(enerates a)-2.75 E F0 -.275(Fo)3.666 G(cusIn).275 E F1 -2.365 -.275
(ev e)3.666 H(nt on windo).275 E 2.75(wB)-.275 G 2.75(,w)-2.75 G
(ith the detail member of each)-2.75 E F0(XF)3.666 E(o-)-.275 E(cusInEv)
127 140.9 Q(ent)-.11 E F1(structure set to)3.666 E F0(NotifyNonlinear)
3.666 E F1(.).916 E 21.296<ad49>99.5 157.8 S 2.75(fw)-21.296 G(indo)
-2.75 E 2.75(wPi)-.275 G 2.75(sa)-2.75 G 2.75(ni)-2.75 G
(nferior of windo)-2.75 E 2.75(wB)-.275 G 2.75(,i)-2.75 G 2.75(tg)-2.75
G(enerates a)-2.75 E F0 -.275(Fo)3.666 G(cusIn).275 E F1 -2.365 -.275
(ev e)3.666 H(nt on each win-).275 E(do)127 170.8 Q 2.75(wb)-.275 G(elo)
-2.75 E 2.75(ww)-.275 G(indo)-2.75 E 2.75(wBd)-.275 G -.275(ow)-2.75 G
2.75(nt).275 G 2.75(oa)-2.75 G(nd including windo)-2.75 E 2.75(wP)-.275
G 2.75(,w)-3.971 G(ith the detail member of)-2.75 E(each)127 183.8 Q F0
(XF)3.666 E(ocusInEv)-.275 E(ent)-.11 E F1(structure set to)3.666 E F0
(NotifyP)3.666 E(ointer)-.22 E F1(.).916 E 23.65<8357>72 200.7 S
(hen the focus mo)-23.65 E -.165(ve)-.165 G 2.75(sf).165 G(rom windo)
-2.75 E 2.75(wAt)-.275 G(o)-2.75 E F0 -.22(Po)3.666 G(interRoot).22 E F1
(\(e)3.666 E -.165(ve)-.275 G(nts sent to the windo).165 E 2.75(wu)-.275
G(nder)-2.75 E(the pointer\) or)99.5 213.7 Q F0(None)3.666 E F1
(\(discard\), and the pointer is in windo)3.666 E 2.75(wP)-.275 G 2.75
(,t)-3.971 G(he X serv)-2.75 E(er does the fol-)-.165 E(lo)99.5 226.7 Q
(wing:)-.275 E 21.296<ad49>99.5 243.6 S 2.75(fw)-21.296 G(indo)-2.75 E
2.75(wPi)-.275 G 2.75(sa)-2.75 G 2.75(ni)-2.75 G(nferior of windo)-2.75
E 2.75(wA)-.275 G 2.75(,i)-2.75 G 2.75(tg)-2.75 G(enerates a)-2.75 E F0
-.275(Fo)3.666 G(cusOut).275 E F1 -2.365 -.275(ev e)3.666 H
(nt on each win-).275 E(do)127 256.6 Q 2.75(wf)-.275 G(rom windo)-2.75 E
2.75(wPu)-.275 G 2.75(pt)-2.75 G 2.75(ob)-2.75 G(ut not including windo)
-2.97 E 2.75(wA)-.275 G 2.75(,w)-2.75 G(ith the detail member of)-2.75 E
(each)127 269.6 Q F0(XF)3.666 E(ocusOutEv)-.275 E(ent)-.11 E F1
(structure set to)3.666 E F0(NotifyP)3.666 E(ointer)-.22 E F1(.).916 E
21.296<ad49>99.5 286.5 S 2.75(tg)-21.296 G(enerates a)-2.75 E F0 -.275
(Fo)3.666 G(cusOut).275 E F1 -2.365 -.275(ev e)3.666 H(nt on windo).275
E 2.75(wA)-.275 G 2.75(,w)-2.75 G(ith the detail member of the)-2.75 E
F0(XF)3.666 E(ocu-)-.275 E(sOutEv)127 299.5 Q(ent)-.11 E F1
(structure set to)3.666 E F0(NotifyNonlinear)3.666 E F1(.).916 E 21.296
<ad49>99.5 316.4 S 2.75(fw)-21.296 G(indo)-2.75 E 2.75(wAi)-.275 G 2.75
(sn)-2.75 G(ot a root windo)-2.75 E 1.43 -.715(w, i)-.275 H 2.75(tg).715
G(enerates a)-2.75 E F0 -.275(Fo)3.666 G(cusOut).275 E F1 -2.365 -.275
(ev e)3.666 H(nt on each windo).275 E(w)-.275 E(abo)127 329.4 Q .33
-.165(ve w)-.165 H(indo).165 E 2.75(wAu)-.275 G 2.75(pt)-2.75 G 2.75(oa)
-2.75 G(nd including its root, with the detail member of each)-2.75 E F0
(XF)3.666 E(ocu-)-.275 E(sOutEv)127 342.4 Q(ent)-.11 E F1
(structure set to)3.666 E F0(NotifyNonlinearV)3.666 E(irtual)-.407 E F1
(.).916 E 21.296<ad49>99.5 359.3 S 2.75(tg)-21.296 G(enerates a)-2.75 E
F0 -.275(Fo)3.666 G(cusIn).275 E F1 -2.365 -.275(ev e)3.666 H
(nt on the root windo).275 E 2.75(wo)-.275 G 2.75(fa)-2.75 G
(ll screens, with the detail mem-)-2.75 E(ber of each)127 372.3 Q F0(XF)
3.666 E(ocusInEv)-.275 E(ent)-.11 E F1(structure set to)3.666 E F0
(NotifyP)3.666 E(ointerRoot)-.22 E F1(\(or)3.666 E F0(NotifyDetail-)
3.666 E(None)127 385.3 Q F1(\).).916 E 21.296<ad49>99.5 402.2 S 2.75(ft)
-21.296 G(he ne)-2.75 E 2.75(wf)-.275 G(ocus is)-2.75 E F0 -.22(Po)3.666
G(interRoot).22 E F1 2.75(,i).916 G 2.75(tg)-2.75 G(enerates a)-2.75 E
F0 -.275(Fo)3.666 G(cusIn).275 E F1 -2.365 -.275(ev e)3.666 H
(nt on each windo).275 E 2.75(wf)-.275 G(rom)-2.75 E(windo)127 415.2 Q
2.75(wP)-.275 G 1.21 -.605('s r)-2.75 H(oot do).605 E
(wn to and including windo)-.275 E 2.75(wP)-.275 G 2.75(,w)-3.971 G
(ith the detail member of each)-2.75 E F0(XF)127.916 428.2 Q(ocusInEv)
-.275 E(ent)-.11 E F1(structure set to)3.666 E F0(NotifyP)3.666 E
(ointer)-.22 E F1(.).916 E 23.65<8357>72 445.1 S(hen the focus mo)-23.65
E -.165(ve)-.165 G 2.75(sf).165 G(rom)-2.75 E F0 -.22(Po)3.666 G
(interRoot).22 E F1(\(e)3.666 E -.165(ve)-.275 G(nts sent to the windo)
.165 E 2.75(wu)-.275 G(nder the pointer\) or)-2.75 E F0(None)100.416
458.1 Q F1(to windo)3.666 E 2.75(wA)-.275 G 2.75(,a)-2.75 G
(nd the pointer is in windo)-2.75 E 2.75(wP)-.275 G 2.75(,t)-3.971 G
(he X serv)-2.75 E(er does the follo)-.165 E(wing:)-.275 E 21.296<ad49>
99.5 475 S 2.75(ft)-21.296 G(he old focus is)-2.75 E F0 -.22(Po)3.666 G
(interRoot).22 E F1 2.75(,i).916 G 2.75(tg)-2.75 G(enerates a)-2.75 E F0
-.275(Fo)3.666 G(cusOut).275 E F1 -2.365 -.275(ev e)3.666 H
(nt on each windo).275 E(w)-.275 E(from windo)127 488 Q 2.75(wPu)-.275 G
2.75(pt)-2.75 G 2.75(oa)-2.75 G(nd including windo)-2.75 E 2.75(wP)-.275
G 1.21 -.605('s r)-2.75 H(oot, with the detail member of each).605 E F0
(XF)127.916 501 Q(ocusOutEv)-.275 E(ent)-.11 E F1(structure set to)3.666
E F0(NotifyP)3.666 E(ointer)-.22 E F1(.).916 E 21.296<ad49>99.5 517.9 S
2.75(tg)-21.296 G(enerates a)-2.75 E F0 -.275(Fo)3.666 G(cusOut).275 E
F1 -2.365 -.275(ev e)3.666 H(nt on all root windo).275 E
(ws, with the detail member of each)-.275 E F0(XF)127.916 530.9 Q
(ocusOutEv)-.275 E(ent)-.11 E F1(structure set to)3.666 E F0(NotifyP)
3.666 E(ointerRoot)-.22 E F1(\(or)3.666 E F0(NotifyDetailNone)3.666 E F1
(\).).916 E 21.296<ad49>99.5 547.8 S 2.75(fw)-21.296 G(indo)-2.75 E 2.75
(wAi)-.275 G 2.75(sn)-2.75 G(ot a root windo)-2.75 E 1.43 -.715(w, i)
-.275 H 2.75(tg).715 G(enerates a)-2.75 E F0 -.275(Fo)3.666 G(cusIn).275
E F1 -2.365 -.275(ev e)3.666 H(nt on each windo).275 E(w)-.275 E
(from windo)127 560.8 Q 2.75(wA)-.275 G 1.21 -.605('s r)-3.971 H(oot do)
.605 E(wn to b)-.275 E(ut not including windo)-.22 E 2.75(wA)-.275 G
2.75(,w)-2.75 G(ith the detail member)-2.75 E(of each)127 573.8 Q F0(XF)
3.666 E(ocusInEv)-.275 E(ent)-.11 E F1(structure set to)3.666 E F0
(NotifyNonlinearV)3.666 E(irtual)-.407 E F1(.).916 E 21.296<ad49>99.5
590.7 S 2.75(tg)-21.296 G(enerates a)-2.75 E F0 -.275(Fo)3.666 G(cusIn)
.275 E F1 -2.365 -.275(ev e)3.666 H(nt on windo).275 E 2.75(wA)-.275 G
2.75(,w)-2.75 G(ith the detail member of the)-2.75 E F0(XF)3.666 E(o-)
-.275 E(cusInEv)127 603.7 Q(ent)-.11 E F1(structure set to)3.666 E F0
(NotifyNonlinear)3.666 E F1(.).916 E 21.296<ad49>99.5 620.6 S 2.75(fw)
-21.296 G(indo)-2.75 E 2.75(wPi)-.275 G 2.75(sa)-2.75 G 2.75(ni)-2.75 G
(nferior of windo)-2.75 E 2.75(wA)-.275 G 2.75(,i)-2.75 G 2.75(tg)-2.75
G(enerates a)-2.75 E F0 -.275(Fo)3.666 G(cusIn).275 E F1 -2.365 -.275
(ev e)3.666 H(nt on each win-).275 E(do)127 633.6 Q 2.75(wb)-.275 G(elo)
-2.75 E 2.75(ww)-.275 G(indo)-2.75 E 2.75(wAd)-.275 G -.275(ow)-2.75 G
2.75(nt).275 G 2.75(oa)-2.75 G(nd including windo)-2.75 E 2.75(wP)-.275
G 2.75(,w)-3.971 G(ith the detail member of)-2.75 E(each)127 646.6 Q F0
(XF)3.666 E(ocusInEv)-.275 E(ent)-.11 E F1(structure set to)3.666 E F0
(NotifyP)3.666 E(ointer)-.22 E F1(.).916 E 23.65<8357>72 663.5 S
(hen the focus mo)-23.65 E -.165(ve)-.165 G 2.75(sf).165 G(rom)-2.75 E
F0 -.22(Po)3.666 G(interRoot).22 E F1(\(e)3.666 E -.165(ve)-.275 G
(nts sent to the windo).165 E 2.75(wu)-.275 G(nder the pointer\) to)
-2.75 E F0(None)100.416 676.5 Q F1(\(or vice v)3.666 E
(ersa\), and the pointer is in windo)-.165 E 2.75(wP)-.275 G 2.75(,t)
-3.971 G(he X serv)-2.75 E(er does the follo)-.165 E(wing:)-.275 E
21.296<ad49>99.5 693.4 S 2.75(ft)-21.296 G(he old focus is)-2.75 E F0
-.22(Po)3.666 G(interRoot).22 E F1 2.75(,i).916 G 2.75(tg)-2.75 G
(enerates a)-2.75 E F0 -.275(Fo)3.666 G(cusOut).275 E F1 -2.365 -.275
(ev e)3.666 H(nt on each windo).275 E(w)-.275 E(from windo)127 706.4 Q
2.75(wPu)-.275 G 2.75(pt)-2.75 G 2.75(oa)-2.75 G(nd including windo)
-2.75 E 2.75(wP)-.275 G 1.21 -.605('s r)-2.75 H
(oot, with the detail member of each).605 E F0(XF)127.916 719.4 Q
(ocusOutEv)-.275 E(ent)-.11 E F1(structure set to)3.666 E F0(NotifyP)
3.666 E(ointer)-.22 E F1(.).916 E F0(213)279.75 769 Q 0 Cg EP
%%Page: 214 219
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E/F1 11/Times-Roman@0 SF 21.296<ad49>
99.5 85 S 2.75(tg)-21.296 G(enerates a)-2.75 E F0 -.275(Fo)3.666 G
(cusOut).275 E F1 -2.365 -.275(ev e)3.666 H(nt on all root windo).275 E
(ws, with the detail member of each)-.275 E F0(XF)127.916 98 Q
(ocusOutEv)-.275 E(ent)-.11 E F1(structure set to either)3.666 E F0
(NotifyP)3.666 E(ointerRoot)-.22 E F1(or)3.666 E F0(NotifyDetailNone)
3.666 E F1(.).916 E 21.296<ad49>99.5 114.9 S 2.75(tg)-21.296 G
(enerates a)-2.75 E F0 -.275(Fo)3.666 G(cusIn).275 E F1 -2.365 -.275
(ev e)3.666 H(nt on all root windo).275 E
(ws, with the detail member of each)-.275 E F0(XF)127.916 127.9 Q
(ocusInEv)-.275 E(ent)-.11 E F1(structure set to)3.666 E F0
(NotifyDetailNone)3.666 E F1(or)3.666 E F0(NotifyP)3.666 E(ointerRoot)
-.22 E F1(.).916 E 21.296<ad49>99.5 144.8 S 2.75(ft)-21.296 G(he ne)
-2.75 E 2.75(wf)-.275 G(ocus is)-2.75 E F0 -.22(Po)3.666 G(interRoot).22
E F1 2.75(,i).916 G 2.75(tg)-2.75 G(enerates a)-2.75 E F0 -.275(Fo)3.666
G(cusIn).275 E F1 -2.365 -.275(ev e)3.666 H(nt on each windo).275 E 2.75
(wf)-.275 G(rom)-2.75 E(windo)127 157.8 Q 2.75(wP)-.275 G 1.21 -.605
('s r)-2.75 H(oot do).605 E(wn to and including windo)-.275 E 2.75(wP)
-.275 G 2.75(,w)-3.971 G(ith the detail member of each)-2.75 E F0(XF)
127.916 170.8 Q(ocusInEv)-.275 E(ent)-.11 E F1(structure set to)3.666 E
F0(NotifyP)3.666 E(ointer)-.22 E F1(.).916 E F0 2.75(10.7.2. F)72 196.8
R(ocus Ev)-.275 E(ents Generated by Grabs)-.11 E F1 -.165(Fo)72 213.7 S
(cus e).165 E -.165(ve)-.275 G(nts in which the k).165 E -.165(ey)-.11 G
(board grab acti).165 E -.275(va)-.275 G(tes are identi\214ed by).275 E
F0(XF)3.666 E(ocusInEv)-.275 E(ent)-.11 E F1(or)3.666 E F0(XF)3.666 E
(ocu-)-.275 E(sOutEv)72 226.7 Q(ent)-.11 E F1
(structures whose mode member is set to)3.666 E F0(NotifyGrab)3.666 E F1
5.5(.F).916 G(ocus e)-5.665 E -.165(ve)-.275 G(nts in which the).165 E
-.11(ke)72 239.7 S(yboard grab deacti)-.055 E -.275(va)-.275 G
(tes are identi\214ed by).275 E F0(XF)3.666 E(ocusInEv)-.275 E(ent)-.11
E F1(or)3.666 E F0(XF)3.666 E(ocusOutEv)-.275 E(ent)-.11 E F1
(structures)3.666 E(whose mode member is set to)72 252.7 Q F0
(NotifyUngrab)3.666 E F1(\(see)3.666 E F0(XGrabK)3.666 E(eyboard)-.275 E
F1(\).).916 E 23.65<8357>72 269.6 S(hen a k)-23.65 E -.165(ey)-.11 G
(board grab acti).165 E -.275(va)-.275 G(tes before generating an).275 E
2.75(ya)-.165 G(ctual)-2.75 E F0 -.275(Ke)3.666 G(yPr).275 E(ess)-.198 E
F1 -2.365 -.275(ev e)3.666 H(nt that acti).275 E -.275(va)-.275 G(tes)
.275 E(the grab, G is the grab_windo)99.5 282.6 Q 1.43 -.715(w, a)-.275
H(nd F is the current focus, the X serv).715 E(er does the follo)-.165 E
(wing:)-.275 E 21.296<ad49>99.5 299.5 S 2.75(tg)-21.296 G(enerates)-2.75
E F0 -.275(Fo)3.666 G(cusIn).275 E F1(and)3.666 E F0 -.275(Fo)3.666 G
(cusOut).275 E F1 -2.365 -.275(ev e)3.666 H
(nts, with the mode members of the).275 E F0(XF)3.666 E(o-)-.275 E
(cusInEv)127 312.5 Q(ent)-.11 E F1(and)3.666 E F0(XF)3.666 E(ocusOutEv)
-.275 E(ent)-.11 E F1(structures set to)3.666 E F0(NotifyGrab)3.666 E F1
5.5(.T).916 G(hese e)-5.5 E -.165(ve)-.275 G(nts are).165 E
(generated as if the focus were to change from F to G.)127 325.5 Q 23.65
<8357>72 342.4 S(hen a k)-23.65 E -.165(ey)-.11 G(board grab deacti).165
E -.275(va)-.275 G(tes after generating an).275 E 2.75(ya)-.165 G(ctual)
-2.75 E F0 -.275(Ke)3.666 G(yRelease).275 E F1 -2.365 -.275(ev e)3.666 H
(nt that deac-).275 E(ti)99.5 355.4 Q -.275(va)-.275 G
(tes the grab, G is the grab_windo).275 E 1.43 -.715(w, a)-.275 H
(nd F is the current focus, the X serv).715 E(er does the fol-)-.165 E
(lo)99.5 368.4 Q(wing:)-.275 E 21.296<ad49>99.5 385.3 S 2.75(tg)-21.296
G(enerates)-2.75 E F0 -.275(Fo)3.666 G(cusIn).275 E F1(and)3.666 E F0
-.275(Fo)3.666 G(cusOut).275 E F1 -2.365 -.275(ev e)3.666 H
(nts, with the mode members of the).275 E F0(XF)3.666 E(o-)-.275 E
(cusInEv)127 398.3 Q(ent)-.11 E F1(and)3.666 E F0(XF)3.666 E(ocusOutEv)
-.275 E(ent)-.11 E F1(structures set to)3.666 E F0(NotifyUngrab)3.666 E
F1 5.5(.T).916 G(hese e)-5.5 E -.165(ve)-.275 G(nts).165 E
(are generated as if the focus were to change from G to F)127 411.3 Q(.)
-.88 E F0 2.75(10.8. K)72 437.3 R(ey Map State Noti\214cation Ev)-.275 E
(ents)-.11 E F1(The X serv)72 454.2 Q(er can report)-.165 E F0 -.275(Ke)
3.666 G(ymapNotify).275 E F1 -2.365 -.275(ev e)3.666 H
(nts to clients that w).275 E(ant information about changes in)-.11 E
(their k)72 467.2 Q -.165(ey)-.11 G(board state.).165 E 1.76 -.88(To r)
72 484.1 T(ecei).88 E -.165(ve)-.275 G F0 -.275(Ke)3.831 G(ymapNotify)
.275 E F1 -2.365 -.275(ev e)3.666 H(nts, set the).275 E F0 -.275(Ke)
3.666 G(ymapStateMask).275 E F1(bit in the e)3.666 E -.165(ve)-.275 G
(nt-mask attrib).165 E(ute of)-.22 E(the windo)72 497.1 Q 4.18 -.715
(w. T)-.275 H(he X serv).715 E(er generates this e)-.165 E -.165(ve)
-.275 G(nt immediately after e).165 E -.165(ve)-.275 G(ry).165 E F0
(EnterNotify)3.666 E F1(and)3.666 E F0 -.275(Fo)72.916 510.1 S(cusIn)
.275 E F1 -2.365 -.275(ev e)3.666 H(nt.).275 E(The structure for this e)
72 527 Q -.165(ve)-.275 G(nt type contains:).165 E .44 LW 36 548.65 36
559.65 DL 36 546.65 36 557.65 DL 41.5 544.9 36 544.9 DL 43.5 544.9 38
544.9 DL 49 544.9 43.5 544.9 DL(/* generated on EnterW)72 563.4 Q(indo)
-.44 E 2.75(wa)-.275 G(nd F)-2.75 E(ocusIn when K)-.165 E -.165(ey)-.275
G(mapState selected */).165 E(typedef struct {)72 576.4 Q(int type;)108
589.4 Q(/* K)143.634 E -.165(ey)-.275 G(mapNotify */).165 E
(unsigned long serial;)108 602.4 Q
(/* # of last request processed by serv)88.337 E(er */)-.165 E
(Bool send_e)108 615.4 Q -.165(ve)-.275 G 100.998(nt; /*).165 F
(true if this came from a SendEv)2.75 E(ent request */)-.165 E
(Display *display;)108 628.4 Q(/* Display the e)102.692 E -.165(ve)-.275
G(nt w).165 E(as read from */)-.11 E -.44(Wi)108 641.4 S(ndo).44 E 2.75
(ww)-.275 G(indo)-2.75 E(w;)-.275 E(char k)108 654.4 Q -.165(ey)-.11 G
(_v).165 E(ector[32];)-.165 E 2.75(}X)72 667.4 S -2.365 -.275(Ke y)-2.75
H(mapEv).275 E(ent;)-.165 E 36 669.55 36 680.55 DL 36 667.55 36 678.55
DL 41.5 678.8 36 678.8 DL 43.5 678.8 38 678.8 DL 49 678.8 43.5 678.8 DL
(The windo)72 703.8 Q 2.75(wm)-.275 G(ember is not used b)-2.75 E
(ut is present to aid some toolkits.)-.22 E(The k)5.5 E -.165(ey)-.11 G
(_v).165 E(ector member is)-.165 E(set to the bit v)72 716.8 Q
(ector of the k)-.165 E -.165(ey)-.11 G 2.75(board. Each).165 F
(bit set to 1 indicates that the corresponding k)2.75 E .33 -.165(ey i)
-.11 H 2.75(sc).165 G(ur)-2.75 E(-)-.22 E(rently pressed.)72 729.8 Q
(The v)5.5 E(ector is represented as 32 bytes.)-.165 E
(Byte N \(from 0\) contains the bits for k)5.5 E -.165(ey)-.11 G(s).165
E F0(214)279.75 769 Q 0 Cg EP
%%Page: 215 220
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E/F1 11/Times-Roman@0 SF(8N to 8N + 7 w\
ith the least signi\214cant bit in the byte representing k)72 85 Q .33
-.165(ey 8)-.11 H(N.).165 E F0 2.75(10.9. Exposur)72 111 R 2.75(eE)-.198
G -.11(ve)-2.75 G(nts).11 E F1
(The X protocol does not guarantee to preserv)72 127.9 Q 2.75(et)-.165 G
(he contents of windo)-2.75 E 2.75(wr)-.275 G -.165(eg)-2.75 G
(ions when the windo).165 E(ws)-.275 E(are obscured or recon\214gured.)
72 140.9 Q(Some implementations may preserv)5.5 E 2.75(et)-.165 G
(he contents of windo)-2.75 E(ws.)-.275 E
(Other implementations are free to destro)72 153.9 Q 2.75(yt)-.11 G
(he contents of windo)-2.75 E(ws when e)-.275 E 2.75(xposed. X)-.165 F
-.165(ex)2.75 G(pects).165 E(client applications to assume the responsi\
bility for restoring the contents of an e)72 166.9 Q(xposed windo)-.165
E(w)-.275 E(re)72 179.9 Q 2.75(gion. \(An)-.165 F -.165(ex)2.75 G
(posed windo).165 E 2.75(wr)-.275 G -.165(eg)-2.75 G
(ion describes a formerly obscured windo).165 E 2.75(ww)-.275 G(hose re)
-2.75 E(gion)-.165 E(becomes visible.\))72 192.9 Q
(Therefore, the X serv)5.5 E(er sends)-.165 E F0(Expose)3.666 E F1
-2.365 -.275(ev e)3.666 H(nts describing the windo).275 E 2.75(wa)-.275
G(nd the)-2.75 E(re)72 205.9 Q(gion of the windo)-.165 E 2.75(wt)-.275 G
(hat has been e)-2.75 E 2.75(xposed. A)-.165 F(nai)2.75 E .33 -.165
(ve c)-.275 H(lient application usually redra).165 E(ws the entire)-.165
E(windo)72 218.9 Q 4.18 -.715(w. A)-.275 H
(more sophisticated client application redra)3.465 E(ws only the e)-.165
E(xposed re)-.165 E(gion.)-.165 E F0 2.75(10.9.1. Expose)72 244.9 R(Ev)
2.75 E(ents)-.11 E F1(The X serv)72 261.8 Q(er can report)-.165 E F0
(Expose)3.666 E F1 -2.365 -.275(ev e)3.666 H(nts to clients w).275 E
(anting information about when the contents of)-.11 E(windo)72 274.8 Q
2.75(wr)-.275 G -.165(eg)-2.75 G(ions ha).165 E .33 -.165(ve b)-.22 H
(een lost.).165 E(The circumstances in which the X serv)5.5 E
(er generates)-.165 E F0(Expose)3.666 E F1 -2.365 -.275(ev e)72 287.8 T
(nts are not as de\214nite as those for other e).275 E -.165(ve)-.275 G
2.75(nts. Ho).165 F(we)-.275 E -.165(ve)-.275 G .88 -.44(r, t).165 H
(he X serv).44 E(er ne)-.165 E -.165(ve)-.275 G 2.75(rg).165 G(enerates)
-2.75 E F0(Expose)72.916 300.8 Q F1 -2.365 -.275(ev e)3.666 H
(nts on windo).275 E(ws whose class you speci\214ed as)-.275 E F0
(InputOnly)3.666 E F1 5.5(.T).916 G(he X serv)-5.5 E(er can generate)
-.165 E F0(Expose)72.916 313.8 Q F1 -2.365 -.275(ev e)3.666 H
(nts when no v).275 E(alid contents are a)-.275 E -.275(va)-.22 G
(ilable for re).275 E(gions of a windo)-.165 E 2.75(wa)-.275 G
(nd either the)-2.75 E(re)72 326.8 Q(gions are visible, the re)-.165 E
(gions are vie)-.165 E -.11(wa)-.275 G(ble and the serv).11 E
(er is \(perhaps ne)-.165 E(wly\) maintaining back-)-.275 E
(ing store on the windo)72 339.8 Q 1.43 -.715(w, o)-.275 H 2.75(rt).715
G(he windo)-2.75 E 2.75(wi)-.275 G 2.75(sn)-2.75 G(ot vie)-2.75 E -.11
(wa)-.275 G(ble b).11 E(ut the serv)-.22 E(er is \(perhaps ne)-.165 E
(wly\) honoring)-.275 E(the windo)72 352.8 Q(w')-.275 E 2.75(sb)-.605 G
(acking-store attrib)-2.75 E(ute of)-.22 E F0(Always)3.666 E F1(or)3.666
E F0(WhenMapped)3.666 E F1 5.5(.T).916 G(he re)-5.5 E
(gions decompose into)-.165 E
(an \(arbitrary\) set of rectangles, and an)72 365.8 Q F0(Expose)3.666 E
F1 -2.365 -.275(ev e)3.666 H(nt is generated for each rectangle.).275 E
-.165(Fo)5.5 G 2.75(ra).165 G -.165(ny)-2.75 G(gi)72 378.8 Q -.165(ve)
-.275 G 2.75(nw).165 G(indo)-2.75 E 1.43 -.715(w, t)-.275 H(he X serv)
.715 E(er guarantees to report contiguously all of the re)-.165 E
(gions e)-.165 E(xposed by some)-.165 E(action that causes)72 391.8 Q F0
(Expose)3.666 E F1 -2.365 -.275(ev e)3.666 H
(nts, such as raising a windo).275 E -.715(w.)-.275 G 1.76 -.88(To r)72
408.7 T(ecei).88 E -.165(ve)-.275 G F0(Expose)3.831 E F1 -2.365 -.275
(ev e)3.666 H(nts, set the).275 E F0(Exposur)3.666 E(eMask)-.198 E F1
(bit in the e)3.666 E -.165(ve)-.275 G(nt-mask attrib).165 E
(ute of the windo)-.22 E -.715(w.)-.275 G(The structure for this e)72
425.6 Q -.165(ve)-.275 G(nt type contains:).165 E .44 LW 36 447.25 36
458.25 DL 36 445.25 36 456.25 DL 41.5 443.5 36 443.5 DL 43.5 443.5 38
443.5 DL 49 443.5 43.5 443.5 DL(typedef struct {)72 462 Q(int type;)108
475 Q(/* Expose */)143.634 E(unsigned long serial;)108 488 Q
(/* # of last request processed by serv)88.337 E(er */)-.165 E
(Bool send_e)108 501 Q -.165(ve)-.275 G 100.998(nt; /*).165 F
(true if this came from a SendEv)2.75 E(ent request */)-.165 E
(Display *display;)108 514 Q(/* Display the e)102.692 E -.165(ve)-.275 G
(nt w).165 E(as read from */)-.11 E -.44(Wi)108 527 S(ndo).44 E 2.75(ww)
-.275 G(indo)-2.75 E(w;)-.275 E(int x, y;)108 540 Q(int width, height;)
108 553 Q(int count;)108 566 Q(/* if nonzero, at least this man)138.134
E 2.75(ym)-.165 G(ore */)-2.75 E 2.75(}X)72 579 S(ExposeEv)-2.75 E(ent;)
-.165 E 36 581.15 36 592.15 DL 36 579.15 36 590.15 DL 41.5 590.4 36
590.4 DL 43.5 590.4 38 590.4 DL 49 590.4 43.5 590.4 DL(The windo)72
615.4 Q 2.75(wm)-.275 G(ember is set to the e)-2.75 E
(xposed \(damaged\) windo)-.165 E 4.18 -.715(w. T)-.275 H
(he x and y members are set to).715 E(the coordinates relati)72 628.4 Q
.33 -.165(ve t)-.275 H 2.75(ot).165 G(he windo)-2.75 E(w')-.275 E 2.75
(so)-.605 G(rigin and indicate the upper)-2.75 E
(-left corner of the rectangle.)-.22 E
(The width and height members are set to the size \(e)72 641.4 Q
(xtent\) of the rectangle.)-.165 E(The count member is)5.5 E
(set to the number of)72 654.4 Q F0(Expose)3.666 E F1 -2.365 -.275(ev e)
3.666 H(nts that are to follo).275 E 4.18 -.715(w. I)-.275 H 2.75(fc)
.715 G(ount is zero, no more)-2.75 E F0(Expose)3.666 E F1 -2.365 -.275
(ev e)3.666 H(nts).275 E(follo)72 667.4 Q 2.75(wf)-.275 G(or this windo)
-2.75 E 4.18 -.715(w. H)-.275 H -.275(ow).715 G -2.365 -.275(ev e).275 H
.88 -.44(r, i).275 H 2.75(fc).44 G
(ount is nonzero, at least that number of)-2.75 E F0(Expose)3.666 E F1
-2.365 -.275(ev e)3.666 H(nts \(and).275 E(possibly more\) follo)72
680.4 Q 2.75(wf)-.275 G(or this windo)-2.75 E 4.18 -.715(w. S)-.275 H
(imple applications that do not w).715 E(ant to optimize redis-)-.11 E
(play by distinguishing between subareas of its windo)72 693.4 Q 2.75
(wc)-.275 G(an just ignore all)-2.75 E F0(Expose)3.666 E F1 -2.365 -.275
(ev e)3.666 H(nts with).275 E
(nonzero counts and perform full redisplays on e)72 706.4 Q -.165(ve)
-.275 G(nts with zero counts.).165 E F0(215)279.75 769 Q 0 Cg EP
%%Page: 216 221
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E 2.75(10.9.2. GraphicsExpose)72 85 R
(and NoExpose Ev)2.75 E(ents)-.11 E/F1 11/Times-Roman@0 SF(The X serv)72
101.9 Q(er can report)-.165 E F0(GraphicsExpose)3.666 E F1 -2.365 -.275
(ev e)3.666 H(nts to clients w).275 E(anting information about when a)
-.11 E(destination re)72 114.9 Q
(gion could not be computed during certain graphics requests:)-.165 E F0
(XCopyAr)3.666 E(ea)-.198 E F1(or)3.666 E F0(XCopyPlane)72.916 127.9 Q
F1 5.5(.T).916 G(he X serv)-5.5 E(er generates this e)-.165 E -.165(ve)
-.275 G(nt whene).165 E -.165(ve)-.275 G 2.75(rad).165 G(estination re)
-2.75 E(gion could not be)-.165 E
(computed because of an obscured or out-of-bounds source re)72 140.9 Q
2.75(gion. In)-.165 F(addition, the X serv)2.75 E(er guar)-.165 E(-)-.22
E(antees to report contiguously all of the re)72 153.9 Q(gions e)-.165 E
(xposed by some graphics request \(for e)-.165 E(xample,)-.165 E(cop)72
166.9 Q(ying an area of a dra)-.11 E -.11(wa)-.165 G
(ble to a destination dra).11 E -.11(wa)-.165 G(ble\).).11 E(The X serv)
72 183.8 Q(er generates a)-.165 E F0(NoExpose)3.666 E F1 -2.365 -.275
(ev e)3.666 H(nt whene).275 E -.165(ve)-.275 G 2.75(rag).165 G
(raphics request that might produce a)-2.75 E F0(GraphicsExpose)72.916
196.8 Q F1 -2.365 -.275(ev e)3.666 H(nt does not produce an).275 E 4.18
-.715(y. I)-.165 H 2.75(no).715 G(ther w)-2.75 E
(ords, the client is really asking for a)-.11 E F0(GraphicsExpose)72.916
209.8 Q F1 -2.365 -.275(ev e)3.666 H(nt b).275 E(ut instead recei)-.22 E
-.165(ve)-.275 G 2.75(sa).165 G F0(NoExpose).916 E F1 -2.365 -.275(ev e)
3.666 H(nt.).275 E 1.76 -.88(To r)72 226.7 T(ecei).88 E -.165(ve)-.275 G
F0(GraphicsExpose)3.831 E F1(or)3.666 E F0(NoExpose)3.666 E F1 -2.365
-.275(ev e)3.666 H(nts, you must \214rst set the graphics-e).275 E
(xposure)-.165 E(attrib)72 239.7 Q(ute of the graphics conte)-.22 E
(xt to)-.165 E F0 -.814(Tr)3.666 G(ue).814 E F1 5.5(.Y).916 G
(ou also can set the graphics-e)-6.71 E(xpose attrib)-.165 E(ute when)
-.22 E(creating a graphics conte)72 252.7 Q(xt using)-.165 E F0(XCr)
3.666 E(eateGC)-.198 E F1(or by calling)3.666 E F0(XSetGraphicsExposur)
3.666 E(es)-.198 E F1(.).916 E(The structures for these e)72 269.6 Q
-.165(ve)-.275 G(nt types contain:).165 E .44 LW 36 291.25 36 302.25 DL
36 289.25 36 300.25 DL 41.5 287.5 36 287.5 DL 43.5 287.5 38 287.5 DL 49
287.5 43.5 287.5 DL(typedef struct {)72 306 Q(int type;)108 319 Q
(/* GraphicsExpose */)143.634 E(unsigned long serial;)108 332 Q
(/* # of last request processed by serv)88.337 E(er */)-.165 E
(Bool send_e)108 345 Q -.165(ve)-.275 G 100.998(nt; /*).165 F
(true if this came from a SendEv)2.75 E(ent request */)-.165 E
(Display *display;)108 358 Q(/* Display the e)102.692 E -.165(ve)-.275 G
(nt w).165 E(as read from */)-.11 E(Dra)108 371 Q -.11(wa)-.165 G
(ble dra).11 E -.11(wa)-.165 G(ble;).11 E(int x, y;)108 384 Q
(int width, height;)108 397 Q(int count;)108 410 Q
(/* if nonzero, at least this man)138.134 E 2.75(ym)-.165 G(ore */)-2.75
E(int major_code;)108 423 Q(/* core is Cop)110.645 E(yArea or Cop)-.11 E
(yPlane */)-.11 E(int minor_code;)108 436 Q
(/* not de\214ned in the core */)110.029 E 2.75(}X)72 449 S
(GraphicsExposeEv)-2.75 E(ent;)-.165 E(typedef struct {)72 478.9 Q
(int type;)108 491.9 Q(/* NoExpose */)143.634 E(unsigned long serial;)
108 504.9 Q(/* # of last request processed by serv)88.337 E(er */)-.165
E(Bool send_e)108 517.9 Q -.165(ve)-.275 G 100.998(nt; /*).165 F
(true if this came from a SendEv)2.75 E(ent request */)-.165 E
(Display *display;)108 530.9 Q(/* Display the e)102.692 E -.165(ve)-.275
G(nt w).165 E(as read from */)-.11 E(Dra)108 543.9 Q -.11(wa)-.165 G
(ble dra).11 E -.11(wa)-.165 G(ble;).11 E(int major_code;)108 556.9 Q
(/* core is Cop)110.645 E(yArea or Cop)-.11 E(yPlane */)-.11 E
(int minor_code;)108 569.9 Q(/* not de\214ned in the core */)110.029 E
2.75(}X)72 582.9 S(NoExposeEv)-2.75 E(ent;)-.165 E 36 585.05 36 596.05
DL 36 583.05 36 594.05 DL 41.5 594.3 36 594.3 DL 43.5 594.3 38 594.3 DL
49 594.3 43.5 594.3 DL(Both structures ha)72 619.3 Q .33 -.165(ve t)-.22
H(hese common members: dra).165 E -.11(wa)-.165 G
(ble, major_code, and minor_code.).11 E(The)5.5 E(dra)72 632.3 Q -.11
(wa)-.165 G(ble member is set to the dra).11 E -.11(wa)-.165 G
(ble of the destination re).11 E(gion on which the graphics request)
-.165 E -.11(wa)72 645.3 S 2.75(st).11 G 2.75(ob)-2.75 G 2.75(ep)-2.75 G
2.75(erformed. The)-2.75 F(major_code member is set to the graphics req\
uest initiated by the client)2.75 E(and can be either)72 658.3 Q F0
(X_CopyAr)3.666 E(ea)-.198 E F1(or)3.666 E F0(X_CopyPlane)3.666 E F1 5.5
(.I).916 G 2.75(fi)-5.5 G 2.75(ti)-2.75 G(s)-2.75 E F0(X_CopyAr)3.666 E
(ea)-.198 E F1 2.75(,ac).916 G(all to)-2.75 E F0(XCopyAr)3.666 E(ea)
-.198 E F1(initiated the request.)72 671.3 Q(If it is)5.5 E F0
(X_CopyPlane)3.666 E F1 2.75(,ac).916 G(all to)-2.75 E F0(XCopyPlane)
3.666 E F1(initiated the request.)3.666 E(These)5.5 E
(constants are de\214ned in <)72 684.3 Q F0(X11/Xpr)A(oto.h)-.198 E F1
2.75(>. The)B(minor_code member)2.75 E 2.75(,l)-.44 G(ik)-2.75 E 2.75
(et)-.11 G(he major_code mem-)-2.75 E(ber)72 697.3 Q 2.75(,i)-.44 G
(ndicates which graphics request w)-2.75 E(as initiated by the client.)
-.11 E(Ho)5.5 E(we)-.275 E -.165(ve)-.275 G .88 -.44(r, t).165 H
(he minor_code mem-).44 E(ber is not de\214ned by the core X protocol a\
nd will be zero in these cases, although it may be used)72 710.3 Q
(by an e)72 723.3 Q(xtension.)-.165 E F0(216)279.75 769 Q 0 Cg EP
%%Page: 217 222
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E/F1 11/Times-Roman@0 SF(The)72 85 Q F0
(XGraphicsExposeEv)3.666 E(ent)-.11 E F1
(structure has these additional members: x, y)3.666 E 2.75(,w)-.715 G
(idth, height, and)-2.75 E 2.75(count. The)72 98 R 2.75(xa)2.75 G
(nd y members are set to the coordinates relati)-2.75 E .33 -.165(ve t)
-.275 H 2.75(ot).165 G(he dra)-2.75 E -.11(wa)-.165 G(ble').11 E 2.75
(so)-.605 G(rigin and indi-)-2.75 E(cate the upper)72 111 Q
(-left corner of the rectangle.)-.22 E
(The width and height members are set to the size)5.5 E(\(e)72 124 Q
(xtent\) of the rectangle.)-.165 E
(The count member is set to the number of)5.5 E F0(GraphicsExpose)3.666
E F1 -2.365 -.275(ev e)3.666 H(nts to).275 E(follo)72 137 Q 4.18 -.715
(w. I)-.275 H 2.75(fc).715 G(ount is zero, no more)-2.75 E F0
(GraphicsExpose)3.666 E F1 -2.365 -.275(ev e)3.666 H(nts follo).275 E
2.75(wf)-.275 G(or this windo)-2.75 E 4.18 -.715(w. H)-.275 H -.275(ow)
.715 G -2.365 -.275(ev e).275 H .88 -.44(r, i).275 H(f).44 E
(count is nonzero, at least that number of)72 150 Q F0(GraphicsExpose)
3.666 E F1 -2.365 -.275(ev e)3.666 H
(nts \(and possibly more\) are to fol-).275 E(lo)72 163 Q 2.75(wf)-.275
G(or this windo)-2.75 E -.715(w.)-.275 G F0 2.75(10.10. W)72 189 R(indo)
-.198 E 2.75(wS)-.11 G(tate Change Ev)-2.75 E(ents)-.11 E F1(The follo)
72 205.9 Q(wing sections discuss:)-.275 E<83>72 222.8 Q F0(Cir)24.566 E
(culateNotify)-.198 E F1 -2.365 -.275(ev e)3.666 H(nts).275 E<83>72
239.7 Q F0(Con\214gur)24.566 E(eNotify)-.198 E F1 -2.365 -.275(ev e)
3.666 H(nts).275 E<83>72 256.6 Q F0(Cr)24.566 E(eateNotify)-.198 E F1
-2.365 -.275(ev e)3.666 H(nts).275 E<83>72 273.5 Q F0(Destr)24.566 E
(oyNotify)-.198 E F1 -2.365 -.275(ev e)3.666 H(nts).275 E<83>72 290.4 Q
F0(Gra)24.566 E(vityNotify)-.275 E F1 -2.365 -.275(ev e)3.666 H(nts).275
E<83>72 307.3 Q F0(MapNotify)24.566 E F1 -2.365 -.275(ev e)3.666 H(nts)
.275 E<83>72 324.2 Q F0(MappingNotify)24.566 E F1 -2.365 -.275(ev e)
3.666 H(nts).275 E<83>72 341.1 Q F0(Repar)24.566 E(entNotify)-.198 E F1
-2.365 -.275(ev e)3.666 H(nts).275 E<83>72 358 Q F0(UnmapNotify)24.566 E
F1 -2.365 -.275(ev e)3.666 H(nts).275 E<83>72 374.9 Q F0 -.407(Vi)24.566
G(sibilityNotify).407 E F1 -2.365 -.275(ev e)3.666 H(nts).275 E F0 2.75
(10.10.1. Cir)72 400.9 R(culateNotify Ev)-.198 E(ents)-.11 E F1
(The X serv)72 417.8 Q(er can report)-.165 E F0(Cir)3.666 E
(culateNotify)-.198 E F1 -2.365 -.275(ev e)3.666 H(nts to clients w).275
E(anting information about when a)-.11 E(windo)72 430.8 Q 2.75(wc)-.275
G(hanges its position in the stack.)-2.75 E(The X serv)5.5 E
(er generates this e)-.165 E -.165(ve)-.275 G(nt type whene).165 E -.165
(ve)-.275 G 2.75(raw).165 G(in-)-2.75 E(do)72 443.8 Q 2.75(wi)-.275 G
2.75(sa)-2.75 G(ctually restack)-2.75 E
(ed as a result of a client application calling)-.11 E F0(XCir)3.666 E
(culateSubwindo)-.198 E(ws)-.11 E F1(,).916 E F0(XCir)72.916 456.8 Q
(culateSubwindo)-.198 E(wsUp)-.11 E F1 2.75(,o).916 G(r)-2.75 E F0(XCir)
3.666 E(culateSubwindo)-.198 E(wsDo)-.11 E(wn)-.11 E F1(.).916 E 1.76
-.88(To r)72 473.7 T(ecei).88 E -.165(ve)-.275 G F0(Cir)3.831 E
(culateNotify)-.198 E F1 -2.365 -.275(ev e)3.666 H(nts, set the).275 E
F0(Structur)3.666 E(eNotifyMask)-.198 E F1(bit in the e)3.666 E -.165
(ve)-.275 G(nt-mask attrib).165 E(ute)-.22 E(of the windo)72 486.7 Q
2.75(wo)-.275 G 2.75(rt)-2.75 G(he)-2.75 E F0(Substructur)3.666 E
(eNotifyMask)-.198 E F1(bit in the e)3.666 E -.165(ve)-.275 G
(nt-mask attrib).165 E(ute of the parent win-)-.22 E(do)72 499.7 Q 2.75
(w\()-.275 G(in which case, circulating an)-2.75 E 2.75(yc)-.165 G
(hild generates an e)-2.75 E -.165(ve)-.275 G(nt\).).165 E
(The structure for this e)72 516.6 Q -.165(ve)-.275 G(nt type contains:)
.165 E .44 LW 36 538.25 36 549.25 DL 36 536.25 36 547.25 DL 41.5 534.5
36 534.5 DL 43.5 534.5 38 534.5 DL 49 534.5 43.5 534.5 DL
(typedef struct {)72 553 Q(int type;)108 566 Q(/* CirculateNotify */)
143.634 E(unsigned long serial;)108 579 Q
(/* # of last request processed by serv)88.337 E(er */)-.165 E
(Bool send_e)108 592 Q -.165(ve)-.275 G 100.998(nt; /*).165 F
(true if this came from a SendEv)2.75 E(ent request */)-.165 E
(Display *display;)108 605 Q(/* Display the e)102.692 E -.165(ve)-.275 G
(nt w).165 E(as read from */)-.11 E -.44(Wi)108 618 S(ndo).44 E 2.75(we)
-.275 G -.165(ve)-3.025 G(nt;).165 E -.44(Wi)108 631 S(ndo).44 E 2.75
(ww)-.275 G(indo)-2.75 E(w;)-.275 E(int place;)108 644 Q(/* PlaceOnT)
139.366 E(op, PlaceOnBottom */)-.88 E 2.75(}X)72 657 S(CirculateEv)-2.75
E(ent;)-.165 E 36 659.15 36 670.15 DL 36 657.15 36 668.15 DL 41.5 668.4
36 668.4 DL 43.5 668.4 38 668.4 DL 49 668.4 43.5 668.4 DL(The e)72 693.4
Q -.165(ve)-.275 G(nt member is set either to the restack).165 E
(ed windo)-.11 E 2.75(wo)-.275 G 2.75(rt)-2.75 G 2.75(oi)-2.75 G
(ts parent, depending on whether)-2.75 E F0(Structur)72.916 706.4 Q
(eNotify)-.198 E F1(or)3.666 E F0(Substructur)3.666 E(eNotify)-.198 E F1
-.11(wa)3.666 G 2.75(ss).11 G 2.75(elected. The)-2.75 F(windo)2.75 E
2.75(wm)-.275 G(ember is set to the win-)-2.75 E(do)72 719.4 Q 2.75(wt)
-.275 G(hat w)-2.75 E(as restack)-.11 E 2.75(ed. The)-.11 F
(place member is set to the windo)2.75 E(w')-.275 E 2.75(sp)-.605 G
(osition after the restack)-2.75 E(occurs and is either)72 732.4 Q F0
(PlaceOnT)3.666 E(op)-1.012 E F1(or)3.666 E F0(PlaceOnBottom)3.666 E F1
5.5(.I).916 G 2.75(fi)-5.5 G 2.75(ti)-2.75 G(s)-2.75 E F0(PlaceOnT)3.666
E(op)-1.012 E F1 2.75(,t).916 G(he windo)-2.75 E 2.75(wi)-.275 G 2.75
(sn)-2.75 G -.275(ow)-2.75 G F0(217)279.75 769 Q 0 Cg EP
%%Page: 218 223
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E/F1 11/Times-Roman@0 SF
(on top of all siblings.)72 85 Q(If it is)5.5 E F0(PlaceOnBottom)3.666 E
F1 2.75(,t).916 G(he windo)-2.75 E 2.75(wi)-.275 G 2.75(sn)-2.75 G .55
-.275(ow b)-2.75 H(elo).275 E 2.75(wa)-.275 G(ll siblings.)-2.75 E F0
2.75(10.10.2. Con\214gur)72 111 R(eNotify Ev)-.198 E(ents)-.11 E F1
(The X serv)72 127.9 Q(er can report)-.165 E F0(Con\214gur)3.666 E
(eNotify)-.198 E F1 -2.365 -.275(ev e)3.666 H(nts to clients w).275 E
(anting information about actual)-.11 E(changes to a windo)72 140.9 Q
(w')-.275 E 2.75(ss)-.605 G(tate, such as size, position, border)-2.75 E
2.75(,a)-.44 G(nd stacking order)-2.75 E 5.5(.T)-.605 G(he X serv)-5.5 E
(er gen-)-.165 E(erates this e)72 153.9 Q -.165(ve)-.275 G
(nt type whene).165 E -.165(ve)-.275 G 2.75(ro).165 G(ne of the follo)
-2.75 E(wing con\214gure windo)-.275 E 2.75(wr)-.275 G
(equests made by a client)-2.75 E(application actually completes:)72
166.9 Q 23.65<8341>72 183.8 S(windo)-20.9 E(w')-.275 E 2.75(ss)-.605 G
(ize, position, border)-2.75 E 2.75(,a)-.44 G
(nd/or stacking order is recon\214gured by calling)-2.75 E F0(XCon-)
3.666 E(\214gur)99.5 196.8 Q(eW)-.198 E(indo)-.198 E(w)-.11 E F1(.).916
E 23.65<8354>72 213.7 S(he windo)-23.65 E(w')-.275 E 2.75(sp)-.605 G
(osition in the stacking order is changed by calling)-2.75 E F0(XLo)
3.666 E(werW)-.11 E(indo)-.198 E(w)-.11 E F1(,).916 E F0(XRaiseW)100.416
226.7 Q(indo)-.198 E(w)-.11 E F1 2.75(,o).916 G(r)-2.75 E F0(XRestackW)
3.666 E(indo)-.198 E(ws)-.11 E F1(.).916 E 23.65<8341>72 243.6 S(windo)
-20.9 E 2.75(wi)-.275 G 2.75(sm)-2.75 G -.165(ove)-2.75 G 2.75(db).165 G
2.75(yc)-2.75 G(alling)-2.75 E F0(XMo)3.666 E -.11(ve)-.11 G -.198(Wi)
.11 G(ndo).198 E(w)-.11 E F1(.).916 E 23.65<8341>72 260.5 S(windo)-20.9
E(w')-.275 E 2.75(ss)-.605 G(ize is changed by calling)-2.75 E F0
(XResizeW)3.666 E(indo)-.198 E(w)-.11 E F1(.).916 E 23.65<8341>72 277.4
S(windo)-20.9 E(w')-.275 E 2.75(ss)-.605 G
(ize and location is changed by calling)-2.75 E F0(XMo)3.666 E -.11(ve)
-.11 G(ResizeW).11 E(indo)-.198 E(w)-.11 E F1(.).916 E 23.65<8341>72
294.3 S(windo)-20.9 E 2.75(wi)-.275 G 2.75(sm)-2.75 G
(apped and its position in the stacking order is changed by calling)
-2.75 E F0(XMapRaised)100.416 307.3 Q F1(.).916 E 23.65<8341>72 324.2 S
(windo)-20.9 E(w')-.275 E 2.75(sb)-.605 G
(order width is changed by calling)-2.75 E F0(XSetW)3.666 E(indo)-.198 E
(wBorderW)-.11 E(idth)-.198 E F1(.).916 E 1.76 -.88(To r)72 341.1 T
(ecei).88 E -.165(ve)-.275 G F0(Con\214gur)3.831 E(eNotify)-.198 E F1
-2.365 -.275(ev e)3.666 H(nts, set the).275 E F0(Structur)3.666 E
(eNotifyMask)-.198 E F1(bit in the e)3.666 E -.165(ve)-.275 G
(nt-mask attrib).165 E(ute)-.22 E(of the windo)72 354.1 Q 2.75(wo)-.275
G 2.75(rt)-2.75 G(he)-2.75 E F0(Substructur)3.666 E(eNotifyMask)-.198 E
F1(bit in the e)3.666 E -.165(ve)-.275 G(nt-mask attrib).165 E
(ute of the parent win-)-.22 E(do)72 367.1 Q 2.75(w\()-.275 G
(in which case, con\214guring an)-2.75 E 2.75(yc)-.165 G
(hild generates an e)-2.75 E -.165(ve)-.275 G(nt\).).165 E
(The structure for this e)72 384 Q -.165(ve)-.275 G(nt type contains:)
.165 E .44 LW 36 405.65 36 416.65 DL 36 403.65 36 414.65 DL 41.5 401.9
36 401.9 DL 43.5 401.9 38 401.9 DL 49 401.9 43.5 401.9 DL
(typedef struct {)72 420.4 Q(int type;)108 433.4 Q
(/* Con\214gureNotify */)143.634 E(unsigned long serial;)108 446.4 Q
(/* # of last request processed by serv)88.337 E(er */)-.165 E
(Bool send_e)108 459.4 Q -.165(ve)-.275 G 100.998(nt; /*).165 F
(true if this came from a SendEv)2.75 E(ent request */)-.165 E
(Display *display;)108 472.4 Q(/* Display the e)102.692 E -.165(ve)-.275
G(nt w).165 E(as read from */)-.11 E -.44(Wi)108 485.4 S(ndo).44 E 2.75
(we)-.275 G -.165(ve)-3.025 G(nt;).165 E -.44(Wi)108 498.4 S(ndo).44 E
2.75(ww)-.275 G(indo)-2.75 E(w;)-.275 E(int x, y;)108 511.4 Q
(int width, height;)108 524.4 Q(int border_width;)108 537.4 Q -.44(Wi)
108 550.4 S(ndo).44 E 2.75(wa)-.275 G(bo)-2.75 E -.165(ve)-.165 G(;).165
E(Bool o)108 563.4 Q -.165(ve)-.165 G(rride_redirect;).165 E 2.75(}X)72
576.4 S(Con\214gureEv)-2.75 E(ent;)-.165 E 36 578.55 36 589.55 DL 36
576.55 36 587.55 DL 41.5 587.8 36 587.8 DL 43.5 587.8 38 587.8 DL 49
587.8 43.5 587.8 DL(The e)72 612.8 Q -.165(ve)-.275 G
(nt member is set either to the recon\214gured windo).165 E 2.75(wo)
-.275 G 2.75(rt)-2.75 G 2.75(oi)-2.75 G(ts parent, depending on whether)
-2.75 E F0(Structur)72.916 625.8 Q(eNotify)-.198 E F1(or)3.666 E F0
(Substructur)3.666 E(eNotify)-.198 E F1 -.11(wa)3.666 G 2.75(ss).11 G
2.75(elected. The)-2.75 F(windo)2.75 E 2.75(wm)-.275 G
(ember is set to the win-)-2.75 E(do)72 638.8 Q 2.75(ww)-.275 G
(hose size, position, border)-2.75 E 2.75(,a)-.44 G
(nd/or stacking order w)-2.75 E(as changed.)-.11 E
(The x and y members are set to the coordinates relati)72 655.7 Q .33
-.165(ve t)-.275 H 2.75(ot).165 G(he parent windo)-2.75 E(w')-.275 E
2.75(so)-.605 G(rigin and indicate)-2.75 E(the position of the upper)72
668.7 Q(-left outside corner of the windo)-.22 E 4.18 -.715(w. T)-.275 H
(he width and height members are).715 E
(set to the inside size of the windo)72 681.7 Q 1.43 -.715(w, n)-.275 H
(ot including the border).715 E 5.5(.T)-.605 G
(he border_width member is set to)-5.5 E(the width of the windo)72 694.7
Q(w')-.275 E 2.75(sb)-.605 G(order)-2.75 E 2.75(,i)-.44 G 2.75(np)-2.75
G(ix)-2.75 E(els.)-.165 E(The abo)72 711.6 Q .33 -.165(ve m)-.165 H
(ember is set to the sibling windo).165 E 2.75(wa)-.275 G
(nd is used for stacking operations.)-2.75 E(If the X)5.5 E(serv)72
724.6 Q(er sets this member to)-.165 E F0(None)3.666 E F1 2.75(,t).916 G
(he windo)-2.75 E 2.75(ww)-.275 G(hose state w)-2.75 E
(as changed is on the bottom of the)-.11 E F0(218)279.75 769 Q 0 Cg EP
%%Page: 219 224
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E/F1 11/Times-Roman@0 SF
(stack with respect to sibling windo)72 85 Q 2.75(ws. Ho)-.275 F(we)
-.275 E -.165(ve)-.275 G .88 -.44(r, i).165 H 2.75(ft).44 G
(his member is set to a sibling windo)-2.75 E 1.43 -.715(w, t)-.275 H
(he).715 E(windo)72 98 Q 2.75(ww)-.275 G(hose state w)-2.75 E
(as changed is placed on top of this sibling windo)-.11 E -.715(w.)-.275
G(The o)72 114.9 Q -.165(ve)-.165 G
(rride_redirect member is set to the o).165 E -.165(ve)-.165 G
(rride-redirect attrib).165 E(ute of the windo)-.22 E 4.18 -.715(w. W)
-.275 H(indo).275 E(w)-.275 E
(manager clients normally should ignore this windo)72 127.9 Q 2.75(wi)
-.275 G 2.75(ft)-2.75 G(he o)-2.75 E -.165(ve)-.165 G
(rride_redirect member is).165 E F0 -.814(Tr)3.666 G(ue).814 E F1(.).916
E F0 2.75(10.10.3. Cr)72 153.9 R(eateNotify Ev)-.198 E(ents)-.11 E F1
(The X serv)72 170.8 Q(er can report)-.165 E F0(Cr)3.666 E(eateNotify)
-.198 E F1 -2.365 -.275(ev e)3.666 H(nts to clients w).275 E
(anting information about creation of)-.11 E(windo)72 183.8 Q 2.75
(ws. The)-.275 F 2.75(Xs)2.75 G(erv)-2.75 E(er generates this e)-.165 E
-.165(ve)-.275 G(nt whene).165 E -.165(ve)-.275 G 2.75(rac).165 G
(lient application creates a windo)-2.75 E 2.75(wb)-.275 G(y)-2.75 E
(calling)72 196.8 Q F0(XCr)3.666 E(eateW)-.198 E(indo)-.198 E(w)-.11 E
F1(or)3.666 E F0(XCr)3.666 E(eateSimpleW)-.198 E(indo)-.198 E(w)-.11 E
F1(.).916 E 1.76 -.88(To r)72 213.7 T(ecei).88 E -.165(ve)-.275 G F0(Cr)
3.831 E(eateNotify)-.198 E F1 -2.365 -.275(ev e)3.666 H(nts, set the)
.275 E F0(Substructur)3.666 E(eNotifyMask)-.198 E F1(bit in the e)3.666
E -.165(ve)-.275 G(nt-mask attrib).165 E(ute)-.22 E(of the windo)72
226.7 Q 4.18 -.715(w. C)-.275 H(reating an).715 E 2.75(yc)-.165 G
(hildren then generates an e)-2.75 E -.165(ve)-.275 G(nt.).165 E
(The structure for the e)72 243.6 Q -.165(ve)-.275 G(nt type contains:)
.165 E .44 LW 36 265.25 36 276.25 DL 36 263.25 36 274.25 DL 41.5 261.5
36 261.5 DL 43.5 261.5 38 261.5 DL 49 261.5 43.5 261.5 DL
(typedef struct {)72 280 Q(int type;)108 293 Q(/* CreateNotify */)
143.634 E(unsigned long serial;)108 306 Q
(/* # of last request processed by serv)88.337 E(er */)-.165 E
(Bool send_e)108 319 Q -.165(ve)-.275 G 100.998(nt; /*).165 F
(true if this came from a SendEv)2.75 E(ent request */)-.165 E
(Display *display;)108 332 Q(/* Display the e)102.692 E -.165(ve)-.275 G
(nt w).165 E(as read from */)-.11 E -.44(Wi)108 345 S(ndo).44 E 2.75(wp)
-.275 G 106.784(arent; /*)-2.75 F(parent of the windo)2.75 E 2.75(w*)
-.275 G(/)-2.75 E -.44(Wi)108 358 S(ndo).44 E 2.75(ww)-.275 G(indo)-2.75
E 99.106(w; /*)-.275 F(windo)2.75 E 2.75(wi)-.275 G 2.75(do)-2.75 G 2.75
(fw)-2.75 G(indo)-2.75 E 2.75(wc)-.275 G(reated */)-2.75 E(int x, y;)108
371 Q(/* windo)146.076 E 2.75(wl)-.275 G(ocation */)-2.75 E
(int width, height;)108 384 Q(/* size of windo)104.518 E 2.75(w*)-.275 G
(/)-2.75 E(int border_width;)108 397 Q(/* border width */)103.308 E
(Bool o)108 410 Q -.165(ve)-.165 G 74.631(rride_redirect; /*).165 F
(creation should be o)2.75 E -.165(ve)-.165 G(rridden */).165 E 2.75(}X)
72 423 S(CreateW)-2.75 E(indo)-.44 E(wEv)-.275 E(ent;)-.165 E 36 425.15
36 436.15 DL 36 423.15 36 434.15 DL 41.5 434.4 36 434.4 DL 43.5 434.4 38
434.4 DL 49 434.4 43.5 434.4 DL
(The parent member is set to the created windo)72 459.4 Q(w')-.275 E
2.75(sp)-.605 G 2.75(arent. The)-2.75 F(windo)2.75 E 2.75(wm)-.275 G
(ember speci\214es the cre-)-2.75 E(ated windo)72 472.4 Q 4.18 -.715
(w. T)-.275 H(he x and y members are set to the created windo).715 E(w')
-.275 E 2.75(sc)-.605 G(oordinates relati)-2.75 E .33 -.165(ve t)-.275 H
2.75(ot).165 G(he)-2.75 E(parent windo)72 485.4 Q(w')-.275 E 2.75(so)
-.605 G(rigin and indicate the position of the upper)-2.75 E
(-left outside corner of the created)-.22 E(windo)72 498.4 Q 4.18 -.715
(w. T)-.275 H(he width and height members are set to the inside size of\
 the created windo).715 E 2.75(w\()-.275 G(not)-2.75 E
(including the border\) and are al)72 511.4 Q -.11(wa)-.11 G
(ys nonzero.).11 E(The border_width member is set to the width of)5.5 E
(the created windo)72 524.4 Q(w')-.275 E 2.75(sb)-.605 G(order)-2.75 E
2.75(,i)-.44 G 2.75(np)-2.75 G(ix)-2.75 E 2.75(els. The)-.165 F -.165
(ove)2.75 G(rride_redirect member is set to the o).165 E -.165(ve)-.165
G(rride-redi-).165 E(rect attrib)72 537.4 Q(ute of the windo)-.22 E 4.18
-.715(w. W)-.275 H(indo).275 E 2.75(wm)-.275 G
(anager clients normally should ignore this windo)-2.75 E 2.75(wi)-.275
G 2.75(ft)-2.75 G(he)-2.75 E -.165(ove)72 550.4 S
(rride_redirect member is).165 E F0 -.814(Tr)3.666 G(ue).814 E F1(.).916
E F0 2.75(10.10.4. Destr)72 576.4 R(oyNotify Ev)-.198 E(ents)-.11 E F1
(The X serv)72 593.3 Q(er can report)-.165 E F0(Destr)3.666 E(oyNotify)
-.198 E F1 -2.365 -.275(ev e)3.666 H(nts to clients w).275 E
(anting information about which win-)-.11 E(do)72 606.3 Q(ws are destro)
-.275 E 2.75(yed. The)-.11 F 2.75(Xs)2.75 G(erv)-2.75 E
(er generates this e)-.165 E -.165(ve)-.275 G(nt whene).165 E -.165(ve)
-.275 G 2.75(rac).165 G(lient application destro)-2.75 E(ys a)-.11 E
(windo)72 619.3 Q 2.75(wb)-.275 G 2.75(yc)-2.75 G(alling)-2.75 E F0
(XDestr)3.666 E(oyW)-.198 E(indo)-.198 E(w)-.11 E F1(or)3.666 E F0
(XDestr)3.666 E(oySubwindo)-.198 E(ws)-.11 E F1(.).916 E
(The ordering of the)72 636.2 Q F0(Destr)3.666 E(oyNotify)-.198 E F1
-2.365 -.275(ev e)3.666 H(nts is such that for an).275 E 2.75(yg)-.165 G
-2.365 -.275(iv e)-2.75 H 2.75(nw).275 G(indo)-2.75 E -.715(w,)-.275 G
F0(Destr)4.381 E(oyNotify)-.198 E F1(is)3.666 E
(generated on all inferiors of the windo)72 649.2 Q 2.75(wb)-.275 G
(efore being generated on the windo)-2.75 E 2.75(wi)-.275 G 2.75
(tself. The)-2.75 F 2.75(Xp)2.75 G(ro-)-2.75 E(tocol does not constrain\
 the ordering among siblings and across subhierarchies.)72 662.2 Q 1.76
-.88(To r)72 679.1 T(ecei).88 E -.165(ve)-.275 G F0(Destr)3.831 E
(oyNotify)-.198 E F1 -2.365 -.275(ev e)3.666 H(nts, set the).275 E F0
(Structur)3.666 E(eNotifyMask)-.198 E F1(bit in the e)3.666 E -.165(ve)
-.275 G(nt-mask attrib).165 E(ute of)-.22 E(the windo)72 692.1 Q 2.75
(wo)-.275 G 2.75(rt)-2.75 G(he)-2.75 E F0(Substructur)3.666 E
(eNotifyMask)-.198 E F1(bit in the e)3.666 E -.165(ve)-.275 G
(nt-mask attrib).165 E(ute of the parent windo)-.22 E(w)-.275 E
(\(in which case, destro)72 705.1 Q(ying an)-.11 E 2.75(yc)-.165 G
(hild generates an e)-2.75 E -.165(ve)-.275 G(nt\).).165 E F0(219)279.75
769 Q 0 Cg EP
%%Page: 220 225
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E/F1 11/Times-Roman@0 SF
(The structure for this e)72 85 Q -.165(ve)-.275 G(nt type contains:)
.165 E .44 LW 36 106.65 36 117.65 DL 36 104.65 36 115.65 DL 41.5 102.9
36 102.9 DL 43.5 102.9 38 102.9 DL 49 102.9 43.5 102.9 DL
(typedef struct {)72 121.4 Q(int type;)108 134.4 Q(/* Destro)143.634 E
(yNotify */)-.11 E(unsigned long serial;)108 147.4 Q
(/* # of last request processed by serv)88.337 E(er */)-.165 E
(Bool send_e)108 160.4 Q -.165(ve)-.275 G 100.998(nt; /*).165 F
(true if this came from a SendEv)2.75 E(ent request */)-.165 E
(Display *display;)108 173.4 Q(/* Display the e)102.692 E -.165(ve)-.275
G(nt w).165 E(as read from */)-.11 E -.44(Wi)108 186.4 S(ndo).44 E 2.75
(we)-.275 G -.165(ve)-3.025 G(nt;).165 E -.44(Wi)108 199.4 S(ndo).44 E
2.75(ww)-.275 G(indo)-2.75 E(w;)-.275 E 2.75(}X)72 212.4 S(Destro)-2.75
E(yW)-.11 E(indo)-.44 E(wEv)-.275 E(ent;)-.165 E 36 214.55 36 225.55 DL
36 212.55 36 223.55 DL 41.5 223.8 36 223.8 DL 43.5 223.8 38 223.8 DL 49
223.8 43.5 223.8 DL(The e)72 248.8 Q -.165(ve)-.275 G
(nt member is set either to the destro).165 E(yed windo)-.11 E 2.75(wo)
-.275 G 2.75(rt)-2.75 G 2.75(oi)-2.75 G(ts parent, depending on whether)
-2.75 E F0(Structur)72.916 261.8 Q(eNotify)-.198 E F1(or)3.666 E F0
(Substructur)3.666 E(eNotify)-.198 E F1 -.11(wa)3.666 G 2.75(ss).11 G
2.75(elected. The)-2.75 F(windo)2.75 E 2.75(wm)-.275 G
(ember is set to the win-)-2.75 E(do)72 274.8 Q 2.75(wt)-.275 G
(hat is destro)-2.75 E(yed.)-.11 E F0 2.75(10.10.5. Gra)72 300.8 R
(vityNotify Ev)-.275 E(ents)-.11 E F1(The X serv)72 317.7 Q
(er can report)-.165 E F0(Gra)3.666 E(vityNotify)-.275 E F1 -2.365 -.275
(ev e)3.666 H(nts to clients w).275 E
(anting information about when a win-)-.11 E(do)72 330.7 Q 2.75(wi)-.275
G 2.75(sm)-2.75 G -.165(ove)-2.75 G 2.75(db).165 G
(ecause of a change in the size of its parent.)-2.75 E(The X serv)5.5 E
(er generates this e)-.165 E -.165(ve)-.275 G(nt).165 E(whene)72 343.7 Q
-.165(ve)-.275 G 2.75(rac).165 G(lient application actually mo)-2.75 E
-.165(ve)-.165 G 2.75(sac).165 G(hild windo)-2.75 E 2.75(wa)-.275 G 2.75
(sar)-2.75 G(esult of resizing its parent by)-2.75 E(calling)72 356.7 Q
F0(XCon\214gur)3.666 E(eW)-.198 E(indo)-.198 E(w)-.11 E F1(,).916 E F0
(XMo)3.666 E -.11(ve)-.11 G(ResizeW).11 E(indo)-.198 E(w)-.11 E F1 2.75
(,o).916 G(r)-2.75 E F0(XResizeW)3.666 E(indo)-.198 E(w)-.11 E F1(.).916
E 1.76 -.88(To r)72 373.6 T(ecei).88 E -.165(ve)-.275 G F0(Gra)3.831 E
(vityNotify)-.275 E F1 -2.365 -.275(ev e)3.666 H(nts, set the).275 E F0
(Structur)3.666 E(eNotifyMask)-.198 E F1(bit in the e)3.666 E -.165(ve)
-.275 G(nt-mask attrib).165 E(ute of)-.22 E(the windo)72 386.6 Q 2.75
(wo)-.275 G 2.75(rt)-2.75 G(he)-2.75 E F0(Substructur)3.666 E
(eNotifyMask)-.198 E F1(bit in the e)3.666 E -.165(ve)-.275 G
(nt-mask attrib).165 E(ute of the parent windo)-.22 E(w)-.275 E
(\(in which case, an)72 399.6 Q 2.75(yc)-.165 G(hild that is mo)-2.75 E
-.165(ve)-.165 G 2.75(db).165 G
(ecause its parent has been resized generates an e)-2.75 E -.165(ve)
-.275 G(nt\).).165 E(The structure for this e)72 416.5 Q -.165(ve)-.275
G(nt type contains:).165 E 36 438.15 36 449.15 DL 36 436.15 36 447.15 DL
41.5 434.4 36 434.4 DL 43.5 434.4 38 434.4 DL 49 434.4 43.5 434.4 DL
(typedef struct {)72 452.9 Q(int type;)108 465.9 Q(/* Gra)143.634 E
(vityNotify */)-.22 E(unsigned long serial;)108 478.9 Q
(/* # of last request processed by serv)88.337 E(er */)-.165 E
(Bool send_e)108 491.9 Q -.165(ve)-.275 G 100.998(nt; /*).165 F
(true if this came from a SendEv)2.75 E(ent request */)-.165 E
(Display *display;)108 504.9 Q(/* Display the e)102.692 E -.165(ve)-.275
G(nt w).165 E(as read from */)-.11 E -.44(Wi)108 517.9 S(ndo).44 E 2.75
(we)-.275 G -.165(ve)-3.025 G(nt;).165 E -.44(Wi)108 530.9 S(ndo).44 E
2.75(ww)-.275 G(indo)-2.75 E(w;)-.275 E(int x, y;)108 543.9 Q 2.75(}X)72
556.9 S(Gra)-2.75 E(vityEv)-.22 E(ent;)-.165 E 36 559.05 36 570.05 DL 36
557.05 36 568.05 DL 41.5 568.3 36 568.3 DL 43.5 568.3 38 568.3 DL 49
568.3 43.5 568.3 DL(The e)72 593.3 Q -.165(ve)-.275 G
(nt member is set either to the windo).165 E 2.75(wt)-.275 G(hat w)-2.75
E(as mo)-.11 E -.165(ve)-.165 G 2.75(do).165 G 2.75(rt)-2.75 G 2.75(oi)
-2.75 G(ts parent, depending on)-2.75 E(whether)72 606.3 Q F0(Structur)
3.666 E(eNotify)-.198 E F1(or)3.666 E F0(Substructur)3.666 E(eNotify)
-.198 E F1 -.11(wa)3.666 G 2.75(ss).11 G 2.75(elected. The)-2.75 F
(windo)2.75 E 2.75(wm)-.275 G(ember is set to)-2.75 E(the child windo)72
619.3 Q 2.75(wt)-.275 G(hat w)-2.75 E(as mo)-.11 E -.165(ve)-.165 G 2.75
(d. The).165 F 2.75(xa)2.75 G
(nd y members are set to the coordinates relati)-2.75 E .33 -.165(ve t)
-.275 H 2.75(ot).165 G(he)-2.75 E(ne)72 632.3 Q 2.75(wp)-.275 G
(arent windo)-2.75 E(w')-.275 E 2.75(so)-.605 G
(rigin and indicate the position of the upper)-2.75 E
(-left outside corner of the win-)-.22 E(do)72 645.3 Q -.715(w.)-.275 G
F0 2.75(10.10.6. MapNotify)72 671.3 R(Ev)2.75 E(ents)-.11 E F1
(The X serv)72 688.2 Q(er can report)-.165 E F0(MapNotify)3.666 E F1
-2.365 -.275(ev e)3.666 H(nts to clients w).275 E
(anting information about which windo)-.11 E(ws)-.275 E(are mapped.)72
701.2 Q(The X serv)5.5 E(er generates this e)-.165 E -.165(ve)-.275 G
(nt type whene).165 E -.165(ve)-.275 G 2.75(rac).165 G
(lient application changes the)-2.75 E(windo)72 714.2 Q(w')-.275 E 2.75
(ss)-.605 G(tate from unmapped to mapped by calling)-2.75 E F0(XMapW)
3.666 E(indo)-.198 E(w)-.11 E F1(,).916 E F0(XMapRaised)3.666 E F1(,)
.916 E F0(XMap-)3.666 E(Subwindo)72 727.2 Q(ws)-.11 E F1(,).916 E F0
(XRepar)3.666 E(entW)-.198 E(indo)-.198 E(w)-.11 E F1 2.75(,o).916 G
2.75(ra)-2.75 G 2.75(sar)-2.75 G(esult of sa)-2.75 E -.165(ve)-.22 G
(-set processing.).165 E F0(220)279.75 769 Q 0 Cg EP
%%Page: 221 226
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E/F1 11/Times-Roman@0 SF 1.76 -.88(To r)
72 85 T(ecei).88 E -.165(ve)-.275 G F0(MapNotify)3.831 E F1 -2.365 -.275
(ev e)3.666 H(nts, set the).275 E F0(Structur)3.666 E(eNotifyMask)-.198
E F1(bit in the e)3.666 E -.165(ve)-.275 G(nt-mask attrib).165 E(ute of)
-.22 E(the windo)72 98 Q 2.75(wo)-.275 G 2.75(rt)-2.75 G(he)-2.75 E F0
(Substructur)3.666 E(eNotifyMask)-.198 E F1(bit in the e)3.666 E -.165
(ve)-.275 G(nt-mask attrib).165 E(ute of the parent windo)-.22 E(w)-.275
E(\(in which case, mapping an)72 111 Q 2.75(yc)-.165 G
(hild generates an e)-2.75 E -.165(ve)-.275 G(nt\).).165 E
(The structure for this e)72 127.9 Q -.165(ve)-.275 G(nt type contains:)
.165 E .44 LW 36 149.55 36 160.55 DL 36 147.55 36 158.55 DL 41.5 145.8
36 145.8 DL 43.5 145.8 38 145.8 DL 49 145.8 43.5 145.8 DL
(typedef struct {)72 164.3 Q(int type;)108 177.3 Q(/* MapNotify */)
143.634 E(unsigned long serial;)108 190.3 Q
(/* # of last request processed by serv)88.337 E(er */)-.165 E
(Bool send_e)108 203.3 Q -.165(ve)-.275 G 100.998(nt; /*).165 F
(true if this came from a SendEv)2.75 E(ent request */)-.165 E
(Display *display;)108 216.3 Q(/* Display the e)102.692 E -.165(ve)-.275
G(nt w).165 E(as read from */)-.11 E -.44(Wi)108 229.3 S(ndo).44 E 2.75
(we)-.275 G -.165(ve)-3.025 G(nt;).165 E -.44(Wi)108 242.3 S(ndo).44 E
2.75(ww)-.275 G(indo)-2.75 E(w;)-.275 E(Bool o)108 255.3 Q -.165(ve)
-.165 G 74.631(rride_redirect; /*).165 F(boolean, is o)2.75 E -.165(ve)
-.165 G(rride set... */).165 E 2.75(}X)72 268.3 S(MapEv)-2.75 E(ent;)
-.165 E 36 270.45 36 281.45 DL 36 268.45 36 279.45 DL 41.5 279.7 36
279.7 DL 43.5 279.7 38 279.7 DL 49 279.7 43.5 279.7 DL(The e)72 304.7 Q
-.165(ve)-.275 G(nt member is set either to the windo).165 E 2.75(wt)
-.275 G(hat w)-2.75 E(as mapped or to its parent, depending on)-.11 E
(whether)72 317.7 Q F0(Structur)3.666 E(eNotify)-.198 E F1(or)3.666 E F0
(Substructur)3.666 E(eNotify)-.198 E F1 -.11(wa)3.666 G 2.75(ss).11 G
2.75(elected. The)-2.75 F(windo)2.75 E 2.75(wm)-.275 G(ember is set to)
-2.75 E(the windo)72 330.7 Q 2.75(wt)-.275 G(hat w)-2.75 E(as mapped.)
-.11 E(The o)5.5 E -.165(ve)-.165 G
(rride_redirect member is set to the o).165 E -.165(ve)-.165 G
(rride-redirect).165 E(attrib)72 343.7 Q(ute of the windo)-.22 E 4.18
-.715(w. W)-.275 H(indo).275 E 2.75(wm)-.275 G
(anager clients normally should ignore this windo)-2.75 E 2.75(wi)-.275
G 2.75(ft)-2.75 G(he)-2.75 E -.165(ove)72 356.7 S(rride-redirect attrib)
.165 E(ute is)-.22 E F0 -.814(Tr)3.666 G(ue).814 E F1 2.75(,b).916 G
(ecause these e)-2.75 E -.165(ve)-.275 G
(nts usually are generated from pop-ups,).165 E(which o)72 369.7 Q -.165
(ve)-.165 G(rride structure control.).165 E F0 2.75
(10.10.7. MappingNotify)72 395.7 R(Ev)2.75 E(ents)-.11 E F1(The X serv)
72 412.6 Q(er reports)-.165 E F0(MappingNotify)3.666 E F1 -2.365 -.275
(ev e)3.666 H(nts to all clients.).275 E(There is no mechanism to e)5.5
E(xpress dis-)-.165 E(interest in this e)72 425.6 Q -.165(ve)-.275 G
2.75(nt. The).165 F 2.75(Xs)2.75 G(erv)-2.75 E(er generates this e)-.165
E -.165(ve)-.275 G(nt type whene).165 E -.165(ve)-.275 G 2.75(rac).165 G
(lient application suc-)-2.75 E(cessfully calls:)72 438.6 Q<83>72 455.5
Q F0(XSetModi\214erMapping)24.566 E F1(to indicate which K)3.666 E -.165
(ey)-.275 G(Codes are to be used as modi\214ers).165 E<83>72 472.4 Q F0
(XChangeK)24.566 E(eyboardMapping)-.275 E F1(to change the k)3.666 E
-.165(ey)-.11 G(board mapping).165 E<83>72 489.3 Q F0(XSetP)24.566 E
(ointerMapping)-.22 E F1(to set the pointer mapping)3.666 E
(The structure for this e)72 506.2 Q -.165(ve)-.275 G(nt type contains:)
.165 E 36 527.85 36 538.85 DL 36 525.85 36 536.85 DL 41.5 524.1 36 524.1
DL 43.5 524.1 38 524.1 DL 49 524.1 43.5 524.1 DL(typedef struct {)72
542.6 Q(int type;)108 555.6 Q(/* MappingNotify */)143.634 E
(unsigned long serial;)108 568.6 Q
(/* # of last request processed by serv)88.337 E(er */)-.165 E
(Bool send_e)108 581.6 Q -.165(ve)-.275 G 100.998(nt; /*).165 F
(true if this came from a SendEv)2.75 E(ent request */)-.165 E
(Display *display;)108 594.6 Q(/* Display the e)102.692 E -.165(ve)-.275
G(nt w).165 E(as read from */)-.11 E -.44(Wi)108 607.6 S(ndo).44 E 2.75
(ww)-.275 G(indo)-2.75 E 99.106(w; /*)-.275 F(unused */)2.75 E
(int request;)108 620.6 Q(/* one of MappingModi\214er)130.808 E 2.75(,M)
-.44 G(appingK)-2.75 E -.165(ey)-.275 G(board,).165 E(MappingPointer */)
296.25 633.6 Q(int \214rst_k)108 646.6 Q -.165(ey)-.11 G 100.833
(code; /*).165 F(\214rst k)2.75 E -.165(ey)-.11 G(code */).165 E
(int count;)108 659.6 Q(/* de\214nes range of change w)138.134 E 2.75
<2e8c>-.715 G(rst_k)-2.75 E -.165(ey)-.11 G(code*/).165 E 2.75(}X)72
672.6 S(MappingEv)-2.75 E(ent;)-.165 E 36 674.75 36 685.75 DL 36 672.75
36 683.75 DL 41.5 684 36 684 DL 43.5 684 38 684 DL 49 684 43.5 684 DL(T\
he request member is set to indicate the kind of mapping change that oc\
curred and can be)72 709 Q F0(Map-)3.666 E(pingModi\214er)72 722 Q F1(,)
.916 E F0(MappingK)3.666 E(eyboard)-.275 E F1 2.75(,o).916 G(r)-2.75 E
F0(MappingP)3.666 E(ointer)-.22 E F1 5.5(.I).916 G 2.75(fi)-5.5 G 2.75
(ti)-2.75 G(s)-2.75 E F0(MappingModi\214er)3.666 E F1 2.75(,t).916 G(he)
-2.75 E F0(221)279.75 769 Q 0 Cg EP
%%Page: 222 227
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E/F1 11/Times-Roman@0 SF
(modi\214er mapping w)72 85 Q(as changed.)-.11 E(If it is)5.5 E F0
(MappingK)3.666 E(eyboard)-.275 E F1 2.75(,t).916 G(he k)-2.75 E -.165
(ey)-.11 G(board mapping w).165 E(as changed.)-.11 E(If it is)72 98 Q F0
(MappingP)3.666 E(ointer)-.22 E F1 2.75(,t).916 G(he pointer b)-2.75 E
(utton mapping w)-.22 E(as changed.)-.11 E(The \214rst_k)5.5 E -.165(ey)
-.11 G(code and count).165 E
(members are set only if the request member w)72 111 Q(as set to)-.11 E
F0(MappingK)3.666 E(eyboard)-.275 E F1 5.5(.T).916 G(he number in)-5.5 E
(\214rst_k)72 124 Q -.165(ey)-.11 G(code represents the \214rst number \
in the range of the altered mapping, and count represents).165 E
(the number of k)72 137 Q -.165(ey)-.11 G(codes altered.).165 E 1.76
-.88(To u)72 153.9 T(pdate the client application').88 E 2.75(sk)-.605 G
(no)-2.75 E(wledge of the k)-.275 E -.165(ey)-.11 G
(board, you should call).165 E F0(XRefr)3.666 E(eshK)-.198 E(ey-)-.275 E
(boardMapping)72 166.9 Q F1(.).916 E F0 2.75(10.10.8. Repar)72 192.9 R
(entNotify Ev)-.198 E(ents)-.11 E F1(The X serv)72 209.8 Q
(er can report)-.165 E F0(Repar)3.666 E(entNotify)-.198 E F1 -2.365
-.275(ev e)3.666 H(nts to clients w).275 E
(anting information about changing a)-.11 E(windo)72 222.8 Q(w')-.275 E
2.75(sp)-.605 G 2.75(arent. The)-2.75 F 2.75(Xs)2.75 G(erv)-2.75 E
(er generates this e)-.165 E -.165(ve)-.275 G(nt whene).165 E -.165(ve)
-.275 G 2.75(rac).165 G(lient application calls)-2.75 E F0(XRepar)3.666
E(-)-.407 E(entW)72 235.8 Q(indo)-.198 E(w)-.11 E F1(and the windo)3.666
E 2.75(wi)-.275 G 2.75(sa)-2.75 G(ctually reparented.)-2.75 E 1.76 -.88
(To r)72 252.7 T(ecei).88 E -.165(ve)-.275 G F0(Repar)3.831 E(entNotify)
-.198 E F1 -2.365 -.275(ev e)3.666 H(nts, set the).275 E F0(Structur)
3.666 E(eNotifyMask)-.198 E F1(bit in the e)3.666 E -.165(ve)-.275 G
(nt-mask attrib).165 E(ute)-.22 E(of the windo)72 265.7 Q 2.75(wo)-.275
G 2.75(rt)-2.75 G(he)-2.75 E F0(Substructur)3.666 E(eNotifyMask)-.198 E
F1(bit in the e)3.666 E -.165(ve)-.275 G(nt-mask attrib).165 E
(ute of either the old or)-.22 E(the ne)72 278.7 Q 2.75(wp)-.275 G
(arent windo)-2.75 E 2.75(w\()-.275 G(in which case, reparenting an)
-2.75 E 2.75(yc)-.165 G(hild generates an e)-2.75 E -.165(ve)-.275 G
(nt\).).165 E(The structure for this e)72 295.6 Q -.165(ve)-.275 G
(nt type contains:).165 E .44 LW 36 317.25 36 328.25 DL 36 315.25 36
326.25 DL 41.5 313.5 36 313.5 DL 43.5 313.5 38 313.5 DL 49 313.5 43.5
313.5 DL(typedef struct {)72 332 Q(int type;)108 345 Q
(/* ReparentNotify */)143.634 E(unsigned long serial;)108 358 Q
(/* # of last request processed by serv)88.337 E(er */)-.165 E
(Bool send_e)108 371 Q -.165(ve)-.275 G 100.998(nt; /*).165 F
(true if this came from a SendEv)2.75 E(ent request */)-.165 E
(Display *display;)108 384 Q(/* Display the e)102.692 E -.165(ve)-.275 G
(nt w).165 E(as read from */)-.11 E -.44(Wi)108 397 S(ndo).44 E 2.75(we)
-.275 G -.165(ve)-3.025 G(nt;).165 E -.44(Wi)108 410 S(ndo).44 E 2.75
(ww)-.275 G(indo)-2.75 E(w;)-.275 E -.44(Wi)108 423 S(ndo).44 E 2.75(wp)
-.275 G(arent;)-2.75 E(int x, y;)108 436 Q(Bool o)108 449 Q -.165(ve)
-.165 G(rride_redirect;).165 E 2.75(}X)72 462 S(ReparentEv)-2.75 E(ent;)
-.165 E 36 464.15 36 475.15 DL 36 462.15 36 473.15 DL 41.5 473.4 36
473.4 DL 43.5 473.4 38 473.4 DL 49 473.4 43.5 473.4 DL(The e)72 498.4 Q
-.165(ve)-.275 G(nt member is set either to the reparented windo).165 E
2.75(wo)-.275 G 2.75(rt)-2.75 G 2.75(ot)-2.75 G(he old or the ne)-2.75 E
2.75(wp)-.275 G(arent, depend-)-2.75 E(ing on whether)72 511.4 Q F0
(Structur)3.666 E(eNotify)-.198 E F1(or)3.666 E F0(Substructur)3.666 E
(eNotify)-.198 E F1 -.11(wa)3.666 G 2.75(ss).11 G 2.75(elected. The)
-2.75 F(windo)2.75 E 2.75(wm)-.275 G(ember is)-2.75 E(set to the windo)
72 524.4 Q 2.75(wt)-.275 G(hat w)-2.75 E(as reparented.)-.11 E
(The parent member is set to the ne)5.5 E 2.75(wp)-.275 G(arent windo)
-2.75 E 4.18 -.715(w. T)-.275 H(he).715 E 2.75(xa)72 537.4 S
(nd y members are set to the reparented windo)-2.75 E(w')-.275 E 2.75
(sc)-.605 G(oordinates relati)-2.75 E .33 -.165(ve t)-.275 H 2.75(ot)
.165 G(he ne)-2.75 E 2.75(wp)-.275 G(arent win-)-2.75 E(do)72 550.4 Q
(w')-.275 E 2.75(so)-.605 G(rigin and de\214ne the upper)-2.75 E
(-left outer corner of the reparented windo)-.22 E 4.18 -.715(w. T)-.275
H(he o).715 E -.165(ve)-.165 G(rride_redi-).165 E
(rect member is set to the o)72 563.4 Q -.165(ve)-.165 G
(rride-redirect attrib).165 E(ute of the windo)-.22 E 2.75(ws)-.275 G
(peci\214ed by the windo)-2.75 E 2.75(wm)-.275 G(em-)-2.75 E(ber)72
576.4 Q 5.5(.W)-.605 G(indo)-5.94 E 2.75(wm)-.275 G
(anager clients normally should ignore this windo)-2.75 E 2.75(wi)-.275
G 2.75(ft)-2.75 G(he o)-2.75 E -.165(ve)-.165 G(rride_redirect mem-).165
E(ber is)72 589.4 Q F0 -.814(Tr)3.666 G(ue).814 E F1(.).916 E F0 2.75
(10.10.9. UnmapNotify)72 615.4 R(Ev)2.75 E(ents)-.11 E F1(The X serv)72
632.3 Q(er can report)-.165 E F0(UnmapNotify)3.666 E F1 -2.365 -.275
(ev e)3.666 H(nts to clients w).275 E
(anting information about which win-)-.11 E(do)72 645.3 Q
(ws are unmapped.)-.275 E(The X serv)5.5 E(er generates this e)-.165 E
-.165(ve)-.275 G(nt type whene).165 E -.165(ve)-.275 G 2.75(rac).165 G
(lient application)-2.75 E(changes the windo)72 658.3 Q(w')-.275 E 2.75
(ss)-.605 G(tate from mapped to unmapped.)-2.75 E 1.76 -.88(To r)72
675.2 T(ecei).88 E -.165(ve)-.275 G F0(UnmapNotify)3.831 E F1 -2.365
-.275(ev e)3.666 H(nts, set the).275 E F0(Structur)3.666 E(eNotifyMask)
-.198 E F1(bit in the e)3.666 E -.165(ve)-.275 G(nt-mask attrib).165 E
(ute of)-.22 E(the windo)72 688.2 Q 2.75(wo)-.275 G 2.75(rt)-2.75 G(he)
-2.75 E F0(Substructur)3.666 E(eNotifyMask)-.198 E F1(bit in the e)3.666
E -.165(ve)-.275 G(nt-mask attrib).165 E(ute of the parent windo)-.22 E
(w)-.275 E(\(in which case, unmapping an)72 701.2 Q 2.75(yc)-.165 G
(hild windo)-2.75 E 2.75(wg)-.275 G(enerates an e)-2.75 E -.165(ve)-.275
G(nt\).).165 E(The structure for this e)72 718.1 Q -.165(ve)-.275 G
(nt type contains:).165 E F0(222)279.75 769 Q 0 Cg EP
%%Page: 223 228
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E .44 LW 36 76.75 36 87.75 DL 36 74.75
36 85.75 DL 41.5 73 36 73 DL 43.5 73 38 73 DL 49 73 43.5 73 DL/F1 11
/Times-Roman@0 SF(typedef struct {)72 91.5 Q(int type;)108 104.5 Q
(/* UnmapNotify */)143.634 E(unsigned long serial;)108 117.5 Q
(/* # of last request processed by serv)88.337 E(er */)-.165 E
(Bool send_e)108 130.5 Q -.165(ve)-.275 G 100.998(nt; /*).165 F
(true if this came from a SendEv)2.75 E(ent request */)-.165 E
(Display *display;)108 143.5 Q(/* Display the e)102.692 E -.165(ve)-.275
G(nt w).165 E(as read from */)-.11 E -.44(Wi)108 156.5 S(ndo).44 E 2.75
(we)-.275 G -.165(ve)-3.025 G(nt;).165 E -.44(Wi)108 169.5 S(ndo).44 E
2.75(ww)-.275 G(indo)-2.75 E(w;)-.275 E(Bool from_con\214gure;)108 182.5
Q 2.75(}X)72 195.5 S(UnmapEv)-2.75 E(ent;)-.165 E 36 197.65 36 208.65 DL
36 195.65 36 206.65 DL 41.5 206.9 36 206.9 DL 43.5 206.9 38 206.9 DL 49
206.9 43.5 206.9 DL(The e)72 231.9 Q -.165(ve)-.275 G
(nt member is set either to the unmapped windo).165 E 2.75(wo)-.275 G
2.75(rt)-2.75 G 2.75(oi)-2.75 G(ts parent, depending on whether)-2.75 E
F0(Structur)72.916 244.9 Q(eNotify)-.198 E F1(or)3.666 E F0(Substructur)
3.666 E(eNotify)-.198 E F1 -.11(wa)3.666 G 2.75(ss).11 G 2.75
(elected. This)-2.75 F(is the windo)2.75 E 2.75(wu)-.275 G
(sed by the X serv)-2.75 E(er)-.165 E(to report the e)72 257.9 Q -.165
(ve)-.275 G 2.75(nt. The).165 F(windo)2.75 E 2.75(wm)-.275 G
(ember is set to the windo)-2.75 E 2.75(wt)-.275 G(hat w)-2.75 E
(as unmapped.)-.11 E(The)5.5 E(from_con\214gure member is set to)72
270.9 Q F0 -.814(Tr)3.666 G(ue).814 E F1(if the e)3.666 E -.165(ve)-.275
G(nt w).165 E(as generated as a result of a resizing of the)-.11 E
(windo)72 283.9 Q(w')-.275 E 2.75(sp)-.605 G(arent when the windo)-2.75
E 2.75(wi)-.275 G(tself had a win_gra)-2.75 E(vity of)-.22 E F0
(UnmapGra)3.666 E(vity)-.275 E F1(.).916 E F0 2.75(10.10.10. V)72 309.9
R(isibilityNotify Ev)-.407 E(ents)-.11 E F1(The X serv)72 326.8 Q
(er can report)-.165 E F0 -.407(Vi)3.666 G(sibilityNotify).407 E F1
-2.365 -.275(ev e)3.666 H(nts to clients w).275 E(anting an)-.11 E 2.75
(yc)-.165 G(hange in the visibility of)-2.75 E(the speci\214ed windo)72
339.8 Q 4.18 -.715(w. A)-.275 H(re)3.465 E(gion of a windo)-.165 E 2.75
(wi)-.275 G 2.75(sv)-2.75 G
(isible if someone looking at the screen can actu-)-2.75 E(ally see it.)
72 352.8 Q(The X serv)5.5 E(er generates this e)-.165 E -.165(ve)-.275 G
(nt whene).165 E -.165(ve)-.275 G 2.75(rt).165 G
(he visibility changes state.)-2.75 E(Ho)5.5 E(we)-.275 E -.165(ve)-.275
G .88 -.44(r, t).165 H(his).44 E -2.365 -.275(ev e)72 365.8 T(nt is ne)
.275 E -.165(ve)-.275 G 2.75(rg).165 G(enerated for windo)-2.75 E
(ws whose class is)-.275 E F0(InputOnly)3.666 E F1(.).916 E(All)72 382.7
Q F0 -.407(Vi)3.666 G(sibilityNotify).407 E F1 -2.365 -.275(ev e)3.666 H
(nts caused by a hierarch).275 E 2.75(yc)-.055 G
(hange are generated after an)-2.75 E 2.75(yh)-.165 G(ierarch)-2.75 E
2.75(ye)-.055 G -.165(ve)-3.025 G(nt).165 E(\()72 395.7 Q F0
(UnmapNotify).916 E F1(,).916 E F0(MapNotify)3.666 E F1(,).916 E F0
(Con\214gur)3.666 E(eNotify)-.198 E F1(,).916 E F0(Gra)3.666 E
(vityNotify)-.275 E F1(,).916 E F0(Cir)3.666 E(culateNotify)-.198 E F1
2.75(\)c).916 G(aused by)-2.75 E(that change.)72 408.7 Q(An)5.5 E(y)
-.165 E F0 -.407(Vi)3.666 G(sibilityNotify).407 E F1 -2.365 -.275(ev e)
3.666 H(nt on a gi).275 E -.165(ve)-.275 G 2.75(nw).165 G(indo)-2.75 E
2.75(wi)-.275 G 2.75(sg)-2.75 G(enerated before an)-2.75 E(y)-.165 E F0
(Expose)3.666 E F1 -2.365 -.275(ev e)72 421.7 T(nts on that windo).275 E
1.43 -.715(w, b)-.275 H(ut it is not required that all).495 E F0 -.407
(Vi)3.666 G(sibilityNotify).407 E F1 -2.365 -.275(ev e)3.666 H
(nts on all windo).275 E(ws be)-.275 E(generated before all)72 434.7 Q
F0(Expose)3.666 E F1 -2.365 -.275(ev e)3.666 H(nts on all windo).275 E
2.75(ws. The)-.275 F 2.75(Xp)2.75 G
(rotocol does not constrain the order)-2.75 E(-)-.22 E(ing of)72 447.7 Q
F0 -.407(Vi)3.666 G(sibilityNotify).407 E F1 -2.365 -.275(ev e)3.666 H
(nts with respect to).275 E F0 -.275(Fo)3.666 G(cusOut).275 E F1(,).916
E F0(EnterNotify)3.666 E F1 2.75(,a).916 G(nd)-2.75 E F0(Lea)3.666 E
-.11(ve)-.275 G(Notify).11 E F1 -2.365 -.275(ev e)3.666 H(nts.).275 E
1.76 -.88(To r)72 464.6 T(ecei).88 E -.165(ve)-.275 G F0 -.407(Vi)3.831
G(sibilityNotify).407 E F1 -2.365 -.275(ev e)3.666 H(nts, set the).275 E
F0 -.407(Vi)3.666 G(sibilityChangeMask).407 E F1(bit in the e)3.666 E
-.165(ve)-.275 G(nt-mask attrib).165 E(ute)-.22 E(of the windo)72 477.6
Q -.715(w.)-.275 G(The structure for this e)72 494.5 Q -.165(ve)-.275 G
(nt type contains:).165 E 36 516.15 36 527.15 DL 36 514.15 36 525.15 DL
41.5 512.4 36 512.4 DL 43.5 512.4 38 512.4 DL 49 512.4 43.5 512.4 DL
(typedef struct {)72 530.9 Q(int type;)108 543.9 Q(/* V)143.634 E
(isibilityNotify */)-.66 E(unsigned long serial;)108 556.9 Q
(/* # of last request processed by serv)88.337 E(er */)-.165 E
(Bool send_e)108 569.9 Q -.165(ve)-.275 G 100.998(nt; /*).165 F
(true if this came from a SendEv)2.75 E(ent request */)-.165 E
(Display *display;)108 582.9 Q(/* Display the e)102.692 E -.165(ve)-.275
G(nt w).165 E(as read from */)-.11 E -.44(Wi)108 595.9 S(ndo).44 E 2.75
(ww)-.275 G(indo)-2.75 E(w;)-.275 E(int state;)108 608.9 Q 2.75(}X)72
621.9 S -.66(Vi)-2.75 G(sibilityEv).66 E(ent;)-.165 E 36 624.05 36
635.05 DL 36 622.05 36 633.05 DL 41.5 633.3 36 633.3 DL 43.5 633.3 38
633.3 DL 49 633.3 43.5 633.3 DL(The windo)72 658.3 Q 2.75(wm)-.275 G
(ember is set to the windo)-2.75 E 2.75(ww)-.275 G
(hose visibility state changes.)-2.75 E(The state member is set)5.5 E
(to the state of the windo)72 671.3 Q(w')-.275 E 2.75(sv)-.605 G
(isibility and can be)-2.75 E F0 -.407(Vi)3.666 G(sibilityUnobscur).407
E(ed)-.198 E F1(,).916 E F0 -.407(Vi)3.666 G(sibilityP).407 E
(artiallyOb-)-.11 E(scur)72 684.3 Q(ed)-.198 E F1 2.75(,o).916 G(r)-2.75
E F0 -.407(Vi)3.666 G(sibilityFullyObscur).407 E(ed)-.198 E F1 5.5(.T)
.916 G(he X serv)-5.5 E(er ignores all of a windo)-.165 E(w')-.275 E
2.75(ss)-.605 G(ubwindo)-2.75 E(ws when)-.275 E
(determining the visibility state of the windo)72 697.3 Q 2.75(wa)-.275
G(nd processes)-2.75 E F0 -.407(Vi)3.666 G(sibilityNotify).407 E F1
-2.365 -.275(ev e)3.666 H(nts according to).275 E(the follo)72 710.3 Q
(wing:)-.275 E F0(223)279.75 769 Q 0 Cg EP
%%Page: 224 229
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E/F1 11/Times-Roman@0 SF 23.65<8357>72
85 S(hen the windo)-23.65 E 2.75(wc)-.275 G
(hanges state from partially obscured, fully obscured, or not vie)-2.75
E -.11(wa)-.275 G(ble to).11 E(vie)99.5 98 Q -.11(wa)-.275 G
(ble and completely unobscured, the X serv).11 E(er generates the e)
-.165 E -.165(ve)-.275 G(nt with the state mem-).165 E(ber of the)99.5
111 Q F0(XV)3.666 E(isibilityEv)-.407 E(ent)-.11 E F1(structure set to)
3.666 E F0 -.407(Vi)3.666 G(sibilityUnobscur).407 E(ed)-.198 E F1(.).916
E 23.65<8357>72 127.9 S(hen the windo)-23.65 E 2.75(wc)-.275 G
(hanges state from vie)-2.75 E -.11(wa)-.275 G
(ble and completely unobscured or not vie).11 E -.11(wa)-.275 G(ble).11
E(to vie)99.5 140.9 Q -.11(wa)-.275 G
(ble and partially obscured, the X serv).11 E(er generates the e)-.165 E
-.165(ve)-.275 G(nt with the state member).165 E(of the)99.5 153.9 Q F0
(XV)3.666 E(isibilityEv)-.407 E(ent)-.11 E F1(structure set to)3.666 E
F0 -.407(Vi)3.666 G(sibilityP).407 E(artiallyObscur)-.11 E(ed)-.198 E F1
(.).916 E 23.65<8357>72 170.8 S(hen the windo)-23.65 E 2.75(wc)-.275 G
(hanges state from vie)-2.75 E -.11(wa)-.275 G
(ble and completely unobscured, vie).11 E -.11(wa)-.275 G(ble and).11 E
(partially obscured, or not vie)99.5 183.8 Q -.11(wa)-.275 G(ble to vie)
.11 E -.11(wa)-.275 G(ble and fully obscured, the X serv).11 E
(er generates)-.165 E(the e)99.5 196.8 Q -.165(ve)-.275 G
(nt with the state member of the).165 E F0(XV)3.666 E(isibilityEv)-.407
E(ent)-.11 E F1(structure set to)3.666 E F0 -.407(Vi)3.666 G
(sibilityFully-).407 E(Obscur)99.5 209.8 Q(ed)-.198 E F1(.).916 E F0
2.75(10.11. Structur)72 235.8 R 2.75(eC)-.198 G(ontr)-2.75 E(ol Ev)-.198
E(ents)-.11 E F1(This section discusses:)72 252.7 Q<83>72 269.6 Q F0
(Cir)24.566 E(culateRequest)-.198 E F1 -2.365 -.275(ev e)3.666 H(nts)
.275 E<83>72 286.5 Q F0(Con\214gur)24.566 E(eRequest)-.198 E F1 -2.365
-.275(ev e)3.666 H(nts).275 E<83>72 303.4 Q F0(MapRequest)24.566 E F1
-2.365 -.275(ev e)3.666 H(nts).275 E<83>72 320.3 Q F0(ResizeRequest)
24.566 E F1 -2.365 -.275(ev e)3.666 H(nts).275 E F0 2.75(10.11.1. Cir)72
346.3 R(culateRequest Ev)-.198 E(ents)-.11 E F1(The X serv)72 363.2 Q
(er can report)-.165 E F0(Cir)3.666 E(culateRequest)-.198 E F1 -2.365
-.275(ev e)3.666 H(nts to clients w).275 E
(anting information about when)-.11 E
(another client initiates a circulate windo)72 376.2 Q 2.75(wr)-.275 G
(equest on a speci\214ed windo)-2.75 E 4.18 -.715(w. T)-.275 H
(he X serv).715 E(er generates)-.165 E(this e)72 389.2 Q -.165(ve)-.275
G(nt type whene).165 E -.165(ve)-.275 G 2.75(rac).165 G
(lient initiates a circulate windo)-2.75 E 2.75(wr)-.275 G
(equest on a windo)-2.75 E 2.75(wa)-.275 G(nd a subwin-)-2.75 E(do)72
402.2 Q 2.75(wa)-.275 G(ctually needs to be restack)-2.75 E 2.75
(ed. The)-.11 F(client initiates a circulate windo)2.75 E 2.75(wr)-.275
G(equest on the windo)-2.75 E(w)-.275 E(by calling)72 415.2 Q F0(XCir)
3.666 E(culateSubwindo)-.198 E(ws)-.11 E F1(,).916 E F0(XCir)3.666 E
(culateSubwindo)-.198 E(wsUp)-.11 E F1 2.75(,o).916 G(r)-2.75 E F0(XCir)
3.666 E(culateSubwindo)-.198 E(ws-)-.11 E(Do)72 428.2 Q(wn)-.11 E F1(.)
.916 E 1.76 -.88(To r)72 445.1 T(ecei).88 E -.165(ve)-.275 G F0(Cir)
3.831 E(culateRequest)-.198 E F1 -2.365 -.275(ev e)3.666 H(nts, set the)
.275 E F0(Substructur)3.666 E(eRedir)-.198 E(ectMask)-.198 E F1
(in the e)3.666 E -.165(ve)-.275 G(nt-mask).165 E(attrib)72 458.1 Q
(ute of the windo)-.22 E 4.18 -.715(w. T)-.275 H
(hen, in the future, the circulate windo).715 E 2.75(wr)-.275 G
(equest for the speci\214ed win-)-2.75 E(do)72 471.1 Q 2.75(wi)-.275 G
2.75(sn)-2.75 G(ot e)-2.75 E -.165(xe)-.165 G(cuted, and thus, an).165 E
2.75(ys)-.165 G(ubwindo)-2.75 E(w')-.275 E 2.75(sp)-.605 G
(osition in the stack is not changed.)-2.75 E -.165(Fo)5.5 G 2.75(re)
.165 G(xam-)-2.915 E(ple, suppose a client application calls)72 484.1 Q
F0(XCir)3.666 E(culateSubwindo)-.198 E(wsUp)-.11 E F1
(to raise a subwindo)3.666 E 2.75(wt)-.275 G 2.75(ot)-2.75 G(he)-2.75 E
(top of the stack.)72 497.1 Q(If you had selected)5.5 E F0(Substructur)
3.666 E(eRedir)-.198 E(ectMask)-.198 E F1(on the windo)3.666 E 1.43
-.715(w, t)-.275 H(he X serv).715 E(er)-.165 E(reports to you a)72 510.1
Q F0(Cir)3.666 E(culateRequest)-.198 E F1 -2.365 -.275(ev e)3.666 H
(nt and does not raise the subwindo).275 E 2.75(wt)-.275 G 2.75(ot)-2.75
G(he top of the)-2.75 E(stack.)72 523.1 Q(The structure for this e)72
540 Q -.165(ve)-.275 G(nt type contains:).165 E .44 LW 36 561.65 36
572.65 DL 36 559.65 36 570.65 DL 41.5 557.9 36 557.9 DL 43.5 557.9 38
557.9 DL 49 557.9 43.5 557.9 DL(typedef struct {)72 576.4 Q(int type;)
108 589.4 Q(/* CirculateRequest */)143.634 E(unsigned long serial;)108
602.4 Q(/* # of last request processed by serv)88.337 E(er */)-.165 E
(Bool send_e)108 615.4 Q -.165(ve)-.275 G 100.998(nt; /*).165 F
(true if this came from a SendEv)2.75 E(ent request */)-.165 E
(Display *display;)108 628.4 Q(/* Display the e)102.692 E -.165(ve)-.275
G(nt w).165 E(as read from */)-.11 E -.44(Wi)108 641.4 S(ndo).44 E 2.75
(wp)-.275 G(arent;)-2.75 E -.44(Wi)108 654.4 S(ndo).44 E 2.75(ww)-.275 G
(indo)-2.75 E(w;)-.275 E(int place;)108 667.4 Q(/* PlaceOnT)139.366 E
(op, PlaceOnBottom */)-.88 E 2.75(}X)72 680.4 S(CirculateRequestEv)-2.75
E(ent;)-.165 E 36 682.55 36 693.55 DL 36 680.55 36 691.55 DL 41.5 691.8
36 691.8 DL 43.5 691.8 38 691.8 DL 49 691.8 43.5 691.8 DL
(The parent member is set to the parent windo)72 716.8 Q 4.18 -.715
(w. T)-.275 H(he windo).715 E 2.75(wm)-.275 G
(ember is set to the subwindo)-2.75 E 2.75(wt)-.275 G(o)-2.75 E
(be restack)72 729.8 Q 2.75(ed. The)-.11 F
(place member is set to what the ne)2.75 E 2.75(wp)-.275 G
(osition in the stacking order should be)-2.75 E F0(224)279.75 769 Q 0
Cg EP
%%Page: 225 230
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E/F1 11/Times-Roman@0 SF(and is either)
72 85 Q F0(PlaceOnT)3.666 E(op)-1.012 E F1(or)3.666 E F0(PlaceOnBottom)
3.666 E F1 5.5(.I).916 G 2.75(fi)-5.5 G 2.75(ti)-2.75 G(s)-2.75 E F0
(PlaceOnT)3.666 E(op)-1.012 E F1 2.75(,t).916 G(he subwindo)-2.75 E 2.75
(ws)-.275 G(hould be)-2.75 E(on top of all siblings.)72 98 Q(If it is)
5.5 E F0(PlaceOnBottom)3.666 E F1 2.75(,t).916 G(he subwindo)-2.75 E
2.75(ws)-.275 G(hould be belo)-2.75 E 2.75(wa)-.275 G(ll siblings.)-2.75
E F0 2.75(10.11.2. Con\214gur)72 124 R(eRequest Ev)-.198 E(ents)-.11 E
F1(The X serv)72 140.9 Q(er can report)-.165 E F0(Con\214gur)3.666 E
(eRequest)-.198 E F1 -2.365 -.275(ev e)3.666 H(nts to clients w).275 E
(anting information about when a)-.11 E(dif)72 153.9 Q
(ferent client initiates a con\214gure windo)-.275 E 2.75(wr)-.275 G
(equest on an)-2.75 E 2.75(yc)-.165 G(hild of a speci\214ed windo)-2.75
E 4.18 -.715(w. T)-.275 H(he con-).715 E(\214gure windo)72 166.9 Q 2.75
(wr)-.275 G(equest attempts to recon\214gure a windo)-2.75 E(w')-.275 E
2.75(ss)-.605 G(ize, position, border)-2.75 E 2.75(,a)-.44 G
(nd stacking)-2.75 E(order)72 179.9 Q 5.5(.T)-.605 G(he X serv)-5.5 E
(er generates this e)-.165 E -.165(ve)-.275 G(nt whene).165 E -.165(ve)
-.275 G 2.75(rad).165 G(if)-2.75 E
(ferent client initiates a con\214gure windo)-.275 E(w)-.275 E
(request on a windo)72 192.9 Q 2.75(wb)-.275 G 2.75(yc)-2.75 G(alling)
-2.75 E F0(XCon\214gur)3.666 E(eW)-.198 E(indo)-.198 E(w)-.11 E F1(,)
.916 E F0(XLo)3.666 E(werW)-.11 E(indo)-.198 E(w)-.11 E F1(,).916 E F0
(XRaiseW)3.666 E(indo)-.198 E(w)-.11 E F1(,).916 E F0(XMapRaised)72.916
205.9 Q F1(,).916 E F0(XMo)3.666 E -.11(ve)-.11 G(ResizeW).11 E(indo)
-.198 E(w)-.11 E F1(,).916 E F0(XMo)3.666 E -.11(ve)-.11 G -.198(Wi).11
G(ndo).198 E(w)-.11 E F1(,).916 E F0(XResizeW)3.666 E(indo)-.198 E(w)
-.11 E F1(,).916 E F0(XRestackW)3.666 E(in-)-.198 E(do)72 218.9 Q(ws)
-.11 E F1 2.75(,o).916 G(r)-2.75 E F0(XSetW)3.666 E(indo)-.198 E
(wBorderW)-.11 E(idth)-.198 E F1(.).916 E 1.76 -.88(To r)72 235.8 T
(ecei).88 E -.165(ve)-.275 G F0(Con\214gur)3.831 E(eRequest)-.198 E F1
-2.365 -.275(ev e)3.666 H(nts, set the).275 E F0(Substructur)3.666 E
(eRedir)-.198 E(ectMask)-.198 E F1(bit in the e)3.666 E -.165(ve)-.275 G
(nt-mask).165 E(attrib)72 248.8 Q(ute of the windo)-.22 E -.715(w.)-.275
G F0(Con\214gur)7.131 E(eRequest)-.198 E F1 -2.365 -.275(ev e)3.666 H
(nts are generated when a).275 E F0(Con\214gur)3.666 E(eW)-.198 E(indo)
-.198 E(w)-.11 E F1(protocol request is issued on a child windo)72 261.8
Q 2.75(wb)-.275 G 2.75(ya)-2.75 G(nother client.)-2.75 E -.165(Fo)5.5 G
2.75(re).165 G(xample, suppose a client)-2.915 E(application calls)72
274.8 Q F0(XLo)3.666 E(werW)-.11 E(indo)-.198 E(w)-.11 E F1(to lo)3.666
E(wer a windo)-.275 E 4.18 -.715(w. I)-.275 H 2.75(fy).715 G
(ou had selected)-2.75 E F0(Substructur)3.666 E(eRedi-)-.198 E -.198(re)
72 287.8 S(ctMask).198 E F1(on the parent windo)3.666 E 2.75(wa)-.275 G
(nd if the o)-2.75 E -.165(ve)-.165 G(rride-redirect attrib).165 E
(ute of the windo)-.22 E 2.75(wi)-.275 G 2.75(ss)-2.75 G(et to)-2.75 E
F0 -.275(Fa)72.916 300.8 S(lse).275 E F1 2.75(,t).916 G(he X serv)-2.75
E(er reports a)-.165 E F0(Con\214gur)3.666 E(eRequest)-.198 E F1 -2.365
-.275(ev e)3.666 H(nt to you and does not lo).275 E(wer the speci\214ed)
-.275 E(windo)72 313.8 Q -.715(w.)-.275 G(The structure for this e)72
330.7 Q -.165(ve)-.275 G(nt type contains:).165 E .44 LW 36 352.35 36
363.35 DL 36 350.35 36 361.35 DL 41.5 348.6 36 348.6 DL 43.5 348.6 38
348.6 DL 49 348.6 43.5 348.6 DL(typedef struct {)72 367.1 Q(int type;)
108 380.1 Q(/* Con\214gureRequest */)143.634 E(unsigned long serial;)108
393.1 Q(/* # of last request processed by serv)88.337 E(er */)-.165 E
(Bool send_e)108 406.1 Q -.165(ve)-.275 G 100.998(nt; /*).165 F
(true if this came from a SendEv)2.75 E(ent request */)-.165 E
(Display *display;)108 419.1 Q(/* Display the e)102.692 E -.165(ve)-.275
G(nt w).165 E(as read from */)-.11 E -.44(Wi)108 432.1 S(ndo).44 E 2.75
(wp)-.275 G(arent;)-2.75 E -.44(Wi)108 445.1 S(ndo).44 E 2.75(ww)-.275 G
(indo)-2.75 E(w;)-.275 E(int x, y;)108 458.1 Q(int width, height;)108
471.1 Q(int border_width;)108 484.1 Q -.44(Wi)108 497.1 S(ndo).44 E 2.75
(wa)-.275 G(bo)-2.75 E -.165(ve)-.165 G(;).165 E(int detail;)108 510.1 Q
(/* Abo)138.134 E -.165(ve)-.165 G 2.75(,B).165 G(elo)-2.75 E 1.43 -.715
(w, T)-.275 H(opIf, BottomIf, Opposite */)-.165 E(unsigned long v)108
523.1 Q(alue_mask;)-.275 E 2.75(}X)72 536.1 S(Con\214gureRequestEv)-2.75
E(ent;)-.165 E 36 538.25 36 549.25 DL 36 536.25 36 547.25 DL 41.5 547.5
36 547.5 DL 43.5 547.5 38 547.5 DL 49 547.5 43.5 547.5 DL
(The parent member is set to the parent windo)72 572.5 Q 4.18 -.715
(w. T)-.275 H(he windo).715 E 2.75(wm)-.275 G(ember is set to the windo)
-2.75 E 2.75(ww)-.275 G(hose)-2.75 E(size, position, border width, and/\
or stacking order is to be recon\214gured.)72 585.5 Q(The v)5.5 E
(alue_mask member)-.275 E
(indicates which components were speci\214ed in the)72 598.5 Q F0
(Con\214gur)3.666 E(eW)-.198 E(indo)-.198 E(w)-.11 E F1
(protocol request.)3.666 E(The cor)5.5 E(-)-.22 E(responding v)72 611.5
Q(alues are reported as gi)-.275 E -.165(ve)-.275 G 2.75(ni).165 G 2.75
(nt)-2.75 G(he request.)-2.75 E(The remaining v)5.5 E
(alues are \214lled in from)-.275 E(the current geometry of the windo)72
624.5 Q 1.43 -.715(w, e)-.275 H(xcept in the case of abo).55 E .33 -.165
(ve \()-.165 H(sibling\) and detail \(stack-mode\),).165 E
(which are reported as)72 637.5 Q F0(None)3.666 E F1(and)3.666 E F0(Abo)
3.666 E -.11(ve)-.11 G F1 2.75(,r)1.026 G(especti)-2.75 E -.165(ve)-.275
G(ly).165 E 2.75(,i)-.715 G 2.75(ft)-2.75 G(he)-2.75 E 2.75(ya)-.165 G
(re not gi)-2.75 E -.165(ve)-.275 G 2.75(ni).165 G 2.75(nt)-2.75 G
(he request.)-2.75 E F0 2.75(10.11.3. MapRequest)72 663.5 R(Ev)2.75 E
(ents)-.11 E F1(The X serv)72 680.4 Q(er can report)-.165 E F0
(MapRequest)3.666 E F1 -2.365 -.275(ev e)3.666 H(nts to clients w).275 E
(anting information about a dif)-.11 E(ferent)-.275 E(client')72 693.4 Q
2.75(sd)-.605 G(esire to map windo)-2.75 E 2.75(ws. A)-.275 F(windo)2.75
E 2.75(wi)-.275 G 2.75(sc)-2.75 G(onsidered mapped when a map windo)
-2.75 E 2.75(wr)-.275 G(equest)-2.75 E 2.75(completes. The)72 706.4 R
2.75(Xs)2.75 G(erv)-2.75 E(er generates this e)-.165 E -.165(ve)-.275 G
(nt whene).165 E -.165(ve)-.275 G 2.75(rad).165 G(if)-2.75 E
(ferent client initiates a map windo)-.275 E(w)-.275 E
(request on an unmapped windo)72 719.4 Q 2.75(ww)-.275 G(hose o)-2.75 E
-.165(ve)-.165 G(rride_redirect member is set to).165 E F0 -.275(Fa)
3.666 G(lse).275 E F1 5.5(.C).916 G(lients initiate)-5.5 E(map windo)72
732.4 Q 2.75(wr)-.275 G(equests by calling)-2.75 E F0(XMapW)3.666 E
(indo)-.198 E(w)-.11 E F1(,).916 E F0(XMapRaised)3.666 E F1 2.75(,o).916
G(r)-2.75 E F0(XMapSubwindo)3.666 E(ws)-.11 E F1(.).916 E F0(225)279.75
769 Q 0 Cg EP
%%Page: 226 231
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E/F1 11/Times-Roman@0 SF 1.76 -.88(To r)
72 85 T(ecei).88 E -.165(ve)-.275 G F0(MapRequest)3.831 E F1 -2.365
-.275(ev e)3.666 H(nts, set the).275 E F0(Substructur)3.666 E(eRedir)
-.198 E(ectMask)-.198 E F1(bit in the e)3.666 E -.165(ve)-.275 G
(nt-mask).165 E(attrib)72 98 Q(ute of the windo)-.22 E 4.18 -.715(w. T)
-.275 H(his means another client').715 E 2.75(sa)-.605 G
(ttempts to map a child windo)-2.75 E 2.75(wb)-.275 G 2.75(yc)-2.75 G
(alling)-2.75 E(one of the map windo)72 111 Q 2.75(wr)-.275 G
(equest functions is intercepted, and you are sent a)-2.75 E F0
(MapRequest)3.666 E F1(instead.)3.666 E -.165(Fo)72 124 S 2.75(re).165 G
(xample, suppose a client application calls)-2.915 E F0(XMapW)3.666 E
(indo)-.198 E(w)-.11 E F1(to map a windo)3.666 E 4.18 -.715(w. I)-.275 H
2.75(fy).715 G(ou \(usually)-2.75 E 2.75(aw)72 137 S(indo)-2.75 E 2.75
(wm)-.275 G(anager\) had selected)-2.75 E F0(Substructur)3.666 E(eRedir)
-.198 E(ectMask)-.198 E F1(on the parent windo)3.666 E 2.75(wa)-.275 G
(nd if the)-2.75 E -.165(ove)72 150 S(rride-redirect attrib).165 E
(ute of the windo)-.22 E 2.75(wi)-.275 G 2.75(ss)-2.75 G(et to)-2.75 E
F0 -.275(Fa)3.666 G(lse).275 E F1 2.75(,t).916 G(he X serv)-2.75 E
(er reports a)-.165 E F0(MapRequest)3.666 E F1 -2.365 -.275(ev e)72 163
T(nt to you and does not map the speci\214ed windo).275 E 4.18 -.715
(w. T)-.275 H(hus, this e).715 E -.165(ve)-.275 G(nt gi).165 E -.165(ve)
-.275 G 2.75(sy).165 G(our windo)-2.75 E 2.75(wm)-.275 G(an-)-2.75 E
(ager client the ability to control the placement of subwindo)72 176 Q
(ws.)-.275 E(The structure for this e)72 192.9 Q -.165(ve)-.275 G
(nt type contains:).165 E .44 LW 36 214.55 36 225.55 DL 36 212.55 36
223.55 DL 41.5 210.8 36 210.8 DL 43.5 210.8 38 210.8 DL 49 210.8 43.5
210.8 DL(typedef struct {)72 229.3 Q(int type;)108 242.3 Q
(/* MapRequest */)143.634 E(unsigned long serial;)108 255.3 Q
(/* # of last request processed by serv)88.337 E(er */)-.165 E
(Bool send_e)108 268.3 Q -.165(ve)-.275 G 100.998(nt; /*).165 F
(true if this came from a SendEv)2.75 E(ent request */)-.165 E
(Display *display;)108 281.3 Q(/* Display the e)102.692 E -.165(ve)-.275
G(nt w).165 E(as read from */)-.11 E -.44(Wi)108 294.3 S(ndo).44 E 2.75
(wp)-.275 G(arent;)-2.75 E -.44(Wi)108 307.3 S(ndo).44 E 2.75(ww)-.275 G
(indo)-2.75 E(w;)-.275 E 2.75(}X)72 320.3 S(MapRequestEv)-2.75 E(ent;)
-.165 E 36 322.45 36 333.45 DL 36 320.45 36 331.45 DL 41.5 331.7 36
331.7 DL 43.5 331.7 38 331.7 DL 49 331.7 43.5 331.7 DL
(The parent member is set to the parent windo)72 356.7 Q 4.18 -.715
(w. T)-.275 H(he windo).715 E 2.75(wm)-.275 G(ember is set to the windo)
-2.75 E 2.75(wt)-.275 G 2.75(ob)-2.75 G(e)-2.75 E(mapped.)72 369.7 Q F0
2.75(10.11.4. ResizeRequest)72 395.7 R(Ev)2.75 E(ents)-.11 E F1
(The X serv)72 412.6 Q(er can report)-.165 E F0(ResizeRequest)3.666 E F1
-2.365 -.275(ev e)3.666 H(nts to clients w).275 E
(anting information about another)-.11 E(client')72 425.6 Q 2.75(sa)
-.605 G(ttempts to change the size of a windo)-2.75 E 4.18 -.715(w. T)
-.275 H(he X serv).715 E(er generates this e)-.165 E -.165(ve)-.275 G
(nt whene).165 E -.165(ve)-.275 G(r).165 E
(some other client attempts to change the size of the speci\214ed windo)
72 438.6 Q 2.75(wb)-.275 G 2.75(yc)-2.75 G(alling)-2.75 E F0(XCon\214g-)
3.666 E(ur)72 451.6 Q(eW)-.198 E(indo)-.198 E(w)-.11 E F1(,).916 E F0
(XResizeW)3.666 E(indo)-.198 E(w)-.11 E F1 2.75(,o).916 G(r)-2.75 E F0
(XMo)3.666 E -.11(ve)-.11 G(ResizeW).11 E(indo)-.198 E(w)-.11 E F1(.)
.916 E 1.76 -.88(To r)72 468.5 T(ecei).88 E -.165(ve)-.275 G F0
(ResizeRequest)3.831 E F1 -2.365 -.275(ev e)3.666 H(nts, set the).275 E
F0(ResizeRedir)3.666 E(ect)-.198 E F1(bit in the e)3.666 E -.165(ve)
-.275 G(nt-mask attrib).165 E(ute of the)-.22 E(windo)72 481.5 Q 4.18
-.715(w. A)-.275 H .33 -.165(ny a).715 H
(ttempts to change the size by other clients are then redirected.).165 E
(The structure for this e)72 498.4 Q -.165(ve)-.275 G(nt type contains:)
.165 E 36 520.05 36 531.05 DL 36 518.05 36 529.05 DL 41.5 516.3 36 516.3
DL 43.5 516.3 38 516.3 DL 49 516.3 43.5 516.3 DL(typedef struct {)72
534.8 Q(int type;)108 547.8 Q(/* ResizeRequest */)143.634 E
(unsigned long serial;)108 560.8 Q
(/* # of last request processed by serv)88.337 E(er */)-.165 E
(Bool send_e)108 573.8 Q -.165(ve)-.275 G 100.998(nt; /*).165 F
(true if this came from a SendEv)2.75 E(ent request */)-.165 E
(Display *display;)108 586.8 Q(/* Display the e)102.692 E -.165(ve)-.275
G(nt w).165 E(as read from */)-.11 E -.44(Wi)108 599.8 S(ndo).44 E 2.75
(ww)-.275 G(indo)-2.75 E(w;)-.275 E(int width, height;)108 612.8 Q 2.75
(}X)72 625.8 S(ResizeRequestEv)-2.75 E(ent;)-.165 E 36 627.95 36 638.95
DL 36 625.95 36 636.95 DL 41.5 637.2 36 637.2 DL 43.5 637.2 38 637.2 DL
49 637.2 43.5 637.2 DL(The windo)72 662.2 Q 2.75(wm)-.275 G
(ember is set to the windo)-2.75 E 2.75(ww)-.275 G
(hose size another client attempted to change.)-2.75 E(The)5.5 E
(width and height members are set to the inside size of the windo)72
675.2 Q 1.43 -.715(w, e)-.275 H(xcluding the border).55 E(.)-.605 E F0
2.75(10.12. Colormap)72 701.2 R(State Change Ev)2.75 E(ents)-.11 E F1
(The X serv)72 718.1 Q(er can report)-.165 E F0(ColormapNotify)3.666 E
F1 -2.365 -.275(ev e)3.666 H(nts to clients w).275 E
(anting information about when the)-.11 E
(colormap changes and when a colormap is installed or uninstalled.)72
731.1 Q(The X serv)5.5 E(er generates this)-.165 E F0(226)279.75 769 Q 0
Cg EP
%%Page: 227 232
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E/F1 11/Times-Roman@0 SF -2.365 -.275
(ev e)72 85 T(nt type whene).275 E -.165(ve)-.275 G 2.75(rac).165 G
(lient application:)-2.75 E 23.65<8343>72 101.9 S
(hanges the colormap member of the)-23.65 E F0(XSetW)3.666 E(indo)-.198
E(wAttrib)-.11 E(utes)-.22 E F1(structure by calling)3.666 E F0
(XChangeW)100.416 114.9 Q(indo)-.198 E(wAttrib)-.11 E(utes)-.22 E F1(,)
.916 E F0(XFr)3.666 E(eeColormap)-.198 E F1 2.75(,o).916 G(r)-2.75 E F0
(XSetW)3.666 E(indo)-.198 E(wColormap)-.11 E F1 23.65<8349>72 131.8 S
(nstalls or uninstalls the colormap by calling)-23.65 E F0
(XInstallColormap)3.666 E F1(or)3.666 E F0(XUninstallColormap)3.666 E F1
1.76 -.88(To r)72 148.7 T(ecei).88 E -.165(ve)-.275 G F0(ColormapNotify)
3.831 E F1 -2.365 -.275(ev e)3.666 H(nts, set the).275 E F0
(ColormapChangeMask)3.666 E F1(bit in the e)3.666 E -.165(ve)-.275 G
(nt-mask).165 E(attrib)72 161.7 Q(ute of the windo)-.22 E -.715(w.)-.275
G(The structure for this e)72 178.6 Q -.165(ve)-.275 G
(nt type contains:).165 E .44 LW 36 200.25 36 211.25 DL 36 198.25 36
209.25 DL 41.5 196.5 36 196.5 DL 43.5 196.5 38 196.5 DL 49 196.5 43.5
196.5 DL(typedef struct {)72 215 Q(int type;)108 228 Q
(/* ColormapNotify */)143.634 E(unsigned long serial;)108 241 Q
(/* # of last request processed by serv)88.337 E(er */)-.165 E
(Bool send_e)108 254 Q -.165(ve)-.275 G 100.998(nt; /*).165 F
(true if this came from a SendEv)2.75 E(ent request */)-.165 E
(Display *display;)108 267 Q(/* Display the e)102.692 E -.165(ve)-.275 G
(nt w).165 E(as read from */)-.11 E -.44(Wi)108 280 S(ndo).44 E 2.75(ww)
-.275 G(indo)-2.75 E(w;)-.275 E(Colormap colormap;)108 293 Q
(/* colormap or None */)88.645 E(Bool ne)108 306 Q(w;)-.275 E
(int state;)108 319 Q(/* ColormapInstalled, ColormapUninstalled */)
142.413 E 2.75(}X)72 332 S(ColormapEv)-2.75 E(ent;)-.165 E 36 334.15 36
345.15 DL 36 332.15 36 343.15 DL 41.5 343.4 36 343.4 DL 43.5 343.4 38
343.4 DL 49 343.4 43.5 343.4 DL(The windo)72 368.4 Q 2.75(wm)-.275 G
(ember is set to the windo)-2.75 E 2.75(ww)-.275 G
(hose associated colormap is changed, installed, or)-2.75 E 2.75
(uninstalled. F)72 381.4 R(or a colormap that is changed, installed, or\
 uninstalled, the colormap member is set)-.165 E
(to the colormap associated with the windo)72 394.4 Q 4.18 -.715(w. F)
-.275 H(or a colormap that is changed by a call to).55 E F0(XFr)3.666 E
(ee-)-.198 E(Colormap)72 407.4 Q F1 2.75(,t).916 G
(he colormap member is set to)-2.75 E F0(None)3.666 E F1 5.5(.T).916 G
(he ne)-5.5 E 2.75(wm)-.275 G(ember is set to indicate whether the)-2.75
E(colormap for the speci\214ed windo)72 420.4 Q 2.75(ww)-.275 G
(as changed or installed or uninstalled and can be)-2.86 E F0 -.814(Tr)
3.666 G(ue).814 E F1(or)3.666 E F0 -.275(Fa)72.916 433.4 S(lse).275 E F1
5.5(.I).916 G 2.75(fi)-5.5 G 2.75(ti)-2.75 G(s)-2.75 E F0 -.814(Tr)3.666
G(ue).814 E F1 2.75(,t).916 G(he colormap w)-2.75 E(as changed.)-.11 E
(If it is)5.5 E F0 -.275(Fa)3.666 G(lse).275 E F1 2.75(,t).916 G
(he colormap w)-2.75 E(as installed or)-.11 E 2.75(uninstalled. The)72
446.4 R(state member is al)2.75 E -.11(wa)-.11 G
(ys set to indicate whether the colormap is installed or unin-).11 E
(stalled and can be)72 459.4 Q F0(ColormapInstalled)3.666 E F1(or)3.666
E F0(ColormapUninstalled)3.666 E F1(.).916 E F0 2.75(10.13. Client)72
485.4 R(Communication Ev)2.75 E(ents)-.11 E F1(This section discusses:)
72 502.3 Q<83>72 519.2 Q F0(ClientMessage)24.566 E F1 -2.365 -.275(ev e)
3.666 H(nts).275 E<83>72 536.1 Q F0(Pr)24.566 E(opertyNotify)-.198 E F1
-2.365 -.275(ev e)3.666 H(nts).275 E<83>72 553 Q F0(SelectionClear)
24.566 E F1 -2.365 -.275(ev e)3.666 H(nts).275 E<83>72 569.9 Q F0
(SelectionNotify)24.566 E F1 -2.365 -.275(ev e)3.666 H(nts).275 E<83>72
586.8 Q F0(SelectionRequest)24.566 E F1 -2.365 -.275(ev e)3.666 H(nts)
.275 E F0 2.75(10.13.1. ClientMessage)72 612.8 R(Ev)2.75 E(ents)-.11 E
F1(The X serv)72 629.7 Q(er generates)-.165 E F0(ClientMessage)3.666 E
F1 -2.365 -.275(ev e)3.666 H(nts only when a client calls the function)
.275 E F0(XSendE-)3.666 E -.11(ve)72 642.7 S(nt).11 E F1(.).916 E
(The structure for this e)72 659.6 Q -.165(ve)-.275 G(nt type contains:)
.165 E F0(227)279.75 769 Q 0 Cg EP
%%Page: 228 233
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E .44 LW 36 76.75 36 87.75 DL 36 74.75
36 85.75 DL 41.5 73 36 73 DL 43.5 73 38 73 DL 49 73 43.5 73 DL/F1 11
/Times-Roman@0 SF(typedef struct {)72 91.5 Q(int type;)108 104.5 Q
(/* ClientMessage */)143.634 E(unsigned long serial;)108 117.5 Q
(/* # of last request processed by serv)88.337 E(er */)-.165 E
(Bool send_e)108 130.5 Q -.165(ve)-.275 G 100.998(nt; /*).165 F
(true if this came from a SendEv)2.75 E(ent request */)-.165 E
(Display *display;)108 143.5 Q(/* Display the e)102.692 E -.165(ve)-.275
G(nt w).165 E(as read from */)-.11 E -.44(Wi)108 156.5 S(ndo).44 E 2.75
(ww)-.275 G(indo)-2.75 E(w;)-.275 E(Atom message_type;)108 169.5 Q
(int format;)108 182.5 Q(union {)108 195.5 Q(char b[20];)144 208.5 Q
(short s[10];)144 221.5 Q(long l[5];)144 234.5 Q 2.75(}d)130 247.5 S
(ata;)-2.75 E 2.75(}X)72 260.5 S(ClientMessageEv)-2.75 E(ent;)-.165 E 36
262.65 36 273.65 DL 36 260.65 36 271.65 DL 41.5 271.9 36 271.9 DL 43.5
271.9 38 271.9 DL 49 271.9 43.5 271.9 DL
(The message_type member is set to an atom that indicates ho)72 296.9 Q
2.75(wt)-.275 G(he data should be interpreted by)-2.75 E(the recei)72
309.9 Q(ving client.)-.275 E(The format member is set to 8, 16, or 32 a\
nd speci\214es whether the data)5.5 E(should be vie)72 322.9 Q
(wed as a list of bytes, shorts, or longs.)-.275 E
(The data member is a union that contains the)5.5 E
(members b, s, and l.)72 335.9 Q
(The b, s, and l members represent data of twenty 8-bit v)5.5 E
(alues, ten 16-bit v)-.275 E(al-)-.275 E(ues, and \214v)72 348.9 Q 2.75
(e3)-.165 G(2-bit v)-2.75 E 2.75(alues. P)-.275 F
(articular message types might not mak)-.165 E 2.75(eu)-.11 G
(se of all these v)-2.75 E 2.75(alues. The)-.275 F 2.75(Xs)72 361.9 S
(erv)-2.75 E(er places no interpretation on the v)-.165 E
(alues in the windo)-.275 E 1.43 -.715(w, m)-.275 H
(essage_type, or data members.).715 E F0 2.75(10.13.2. Pr)72 387.9 R
(opertyNotify Ev)-.198 E(ents)-.11 E F1(The X serv)72 404.8 Q
(er can report)-.165 E F0(Pr)3.666 E(opertyNotify)-.198 E F1 -2.365
-.275(ev e)3.666 H(nts to clients w).275 E
(anting information about property)-.11 E
(changes for a speci\214ed windo)72 417.8 Q -.715(w.)-.275 G 1.76 -.88
(To r)72 434.7 T(ecei).88 E -.165(ve)-.275 G F0(Pr)3.831 E(opertyNotify)
-.198 E F1 -2.365 -.275(ev e)3.666 H(nts, set the).275 E F0(Pr)3.666 E
(opertyChangeMask)-.198 E F1(bit in the e)3.666 E -.165(ve)-.275 G
(nt-mask attrib).165 E(ute)-.22 E(of the windo)72 447.7 Q -.715(w.)-.275
G(The structure for this e)72 464.6 Q -.165(ve)-.275 G
(nt type contains:).165 E 36 486.25 36 497.25 DL 36 484.25 36 495.25 DL
41.5 482.5 36 482.5 DL 43.5 482.5 38 482.5 DL 49 482.5 43.5 482.5 DL
(typedef struct {)72 501 Q(int type;)108 514 Q(/* PropertyNotify */)
143.634 E(unsigned long serial;)108 527 Q
(/* # of last request processed by serv)88.337 E(er */)-.165 E
(Bool send_e)108 540 Q -.165(ve)-.275 G 100.998(nt; /*).165 F
(true if this came from a SendEv)2.75 E(ent request */)-.165 E
(Display *display;)108 553 Q(/* Display the e)102.692 E -.165(ve)-.275 G
(nt w).165 E(as read from */)-.11 E -.44(Wi)108 566 S(ndo).44 E 2.75(ww)
-.275 G(indo)-2.75 E(w;)-.275 E(Atom atom;)108 579 Q -.385(Ti)108 592 S
(me time;).385 E(int state;)108 605 Q(/* PropertyNe)142.413 E(wV)-.275 E
(alue or PropertyDelete */)-1.221 E 2.75(}X)72 618 S(PropertyEv)-2.75 E
(ent;)-.165 E 36 620.15 36 631.15 DL 36 618.15 36 629.15 DL 41.5 629.4
36 629.4 DL 43.5 629.4 38 629.4 DL 49 629.4 43.5 629.4 DL(The windo)72
654.4 Q 2.75(wm)-.275 G(ember is set to the windo)-2.75 E 2.75(ww)-.275
G(hose associated property w)-2.75 E(as changed.)-.11 E(The atom)5.5 E
(member is set to the property')72 667.4 Q 2.75(sa)-.605 G
(tom and indicates which property w)-2.75 E(as changed or desired.)-.11
E(The)5.5 E(time member is set to the serv)72 680.4 Q
(er time when the property w)-.165 E(as changed.)-.11 E
(The state member is set to)5.5 E(indicate whether the property w)72
693.4 Q(as changed to a ne)-.11 E 2.75(wv)-.275 G
(alue or deleted and can be)-3.025 E F0(Pr)3.666 E(opertyNew-)-.198 E
-1.012(Va)72 706.4 S(lue)1.012 E F1(or)3.666 E F0(Pr)3.666 E
(opertyDelete)-.198 E F1 5.5(.T).916 G(he state member is set to)-5.5 E
F0(Pr)3.666 E(opertyNewV)-.198 E(alue)-1.012 E F1(when a property of)
3.666 E(the windo)72 719.4 Q 2.75(wi)-.275 G 2.75(sc)-2.75 G
(hanged using)-2.75 E F0(XChangePr)3.666 E(operty)-.198 E F1(or)3.666 E
F0(XRotateW)3.666 E(indo)-.198 E(wPr)-.11 E(operties)-.198 E F1(\(e)
3.666 E -.165(ve)-.275 G 2.75(nw).165 G(hen)-2.75 E
(adding zero-length data using)72 732.4 Q F0(XChangePr)3.666 E(operty)
-.198 E F1 2.75(\)a).916 G(nd when replacing all or part of a property)
-2.75 E F0(228)279.75 769 Q 0 Cg EP
%%Page: 229 234
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E/F1 11/Times-Roman@0 SF
(with identical data using)72 85 Q F0(XChangePr)3.666 E(operty)-.198 E
F1(or)3.666 E F0(XRotateW)3.666 E(indo)-.198 E(wPr)-.11 E(operties)-.198
E F1 5.5(.T).916 G(he state member)-5.5 E(is set to)72 98 Q F0(Pr)3.666
E(opertyDelete)-.198 E F1(when a property of the windo)3.666 E 2.75(wi)
-.275 G 2.75(sd)-2.75 G(eleted using)-2.75 E F0(XDeletePr)3.666 E
(operty)-.198 E F1(or)3.666 E 2.75(,i)-.44 G(f)-2.75 E(the delete ar)72
111 Q(gument is)-.198 E F0 -.814(Tr)3.666 G(ue).814 E F1(,).916 E F0
(XGetW)3.666 E(indo)-.198 E(wPr)-.11 E(operty)-.198 E F1(.).916 E F0
2.75(10.13.3. SelectionClear)72 137 R(Ev)2.75 E(ents)-.11 E F1
(The X serv)72 153.9 Q(er reports)-.165 E F0(SelectionClear)3.666 E F1
-2.365 -.275(ev e)3.666 H(nts to the client losing o).275 E
(wnership of a selection.)-.275 E(The X)5.5 E(serv)72 166.9 Q
(er generates this e)-.165 E -.165(ve)-.275 G
(nt type when another client asserts o).165 E
(wnership of the selection by calling)-.275 E F0(XSetSelectionOwner)
72.916 179.9 Q F1(.).916 E(The structure for this e)72 196.8 Q -.165(ve)
-.275 G(nt type contains:).165 E .44 LW 36 218.45 36 229.45 DL 36 216.45
36 227.45 DL 41.5 214.7 36 214.7 DL 43.5 214.7 38 214.7 DL 49 214.7 43.5
214.7 DL(typedef struct {)72 233.2 Q(int type;)108 246.2 Q
(/* SelectionClear */)143.634 E(unsigned long serial;)108 259.2 Q
(/* # of last request processed by serv)88.337 E(er */)-.165 E
(Bool send_e)108 272.2 Q -.165(ve)-.275 G 100.998(nt; /*).165 F
(true if this came from a SendEv)2.75 E(ent request */)-.165 E
(Display *display;)108 285.2 Q(/* Display the e)102.692 E -.165(ve)-.275
G(nt w).165 E(as read from */)-.11 E -.44(Wi)108 298.2 S(ndo).44 E 2.75
(ww)-.275 G(indo)-2.75 E(w;)-.275 E(Atom selection;)108 311.2 Q -.385
(Ti)108 324.2 S(me time;).385 E 2.75(}X)72 337.2 S(SelectionClearEv)
-2.75 E(ent;)-.165 E 36 339.35 36 350.35 DL 36 337.35 36 348.35 DL 41.5
348.6 36 348.6 DL 43.5 348.6 38 348.6 DL 49 348.6 43.5 348.6 DL
(The selection member is set to the selection atom.)72 373.6 Q
(The time member is set to the last change time)5.5 E
(recorded for the selection.)72 386.6 Q(The windo)5.5 E 2.75(wm)-.275 G
(ember is the windo)-2.75 E 2.75(wt)-.275 G(hat w)-2.75 E
(as speci\214ed by the current)-.11 E -.275(ow)72 399.6 S(ner \(the o)
.275 E(wner losing the selection\) in its)-.275 E F0(XSetSelectionOwner)
3.666 E F1(call.)3.666 E F0 2.75(10.13.4. SelectionRequest)72 425.6 R
(Ev)2.75 E(ents)-.11 E F1(The X serv)72 442.5 Q(er reports)-.165 E F0
(SelectionRequest)3.666 E F1 -2.365 -.275(ev e)3.666 H(nts to the o).275
E(wner of a selection.)-.275 E(The X serv)5.5 E(er gener)-.165 E(-)-.22
E(ates this e)72 455.5 Q -.165(ve)-.275 G(nt whene).165 E -.165(ve)-.275
G 2.75(rac).165 G(lient requests a selection con)-2.75 E -.165(ve)-.44 G
(rsion by calling).165 E F0(XCon)3.666 E -.11(ve)-.44 G(rtSelection).11
E F1(for the o)72 468.5 Q(wned selection.)-.275 E
(The structure for this e)72 485.4 Q -.165(ve)-.275 G(nt type contains:)
.165 E 36 507.05 36 518.05 DL 36 505.05 36 516.05 DL 41.5 503.3 36 503.3
DL 43.5 503.3 38 503.3 DL 49 503.3 43.5 503.3 DL(typedef struct {)72
521.8 Q(int type;)108 534.8 Q(/* SelectionRequest */)143.634 E
(unsigned long serial;)108 547.8 Q
(/* # of last request processed by serv)88.337 E(er */)-.165 E
(Bool send_e)108 560.8 Q -.165(ve)-.275 G 100.998(nt; /*).165 F
(true if this came from a SendEv)2.75 E(ent request */)-.165 E
(Display *display;)108 573.8 Q(/* Display the e)102.692 E -.165(ve)-.275
G(nt w).165 E(as read from */)-.11 E -.44(Wi)108 586.8 S(ndo).44 E 2.75
(wo)-.275 G(wner;)-3.025 E -.44(Wi)108 599.8 S(ndo).44 E 2.75(wr)-.275 G
(equestor;)-2.75 E(Atom selection;)108 612.8 Q(Atom tar)108 625.8 Q
(get;)-.198 E(Atom property;)108 638.8 Q -.385(Ti)108 651.8 S(me time;)
.385 E 2.75(}X)72 664.8 S(SelectionRequestEv)-2.75 E(ent;)-.165 E 36
666.95 36 677.95 DL 36 664.95 36 675.95 DL 41.5 676.2 36 676.2 DL 43.5
676.2 38 676.2 DL 49 676.2 43.5 676.2 DL(The o)72 701.2 Q
(wner member is set to the windo)-.275 E 2.75(wt)-.275 G(hat w)-2.75 E
(as speci\214ed by the current o)-.11 E(wner in its)-.275 E F0
(XSetSelec-)3.666 E(tionOwner)72 714.2 Q F1 2.75(call. The)3.666 F
(requestor member is set to the windo)2.75 E 2.75(wr)-.275 G
(equesting the selection.)-2.75 E(The selec-)5.5 E
(tion member is set to the atom that names the selection.)72 727.2 Q
-.165(Fo)5.5 G 2.75(re).165 G(xample, PRIMAR)-2.915 E 2.75(Yi)-.715 G
2.75(su)-2.75 G(sed to)-2.75 E F0(229)279.75 769 Q 0 Cg EP
%%Page: 230 235
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E/F1 11/Times-Roman@0 SF
(indicate the primary selection.)72 85 Q(The tar)5.5 E
(get member is set to the atom that indicates the type the)-.198 E
(selection is desired in.)72 98 Q
(The property member can be a property name or)5.5 E F0(None)3.666 E F1
5.5(.T).916 G(he time member)-5.5 E(is set to the timestamp or)72 111 Q
F0(Curr)3.666 E(entT)-.198 E(ime)-.198 E F1 -.275(va)3.666 G
(lue from the).275 E F0(Con)3.666 E -.11(ve)-.44 G(rtSelection).11 E F1
(request.)3.666 E(The o)72 127.9 Q(wner should con)-.275 E -.165(ve)-.44
G(rt the selection based on the speci\214ed tar).165 E
(get type and send a)-.198 E F0(Selection-)3.666 E(Notify)72 140.9 Q F1
-2.365 -.275(ev e)3.666 H(nt back to the requestor).275 E 5.5(.A)-.605 G
(complete speci\214cation for using selections is gi)-2.75 E -.165(ve)
-.275 G 2.75(ni).165 G 2.75(nt)-2.75 G(he X)-2.75 E(Consortium standard)
72 153.9 Q/F2 11/Times-Italic@0 SF(Inter)2.75 E
(-Client Communication Con)-.22 E(ventions Manual)-.44 E F1(.)A F0 2.75
(10.13.5. SelectionNotify)72 179.9 R(Ev)2.75 E(ents)-.11 E F1(This e)72
196.8 Q -.165(ve)-.275 G(nt is generated by the X serv).165 E
(er in response to a)-.165 E F0(Con)3.666 E -.11(ve)-.44 G(rtSelection)
.11 E F1(protocol request when)3.666 E(there is no o)72 209.8 Q
(wner for the selection.)-.275 E(When there is an o)5.5 E(wner)-.275 E
2.75(,i)-.44 G 2.75(ts)-2.75 G(hould be generated by the o)-2.75 E(wner)
-.275 E(of the selection by using)72 222.8 Q F0(XSendEv)3.666 E(ent)-.11
E F1 5.5(.T).916 G(he o)-5.5 E(wner of a selection should send this e)
-.275 E -.165(ve)-.275 G(nt to a).165 E
(requestor when a selection has been con)72 235.8 Q -.165(ve)-.44 G
(rted and stored as a property or when a selection con-).165 E -.165(ve)
72 248.8 S(rsion could not be performed \(which is indicated by setting\
 the property member to).165 E F0(None)3.666 E F1(\).).916 E(If)72 265.7
Q F0(None)3.666 E F1(is speci\214ed as the property in the)3.666 E F0
(Con)3.666 E -.11(ve)-.44 G(rtSelection).11 E F1
(protocol request, the o)3.666 E(wner should)-.275 E(choose a property \
name, store the result as that property on the requestor windo)72 278.7
Q 1.43 -.715(w, a)-.275 H(nd then send a).715 E F0(SelectionNotify)
72.916 291.7 Q F1(gi)3.666 E(ving that actual property name.)-.275 E
(The structure for this e)72 308.6 Q -.165(ve)-.275 G(nt type contains:)
.165 E .44 LW 36 330.25 36 341.25 DL 36 328.25 36 339.25 DL 41.5 326.5
36 326.5 DL 43.5 326.5 38 326.5 DL 49 326.5 43.5 326.5 DL
(typedef struct {)72 345 Q(int type;)108 358 Q(/* SelectionNotify */)
143.634 E(unsigned long serial;)108 371 Q
(/* # of last request processed by serv)88.337 E(er */)-.165 E
(Bool send_e)108 384 Q -.165(ve)-.275 G 100.998(nt; /*).165 F
(true if this came from a SendEv)2.75 E(ent request */)-.165 E
(Display *display;)108 397 Q(/* Display the e)102.692 E -.165(ve)-.275 G
(nt w).165 E(as read from */)-.11 E -.44(Wi)108 410 S(ndo).44 E 2.75(wr)
-.275 G(equestor;)-2.75 E(Atom selection;)108 423 Q(Atom tar)108 436 Q
(get;)-.198 E(Atom property;)108 449 Q(/* atom or None */)111.866 E
-.385(Ti)108 462 S(me time;).385 E 2.75(}X)72 475 S(SelectionEv)-2.75 E
(ent;)-.165 E 36 477.15 36 488.15 DL 36 475.15 36 486.15 DL 41.5 486.4
36 486.4 DL 43.5 486.4 38 486.4 DL 49 486.4 43.5 486.4 DL
(The requestor member is set to the windo)72 511.4 Q 2.75(wa)-.275 G
(ssociated with the requestor of the selection.)-2.75 E(The)5.5 E
(selection member is set to the atom that indicates the selection.)72
524.4 Q -.165(Fo)5.5 G 2.75(re).165 G(xample, PRIMAR)-2.915 E 2.75(Yi)
-.715 G 2.75(su)-2.75 G(sed)-2.75 E(for the primary selection.)72 537.4
Q(The tar)5.5 E(get member is set to the atom that indicates the con)
-.198 E -.165(ve)-.44 G(rted type.).165 E -.165(Fo)72 550.4 S 2.75(re)
.165 G(xample, PIXMAP is used for a pixmap.)-2.915 E
(The property member is set to the atom that indi-)5.5 E
(cates which property the result w)72 563.4 Q(as stored on.)-.11 E
(If the con)5.5 E -.165(ve)-.44 G(rsion f).165 E
(ailed, the property member is set)-.11 E(to)72 576.4 Q F0(None)3.666 E
F1 5.5(.T).916 G(he time member is set to the time the con)-5.5 E -.165
(ve)-.44 G(rsion took place and can be a timestamp or).165 E F0(Curr)
72.916 589.4 Q(entT)-.198 E(ime)-.198 E F1(.).916 E F0(230)279.75 769 Q
0 Cg EP
%%Page: 231 236
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E/F1 12/Times-Bold@0 SF(Chapter 11)
259.17 111 Q(Ev)220.71 137 Q(ent Handling Functions)-.12 E/F2 11
/Times-Roman@0 SF
(This chapter discusses the Xlib functions you can use to:)72 179.9 Q
23.65<8353>72 196.8 S(elect e)-23.65 E -.165(ve)-.275 G(nts).165 E 23.65
<8348>72 213.7 S(andle the output b)-23.65 E(uf)-.22 E(fer and the e)
-.275 E -.165(ve)-.275 G(nt queue).165 E 23.65<8353>72 230.6 S(elect e)
-23.65 E -.165(ve)-.275 G(nts from the e).165 E -.165(ve)-.275 G
(nt queue).165 E 23.65<8353>72 247.5 S(end and get e)-23.65 E -.165(ve)
-.275 G(nts).165 E 23.65<8348>72 264.4 S(andle protocol errors)-23.65 E
(Note)291.058 287.4 Q(Some toolkits use their o)127 305.4 Q(wn e)-.275 E
-.165(ve)-.275 G(nt-handling functions and do not allo).165 E 2.75(wy)
-.275 G(ou to)-2.75 E(interchange these e)127 318.4 Q -.165(ve)-.275 G
(nt-handling functions with those in Xlib).165 E 5.5(.F)-.44 G
(or further)-5.665 E
(information, see the documentation supplied with the toolkit.)127 331.4
Q(Most applications simply are e)72 358.3 Q -.165(ve)-.275 G
(nt loops: the).165 E 2.75(yw)-.165 G(ait for an e)-2.86 E -.165(ve)
-.275 G(nt, decide what to do with it,).165 E -.165(exe)72 371.3 S
(cute some amount of code that results in changes to the display).165 E
2.75(,a)-.715 G(nd then w)-2.75 E(ait for the ne)-.11 E(xt)-.165 E
-2.365 -.275(ev e)72 384.3 T(nt.).275 E F0 2.75(11.1. Selecting)72 410.3
R(Ev)2.75 E(ents)-.11 E F2(There are tw)72 427.2 Q 2.75(ow)-.11 G
(ays to select the e)-2.86 E -.165(ve)-.275 G(nts you w).165 E
(ant reported to your client application.)-.11 E(One w)5.5 E(ay is)-.11
E(to set the e)72 440.2 Q -.165(ve)-.275 G(nt_mask member of the).165 E
F0(XSetW)3.666 E(indo)-.198 E(wAttrib)-.11 E(utes)-.22 E F2
(structure when you call)3.666 E F0(XCr)3.666 E(e-)-.198 E(ateW)72 453.2
Q(indo)-.198 E(w)-.11 E F2(and)3.666 E F0(XChangeW)3.666 E(indo)-.198 E
(wAttrib)-.11 E(utes)-.22 E F2 5.5(.A).916 G(nother w)-5.5 E
(ay is to use)-.11 E F0(XSelectInput)3.666 E F2(.).916 E .44 LW 36
470.95 36 481.95 DL 36 468.95 36 479.95 DL 41.5 467.2 36 467.2 DL 43.5
467.2 38 467.2 DL 49 467.2 43.5 467.2 DL -1.834(XSelectInput \()72 483.1
R/F3 11/Times-Italic@0 SF(display).916 E F2(,)A F3(w)2.75 E F2(,).916 E
F3 -.165(ev)2.75 G(ent_mask).165 E F2(\)).916 E(Display *)88.5 496.1 Q
F3(display)A F2(;).916 E -.44(Wi)88.5 509.1 S(ndo).44 E(w)-.275 E F3(w)
2.75 E F2(;).916 E(long)88.5 522.1 Q F3 -.165(ev)2.75 G(ent_mask).165 E
F2(;).916 E F3(display)72 542.9 Q F2
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F3(w)72 559.8 Q F2(Speci\214es the windo)64.663 E 2.75(ww)-.275 G
(hose e)-2.75 E -.165(ve)-.275 G(nts you are interested in.).165 E F3
-.165(ev)72 576.7 S(ent_mask).165 E F2(Speci\214es the e)20.85 E -.165
(ve)-.275 G(nt mask.).165 E 36 572.35 36 583.35 DL 36 570.35 36 581.35
DL 41.5 581.6 36 581.6 DL 43.5 581.6 38 581.6 DL 49 581.6 43.5 581.6 DL
(The)72 606.6 Q F0(XSelectInput)3.666 E F2
(function requests that the X serv)3.666 E(er report the e)-.165 E -.165
(ve)-.275 G(nts associated with the speci-).165 E(\214ed e)72 619.6 Q
-.165(ve)-.275 G(nt mask.).165 E(Initially)5.5 E 2.75(,Xw)-.715 G
(ill not report an)-2.75 E 2.75(yo)-.165 G 2.75(ft)-2.75 G(hese e)-2.75
E -.165(ve)-.275 G 2.75(nts. Ev).165 F(ents are reported relati)-.165 E
.33 -.165(ve t)-.275 H 2.75(oa).165 G(windo)72 632.6 Q 4.18 -.715(w. I)
-.275 H 2.75(faw).715 G(indo)-2.75 E 2.75(wi)-.275 G 2.75(sn)-2.75 G
(ot interested in a de)-2.75 E(vice e)-.275 E -.165(ve)-.275 G
(nt, it usually propag).165 E(ates to the closest ances-)-.055 E
(tor that is interested, unless the do_not_propag)72 645.6 Q
(ate mask prohibits it.)-.055 E(Setting the e)72 662.5 Q -.165(ve)-.275
G(nt-mask attrib).165 E(ute of a windo)-.22 E 2.75(wo)-.275 G -.165(ve)
-2.915 G(rrides an).165 E 2.75(yp)-.165 G(re)-2.75 E
(vious call for the same windo)-.275 E 2.75(wb)-.275 G(ut)-2.97 E
(not for other clients.)72 675.5 Q
(Multiple clients can select for the same e)5.5 E -.165(ve)-.275 G
(nts on the same windo).165 E 2.75(ww)-.275 G(ith the)-2.75 E(follo)72
688.5 Q(wing restrictions:)-.275 E 23.65<834d>72 705.4 S
(ultiple clients can select e)-23.65 E -.165(ve)-.275 G
(nts on the same windo).165 E 2.75(wb)-.275 G(ecause their e)-2.75 E
-.165(ve)-.275 G(nt masks are dis-).165 E 2.75(joint. When)99.5 718.4 R
(the X serv)2.75 E(er generates an e)-.165 E -.165(ve)-.275 G
(nt, it reports it to all interested clients.).165 E F0(231)279.75 769 Q
0 Cg EP
%%Page: 232 237
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E/F1 11/Times-Roman@0 SF 23.65<834f>72
85 S(nly one client at a time can select)-23.65 E F0(Cir)3.666 E
(culateRequest)-.198 E F1(,).916 E F0(Con\214gur)3.666 E(eRequest)-.198
E F1 2.75(,o).916 G(r)-2.75 E F0(MapRe-)3.666 E(quest)99.5 98 Q F1
-2.365 -.275(ev e)3.666 H(nts, which are associated with the e).275 E
-.165(ve)-.275 G(nt mask).165 E F0(Substructur)3.666 E(eRedir)-.198 E
(ectMask)-.198 E F1(.).916 E 23.65<834f>72 114.9 S
(nly one client at a time can select a)-23.65 E F0(ResizeRequest)3.666 E
F1 -2.365 -.275(ev e)3.666 H(nt, which is associated with the).275 E
-2.365 -.275(ev e)99.5 127.9 T(nt mask).275 E F0(ResizeRedir)3.666 E
(ectMask)-.198 E F1(.).916 E 23.65<834f>72 144.8 S
(nly one client at a time can select a)-23.65 E F0(ButtonPr)3.666 E(ess)
-.198 E F1 -2.365 -.275(ev e)3.666 H(nt, which is associated with the)
.275 E -2.365 -.275(ev e)99.5 157.8 T(nt mask).275 E F0(ButtonPr)3.666 E
(essMask)-.198 E F1(.).916 E(The serv)72 174.7 Q(er reports the e)-.165
E -.165(ve)-.275 G(nt to all interested clients.).165 E F0(XSelectInput)
72.916 191.6 Q F1(can generate a)3.666 E F0(BadW)3.666 E(indo)-.198 E(w)
-.11 E F1(error)3.666 E(.)-.605 E F0 2.75(11.2. Handling)72 217.6 R
(the Output Buffer)2.75 E F1(The output b)72 234.5 Q(uf)-.22 E
(fer is an area used by Xlib to store requests.)-.275 E
(The functions described in this sec-)5.5 E(tion \215ush the output b)72
247.5 Q(uf)-.22 E(fer if the function w)-.275 E
(ould block or not return an e)-.11 E -.165(ve)-.275 G 2.75(nt. That)
.165 F(is, all requests)2.75 E(residing in the output b)72 260.5 Q(uf)
-.22 E(fer that ha)-.275 E .33 -.165(ve n)-.22 H
(ot yet been sent are transmitted to the X serv).165 E(er)-.165 E 5.5
(.T)-.605 G(hese)-5.5 E(functions dif)72 273.5 Q
(fer in the additional tasks the)-.275 E 2.75(ym)-.165 G(ight perform.)
-2.75 E 1.76 -.88(To \215)72 303.4 T(ush the output b).88 E(uf)-.22 E
(fer)-.275 E 2.75(,u)-.44 G(se)-2.75 E F0(XFlush)3.666 E F1(.).916 E .44
LW 36 321.15 36 332.15 DL 36 319.15 36 330.15 DL 41.5 317.4 36 317.4 DL
43.5 317.4 38 317.4 DL 49 317.4 43.5 317.4 DL -1.834(XFlush \()72 333.3
R/F2 11/Times-Italic@0 SF(display).916 E F1(\)).916 E(Display *)88.5
346.3 Q F2(display)A F1(;).916 E F2(display)72 367.1 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
36 362.75 36 373.75 DL 36 360.75 36 371.75 DL 41.5 372 36 372 DL 43.5
372 38 372 DL 49 372 43.5 372 DL(The)72 397 Q F0(XFlush)3.666 E F1
(function \215ushes the output b)3.666 E(uf)-.22 E(fer)-.275 E 5.5(.M)
-.605 G(ost client applications need not use this func-)-5.5 E
(tion because the output b)72 410 Q(uf)-.22 E
(fer is automatically \215ushed as needed by calls to)-.275 E F0(XP)
3.666 E(ending)-.22 E F1(,).916 E F0(XNex-)3.666 E(tEv)72 423 Q(ent)-.11
E F1 2.75(,a).916 G(nd)-2.75 E F0(XW)3.666 E(indo)-.198 E(wEv)-.11 E
(ent)-.11 E F1 5.5(.E).916 G -.165(ve)-5.5 G(nts generated by the serv)
.165 E(er may be enqueued into the library')-.165 E(s)-.605 E -2.365
-.275(ev e)72 436 T(nt queue.).275 E 1.76 -.88(To \215)72 465.9 T
(ush the output b).88 E(uf)-.22 E(fer and then w)-.275 E
(ait until all requests ha)-.11 E .33 -.165(ve b)-.22 H
(een processed, use).165 E F0(XSync)3.666 E F1(.).916 E 36 483.65 36
494.65 DL 36 481.65 36 492.65 DL 41.5 479.9 36 479.9 DL 43.5 479.9 38
479.9 DL 49 479.9 43.5 479.9 DL -1.834(XSync \()72 495.8 R F2(display)
.916 E F1(,)A F2(discar)2.75 E(d)-.407 E F1(\)).916 E(Display *)88.5
508.8 Q F2(display)A F1(;).916 E(Bool)88.5 521.8 Q F2(discar)2.75 E(d)
-.407 E F1(;).916 E F2(display)72 542.6 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2(discar)72 559.5 Q(d)-.407 E F1(Speci\214es a Boolean v)39.407 E
(alue that indicates whether)-.275 E F0(XSync)3.666 E F1(discards all e)
3.666 E -.165(ve)-.275 G(nts on).165 E(the e)144 572.5 Q -.165(ve)-.275
G(nt queue.).165 E 36 568.15 36 579.15 DL 36 566.15 36 577.15 DL 41.5
577.4 36 577.4 DL 43.5 577.4 38 577.4 DL 49 577.4 43.5 577.4 DL(The)72
602.4 Q F0(XSync)3.666 E F1(function \215ushes the output b)3.666 E(uf)
-.22 E(fer and then w)-.275 E(aits until all requests ha)-.11 E .33
-.165(ve b)-.22 H(een recei).165 E -.165(ve)-.275 G(d).165 E
(and processed by the X serv)72 615.4 Q(er)-.165 E 5.5(.A)-.605 G .33
-.165(ny e)-5.5 H(rrors generated must be handled by the error handler)
.165 E 5.5(.F)-.605 G(or)-5.665 E(each protocol error recei)72 628.4 Q
-.165(ve)-.275 G 2.75(db).165 G 2.75(yX)-2.75 G(lib,)-2.75 E F0(XSync)
3.666 E F1(calls the client application')3.666 E 2.75(se)-.605 G
(rror handling routine)-2.75 E(\(see section 11.8.2\).)72 641.4 Q(An)5.5
E 2.75(ye)-.165 G -.165(ve)-3.025 G(nts generated by the serv).165 E
(er are enqueued into the library')-.165 E 2.75(se)-.605 G -.165(ve)
-3.025 G(nt).165 E(queue.)72 654.4 Q(Finally)72 671.3 Q 2.75(,i)-.715 G
2.75(fy)-2.75 G(ou passed)-2.75 E F0 -.275(Fa)3.666 G(lse).275 E F1(,)
.916 E F0(XSync)3.666 E F1(does not discard the e)3.666 E -.165(ve)-.275
G(nts in the queue.).165 E(If you passed)5.5 E F0 -.814(Tr)72.916 684.3
S(ue).814 E F1(,).916 E F0(XSync)3.666 E F1(discards all e)3.666 E -.165
(ve)-.275 G(nts in the queue, including those e).165 E -.165(ve)-.275 G
(nts that were on the queue).165 E(before)72 697.3 Q F0(XSync)3.666 E F1
-.11(wa)3.666 G 2.75(sc).11 G 2.75(alled. Client)-2.75 F
(applications seldom need to call)2.75 E F0(XSync)3.666 E F1(.).916 E F0
(232)279.75 769 Q 0 Cg EP
%%Page: 233 238
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E 2.75(11.3. Ev)72 85 R
(ent Queue Management)-.11 E/F1 11/Times-Roman@0 SF(Xlib maintains an e)
72 101.9 Q -.165(ve)-.275 G(nt queue.).165 E(Ho)5.5 E(we)-.275 E -.165
(ve)-.275 G .88 -.44(r, t).165 H(he operating system also may be b).44 E
(uf)-.22 E(fering data in its)-.275 E(netw)72 114.9 Q
(ork connection that is not yet read into the e)-.11 E -.165(ve)-.275 G
(nt queue.).165 E 1.76 -.88(To c)72 144.8 T(heck the number of e).88 E
-.165(ve)-.275 G(nts in the e).165 E -.165(ve)-.275 G(nt queue, use).165
E F0(XEv)3.666 E(entsQueued)-.11 E F1(.).916 E .44 LW 36 162.55 36
173.55 DL 36 160.55 36 171.55 DL 41.5 158.8 36 158.8 DL 43.5 158.8 38
158.8 DL 49 158.8 43.5 158.8 DL(int XEv)72 174.7 Q -1.834(entsQueued \()
-.165 F/F2 11/Times-Italic@0 SF(display).916 E F1(,)A F2(mode)2.75 E F1
(\)).916 E(Display *)85.75 187.7 Q F2(display)A F1(;).916 E(int)85.75
200.7 Q F2(mode)2.75 E F1(;).916 E F2(display)72 221.5 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2(mode)72 238.4 Q F1(Speci\214es the mode.)48.174 E -1.21(Yo)5.5 G 2.75
(uc)1.21 G(an pass)-2.75 E F0(QueuedAlr)3.666 E(eady)-.198 E F1(,).916 E
F0(QueuedAfterFlush)3.666 E F1 2.75(,o).916 G(r)-2.75 E F0
(QueuedAfterReading)144.916 251.4 Q F1(.).916 E 36 247.05 36 258.05 DL
36 245.05 36 256.05 DL 41.5 256.3 36 256.3 DL 43.5 256.3 38 256.3 DL 49
256.3 43.5 256.3 DL(If mode is)72 281.3 Q F0(QueuedAlr)3.666 E(eady)
-.198 E F1(,).916 E F0(XEv)3.666 E(entsQueued)-.11 E F1
(returns the number of e)3.666 E -.165(ve)-.275 G(nts already in the e)
.165 E -.165(ve)-.275 G(nt).165 E(queue \(and ne)72 294.3 Q -.165(ve)
-.275 G 2.75(rp).165 G(erforms a system call\).)-2.75 E(If mode is)5.5 E
F0(QueuedAfterFlush)3.666 E F1(,).916 E F0(XEv)3.666 E(entsQueued)-.11 E
F1(returns the number of e)72 307.3 Q -.165(ve)-.275 G
(nts already in the queue if the number is nonzero.).165 E
(If there are no e)5.5 E -.165(ve)-.275 G(nts).165 E(in the queue,)72
320.3 Q F0(XEv)3.666 E(entsQueued)-.11 E F1(\215ushes the output b)3.666
E(uf)-.22 E(fer)-.275 E 2.75(,a)-.44 G(ttempts to read more e)-2.75 E
-.165(ve)-.275 G(nts out of the).165 E(application')72 333.3 Q 2.75(sc)
-.605 G(onnection, and returns the number read.)-2.75 E(If mode is)5.5 E
F0(QueuedAfterReading)3.666 E F1(,).916 E F0(XEv)72.916 346.3 Q
(entsQueued)-.11 E F1(returns the number of e)3.666 E -.165(ve)-.275 G
(nts already in the queue if the number is nonzero.).165 E(If)5.5 E
(there are no e)72 359.3 Q -.165(ve)-.275 G(nts in the queue,).165 E F0
(XEv)3.666 E(entsQueued)-.11 E F1(attempts to read more e)3.666 E -.165
(ve)-.275 G(nts out of the appli-).165 E(cation')72 372.3 Q 2.75(sc)
-.605 G(onnection without \215ushing the output b)-2.75 E(uf)-.22 E
(fer and returns the number read.)-.275 E F0(XEv)72.916 389.2 Q
(entsQueued)-.11 E F1(al)3.666 E -.11(wa)-.11 G
(ys returns immediately without I/O if there are e).11 E -.165(ve)-.275
G(nts already in the queue.).165 E F0(XEv)72.916 402.2 Q(entsQueued)-.11
E F1(with mode)3.666 E F0(QueuedAfterFlush)3.666 E F1
(is identical in beha)3.666 E(vior to)-.22 E F0(XP)3.666 E(ending)-.22 E
F1(.).916 E F0(XEv)72.916 415.2 Q(entsQueued)-.11 E F1(with mode)3.666 E
F0(QueuedAlr)3.666 E(eady)-.198 E F1(is identical to the)3.666 E F0
(XQLength)3.666 E F1(function.)3.666 E 1.76 -.88(To r)72 445.1 T
(eturn the number of e).88 E -.165(ve)-.275 G(nts that are pending, use)
.165 E F0(XP)3.666 E(ending)-.22 E F1(.).916 E 36 462.85 36 473.85 DL 36
460.85 36 471.85 DL 41.5 459.1 36 459.1 DL 43.5 459.1 38 459.1 DL 49
459.1 43.5 459.1 DL(int XPending)72 475 Q(\().916 E F2(display).916 E F1
(\)).916 E(Display *)88.5 488 Q F2(display)A F1(;).916 E F2(display)72
508.8 Q F1(Speci\214es the connection to the X serv)40.221 E(er)-.165 E
(.)-.605 E 36 504.45 36 515.45 DL 36 502.45 36 513.45 DL 41.5 513.7 36
513.7 DL 43.5 513.7 38 513.7 DL 49 513.7 43.5 513.7 DL(The)72 538.7 Q F0
(XP)3.666 E(ending)-.22 E F1(function returns the number of e)3.666 E
-.165(ve)-.275 G(nts that ha).165 E .33 -.165(ve b)-.22 H(een recei).165
E -.165(ve)-.275 G 2.75(df).165 G(rom the X serv)-2.75 E(er)-.165 E -.22
(bu)72 551.7 S 2.75(th).22 G -2.475 -.22(av e)-2.75 H(not been remo)2.97
E -.165(ve)-.165 G 2.75(df).165 G(rom the e)-2.75 E -.165(ve)-.275 G
(nt queue.).165 E F0(XP)6.416 E(ending)-.22 E F1(is identical to)3.666 E
F0(XEv)3.666 E(entsQueued)-.11 E F1(with the mode)72 564.7 Q F0
(QueuedAfterFlush)3.666 E F1(speci\214ed.)3.666 E F0 2.75
(11.4. Manipulating)72 590.7 R(the Ev)2.75 E(ent Queue)-.11 E F1
(Xlib pro)72 607.6 Q(vides functions that let you manipulate the e)-.165
E -.165(ve)-.275 G(nt queue.).165 E(This section discusses ho)5.5 E 2.75
(wt)-.275 G(o:)-2.75 E 23.65<834f>72 624.5 S(btain e)-23.65 E -.165(ve)
-.275 G(nts, in order).165 E 2.75(,a)-.44 G(nd remo)-2.75 E .33 -.165
(ve t)-.165 H(hem from the queue).165 E 23.65<8350>72 641.4 S(eek at e)
-23.65 E -.165(ve)-.275 G(nts in the queue without remo).165 E
(ving them)-.165 E 23.65<834f>72 658.3 S(btain e)-23.65 E -.165(ve)-.275
G(nts that match the e).165 E -.165(ve)-.275 G
(nt mask or the arbitrary predicate procedures that you pro-).165 E
(vide)99.5 671.3 Q F0 2.75(11.4.1. Retur)72 697.3 R(ning the Next Ev)
-.165 E(ent)-.11 E F1 1.76 -.88(To g)72 714.2 T(et the ne).88 E(xt e)
-.165 E -.165(ve)-.275 G(nt and remo).165 E .33 -.165(ve i)-.165 H 2.75
(tf).165 G(rom the queue, use)-2.75 E F0(XNextEv)3.666 E(ent)-.11 E F1
(.).916 E F0(233)279.75 769 Q 0 Cg EP
%%Page: 234 239
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E .44 LW 36 76.75 36 87.75 DL 36 74.75
36 85.75 DL 41.5 73 36 73 DL 43.5 73 38 73 DL 49 73 43.5 73 DL/F1 11
/Times-Roman@0 SF(XNe)72 88.9 Q(xtEv)-.165 E -1.834(ent \()-.165 F/F2 11
/Times-Italic@0 SF(display).916 E F1(,)A F2 -.165(ev)2.75 G(ent_r).165 E
(eturn)-.407 E F1(\)).916 E(Display *)88.5 101.9 Q F2(display)A F1(;)
.916 E(XEv)88.5 114.9 Q(ent *)-.165 E F2 -.165(ev)C(ent_r).165 E(eturn)
-.407 E F1(;).916 E F2(display)72 135.7 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2 -.165(ev)72 152.6 S(ent_r).165 E(eturn)-.407 E F1(Returns the ne)
16.362 E(xt e)-.165 E -.165(ve)-.275 G(nt in the queue.).165 E 36 148.25
36 159.25 DL 36 146.25 36 157.25 DL 41.5 157.5 36 157.5 DL 43.5 157.5 38
157.5 DL 49 157.5 43.5 157.5 DL(The)72 182.5 Q F0(XNextEv)3.666 E(ent)
-.11 E F1(function copies the \214rst e)3.666 E -.165(ve)-.275 G
(nt from the e).165 E -.165(ve)-.275 G(nt queue into the speci\214ed)
.165 E F0(XEv)3.666 E(ent)-.11 E F1(structure and then remo)72 195.5 Q
-.165(ve)-.165 G 2.75(si).165 G 2.75(tf)-2.75 G(rom the queue.)-2.75 E
(If the e)5.5 E -.165(ve)-.275 G(nt queue is empty).165 E(,)-.715 E F0
(XNextEv)3.666 E(ent)-.11 E F1(\215ushes)3.666 E(the output b)72 208.5 Q
(uf)-.22 E(fer and blocks until an e)-.275 E -.165(ve)-.275 G
(nt is recei).165 E -.165(ve)-.275 G(d.).165 E 1.76 -.88(To p)72 238.4 T
(eek at the e).88 E -.165(ve)-.275 G(nt queue, use).165 E F0(XP)3.666 E
(eekEv)-.22 E(ent)-.11 E F1(.).916 E 36 256.15 36 267.15 DL 36 254.15 36
265.15 DL 41.5 252.4 36 252.4 DL 43.5 252.4 38 252.4 DL 49 252.4 43.5
252.4 DL(XPeekEv)72 268.3 Q -1.834(ent \()-.165 F F2(display).916 E F1
(,)A F2 -.165(ev)2.75 G(ent_r).165 E(eturn)-.407 E F1(\)).916 E
(Display *)88.5 281.3 Q F2(display)A F1(;).916 E(XEv)88.5 294.3 Q(ent *)
-.165 E F2 -.165(ev)C(ent_r).165 E(eturn)-.407 E F1(;).916 E F2(display)
72 315.1 Q F1(Speci\214es the connection to the X serv)40.221 E(er)-.165
E(.)-.605 E F2 -.165(ev)72 332 S(ent_r).165 E(eturn)-.407 E F1
(Returns a cop)16.362 E 2.75(yo)-.11 G 2.75(ft)-2.75 G(he matched e)
-2.75 E -.165(ve)-.275 G(nt').165 E 2.75(sa)-.605 G
(ssociated structure.)-2.75 E 36 327.65 36 338.65 DL 36 325.65 36 336.65
DL 41.5 336.9 36 336.9 DL 43.5 336.9 38 336.9 DL 49 336.9 43.5 336.9 DL
(The)72 361.9 Q F0(XP)3.666 E(eekEv)-.22 E(ent)-.11 E F1
(function returns the \214rst e)3.666 E -.165(ve)-.275 G(nt from the e)
.165 E -.165(ve)-.275 G(nt queue, b).165 E(ut it does not remo)-.22 E
.33 -.165(ve t)-.165 H(he).165 E -2.365 -.275(ev e)72 374.9 T
(nt from the queue.).275 E(If the queue is empty)5.5 E(,)-.715 E F0(XP)
3.666 E(eekEv)-.22 E(ent)-.11 E F1(\215ushes the output b)3.666 E(uf)
-.22 E(fer and blocks)-.275 E(until an e)72 387.9 Q -.165(ve)-.275 G
(nt is recei).165 E -.165(ve)-.275 G 2.75(d. It).165 F
(then copies the e)2.75 E -.165(ve)-.275 G(nt into the client-supplied)
.165 E F0(XEv)3.666 E(ent)-.11 E F1(structure with-)3.666 E(out remo)72
400.9 Q(ving it from the e)-.165 E -.165(ve)-.275 G(nt queue.).165 E F0
2.75(11.4.2. Selecting)72 426.9 R(Ev)2.75 E(ents Using a Pr)-.11 E
(edicate Pr)-.198 E(ocedur)-.198 E(e)-.198 E F1(Each of the functions d\
iscussed in this section requires you to pass a predicate procedure tha\
t)72 443.8 Q(determines if an e)72 456.8 Q -.165(ve)-.275 G
(nt matches what you w).165 E 2.75(ant. Y)-.11 F
(our predicate procedure must decide if the e)-1.21 E -.165(ve)-.275 G
(nt).165 E(is useful without calling an)72 469.8 Q 2.75(yX)-.165 G
(lib functions.)-2.75 E
(If the predicate directly or indirectly causes the state)5.5 E
(of the e)72 482.8 Q -.165(ve)-.275 G
(nt queue to change, the result is not de\214ned.).165 E
(If Xlib has been initialized for threads, the)5.5 E
(predicate is called with the display lock)72 495.8 Q
(ed and the result of a call by the predicate to an)-.11 E 2.75(yX)-.165
G(lib)-2.75 E(function that locks the display is not de\214ned unless t\
he caller has \214rst called)72 508.8 Q F0(XLockDisplay)3.666 E F1(.)
.916 E(The predicate procedure and its associated ar)72 525.7 Q
(guments are:)-.198 E 36 543.45 36 554.45 DL 36 541.45 36 552.45 DL 41.5
539.7 36 539.7 DL 43.5 539.7 38 539.7 DL 49 539.7 43.5 539.7 DL(Bool \()
72 555.6 Q(*).916 E F2(pr)A(edicate)-.407 E F1 .916(\)\().916 G F2
(display)A F1(,)A F2 -.165(ev)2.75 G(ent).165 E F1(,)A F2(ar)2.75 E(g)
-.407 E F1(\)).916 E(Display *)85.75 568.6 Q F2(display)A F1(;).916 E
(XEv)85.75 581.6 Q(ent *)-.165 E F2 -.165(ev)C(ent).165 E F1(;).916 E
(XPointer)85.75 594.6 Q F2(ar)2.75 E(g)-.407 E F1(;).916 E F2(display)72
615.4 Q F1(Speci\214es the connection to the X serv)40.221 E(er)-.165 E
(.)-.605 E F2 -.165(ev)72 632.3 S(ent).165 E F1(Speci\214es the)48.955 E
F0(XEv)3.666 E(ent)-.11 E F1(structure.)3.666 E F2(ar)72 649.2 Q(g)-.407
E F1(Speci\214es the ar)57.128 E(gument passed in from the)-.198 E F0
(XIfEv)3.666 E(ent)-.11 E F1(,).916 E F0(XCheckIfEv)3.666 E(ent)-.11 E
F1 2.75(,o).916 G(r)-2.75 E F0(XP)144.916 662.2 Q(eekIfEv)-.22 E(ent)
-.11 E F1(function.)3.666 E 36 657.85 36 668.85 DL 36 655.85 36 666.85
DL 41.5 667.1 36 667.1 DL 43.5 667.1 38 667.1 DL 49 667.1 43.5 667.1 DL
(The predicate procedure is called once for each e)72 692.1 Q -.165(ve)
-.275 G(nt in the queue until it \214nds a match.).165 E(After)5.5 E
(\214nding a match, the predicate procedure must return)72 705.1 Q F0
-.814(Tr)3.666 G(ue).814 E F1 5.5(.I).916 G 2.75(fi)-5.5 G 2.75(td)-2.75
G(id not \214nd a match, it must)-2.75 E(return)72 718.1 Q F0 -.275(Fa)
3.666 G(lse).275 E F1(.).916 E F0(234)279.75 769 Q 0 Cg EP
%%Page: 235 240
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E/F1 11/Times-Roman@0 SF 1.76 -.88(To c)
72 85 T(heck the e).88 E -.165(ve)-.275 G(nt queue for a matching e).165
E -.165(ve)-.275 G(nt and, if found, remo).165 E .33 -.165(ve t)-.165 H
(he e).165 E -.165(ve)-.275 G(nt from the queue,).165 E(use)72 98 Q F0
(XIfEv)3.666 E(ent)-.11 E F1(.).916 E .44 LW 36 115.75 36 126.75 DL 36
113.75 36 124.75 DL 41.5 112 36 112 DL 43.5 112 38 112 DL 49 112 43.5
112 DL(XIfEv)72 127.9 Q -1.834(ent \()-.165 F/F2 11/Times-Italic@0 SF
(display).916 E F1(,)A F2 -.165(ev)2.75 G(ent_r).165 E(eturn)-.407 E F1
(,)A F2(pr)2.75 E(edicate)-.407 E F1(,)A F2(ar)2.75 E(g)-.407 E F1(\))
.916 E(Display *)88.5 140.9 Q F2(display)A F1(;).916 E(XEv)88.5 153.9 Q
(ent *)-.165 E F2 -.165(ev)C(ent_r).165 E(eturn)-.407 E F1(;).916 E
(Bool \()88.5 166.9 Q(*).916 E F2(pr)A(edicate)-.407 E F1 .916(\)\(\);)
.916 G(XPointer)88.5 179.9 Q F2(ar)2.75 E(g)-.407 E F1(;).916 E F2
(display)72 200.7 Q F1(Speci\214es the connection to the X serv)40.221 E
(er)-.165 E(.)-.605 E F2 -.165(ev)72 217.6 S(ent_r).165 E(eturn)-.407 E
F1(Returns the matched e)16.362 E -.165(ve)-.275 G(nt').165 E 2.75(sa)
-.605 G(ssociated structure.)-2.75 E F2(pr)72 234.5 Q(edicate)-.407 E F1
(Speci\214es the procedure that is to be called to determine if the ne)
30.86 E(xt e)-.165 E -.165(ve)-.275 G(nt in the).165 E
(queue matches what you w)144 247.5 Q(ant.)-.11 E F2(ar)72 264.4 Q(g)
-.407 E F1(Speci\214es the user)57.128 E(-supplied ar)-.22 E
(gument that will be passed to the predicate proce-)-.198 E(dure.)144
277.4 Q 36 273.05 36 284.05 DL 36 271.05 36 282.05 DL 41.5 282.3 36
282.3 DL 43.5 282.3 38 282.3 DL 49 282.3 43.5 282.3 DL(The)72 307.3 Q F0
(XIfEv)3.666 E(ent)-.11 E F1(function completes only when the speci\214\
ed predicate procedure returns)3.666 E F0 -.814(Tr)3.666 G(ue).814 E F1
(for)3.666 E(an e)72 320.3 Q -.165(ve)-.275 G(nt, which indicates an e)
.165 E -.165(ve)-.275 G(nt in the queue matches.).165 E F0(XIfEv)6.416 E
(ent)-.11 E F1(\215ushes the output b)3.666 E(uf)-.22 E(fer if it)-.275
E(blocks w)72 333.3 Q(aiting for additional e)-.11 E -.165(ve)-.275 G
(nts.).165 E F0(XIfEv)6.416 E(ent)-.11 E F1(remo)3.666 E -.165(ve)-.165
G 2.75(st).165 G(he matching e)-2.75 E -.165(ve)-.275 G
(nt from the queue and).165 E
(copies the structure into the client-supplied)72 346.3 Q F0(XEv)3.666 E
(ent)-.11 E F1(structure.)3.666 E 1.76 -.88(To c)72 376.2 T(heck the e)
.88 E -.165(ve)-.275 G(nt queue for a matching e).165 E -.165(ve)-.275 G
(nt without blocking, use).165 E F0(XCheckIfEv)3.666 E(ent)-.11 E F1(.)
.916 E 36 393.95 36 404.95 DL 36 391.95 36 402.95 DL 41.5 390.2 36 390.2
DL 43.5 390.2 38 390.2 DL 49 390.2 43.5 390.2 DL(Bool XCheckIfEv)72
406.1 Q -1.834(ent \()-.165 F F2(display).916 E F1(,)A F2 -.165(ev)2.75
G(ent_r).165 E(eturn)-.407 E F1(,)A F2(pr)2.75 E(edicate)-.407 E F1(,)A
F2(ar)2.75 E(g)-.407 E F1(\)).916 E(Display *)88.5 419.1 Q F2(display)A
F1(;).916 E(XEv)88.5 432.1 Q(ent *)-.165 E F2 -.165(ev)C(ent_r).165 E
(eturn)-.407 E F1(;).916 E(Bool \()88.5 445.1 Q(*).916 E F2(pr)A
(edicate)-.407 E F1 .916(\)\(\);).916 G(XPointer)88.5 458.1 Q F2(ar)2.75
E(g)-.407 E F1(;).916 E F2(display)72 478.9 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2 -.165(ev)72 495.8 S(ent_r).165 E(eturn)-.407 E F1(Returns a cop)
16.362 E 2.75(yo)-.11 G 2.75(ft)-2.75 G(he matched e)-2.75 E -.165(ve)
-.275 G(nt').165 E 2.75(sa)-.605 G(ssociated structure.)-2.75 E F2(pr)72
512.7 Q(edicate)-.407 E F1
(Speci\214es the procedure that is to be called to determine if the ne)
30.86 E(xt e)-.165 E -.165(ve)-.275 G(nt in the).165 E
(queue matches what you w)144 525.7 Q(ant.)-.11 E F2(ar)72 542.6 Q(g)
-.407 E F1(Speci\214es the user)57.128 E(-supplied ar)-.22 E
(gument that will be passed to the predicate proce-)-.198 E(dure.)144
555.6 Q 36 551.25 36 562.25 DL 36 549.25 36 560.25 DL 41.5 560.5 36
560.5 DL 43.5 560.5 38 560.5 DL 49 560.5 43.5 560.5 DL
(When the predicate procedure \214nds a match,)72 585.5 Q F0(XCheckIfEv)
3.666 E(ent)-.11 E F1(copies the matched e)3.666 E -.165(ve)-.275 G
(nt into the).165 E(client-supplied)72 598.5 Q F0(XEv)3.666 E(ent)-.11 E
F1(structure and returns)3.666 E F0 -.814(Tr)3.666 G(ue).814 E F1 5.5
(.\().916 G(This e)-5.5 E -.165(ve)-.275 G(nt is remo).165 E -.165(ve)
-.165 G 2.75(df).165 G(rom the queue.\))-2.75 E(If)5.5 E
(the predicate procedure \214nds no match,)72 611.5 Q F0(XCheckIfEv)
3.666 E(ent)-.11 E F1(returns)3.666 E F0 -.275(Fa)3.666 G(lse).275 E F1
2.75(,a).916 G(nd the output b)-2.75 E(uf)-.22 E(fer will)-.275 E(ha)72
624.5 Q .33 -.165(ve b)-.22 H(een \215ushed.).165 E(All earlier e)5.5 E
-.165(ve)-.275 G(nts stored in the queue are not discarded.).165 E 1.76
-.88(To c)72 654.4 T(heck the e).88 E -.165(ve)-.275 G
(nt queue for a matching e).165 E -.165(ve)-.275 G(nt without remo).165
E(ving the e)-.165 E -.165(ve)-.275 G(nt from the queue, use).165 E F0
(XP)72.916 667.4 Q(eekIfEv)-.22 E(ent)-.11 E F1(.).916 E F0(235)279.75
769 Q 0 Cg EP
%%Page: 236 241
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E .44 LW 36 76.75 36 87.75 DL 36 74.75
36 85.75 DL 41.5 73 36 73 DL 43.5 73 38 73 DL 49 73 43.5 73 DL/F1 11
/Times-Roman@0 SF(XPeekIfEv)72 88.9 Q -1.834(ent \()-.165 F/F2 11
/Times-Italic@0 SF(display).916 E F1(,)A F2 -.165(ev)2.75 G(ent_r).165 E
(eturn)-.407 E F1(,)A F2(pr)2.75 E(edicate)-.407 E F1(,)A F2(ar)2.75 E
(g)-.407 E F1(\)).916 E(Display *)88.5 101.9 Q F2(display)A F1(;).916 E
(XEv)88.5 114.9 Q(ent *)-.165 E F2 -.165(ev)C(ent_r).165 E(eturn)-.407 E
F1(;).916 E(Bool \()88.5 127.9 Q(*).916 E F2(pr)A(edicate)-.407 E F1
.916(\)\(\);).916 G(XPointer)88.5 140.9 Q F2(ar)2.75 E(g)-.407 E F1(;)
.916 E F2(display)72 161.7 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2 -.165(ev)72 178.6 S(ent_r).165 E(eturn)-.407 E F1(Returns a cop)
16.362 E 2.75(yo)-.11 G 2.75(ft)-2.75 G(he matched e)-2.75 E -.165(ve)
-.275 G(nt').165 E 2.75(sa)-.605 G(ssociated structure.)-2.75 E F2(pr)72
195.5 Q(edicate)-.407 E F1
(Speci\214es the procedure that is to be called to determine if the ne)
30.86 E(xt e)-.165 E -.165(ve)-.275 G(nt in the).165 E
(queue matches what you w)144 208.5 Q(ant.)-.11 E F2(ar)72 225.4 Q(g)
-.407 E F1(Speci\214es the user)57.128 E(-supplied ar)-.22 E
(gument that will be passed to the predicate proce-)-.198 E(dure.)144
238.4 Q 36 234.05 36 245.05 DL 36 232.05 36 243.05 DL 41.5 243.3 36
243.3 DL 43.5 243.3 38 243.3 DL 49 243.3 43.5 243.3 DL(The)72 268.3 Q F0
(XP)3.666 E(eekIfEv)-.22 E(ent)-.11 E F1
(function returns only when the speci\214ed predicate procedure returns)
3.666 E F0 -.814(Tr)3.666 G(ue).814 E F1(for an e)72 281.3 Q -.165(ve)
-.275 G 2.75(nt. After).165 F(the predicate procedure \214nds a match,)
2.75 E F0(XP)3.666 E(eekIfEv)-.22 E(ent)-.11 E F1(copies the matched)
3.666 E -2.365 -.275(ev e)72 294.3 T(nt into the client-supplied).275 E
F0(XEv)3.666 E(ent)-.11 E F1(structure without remo)3.666 E(ving the e)
-.165 E -.165(ve)-.275 G(nt from the queue.).165 E F0(XP)72.916 307.3 Q
(eekIfEv)-.22 E(ent)-.11 E F1(\215ushes the output b)3.666 E(uf)-.22 E
(fer if it blocks w)-.275 E(aiting for additional e)-.11 E -.165(ve)
-.275 G(nts.).165 E F0 2.75(11.4.3. Selecting)72 333.3 R(Ev)2.75 E
(ents Using a W)-.11 E(indo)-.198 E 2.75(wo)-.11 G 2.75(rE)-2.75 G -.11
(ve)-2.75 G(nt Mask).11 E F1
(The functions discussed in this section let you select e)72 350.2 Q
-.165(ve)-.275 G(nts by windo).165 E 2.75(wo)-.275 G 2.75(re)-2.75 G
-.165(ve)-3.025 G(nt types, allo).165 E(wing)-.275 E(you to process e)72
363.2 Q -.165(ve)-.275 G(nts out of order).165 E(.)-.605 E 1.76 -.88
(To r)72 393.1 T(emo).88 E .33 -.165(ve t)-.165 H(he ne).165 E(xt e)
-.165 E -.165(ve)-.275 G(nt that matches both a windo).165 E 2.75(wa)
-.275 G(nd an e)-2.75 E -.165(ve)-.275 G(nt mask, use).165 E F0(XW)3.666
E(indo)-.198 E(wEv)-.11 E(ent)-.11 E F1(.).916 E 36 410.85 36 421.85 DL
36 408.85 36 419.85 DL 41.5 407.1 36 407.1 DL 43.5 407.1 38 407.1 DL 49
407.1 43.5 407.1 DL(XW)72 423 Q(indo)-.44 E(wEv)-.275 E -1.834(ent \()
-.165 F F2(display).916 E F1(,)A F2(w)2.75 E F1(,).916 E F2 -.165(ev)
2.75 G(ent_mask).165 E F1(,).916 E F2 -.165(ev)2.75 G(ent_r).165 E
(eturn)-.407 E F1(\)).916 E(Display *)88.5 436 Q F2(display)A F1(;).916
E -.44(Wi)88.5 449 S(ndo).44 E(w)-.275 E F2(w)2.75 E F1(;).916 E(long)
88.5 462 Q F2 -.165(ev)2.75 G(ent_mask).165 E F1(;).916 E(XEv)88.5 475 Q
(ent *)-.165 E F2 -.165(ev)C(ent_r).165 E(eturn)-.407 E F1(;).916 E F2
(display)72 495.8 Q F1(Speci\214es the connection to the X serv)40.221 E
(er)-.165 E(.)-.605 E F2(w)72 512.7 Q F1(Speci\214es the windo)64.663 E
2.75(ww)-.275 G(hose e)-2.75 E -.165(ve)-.275 G
(nts you are interested in.).165 E F2 -.165(ev)72 529.6 S(ent_mask).165
E F1(Speci\214es the e)20.85 E -.165(ve)-.275 G(nt mask.).165 E F2 -.165
(ev)72 546.5 S(ent_r).165 E(eturn)-.407 E F1(Returns the matched e)
16.362 E -.165(ve)-.275 G(nt').165 E 2.75(sa)-.605 G
(ssociated structure.)-2.75 E 36 542.15 36 553.15 DL 36 540.15 36 551.15
DL 41.5 551.4 36 551.4 DL 43.5 551.4 38 551.4 DL 49 551.4 43.5 551.4 DL
(The)72 576.4 Q F0(XW)3.666 E(indo)-.198 E(wEv)-.11 E(ent)-.11 E F1
(function searches the e)3.666 E -.165(ve)-.275 G(nt queue for an e).165
E -.165(ve)-.275 G(nt that matches both the speci-).165 E(\214ed windo)
72 589.4 Q 2.75(wa)-.275 G(nd e)-2.75 E -.165(ve)-.275 G(nt mask.).165 E
(When it \214nds a match,)5.5 E F0(XW)3.666 E(indo)-.198 E(wEv)-.11 E
(ent)-.11 E F1(remo)3.666 E -.165(ve)-.165 G 2.75(st).165 G(hat e)-2.75
E -.165(ve)-.275 G(nt from).165 E
(the queue and copies it into the speci\214ed)72 602.4 Q F0(XEv)3.666 E
(ent)-.11 E F1 2.75(structure. The)3.666 F(other e)2.75 E -.165(ve)-.275
G(nts stored in the queue).165 E(are not discarded.)72 615.4 Q
(If a matching e)5.5 E -.165(ve)-.275 G(nt is not in the queue,).165 E
F0(XW)3.666 E(indo)-.198 E(wEv)-.11 E(ent)-.11 E F1
(\215ushes the output)3.666 E -.22(bu)72 628.4 S -.275(ff).22 G
(er and blocks until one is recei).275 E -.165(ve)-.275 G(d.).165 E 1.76
-.88(To r)72 658.3 T(emo).88 E .33 -.165(ve t)-.165 H(he ne).165 E(xt e)
-.165 E -.165(ve)-.275 G(nt that matches both a windo).165 E 2.75(wa)
-.275 G(nd an e)-2.75 E -.165(ve)-.275 G(nt mask \(if an).165 E
(y\), use)-.165 E F0(XCheck-)3.666 E -.198(Wi)72 671.3 S(ndo).198 E(wEv)
-.11 E(ent)-.11 E F1 5.5(.T).916 G(his function is similar to)-5.5 E F0
(XW)3.666 E(indo)-.198 E(wEv)-.11 E(ent)-.11 E F1 -.165(ex)3.666 G
(cept that it ne).165 E -.165(ve)-.275 G 2.75(rb).165 G(locks and it)
-2.75 E(returns a)72 684.3 Q F0(Bool)3.666 E F1(indicating if the e)
3.666 E -.165(ve)-.275 G(nt w).165 E(as returned.)-.11 E F0(236)279.75
769 Q 0 Cg EP
%%Page: 237 242
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E .44 LW 36 76.75 36 87.75 DL 36 74.75
36 85.75 DL 41.5 73 36 73 DL 43.5 73 38 73 DL 49 73 43.5 73 DL/F1 11
/Times-Roman@0 SF(Bool XCheckW)72 88.9 Q(indo)-.44 E(wEv)-.275 E -1.834
(ent \()-.165 F/F2 11/Times-Italic@0 SF(display).916 E F1(,)A F2(w)2.75
E F1(,).916 E F2 -.165(ev)2.75 G(ent_mask).165 E F1(,).916 E F2 -.165
(ev)2.75 G(ent_r).165 E(eturn)-.407 E F1(\)).916 E(Display *)88.5 101.9
Q F2(display)A F1(;).916 E -.44(Wi)88.5 114.9 S(ndo).44 E(w)-.275 E F2
(w)2.75 E F1(;).916 E(long)88.5 127.9 Q F2 -.165(ev)2.75 G(ent_mask).165
E F1(;).916 E(XEv)88.5 140.9 Q(ent *)-.165 E F2 -.165(ev)C(ent_r).165 E
(eturn)-.407 E F1(;).916 E F2(display)72 161.7 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2(w)72 178.6 Q F1(Speci\214es the windo)64.663 E 2.75(ww)-.275 G
(hose e)-2.75 E -.165(ve)-.275 G(nts you are interested in.).165 E F2
-.165(ev)72 195.5 S(ent_mask).165 E F1(Speci\214es the e)20.85 E -.165
(ve)-.275 G(nt mask.).165 E F2 -.165(ev)72 212.4 S(ent_r).165 E(eturn)
-.407 E F1(Returns the matched e)16.362 E -.165(ve)-.275 G(nt').165 E
2.75(sa)-.605 G(ssociated structure.)-2.75 E 36 208.05 36 219.05 DL 36
206.05 36 217.05 DL 41.5 217.3 36 217.3 DL 43.5 217.3 38 217.3 DL 49
217.3 43.5 217.3 DL(The)72 242.3 Q F0(XCheckW)3.666 E(indo)-.198 E(wEv)
-.11 E(ent)-.11 E F1(function searches the e)3.666 E -.165(ve)-.275 G
(nt queue and then the e).165 E -.165(ve)-.275 G(nts a).165 E -.275(va)
-.22 G(ilable on).275 E(the serv)72 255.3 Q
(er connection for the \214rst e)-.165 E -.165(ve)-.275 G
(nt that matches the speci\214ed windo).165 E 2.75(wa)-.275 G(nd e)-2.75
E -.165(ve)-.275 G(nt mask.).165 E(If it)5.5 E(\214nds a match,)72 268.3
Q F0(XCheckW)3.666 E(indo)-.198 E(wEv)-.11 E(ent)-.11 E F1(remo)3.666 E
-.165(ve)-.165 G 2.75(st).165 G(hat e)-2.75 E -.165(ve)-.275 G
(nt, copies it into the speci\214ed).165 E F0(XEv)3.666 E(ent)-.11 E F1
(structure, and returns)72 281.3 Q F0 -.814(Tr)3.666 G(ue).814 E F1 5.5
(.T).916 G(he other e)-5.5 E -.165(ve)-.275 G
(nts stored in the queue are not discarded.).165 E(If the e)5.5 E -.165
(ve)-.275 G(nt).165 E(you requested is not a)72 294.3 Q -.275(va)-.22 G
(ilable,).275 E F0(XCheckW)3.666 E(indo)-.198 E(wEv)-.11 E(ent)-.11 E F1
(returns)3.666 E F0 -.275(Fa)3.666 G(lse).275 E F1 2.75(,a).916 G
(nd the output b)-2.75 E(uf)-.22 E(fer will)-.275 E(ha)72 307.3 Q .33
-.165(ve b)-.22 H(een \215ushed.).165 E 1.76 -.88(To r)72 337.2 T(emo)
.88 E .33 -.165(ve t)-.165 H(he ne).165 E(xt e)-.165 E -.165(ve)-.275 G
(nt that matches an e).165 E -.165(ve)-.275 G(nt mask, use).165 E F0
(XMaskEv)3.666 E(ent)-.11 E F1(.).916 E 36 354.95 36 365.95 DL 36 352.95
36 363.95 DL 41.5 351.2 36 351.2 DL 43.5 351.2 38 351.2 DL 49 351.2 43.5
351.2 DL(XMaskEv)72 367.1 Q -1.834(ent \()-.165 F F2(display).916 E F1
(,)A F2 -.165(ev)2.75 G(ent_mask).165 E F1(,).916 E F2 -.165(ev)2.75 G
(ent_r).165 E(eturn)-.407 E F1(\)).916 E(Display *)88.5 380.1 Q F2
(display)A F1(;).916 E(long)88.5 393.1 Q F2 -.165(ev)2.75 G(ent_mask)
.165 E F1(;).916 E(XEv)88.5 406.1 Q(ent *)-.165 E F2 -.165(ev)C(ent_r)
.165 E(eturn)-.407 E F1(;).916 E F2(display)72 426.9 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2 -.165(ev)72 443.8 S(ent_mask).165 E F1(Speci\214es the e)20.85 E
-.165(ve)-.275 G(nt mask.).165 E F2 -.165(ev)72 460.7 S(ent_r).165 E
(eturn)-.407 E F1(Returns the matched e)16.362 E -.165(ve)-.275 G(nt')
.165 E 2.75(sa)-.605 G(ssociated structure.)-2.75 E 36 456.35 36 467.35
DL 36 454.35 36 465.35 DL 41.5 465.6 36 465.6 DL 43.5 465.6 38 465.6 DL
49 465.6 43.5 465.6 DL(The)72 490.6 Q F0(XMaskEv)3.666 E(ent)-.11 E F1
(function searches the e)3.666 E -.165(ve)-.275 G(nt queue for the e)
.165 E -.165(ve)-.275 G(nts associated with the speci\214ed).165 E 2.75
(mask. When)72 503.6 R(it \214nds a match,)2.75 E F0(XMaskEv)3.666 E
(ent)-.11 E F1(remo)3.666 E -.165(ve)-.165 G 2.75(st).165 G(hat e)-2.75
E -.165(ve)-.275 G(nt and copies it into the speci\214ed).165 E F0(XEv)
72.916 516.6 Q(ent)-.11 E F1 2.75(structure. The)3.666 F(other e)2.75 E
-.165(ve)-.275 G(nts stored in the queue are not discarded.).165 E
(If the e)5.5 E -.165(ve)-.275 G(nt you).165 E
(requested is not in the queue,)72 529.6 Q F0(XMaskEv)3.666 E(ent)-.11 E
F1(\215ushes the output b)3.666 E(uf)-.22 E(fer and blocks until one is)
-.275 E(recei)72 542.6 Q -.165(ve)-.275 G(d.).165 E 1.76 -.88(To r)72
572.5 T(eturn and remo).88 E .33 -.165(ve t)-.165 H(he ne).165 E(xt e)
-.165 E -.165(ve)-.275 G(nt that matches an e).165 E -.165(ve)-.275 G
(nt mask \(if an).165 E(y\), use)-.165 E F0(XCheck-)3.666 E(MaskEv)72
585.5 Q(ent)-.11 E F1 5.5(.T).916 G(his function is similar to)-5.5 E F0
(XMaskEv)3.666 E(ent)-.11 E F1 -.165(ex)3.666 G(cept that it ne).165 E
-.165(ve)-.275 G 2.75(rb).165 G(locks and it returns a)-2.75 E F0(Bool)
72.916 598.5 Q F1(indicating if the e)3.666 E -.165(ve)-.275 G(nt w).165
E(as returned.)-.11 E F0(237)279.75 769 Q 0 Cg EP
%%Page: 238 243
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E .44 LW 36 76.75 36 87.75 DL 36 74.75
36 85.75 DL 41.5 73 36 73 DL 43.5 73 38 73 DL 49 73 43.5 73 DL/F1 11
/Times-Roman@0 SF(Bool XCheckMaskEv)72 88.9 Q -1.834(ent \()-.165 F/F2
11/Times-Italic@0 SF(display).916 E F1(,)A F2 -.165(ev)2.75 G(ent_mask)
.165 E F1(,).916 E F2 -.165(ev)2.75 G(ent_r).165 E(eturn)-.407 E F1(\))
.916 E(Display *)88.5 101.9 Q F2(display)A F1(;).916 E(long)88.5 114.9 Q
F2 -.165(ev)2.75 G(ent_mask).165 E F1(;).916 E(XEv)88.5 127.9 Q(ent *)
-.165 E F2 -.165(ev)C(ent_r).165 E(eturn)-.407 E F1(;).916 E F2(display)
72 148.7 Q F1(Speci\214es the connection to the X serv)40.221 E(er)-.165
E(.)-.605 E F2 -.165(ev)72 165.6 S(ent_mask).165 E F1(Speci\214es the e)
20.85 E -.165(ve)-.275 G(nt mask.).165 E F2 -.165(ev)72 182.5 S(ent_r)
.165 E(eturn)-.407 E F1(Returns the matched e)16.362 E -.165(ve)-.275 G
(nt').165 E 2.75(sa)-.605 G(ssociated structure.)-2.75 E 36 178.15 36
189.15 DL 36 176.15 36 187.15 DL 41.5 187.4 36 187.4 DL 43.5 187.4 38
187.4 DL 49 187.4 43.5 187.4 DL(The)72 212.4 Q F0(XCheckMaskEv)3.666 E
(ent)-.11 E F1(function searches the e)3.666 E -.165(ve)-.275 G
(nt queue and then an).165 E 2.75(ye)-.165 G -.165(ve)-3.025 G(nts a)
.165 E -.275(va)-.22 G(ilable on the).275 E(serv)72 225.4 Q
(er connection for the \214rst e)-.165 E -.165(ve)-.275 G
(nt that matches the speci\214ed mask.).165 E(If it \214nds a match,)5.5
E F0(XCheck-)3.666 E(MaskEv)72 238.4 Q(ent)-.11 E F1(remo)3.666 E -.165
(ve)-.165 G 2.75(st).165 G(hat e)-2.75 E -.165(ve)-.275 G
(nt, copies it into the speci\214ed).165 E F0(XEv)3.666 E(ent)-.11 E F1
(structure, and returns)3.666 E F0 -.814(Tr)3.666 G(ue).814 E F1(.).916
E(The other e)72 251.4 Q -.165(ve)-.275 G
(nts stored in the queue are not discarded.).165 E(If the e)5.5 E -.165
(ve)-.275 G(nt you requested is not a).165 E -.275(va)-.22 G(ilable,)
.275 E F0(XCheckMaskEv)72.916 264.4 Q(ent)-.11 E F1(returns)3.666 E F0
-.275(Fa)3.666 G(lse).275 E F1 2.75(,a).916 G(nd the output b)-2.75 E
(uf)-.22 E(fer will ha)-.275 E .33 -.165(ve b)-.22 H(een \215ushed.).165
E 1.76 -.88(To r)72 294.3 T(eturn and remo).88 E .33 -.165(ve t)-.165 H
(he ne).165 E(xt e)-.165 E -.165(ve)-.275 G
(nt in the queue that matches an e).165 E -.165(ve)-.275 G(nt type, use)
.165 E F0(XCheckT)3.666 E(ype-)-.814 E(dEv)72 307.3 Q(ent)-.11 E F1(.)
.916 E 36 325.05 36 336.05 DL 36 323.05 36 334.05 DL 41.5 321.3 36 321.3
DL 43.5 321.3 38 321.3 DL 49 321.3 43.5 321.3 DL(Bool XCheckT)72 337.2 Q
(ypedEv)-.88 E -1.834(ent \()-.165 F F2(display).916 E F1(,)A F2 -.165
(ev)2.75 G(ent_type).165 E F1(,).916 E F2 -.165(ev)2.75 G(ent_r).165 E
(eturn)-.407 E F1(\)).916 E(Display *)88.5 350.2 Q F2(display)A F1(;)
.916 E(int)88.5 363.2 Q F2 -.165(ev)2.75 G(ent_type).165 E F1(;).916 E
(XEv)88.5 376.2 Q(ent *)-.165 E F2 -.165(ev)C(ent_r).165 E(eturn)-.407 E
F1(;).916 E F2(display)72 397 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2 -.165(ev)72 413.9 S(ent_type).165 E F1(Speci\214es the e)25.129 E
-.165(ve)-.275 G(nt type to be compared.).165 E F2 -.165(ev)72 443.8 S
(ent_r).165 E(eturn)-.407 E F1(Returns the matched e)16.362 E -.165(ve)
-.275 G(nt').165 E 2.75(sa)-.605 G(ssociated structure.)-2.75 E 36
439.45 36 450.45 DL 36 437.45 36 448.45 DL 41.5 448.7 36 448.7 DL 43.5
448.7 38 448.7 DL 49 448.7 43.5 448.7 DL(The)72 473.7 Q F0(XCheckT)3.666
E(ypedEv)-.814 E(ent)-.11 E F1(function searches the e)3.666 E -.165(ve)
-.275 G(nt queue and then an).165 E 2.75(ye)-.165 G -.165(ve)-3.025 G
(nts a).165 E -.275(va)-.22 G(ilable on the).275 E(serv)72 486.7 Q
(er connection for the \214rst e)-.165 E -.165(ve)-.275 G
(nt that matches the speci\214ed type.).165 E(If it \214nds a match,)5.5
E F0(XCheck-)3.666 E -.814(Ty)72 499.7 S(pedEv).814 E(ent)-.11 E F1
(remo)3.666 E -.165(ve)-.165 G 2.75(st).165 G(hat e)-2.75 E -.165(ve)
-.275 G(nt, copies it into the speci\214ed).165 E F0(XEv)3.666 E(ent)
-.11 E F1(structure, and returns)3.666 E F0 -.814(Tr)3.666 G(ue).814 E
F1(.).916 E(The other e)72 512.7 Q -.165(ve)-.275 G
(nts in the queue are not discarded.).165 E(If the e)5.5 E -.165(ve)
-.275 G(nt is not a).165 E -.275(va)-.22 G(ilable,).275 E F0(XCheckT)
3.666 E(ypedE-)-.814 E -.11(ve)72 525.7 S(nt).11 E F1(returns)3.666 E F0
-.275(Fa)3.666 G(lse).275 E F1 2.75(,a).916 G(nd the output b)-2.75 E
(uf)-.22 E(fer will ha)-.275 E .33 -.165(ve b)-.22 H(een \215ushed.).165
E 1.76 -.88(To r)72 555.6 T(eturn and remo).88 E .33 -.165(ve t)-.165 H
(he ne).165 E(xt e)-.165 E -.165(ve)-.275 G
(nt in the queue that matches an e).165 E -.165(ve)-.275 G
(nt type and a windo).165 E 1.43 -.715(w, u)-.275 H(se).715 E F0
(XCheckT)72.916 568.6 Q(ypedW)-.814 E(indo)-.198 E(wEv)-.11 E(ent)-.11 E
F1(.).916 E F0(238)279.75 769 Q 0 Cg EP
%%Page: 239 244
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E .44 LW 36 76.75 36 87.75 DL 36 74.75
36 85.75 DL 41.5 73 36 73 DL 43.5 73 38 73 DL 49 73 43.5 73 DL/F1 11
/Times-Roman@0 SF(Bool XCheckT)72 88.9 Q(ypedW)-.88 E(indo)-.44 E(wEv)
-.275 E -1.834(ent \()-.165 F/F2 11/Times-Italic@0 SF(display).916 E F1
(,)A F2(w)2.75 E F1(,).916 E F2 -.165(ev)2.75 G(ent_type).165 E F1(,)
.916 E F2 -.165(ev)2.75 G(ent_r).165 E(eturn)-.407 E F1(\)).916 E
(Display *)88.5 101.9 Q F2(display)A F1(;).916 E -.44(Wi)88.5 114.9 S
(ndo).44 E(w)-.275 E F2(w)2.75 E F1(;).916 E(int)88.5 127.9 Q F2 -.165
(ev)2.75 G(ent_type).165 E F1(;).916 E(XEv)88.5 140.9 Q(ent *)-.165 E F2
-.165(ev)C(ent_r).165 E(eturn)-.407 E F1(;).916 E F2(display)72 161.7 Q
F1(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605
E F2(w)72 178.6 Q F1(Speci\214es the windo)64.663 E -.715(w.)-.275 G F2
-.165(ev)72 195.5 S(ent_type).165 E F1(Speci\214es the e)25.129 E -.165
(ve)-.275 G(nt type to be compared.).165 E F2 -.165(ev)72 225.4 S(ent_r)
.165 E(eturn)-.407 E F1(Returns the matched e)16.362 E -.165(ve)-.275 G
(nt').165 E 2.75(sa)-.605 G(ssociated structure.)-2.75 E 36 221.05 36
232.05 DL 36 219.05 36 230.05 DL 41.5 230.3 36 230.3 DL 43.5 230.3 38
230.3 DL 49 230.3 43.5 230.3 DL(The)72 255.3 Q F0(XCheckT)3.666 E(ypedW)
-.814 E(indo)-.198 E(wEv)-.11 E(ent)-.11 E F1(function searches the e)
3.666 E -.165(ve)-.275 G(nt queue and then an).165 E 2.75(ye)-.165 G
-.165(ve)-3.025 G(nts a).165 E -.275(va)-.22 G(il-).275 E
(able on the serv)72 268.3 Q(er connection for the \214rst e)-.165 E
-.165(ve)-.275 G(nt that matches the speci\214ed type and windo).165 E
4.18 -.715(w. I)-.275 H 2.75(fi).715 G(t)-2.75 E(\214nds a match,)72
281.3 Q F0(XCheckT)3.666 E(ypedW)-.814 E(indo)-.198 E(wEv)-.11 E(ent)
-.11 E F1(remo)3.666 E -.165(ve)-.165 G 2.75(st).165 G(he e)-2.75 E
-.165(ve)-.275 G(nt from the queue, copies it into the).165 E
(speci\214ed)72 294.3 Q F0(XEv)3.666 E(ent)-.11 E F1
(structure, and returns)3.666 E F0 -.814(Tr)3.666 G(ue).814 E F1 5.5(.T)
.916 G(he other e)-5.5 E -.165(ve)-.275 G
(nts in the queue are not discarded.).165 E(If the e)72 307.3 Q -.165
(ve)-.275 G(nt is not a).165 E -.275(va)-.22 G(ilable,).275 E F0
(XCheckT)3.666 E(ypedW)-.814 E(indo)-.198 E(wEv)-.11 E(ent)-.11 E F1
(returns)3.666 E F0 -.275(Fa)3.666 G(lse).275 E F1 2.75(,a).916 G
(nd the output b)-2.75 E(uf)-.22 E(fer)-.275 E(will ha)72 320.3 Q .33
-.165(ve b)-.22 H(een \215ushed.).165 E F0 2.75(11.5. Putting)72 346.3 R
(an Ev)2.75 E(ent Back into the Queue)-.11 E F1 1.76 -.88(To p)72 363.2
T(ush an e).88 E -.165(ve)-.275 G(nt back into the e).165 E -.165(ve)
-.275 G(nt queue, use).165 E F0(XPutBackEv)3.666 E(ent)-.11 E F1(.).916
E 36 380.95 36 391.95 DL 36 378.95 36 389.95 DL 41.5 377.2 36 377.2 DL
43.5 377.2 38 377.2 DL 49 377.2 43.5 377.2 DL(XPutBackEv)72 393.1 Q
-1.834(ent \()-.165 F F2(display).916 E F1(,)A F2 -.165(ev)2.75 G(ent)
.165 E F1(\)).916 E(Display *)88.5 406.1 Q F2(display)A F1(;).916 E(XEv)
88.5 419.1 Q(ent *)-.165 E F2 -.165(ev)C(ent).165 E F1(;).916 E F2
(display)72 439.9 Q F1(Speci\214es the connection to the X serv)40.221 E
(er)-.165 E(.)-.605 E F2 -.165(ev)72 456.8 S(ent).165 E F1
(Speci\214es the e)48.955 E -.165(ve)-.275 G(nt.).165 E 36 452.45 36
463.45 DL 36 450.45 36 461.45 DL 41.5 461.7 36 461.7 DL 43.5 461.7 38
461.7 DL 49 461.7 43.5 461.7 DL(The)72 486.7 Q F0(XPutBackEv)3.666 E
(ent)-.11 E F1(function pushes an e)3.666 E -.165(ve)-.275 G
(nt back onto the head of the display').165 E 2.75(se)-.605 G -.165(ve)
-3.025 G(nt queue).165 E(by cop)72 499.7 Q(ying the e)-.11 E -.165(ve)
-.275 G(nt into the queue.).165 E(This can be useful if you read an e)
5.5 E -.165(ve)-.275 G(nt and then decide that).165 E(you w)72 512.7 Q
(ould rather deal with it later)-.11 E 5.5(.T)-.605 G
(here is no limit to the number of times in succession that)-5.5 E
(you can call)72 525.7 Q F0(XPutBackEv)3.666 E(ent)-.11 E F1(.).916 E F0
2.75(11.6. Sending)72 551.7 R(Ev)2.75 E(ents to Other A)-.11 E
(pplications)-.275 E F1 1.76 -.88(To s)72 568.6 T(end an e).88 E -.165
(ve)-.275 G(nt to a speci\214ed windo).165 E 1.43 -.715(w, u)-.275 H(se)
.715 E F0(XSendEv)3.666 E(ent)-.11 E F1 5.5(.T).916 G
(his function is often used in selec-)-5.5 E(tion processing.)72 581.6 Q
-.165(Fo)5.5 G 2.75(re).165 G(xample, the o)-2.915 E
(wner of a selection should use)-.275 E F0(XSendEv)3.666 E(ent)-.11 E F1
(to send a)3.666 E F0(Selec-)3.666 E(tionNotify)72 594.6 Q F1 -2.365
-.275(ev e)3.666 H(nt to a requestor when a selection has been con).275
E -.165(ve)-.44 G(rted and stored as a property).165 E(.)-.715 E F0(239)
279.75 769 Q 0 Cg EP
%%Page: 240 245
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E .44 LW 36 76.75 36 87.75 DL 36 74.75
36 85.75 DL 41.5 73 36 73 DL 43.5 73 38 73 DL 49 73 43.5 73 DL/F1 11
/Times-Roman@0 SF(Status XSendEv)72 88.9 Q -1.834(ent \()-.165 F/F2 11
/Times-Italic@0 SF(display).916 E F1(,)A F2(w)2.75 E F1(,).916 E F2(pr)
2.75 E(opa)-.495 E(gate)-.11 E F1(,).916 E F2 -.165(ev)2.75 G(ent_mask)
.165 E F1(,).916 E F2 -.165(ev)2.75 G(ent_send).165 E F1(\)).916 E
(Display *)88.5 101.9 Q F2(display)A F1(;).916 E -.44(Wi)88.5 114.9 S
(ndo).44 E(w)-.275 E F2(w)2.75 E F1(;).916 E(Bool)88.5 127.9 Q F2(pr)
2.75 E(opa)-.495 E(gate)-.11 E F1(;).916 E(long)88.5 140.9 Q F2 -.165
(ev)2.75 G(ent_mask).165 E F1(;).916 E(XEv)88.5 153.9 Q(ent *)-.165 E F2
-.165(ev)C(ent_send).165 E F1(;).916 E F2(display)72 174.7 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2(w)72 191.6 Q F1(Speci\214es the windo)64.663 E 2.75(wt)-.275 G(he e)
-2.75 E -.165(ve)-.275 G(nt is to be sent to, or).165 E F0 -.22(Po)3.666
G(interW).22 E(indo)-.198 E(w)-.11 E F1 2.75(,o).916 G(r)-2.75 E F0
(InputF)3.666 E(o-)-.275 E(cus)144 204.6 Q F1(.).916 E F2(pr)72 221.5 Q
(opa)-.495 E(gate)-.11 E F1(Speci\214es a Boolean v)27.384 E(alue.)-.275
E F2 -.165(ev)72 238.4 S(ent_mask).165 E F1(Speci\214es the e)20.85 E
-.165(ve)-.275 G(nt mask.).165 E F2 -.165(ev)72 255.3 S(ent_send).165 E
F1(Speci\214es the e)23.292 E -.165(ve)-.275 G(nt that is to be sent.)
.165 E 36 250.95 36 261.95 DL 36 248.95 36 259.95 DL 41.5 260.2 36 260.2
DL 43.5 260.2 38 260.2 DL 49 260.2 43.5 260.2 DL(The)72 285.2 Q F0
(XSendEv)3.666 E(ent)-.11 E F1
(function identi\214es the destination windo)3.666 E 1.43 -.715(w, d)
-.275 H(etermines which clients should).715 E(recei)72 298.2 Q .33 -.165
(ve t)-.275 H(he speci\214ed e).165 E -.165(ve)-.275 G
(nts, and ignores an).165 E 2.75(ya)-.165 G(cti)-2.75 E .33 -.165(ve g)
-.275 H 2.75(rabs. This).165 F(function requires you to pass an)2.75 E
-2.365 -.275(ev e)72 311.2 T(nt mask.).275 E -.165(Fo)5.5 G 2.75(rad)
.165 G(iscussion of the v)-2.75 E(alid e)-.275 E -.165(ve)-.275 G
(nt mask names, see section 10.3.).165 E(This function uses)5.5 E
(the w ar)72 324.2 Q(gument to identify the destination windo)-.198 E
2.75(wa)-.275 G 2.75(sf)-2.75 G(ollo)-2.75 E(ws:)-.275 E 23.65<8349>72
341.1 S 2.75(fwi)-23.65 G(s)-2.75 E F0 -.22(Po)3.666 G(interW).22 E
(indo)-.198 E(w)-.11 E F1 2.75(,t).916 G(he destination windo)-2.75 E
2.75(wi)-.275 G 2.75(st)-2.75 G(he windo)-2.75 E 2.75(wt)-.275 G
(hat contains the pointer)-2.75 E(.)-.605 E 23.65<8349>72 358 S 2.75
(fwi)-23.65 G(s)-2.75 E F0(InputF)3.666 E(ocus)-.275 E F1
(and if the focus windo)3.666 E 2.75(wc)-.275 G(ontains the pointer)
-2.75 E 2.75(,t)-.44 G(he destination windo)-2.75 E 2.75(wi)-.275 G(s)
-2.75 E(the windo)99.5 371 Q 2.75(wt)-.275 G
(hat contains the pointer; otherwise, the destination windo)-2.75 E 2.75
(wi)-.275 G 2.75(st)-2.75 G(he focus win-)-2.75 E(do)99.5 384 Q -.715
(w.)-.275 G 1.76 -.88(To d)72 400.9 T
(etermine which clients should recei).88 E .33 -.165(ve t)-.275 H
(he speci\214ed e).165 E -.165(ve)-.275 G(nts,).165 E F0(XSendEv)3.666 E
(ent)-.11 E F1(uses the propag)3.666 E(ate)-.055 E(ar)72 413.9 Q
(gument as follo)-.198 E(ws:)-.275 E 23.65<8349>72 430.8 S 2.75(fe)
-23.65 G -.165(ve)-3.025 G(nt_mask is the empty set, the e).165 E -.165
(ve)-.275 G(nt is sent to the client that created the destination).165 E
(windo)99.5 443.8 Q 4.18 -.715(w. I)-.275 H 2.75(ft).715 G
(hat client no longer e)-2.75 E(xists, no e)-.165 E -.165(ve)-.275 G
(nt is sent.).165 E 23.65<8349>72 460.7 S 2.75(fp)-23.65 G(ropag)-2.75 E
(ate is)-.055 E F0 -.275(Fa)3.666 G(lse).275 E F1 2.75(,t).916 G(he e)
-2.75 E -.165(ve)-.275 G(nt is sent to e).165 E -.165(ve)-.275 G
(ry client selecting on destination an).165 E 2.75(yo)-.165 G 2.75(ft)
-2.75 G(he)-2.75 E -2.365 -.275(ev e)99.5 473.7 T(nt types in the e).275
E -.165(ve)-.275 G(nt_mask ar).165 E(gument.)-.198 E 23.65<8349>72 490.6
S 2.75(fp)-23.65 G(ropag)-2.75 E(ate is)-.055 E F0 -.814(Tr)3.666 G(ue)
.814 E F1(and no clients ha)3.666 E .33 -.165(ve s)-.22 H
(elected on destination an).165 E 2.75(yo)-.165 G 2.75(ft)-2.75 G(he e)
-2.75 E -.165(ve)-.275 G(nt types in).165 E -2.365 -.275(ev e)99.5 503.6
T(nt-mask, the destination is replaced with the closest ancestor of des\
tination for which).275 E(some client has selected a type in e)99.5
516.6 Q -.165(ve)-.275 G(nt-mask and for which no interv).165 E
(ening windo)-.165 E 2.75(wh)-.275 G(as)-2.75 E
(that type in its do-not-propag)99.5 529.6 Q 2.75(ate-mask. If)-.055 F
(no such windo)2.75 E 2.75(we)-.275 G(xists or if the windo)-2.915 E
2.75(wi)-.275 G 2.75(sa)-2.75 G(n)-2.75 E(ancestor of the focus windo)
99.5 542.6 Q 2.75(wa)-.275 G(nd)-2.75 E F0(InputF)3.666 E(ocus)-.275 E
F1 -.11(wa)3.666 G 2.75(so).11 G
(riginally speci\214ed as the destination,)-2.75 E(the e)99.5 555.6 Q
-.165(ve)-.275 G(nt is not sent to an).165 E 2.75(yc)-.165 G 2.75
(lients. Otherwise,)-2.75 F(the e)2.75 E -.165(ve)-.275 G
(nt is reported to e).165 E -.165(ve)-.275 G(ry client selecting).165 E
(on the \214nal destination an)99.5 568.6 Q 2.75(yo)-.165 G 2.75(ft)
-2.75 G(he types speci\214ed in e)-2.75 E -.165(ve)-.275 G(nt_mask.).165
E(The e)72 585.5 Q -.165(ve)-.275 G(nt in the).165 E F0(XEv)3.666 E(ent)
-.11 E F1(structure must be one of the core e)3.666 E -.165(ve)-.275 G
(nts or one of the e).165 E -.165(ve)-.275 G(nts de\214ned by).165 E
(an e)72 598.5 Q(xtension \(or a)-.165 E F0(BadV)3.666 E(alue)-1.012 E
F1(error results\) so that the X serv)3.666 E(er can correctly byte-sw)
-.165 E(ap the con-)-.11 E(tents as necessary)72 611.5 Q 5.5(.T)-.715 G
(he contents of the e)-5.5 E -.165(ve)-.275 G
(nt are otherwise unaltered and uncheck).165 E(ed by the X)-.11 E(serv)
72 624.5 Q(er e)-.165 E(xcept to force send_e)-.165 E -.165(ve)-.275 G
(nt to).165 E F0 -.814(Tr)3.666 G(ue).814 E F1(in the forw)3.666 E
(arded e)-.11 E -.165(ve)-.275 G(nt and to set the serial number in).165
E(the e)72 637.5 Q -.165(ve)-.275 G(nt correctly; therefore these \214e\
lds and the display \214eld are ignored by).165 E F0(XSendEv)3.666 E
(ent)-.11 E F1(.).916 E F0(XSendEv)72.916 654.4 Q(ent)-.11 E F1
(returns zero if the con)3.666 E -.165(ve)-.44 G
(rsion to wire protocol format f).165 E(ailed and returns nonzero)-.11 E
(otherwise.)72 667.4 Q F0(XSendEv)72.916 684.3 Q(ent)-.11 E F1
(can generate)3.666 E F0(BadV)3.666 E(alue)-1.012 E F1(and)3.666 E F0
(BadW)3.666 E(indo)-.198 E(w)-.11 E F1(errors.)3.666 E F0(240)279.75 769
Q 0 Cg EP
%%Page: 241 246
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E 2.75(11.7. Getting)72 85 R -.22(Po)
2.75 G(inter Motion History).22 E/F1 11/Times-Roman@0 SF(Some X serv)72
101.9 Q(er implementations will maintain a more complete history of poi\
nter motion than is)-.165 E(reported by e)72 114.9 Q -.165(ve)-.275 G
(nt noti\214cation.).165 E(The pointer position at each pointer hardw)
5.5 E(are interrupt may be)-.11 E(stored in a b)72 127.9 Q(uf)-.22 E
(fer for later retrie)-.275 E -.275(va)-.275 G 2.75(l. This).275 F -.22
(bu)2.75 G -.275(ff).22 G(er is called the motion history b).275 E(uf)
-.22 E(fer)-.275 E 5.5(.F)-.605 G(or e)-5.665 E(xample,)-.165 E 2.75(af)
72 140.9 S .55 -.275(ew a)-2.75 H
(pplications, such as paint programs, w).275 E(ant to ha)-.11 E .33
-.165(ve a p)-.22 H(recise history of where the pointer).165 E(tra)72
153.9 Q -.165(ve)-.22 G 2.75(led. Ho).165 F(we)-.275 E -.165(ve)-.275 G
.88 -.44(r, t).165 H(his historical information is highly e).44 E
(xcessi)-.165 E .33 -.165(ve f)-.275 H(or most applications.).165 E 1.76
-.88(To d)72 183.8 T
(etermine the approximate maximum number of elements in the motion b).88
E(uf)-.22 E(fer)-.275 E 2.75(,u)-.44 G(se)-2.75 E F0(XDisplay-)3.666 E
(MotionBufferSize)72 196.8 Q F1(.).916 E .44 LW 36 214.55 36 225.55 DL
36 212.55 36 223.55 DL 41.5 210.8 36 210.8 DL 43.5 210.8 38 210.8 DL 49
210.8 43.5 210.8 DL(unsigned long XDisplayMotionBuf)72 226.7 Q -1.834
(ferSize \()-.275 F/F2 11/Times-Italic@0 SF(display).916 E F1(\)).916 E
(Display *)94 239.7 Q F2(display)A F1(;).916 E F2(display)72 260.5 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
36 256.15 36 267.15 DL 36 254.15 36 265.15 DL 41.5 265.4 36 265.4 DL
43.5 265.4 38 265.4 DL 49 265.4 43.5 265.4 DL(The serv)72 290.4 Q(er ma\
y retain the recent history of the pointer motion and do so to a \214ne\
r granularity than)-.165 E(is reported by)72 303.4 Q F0(MotionNotify)
3.666 E F1 -2.365 -.275(ev e)3.666 H 2.75(nts. The).275 F F0
(XGetMotionEv)3.666 E(ents)-.11 E F1(function mak)3.666 E
(es this history a)-.11 E -.275(va)-.22 G(il-).275 E(able.)72 316.4 Q
1.76 -.88(To g)72 346.3 T(et the motion history for a speci\214ed windo)
.88 E 2.75(wa)-.275 G(nd time, use)-2.75 E F0(XGetMotionEv)3.666 E(ents)
-.11 E F1(.).916 E 36 364.05 36 375.05 DL 36 362.05 36 373.05 DL 41.5
360.3 36 360.3 DL 43.5 360.3 38 360.3 DL 49 360.3 43.5 360.3 DL(XT)72
376.2 Q(imeCoord *XGetMotionEv)-.385 E -1.834(ents \()-.165 F F2
(display).916 E F1(,)A F2(w)2.75 E F1(,).916 E F2(start)2.75 E F1(,).916
E F2(stop)2.75 E F1(,).916 E F2(ne)2.75 E(vents_r)-.165 E(eturn)-.407 E
F1(\)).916 E(Display *)88.5 389.2 Q F2(display)A F1(;).916 E -.44(Wi)
88.5 402.2 S(ndo).44 E(w)-.275 E F2(w)2.75 E F1(;).916 E -.385(Ti)88.5
415.2 S(me).385 E F2(start)2.75 E F1(,).916 E F2(stop)2.75 E F1(;).916 E
(int *)88.5 428.2 Q F2(ne)A(vents_r)-.165 E(eturn)-.407 E F1(;).916 E F2
(display)72 449 Q F1(Speci\214es the connection to the X serv)40.221 E
(er)-.165 E(.)-.605 E F2(w)72 465.9 Q F1(Speci\214es the windo)64.663 E
-.715(w.)-.275 G F2(start)72 482.8 Q(stop)72 495.8 Q F1
(Specify the time interv)53.663 E(al in which the e)-.275 E -.165(ve)
-.275 G(nts are returned from the motion history).165 E -.22(bu)144
508.8 S -.275(ff).22 G(er).275 E 5.5(.Y)-.605 G
(ou can pass a timestamp or)-6.71 E F0(Curr)3.666 E(entT)-.198 E(ime)
-.198 E F1(.).916 E F2(ne)72 525.7 Q(vents_r)-.165 E(eturn)-.407 E F1
(Returns the number of e)6.583 E -.165(ve)-.275 G
(nts from the motion history b).165 E(uf)-.22 E(fer)-.275 E(.)-.605 E 36
521.35 36 532.35 DL 36 519.35 36 530.35 DL 41.5 530.6 36 530.6 DL 43.5
530.6 38 530.6 DL 49 530.6 43.5 530.6 DL(The)72 555.6 Q F0(XGetMotionEv)
3.666 E(ents)-.11 E F1(function returns all e)3.666 E -.165(ve)-.275 G
(nts in the motion history b).165 E(uf)-.22 E(fer that f)-.275 E
(all between)-.11 E(the speci\214ed start and stop times, inclusi)72
568.6 Q -.165(ve)-.275 G 2.75(,a).165 G(nd that ha)-2.75 E .33 -.165
(ve c)-.22 H(oordinates that lie within the speci\214ed).165 E(windo)72
581.6 Q 2.75(w\()-.275 G
(including its borders\) at its present placement.)-2.75 E(If the serv)
5.5 E(er does not support motion his-)-.165 E(tory)72 594.6 Q 2.75(,i)
-.715 G 2.75(ft)-2.75 G(he start time is later than the stop time, or i\
f the start time is in the future, no e)-2.75 E -.165(ve)-.275 G
(nts are).165 E(returned;)72 607.6 Q F0(XGetMotionEv)3.666 E(ents)-.11 E
F1(returns NULL.)3.666 E(If the stop time is in the future, it is equi)
5.5 E -.275(va)-.275 G(lent to).275 E(specifying)72 620.6 Q F0(Curr)
3.666 E(entT)-.198 E(ime)-.198 E F1 5.5(.T).916 G
(he return type for this function is a structure de\214ned as follo)-5.5
E(ws:)-.275 E 36 642.25 36 653.25 DL 36 640.25 36 651.25 DL 41.5 638.5
36 638.5 DL 43.5 638.5 38 638.5 DL 49 638.5 43.5 638.5 DL
(typedef struct {)72 657 Q -.385(Ti)108 670 S(me time;).385 E
(short x, y;)108 683 Q 2.75(}X)72 696 S -.385(Ti)-2.75 G(meCoord;).385 E
36 698.15 36 709.15 DL 36 696.15 36 707.15 DL 41.5 707.4 36 707.4 DL
43.5 707.4 38 707.4 DL 49 707.4 43.5 707.4 DL
(The time member is set to the time, in milliseconds.)72 732.4 Q
(The x and y members are set to the)5.5 E F0(241)279.75 769 Q 0 Cg EP
%%Page: 242 247
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E/F1 11/Times-Roman@0 SF
(coordinates of the pointer and are reported relati)72 85 Q .33 -.165
(ve t)-.275 H 2.75(ot).165 G(he origin of the speci\214ed windo)-2.75 E
4.18 -.715(w. T)-.275 H 2.75(of)-.165 G(ree)-2.75 E
(the data returned from this call, use)72 98 Q F0(XFr)3.666 E(ee)-.198 E
F1(.).916 E F0(XGetMotionEv)72.916 114.9 Q(ents)-.11 E F1
(can generate a)3.666 E F0(BadW)3.666 E(indo)-.198 E(w)-.11 E F1(error)
3.666 E(.)-.605 E F0 2.75(11.8. Handling)72 140.9 R(Pr)2.75 E
(otocol Err)-.198 E(ors)-.198 E F1(Xlib pro)72 157.8 Q(vides functions \
that you can use to enable or disable synchronization and to use the)
-.165 E(def)72 170.8 Q(ault error handlers.)-.11 E F0 2.75
(11.8.1. Enabling)72 196.8 R(or Disabling Synchr)2.75 E(onization)-.198
E F1(When deb)72 213.7 Q(ugging X applications, it often is v)-.22 E
(ery con)-.165 E -.165(ve)-.44 G(nient to require Xlib to beha).165 E
.33 -.165(ve s)-.22 H(yn-).165 E
(chronously so that errors are reported as the)72 226.7 Q 2.75(yo)-.165
G(ccur)-2.75 E 5.5(.T)-.605 G(he follo)-5.5 E
(wing function lets you disable or)-.275 E(enable synchronous beha)72
239.7 Q(vior)-.22 E 5.5(.N)-.605 G
(ote that graphics may occur 30 or more times more slo)-5.5 E(wly when)
-.275 E(synchronization is enabled.)72 252.7 Q
(On POSIX-conformant systems, there is also a global v)5.5 E(ariable)
-.275 E F0(_Xde-)3.666 E -.22(bu)72 265.7 S(g).22 E F1
(that, if set to nonzero before starting a program under a deb)3.666 E
(ugger)-.22 E 2.75(,w)-.44 G(ill force synchronous)-2.75 E(library beha)
72 278.7 Q(vior)-.22 E(.)-.605 E(After completing their w)72 295.6 Q(or\
k, all Xlib functions that generate protocol requests call what is kno)
-.11 E(wn)-.275 E(as an after function.)72 308.6 Q F0(XSetAfterFunction)
6.416 E F1(sets which function is to be called.)3.666 E .44 LW 36 326.35
36 337.35 DL 36 324.35 36 335.35 DL 41.5 322.6 36 322.6 DL 43.5 322.6 38
322.6 DL 49 322.6 43.5 322.6 DL(int \(*XSetAfterFunction)72 338.5 Q(\()
.916 E/F2 11/Times-Italic@0 SF(display).916 E F1(,)A F2(pr)2.75 E
(ocedur)-.495 E(e)-.407 E F1(\)\)\(\)).916 E(Display *)88.5 351.5 Q F2
(display)A F1(;).916 E(int \()88.5 364.5 Q(*).916 E F2(pr).916 E(ocedur)
-.495 E(e)-.407 E F1 .916(\)\().916 G(\);)-.916 E F2(display)72 385.3 Q
F1(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605
E F2(pr)72 402.2 Q(ocedur)-.495 E(e)-.407 E F1
(Speci\214es the procedure to be called.)27.692 E 36 397.85 36 408.85 DL
36 395.85 36 406.85 DL 41.5 407.1 36 407.1 DL 43.5 407.1 38 407.1 DL 49
407.1 43.5 407.1 DL
(The speci\214ed procedure is called with only a display pointer)72
432.1 Q(.)-.605 E F0(XSetAfterFunction)6.416 E F1(returns the)3.666 E
(pre)72 445.1 Q(vious after function.)-.275 E 1.76 -.88(To e)72 462 T
(nable or disable synchronization, use).88 E F0(XSynchr)3.666 E(onize)
-.198 E F1(.).916 E 36 479.75 36 490.75 DL 36 477.75 36 488.75 DL 41.5
476 36 476 DL 43.5 476 38 476 DL 49 476 43.5 476 DL(int \(*XSynchronize)
72 491.9 Q(\().916 E F2(display).916 E F1(,)A F2(onof)2.75 E(f)-.198 E
F1 .916(\)\)).916 G(\(\))-.916 E(Display *)88.5 504.9 Q F2(display)A F1
(;).916 E(Bool)88.5 517.9 Q F2(onof)2.75 E(f)-.198 E F1(;).916 E F2
(display)72 538.7 Q F1(Speci\214es the connection to the X serv)40.221 E
(er)-.165 E(.)-.605 E F2(onof)72 555.6 Q(f)-.198 E F1
(Speci\214es a Boolean v)49.582 E
(alue that indicates whether to enable or disable synchro-)-.275 E
(nization.)144 568.6 Q 36 564.25 36 575.25 DL 36 562.25 36 573.25 DL
41.5 573.5 36 573.5 DL 43.5 573.5 38 573.5 DL 49 573.5 43.5 573.5 DL
(The)72 598.5 Q F0(XSynchr)3.666 E(onize)-.198 E F1
(function returns the pre)3.666 E(vious after function.)-.275 E(If onof)
5.5 E 2.75(fi)-.275 G(s)-2.75 E F0 -.814(Tr)3.666 G(ue).814 E F1(,).916
E F0(XSynchr)3.666 E(onize)-.198 E F1(turns on synchronous beha)72 611.5
Q(vior)-.22 E 5.5(.I)-.605 G 2.75(fo)-5.5 G(nof)-2.75 E 2.75(fi)-.275 G
(s)-2.75 E F0 -.275(Fa)3.666 G(lse).275 E F1(,).916 E F0(XSynchr)3.666 E
(onize)-.198 E F1(turns of)3.666 E 2.75(fs)-.275 G(ynchronous beha)-2.75
E(vior)-.22 E(.)-.605 E F0 2.75(11.8.2. Using)72 637.5 R
(the Default Err)2.75 E(or Handlers)-.198 E F1(There are tw)72 654.4 Q
2.75(od)-.11 G(ef)-2.75 E
(ault error handlers in Xlib: one to handle typically f)-.11 E
(atal conditions \(for e)-.11 E(xample,)-.165 E
(the connection to a display serv)72 667.4 Q
(er dying because a machine crashed\) and one to handle protocol)-.165 E
(errors from the X serv)72 680.4 Q(er)-.165 E 5.5(.T)-.605 G
(hese error handlers can be changed to user)-5.5 E
(-supplied routines if you)-.22 E(prefer your o)72 693.4 Q
(wn error handling and can be changed as often as you lik)-.275 E 2.75
(e. If)-.11 F(either function is)2.75 E(passed a NULL pointer)72 706.4 Q
2.75(,i)-.44 G 2.75(tw)-2.75 G(ill rein)-2.75 E -.22(vo)-.44 G .22 -.11
(ke t).22 H(he def).11 E(ault handler)-.11 E 5.5(.T)-.605 G
(he action of the def)-5.5 E(ault handlers is)-.11 E(to print an e)72
719.4 Q(xplanatory message and e)-.165 E(xit.)-.165 E F0(242)279.75 769
Q 0 Cg EP
%%Page: 243 248
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E/F1 11/Times-Roman@0 SF 1.76 -.88(To s)
72 85 T(et the error handler).88 E 2.75(,u)-.44 G(se)-2.75 E F0(XSetErr)
3.666 E(orHandler)-.198 E F1(.).916 E .44 LW 36 102.75 36 113.75 DL 36
100.75 36 111.75 DL 41.5 99 36 99 DL 43.5 99 38 99 DL 49 99 43.5 99 DL
(int \(*XSetErrorHandler)72 114.9 Q(\().916 E/F2 11/Times-Italic@0 SF
(handler).916 E F1 .916(\)\)\(\)).916 G(int \()88.5 127.9 Q(*).916 E F2
(handler).916 E F1 .916(\)\().916 G(Display *, XErrorEv)-.916 E(ent *\))
-.165 E F2(handler)72 148.7 Q F1(Speci\214es the program')37.779 E 2.75
(ss)-.605 G(upplied error handler)-2.75 E(.)-.605 E 36 144.35 36 155.35
DL 36 142.35 36 153.35 DL 41.5 153.6 36 153.6 DL 43.5 153.6 38 153.6 DL
49 153.6 43.5 153.6 DL(Xlib generally calls the program')72 178.6 Q 2.75
(ss)-.605 G(upplied error handler whene)-2.75 E -.165(ve)-.275 G 2.75
(ra).165 G 2.75(ne)-2.75 G(rror is recei)-2.75 E -.165(ve)-.275 G 2.75
(d. It).165 F(is not)2.75 E(called on)72 191.6 Q F0(BadName)3.666 E F1
(errors from)3.666 E F0(OpenF)3.666 E(ont)-.275 E F1(,).916 E F0
(LookupColor)3.666 E F1 2.75(,o).916 G(r)-2.75 E F0(AllocNamedColor)
3.666 E F1(protocol)3.666 E(requests or on)72 204.6 Q F0(BadF)3.666 E
(ont)-.275 E F1(errors from a)3.666 E F0(QueryF)3.666 E(ont)-.275 E F1
(protocol request.)3.666 E(These errors generally are)5.5 E
(re\215ected back to the program through the procedural interf)72 217.6
Q 2.75(ace. Because)-.11 F(this condition is not)2.75 E(assumed to be f)
72 230.6 Q(atal, it is acceptable for your error handler to return; the\
 returned v)-.11 E(alue is ignored.)-.275 E(Ho)72 243.6 Q(we)-.275 E
-.165(ve)-.275 G .88 -.44(r, t).165 H
(he error handler should not call an).44 E 2.75(yf)-.165 G
(unctions \(directly or indirectly\) on the display that)-2.75 E
(will generate protocol requests or that will look for input e)72 256.6
Q -.165(ve)-.275 G 2.75(nts. The).165 F(pre)2.75 E
(vious error handler is)-.275 E(returned.)72 269.6 Q(The)72 286.5 Q F0
(XErr)3.666 E(orEv)-.198 E(ent)-.11 E F1(structure contains:)3.666 E
(typedef struct {)72 309.9 Q(int type;)108 322.9 Q(Display *display;)108
335.9 Q(/* Display the e)66.692 E -.165(ve)-.275 G(nt w).165 E
(as read from */)-.11 E(unsigned long serial;)108 348.9 Q
(/* serial number of f)52.337 E(ailed request */)-.11 E
(unsigned char error_code;)108 361.9 Q(/* error code of f)29.149 E
(ailed request */)-.11 E(unsigned char request_code;)108 374.9 Q
(/* Major op-code of f)18.754 E(ailed request */)-.11 E
(unsigned char minor_code;)108 387.9 Q(/* Minor op-code of f)24.243 E
(ailed request */)-.11 E(XID resourceid;)108 400.9 Q(/* resource id */)
72.83 E 2.75(}X)72 413.9 S(ErrorEv)-2.75 E(ent;)-.165 E
(The serial member is the number of requests, starting from one, sent o)
72 437.3 Q -.165(ve)-.165 G 2.75(rt).165 G(he netw)-2.75 E
(ork connection)-.11 E(since it w)72 450.3 Q(as opened.)-.11 E
(It is the number that w)5.5 E(as the v)-.11 E(alue of)-.275 E F0
(NextRequest)3.666 E F1(immediately before the)3.666 E -.11(fa)72 463.3
S(iling call w).11 E(as made.)-.11 E
(The request_code member is a protocol request of the procedure that)5.5
E -.11(fa)72 476.3 S(iled, as de\214ned in <).11 E F0(X11/Xpr)A(oto.h)
-.198 E F1 2.75(>. The)B(follo)2.75 E
(wing error codes can be returned by the func-)-.275 E
(tions described in this chapter:)72 489.3 Q 502.5 500.55 72 500.55 DL
F0(Err)72 516.8 Q(or Code)-.198 E(Description)204.825 E 502.5 527.55 72
527.55 DL(BadAccess)72.916 543.8 Q F1 2.75(Ac)214.5 543.8 S
(lient attempts to grab a k)-2.75 E -.165(ey)-.11 G(/b).165 E
(utton combination already)-.22 E(grabbed by another client.)214.5 556.8
Q 2.75(Ac)214.5 572.8 S
(lient attempts to free a colormap entry that it had not already)-2.75 E
(allocated or to free an entry in a colormap that w)214.5 585.8 Q
(as created with)-.11 E(all entries writable.)214.5 598.8 Q 2.75(Ac)
214.5 614.8 S
(lient attempts to store into a read-only or unallocated col-)-2.75 E
(ormap entry)214.5 627.8 Q(.)-.715 E 2.75(Ac)214.5 643.8 S
(lient attempts to modify the access control list from other)-2.75 E
(than the local \(or otherwise authorized\) host.)214.5 656.8 Q 2.75(Ac)
214.5 672.8 S(lient attempts to select an e)-2.75 E -.165(ve)-.275 G
(nt type that another client has).165 E(already selected.)214.5 685.8 Q
F0(243)279.75 769 Q 0 Cg EP
%%Page: 244 249
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E .44 LW 502.5 76.75 72 76.75 DL(Err)72
93 Q(or Code)-.198 E(Description)204.825 E 502.5 103.75 72 103.75 DL
(BadAlloc)72.916 120 Q/F1 11/Times-Roman@0 SF(The serv)214.5 120 Q(er f)
-.165 E(ails to allocate the requested resource.)-.11 E(Note that the)
5.5 E -.165(ex)214.5 133 S(plicit listing of).165 E F0(BadAlloc)3.666 E
F1(errors in requests only co)3.666 E -.165(ve)-.165 G(rs alloca-).165 E
(tion errors at a v)214.5 146 Q(ery coarse le)-.165 E -.165(ve)-.275 G
2.75(la).165 G(nd is not intended to \(nor can it)-2.75 E
(in practice hope to\) co)214.5 159 Q -.165(ve)-.165 G 2.75(ra).165 G
(ll cases of a serv)-2.75 E(er running out of)-.165 E
(allocation space in the middle of service.)214.5 172 Q
(The semantics when a)5.5 E(serv)214.5 185 Q
(er runs out of allocation space are left unspeci\214ed, b)-.165 E(ut a)
-.22 E(serv)214.5 198 Q(er may generate a)-.165 E F0(BadAlloc)3.666 E F1
(error on an)3.666 E 2.75(yr)-.165 G(equest for this)-2.75 E
(reason, and clients should be prepared to recei)214.5 211 Q .33 -.165
(ve s)-.275 H(uch errors and).165 E(handle or discard them.)214.5 224 Q
F0(BadAtom)72.916 240 Q F1 2.75(Av)214.5 240 S(alue for an atom ar)
-3.025 E(gument does not name a de\214ned atom.)-.198 E F0(BadColor)
72.916 256 Q F1 2.75(Av)214.5 256 S(alue for a colormap ar)-3.025 E
(gument does not name a de\214ned col-)-.198 E(ormap.)214.5 269 Q F0
(BadCursor)72.916 285 Q F1 2.75(Av)214.5 285 S(alue for a cursor ar)
-3.025 E(gument does not name a de\214ned cursor)-.198 E(.)-.605 E F0
(BadDrawable)72.916 301 Q F1 2.75(Av)214.5 301 S(alue for a dra)-3.025 E
-.11(wa)-.165 G(ble ar).11 E(gument does not name a de\214ned win-)-.198
E(do)214.5 314 Q 2.75(wo)-.275 G 2.75(rp)-2.75 G(ixmap.)-2.75 E F0(BadF)
72.916 330 Q(ont)-.275 E F1 2.75(Av)214.5 330 S(alue for a font ar)
-3.025 E(gument does not name a de\214ned font \(or)-.198 E 2.75(,i)-.44
G(n)-2.75 E(some cases,)214.5 343 Q F0(GContext)3.666 E F1(\).).916 E F0
(BadGC)72.916 359 Q F1 2.75(Av)214.5 359 S(alue for a)-3.025 E F0
(GContext)3.666 E F1(ar)3.666 E(gument does not name a de\214ned)-.198 E
F0(GContext)215.416 372 Q F1(.).916 E F0(BadIDChoice)72.916 388 Q F1
(The v)214.5 388 Q
(alue chosen for a resource identi\214er either is not included)-.275 E
(in the range assigned to the client or is already in use.)214.5 401 Q
(Under)5.5 E
(normal circumstances, this cannot occur and should be consid-)214.5 414
Q(ered a serv)214.5 427 Q(er or Xlib error)-.165 E(.)-.605 E F0
(BadImplementation)72.916 443 Q F1(The serv)214.5 443 Q
(er does not implement some aspect of the request.)-.165 E(A)5.5 E(serv)
214.5 456 Q
(er that generates this error for a core request is de\214cient.)-.165 E
(As)5.5 E(such, this error is not listed for an)214.5 469 Q 2.75(yo)
-.165 G 2.75(ft)-2.75 G(he requests, b)-2.75 E(ut clients)-.22 E
(should be prepared to recei)214.5 482 Q .33 -.165(ve s)-.275 H
(uch errors and handle or discard).165 E(them.)214.5 495 Q F0(BadLength)
72.916 511 Q F1
(The length of a request is shorter or longer than that required to)
214.5 511 Q(contain the ar)214.5 524 Q 2.75(guments. This)-.198 F
(is an internal Xlib or serv)2.75 E(er error)-.165 E(.)-.605 E
(The length of a request e)214.5 540 Q
(xceeds the maximum length accepted by)-.165 E(the serv)214.5 553 Q(er)
-.165 E(.)-.605 E F0(BadMatch)72.916 569 Q F1
(In a graphics request, the root and depth of the graphics conte)214.5
569 Q(xt)-.165 E(do not match those of the dra)214.5 582 Q -.11(wa)-.165
G(ble.).11 E(An)214.5 598 Q F0(InputOnly)3.666 E F1(windo)3.666 E 2.75
(wi)-.275 G 2.75(su)-2.75 G(sed as a dra)-2.75 E -.11(wa)-.165 G(ble.)
.11 E(Some ar)214.5 614 Q(gument or pair of ar)-.198 E
(guments has the correct type and)-.198 E(range, b)214.5 627 Q(ut it f)
-.22 E(ails to match in some other w)-.11 E(ay required by the)-.11 E
(request.)214.5 640 Q(An)214.5 656 Q F0(InputOnly)3.666 E F1(windo)3.666
E 2.75(wl)-.275 G(acks this attrib)-2.75 E(ute.)-.22 E F0(BadName)72.916
672 Q F1 2.75(Af)214.5 672 S
(ont or color of the speci\214ed name does not e)-2.75 E(xist.)-.165 E
F0(BadPixmap)72.916 688 Q F1 2.75(Av)214.5 688 S(alue for a pixmap ar)
-3.025 E(gument does not name a de\214ned pixmap.)-.198 E F0(BadRequest)
72.916 704 Q F1(The major or minor opcode does not specify a v)214.5 704
Q(alid request.)-.275 E(This usually is an Xlib or serv)214.5 717 Q
(er error)-.165 E(.)-.605 E F0(244)279.75 769 Q 0 Cg EP
%%Page: 245 250
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E .44 LW 502.5 76.75 72 76.75 DL(Err)72
93 Q(or Code)-.198 E(Description)204.825 E 502.5 103.75 72 103.75 DL
(BadV)72.916 120 Q(alue)-1.012 E/F1 11/Times-Roman@0 SF(Some numeric v)
214.5 120 Q(alue f)-.275 E(alls outside of the range of v)-.11 E
(alues accepted)-.275 E(by the request.)214.5 133 Q
(Unless a speci\214c range is speci\214ed for an ar)5.5 E(gu-)-.198 E
(ment, the full range de\214ned by the ar)214.5 146 Q(gument')-.198 E
2.75(st)-.605 G(ype is accepted.)-2.75 E(An)214.5 159 Q 2.75(ya)-.165 G
-.198(rg)-2.75 G(ument de\214ned as a set of alternati).198 E -.165(ve)
-.275 G 2.75(st).165 G(ypically can gener)-2.75 E(-)-.22 E
(ate this error \(due to the encoding\).)214.5 172 Q F0(BadW)72.916 188
Q(indo)-.198 E(w)-.11 E F1 2.75(Av)214.5 188 S(alue for a windo)-3.025 E
2.75(wa)-.275 G -.198(rg)-2.75 G(ument does not name a de\214ned win-)
.198 E(do)214.5 201 Q -.715(w.)-.275 G 502.5 211.75 72 211.75 DL(Note)
277.308 238.5 Q(The)99.5 256.5 Q F0(BadAtom)3.666 E F1(,).916 E F0
(BadColor)3.666 E F1(,).916 E F0(BadCursor)3.666 E F1(,).916 E F0
(BadDrawable)3.666 E F1(,).916 E F0(BadF)3.666 E(ont)-.275 E F1(,).916 E
F0(BadGC)3.666 E F1(,).916 E F0(Bad-)3.666 E(Pixmap)99.5 269.5 Q F1 2.75
(,a).916 G(nd)-2.75 E F0(BadW)3.666 E(indo)-.198 E(w)-.11 E F1
(errors are also used when the ar)3.666 E(gument type is e)-.198 E
(xtended)-.165 E(by a set of \214x)99.5 282.5 Q(ed alternati)-.165 E
-.165(ve)-.275 G(s.).165 E 1.76 -.88(To o)72 322.4 T(btain te).88 E
(xtual descriptions of the speci\214ed error code, use)-.165 E F0
(XGetErr)3.666 E(orT)-.198 E(ext)-1.012 E F1(.).916 E 36 340.15 36
351.15 DL 36 338.15 36 349.15 DL 41.5 336.4 36 336.4 DL 43.5 336.4 38
336.4 DL 49 336.4 43.5 336.4 DL(XGetErrorT)72 352.3 Q -.165(ex)-.77 G
.916(t\().165 G/F2 11/Times-Italic@0 SF(display)A F1(,)A F2(code)2.75 E
F1(,)A F2 -.22(bu)2.75 G -.198(ff).22 G(er_r).198 E(eturn)-.407 E F1(,)A
F2(length)2.75 E F1(\)).916 E(Display *)88.5 365.3 Q F2(display)A F1(;)
.916 E(int)88.5 378.3 Q F2(code)2.75 E F1(;).916 E(char *)88.5 391.3 Q
F2 -.22(bu)C -.198(ff).22 G(er_r).198 E(eturn)-.407 E F1(;).916 E(int)
88.5 404.3 Q F2(length)2.75 E F1(;).916 E F2(display)72 425.1 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2(code)72 442 Q F1(Speci\214es the error code for which you w)51.232 E
(ant to obtain a description.)-.11 E F2 -.22(bu)72 458.9 S -.198(ff).22
G(er_r).198 E(eturn)-.407 E F1(Returns the error description.)13.546 E
F2(length)72 475.8 Q F1(Speci\214es the size of the b)44.5 E(uf)-.22 E
(fer)-.275 E(.)-.605 E 36 471.45 36 482.45 DL 36 469.45 36 480.45 DL
41.5 480.7 36 480.7 DL 43.5 480.7 38 480.7 DL 49 480.7 43.5 480.7 DL
(The)72 505.7 Q F0(XGetErr)3.666 E(orT)-.198 E(ext)-1.012 E F1(function\
 copies a null-terminated string describing the speci\214ed error code)
3.666 E(into the speci\214ed b)72 518.7 Q(uf)-.22 E(fer)-.275 E 5.5(.T)
-.605 G(he returned te)-5.5 E
(xt is in the encoding of the current locale.)-.165 E(It is recom-)5.5 E
(mended that you use this function to obtain an error description becau\
se e)72 531.7 Q(xtensions to Xlib may)-.165 E(de\214ne their o)72 544.7
Q(wn error codes and error strings.)-.275 E 1.76 -.88(To o)72 574.6 T
(btain error messages from the error database, use).88 E F0(XGetErr)
3.666 E(orDatabaseT)-.198 E(ext)-1.012 E F1(.).916 E F0(245)279.75 769 Q
0 Cg EP
%%Page: 246 251
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E .44 LW 36 76.75 36 87.75 DL 36 74.75
36 85.75 DL 41.5 73 36 73 DL 43.5 73 38 73 DL 49 73 43.5 73 DL/F1 11
/Times-Roman@0 SF(XGetErrorDatabaseT)72 88.9 Q -.165(ex)-.77 G .916(t\()
.165 G/F2 11/Times-Italic@0 SF(display)A F1(,)A F2(name)2.75 E F1(,)A F2
(messa)2.75 E -.11(ge)-.11 G F1(,).11 E F2(default_string)2.75 E F1(,)A
F2 -.22(bu)2.75 G -.198(ff).22 G(er_r).198 E(eturn)-.407 E F1(,)A F2
(length)2.75 E F1(\)).916 E(Display *)88.5 101.9 Q F2(display)A F1(;)
.916 E(char *)88.5 114.9 Q F2(name)A F1 2.75(,*)C F2(messa)-2.75 E -.11
(ge)-.11 G F1(;)1.026 E(char *)88.5 127.9 Q F2(default_string)A F1(;)
.916 E(char *)88.5 140.9 Q F2 -.22(bu)C -.198(ff).22 G(er_r).198 E
(eturn)-.407 E F1(;).916 E(int)88.5 153.9 Q F2(length)2.75 E F1(;).916 E
F2(display)72 174.7 Q F1(Speci\214es the connection to the X serv)40.221
E(er)-.165 E(.)-.605 E F2(name)72 191.6 Q F1
(Speci\214es the name of the application.)48.174 E F2(messa)72 208.5 Q
-.11(ge)-.11 G F1(Speci\214es the type of the error message.)35.062 E F2
(default_string)72 225.4 Q F1(Speci\214es the def)10.268 E
(ault error message if none is found in the database.)-.11 E F2 -.22(bu)
72 242.3 S -.198(ff).22 G(er_r).198 E(eturn)-.407 E F1
(Returns the error description.)13.546 E F2(length)72 259.2 Q F1
(Speci\214es the size of the b)44.5 E(uf)-.22 E(fer)-.275 E(.)-.605 E 36
254.85 36 265.85 DL 36 252.85 36 263.85 DL 41.5 264.1 36 264.1 DL 43.5
264.1 38 264.1 DL 49 264.1 43.5 264.1 DL(The)72 289.1 Q F0(XGetErr)3.666
E(orDatabaseT)-.198 E(ext)-1.012 E F1
(function returns a null-terminated message \(or the def)3.666 E
(ault mes-)-.11 E(sage\) from the error message database.)72 302.1 Q
(Xlib uses this function internally to look up its error mes-)5.5 E 2.75
(sages. The)72 315.1 R(te)2.75 E(xt in the def)-.165 E(ault_string ar)
-.11 E(gument is assumed to be in the encoding of the current)-.198 E
(locale, and the te)72 328.1 Q(xt stored in the b)-.165 E(uf)-.22 E
(fer_return ar)-.275 E(gument is in the encoding of the current locale.)
-.198 E(The name ar)72 345 Q
(gument should generally be the name of your application.)-.198 E
(The message ar)5.5 E(gument)-.198 E
(should indicate which type of error message you w)72 358 Q 2.75
(ant. If)-.11 F(the name and message are not in the)2.75 E(Host Portabl\
e Character Encoding, the result is implementation-dependent.)72 371 Q
(Xlib uses three pre-)5.5 E(de\214ned `)72 384 Q(`application names')
-.814 E 2.75('t)-.814 G 2.75(or)-2.75 G(eport errors.)-2.75 E
(In these names, uppercase and lo)5.5 E(wercase matter)-.275 E(.)-.605 E
14.261(XProtoError The)72 400.9 R
(protocol error number is used as a string for the message ar)2.75 E
(gument.)-.198 E 11.203(XlibMessage These)72 417.8 R
(are the message strings that are used internally by the library)2.75 E
(.)-.715 E 25.866(XRequest F)72 434.7 R(or a core protocol request, the\
 major request protocol number is used for the)-.165 E(message ar)144
447.7 Q 2.75(gument. F)-.198 F(or an e)-.165 E(xtension request, the e)
-.165 E(xtension name \(as gi)-.165 E -.165(ve)-.275 G 2.75(nb).165 G(y)
-2.75 E F0(InitExtension)144.916 460.7 Q F1 2.75(\)f).916 G(ollo)-2.75 E
(wed by a period \(.\) and the minor request protocol number is)-.275 E
(used for the message ar)144 473.7 Q 2.75(gument. If)-.198 F
(no string is found in the error database, the)2.75 E(def)144 486.7 Q
(ault_string is returned to the b)-.11 E(uf)-.22 E(fer ar)-.275 E
(gument.)-.198 E 1.76 -.88(To r)72 516.6 T
(eport an error to the user when the requested display does not e).88 E
(xist, use)-.165 E F0(XDisplayName)3.666 E F1(.).916 E 36 534.35 36
545.35 DL 36 532.35 36 543.35 DL 41.5 530.6 36 530.6 DL 43.5 530.6 38
530.6 DL 49 530.6 43.5 530.6 DL(char *XDisplayName)72 546.5 Q(\().916 E
F2(string).916 E F1(\)).916 E(char *)88.5 559.5 Q F2(string)A F1(;).916
E F2(string)72 580.3 Q F1(Speci\214es the character string.)46.326 E 36
575.95 36 586.95 DL 36 573.95 36 584.95 DL 41.5 585.2 36 585.2 DL 43.5
585.2 38 585.2 DL 49 585.2 43.5 585.2 DL(The)72 610.2 Q F0(XDisplayName)
3.666 E F1(function returns the name of the display that)3.666 E F0
(XOpenDisplay)3.666 E F1 -.11(wo)3.666 G(uld attempt).11 E(to use.)72
623.2 Q(If a NULL string is speci\214ed,)5.5 E F0(XDisplayName)3.666 E
F1(looks in the en)3.666 E(vironment for the display)-.44 E
(and returns the display name that)72 636.2 Q F0(XOpenDisplay)3.666 E F1
-.11(wo)3.666 G(uld attempt to use.).11 E(This mak)5.5 E
(es it easier to)-.11 E(report to the user precisely which display the \
program attempted to open when the initial connec-)72 649.2 Q
(tion attempt f)72 662.2 Q(ailed.)-.11 E 1.76 -.88(To h)72 692.1 T
(andle f).88 E(atal I/O errors, use)-.11 E F0(XSetIOErr)3.666 E
(orHandler)-.198 E F1(.).916 E F0(246)279.75 769 Q 0 Cg EP
%%Page: 247 252
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E .44 LW 36 76.75 36 87.75 DL 36 74.75
36 85.75 DL 41.5 73 36 73 DL 43.5 73 38 73 DL 49 73 43.5 73 DL/F1 11
/Times-Roman@0 SF(int \(*XSetIOErrorHandler)72 88.9 Q(\().916 E/F2 11
/Times-Italic@0 SF(handler).916 E F1 .916(\)\)\(\)).916 G(int \()88.5
101.9 Q(*).916 E F2(handler).916 E F1(\)\(Display *\);).916 E F2
(handler)72 122.7 Q F1(Speci\214es the program')37.779 E 2.75(ss)-.605 G
(upplied error handler)-2.75 E(.)-.605 E 36 118.35 36 129.35 DL 36
116.35 36 127.35 DL 41.5 127.6 36 127.6 DL 43.5 127.6 38 127.6 DL 49
127.6 43.5 127.6 DL(The)72 152.6 Q F0(XSetIOErr)3.666 E(orHandler)-.198
E F1(sets the f)3.666 E(atal I/O error handler)-.11 E 5.5(.X)-.605 G
(lib calls the program')-5.5 E 2.75(ss)-.605 G(upplied)-2.75 E
(error handler if an)72 165.6 Q 2.75(ys)-.165 G
(ort of system call error occurs \(for e)-2.75 E
(xample, the connection to the serv)-.165 E(er w)-.165 E(as)-.11 E 2.75
(lost\). This)72 178.6 R(is assumed to be a f)2.75 E
(atal condition, and the called routine should not return.)-.11 E
(If the I/O)5.5 E(error handler does return, the client process e)72
191.6 Q(xits.)-.165 E(Note that the pre)72 208.5 Q
(vious error handler is returned.)-.275 E F0(247)279.75 769 Q 0 Cg EP
%%Page: 248 253
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E/F1 12/Times-Bold@0 SF(Chapter 12)
259.17 111 Q(Input De)228.42 137 Q(vice Functions)-.18 E/F2 11
/Times-Roman@0 SF -1.21(Yo)72 179.9 S 2.75(uc)1.21 G
(an use the Xlib input de)-2.75 E(vice functions to:)-.275 E 23.65<8347>
72 196.8 S(rab the pointer and indi)-23.65 E(vidual b)-.275 E
(uttons on the pointer)-.22 E 23.65<8347>72 213.7 S(rab the k)-23.65 E
-.165(ey)-.11 G(board and indi).165 E(vidual k)-.275 E -.165(ey)-.11 G
2.75(so).165 G 2.75(nt)-2.75 G(he k)-2.75 E -.165(ey)-.11 G(board).165 E
23.65<8352>72 230.6 S(esume e)-23.65 E -.165(ve)-.275 G(nt processing)
.165 E 23.65<834d>72 247.5 S .33 -.165(ove t)-23.65 H(he pointer).165 E
23.65<8353>72 264.4 S(et the input focus)-23.65 E 23.65<834d>72 281.3 S
(anipulate the k)-23.65 E -.165(ey)-.11 G(board and pointer settings)
.165 E 23.65<834d>72 298.2 S(anipulate the k)-23.65 E -.165(ey)-.11 G
(board encoding).165 E F0 2.75(12.1. P)72 324.2 R(ointer Grab)-.22 E
(bing)-.11 E F2(Xlib pro)72 341.1 Q
(vides functions that you can use to control input from the pointer)
-.165 E 2.75(,w)-.44 G(hich usually is a)-2.75 E 2.75(mouse. Usually)72
354.1 R 2.75(,a)-.715 G 2.75(ss)-2.75 G(oon as k)-2.75 E -.165(ey)-.11 G
(board and mouse e).165 E -.165(ve)-.275 G(nts occur).165 E 2.75(,t)-.44
G(he X serv)-2.75 E(er deli)-.165 E -.165(ve)-.275 G(rs them to the).165
E(appropriate client, which is determined by the windo)72 367.1 Q 2.75
(wa)-.275 G(nd input focus.)-2.75 E(The X serv)5.5 E(er pro)-.165 E
(vides)-.165 E(suf)72 380.1 Q(\214cient control o)-.275 E -.165(ve)-.165
G 2.75(re).165 G -.165(ve)-3.025 G(nt deli).165 E -.165(ve)-.275 G
(ry to allo).165 E 2.75(ww)-.275 G(indo)-2.75 E 2.75(wm)-.275 G
(anagers to support mouse ahead and v)-2.75 E(ari-)-.275 E
(ous other styles of user interf)72 393.1 Q 2.75(ace. Man)-.11 F 2.75
(yo)-.165 G 2.75(ft)-2.75 G(hese user interf)-2.75 E
(aces depend on synchronous deli)-.11 E -.165(ve)-.275 G(ry).165 E(of e)
72 406.1 Q -.165(ve)-.275 G 2.75(nts. The).165 F(deli)2.75 E -.165(ve)
-.275 G(ry of).165 E(pointer and k)5.5 E -.165(ey)-.11 G(board e).165 E
-.165(ve)-.275 G(nts can be controlled independently).165 E(.)-.715 E
(When mouse b)72 423 Q(uttons or k)-.22 E -.165(ey)-.11 G(board k).165 E
-.165(ey)-.11 G 2.75(sa).165 G(re grabbed, e)-2.75 E -.165(ve)-.275 G
(nts will be sent to the grabbing client).165 E
(rather than the normal client who w)72 436 Q(ould ha)-.11 E .33 -.165
(ve r)-.22 H(ecei).165 E -.165(ve)-.275 G 2.75(dt).165 G(he e)-2.75 E
-.165(ve)-.275 G 2.75(nt. If).165 F(the k)2.75 E -.165(ey)-.11 G
(board or pointer is in).165 E(asynchronous mode, further mouse and k)72
449 Q -.165(ey)-.11 G(board e).165 E -.165(ve)-.275 G
(nts will continue to be processed.).165 E(If the)5.5 E -.11(ke)72 462 S
(yboard or pointer is in synchronous mode, no further e)-.055 E -.165
(ve)-.275 G(nts are processed until the grabbing).165 E(client allo)72
475 Q(ws them \(see)-.275 E F0(XAllo)3.666 E(wEv)-.11 E(ents)-.11 E F2
2.75(\). The).916 F -.11(ke)2.75 G
(yboard or pointer is considered frozen during)-.055 E(this interv)72
488 Q 2.75(al. The)-.275 F -2.365 -.275(ev e)2.75 H
(nt that triggered the grab can also be replayed.).275 E
(Note that the logical state of a de)72 504.9 Q
(vice \(as seen by client applications\) may lag the ph)-.275 E
(ysical state if)-.055 E(de)72 517.9 Q(vice e)-.275 E -.165(ve)-.275 G
(nt processing is frozen.).165 E(There are tw)72 534.8 Q 2.75(ok)-.11 G
(inds of grabs: acti)-2.75 E .33 -.165(ve a)-.275 H(nd passi).165 E
-.165(ve)-.275 G 5.5(.A).165 G 2.75(na)-5.5 G(cti)-2.75 E .33 -.165
(ve g)-.275 H(rab occurs when a single client).165 E(grabs the k)72
547.8 Q -.165(ey)-.11 G(board and/or pointer e).165 E(xplicitly \(see)
-.165 E F0(XGrabP)3.666 E(ointer)-.22 E F2(and)3.666 E F0(XGrabK)3.666 E
(eyboard)-.275 E F2 2.75(\). A).916 F(pas-)2.75 E(si)72 560.8 Q .33
-.165(ve g)-.275 H(rab occurs when clients grab a particular k).165 E
-.165(ey)-.11 G(board k).165 E .33 -.165(ey o)-.11 H 2.75(rp).165 G
(ointer b)-2.75 E(utton in a windo)-.22 E 1.43 -.715(w, a)-.275 H(nd)
.715 E(the grab will acti)72 573.8 Q -.275(va)-.275 G(te when the k).275
E .33 -.165(ey o)-.11 H 2.75(rb).165 G(utton is actually pressed.)-2.97
E -.165(Pa)5.5 G(ssi).165 E .33 -.165(ve g)-.275 H(rabs are con).165 E
-.165(ve)-.44 G(nient for).165 E(implementing reliable pop-up menus.)72
586.8 Q -.165(Fo)5.5 G 2.75(re).165 G
(xample, you can guarantee that the pop-up is mapped)-2.915 E
(before the up pointer b)72 599.8 Q(utton e)-.22 E -.165(ve)-.275 G
(nt occurs by grabbing a b).165 E(utton requesting synchronous beha)-.22
E(vior)-.22 E(.)-.605 E(The do)72 612.8 Q(wn e)-.275 E -.165(ve)-.275 G
(nt will trigger the grab and freeze further processing of pointer e)
.165 E -.165(ve)-.275 G(nts until you).165 E(ha)72 625.8 Q .33 -.165
(ve t)-.22 H(he chance to map the pop-up windo).165 E 4.18 -.715(w. Y)
-.275 H(ou can then allo)-.495 E 2.75(wf)-.275 G(urther e)-2.75 E -.165
(ve)-.275 G(nt processing.).165 E(The up)5.5 E -2.365 -.275(ev e)72
638.8 T(nt will then be correctly processed relati).275 E .33 -.165
(ve t)-.275 H 2.75(ot).165 G(he pop-up windo)-2.75 E -.715(w.)-.275 G
-.165(Fo)72 655.7 S 2.75(rm).165 G(an)-2.75 E 2.75(yo)-.165 G
(perations, there are functions that tak)-2.75 E 2.75(eat)-.11 G(ime ar)
-2.75 E 2.75(gument. The)-.198 F 2.75(Xs)2.75 G(erv)-2.75 E
(er includes a time-)-.165 E(stamp in v)72 668.7 Q(arious e)-.275 E
-.165(ve)-.275 G 2.75(nts. One).165 F(special time, called)2.75 E F0
(Curr)3.666 E(entT)-.198 E(ime)-.198 E F2 2.75(,r).916 G
(epresents the current serv)-2.75 E(er)-.165 E 2.75(time. The)72 681.7 R
2.75(Xs)2.75 G(erv)-2.75 E(er maintains the time when the input focus w)
-.165 E(as last changed, when the k)-.11 E -.165(ey)-.11 G(board).165 E
-.11(wa)72 694.7 S 2.75(sl).11 G(ast grabbed, when the pointer w)-2.75 E
(as last grabbed, or when a selection w)-.11 E(as last changed.)-.11 E
-1.21(Yo)5.5 G(ur)1.21 E(application may be slo)72 707.7 Q 2.75(wr)-.275
G(eacting to an e)-2.75 E -.165(ve)-.275 G 2.75(nt. Y).165 F
(ou often need some w)-1.21 E(ay to specify that your)-.11 E(request sh\
ould not occur if another application has in the meanwhile tak)72 720.7
Q(en control of the)-.11 E F0(248)279.75 769 Q 0 Cg EP
%%Page: 249 254
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E/F1 11/Times-Roman@0 SF -.11(ke)72 85 S
(yboard, pointer)-.055 E 2.75(,o)-.44 G 2.75(rs)-2.75 G 2.75
(election. By)-2.75 F(pro)2.75 E(viding the timestamp from the e)-.165 E
-.165(ve)-.275 G(nt in the request, you).165 E
(can arrange that the operation not tak)72 98 Q 2.75(ee)-.11 G -.275(ff)
-2.75 G(ect if someone else has performed an operation in the).275 E
(meanwhile.)72 111 Q 2.75(At)72 127.9 S(imestamp is a time v)-2.75 E
(alue, e)-.275 E(xpressed in milliseconds.)-.165 E
(It typically is the time since the last)5.5 E(serv)72 140.9 Q
(er reset.)-.165 E -.385(Ti)5.5 G(mestamp v).385 E
(alues wrap around \(after about 49.7 days\).)-.275 E(The serv)5.5 E(er)
-.165 E 2.75(,g)-.44 G -2.365 -.275(iv e)-2.75 H 2.75(ni).275 G
(ts current)-2.75 E(time is represented by timestamp T)72 153.9 Q 2.75
(,a)-.814 G -.11(lwa)-2.75 G
(ys interprets timestamps from clients by treating half of).11 E
(the timestamp space as being later in time than T)72 166.9 Q 5.5(.O)
-.814 G(ne timestamp v)-5.5 E(alue, named)-.275 E F0(Curr)3.666 E(entT)
-.198 E(ime)-.198 E F1 2.75(,i).916 G(s)-2.75 E(ne)72 179.9 Q -.165(ve)
-.275 G 2.75(rg).165 G(enerated by the serv)-2.75 E(er)-.165 E 5.5(.T)
-.605 G(his v)-5.5 E(alue is reserv)-.275 E
(ed for use in requests to represent the current)-.165 E(serv)72 192.9 Q
(er time.)-.165 E -.165(Fo)72 209.8 S 2.75(rm).165 G(an)-2.75 E 2.75(yf)
-.165 G(unctions in this section, you pass pointer e)-2.75 E -.165(ve)
-.275 G(nt mask bits.).165 E(The v)5.5 E(alid pointer e)-.275 E -.165
(ve)-.275 G(nt).165 E(mask bits are:)72 222.8 Q F0(ButtonPr)3.666 E
(essMask)-.198 E F1(,).916 E F0(ButtonReleaseMask)3.666 E F1(,).916 E F0
(EnterW)3.666 E(indo)-.198 E(wMask)-.11 E F1(,).916 E F0(Lea)3.666 E
-.11(ve)-.275 G -.198(Wi).11 G(ndo).198 E(w-)-.11 E(Mask)72 235.8 Q F1
(,).916 E F0 -.22(Po)3.666 G(interMotionMask).22 E F1(,).916 E F0 -.22
(Po)3.666 G(interMotionHintMask).22 E F1(,).916 E F0(Button1MotionMask)
3.666 E F1(,).916 E F0(But-)3.666 E(ton2MotionMask)72 248.8 Q F1(,).916
E F0(Button3MotionMask)3.666 E F1(,).916 E F0(Button4MotionMask)3.666 E
F1(,).916 E F0(Button5MotionMask)3.666 E F1(,).916 E F0(But-)3.666 E
(tonMotionMask)72 261.8 Q F1 2.75(,a).916 G(nd)-2.75 E F0 -.275(Ke)3.666
G(yMapStateMask).275 E F1 5.5(.F).916 G
(or other functions in this section, you pass)-5.665 E -.11(ke)72 274.8
S(ymask bits.)-.055 E(The v)5.5 E(alid k)-.275 E -.165(ey)-.11 G
(mask bits are:).165 E F0(ShiftMask)3.666 E F1(,).916 E F0(LockMask)
3.666 E F1(,).916 E F0(Contr)3.666 E(olMask)-.198 E F1(,).916 E F0
(Mod1Mask)3.666 E F1(,).916 E F0(Mod2Mask)72.916 287.8 Q F1(,).916 E F0
(Mod3Mask)3.666 E F1(,).916 E F0(Mod4Mask)3.666 E F1 2.75(,a).916 G(nd)
-2.75 E F0(Mod5Mask)3.666 E F1(.).916 E 1.76 -.88(To g)72 317.7 T
(rab the pointer).88 E 2.75(,u)-.44 G(se)-2.75 E F0(XGrabP)3.666 E
(ointer)-.22 E F1(.).916 E .44 LW 36 335.45 36 346.45 DL 36 333.45 36
344.45 DL 41.5 331.7 36 331.7 DL 43.5 331.7 38 331.7 DL 49 331.7 43.5
331.7 DL(int XGrabPointer)72 347.6 Q(\().916 E/F2 11/Times-Italic@0 SF
(display).916 E F1(,)A F2(gr)2.75 E(ab_window)-.165 E F1(,).916 E F2
(owner_e)2.75 E(vents)-.165 E F1(,).916 E F2 -.165(ev)2.75 G(ent_mask)
.165 E F1(,).916 E F2(pointer_mode)2.75 E F1(,).916 E F2 -.11(ke)113.25
360.6 S(yboar)-.22 E(d_mode)-.407 E F1(,).916 E F2(con\214ne_to)2.75 E
F1(,).916 E F2(cur)2.75 E(sor)-.11 E F1(,).916 E F2(time)2.75 E F1(\))
.916 E(Display *)88.5 373.6 Q F2(display)A F1(;).916 E -.44(Wi)88.5
386.6 S(ndo).44 E(w)-.275 E F2(gr)2.75 E(ab_window)-.165 E F1(;).916 E
(Bool)88.5 399.6 Q F2(owner_e)2.75 E(vents)-.165 E F1(;).916 E
(unsigned int)88.5 412.6 Q F2 -.165(ev)2.75 G(ent_mask).165 E F1(;).916
E(int)88.5 425.6 Q F2(pointer_mode)2.75 E F1(,).916 E F2 -.11(ke)2.75 G
(yboar)-.22 E(d_mode)-.407 E F1(;).916 E -.44(Wi)88.5 438.6 S(ndo).44 E
(w)-.275 E F2(con\214ne_to)2.75 E F1(;).916 E(Cursor)88.5 451.6 Q F2
(cur)2.75 E(sor)-.11 E F1(;).916 E -.385(Ti)88.5 464.6 S(me).385 E F2
(time)2.75 E F1(;).916 E F2(display)72 485.4 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2(gr)72 502.3 Q(ab_window)-.165 E F1(Speci\214es the grab windo)11.654
E -.715(w.)-.275 G F2(owner_e)72 519.2 Q(vents)-.165 E F1
(Speci\214es a Boolean v)11.676 E
(alue that indicates whether the pointer e)-.275 E -.165(ve)-.275 G
(nts are to be).165 E
(reported as usual or reported with respect to the grab windo)144 532.2
Q 2.75(wi)-.275 G 2.75(fs)-2.75 G(elected by the)-2.75 E -2.365 -.275
(ev e)144 545.2 T(nt mask.).275 E F2 -.165(ev)72 562.1 S(ent_mask).165 E
F1(Speci\214es which pointer e)20.85 E -.165(ve)-.275 G
(nts are reported to the client.).165 E(The mask is the bitwise)5.5 E
(inclusi)144 575.1 Q .33 -.165(ve O)-.275 H 2.75(Ro).165 G 2.75(ft)-2.75
G(he v)-2.75 E(alid pointer e)-.275 E -.165(ve)-.275 G(nt mask bits.)
.165 E F2(pointer_mode)72 592 Q F1
(Speci\214es further processing of pointer e)10.895 E -.165(ve)-.275 G
2.75(nts. Y).165 F(ou can pass)-1.21 E F0(GrabModeSync)3.666 E F1(or)
3.666 E F0(GrabModeAsync)144.916 605 Q F1(.).916 E F2 -.11(ke)72 621.9 S
(yboar)-.22 E(d_mode)-.407 E F1(Speci\214es further processing of k)144
634.9 Q -.165(ey)-.11 G(board e).165 E -.165(ve)-.275 G 2.75(nts. Y).165
F(ou can pass)-1.21 E F0(GrabModeSync)3.666 E F1(or)144 647.9 Q F0
(GrabModeAsync)3.666 E F1(.).916 E F2(con\214ne_to)72 664.8 Q F1
(Speci\214es the windo)26.174 E 2.75(wt)-.275 G 2.75(oc)-2.75 G
(on\214ne the pointer in or)-2.75 E F0(None)3.666 E F1(.).916 E F2(cur)
72 681.7 Q(sor)-.11 E F1
(Speci\214es the cursor that is to be displayed during the grab or)
43.389 E F0(None)3.666 E F1(.).916 E F2(time)72 698.6 Q F1
(Speci\214es the time.)53.058 E -1.21(Yo)5.5 G 2.75(uc)1.21 G
(an pass either a timestamp or)-2.75 E F0(Curr)3.666 E(entT)-.198 E(ime)
-.198 E F1(.).916 E 36 694.25 36 705.25 DL 36 692.25 36 703.25 DL 41.5
703.5 36 703.5 DL 43.5 703.5 38 703.5 DL 49 703.5 43.5 703.5 DL(The)72
728.5 Q F0(XGrabP)3.666 E(ointer)-.22 E F1(function acti)3.666 E -.165
(ve)-.275 G(ly grabs control of the pointer and returns).165 E F0
(GrabSuccess)3.666 E F1(if the)3.666 E F0(249)279.75 769 Q 0 Cg EP
%%Page: 250 255
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E/F1 11/Times-Roman@0 SF(grab w)72 85 Q
(as successful.)-.11 E(Further pointer e)5.5 E -.165(ve)-.275 G
(nts are reported only to the grabbing client.).165 E F0(XGrab-)6.416 E
-.22(Po)72 98 S(inter).22 E F1 -.165(ove)3.666 G(rrides an).165 E 2.75
(ya)-.165 G(cti)-2.75 E .33 -.165(ve p)-.275 H
(ointer grab by this client.).165 E(If o)5.5 E(wner_e)-.275 E -.165(ve)
-.275 G(nts is).165 E F0 -.275(Fa)3.666 G(lse).275 E F1 2.75(,a).916 G
(ll generated)-2.75 E(pointer e)72 111 Q -.165(ve)-.275 G
(nts are reported with respect to grab_windo).165 E 2.75(wa)-.275 G
(nd are reported only if selected by)-2.75 E -2.365 -.275(ev e)72 124 T
2.75(nt_mask. If).275 F -.275(ow)2.75 G(ner_e).275 E -.165(ve)-.275 G
(nts is).165 E F0 -.814(Tr)3.666 G(ue).814 E F1
(and if a generated pointer e)3.666 E -.165(ve)-.275 G(nt w).165 E
(ould normally be)-.11 E
(reported to this client, it is reported as usual.)72 137 Q
(Otherwise, the e)5.5 E -.165(ve)-.275 G
(nt is reported with respect to the).165 E(grab_windo)72 150 Q 2.75(wa)
-.275 G(nd is reported only if selected by e)-2.75 E -.165(ve)-.275 G
2.75(nt_mask. F).165 F(or either v)-.165 E(alue of o)-.275 E(wner_e)
-.275 E -.165(ve)-.275 G(nts,).165 E(unreported e)72 163 Q -.165(ve)
-.275 G(nts are discarded.).165 E(If the pointer_mode is)72 179.9 Q F0
(GrabModeAsync)3.666 E F1 2.75(,p).916 G(ointer e)-2.75 E -.165(ve)-.275
G(nt processing continues as usual.).165 E(If the)5.5 E
(pointer is currently frozen by this client, the processing of e)72
192.9 Q -.165(ve)-.275 G(nts for the pointer is resumed.).165 E(If)5.5 E
(the pointer_mode is)72 205.9 Q F0(GrabModeSync)3.666 E F1 2.75(,t).916
G(he state of the pointer)-2.75 E 2.75(,a)-.44 G 2.75(ss)-2.75 G
(een by client applications,)-2.75 E(appears to freeze, and the X serv)
72 218.9 Q(er generates no further pointer e)-.165 E -.165(ve)-.275 G
(nts until the grabbing client).165 E(calls)72 231.9 Q F0(XAllo)3.666 E
(wEv)-.11 E(ents)-.11 E F1(or until the pointer grab is released.)3.666
E(Actual pointer changes are not lost)5.5 E
(while the pointer is frozen; the)72 244.9 Q 2.75(ya)-.165 G
(re simply queued in the serv)-2.75 E(er for later processing.)-.165 E
(If the k)72 261.8 Q -.165(ey)-.11 G(board_mode is).165 E F0
(GrabModeAsync)3.666 E F1 2.75(,k).916 G -.165(ey)-2.86 G(board e).165 E
-.165(ve)-.275 G(nt processing is unaf).165 E(fected by acti-)-.275 E
-.275(va)72 274.8 S(tion of the grab).275 E 5.5(.I)-.44 G 2.75(ft)-5.5 G
(he k)-2.75 E -.165(ey)-.11 G(board_mode is).165 E F0(GrabModeSync)3.666
E F1 2.75(,t).916 G(he state of the k)-2.75 E -.165(ey)-.11 G
(board, as seen).165 E
(by client applications, appears to freeze, and the X serv)72 287.8 Q
(er generates no further k)-.165 E -.165(ey)-.11 G(board e).165 E -.165
(ve)-.275 G(nts).165 E(until the grabbing client calls)72 300.8 Q F0
(XAllo)3.666 E(wEv)-.11 E(ents)-.11 E F1
(or until the pointer grab is released.)3.666 E(Actual)5.5 E -.11(ke)72
313.8 S(yboard changes are not lost while the pointer is frozen; the)
-.055 E 2.75(ya)-.165 G(re simply queued in the serv)-2.75 E(er for)
-.165 E(later processing.)72 326.8 Q
(If a cursor is speci\214ed, it is displayed re)72 343.7 Q -.055(ga)
-.165 G(rdless of what windo).055 E 2.75(wt)-.275 G(he pointer is in.)
-2.75 E(If)5.5 E F0(None)3.666 E F1(is)3.666 E
(speci\214ed, the normal cursor for that windo)72 356.7 Q 2.75(wi)-.275
G 2.75(sd)-2.75 G(isplayed when the pointer is in grab_windo)-2.75 E
2.75(wo)-.275 G(r)-2.75 E(one of its subwindo)72 369.7 Q
(ws; otherwise, the cursor for grab_windo)-.275 E 2.75(wi)-.275 G 2.75
(sd)-2.75 G(isplayed.)-2.75 E(If a con\214ne_to windo)72 386.6 Q 2.75
(wi)-.275 G 2.75(ss)-2.75 G
(peci\214ed, the pointer is restricted to stay contained in that windo)
-2.75 E 4.18 -.715(w. T)-.275 H(he).715 E(con\214ne_to windo)72 399.6 Q
2.75(wn)-.275 G(eed ha)-2.75 E .33 -.165(ve n)-.22 H 2.75(or).165 G
(elationship to the grab_windo)-2.75 E 4.18 -.715(w. I)-.275 H 2.75(ft)
.715 G(he pointer is not initially in)-2.75 E(the con\214ne_to windo)72
412.6 Q 1.43 -.715(w, i)-.275 H 2.75(ti).715 G 2.75(sw)-2.75 G
(arped automatically to the closest edge just before the grab acti)-2.86
E -.275(va)-.275 G(tes).275 E(and enter/lea)72 425.6 Q .33 -.165(ve e)
-.22 H -.165(ve)-.11 G(nts are generated as usual.).165 E
(If the con\214ne_to windo)5.5 E 2.75(wi)-.275 G 2.75(ss)-2.75 G
(ubsequently recon\214g-)-2.75 E(ured, the pointer is w)72 438.6 Q
(arped automatically)-.11 E 2.75(,a)-.715 G 2.75(sn)-2.75 G(ecessary)
-2.75 E 2.75(,t)-.715 G 2.75(ok)-2.75 G(eep it contained in the windo)
-2.86 E -.715(w.)-.275 G(The time ar)72 455.5 Q(gument allo)-.198 E
(ws you to a)-.275 E -.22(vo)-.22 G
(id certain circumstances that come up if applications tak).22 E 2.75
(ea)-.11 G(long time to respond or if there are long netw)72 468.5 Q
(ork delays.)-.11 E(Consider a situation where you ha)5.5 E -.165(ve)
-.22 G(tw)72 481.5 Q 2.75(oa)-.11 G
(pplications, both of which normally grab the pointer when click)-2.75 E
(ed on.)-.11 E(If both applications)5.5 E
(specify the timestamp from the e)72 494.5 Q -.165(ve)-.275 G
(nt, the second application may w).165 E(ak)-.11 E 2.75(eu)-.11 G 2.75
(pf)-2.75 G(aster and successfully)-2.86 E
(grab the pointer before the \214rst application.)72 507.5 Q
(The \214rst application then will get an indication that)5.5 E
(the other application grabbed the pointer before its request w)72 520.5
Q(as processed.)-.11 E F0(XGrabP)72.916 537.4 Q(ointer)-.22 E F1
(generates)3.666 E F0(EnterNotify)3.666 E F1(and)3.666 E F0(Lea)3.666 E
-.11(ve)-.275 G(Notify).11 E F1 -2.365 -.275(ev e)3.666 H(nts.).275 E
(Either if grab_windo)72 554.3 Q 2.75(wo)-.275 G 2.75(rc)-2.75 G
(on\214ne_to windo)-2.75 E 2.75(wi)-.275 G 2.75(sn)-2.75 G(ot vie)-2.75
E -.11(wa)-.275 G(ble or if the con\214ne_to windo).11 E 2.75(wl)-.275 G
(ies)-2.75 E(completely outside the boundaries of the root windo)72
567.3 Q -.715(w,)-.275 G F0(XGrabP)4.381 E(ointer)-.22 E F1 -.11(fa)
3.666 G(ils and returns).11 E F0(Grab-)3.666 E(NotV)72 580.3 Q(iewable)
-.407 E F1 5.5(.I).916 G 2.75(ft)-5.5 G(he pointer is acti)-2.75 E -.165
(ve)-.275 G(ly grabbed by some other client, it f).165 E
(ails and returns)-.11 E F0(Alr)72.916 593.3 Q(eadyGrab)-.198 E(bed)-.11
E F1 5.5(.I).916 G 2.75(ft)-5.5 G(he pointer is frozen by an acti)-2.75
E .33 -.165(ve g)-.275 H(rab of another client, it f).165 E
(ails and returns)-.11 E F0(GrabFr)72.916 606.3 Q(ozen)-.198 E F1 5.5
(.I).916 G 2.75(ft)-5.5 G
(he speci\214ed time is earlier than the last-pointer)-2.75 E
(-grab time or later than the cur)-.22 E(-)-.22 E(rent X serv)72 619.3 Q
(er time, it f)-.165 E(ails and returns)-.11 E F0(GrabIn)3.666 E -.11
(va)-.44 G(lidT).11 E(ime)-.198 E F1 5.5(.O).916 G
(therwise, the last-pointer)-5.5 E(-grab time)-.22 E
(is set to the speci\214ed time \()72 632.3 Q F0(Curr).916 E(entT)-.198
E(ime)-.198 E F1(is replaced by the current X serv)3.666 E(er time\).)
-.165 E F0(XGrabP)72.916 649.2 Q(ointer)-.22 E F1(can generate)3.666 E
F0(BadCursor)3.666 E F1(,).916 E F0(BadV)3.666 E(alue)-1.012 E F1 2.75
(,a).916 G(nd)-2.75 E F0(BadW)3.666 E(indo)-.198 E(w)-.11 E F1(errors.)
3.666 E 1.76 -.88(To u)72 679.1 T(ngrab the pointer).88 E 2.75(,u)-.44 G
(se)-2.75 E F0(XUngrabP)3.666 E(ointer)-.22 E F1(.).916 E F0(250)279.75
769 Q 0 Cg EP
%%Page: 251 256
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E .44 LW 36 76.75 36 87.75 DL 36 74.75
36 85.75 DL 41.5 73 36 73 DL 43.5 73 38 73 DL 49 73 43.5 73 DL/F1 11
/Times-Roman@0 SF -1.834(XUngrabPointer \()72 88.9 R/F2 11
/Times-Italic@0 SF(display).916 E F1(,)A F2(time)2.75 E F1(\)).916 E
(Display *)88.5 101.9 Q F2(display)A F1(;).916 E -.385(Ti)88.5 114.9 S
(me).385 E F2(time)2.75 E F1(;).916 E F2(display)72 135.7 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2(time)72 152.6 Q F1(Speci\214es the time.)53.058 E -1.21(Yo)5.5 G 2.75
(uc)1.21 G(an pass either a timestamp or)-2.75 E F0(Curr)3.666 E(entT)
-.198 E(ime)-.198 E F1(.).916 E 36 148.25 36 159.25 DL 36 146.25 36
157.25 DL 41.5 157.5 36 157.5 DL 43.5 157.5 38 157.5 DL 49 157.5 43.5
157.5 DL(The)72 182.5 Q F0(XUngrabP)3.666 E(ointer)-.22 E F1
(function releases the pointer and an)3.666 E 2.75(yq)-.165 G(ueued e)
-2.75 E -.165(ve)-.275 G(nts if this client has).165 E(acti)72 195.5 Q
-.165(ve)-.275 G(ly grabbed the pointer from).165 E F0(XGrabP)3.666 E
(ointer)-.22 E F1(,).916 E F0(XGrabButton)3.666 E F1 2.75(,o).916 G 2.75
(rf)-2.75 G(rom a normal b)-2.75 E(utton press.)-.22 E F0(XUngrabP)
72.916 208.5 Q(ointer)-.22 E F1(does not release the pointer if the spe\
ci\214ed time is earlier than the last-pointer)3.666 E(-)-.22 E
(grab time or is later than the current X serv)72 221.5 Q(er time.)-.165
E(It also generates)5.5 E F0(EnterNotify)3.666 E F1(and)3.666 E F0(Lea)
3.666 E -.11(ve)-.275 G(No-).11 E(tify)72 234.5 Q F1 -2.365 -.275(ev e)
3.666 H 2.75(nts. The).275 F 2.75(Xs)2.75 G(erv)-2.75 E(er performs an)
-.165 E F0(UngrabP)3.666 E(ointer)-.22 E F1
(request automatically if the e)3.666 E -.165(ve)-.275 G(nt windo).165 E
(w)-.275 E(or con\214ne_to windo)72 247.5 Q 2.75(wf)-.275 G(or an acti)
-2.75 E .33 -.165(ve p)-.275 H(ointer grab becomes not vie).165 E -.11
(wa)-.275 G(ble or if windo).11 E 2.75(wr)-.275 G(econ\214gura-)-2.75 E
(tion causes the con\214ne_to windo)72 260.5 Q 2.75(wt)-.275 G 2.75(ol)
-2.75 G(ie completely outside the boundaries of the root windo)-2.75 E
-.715(w.)-.275 G 1.76 -.88(To c)72 290.4 T(hange an acti).88 E .33 -.165
(ve p)-.275 H(ointer grab, use).165 E F0(XChangeActi)3.666 E -.11(ve)
-.11 G -.22(Po).11 G(interGrab).22 E F1(.).916 E 36 308.15 36 319.15 DL
36 306.15 36 317.15 DL 41.5 304.4 36 304.4 DL 43.5 304.4 38 304.4 DL 49
304.4 43.5 304.4 DL(XChangeActi)72 320.3 Q -.165(ve)-.275 G -1.834
(PointerGrab \().165 F F2(display).916 E F1(,)A F2 -.165(ev)2.75 G
(ent_mask).165 E F1(,).916 E F2(cur)2.75 E(sor)-.11 E F1(,).916 E F2
(time)2.75 E F1(\)).916 E(Display *)88.5 333.3 Q F2(display)A F1(;).916
E(unsigned int)88.5 346.3 Q F2 -.165(ev)2.75 G(ent_mask).165 E F1(;).916
E(Cursor)88.5 359.3 Q F2(cur)2.75 E(sor)-.11 E F1(;).916 E -.385(Ti)88.5
372.3 S(me).385 E F2(time)2.75 E F1(;).916 E F2(display)72 393.1 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2 -.165(ev)72 410 S(ent_mask).165 E F1(Speci\214es which pointer e)
20.85 E -.165(ve)-.275 G(nts are reported to the client.).165 E
(The mask is the bitwise)5.5 E(inclusi)144 423 Q .33 -.165(ve O)-.275 H
2.75(Ro).165 G 2.75(ft)-2.75 G(he v)-2.75 E(alid pointer e)-.275 E -.165
(ve)-.275 G(nt mask bits.).165 E F2(cur)72 439.9 Q(sor)-.11 E F1
(Speci\214es the cursor that is to be displayed or)43.389 E F0(None)
3.666 E F1(.).916 E F2(time)72 456.8 Q F1(Speci\214es the time.)53.058 E
-1.21(Yo)5.5 G 2.75(uc)1.21 G(an pass either a timestamp or)-2.75 E F0
(Curr)3.666 E(entT)-.198 E(ime)-.198 E F1(.).916 E 36 452.45 36 463.45
DL 36 450.45 36 461.45 DL 41.5 461.7 36 461.7 DL 43.5 461.7 38 461.7 DL
49 461.7 43.5 461.7 DL(The)72 486.7 Q F0(XChangeActi)3.666 E -.11(ve)
-.11 G -.22(Po).11 G(interGrab).22 E F1
(function changes the speci\214ed dynamic parameters if the)3.666 E
(pointer is acti)72 499.7 Q -.165(ve)-.275 G(ly grabbed by the client a\
nd if the speci\214ed time is no earlier than the last-pointer).165 E(-)
-.22 E(grab time and no later than the current X serv)72 512.7 Q
(er time.)-.165 E(This function has no ef)5.5 E(fect on the passi)-.275
E -.165(ve)-.275 G(parameters of an)72 525.7 Q F0(XGrabButton)3.666 E F1
5.5(.T).916 G(he interpretation of e)-5.5 E -.165(ve)-.275 G
(nt_mask and cursor is the same as).165 E(described in)72 538.7 Q F0
(XGrabP)3.666 E(ointer)-.22 E F1(.).916 E F0(XChangeActi)72.916 555.6 Q
-.11(ve)-.11 G -.22(Po).11 G(interGrab).22 E F1(can generate)3.666 E F0
(BadCursor)3.666 E F1(and)3.666 E F0(BadV)3.666 E(alue)-1.012 E F1
(errors.)3.666 E 1.76 -.88(To g)72 585.5 T(rab a pointer b).88 E
(utton, use)-.22 E F0(XGrabButton)3.666 E F1(.).916 E F0(251)279.75 769
Q 0 Cg EP
%%Page: 252 257
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E .44 LW 36 76.75 36 87.75 DL 36 74.75
36 85.75 DL 41.5 73 36 73 DL 43.5 73 38 73 DL 49 73 43.5 73 DL/F1 11
/Times-Roman@0 SF -1.834(XGrabButton \()72 88.9 R/F2 11/Times-Italic@0
SF(display).916 E F1(,)A F2 -.22(bu)2.75 G(tton).22 E F1(,).916 E F2
(modi\214er)2.75 E(s)-.11 E F1(,).916 E F2(gr)2.75 E(ab_window)-.165 E
F1(,).916 E F2(owner_e)2.75 E(vents)-.165 E F1(,).916 E F2 -.165(ev)2.75
G(ent_mask).165 E F1(,).916 E F2(pointer_mode)116 101.9 Q F1(,).916 E F2
-.11(ke)2.75 G(yboar)-.22 E(d_mode)-.407 E F1(,).916 E F2(con\214ne_to)
2.75 E F1(,).916 E F2(cur)2.75 E(sor)-.11 E F1(\)).916 E(Display *)88.5
114.9 Q F2(display)A F1(;).916 E(unsigned int)88.5 127.9 Q F2 -.22(bu)
2.75 G(tton).22 E F1(;).916 E(unsigned int)88.5 140.9 Q F2(modi\214er)
2.75 E(s)-.11 E F1(;).916 E -.44(Wi)88.5 153.9 S(ndo).44 E(w)-.275 E F2
(gr)2.75 E(ab_window)-.165 E F1(;).916 E(Bool)88.5 166.9 Q F2(owner_e)
2.75 E(vents)-.165 E F1(;).916 E(unsigned int)88.5 179.9 Q F2 -.165(ev)
2.75 G(ent_mask).165 E F1(;).916 E(int)88.5 192.9 Q F2(pointer_mode)2.75
E F1(,).916 E F2 -.11(ke)2.75 G(yboar)-.22 E(d_mode)-.407 E F1(;).916 E
-.44(Wi)88.5 205.9 S(ndo).44 E(w)-.275 E F2(con\214ne_to)2.75 E F1(;)
.916 E(Cursor)88.5 218.9 Q F2(cur)2.75 E(sor)-.11 E F1(;).916 E F2
(display)72 239.7 Q F1(Speci\214es the connection to the X serv)40.221 E
(er)-.165 E(.)-.605 E F2 -.22(bu)72 256.6 S(tton).22 E F1
(Speci\214es the pointer b)44.104 E(utton that is to be grabbed or)-.22
E F0(AnyButton)3.666 E F1(.).916 E F2(modi\214er)72 273.5 Q(s)-.11 E F1
(Speci\214es the set of k)31.168 E -.165(ey)-.11 G(masks or).165 E F0
(AnyModi\214er)3.666 E F1 5.5(.T).916 G(he mask is the bitwise inclusi)
-5.5 E -.165(ve)-.275 G(OR of the v)144 286.5 Q(alid k)-.275 E -.165(ey)
-.11 G(mask bits.).165 E F2(gr)72 303.4 Q(ab_window)-.165 E F1
(Speci\214es the grab windo)11.654 E -.715(w.)-.275 G F2(owner_e)72
320.3 Q(vents)-.165 E F1(Speci\214es a Boolean v)11.676 E
(alue that indicates whether the pointer e)-.275 E -.165(ve)-.275 G
(nts are to be).165 E
(reported as usual or reported with respect to the grab windo)144 333.3
Q 2.75(wi)-.275 G 2.75(fs)-2.75 G(elected by the)-2.75 E -2.365 -.275
(ev e)144 346.3 T(nt mask.).275 E F2 -.165(ev)72 363.2 S(ent_mask).165 E
F1(Speci\214es which pointer e)20.85 E -.165(ve)-.275 G
(nts are reported to the client.).165 E(The mask is the bitwise)5.5 E
(inclusi)144 376.2 Q .33 -.165(ve O)-.275 H 2.75(Ro).165 G 2.75(ft)-2.75
G(he v)-2.75 E(alid pointer e)-.275 E -.165(ve)-.275 G(nt mask bits.)
.165 E F2(pointer_mode)72 393.1 Q F1
(Speci\214es further processing of pointer e)10.895 E -.165(ve)-.275 G
2.75(nts. Y).165 F(ou can pass)-1.21 E F0(GrabModeSync)3.666 E F1(or)
3.666 E F0(GrabModeAsync)144.916 406.1 Q F1(.).916 E F2 -.11(ke)72 423 S
(yboar)-.22 E(d_mode)-.407 E F1(Speci\214es further processing of k)144
436 Q -.165(ey)-.11 G(board e).165 E -.165(ve)-.275 G 2.75(nts. Y).165 F
(ou can pass)-1.21 E F0(GrabModeSync)3.666 E F1(or)144 449 Q F0
(GrabModeAsync)3.666 E F1(.).916 E F2(con\214ne_to)72 465.9 Q F1
(Speci\214es the windo)26.174 E 2.75(wt)-.275 G 2.75(oc)-2.75 G
(on\214ne the pointer in or)-2.75 E F0(None)3.666 E F1(.).916 E F2(cur)
72 482.8 Q(sor)-.11 E F1
(Speci\214es the cursor that is to be displayed or)43.389 E F0(None)
3.666 E F1(.).916 E 36 478.45 36 489.45 DL 36 476.45 36 487.45 DL 41.5
487.7 36 487.7 DL 43.5 487.7 38 487.7 DL 49 487.7 43.5 487.7 DL(The)72
512.7 Q F0(XGrabButton)3.666 E F1(function establishes a passi)3.666 E
.33 -.165(ve g)-.275 H(rab).165 E 5.5(.I)-.44 G 2.75(nt)-5.5 G
(he future, the pointer is acti)-2.75 E -.165(ve)-.275 G(ly).165 E
(grabbed \(as for)72 525.7 Q F0(XGrabP)3.666 E(ointer)-.22 E F1
(\), the last-pointer).916 E
(-grab time is set to the time at which the b)-.22 E(utton)-.22 E -.11
(wa)72 538.7 S 2.75(sp).11 G(ressed \(as transmitted in the)-2.75 E F0
(ButtonPr)3.666 E(ess)-.198 E F1 -2.365 -.275(ev e)3.666 H
(nt\), and the).275 E F0(ButtonPr)3.666 E(ess)-.198 E F1 -2.365 -.275
(ev e)3.666 H(nt is reported if).275 E(all of the follo)72 551.7 Q
(wing conditions are true:)-.275 E 23.65<8354>72 568.6 S
(he pointer is not grabbed, and the speci\214ed b)-23.65 E
(utton is logically pressed when the speci\214ed)-.22 E(modi\214er k)
99.5 581.6 Q -.165(ey)-.11 G 2.75(sa).165 G(re logically do)-2.75 E
(wn, and no other b)-.275 E(uttons or modi\214er k)-.22 E -.165(ey)-.11
G 2.75(sa).165 G(re logically do)-2.75 E(wn.)-.275 E 23.65<8354>72 598.5
S(he grab_windo)-23.65 E 2.75(wc)-.275 G(ontains the pointer)-2.75 E(.)
-.605 E 23.65<8354>72 615.4 S(he con\214ne_to windo)-23.65 E 2.75(w\()
-.275 G(if an)-2.75 E(y\) is vie)-.165 E -.11(wa)-.275 G(ble.).11 E
23.65<8341>72 632.3 S(passi)-20.9 E .33 -.165(ve g)-.275 H
(rab on the same b).165 E(utton/k)-.22 E .33 -.165(ey c)-.11 H
(ombination does not e).165 E(xist on an)-.165 E 2.75(ya)-.165 G
(ncestor of)-2.75 E(grab_windo)99.5 645.3 Q -.715(w.)-.275 G
(The interpretation of the remaining ar)72 662.2 Q(guments is as for)
-.198 E F0(XGrabP)3.666 E(ointer)-.22 E F1 5.5(.T).916 G(he acti)-5.5 E
.33 -.165(ve g)-.275 H(rab is termi-).165 E
(nated automatically when the logical state of the pointer has all b)72
675.2 Q(uttons released \(independent of)-.22 E
(the state of the logical modi\214er k)72 688.2 Q -.165(ey)-.11 G(s\).)
.165 E(Note that the logical state of a de)72 705.1 Q
(vice \(as seen by client applications\) may lag the ph)-.275 E
(ysical state if)-.055 E(de)72 718.1 Q(vice e)-.275 E -.165(ve)-.275 G
(nt processing is frozen.).165 E F0(252)279.75 769 Q 0 Cg EP
%%Page: 253 258
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E/F1 11/Times-Roman@0 SF(This request o)
72 85 Q -.165(ve)-.165 G(rrides all pre).165 E
(vious grabs by the same client on the same b)-.275 E(utton/k)-.22 E .33
-.165(ey c)-.11 H(ombinations).165 E(on the same windo)72 98 Q 4.18
-.715(w. A)-.275 H(modi\214ers of)3.465 E F0(AnyModi\214er)3.666 E F1
(is equi)3.666 E -.275(va)-.275 G(lent to issuing the grab request for)
.275 E(all possible modi\214er combinations \(including the combination\
 of no modi\214ers\).)72 111 Q(It is not required)5.5 E
(that all modi\214ers speci\214ed ha)72 124 Q .33 -.165(ve c)-.22 H
(urrently assigned K).165 E -.165(ey)-.275 G 2.75(Codes. A).165 F -.22
(bu)2.75 G(tton of).22 E F0(AnyButton)3.666 E F1(is equi)3.666 E(v-)
-.275 E(alent to issuing the request for all possible b)72 137 Q 2.75
(uttons. Otherwise,)-.22 F(it is not required that the speci\214ed)2.75
E -.22(bu)72 150 S(tton currently be assigned to a ph).22 E(ysical b)
-.055 E(utton.)-.22 E(If some other client has already issued an)72
166.9 Q F0(XGrabButton)3.666 E F1(with the same b)3.666 E(utton/k)-.22 E
.33 -.165(ey c)-.11 H(ombination).165 E(on the same windo)72 179.9 Q
1.43 -.715(w, a)-.275 H F0(BadAccess)4.381 E F1(error results.)3.666 E
(When using)5.5 E F0(AnyModi\214er)3.666 E F1(or)3.666 E F0(AnyButton)
3.666 E F1 2.75(,t).916 G(he)-2.75 E(request f)72 192.9 Q
(ails completely)-.11 E 2.75(,a)-.715 G(nd a)-2.75 E F0(BadAccess)3.666
E F1(error results \(no grabs are established\) if there is a)3.666 E
(con\215icting grab for an)72 205.9 Q 2.75(yc)-.165 G(ombination.)-2.75
E F0(XGrabButton)6.416 E F1(has no ef)3.666 E(fect on an acti)-.275 E
.33 -.165(ve g)-.275 H(rab).165 E(.)-.44 E F0(XGrabButton)72.916 222.8 Q
F1(can generate)3.666 E F0(BadCursor)3.666 E F1(,).916 E F0(BadV)3.666 E
(alue)-1.012 E F1 2.75(,a).916 G(nd)-2.75 E F0(BadW)3.666 E(indo)-.198 E
(w)-.11 E F1(errors.)3.666 E 1.76 -.88(To u)72 252.7 T
(ngrab a pointer b).88 E(utton, use)-.22 E F0(XUngrabButton)3.666 E F1
(.).916 E .44 LW 36 270.45 36 281.45 DL 36 268.45 36 279.45 DL 41.5
266.7 36 266.7 DL 43.5 266.7 38 266.7 DL 49 266.7 43.5 266.7 DL -1.834
(XUngrabButton \()72 282.6 R/F2 11/Times-Italic@0 SF(display).916 E F1
(,)A F2 -.22(bu)2.75 G(tton).22 E F1(,).916 E F2(modi\214er)2.75 E(s)
-.11 E F1(,).916 E F2(gr)2.75 E(ab_window)-.165 E F1(\)).916 E
(Display *)88.5 295.6 Q F2(display)A F1(;).916 E(unsigned int)88.5 308.6
Q F2 -.22(bu)2.75 G(tton).22 E F1(;).916 E(unsigned int)88.5 321.6 Q F2
(modi\214er)2.75 E(s)-.11 E F1(;).916 E -.44(Wi)88.5 334.6 S(ndo).44 E
(w)-.275 E F2(gr)2.75 E(ab_window)-.165 E F1(;).916 E F2(display)72
355.4 Q F1(Speci\214es the connection to the X serv)40.221 E(er)-.165 E
(.)-.605 E F2 -.22(bu)72 372.3 S(tton).22 E F1
(Speci\214es the pointer b)44.104 E(utton that is to be released or)-.22
E F0(AnyButton)3.666 E F1(.).916 E F2(modi\214er)72 389.2 Q(s)-.11 E F1
(Speci\214es the set of k)31.168 E -.165(ey)-.11 G(masks or).165 E F0
(AnyModi\214er)3.666 E F1 5.5(.T).916 G(he mask is the bitwise inclusi)
-5.5 E -.165(ve)-.275 G(OR of the v)144 402.2 Q(alid k)-.275 E -.165(ey)
-.11 G(mask bits.).165 E F2(gr)72 419.1 Q(ab_window)-.165 E F1
(Speci\214es the grab windo)11.654 E -.715(w.)-.275 G 36 414.75 36
425.75 DL 36 412.75 36 423.75 DL 41.5 424 36 424 DL 43.5 424 38 424 DL
49 424 43.5 424 DL(The)72 449 Q F0(XUngrabButton)3.666 E F1
(function releases the passi)3.666 E .33 -.165(ve b)-.275 H(utton/k)
-.055 E .33 -.165(ey c)-.11 H(ombination on the speci\214ed win-).165 E
(do)72 462 Q 2.75(wi)-.275 G 2.75(fi)-2.75 G 2.75(tw)-2.75 G
(as grabbed by this client.)-2.86 E 2.75(Am)5.5 G(odi\214ers of)-2.75 E
F0(AnyModi\214er)3.666 E F1(is equi)3.666 E -.275(va)-.275 G
(lent to issuing the).275 E(ungrab request for all possible modi\214er \
combinations, including the combination of no modi\214ers.)72 475 Q 2.75
(Ab)72 488 S(utton of)-2.97 E F0(AnyButton)3.666 E F1(is equi)3.666 E
-.275(va)-.275 G(lent to issuing the request for all possible b).275 E
(uttons.)-.22 E F0(XUngrab-)6.416 E(Button)72 501 Q F1(has no ef)3.666 E
(fect on an acti)-.275 E .33 -.165(ve g)-.275 H(rab).165 E(.)-.44 E F0
(XUngrabButton)72.916 517.9 Q F1(can generate)3.666 E F0(BadV)3.666 E
(alue)-1.012 E F1(and)3.666 E F0(BadW)3.666 E(indo)-.198 E(w)-.11 E F1
(errors.)3.666 E F0 2.75(12.2. K)72 543.9 R(eyboard Grab)-.275 E(bing)
-.11 E F1(Xlib pro)72 560.8 Q
(vides functions that you can use to grab or ungrab the k)-.165 E -.165
(ey)-.11 G(board as well as allo).165 E 2.75(we)-.275 G -.165(ve)-3.025
G(nts.).165 E -.165(Fo)72 577.7 S 2.75(rm).165 G(an)-2.75 E 2.75(yf)
-.165 G(unctions in this section, you pass k)-2.75 E -.165(ey)-.11 G
(mask bits.).165 E(The v)5.5 E(alid k)-.275 E -.165(ey)-.11 G
(mask bits are:).165 E F0(Shift-)3.666 E(Mask)72 590.7 Q F1(,).916 E F0
(LockMask)3.666 E F1(,).916 E F0(Contr)3.666 E(olMask)-.198 E F1(,).916
E F0(Mod1Mask)3.666 E F1(,).916 E F0(Mod2Mask)3.666 E F1(,).916 E F0
(Mod3Mask)3.666 E F1(,).916 E F0(Mod4Mask)3.666 E F1 2.75(,a).916 G(nd)
-2.75 E F0(Mod5Mask)72.916 603.7 Q F1(.).916 E 1.76 -.88(To g)72 633.6 T
(rab the k).88 E -.165(ey)-.11 G(board, use).165 E F0(XGrabK)3.666 E
(eyboard)-.275 E F1(.).916 E F0(253)279.75 769 Q 0 Cg EP
%%Page: 254 259
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E .44 LW 36 76.75 36 87.75 DL 36 74.75
36 85.75 DL 41.5 73 36 73 DL 43.5 73 38 73 DL 49 73 43.5 73 DL/F1 11
/Times-Roman@0 SF(int XGrabK)72 88.9 Q -.165(ey)-.275 G -1.834(board \()
.165 F/F2 11/Times-Italic@0 SF(display).916 E F1(,)A F2(gr)2.75 E
(ab_window)-.165 E F1(,).916 E F2(owner_e)2.75 E(vents)-.165 E F1(,).916
E F2(pointer_mode)2.75 E F1(,).916 E F2 -.11(ke)2.75 G(yboar)-.22 E
(d_mode)-.407 E F1(,).916 E F2(time)2.75 E F1(\)).916 E(Display *)88.5
101.9 Q F2(display)A F1(;).916 E -.44(Wi)88.5 114.9 S(ndo).44 E(w)-.275
E F2(gr)2.75 E(ab_window)-.165 E F1(;).916 E(Bool)88.5 127.9 Q F2
(owner_e)2.75 E(vents)-.165 E F1(;).916 E(int)88.5 140.9 Q F2
(pointer_mode)2.75 E F1(,).916 E F2 -.11(ke)2.75 G(yboar)-.22 E(d_mode)
-.407 E F1(;).916 E -.385(Ti)88.5 153.9 S(me).385 E F2(time)2.75 E F1(;)
.916 E F2(display)72 174.7 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2(gr)72 191.6 Q(ab_window)-.165 E F1(Speci\214es the grab windo)11.654
E -.715(w.)-.275 G F2(owner_e)72 208.5 Q(vents)-.165 E F1
(Speci\214es a Boolean v)11.676 E(alue that indicates whether the k)
-.275 E -.165(ey)-.11 G(board e).165 E -.165(ve)-.275 G(nts are to be)
.165 E(reported as usual.)144 221.5 Q F2(pointer_mode)72 238.4 Q F1
(Speci\214es further processing of pointer e)10.895 E -.165(ve)-.275 G
2.75(nts. Y).165 F(ou can pass)-1.21 E F0(GrabModeSync)3.666 E F1(or)
3.666 E F0(GrabModeAsync)144.916 251.4 Q F1(.).916 E F2 -.11(ke)72 268.3
S(yboar)-.22 E(d_mode)-.407 E F1(Speci\214es further processing of k)144
281.3 Q -.165(ey)-.11 G(board e).165 E -.165(ve)-.275 G 2.75(nts. Y).165
F(ou can pass)-1.21 E F0(GrabModeSync)3.666 E F1(or)144 294.3 Q F0
(GrabModeAsync)3.666 E F1(.).916 E F2(time)72 311.2 Q F1
(Speci\214es the time.)53.058 E -1.21(Yo)5.5 G 2.75(uc)1.21 G
(an pass either a timestamp or)-2.75 E F0(Curr)3.666 E(entT)-.198 E(ime)
-.198 E F1(.).916 E 36 306.85 36 317.85 DL 36 304.85 36 315.85 DL 41.5
316.1 36 316.1 DL 43.5 316.1 38 316.1 DL 49 316.1 43.5 316.1 DL(The)72
341.1 Q F0(XGrabK)3.666 E(eyboard)-.275 E F1(function acti)3.666 E -.165
(ve)-.275 G(ly grabs control of the k).165 E -.165(ey)-.11 G
(board and generates).165 E F0 -.275(Fo)3.666 G(cusIn).275 E F1(and)72
354.1 Q F0 -.275(Fo)3.666 G(cusOut).275 E F1 -2.365 -.275(ev e)3.666 H
2.75(nts. Further).275 F -.11(ke)2.75 G 2.75(ye)-.055 G -.165(ve)-3.025
G(nts are reported only to the grabbing client.).165 E F0(XGrabK)6.416 E
(ey-)-.275 E(board)72 367.1 Q F1 -.165(ove)3.666 G(rrides an).165 E 2.75
(ya)-.165 G(cti)-2.75 E .33 -.165(ve k)-.275 H -.165(ey).055 G
(board grab by this client.).165 E(If o)5.5 E(wner_e)-.275 E -.165(ve)
-.275 G(nts is).165 E F0 -.275(Fa)3.666 G(lse).275 E F1 2.75(,a).916 G
(ll generated)-2.75 E -.11(ke)72 380.1 S 2.75(ye)-.055 G -.165(ve)-3.025
G(nts are reported with respect to grab_windo).165 E 4.18 -.715(w. I)
-.275 H 2.75(fo).715 G(wner_e)-3.025 E -.165(ve)-.275 G(nts is).165 E F0
-.814(Tr)3.666 G(ue).814 E F1(and if a generated)3.666 E -.11(ke)72
393.1 S 2.75(ye)-.055 G -.165(ve)-3.025 G(nt w).165 E(ould normally be \
reported to this client, it is reported normally; otherwise, the e)-.11
E -.165(ve)-.275 G(nt is).165 E(reported with respect to the grab_windo)
72 406.1 Q 4.18 -.715(w. B)-.275 H(oth).715 E F0 -.275(Ke)3.666 G(yPr)
.275 E(ess)-.198 E F1(and)3.666 E F0 -.275(Ke)3.666 G(yRelease).275 E F1
-2.365 -.275(ev e)3.666 H(nts are al).275 E -.11(wa)-.11 G(ys).11 E
(reported, independent of an)72 419.1 Q 2.75(ye)-.165 G -.165(ve)-3.025
G(nt selection made by the client.).165 E(If the k)72 436 Q -.165(ey)
-.11 G(board_mode ar).165 E(gument is)-.198 E F0(GrabModeAsync)3.666 E
F1 2.75(,k).916 G -.165(ey)-2.86 G(board e).165 E -.165(ve)-.275 G
(nt processing continues as).165 E 2.75(usual. If)72 449 R(the k)2.75 E
-.165(ey)-.11 G
(board is currently frozen by this client, then processing of k).165 E
-.165(ey)-.11 G(board e).165 E -.165(ve)-.275 G(nts is).165 E 2.75
(resumed. If)72 462 R(the k)2.75 E -.165(ey)-.11 G 2.75(board_mode ar)
.165 F(gument is)-.198 E F0(GrabModeSync)3.666 E F1 2.75(,t).916 G
(he state of the k)-2.75 E -.165(ey)-.11 G(board \(as seen).165 E
(by client applications\) appears to freeze, and the X serv)72 475 Q
(er generates no further k)-.165 E -.165(ey)-.11 G(board e).165 E -.165
(ve)-.275 G(nts).165 E(until the grabbing client issues a releasing)72
488 Q F0(XAllo)3.666 E(wEv)-.11 E(ents)-.11 E F1(call or until the k)
3.666 E -.165(ey)-.11 G(board grab is).165 E 2.75(released. Actual)72
501 R -.11(ke)2.75 G(yboard changes are not lost while the k)-.055 E
-.165(ey)-.11 G(board is frozen; the).165 E 2.75(ya)-.165 G(re simply)
-2.75 E(queued in the serv)72 514 Q(er for later processing.)-.165 E
(If pointer_mode is)72 530.9 Q F0(GrabModeAsync)3.666 E F1 2.75(,p).916
G(ointer e)-2.75 E -.165(ve)-.275 G(nt processing is unaf).165 E
(fected by acti)-.275 E -.275(va)-.275 G(tion of the).275 E(grab)72
543.9 Q 5.5(.I)-.44 G 2.75(fp)-5.5 G(ointer_mode is)-2.75 E F0
(GrabModeSync)3.666 E F1 2.75(,t).916 G
(he state of the pointer \(as seen by client applications\))-2.75 E
(appears to freeze, and the X serv)72 556.9 Q
(er generates no further pointer e)-.165 E -.165(ve)-.275 G
(nts until the grabbing client).165 E(issues a releasing)72 569.9 Q F0
(XAllo)3.666 E(wEv)-.11 E(ents)-.11 E F1(call or until the k)3.666 E
-.165(ey)-.11 G(board grab is released.).165 E(Actual pointer)5.5 E
(changes are not lost while the pointer is frozen; the)72 582.9 Q 2.75
(ya)-.165 G(re simply queued in the serv)-2.75 E(er for later pro-)-.165
E(cessing.)72 595.9 Q(If the k)72 612.8 Q -.165(ey)-.11 G(board is acti)
.165 E -.165(ve)-.275 G(ly grabbed by some other client,).165 E F0
(XGrabK)3.666 E(eyboard)-.275 E F1 -.11(fa)3.666 G(ils and returns).11 E
F0(Alr)72.916 625.8 Q(eadyGrab)-.198 E(bed)-.11 E F1 5.5(.I).916 G 2.75
(fg)-5.5 G(rab_windo)-2.75 E 2.75(wi)-.275 G 2.75(sn)-2.75 G(ot vie)
-2.75 E -.11(wa)-.275 G(ble, it f).11 E(ails and returns)-.11 E F0
(GrabNotV)3.666 E(iewable)-.407 E F1 5.5(.I).916 G(f)-5.5 E(the k)72
638.8 Q -.165(ey)-.11 G(board is frozen by an acti).165 E .33 -.165
(ve g)-.275 H(rab of another client, it f).165 E(ails and returns)-.11 E
F0(GrabFr)3.666 E(ozen)-.198 E F1 5.5(.I).916 G 2.75(ft)-5.5 G(he)-2.75
E(speci\214ed time is earlier than the last-k)72 651.8 Q -.165(ey)-.11 G
(board-grab time or later than the current X serv).165 E(er time, it)
-.165 E -.11(fa)72 664.8 S(ils and returns).11 E F0(GrabIn)3.666 E -.11
(va)-.44 G(lidT).11 E(ime)-.198 E F1 5.5(.O).916 G(therwise, the last-k)
-5.5 E -.165(ey)-.11 G(board-grab time is set to the speci-).165 E
(\214ed time \()72 677.8 Q F0(Curr).916 E(entT)-.198 E(ime)-.198 E F1
(is replaced by the current X serv)3.666 E(er time\).)-.165 E F0(XGrabK)
72.916 694.7 Q(eyboard)-.275 E F1(can generate)3.666 E F0(BadV)3.666 E
(alue)-1.012 E F1(and)3.666 E F0(BadW)3.666 E(indo)-.198 E(w)-.11 E F1
(errors.)3.666 E 1.76 -.88(To u)72 724.6 T(ngrab the k).88 E -.165(ey)
-.11 G(board, use).165 E F0(XUngrabK)3.666 E(eyboard)-.275 E F1(.).916 E
F0(254)279.75 769 Q 0 Cg EP
%%Page: 255 260
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E .44 LW 36 76.75 36 87.75 DL 36 74.75
36 85.75 DL 41.5 73 36 73 DL 43.5 73 38 73 DL 49 73 43.5 73 DL/F1 11
/Times-Roman@0 SF(XUngrabK)72 88.9 Q -.165(ey)-.275 G -1.834(board \()
.165 F/F2 11/Times-Italic@0 SF(display).916 E F1(,)A F2(time)2.75 E F1
(\)).916 E(Display *)88.5 101.9 Q F2(display)A F1(;).916 E -.385(Ti)88.5
114.9 S(me).385 E F2(time)2.75 E F1(;).916 E F2(display)72 135.7 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2(time)72 152.6 Q F1(Speci\214es the time.)53.058 E -1.21(Yo)5.5 G 2.75
(uc)1.21 G(an pass either a timestamp or)-2.75 E F0(Curr)3.666 E(entT)
-.198 E(ime)-.198 E F1(.).916 E 36 148.25 36 159.25 DL 36 146.25 36
157.25 DL 41.5 157.5 36 157.5 DL 43.5 157.5 38 157.5 DL 49 157.5 43.5
157.5 DL(The)72 182.5 Q F0(XUngrabK)3.666 E(eyboard)-.275 E F1
(function releases the k)3.666 E -.165(ey)-.11 G(board and an).165 E
2.75(yq)-.165 G(ueued e)-2.75 E -.165(ve)-.275 G(nts if this client has)
.165 E(it acti)72 195.5 Q -.165(ve)-.275 G(ly grabbed from either).165 E
F0(XGrabK)3.666 E(eyboard)-.275 E F1(or)3.666 E F0(XGrabK)3.666 E(ey)
-.275 E F1(.).916 E F0(XUngrabK)6.416 E(eyboard)-.275 E F1(does not)
3.666 E(release the k)72 208.5 Q -.165(ey)-.11 G(board and an).165 E
2.75(yq)-.165 G(ueued e)-2.75 E -.165(ve)-.275 G
(nts if the speci\214ed time is earlier than the last-k).165 E -.165(ey)
-.11 G(board-).165 E(grab time or is later than the current X serv)72
221.5 Q(er time.)-.165 E(It also generates)5.5 E F0 -.275(Fo)3.666 G
(cusIn).275 E F1(and)3.666 E F0 -.275(Fo)3.666 G(cusOut).275 E F1 -2.365
-.275(ev e)72 234.5 T 2.75(nts. The).275 F 2.75(Xs)2.75 G(erv)-2.75 E
(er automatically performs an)-.165 E F0(UngrabK)3.666 E(eyboard)-.275 E
F1(request if the e)3.666 E -.165(ve)-.275 G(nt windo).165 E(w)-.275 E
(for an acti)72 247.5 Q .33 -.165(ve k)-.275 H -.165(ey).055 G
(board grab becomes not vie).165 E -.11(wa)-.275 G(ble.).11 E 1.76 -.88
(To p)72 277.4 T(assi).88 E -.165(ve)-.275 G(ly grab a single k).165 E
.33 -.165(ey o)-.11 H 2.75(ft).165 G(he k)-2.75 E -.165(ey)-.11 G
(board, use).165 E F0(XGrabK)3.666 E(ey)-.275 E F1(.).916 E 36 295.15 36
306.15 DL 36 293.15 36 304.15 DL 41.5 291.4 36 291.4 DL 43.5 291.4 38
291.4 DL 49 291.4 43.5 291.4 DL(XGrabK)72 307.3 Q -1.504 -.165(ey \()
-.275 H F2(display)1.081 E F1(,)A F2 -.11(ke)2.75 G(ycode)-.22 E F1(,)
.916 E F2(modi\214er)2.75 E(s)-.11 E F1(,).916 E F2(gr)2.75 E(ab_window)
-.165 E F1(,).916 E F2(owner_e)2.75 E(vents)-.165 E F1(,).916 E F2
(pointer_mode)2.75 E F1(,).916 E F2 -.11(ke)107.75 320.3 S(yboar)-.22 E
(d_mode)-.407 E F1(\)).916 E(Display *)88.5 333.3 Q F2(display)A F1(;)
.916 E(int)88.5 346.3 Q F2 -.11(ke)2.75 G(ycode)-.22 E F1(;).916 E
(unsigned int)88.5 359.3 Q F2(modi\214er)2.75 E(s)-.11 E F1(;).916 E
-.44(Wi)88.5 372.3 S(ndo).44 E(w)-.275 E F2(gr)2.75 E(ab_window)-.165 E
F1(;).916 E(Bool)88.5 385.3 Q F2(owner_e)2.75 E(vents)-.165 E F1(;).916
E(int)88.5 398.3 Q F2(pointer_mode)2.75 E F1(,).916 E F2 -.11(ke)2.75 G
(yboar)-.22 E(d_mode)-.407 E F1(;).916 E F2(display)72 419.1 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2 -.11(ke)72 436 S(ycode)-.22 E F1(Speci\214es the K)37.02 E -.165(ey)
-.275 G(Code or).165 E F0(AnyK)3.666 E(ey)-.275 E F1(.).916 E F2
(modi\214er)72 452.9 Q(s)-.11 E F1(Speci\214es the set of k)31.168 E
-.165(ey)-.11 G(masks or).165 E F0(AnyModi\214er)3.666 E F1 5.5(.T).916
G(he mask is the bitwise inclusi)-5.5 E -.165(ve)-.275 G(OR of the v)144
465.9 Q(alid k)-.275 E -.165(ey)-.11 G(mask bits.).165 E F2(gr)72 482.8
Q(ab_window)-.165 E F1(Speci\214es the grab windo)11.654 E -.715(w.)
-.275 G F2(owner_e)72 499.7 Q(vents)-.165 E F1(Speci\214es a Boolean v)
11.676 E(alue that indicates whether the k)-.275 E -.165(ey)-.11 G
(board e).165 E -.165(ve)-.275 G(nts are to be).165 E
(reported as usual.)144 512.7 Q F2(pointer_mode)72 529.6 Q F1
(Speci\214es further processing of pointer e)10.895 E -.165(ve)-.275 G
2.75(nts. Y).165 F(ou can pass)-1.21 E F0(GrabModeSync)3.666 E F1(or)
3.666 E F0(GrabModeAsync)144.916 542.6 Q F1(.).916 E F2 -.11(ke)72 559.5
S(yboar)-.22 E(d_mode)-.407 E F1(Speci\214es further processing of k)144
572.5 Q -.165(ey)-.11 G(board e).165 E -.165(ve)-.275 G 2.75(nts. Y).165
F(ou can pass)-1.21 E F0(GrabModeSync)3.666 E F1(or)144 585.5 Q F0
(GrabModeAsync)3.666 E F1(.).916 E 36 581.15 36 592.15 DL 36 579.15 36
590.15 DL 41.5 590.4 36 590.4 DL 43.5 590.4 38 590.4 DL 49 590.4 43.5
590.4 DL(The)72 615.4 Q F0(XGrabK)3.666 E(ey)-.275 E F1
(function establishes a passi)3.666 E .33 -.165(ve g)-.275 H
(rab on the k).165 E -.165(ey)-.11 G 2.75(board. In).165 F
(the future, the k)2.75 E -.165(ey)-.11 G(board).165 E(is acti)72 628.4
Q -.165(ve)-.275 G(ly grabbed \(as for).165 E F0(XGrabK)3.666 E(eyboard)
-.275 E F1(\), the last-k).916 E -.165(ey)-.11 G
(board-grab time is set to the time at).165 E(which the k)72 641.4 Q .33
-.165(ey w)-.11 H(as pressed \(as transmitted in the).055 E F0 -.275(Ke)
3.666 G(yPr).275 E(ess)-.198 E F1 -2.365 -.275(ev e)3.666 H
(nt\), and the).275 E F0 -.275(Ke)3.666 G(yPr).275 E(ess)-.198 E F1
-2.365 -.275(ev e)3.666 H(nt is).275 E(reported if all of the follo)72
654.4 Q(wing conditions are true:)-.275 E 23.65<8354>72 671.3 S(he k)
-23.65 E -.165(ey)-.11 G(board is not grabbed and the speci\214ed k).165
E .33 -.165(ey \()-.11 H(which can itself be a modi\214er k).165 E -.165
(ey)-.11 G 2.75(\)i).165 G(s)-2.75 E
(logically pressed when the speci\214ed modi\214er k)99.5 684.3 Q -.165
(ey)-.11 G 2.75(sa).165 G(re logically do)-2.75 E
(wn, and no other modi-)-.275 E(\214er k)99.5 697.3 Q -.165(ey)-.11 G
2.75(sa).165 G(re logically do)-2.75 E(wn.)-.275 E 23.65<8345>72 714.2 S
(ither the grab_windo)-23.65 E 2.75(wi)-.275 G 2.75(sa)-2.75 G 2.75(na)
-2.75 G(ncestor of \(or is\) the focus windo)-2.75 E 1.43 -.715(w, o)
-.275 H 2.75(rt).715 G(he grab_windo)-2.75 E 2.75(wi)-.275 G 2.75(sa)
-2.75 G(descendant of the focus windo)99.5 727.2 Q 2.75(wa)-.275 G
(nd contains the pointer)-2.75 E(.)-.605 E F0(255)279.75 769 Q 0 Cg EP
%%Page: 256 261
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E/F1 11/Times-Roman@0 SF 23.65<8341>72
85 S(passi)-20.9 E .33 -.165(ve g)-.275 H(rab on the same k).165 E .33
-.165(ey c)-.11 H(ombination does not e).165 E(xist on an)-.165 E 2.75
(ya)-.165 G(ncestor of grab_win-)-2.75 E(do)99.5 98 Q -.715(w.)-.275 G
(The interpretation of the remaining ar)72 114.9 Q(guments is as for)
-.198 E F0(XGrabK)3.666 E(eyboard)-.275 E F1 5.5(.T).916 G(he acti)-5.5
E .33 -.165(ve g)-.275 H(rab is ter).165 E(-)-.22 E
(minated automatically when the logical state of the k)72 127.9 Q -.165
(ey)-.11 G(board has the speci\214ed k).165 E .33 -.165(ey r)-.11 H
(eleased \(inde-).165 E
(pendent of the logical state of the modi\214er k)72 140.9 Q -.165(ey)
-.11 G(s\).).165 E(Note that the logical state of a de)72 157.8 Q
(vice \(as seen by client applications\) may lag the ph)-.275 E
(ysical state if)-.055 E(de)72 170.8 Q(vice e)-.275 E -.165(ve)-.275 G
(nt processing is frozen.).165 E 2.75(Am)72 187.7 S(odi\214ers ar)-2.75
E(gument of)-.198 E F0(AnyModi\214er)3.666 E F1(is equi)3.666 E -.275
(va)-.275 G(lent to issuing the request for all possible modi-).275 E
(\214er combinations \(including the combination of no modi\214ers\).)72
200.7 Q(It is not required that all modi\214ers)5.5 E(speci\214ed ha)72
213.7 Q .33 -.165(ve c)-.22 H(urrently assigned K).165 E -.165(ey)-.275
G 2.75(Codes. A).165 F -.11(ke)2.75 G(ycode ar)-.055 E(gument of)-.198 E
F0(AnyK)3.666 E(ey)-.275 E F1(is equi)3.666 E -.275(va)-.275 G(lent to)
.275 E(issuing the request for all possible K)72 226.7 Q -.165(ey)-.275
G 2.75(Codes. Otherwise,).165 F(the speci\214ed k)2.75 E -.165(ey)-.11 G
(code must be in the).165 E(range speci\214ed by min_k)72 239.7 Q -.165
(ey)-.11 G(code and max_k).165 E -.165(ey)-.11 G
(code in the connection setup, or a).165 E F0(BadV)3.666 E(alue)-1.012 E
F1(error)3.666 E(results.)72 252.7 Q(If some other client has issued a)
72 269.6 Q F0(XGrabK)3.666 E(ey)-.275 E F1(with the same k)3.666 E .33
-.165(ey c)-.11 H(ombination on the same win-).165 E(do)72 282.6 Q 1.43
-.715(w, a)-.275 H F0(BadAccess)4.381 E F1(error results.)3.666 E
(When using)5.5 E F0(AnyModi\214er)3.666 E F1(or)3.666 E F0(AnyK)3.666 E
(ey)-.275 E F1 2.75(,t).916 G(he request f)-2.75 E(ails com-)-.11 E
(pletely)72 295.6 Q 2.75(,a)-.715 G(nd a)-2.75 E F0(BadAccess)3.666 E F1
(error results \(no grabs are established\) if there is a con\215icting\
 grab for)3.666 E(an)72 308.6 Q 2.75(yc)-.165 G(ombination.)-2.75 E F0
(XGrabK)72.916 325.5 Q(ey)-.275 E F1(can generate)3.666 E F0(BadAccess)
3.666 E F1(,).916 E F0(BadV)3.666 E(alue)-1.012 E F1 2.75(,a).916 G(nd)
-2.75 E F0(BadW)3.666 E(indo)-.198 E(w)-.11 E F1(errors.)3.666 E 1.76
-.88(To u)72 355.4 T(ngrab a k).88 E -.165(ey)-.11 G 2.75(,u)-.55 G(se)
-2.75 E F0(XUngrabK)3.666 E(ey)-.275 E F1(.).916 E .44 LW 36 373.15 36
384.15 DL 36 371.15 36 382.15 DL 41.5 369.4 36 369.4 DL 43.5 369.4 38
369.4 DL 49 369.4 43.5 369.4 DL(XUngrabK)72 385.3 Q -1.504 -.165(ey \()
-.275 H/F2 11/Times-Italic@0 SF(display)1.081 E F1(,)A F2 -.11(ke)2.75 G
(ycode)-.22 E F1(,).916 E F2(modi\214er)2.75 E(s)-.11 E F1(,).916 E F2
(gr)2.75 E(ab_window)-.165 E F1(\)).916 E(Display *)88.5 398.3 Q F2
(display)A F1(;).916 E(int)88.5 411.3 Q F2 -.11(ke)2.75 G(ycode)-.22 E
F1(;).916 E(unsigned int)88.5 424.3 Q F2(modi\214er)2.75 E(s)-.11 E F1
(;).916 E -.44(Wi)88.5 437.3 S(ndo).44 E(w)-.275 E F2(gr)2.75 E
(ab_window)-.165 E F1(;).916 E F2(display)72 458.1 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2 -.11(ke)72 475 S(ycode)-.22 E F1(Speci\214es the K)37.02 E -.165(ey)
-.275 G(Code or).165 E F0(AnyK)3.666 E(ey)-.275 E F1(.).916 E F2
(modi\214er)72 491.9 Q(s)-.11 E F1(Speci\214es the set of k)31.168 E
-.165(ey)-.11 G(masks or).165 E F0(AnyModi\214er)3.666 E F1 5.5(.T).916
G(he mask is the bitwise inclusi)-5.5 E -.165(ve)-.275 G(OR of the v)144
504.9 Q(alid k)-.275 E -.165(ey)-.11 G(mask bits.).165 E F2(gr)72 521.8
Q(ab_window)-.165 E F1(Speci\214es the grab windo)11.654 E -.715(w.)
-.275 G 36 517.45 36 528.45 DL 36 515.45 36 526.45 DL 41.5 526.7 36
526.7 DL 43.5 526.7 38 526.7 DL 49 526.7 43.5 526.7 DL(The)72 551.7 Q F0
(XUngrabK)3.666 E(ey)-.275 E F1(function releases the k)3.666 E .33
-.165(ey c)-.11 H(ombination on the speci\214ed windo).165 E 2.75(wi)
-.275 G 2.75(fi)-2.75 G 2.75(tw)-2.75 G(as)-2.86 E
(grabbed by this client.)72 564.7 Q(It has no ef)5.5 E(fect on an acti)
-.275 E .33 -.165(ve g)-.275 H(rab).165 E 5.5(.A)-.44 G(modi\214ers of)
-2.75 E F0(AnyModi\214er)3.666 E F1(is equi)3.666 E(v-)-.275 E(alent to\
 issuing the request for all possible modi\214er combinations \(includi\
ng the combination of)72 577.7 Q(no modi\214ers\).)72 590.7 Q 2.75(Ak)
5.5 G -.165(ey)-2.86 G(code ar).165 E(gument of)-.198 E F0(AnyK)3.666 E
(ey)-.275 E F1(is equi)3.666 E -.275(va)-.275 G
(lent to issuing the request for all possi-).275 E(ble k)72 603.7 Q .33
-.165(ey c)-.11 H(odes.).165 E F0(XUngrabK)72.916 620.6 Q(ey)-.275 E F1
(can generate)3.666 E F0(BadV)3.666 E(alue)-1.012 E F1(and)3.666 E F0
(BadW)3.666 E(indo)-.198 E(w)-.11 E F1(errors.)3.666 E F0 2.75
(12.3. Resuming)72 646.6 R(Ev)2.75 E(ent Pr)-.11 E(ocessing)-.198 E F1
(The pre)72 663.5 Q
(vious sections discussed grab mechanisms with which processing of e)
-.275 E -.165(ve)-.275 G(nts by the serv).165 E(er)-.165 E
(can be temporarily suspended.)72 676.5 Q
(This section describes the mechanism for resuming e)5.5 E -.165(ve)
-.275 G(nt process-).165 E(ing.)72 689.5 Q 1.76 -.88(To a)72 719.4 T
(llo).88 E 2.75(wf)-.275 G(urther e)-2.75 E -.165(ve)-.275 G
(nts to be processed when the de).165 E(vice has been frozen, use)-.275
E F0(XAllo)3.666 E(wEv)-.11 E(ents)-.11 E F1(.).916 E F0(256)279.75 769
Q 0 Cg EP
%%Page: 257 262
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E .44 LW 36 76.75 36 87.75 DL 36 74.75
36 85.75 DL 41.5 73 36 73 DL 43.5 73 38 73 DL 49 73 43.5 73 DL/F1 11
/Times-Roman@0 SF(XAllo)72 88.9 Q(wEv)-.275 E -1.834(ents \()-.165 F/F2
11/Times-Italic@0 SF(display).916 E F1(,)A F2 -.165(ev)2.75 G(ent_mode)
.165 E F1(,).916 E F2(time)2.75 E F1(\)).916 E(Display *)88.5 101.9 Q F2
(display)A F1(;).916 E(int)88.5 114.9 Q F2 -.165(ev)2.75 G(ent_mode).165
E F1(;).916 E -.385(Ti)88.5 127.9 S(me).385 E F2(time)2.75 E F1(;).916 E
F2(display)72 148.7 Q F1(Speci\214es the connection to the X serv)40.221
E(er)-.165 E(.)-.605 E F2 -.165(ev)72 165.6 S(ent_mode).165 E F1
(Speci\214es the e)19.629 E -.165(ve)-.275 G(nt mode.).165 E -1.21(Yo)
5.5 G 2.75(uc)1.21 G(an pass)-2.75 E F0(AsyncP)3.666 E(ointer)-.22 E F1
(,).916 E F0(SyncP)3.666 E(ointer)-.22 E F1(,).916 E F0(AsyncK-)3.666 E
(eyboard)144 178.6 Q F1(,).916 E F0(SyncK)3.666 E(eyboard)-.275 E F1(,)
.916 E F0(ReplayP)3.666 E(ointer)-.22 E F1(,).916 E F0(ReplayK)3.666 E
(eyboard)-.275 E F1(,).916 E F0(AsyncBoth)3.666 E F1 2.75(,o).916 G(r)
-2.75 E F0(SyncBoth)144.916 191.6 Q F1(.).916 E F2(time)72 208.5 Q F1
(Speci\214es the time.)53.058 E -1.21(Yo)5.5 G 2.75(uc)1.21 G
(an pass either a timestamp or)-2.75 E F0(Curr)3.666 E(entT)-.198 E(ime)
-.198 E F1(.).916 E 36 204.15 36 215.15 DL 36 202.15 36 213.15 DL 41.5
213.4 36 213.4 DL 43.5 213.4 38 213.4 DL 49 213.4 43.5 213.4 DL(The)72
238.4 Q F0(XAllo)3.666 E(wEv)-.11 E(ents)-.11 E F1
(function releases some queued e)3.666 E -.165(ve)-.275 G
(nts if the client has caused a de).165 E(vice to)-.275 E 2.75
(freeze. It)72 251.4 R(has no ef)2.75 E(fect if the speci\214ed time is\
 earlier than the last-grab time of the most recent)-.275 E(acti)72
264.4 Q .33 -.165(ve g)-.275 H(rab for the client or if the speci\214ed\
 time is later than the current X serv).165 E(er time.)-.165 E
(Depending)5.5 E(on the e)72 277.4 Q -.165(ve)-.275 G(nt_mode ar).165 E
(gument, the follo)-.198 E(wing occurs:)-.275 E F0(AsyncP)72.916 296.9 Q
(ointer)-.22 E F1(If the pointer is frozen by the client, pointer e)
178.5 296.9 Q -.165(ve)-.275 G(nt processing continues).165 E(as usual.)
178.5 309.9 Q
(If the pointer is frozen twice by the client on behalf of tw)5.5 E 2.75
(os)-.11 G(ep-)-2.75 E(arate grabs,)178.5 322.9 Q F0(AsyncP)3.666 E
(ointer)-.22 E F1(tha)3.666 E(ws for both.)-.165 E F0(AsyncP)6.416 E
(ointer)-.22 E F1(has no ef)3.666 E(fect)-.275 E
(if the pointer is not frozen by the client, b)178.5 335.9 Q
(ut the pointer need not be)-.22 E(grabbed by the client.)178.5 348.9 Q
F0(SyncP)72.916 367.9 Q(ointer)-.22 E F1
(If the pointer is frozen and acti)178.5 367.9 Q -.165(ve)-.275 G
(ly grabbed by the client, pointer e).165 E -.165(ve)-.275 G(nt).165 E
(processing continues as usual until the ne)178.5 380.9 Q(xt)-.165 E F0
(ButtonPr)3.666 E(ess)-.198 E F1(or)3.666 E F0(ButtonRe-)3.666 E(lease)
178.5 393.9 Q F1 -2.365 -.275(ev e)3.666 H
(nt is reported to the client.).275 E(At this time, the pointer ag)5.5 E
(ain)-.055 E(appears to freeze.)178.5 406.9 Q(Ho)5.5 E(we)-.275 E -.165
(ve)-.275 G .88 -.44(r, i).165 H 2.75(ft).44 G(he reported e)-2.75 E
-.165(ve)-.275 G(nt causes the pointer grab).165 E
(to be released, the pointer does not freeze.)178.5 419.9 Q F0(SyncP)
6.416 E(ointer)-.22 E F1(has no ef)3.666 E(fect if)-.275 E(the pointer \
is not frozen by the client or if the pointer is not grabbed by)178.5
432.9 Q(the client.)178.5 445.9 Q F0(ReplayP)72.916 464.9 Q(ointer)-.22
E F1(If the pointer is acti)178.5 464.9 Q -.165(ve)-.275 G
(ly grabbed by the client and is frozen as the result).165 E(of an e)
178.5 477.9 Q -.165(ve)-.275 G(nt ha).165 E
(ving been sent to the client \(either from the acti)-.22 E -.275(va)
-.275 G(tion of an).275 E F0(XGrabButton)179.416 490.9 Q F1
(or from a pre)3.666 E(vious)-.275 E F0(XAllo)3.666 E(wEv)-.11 E(ents)
-.11 E F1(with mode)3.666 E F0(Sync-)3.666 E -.22(Po)178.5 503.9 S
(inter).22 E F1 -.22(bu)3.666 G 2.75(tn).22 G(ot from an)-2.75 E F0
(XGrabP)3.666 E(ointer)-.22 E F1(\), the pointer grab is released).916 E
(and that e)178.5 516.9 Q -.165(ve)-.275 G
(nt is completely reprocessed.).165 E(This time, ho)5.5 E(we)-.275 E
-.165(ve)-.275 G .88 -.44(r, t).165 H(he func-).44 E(tion ignores an)
178.5 529.9 Q 2.75(yp)-.165 G(assi)-2.75 E .33 -.165(ve g)-.275 H
(rabs at or abo).165 E .33 -.165(ve \()-.165 H(to).165 E -.11(wa)-.275 G
(rd the root of\) the).11 E(grab_windo)178.5 542.9 Q 2.75(wo)-.275 G
2.75(ft)-2.75 G(he grab just released.)-2.75 E(The request has no ef)5.5
E(fect if the)-.275 E(pointer is not grabbed by the client or if the po\
inter is not frozen as the)178.5 555.9 Q(result of an e)178.5 568.9 Q
-.165(ve)-.275 G(nt.).165 E F0(AsyncK)72.916 587.9 Q(eyboard)-.275 E F1
(If the k)178.5 587.9 Q -.165(ey)-.11 G
(board is frozen by the client, k).165 E -.165(ey)-.11 G(board e).165 E
-.165(ve)-.275 G(nt processing contin-).165 E(ues as usual.)178.5 600.9
Q(If the k)5.5 E -.165(ey)-.11 G
(board is frozen twice by the client on behalf of).165 E(tw)178.5 613.9
Q 2.75(os)-.11 G(eparate grabs,)-2.75 E F0(AsyncK)3.666 E(eyboard)-.275
E F1(tha)3.666 E(ws for both.)-.165 E F0(AsyncK)6.416 E(eyboard)-.275 E
F1(has no ef)178.5 626.9 Q(fect if the k)-.275 E -.165(ey)-.11 G
(board is not frozen by the client, b).165 E(ut the k)-.22 E -.165(ey)
-.11 G(board).165 E(need not be grabbed by the client.)178.5 639.9 Q F0
(257)279.75 769 Q 0 Cg EP
%%Page: 258 263
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E(SyncK)72.916 85 Q(eyboard)-.275 E/F1
11/Times-Roman@0 SF(If the k)178.5 85 Q -.165(ey)-.11 G
(board is frozen and acti).165 E -.165(ve)-.275 G
(ly grabbed by the client, k).165 E -.165(ey)-.11 G(board).165 E -2.365
-.275(ev e)178.5 98 T(nt processing continues as usual until the ne).275
E(xt)-.165 E F0 -.275(Ke)3.666 G(yPr).275 E(ess)-.198 E F1(or)3.666 E F0
-.275(Ke)3.666 G(yRe-).275 E(lease)178.5 111 Q F1 -2.365 -.275(ev e)
3.666 H(nt is reported to the client.).275 E(At this time, the k)5.5 E
-.165(ey)-.11 G(board ag).165 E(ain)-.055 E(appears to freeze.)178.5 124
Q(Ho)5.5 E(we)-.275 E -.165(ve)-.275 G .88 -.44(r, i).165 H 2.75(ft).44
G(he reported e)-2.75 E -.165(ve)-.275 G(nt causes the k).165 E -.165
(ey)-.11 G(board).165 E(grab to be released, the k)178.5 137 Q -.165(ey)
-.11 G(board does not freeze.).165 E F0(SyncK)6.416 E(eyboard)-.275 E F1
(has)3.666 E(no ef)178.5 150 Q(fect if the k)-.275 E -.165(ey)-.11 G
(board is not frozen by the client or if the k).165 E -.165(ey)-.11 G
(board is).165 E(not grabbed by the client.)178.5 163 Q F0(ReplayK)
72.916 182 Q(eyboard)-.275 E F1(If the k)178.5 182 Q -.165(ey)-.11 G
(board is acti).165 E -.165(ve)-.275 G
(ly grabbed by the client and is frozen as the).165 E(result of an e)
178.5 195 Q -.165(ve)-.275 G(nt ha).165 E
(ving been sent to the client \(either from the acti-)-.22 E -.275(va)
178.5 208 S(tion of an).275 E F0(XGrabK)3.666 E(ey)-.275 E F1
(or from a pre)3.666 E(vious)-.275 E F0(XAllo)3.666 E(wEv)-.11 E(ents)
-.11 E F1(with mode)3.666 E F0(SyncK)179.416 221 Q(eyboard)-.275 E F1
-.22(bu)3.666 G 2.75(tn).22 G(ot from an)-2.75 E F0(XGrabK)3.666 E
(eyboard)-.275 E F1(\), the k).916 E -.165(ey)-.11 G(board grab).165 E
(is released and that e)178.5 234 Q -.165(ve)-.275 G
(nt is completely reprocessed.).165 E(This time, ho)5.5 E(we)-.275 E
-.165(ve)-.275 G -.44(r,).165 G(the function ignores an)178.5 247 Q 2.75
(yp)-.165 G(assi)-2.75 E .33 -.165(ve g)-.275 H(rabs at or abo).165 E
.33 -.165(ve \()-.165 H(to).165 E -.11(wa)-.275 G(rd the root of\)).11 E
(the grab_windo)178.5 260 Q 2.75(wo)-.275 G 2.75(ft)-2.75 G
(he grab just released.)-2.75 E(The request has no ef)5.5 E(fect if)
-.275 E(the k)178.5 273 Q -.165(ey)-.11 G
(board is not grabbed by the client or if the k).165 E -.165(ey)-.11 G
(board is not frozen).165 E(as the result of an e)178.5 286 Q -.165(ve)
-.275 G(nt.).165 E F0(SyncBoth)72.916 305 Q F1(If both pointer and k)
178.5 305 Q -.165(ey)-.11 G(board are frozen by the client, e).165 E
-.165(ve)-.275 G(nt processing).165 E(for both de)178.5 318 Q
(vices continues as usual until the ne)-.275 E(xt)-.165 E F0(ButtonPr)
3.666 E(ess)-.198 E F1(,).916 E F0(Button-)3.666 E(Release)178.5 331 Q
F1(,).916 E F0 -.275(Ke)3.666 G(yPr).275 E(ess)-.198 E F1 2.75(,o).916 G
(r)-2.75 E F0 -.275(Ke)3.666 G(yRelease).275 E F1 -2.365 -.275(ev e)
3.666 H(nt is reported to the client for a).275 E(grabbed de)178.5 344 Q
(vice \(b)-.275 E(utton e)-.22 E -.165(ve)-.275 G(nt for the pointer)
.165 E 2.75(,k)-.44 G .33 -.165(ey e)-2.86 H -.165(ve)-.11 G
(nt for the k).165 E -.165(ey)-.11 G(board\),).165 E
(at which time the de)178.5 357 Q(vices ag)-.275 E
(ain appear to freeze.)-.055 E(Ho)5.5 E(we)-.275 E -.165(ve)-.275 G .88
-.44(r, i).165 H 2.75(ft).44 G(he)-2.75 E(reported e)178.5 370 Q -.165
(ve)-.275 G(nt causes the grab to be released, then the de).165 E
(vices do not)-.275 E(freeze \(b)178.5 383 Q(ut if the other de)-.22 E
(vice is still grabbed, then a subsequent e)-.275 E -.165(ve)-.275 G
(nt for).165 E(it will still cause both de)178.5 396 Q
(vices to freeze\).)-.275 E F0(SyncBoth)6.416 E F1(has no ef)3.666 E
(fect unless)-.275 E(both pointer and k)178.5 409 Q -.165(ey)-.11 G
(board are frozen by the client.).165 E(If the pointer or)5.5 E -.11(ke)
178.5 422 S(yboard is frozen twice by the client on behalf of tw)-.055 E
2.75(os)-.11 G(eparate grabs,)-2.75 E F0(SyncBoth)179.416 435 Q F1(tha)
3.666 E(ws for both \(b)-.165 E(ut a subsequent freeze for)-.22 E F0
(SyncBoth)3.666 E F1(will)3.666 E(only freeze each de)178.5 448 Q
(vice once\).)-.275 E F0(AsyncBoth)72.916 467 Q F1
(If the pointer and the k)178.5 467 Q -.165(ey)-.11 G
(board are frozen by the client, e).165 E -.165(ve)-.275 G
(nt processing).165 E(for both de)178.5 480 Q(vices continues as usual.)
-.275 E(If a de)5.5 E(vice is frozen twice by the)-.275 E
(client on behalf of tw)178.5 493 Q 2.75(os)-.11 G(eparate grabs,)-2.75
E F0(AsyncBoth)3.666 E F1(tha)3.666 E(ws for both.)-.165 E F0(AsyncBoth)
179.416 506 Q F1(has no ef)3.666 E(fect unless both pointer and k)-.275
E -.165(ey)-.11 G(board are frozen by).165 E(the client.)178.5 519 Q F0
(AsyncP)72.916 542.4 Q(ointer)-.22 E F1(,).916 E F0(SyncP)3.666 E
(ointer)-.22 E F1 2.75(,a).916 G(nd)-2.75 E F0(ReplayP)3.666 E(ointer)
-.22 E F1(ha)3.666 E .33 -.165(ve n)-.22 H 2.75(oe).165 G -.275(ff)-2.75
G(ect on the processing of k).275 E -.165(ey)-.11 G(board).165 E -2.365
-.275(ev e)72 555.4 T(nts.).275 E F0(AsyncK)6.416 E(eyboard)-.275 E F1
(,).916 E F0(SyncK)3.666 E(eyboard)-.275 E F1 2.75(,a).916 G(nd)-2.75 E
F0(ReplayK)3.666 E(eyboard)-.275 E F1(ha)3.666 E .33 -.165(ve n)-.22 H
2.75(oe).165 G -.275(ff)-2.75 G(ect on the process-).275 E
(ing of pointer e)72 568.4 Q -.165(ve)-.275 G 2.75(nts. It).165 F
(is possible for both a pointer grab and a k)2.75 E -.165(ey)-.11 G
(board grab \(by the same or).165 E(dif)72 581.4 Q
(ferent clients\) to be acti)-.275 E .33 -.165(ve s)-.275 H
(imultaneously).165 E 5.5(.I)-.715 G 2.75(fad)-5.5 G -.275(ev)-2.75 G
(ice is frozen on behalf of either grab, no).275 E -2.365 -.275(ev e)72
594.4 T(nt processing is performed for the de).275 E 2.75(vice. It)-.275
F(is possible for a single de)2.75 E(vice to be frozen)-.275 E
(because of both grabs.)72 607.4 Q(In this case, the freeze must be rel\
eased on behalf of both grabs before)5.5 E -2.365 -.275(ev e)72 620.4 T
(nts can ag).275 E(ain be processed.)-.055 E(If a de)5.5 E
(vice is frozen twice by a single client, then a single)-.275 E F0(Allo)
3.666 E(w-)-.11 E(Ev)72 633.4 Q(ents)-.11 E F1(releases both.)3.666 E F0
(XAllo)72.916 650.3 Q(wEv)-.11 E(ents)-.11 E F1(can generate a)3.666 E
F0(BadV)3.666 E(alue)-1.012 E F1(error)3.666 E(.)-.605 E F0 2.75
(12.4. Mo)72 676.3 R(ving the P)-.11 E(ointer)-.22 E F1(Although mo)72
693.2 Q -.165(ve)-.165 G(ment of the pointer normally should be left to\
 the control of the end user).165 E 2.75(,s)-.44 G(ome-)-2.75 E
(times it is necessary to mo)72 706.2 Q .33 -.165(ve t)-.165 H
(he pointer to a ne).165 E 2.75(wp)-.275 G
(osition under program control.)-2.75 E F0(258)279.75 769 Q 0 Cg EP
%%Page: 259 264
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E/F1 11/Times-Roman@0 SF 1.76 -.88(To m)
72 85 T .33 -.165(ove t).88 H
(he pointer to an arbitrary point in a windo).165 E 1.43 -.715(w, u)
-.275 H(se).715 E F0(XW)3.666 E(ar)-.715 E(pP)-.11 E(ointer)-.22 E F1(.)
.916 E .44 LW 36 102.75 36 113.75 DL 36 100.75 36 111.75 DL 41.5 99 36
99 DL 43.5 99 38 99 DL 49 99 43.5 99 DL(XW)72 114.9 Q -1.834
(arpPointer \()-.88 F/F2 11/Times-Italic@0 SF(display).916 E F1(,)A F2
(sr)2.75 E(c_w)-.407 E F1(,).916 E F2(dest_w)2.75 E F1(,).916 E F2(sr)
2.75 E(c_x)-.407 E F1(,).916 E F2(sr)2.75 E(c_y)-.407 E F1(,).916 E F2
(sr)2.75 E(c_width)-.407 E F1(,).916 E F2(sr)2.75 E(c_height)-.407 E F1
(,).916 E F2(dest_x)2.75 E F1(,).916 E F2(dest_y)116 127.9 Q F1(\)).916
E(Display *)94 140.9 Q F2(display)A F1(;).916 E -.44(Wi)94 153.9 S(ndo)
.44 E(w)-.275 E F2(sr)2.75 E(c_w)-.407 E F1(,).916 E F2(dest_w)2.75 E F1
(;).916 E(int)94 166.9 Q F2(sr)2.75 E(c_x)-.407 E F1(,).916 E F2(sr)2.75
E(c_y)-.407 E F1(;).916 E(unsigned int)94 179.9 Q F2(sr)2.75 E(c_width)
-.407 E F1(,).916 E F2(sr)2.75 E(c_height)-.407 E F1(;).916 E(int)94
192.9 Q F2(dest_x)2.75 E F1(,).916 E F2(dest_y)2.75 E F1(;).916 E F2
(display)72 213.7 Q F1(Speci\214es the connection to the X serv)40.221 E
(er)-.165 E(.)-.605 E F2(sr)72 230.6 Q(c_w)-.407 E F1
(Speci\214es the source windo)46.128 E 2.75(wo)-.275 G(r)-2.75 E F0
(None)3.666 E F1(.).916 E F2(dest_w)72 247.5 Q F1
(Speci\214es the destination windo)41.442 E 2.75(wo)-.275 G(r)-2.75 E F0
(None)3.666 E F1(.).916 E F2(sr)72 264.4 Q(c_x)-.407 E(sr)72 277.4 Q
(c_y)-.407 E(sr)72 290.4 Q(c_width)-.407 E(sr)72 303.4 Q(c_height)-.407
E F1(Specify a rectangle in the source windo)25.965 E -.715(w.)-.275 G
F2(dest_x)72 320.3 Q(dest_y)72 333.3 Q F1
(Specify the x and y coordinates within the destination windo)43.895 E
-.715(w.)-.275 G 36 328.95 36 339.95 DL 36 326.95 36 337.95 DL 41.5
338.2 36 338.2 DL 43.5 338.2 38 338.2 DL 49 338.2 43.5 338.2 DL
(If dest_w is)72 363.2 Q F0(None)3.666 E F1(,).916 E F0(XW)3.666 E(ar)
-.715 E(pP)-.11 E(ointer)-.22 E F1(mo)3.666 E -.165(ve)-.165 G 2.75(st)
.165 G(he pointer by the of)-2.75 E(fsets \(dest_x, dest_y\) relati)
-.275 E .33 -.165(ve t)-.275 H(o).165 E
(the current position of the pointer)72 376.2 Q 5.5(.I)-.605 G 2.75(fd)
-5.5 G(est_w is a windo)-2.75 E -.715(w,)-.275 G F0(XW)4.381 E(ar)-.715
E(pP)-.11 E(ointer)-.22 E F1(mo)3.666 E -.165(ve)-.165 G 2.75(st).165 G
(he pointer to)-2.75 E(the of)72 389.2 Q
(fsets \(dest_x, dest_y\) relati)-.275 E .33 -.165(ve t)-.275 H 2.75(ot)
.165 G(he origin of dest_w)-2.75 E 5.5(.H)-.715 G -.275(ow)-5.5 G -2.365
-.275(ev e).275 H .88 -.44(r, i).275 H 2.75(fs).44 G(rc_w is a windo)
-2.75 E 1.43 -.715(w, t)-.275 H(he).715 E(mo)72 402.2 Q .33 -.165(ve o)
-.165 H(nly tak).165 E(es place if the windo)-.11 E 2.75(ws)-.275 G
(rc_w contains the pointer and if the speci\214ed rectangle of)-2.75 E
(src_w contains the pointer)72 415.2 Q(.)-.605 E
(The src_x and src_y coordinates are relati)72 432.1 Q .33 -.165(ve t)
-.275 H 2.75(ot).165 G(he origin of src_w)-2.75 E 5.5(.I)-.715 G 2.75
(fs)-5.5 G(rc_height is zero, it is)-2.75 E
(replaced with the current height of src_w minus src_y)72 445.1 Q 5.5
(.I)-.715 G 2.75(fs)-5.5 G(rc_width is zero, it is replaced with the)
-2.75 E(current width of src_w minus src_x.)72 458.1 Q
(There is seldom an)72 475 Q 2.75(yr)-.165 G
(eason for calling this function.)-2.75 E
(The pointer should normally be left to the)5.5 E(user)72 488 Q 5.5(.I)
-.605 G 2.75(fy)-5.5 G(ou do use this function, ho)-2.75 E(we)-.275 E
-.165(ve)-.275 G .88 -.44(r, i).165 H 2.75(tg).44 G(enerates e)-2.75 E
-.165(ve)-.275 G(nts just as if the user had instanta-).165 E
(neously mo)72 501 Q -.165(ve)-.165 G 2.75(dt).165 G
(he pointer from one position to another)-2.75 E 5.5(.N)-.605 G
(ote that you cannot use)-5.5 E F0(XW)3.666 E(ar)-.715 E(p-)-.11 E -.22
(Po)72 514 S(inter).22 E F1(to mo)3.666 E .33 -.165(ve t)-.165 H
(he pointer outside the con\214ne_to windo).165 E 2.75(wo)-.275 G 2.75
(fa)-2.75 G 2.75(na)-2.75 G(cti)-2.75 E .33 -.165(ve p)-.275 H
(ointer grab).165 E 5.5(.A)-.44 G 2.75(na)-5.5 G(ttempt)-2.75 E
(to do so will only mo)72 527 Q .33 -.165(ve t)-.165 H(he pointer as f)
.165 E(ar as the closest edge of the con\214ne_to windo)-.11 E -.715(w.)
-.275 G F0(XW)72.916 543.9 Q(ar)-.715 E(pP)-.11 E(ointer)-.22 E F1
(can generate a)3.666 E F0(BadW)3.666 E(indo)-.198 E(w)-.11 E F1(error)
3.666 E(.)-.605 E F0 2.75(12.5. Contr)72 569.9 R(olling Input F)-.198 E
(ocus)-.275 E F1(Xlib pro)72 586.8 Q
(vides functions that you can use to set and get the input focus.)-.165
E(The input focus is a)5.5 E(shared resource, and cooperation among cli\
ents is required for correct interaction.)72 599.8 Q(See the)5.5 E F2
(Inter)2.75 E(-)-.22 E(Client Communication Con)72 612.8 Q
(ventions Manual)-.44 E F1(for input focus polic)2.75 E -.715(y.)-.165 G
1.76 -.88(To s)72 642.7 T(et the input focus, use).88 E F0(XSetInputF)
3.666 E(ocus)-.275 E F1(.).916 E F0(259)279.75 769 Q 0 Cg EP
%%Page: 260 265
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E .44 LW 36 76.75 36 87.75 DL 36 74.75
36 85.75 DL 41.5 73 36 73 DL 43.5 73 38 73 DL 49 73 43.5 73 DL/F1 11
/Times-Roman@0 SF(XSetInputF)72 88.9 Q -1.834(ocus \()-.165 F/F2 11
/Times-Italic@0 SF(display).916 E F1(,)A F2(focus)2.75 E F1(,).916 E F2
-2.101 -.407(re v)2.75 H(ert_to).407 E F1(,).916 E F2(time)2.75 E F1(\))
.916 E(Display *)88.5 101.9 Q F2(display)A F1(;).916 E -.44(Wi)88.5
114.9 S(ndo).44 E(w)-.275 E F2(focus)2.75 E F1(;).916 E(int)88.5 127.9 Q
F2 -2.101 -.407(re v)2.75 H(ert_to).407 E F1(;).916 E -.385(Ti)88.5
140.9 S(me).385 E F2(time)2.75 E F1(;).916 E F2(display)72 161.7 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2(focus)72 178.6 Q F1(Speci\214es the windo)48.779 E -.715(w,)-.275 G
F0 -.22(Po)4.381 G(interRoot).22 E F1 2.75(,o).916 G(r)-2.75 E F0(None)
3.666 E F1(.).916 E F2 -2.101 -.407(re v)72 195.5 T(ert_to).407 E F1
(Speci\214es where the input focus re)32.246 E -.165(ve)-.275 G
(rts to if the windo).165 E 2.75(wb)-.275 G(ecomes not vie)-2.75 E -.11
(wa)-.275 G(ble.).11 E -1.21(Yo)144 208.5 S 2.75(uc)1.21 G(an pass)-2.75
E F0(Re)3.666 E -.11(ve)-.165 G(rtT).11 E(oP)-1.012 E(ar)-.11 E(ent)
-.198 E F1(,).916 E F0(Re)3.666 E -.11(ve)-.165 G(rtT).11 E(oP)-1.012 E
(ointerRoot)-.22 E F1 2.75(,o).916 G(r)-2.75 E F0(Re)3.666 E -.11(ve)
-.165 G(rtT).11 E(oNone)-1.012 E F1(.).916 E F2(time)72 225.4 Q F1
(Speci\214es the time.)53.058 E -1.21(Yo)5.5 G 2.75(uc)1.21 G
(an pass either a timestamp or)-2.75 E F0(Curr)3.666 E(entT)-.198 E(ime)
-.198 E F1(.).916 E 36 221.05 36 232.05 DL 36 219.05 36 230.05 DL 41.5
230.3 36 230.3 DL 43.5 230.3 38 230.3 DL 49 230.3 43.5 230.3 DL(The)72
255.3 Q F0(XSetInputF)3.666 E(ocus)-.275 E F1
(function changes the input focus and the last-focus-change time.)3.666
E(It has no)5.5 E(ef)72 268.3 Q(fect if the speci\214ed time is earlier\
 than the current last-focus-change time or is later than the)-.275 E
(current X serv)72 281.3 Q(er time.)-.165 E(Otherwise, the last-focus-c\
hange time is set to the speci\214ed time \()5.5 E F0(Cur).916 E(-)-.407
E -.198(re)72 294.3 S(ntT).198 E(ime)-.198 E F1
(is replaced by the current X serv)3.666 E(er time\).)-.165 E F0
(XSetInputF)6.416 E(ocus)-.275 E F1(causes the X serv)3.666 E(er to)
-.165 E(generate)72 307.3 Q F0 -.275(Fo)3.666 G(cusIn).275 E F1(and)
3.666 E F0 -.275(Fo)3.666 G(cusOut).275 E F1 -2.365 -.275(ev e)3.666 H
(nts.).275 E(Depending on the focus ar)72 324.2 Q(gument, the follo)
-.198 E(wing occurs:)-.275 E 23.65<8349>72 341.1 S 2.75(ff)-23.65 G
(ocus is)-2.75 E F0(None)3.666 E F1 2.75(,a).916 G(ll k)-2.75 E -.165
(ey)-.11 G(board e).165 E -.165(ve)-.275 G(nts are discarded until a ne)
.165 E 2.75(wf)-.275 G(ocus windo)-2.75 E 2.75(wi)-.275 G 2.75(ss)-2.75
G(et, and the)-2.75 E(re)99.5 354.1 Q -.165(ve)-.275 G(rt_to ar).165 E
(gument is ignored.)-.198 E 23.65<8349>72 371 S 2.75(ff)-23.65 G
(ocus is a windo)-2.75 E 1.43 -.715(w, i)-.275 H 2.75(tb).715 G
(ecomes the k)-2.75 E -.165(ey)-.11 G(board').165 E 2.75(sf)-.605 G
(ocus windo)-2.75 E 4.18 -.715(w. I)-.275 H 2.75(fag).715 G(enerated k)
-2.75 E -.165(ey)-.11 G(board).165 E -2.365 -.275(ev e)99.5 384 T(nt w)
.275 E(ould normally be reported to this windo)-.11 E 2.75(wo)-.275 G
2.75(ro)-2.75 G(ne of its inferiors, the e)-2.75 E -.165(ve)-.275 G
(nt is).165 E(reported as usual.)99.5 397 Q(Otherwise, the e)5.5 E -.165
(ve)-.275 G(nt is reported relati).165 E .33 -.165(ve t)-.275 H 2.75(ot)
.165 G(he focus windo)-2.75 E -.715(w.)-.275 G 23.65<8349>72 413.9 S
2.75(ff)-23.65 G(ocus is)-2.75 E F0 -.22(Po)3.666 G(interRoot).22 E F1
2.75(,t).916 G(he focus windo)-2.75 E 2.75(wi)-.275 G 2.75(sd)-2.75 G
(ynamically tak)-2.75 E(en to be the root windo)-.11 E 2.75(wo)-.275 G
(f)-2.75 E(whate)99.5 426.9 Q -.165(ve)-.275 G 2.75(rs).165 G
(creen the pointer is on at each k)-2.75 E -.165(ey)-.11 G(board e).165
E -.165(ve)-.275 G 2.75(nt. In).165 F(this case, the re)2.75 E -.165(ve)
-.275 G(rt_to ar).165 E(gu-)-.198 E(ment is ignored.)99.5 439.9 Q
(The speci\214ed focus windo)72 456.8 Q 2.75(wm)-.275 G(ust be vie)-2.75
E -.11(wa)-.275 G(ble at the time).11 E F0(XSetInputF)3.666 E(ocus)-.275
E F1(is called, or a)3.666 E F0(Bad-)3.666 E(Match)72 469.8 Q F1
(error results.)3.666 E(If the focus windo)5.5 E 2.75(wl)-.275 G
(ater becomes not vie)-2.75 E -.11(wa)-.275 G(ble, the X serv).11 E
(er e)-.165 E -.275(va)-.275 G(luates the).275 E(re)72 482.8 Q -.165(ve)
-.275 G(rt_to ar).165 E(gument to determine the ne)-.198 E 2.75(wf)-.275
G(ocus windo)-2.75 E 2.75(wa)-.275 G 2.75(sf)-2.75 G(ollo)-2.75 E(ws:)
-.275 E 23.65<8349>72 499.7 S 2.75(fr)-23.65 G -2.365 -.275(ev e)-2.75 H
(rt_to is).275 E F0(Re)3.666 E -.11(ve)-.165 G(rtT).11 E(oP)-1.012 E(ar)
-.11 E(ent)-.198 E F1 2.75(,t).916 G(he focus re)-2.75 E -.165(ve)-.275
G(rts to the parent \(or the closest vie).165 E -.11(wa)-.275 G(ble).11
E(ancestor\), and the ne)99.5 512.7 Q 2.75(wr)-.275 G -2.365 -.275(ev e)
-2.75 H(rt_to v).275 E(alue is tak)-.275 E(en to be)-.11 E F0(Re)3.666 E
-.11(ve)-.165 G(rtT).11 E(oNone)-1.012 E F1(.).916 E 23.65<8349>72 529.6
S 2.75(fr)-23.65 G -2.365 -.275(ev e)-2.75 H(rt_to is).275 E F0(Re)3.666
E -.11(ve)-.165 G(rtT).11 E(oP)-1.012 E(ointerRoot)-.22 E F1(or)3.666 E
F0(Re)3.666 E -.11(ve)-.165 G(rtT).11 E(oNone)-1.012 E F1 2.75(,t).916 G
(he focus re)-2.75 E -.165(ve)-.275 G(rts to).165 E F0 -.22(Po)3.666 G
(interRoot).22 E F1(or)99.5 542.6 Q F0(None)3.666 E F1 2.75(,r).916 G
(especti)-2.75 E -.165(ve)-.275 G(ly).165 E 5.5(.W)-.715 G
(hen the focus re)-5.5 E -.165(ve)-.275 G(rts, the X serv).165 E
(er generates)-.165 E F0 -.275(Fo)3.666 G(cusIn).275 E F1(and)3.666 E F0
-.275(Fo)3.666 G(cu-).275 E(sOut)99.5 555.6 Q F1 -2.365 -.275(ev e)3.666
H(nts, b).275 E(ut the last-focus-change time is not af)-.22 E(fected.)
-.275 E F0(XSetInputF)72.916 572.5 Q(ocus)-.275 E F1(can generate)3.666
E F0(BadMatch)3.666 E F1(,).916 E F0(BadV)3.666 E(alue)-1.012 E F1 2.75
(,a).916 G(nd)-2.75 E F0(BadW)3.666 E(indo)-.198 E(w)-.11 E F1(errors.)
3.666 E 1.76 -.88(To o)72 602.4 T(btain the current input focus, use).88
E F0(XGetInputF)3.666 E(ocus)-.275 E F1(.).916 E F0(260)279.75 769 Q 0
Cg EP
%%Page: 261 266
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E .44 LW 36 76.75 36 87.75 DL 36 74.75
36 85.75 DL 41.5 73 36 73 DL 43.5 73 38 73 DL 49 73 43.5 73 DL/F1 11
/Times-Roman@0 SF(XGetInputF)72 88.9 Q -1.834(ocus \()-.165 F/F2 11
/Times-Italic@0 SF(display).916 E F1(,)A F2(focus_r)2.75 E(eturn)-.407 E
F1(,).916 E F2 -2.101 -.407(re v)2.75 H(ert_to_r).407 E(eturn)-.407 E F1
(\)).916 E(Display *)88.5 101.9 Q F2(display)A F1(;).916 E -.44(Wi)88.5
114.9 S(ndo).44 E 2.75(w*)-.275 G F2(focus_r)-2.75 E(eturn)-.407 E F1(;)
.916 E(int *)88.5 127.9 Q F2 -2.101 -.407(re v)D(ert_to_r).407 E(eturn)
-.407 E F1(;).916 E F2(display)72 148.7 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2(focus_r)72 165.6 Q(eturn)-.407 E F1(Returns the focus windo)16.186 E
-.715(w,)-.275 G F0 -.22(Po)4.381 G(interRoot).22 E F1 2.75(,o).916 G(r)
-2.75 E F0(None)3.666 E F1(.).916 E F2 -2.101 -.407(re v)72 182.5 T
(ert_to_r).407 E(eturn)-.407 E F1(Returns the current focus state \()144
195.5 Q F0(Re).916 E -.11(ve)-.165 G(rtT).11 E(oP)-1.012 E(ar)-.11 E
(ent)-.198 E F1(,).916 E F0(Re)3.666 E -.11(ve)-.165 G(rtT).11 E(oP)
-1.012 E(ointerRoot)-.22 E F1 2.75(,o).916 G(r)-2.75 E F0(Re)144.916
208.5 Q -.11(ve)-.165 G(rtT).11 E(oNone)-1.012 E F1(\).).916 E 36 204.15
36 215.15 DL 36 202.15 36 213.15 DL 41.5 213.4 36 213.4 DL 43.5 213.4 38
213.4 DL 49 213.4 43.5 213.4 DL(The)72 238.4 Q F0(XGetInputF)3.666 E
(ocus)-.275 E F1(function returns the focus windo)3.666 E 2.75(wa)-.275
G(nd the current focus state.)-2.75 E F0 2.75(12.6. Manipulating)72
264.4 R(the K)2.75 E(eyboard and P)-.275 E(ointer Settings)-.22 E F1
(Xlib pro)72 281.3 Q(vides functions that you can use to change the k)
-.165 E -.165(ey)-.11 G(board control, obtain a list of the auto-).165 E
(repeat k)72 294.3 Q -.165(ey)-.11 G(s, turn k).165 E -.165(ey)-.11 G
(board auto-repeat on or of).165 E
(f, ring the bell, set or obtain the pointer b)-.275 E(utton or)-.22 E
-.11(ke)72 307.3 S(yboard mapping, and obtain a bit v)-.055 E
(ector for the k)-.165 E -.165(ey)-.11 G(board.).165 E
(This section discusses the user)72 324.2 Q
(-preference options of bell, k)-.22 E .33 -.165(ey c)-.11 H
(lick, pointer beha).165 E(vior)-.22 E 2.75(,a)-.44 G(nd so on.)-2.75 E
(The def)72 337.2 Q(ault v)-.11 E(alues for man)-.275 E 2.75(yo)-.165 G
2.75(ft)-2.75 G(hese options are serv)-2.75 E(er dependent.)-.165 E
(Not all implementations will)5.5 E
(actually be able to control all of these parameters.)72 350.2 Q(The)72
367.1 Q F0(XChangeK)3.666 E(eyboardContr)-.275 E(ol)-.198 E F1
(function changes control of a k)3.666 E -.165(ey)-.11 G
(board and operates on a).165 E F0(XK)72.916 380.1 Q(eyboardContr)-.275
E(ol)-.198 E F1(structure:)3.666 E F0(261)279.75 769 Q 0 Cg EP
%%Page: 262 267
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E .44 LW 36 76.75 36 87.75 DL 36 74.75
36 85.75 DL 41.5 73 36 73 DL 43.5 73 38 73 DL 49 73 43.5 73 DL/F1 11
/Times-Roman@0 SF(/* Mask bits for ChangeK)72 88.9 Q -.165(ey)-.275 G
(boardControl */).165 E(#de\214ne)72 108.4 Q F0(KBK)125.416 108.4 Q
(eyClickP)-.275 E(er)-.22 E(cent)-.198 E F1(\(1L<<0\))321 108.4 Q
(#de\214ne)72 121.4 Q F0(KBBellP)125.416 121.4 Q(er)-.22 E(cent)-.198 E
F1(\(1L<<1\))321 121.4 Q(#de\214ne)72 134.4 Q F0(KBBellPitch)125.416
134.4 Q F1(\(1L<<2\))321 134.4 Q(#de\214ne)72 147.4 Q F0(KBBellDuration)
125.416 147.4 Q F1(\(1L<<3\))321 147.4 Q(#de\214ne)72 160.4 Q F0(KBLed)
125.416 160.4 Q F1(\(1L<<4\))321 160.4 Q(#de\214ne)72 173.4 Q F0
(KBLedMode)125.416 173.4 Q F1(\(1L<<5\))321 173.4 Q(#de\214ne)72 186.4 Q
F0(KBK)125.416 186.4 Q(ey)-.275 E F1(\(1L<<6\))321 186.4 Q(#de\214ne)72
199.4 Q F0(KB)125.416 199.4 Q -.55(Au)-.33 G(toRepeatMode).55 E F1
(\(1L<<7\))321 199.4 Q(/* V)72 225.4 Q(alues */)-1.221 E
(typedef struct {)72 251.4 Q(int k)108 264.4 Q -.165(ey)-.11 G
(_click_percent;).165 E(int bell_percent;)108 277.4 Q(int bell_pitch;)
108 290.4 Q(int bell_duration;)108 303.4 Q(int led;)108 316.4 Q
(int led_mode;)108 329.4 Q(/* LedModeOn, LedModeOf)83.192 E 2.75(f*)
-.275 G(/)-2.75 E(int k)108 342.4 Q -.165(ey)-.11 G(;).165 E
(int auto_repeat_mode;)108 355.4 Q(/* AutoRepeatModeOf)45.319 E
(f, AutoRepeatModeOn,)-.275 E(AutoRepeatModeDef)252 368.4 Q(ault */)-.11
E 2.75(}X)72 381.4 S -2.365 -.275(Ke y)-2.75 H(boardControl;).275 E 36
383.55 36 394.55 DL 36 381.55 36 392.55 DL 41.5 392.8 36 392.8 DL 43.5
392.8 38 392.8 DL 49 392.8 43.5 392.8 DL(The k)72 417.8 Q -.165(ey)-.11
G(_click_percent member sets the v).165 E(olume for k)-.22 E .33 -.165
(ey c)-.11 H(licks between 0 \(of).165 E(f\) and 100 \(loud\))-.275 E
(inclusi)72 430.8 Q -.165(ve)-.275 G 2.75(,i).165 G 2.75(fp)-2.75 G 2.75
(ossible. A)-2.75 F(setting of \2551 restores the def)2.75 E 2.75
(ault. Other)-.11 F(ne)2.75 E -.055(ga)-.165 G(ti).055 E .33 -.165(ve v)
-.275 H(alues generate a)-.11 E F0(Bad-)3.666 E -1.012(Va)72 443.8 S
(lue)1.012 E F1(error)3.666 E(.)-.605 E
(The bell_percent sets the base v)72 460.7 Q
(olume for the bell between 0 \(of)-.22 E(f\) and 100 \(loud\) inclusi)
-.275 E -.165(ve)-.275 G 2.75(,i).165 G(f)-2.75 E 2.75(possible. A)72
473.7 R(setting of \2551 restores the def)2.75 E 2.75(ault. Other)-.11 F
(ne)2.75 E -.055(ga)-.165 G(ti).055 E .33 -.165(ve v)-.275 H
(alues generate a)-.11 E F0(BadV)3.666 E(alue)-1.012 E F1(error)3.666 E
(.)-.605 E(The bell_pitch member sets the pitch \(speci\214ed in Hz\) o\
f the bell, if possible.)72 486.7 Q 2.75(As)5.5 G(etting of \2551)-2.75
E(restores the def)72 499.7 Q 2.75(ault. Other)-.11 F(ne)2.75 E -.055
(ga)-.165 G(ti).055 E .33 -.165(ve v)-.275 H(alues generate a)-.11 E F0
(BadV)3.666 E(alue)-1.012 E F1(error)3.666 E 5.5(.T)-.605 G
(he bell_duration mem-)-5.5 E(ber sets the duration of the bell speci\
\214ed in milliseconds, if possible.)72 512.7 Q 2.75(As)5.5 G
(etting of \2551 restores the)-2.75 E(def)72 525.7 Q 2.75(ault. Other)
-.11 F(ne)2.75 E -.055(ga)-.165 G(ti).055 E .33 -.165(ve v)-.275 H
(alues generate a)-.11 E F0(BadV)3.666 E(alue)-1.012 E F1(error)3.666 E
(.)-.605 E(If both the led_mode and led members are speci\214ed, the st\
ate of that LED is changed, if possible.)72 542.6 Q
(The led_mode member can be set to)72 555.6 Q F0(LedModeOn)3.666 E F1
(or)3.666 E F0(LedModeOff)3.666 E F1 5.5(.I).916 G 2.75(fo)-5.5 G
(nly led_mode is speci-)-2.75 E
(\214ed, the state of all LEDs are changed, if possible.)72 568.6 Q
(At most 32 LEDs numbered from one are sup-)5.5 E 2.75(ported. No)72
581.6 R(standard interpretation of LEDs is de\214ned.)2.75 E
(If led is speci\214ed without led_mode, a)5.5 E F0(BadMatch)72.916
594.6 Q F1(error results.)3.666 E(If both the auto_repeat_mode and k)72
611.5 Q .33 -.165(ey m)-.11 H
(embers are speci\214ed, the auto_repeat_mode of that k).165 E .33 -.165
(ey i)-.11 H(s).165 E(changed \(according to)72 624.5 Q F0 -.55(Au)3.666
G(toRepeatModeOn).55 E F1(,).916 E F0 -.55(Au)3.666 G(toRepeatModeOff)
.55 E F1 2.75(,o).916 G(r)-2.75 E F0 -.55(Au)3.666 G(toRepeatModeDe-).55
E(fault)72 637.5 Q F1(\), if possible.).916 E(If only auto_repeat_mode \
is speci\214ed, the global auto_repeat_mode for the)5.5 E(entire k)72
650.5 Q -.165(ey)-.11 G(board is changed, if possible, and does not af)
.165 E(fect the per)-.275 E(-k)-.22 E .33 -.165(ey s)-.11 H 2.75
(ettings. If).165 F 2.75(ak)2.75 G .33 -.165(ey i)-2.86 H 2.75(ss).165 G
(peci-)-2.75 E(\214ed without an auto_repeat_mode, a)72 663.5 Q F0
(BadMatch)3.666 E F1(error results.)3.666 E(Each k)5.5 E .33 -.165(ey h)
-.11 H(as an indi).165 E(vidual mode)-.275 E
(of whether or not it should auto-repeat and a def)72 676.5 Q
(ault setting for the mode.)-.11 E(In addition, there is a)5.5 E
(global mode of whether auto-repeat should be enabled or not and a def)
72 689.5 Q(ault setting for that mode.)-.11 E(When global mode is)72
702.5 Q F0 -.55(Au)3.666 G(toRepeatModeOn).55 E F1 2.75(,k).916 G -.165
(ey)-2.86 G 2.75(ss).165 G(hould obe)-2.75 E 2.75(yt)-.165 G(heir indi)
-2.75 E(vidual auto-repeat)-.275 E 2.75(modes. When)72 715.5 R
(global mode is)2.75 E F0 -.55(Au)3.666 G(toRepeatModeOff).55 E F1 2.75
(,n).916 G 2.75(ok)-2.75 G -.165(ey)-2.86 G 2.75(ss).165 G
(hould auto-repeat.)-2.75 E(An auto-)5.5 E(repeating k)72 728.5 Q .33
-.165(ey g)-.11 H(enerates alternating).165 E F0 -.275(Ke)3.666 G(yPr)
.275 E(ess)-.198 E F1(and)3.666 E F0 -.275(Ke)3.666 G(yRelease).275 E F1
-2.365 -.275(ev e)3.666 H 2.75(nts. When).275 F 2.75(ak)2.75 G .33 -.165
(ey i)-2.86 H 2.75(su).165 G(sed as a)-2.75 E F0(262)279.75 769 Q 0 Cg
EP
%%Page: 263 268
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E/F1 11/Times-Roman@0 SF(modi\214er)72
85 Q 2.75(,i)-.44 G 2.75(ti)-2.75 G 2.75(sd)-2.75 G(esirable for the k)
-2.75 E .33 -.165(ey n)-.11 H(ot to auto-repeat, re).165 E -.055(ga)
-.165 G(rdless of its auto-repeat setting.).055 E 2.75(Ab)72 101.9 S
(ell generator connected with the console b)-2.75 E
(ut not directly on a k)-.22 E -.165(ey)-.11 G
(board is treated as if it were).165 E(part of the k)72 114.9 Q -.165
(ey)-.11 G 2.75(board. The).165 F(order in which controls are v)2.75 E
(eri\214ed and altered is serv)-.165 E(er)-.165 E 2.75(-dependent. If)
-.22 F(an error is generated, a subset of the controls may ha)72 127.9 Q
.33 -.165(ve b)-.22 H(een altered.).165 E .44 LW 36 162.55 36 173.55 DL
36 160.55 36 171.55 DL 41.5 158.8 36 158.8 DL 43.5 158.8 38 158.8 DL 49
158.8 43.5 158.8 DL(XChangeK)72 174.7 Q -.165(ey)-.275 G -1.834
(boardControl \().165 F/F2 11/Times-Italic@0 SF(display).916 E F1(,)A F2
(value_mask)2.75 E F1(,).916 E F2(values)2.75 E F1(\)).916 E(Display *)
88.5 187.7 Q F2(display)A F1(;).916 E(unsigned long)88.5 200.7 Q F2
(value_mask)2.75 E F1(;).916 E(XK)88.5 213.7 Q -.165(ey)-.275 G
(boardControl *).165 E F2(values)A F1(;).916 E F2(display)72 234.5 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2(value_mask)72 251.4 Q F1(Speci\214es which controls to change.)20.069
E(This mask is the bitwise inclusi)5.5 E .33 -.165(ve O)-.275 H 2.75(Ro)
.165 G 2.75(ft)-2.75 G(he)-2.75 E -.275(va)144 264.4 S
(lid control mask bits.).275 E F2(values)72 281.3 Q F1
(Speci\214es one v)43.895 E(alue for each bit set to 1 in the mask.)
-.275 E 36 276.95 36 287.95 DL 36 274.95 36 285.95 DL 41.5 286.2 36
286.2 DL 43.5 286.2 38 286.2 DL 49 286.2 43.5 286.2 DL(The)72 311.2 Q F0
(XChangeK)3.666 E(eyboardContr)-.275 E(ol)-.198 E F1
(function controls the k)3.666 E -.165(ey)-.11 G
(board characteristics de\214ned by the).165 E F0(XK)72.916 324.2 Q
(eyboardContr)-.275 E(ol)-.198 E F1 2.75(structure. The)3.666 F -.275
(va)2.75 G(lue_mask ar).275 E(gument speci\214es which v)-.198 E
(alues are to be)-.275 E(changed.)72 337.2 Q F0(XChangeK)72.916 354.1 Q
(eyboardContr)-.275 E(ol)-.198 E F1(can generate)3.666 E F0(BadMatch)
3.666 E F1(and)3.666 E F0(BadV)3.666 E(alue)-1.012 E F1(errors.)3.666 E
1.76 -.88(To o)72 384 T(btain the current control v).88 E
(alues for the k)-.275 E -.165(ey)-.11 G(board, use).165 E F0(XGetK)
3.666 E(eyboardContr)-.275 E(ol)-.198 E F1(.).916 E 36 401.75 36 412.75
DL 36 399.75 36 410.75 DL 41.5 398 36 398 DL 43.5 398 38 398 DL 49 398
43.5 398 DL(XGetK)72 413.9 Q -.165(ey)-.275 G -1.834(boardControl \()
.165 F F2(display).916 E F1(,)A F2(values_r)2.75 E(eturn)-.407 E F1(\))
.916 E(Display *)88.5 426.9 Q F2(display)A F1(;).916 E(XK)88.5 439.9 Q
-.165(ey)-.275 G(boardState *).165 E F2(values_r)A(eturn)-.407 E F1(;)
.916 E F2(display)72 460.7 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2(values_r)72 477.6 Q(eturn)-.407 E F1(Returns the current k)11.302 E
-.165(ey)-.11 G(board controls in the speci\214ed).165 E F0(XK)3.666 E
(eyboardState)-.275 E F1(struc-)3.666 E(ture.)144 490.6 Q 36 486.25 36
497.25 DL 36 484.25 36 495.25 DL 41.5 495.5 36 495.5 DL 43.5 495.5 38
495.5 DL 49 495.5 43.5 495.5 DL(The)72 520.5 Q F0(XGetK)3.666 E
(eyboardContr)-.275 E(ol)-.198 E F1
(function returns the current control v)3.666 E(alues for the k)-.275 E
-.165(ey)-.11 G(board to the).165 E F0(XK)72.916 533.5 Q(eyboardState)
-.275 E F1(structure.)3.666 E 36 555.15 36 566.15 DL 36 553.15 36 564.15
DL 41.5 551.4 36 551.4 DL 43.5 551.4 38 551.4 DL 49 551.4 43.5 551.4 DL
(typedef struct {)72 569.9 Q(int k)108 582.9 Q -.165(ey)-.11 G
(_click_percent;).165 E(int bell_percent;)108 595.9 Q
(unsigned int bell_pitch, bell_duration;)108 608.9 Q
(unsigned long led_mask;)108 621.9 Q(int global_auto_repeat;)108 634.9 Q
(char auto_repeats[32];)108 647.9 Q 2.75(}X)72 660.9 S -2.365 -.275
(Ke y)-2.75 H(boardState;).275 E 36 663.05 36 674.05 DL 36 661.05 36
672.05 DL 41.5 672.3 36 672.3 DL 43.5 672.3 38 672.3 DL 49 672.3 43.5
672.3 DL -.165(Fo)72 697.3 S 2.75(rt).165 G(he LEDs, the least signi\
\214cant bit of led_mask corresponds to LED one, and each bit set to 1)
-2.75 E(in led_mask indicates an LED that is lit.)72 710.3 Q
(The global_auto_repeat member can be set to)5.5 E F0 -.55(Au)3.666 G
(toRe-).55 E(peatModeOn)72 723.3 Q F1(or)3.666 E F0 -.55(Au)3.666 G
(toRepeatModeOff).55 E F1 5.5(.T).916 G
(he auto_repeats member is a bit v)-5.5 E(ector)-.165 E 5.5(.E)-.605 G
(ach bit set)-5.5 E F0(263)279.75 769 Q 0 Cg EP
%%Page: 264 269
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E/F1 11/Times-Roman@0 SF
(to 1 indicates that auto-repeat is enabled for the corresponding k)72
85 Q -.165(ey)-.11 G 5.5(.T)-.55 G(he v)-5.5 E(ector is represented as)
-.165 E(32 bytes.)72 98 Q(Byte N \(from 0\) contains the bits for k)5.5
E -.165(ey)-.11 G 2.75(s8).165 G 2.75(Nt)-2.75 G 2.75(o8)-2.75 G 2.75
(N+7w)-2.75 G(ith the least signi\214cant bit in)-2.75 E
(the byte representing k)72 111 Q .33 -.165(ey 8)-.11 H(N.).165 E 1.76
-.88(To t)72 140.9 T(urn on k).88 E -.165(ey)-.11 G
(board auto-repeat, use).165 E F0(XA)3.666 E(utoRepeatOn)-.55 E F1(.)
.916 E .44 LW 36 158.65 36 169.65 DL 36 156.65 36 167.65 DL 41.5 154.9
36 154.9 DL 43.5 154.9 38 154.9 DL 49 154.9 43.5 154.9 DL -1.834
(XAutoRepeatOn \()72 170.8 R/F2 11/Times-Italic@0 SF(display).916 E F1
(\)).916 E(Display *)88.5 183.8 Q F2(display)A F1(;).916 E F2(display)72
204.6 Q F1(Speci\214es the connection to the X serv)40.221 E(er)-.165 E
(.)-.605 E 36 200.25 36 211.25 DL 36 198.25 36 209.25 DL 41.5 209.5 36
209.5 DL 43.5 209.5 38 209.5 DL 49 209.5 43.5 209.5 DL(The)72 234.5 Q F0
(XA)3.666 E(utoRepeatOn)-.55 E F1
(function turns on auto-repeat for the k)3.666 E -.165(ey)-.11 G
(board on the speci\214ed display).165 E(.)-.715 E 1.76 -.88(To t)72
264.4 T(urn of).88 E 2.75(fk)-.275 G -.165(ey)-2.86 G
(board auto-repeat, use).165 E F0(XA)3.666 E(utoRepeatOff)-.55 E F1(.)
.916 E 36 282.15 36 293.15 DL 36 280.15 36 291.15 DL 41.5 278.4 36 278.4
DL 43.5 278.4 38 278.4 DL 49 278.4 43.5 278.4 DL(XAutoRepeatOf)72 294.3
Q .916(f\()-.275 G F2(display)A F1(\)).916 E(Display *)88.5 307.3 Q F2
(display)A F1(;).916 E F2(display)72 328.1 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
36 323.75 36 334.75 DL 36 321.75 36 332.75 DL 41.5 333 36 333 DL 43.5
333 38 333 DL 49 333 43.5 333 DL(The)72 358 Q F0(XA)3.666 E
(utoRepeatOff)-.55 E F1(function turns of)3.666 E 2.75(fa)-.275 G
(uto-repeat for the k)-2.75 E -.165(ey)-.11 G
(board on the speci\214ed display).165 E(.)-.715 E 1.76 -.88(To r)72
387.9 T(ing the bell, use).88 E F0(XBell)3.666 E F1(.).916 E 36 405.65
36 416.65 DL 36 403.65 36 414.65 DL 41.5 401.9 36 401.9 DL 43.5 401.9 38
401.9 DL 49 401.9 43.5 401.9 DL -1.834(XBell \()72 417.8 R F2(display)
.916 E F1(,)A F2(per)2.75 E(cent)-.407 E F1(\)).916 E(Display *)88.5
430.8 Q F2(display)A F1(;).916 E(int)88.5 443.8 Q F2(per)2.75 E(cent)
-.407 E F1(;).916 E F2(display)72 464.6 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2(per)72 481.5 Q(cent)-.407 E F1(Speci\214es the v)39.418 E
(olume for the bell, which can range from \255100 to 100 inclusi)-.22 E
-.165(ve)-.275 G(.).165 E 36 477.15 36 488.15 DL 36 475.15 36 486.15 DL
41.5 486.4 36 486.4 DL 43.5 486.4 38 486.4 DL 49 486.4 43.5 486.4 DL
(The)72 511.4 Q F0(XBell)3.666 E F1(function rings the bell on the k)
3.666 E -.165(ey)-.11 G(board on the speci\214ed display).165 E 2.75(,i)
-.715 G 2.75(fp)-2.75 G 2.75(ossible. The)-2.75 F(speci-)2.75 E
(\214ed v)72 524.4 Q(olume is relati)-.22 E .33 -.165(ve t)-.275 H 2.75
(ot).165 G(he base v)-2.75 E(olume for the k)-.22 E -.165(ey)-.11 G 2.75
(board. If).165 F(the v)2.75 E(alue for the percent ar)-.275 E(gument)
-.198 E(is not in the range \255100 to 100 inclusi)72 537.4 Q -.165(ve)
-.275 G 2.75(,a).165 G F0(BadV).916 E(alue)-1.012 E F1(error results.)
3.666 E(The v)5.5 E(olume at which the bell)-.22 E
(rings when the percent ar)72 550.4 Q(gument is nonne)-.198 E -.055(ga)
-.165 G(ti).055 E .33 -.165(ve i)-.275 H(s:).165 E
(base \255 [\(base * percent\) / 100] + percent)99.5 567.3 Q(The v)72
584.2 Q(olume at which the bell rings when the percent ar)-.22 E
(gument is ne)-.198 E -.055(ga)-.165 G(ti).055 E .33 -.165(ve i)-.275 H
(s:).165 E(base + [\(base * percent\) / 100])99.5 601.1 Q 1.76 -.88
(To c)72 618 T(hange the base v).88 E(olume of the bell, use)-.22 E F0
(XChangeK)3.666 E(eyboardContr)-.275 E(ol)-.198 E F1(.).916 E F0(XBell)
72.916 634.9 Q F1(can generate a)3.666 E F0(BadV)3.666 E(alue)-1.012 E
F1(error)3.666 E(.)-.605 E 1.76 -.88(To o)72 664.8 T(btain a bit v).88 E
(ector that describes the state of the k)-.165 E -.165(ey)-.11 G
(board, use).165 E F0(XQueryK)3.666 E(eymap)-.275 E F1(.).916 E F0(264)
279.75 769 Q 0 Cg EP
%%Page: 265 270
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E .44 LW 36 76.75 36 87.75 DL 36 74.75
36 85.75 DL 41.5 73 36 73 DL 43.5 73 38 73 DL 49 73 43.5 73 DL/F1 11
/Times-Roman@0 SF(XQueryK)72 88.9 Q -.165(ey)-.275 G -1.834(map \().165
F/F2 11/Times-Italic@0 SF(display).916 E F1(,)A F2 -.11(ke)2.75 G(ys_r)
-.22 E(eturn)-.407 E F1(\)).916 E(Display *)88.5 101.9 Q F2(display)A F1
(;).916 E(char)88.5 114.9 Q F2 -.11(ke)2.75 G(ys_r)-.22 E(eturn)-.407 E
F1 -1.834([32] ;)B F2(display)72 135.7 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2 -.11(ke)72 152.6 S(ys_r)-.22 E(eturn)-.407 E F1
(Returns an array of bytes that identi\214es which k)20.916 E -.165(ey)
-.11 G 2.75(sa).165 G(re pressed do)-2.75 E 2.75(wn. Each)-.275 F(bit)
2.75 E(represents one k)144 165.6 Q .33 -.165(ey o)-.11 H 2.75(ft).165 G
(he k)-2.75 E -.165(ey)-.11 G(board.).165 E 36 161.25 36 172.25 DL 36
159.25 36 170.25 DL 41.5 170.5 36 170.5 DL 43.5 170.5 38 170.5 DL 49
170.5 43.5 170.5 DL(The)72 195.5 Q F0(XQueryK)3.666 E(eymap)-.275 E F1
(function returns a bit v)3.666 E(ector for the logical state of the k)
-.165 E -.165(ey)-.11 G(board, where).165 E
(each bit set to 1 indicates that the corresponding k)72 208.5 Q .33
-.165(ey i)-.11 H 2.75(sc).165 G(urrently pressed do)-2.75 E 2.75
(wn. The)-.275 F -.165(ve)2.75 G(ctor is rep-).165 E
(resented as 32 bytes.)72 221.5 Q
(Byte N \(from 0\) contains the bits for k)5.5 E -.165(ey)-.11 G 2.75
(s8).165 G 2.75(Nt)-2.75 G 2.75(o8)-2.75 G 2.75(N+7w)-2.75 G
(ith the least sig-)-2.75 E(ni\214cant bit in the byte representing k)72
234.5 Q .33 -.165(ey 8)-.11 H(N.).165 E
(Note that the logical state of a de)72 251.4 Q
(vice \(as seen by client applications\) may lag the ph)-.275 E
(ysical state if)-.055 E(de)72 264.4 Q(vice e)-.275 E -.165(ve)-.275 G
(nt processing is frozen.).165 E 1.76 -.88(To s)72 294.3 T
(et the mapping of the pointer b).88 E(uttons, use)-.22 E F0(XSetP)3.666
E(ointerMapping)-.22 E F1(.).916 E 36 312.05 36 323.05 DL 36 310.05 36
321.05 DL 41.5 308.3 36 308.3 DL 43.5 308.3 38 308.3 DL 49 308.3 43.5
308.3 DL(int XSetPointerMapping)72 324.2 Q(\().916 E F2(display).916 E
F1(,)A F2(map)2.75 E F1(,)A F2(nmap)2.75 E F1(\)).916 E(Display *)88.5
337.2 Q F2(display)A F1(;).916 E(unsigned char)88.5 350.2 Q F2(map)2.75
E F1 -1.834([] ;).916 F(int)88.5 363.2 Q F2(nmap)2.75 E F1(;).916 E F2
(display)72 384 Q F1(Speci\214es the connection to the X serv)40.221 E
(er)-.165 E(.)-.605 E F2(map)72 400.9 Q F1
(Speci\214es the mapping list.)53.058 E F2(nmap)72 417.8 Q F1
(Speci\214es the number of items in the mapping list.)47.558 E 36 413.45
36 424.45 DL 36 411.45 36 422.45 DL 41.5 422.7 36 422.7 DL 43.5 422.7 38
422.7 DL 49 422.7 43.5 422.7 DL(The)72 447.7 Q F0(XSetP)3.666 E
(ointerMapping)-.22 E F1(function sets the mapping of the pointer)3.666
E 5.5(.I)-.605 G 2.75(fi)-5.5 G 2.75(ts)-2.75 G(ucceeds, the X serv)
-2.75 E(er)-.165 E(generates a)72 460.7 Q F0(MappingNotify)3.666 E F1
-2.365 -.275(ev e)3.666 H(nt, and).275 E F0(XSetP)3.666 E(ointerMapping)
-.22 E F1(returns)3.666 E F0(MappingSuccess)3.666 E F1 5.5(.E).916 G
(le-)-5.5 E(ment map[i] de\214nes the logical b)72 473.7 Q
(utton number for the ph)-.22 E(ysical b)-.055 E(utton i+1.)-.22 E
(The length of the list)5.5 E(must be the same as)72 486.7 Q F0(XGetP)
3.666 E(ointerMapping)-.22 E F1 -.11(wo)3.666 G(uld return, or a).11 E
F0(BadV)3.666 E(alue)-1.012 E F1(error results.)3.666 E 2.75(Az)5.5 G
(ero)-2.75 E(element disables a b)72 499.7 Q
(utton, and elements are not restricted in v)-.22 E
(alue by the number of ph)-.275 E(ysical b)-.055 E(ut-)-.22 E 2.75
(tons. Ho)72 512.7 R(we)-.275 E -.165(ve)-.275 G .88 -.44(r, n).165 H
2.75(ot).44 G .22 -.11(wo e)-2.75 H(lements can ha).11 E .33 -.165(ve t)
-.22 H(he same nonzero v).165 E(alue, or a)-.275 E F0(BadV)3.666 E(alue)
-1.012 E F1(error results.)3.666 E(If an)72 525.7 Q 2.75(yo)-.165 G 2.75
(ft)-2.75 G(he b)-2.75 E(uttons to be altered are logically in the do)
-.22 E(wn state,)-.275 E F0(XSetP)3.666 E(ointerMapping)-.22 E F1
(returns)3.666 E F0(MappingBusy)72.916 538.7 Q F1 2.75(,a).916 G
(nd the mapping is not changed.)-2.75 E F0(XSetP)72.916 555.6 Q
(ointerMapping)-.22 E F1(can generate a)3.666 E F0(BadV)3.666 E(alue)
-1.012 E F1(error)3.666 E(.)-.605 E 1.76 -.88(To g)72 585.5 T
(et the pointer mapping, use).88 E F0(XGetP)3.666 E(ointerMapping)-.22 E
F1(.).916 E F0(265)279.75 769 Q 0 Cg EP
%%Page: 266 271
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E .44 LW 36 76.75 36 87.75 DL 36 74.75
36 85.75 DL 41.5 73 36 73 DL 43.5 73 38 73 DL 49 73 43.5 73 DL/F1 11
/Times-Roman@0 SF(int XGetPointerMapping)72 88.9 Q(\().916 E/F2 11
/Times-Italic@0 SF(display).916 E F1(,)A F2(map_r)2.75 E(eturn)-.407 E
F1(,)A F2(nmap)2.75 E F1(\)).916 E(Display *)88.5 101.9 Q F2(display)A
F1(;).916 E(unsigned char)88.5 114.9 Q F2(map_r)2.75 E(eturn)-.407 E F1
-1.834([] ;).916 F(int)88.5 127.9 Q F2(nmap)2.75 E F1(;).916 E F2
(display)72 148.7 Q F1(Speci\214es the connection to the X serv)40.221 E
(er)-.165 E(.)-.605 E F2(map_r)72 165.6 Q(eturn)-.407 E F1
(Returns the mapping list.)20.465 E F2(nmap)72 182.5 Q F1
(Speci\214es the number of items in the mapping list.)47.558 E 36 178.15
36 189.15 DL 36 176.15 36 187.15 DL 41.5 187.4 36 187.4 DL 43.5 187.4 38
187.4 DL 49 187.4 43.5 187.4 DL(The)72 212.4 Q F0(XGetP)3.666 E
(ointerMapping)-.22 E F1
(function returns the current mapping of the pointer)3.666 E 5.5(.P)
-.605 G(ointer b)-5.5 E(uttons)-.22 E(are numbered starting from one.)72
225.4 Q F0(XGetP)6.416 E(ointerMapping)-.22 E F1
(returns the number of ph)3.666 E(ysical b)-.055 E(uttons)-.22 E
(actually on the pointer)72 238.4 Q 5.5(.T)-.605 G
(he nominal mapping for a pointer is map[i]=i+1.)-5.5 E(The nmap ar)5.5
E(gument)-.198 E(speci\214es the length of the array where the pointer \
mapping is returned, and only the \214rst nmap)72 251.4 Q
(elements are returned in map_return.)72 264.4 Q 1.76 -.88(To c)72 294.3
T(ontrol the pointer').88 E 2.75(si)-.605 G(nteracti)-2.75 E .33 -.165
(ve f)-.275 H(eel, use).165 E F0(XChangeP)3.666 E(ointerContr)-.22 E(ol)
-.198 E F1(.).916 E 36 312.05 36 323.05 DL 36 310.05 36 321.05 DL 41.5
308.3 36 308.3 DL 43.5 308.3 38 308.3 DL 49 308.3 43.5 308.3 DL -1.834
(XChangePointerControl \()72 324.2 R F2(display).916 E F1(,)A F2
(do_accel)2.75 E F1(,).916 E F2(do_thr)2.75 E(eshold)-.407 E F1(,).916 E
F2(accel_numer)2.75 E(ator)-.165 E F1(,).916 E F2(accel_denominator)138
337.2 Q F1(,).916 E F2(thr)2.75 E(eshold)-.407 E F1(\)).916 E(Display *)
88.5 350.2 Q F2(display)A F1(;).916 E(Bool)88.5 363.2 Q F2(do_accel)2.75
E F1(,).916 E F2(do_thr)2.75 E(eshold)-.407 E F1(;).916 E(int)88.5 376.2
Q F2(accel_numer)2.75 E(ator)-.165 E F1(,).916 E F2(accel_denominator)
2.75 E F1(;).916 E(int)88.5 389.2 Q F2(thr)2.75 E(eshold)-.407 E F1(;)
.916 E F2(display)72 410 Q F1(Speci\214es the connection to the X serv)
40.221 E(er)-.165 E(.)-.605 E F2(do_accel)72 426.9 Q F1
(Speci\214es a Boolean v)32.29 E(alue that controls whether the v)-.275
E(alues for the accel_numera-)-.275 E
(tor or accel_denominator are used.)144 439.9 Q F2(do_thr)72 456.8 Q
(eshold)-.407 E F1(Speci\214es a Boolean v)14.349 E
(alue that controls whether the v)-.275 E(alue for the threshold is)
-.275 E(used.)144 469.8 Q F2(accel_numer)72 486.7 Q(ator)-.165 E F1
(Speci\214es the numerator for the acceleration multiplier)144 499.7 Q
(.)-.605 E F2(accel_denominator)72 516.6 Q F1
(Speci\214es the denominator for the acceleration multiplier)144 529.6 Q
(.)-.605 E F2(thr)72 546.5 Q(eshold)-.407 E F1
(Speci\214es the acceleration threshold.)30.849 E 36 542.15 36 553.15 DL
36 540.15 36 551.15 DL 41.5 551.4 36 551.4 DL 43.5 551.4 38 551.4 DL 49
551.4 43.5 551.4 DL(The)72 576.4 Q F0(XChangeP)3.666 E(ointerContr)-.22
E(ol)-.198 E F1(function de\214nes ho)3.666 E 2.75(wt)-.275 G
(he pointing de)-2.75 E(vice mo)-.275 E -.165(ve)-.165 G 2.75(s. The)
.165 F(accelera-)2.75 E(tion, e)72 589.4 Q
(xpressed as a fraction, is a multiplier for mo)-.165 E -.165(ve)-.165 G
2.75(ment. F).165 F(or e)-.165 E(xample, specifying 3/1 means the)-.165
E(pointer mo)72 602.4 Q -.165(ve)-.165 G 2.75(st).165 G(hree times as f)
-2.75 E(ast as normal.)-.11 E
(The fraction may be rounded arbitrarily by the X)5.5 E(serv)72 615.4 Q
(er)-.165 E 5.5(.A)-.605 G(cceleration only tak)-5.5 E(es ef)-.11 E
(fect if the pointer mo)-.275 E -.165(ve)-.165 G 2.75(sm).165 G
(ore than threshold pix)-2.75 E(els at once and)-.165 E
(only applies to the amount be)72 628.4 Q(yond the v)-.165 E
(alue in the threshold ar)-.275 E 2.75(gument. Setting)-.198 F 2.75(av)
2.75 G(alue to \2551)-3.025 E(restores the def)72 641.4 Q 2.75
(ault. The)-.11 F -.275(va)2.75 G
(lues of the do_accel and do_threshold ar).275 E(guments must be)-.198 E
F0 -.814(Tr)3.666 G(ue).814 E F1(for)3.666 E(the pointer v)72 654.4 Q
(alues to be set, or the parameters are unchanged.)-.275 E(Ne)5.5 E
-.055(ga)-.165 G(ti).055 E .33 -.165(ve v)-.275 H
(alues \(other than \2551\))-.11 E(generate a)72 667.4 Q F0(BadV)3.666 E
(alue)-1.012 E F1(error)3.666 E 2.75(,a)-.44 G 2.75(sd)-2.75 G
(oes a zero v)-2.75 E(alue for the accel_denominator ar)-.275 E(gument.)
-.198 E F0(XChangeP)72.916 684.3 Q(ointerContr)-.22 E(ol)-.198 E F1
(can generate a)3.666 E F0(BadV)3.666 E(alue)-1.012 E F1(error)3.666 E
(.)-.605 E 1.76 -.88(To g)72 714.2 T
(et the current pointer parameters, use).88 E F0(XGetP)3.666 E
(ointerContr)-.22 E(ol)-.198 E F1(.).916 E F0(266)279.75 769 Q 0 Cg EP
%%Page: 267 272
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E .44 LW 36 76.75 36 87.75 DL 36 74.75
36 85.75 DL 41.5 73 36 73 DL 43.5 73 38 73 DL 49 73 43.5 73 DL/F1 11
/Times-Roman@0 SF -1.834(XGetPointerControl \()72 88.9 R/F2 11
/Times-Italic@0 SF(display).916 E F1(,)A F2(accel_numer)2.75 E(ator_r)
-.165 E(eturn)-.407 E F1(,).916 E F2(accel_denominator_r)2.75 E(eturn)
-.407 E F1(,).916 E F2(thr)135.25 101.9 Q(eshold_r)-.407 E(eturn)-.407 E
F1(\)).916 E(Display *)88.5 114.9 Q F2(display)A F1(;).916 E(int *)88.5
127.9 Q F2(accel_numer)A(ator_r)-.165 E(eturn)-.407 E F1 2.75(,*).916 G
F2(accel_denominator_r)-2.75 E(eturn)-.407 E F1(;).916 E(int *)88.5
140.9 Q F2(thr)A(eshold_r)-.407 E(eturn)-.407 E F1(;).916 E F2(display)
72 161.7 Q F1(Speci\214es the connection to the X serv)40.221 E(er)-.165
E(.)-.605 E F2(accel_numer)72 178.6 Q(ator_r)-.165 E(eturn)-.407 E F1
(Returns the numerator for the acceleration multiplier)144 191.6 Q(.)
-.605 E F2(accel_denominator_r)72 208.5 Q(eturn)-.407 E F1
(Returns the denominator for the acceleration multiplier)144 221.5 Q(.)
-.605 E F2(thr)72 238.4 Q(eshold_r)-.407 E(eturn)-.407 E F1
(Returns the acceleration threshold.)144 251.4 Q 36 247.05 36 258.05 DL
36 245.05 36 256.05 DL 41.5 256.3 36 256.3 DL 43.5 256.3 38 256.3 DL 49
256.3 43.5 256.3 DL(The)72 281.3 Q F0(XGetP)3.666 E(ointerContr)-.22 E
(ol)-.198 E F1(function returns the pointer')3.666 E 2.75(sc)-.605 G
(urrent acceleration multiplier and accel-)-2.75 E(eration threshold.)72
294.3 Q F0 2.75(12.7. Manipulating)72 320.3 R(the K)2.75 E
(eyboard Encoding)-.275 E F1 2.75(AK)72 337.2 S -.165(ey)-3.025 G
(Code represents a ph).165 E(ysical \(or logical\) k)-.055 E -.165(ey)
-.11 G 5.5(.K)-.55 G -.165(ey)-5.775 G(Codes lie in the inclusi).165 E
.33 -.165(ve r)-.275 H(ange [8,255].).165 E(A)5.5 E -2.365 -.275(Ke y)72
350.2 T(Code v).275 E
(alue carries no intrinsic information, although serv)-.275 E
(er implementors may attempt to)-.165 E(encode geometry \(for e)72 363.2
Q(xample, matrix\) information in some f)-.165 E
(ashion so that it can be interpreted)-.11 E(in a serv)72 376.2 Q(er)
-.165 E(-dependent f)-.22 E 2.75(ashion. The)-.11 F(mapping between k)
2.75 E -.165(ey)-.11 G 2.75(sa).165 G(nd K)-2.75 E -.165(ey)-.275 G
(Codes cannot be changed.).165 E 2.75(AK)72 393.1 S -.165(ey)-3.025 G
(Sym is an encoding of a symbol on the cap of a k).165 E -.165(ey)-.11 G
5.5(.T)-.55 G(he set of de\214ned K)-5.5 E -.165(ey)-.275 G
(Syms includes).165 E(the ISO Latin character sets \(1\2554\), Katakana\
, Arabic, Cyrillic, Greek, T)72 406.1 Q(echnical, Special, Publish-)-.77
E(ing, APL, Hebre)72 419.1 Q 1.43 -.715(w, T)-.275 H(hai, K).715 E
(orean and a miscellan)-.385 E 2.75(yo)-.165 G 2.75(fk)-2.75 G -.165(ey)
-2.86 G 2.75(sf).165 G(ound on k)-2.75 E -.165(ey)-.11 G
(boards \(Return, Help, T).165 E(ab,)-.88 E(and so on\).)72 432.1 Q 1.76
-.88(To t)5.5 H(he e).88 E(xtent possible, these sets are deri)-.165 E
-.165(ve)-.275 G 2.75(df).165 G(rom international standards.)-2.75 E
(In areas)5.5 E(where no standards e)72 445.1 Q
(xist, some of these sets are deri)-.165 E -.165(ve)-.275 G 2.75(df).165
G(rom Digital Equipment Corporation)-2.75 E 2.75(standards. The)72 458.1
R(list of de\214ned symbols can be found in <)2.75 E F0(X11/k)A
(eysymdef)-.11 E(.h)-.165 E F1 2.75(>. Unfortunately)B(,)-.715 E
(some C preprocessors ha)72 471.1 Q .33 -.165(ve l)-.22 H
(imits on the number of de\214ned symbols.).165 E(If you must use K)5.5
E -.165(ey)-.275 G(Syms).165 E
(not in the Latin 1\2554, Greek, and miscellaneous classes, you may ha)
72 484.1 Q .33 -.165(ve t)-.22 H 2.75(od).165 G
(e\214ne a symbol for those)-2.75 E 2.75(sets. Most)72 497.1 R
(applications usually only include <)2.75 E F0(X11/k)A(eysym.h)-.11 E F1
(>, which de\214nes symbols for ISO)A
(Latin 1\2554, Greek, and miscellaneous.)72 510.1 Q 2.75(Al)72 527 S
(ist of K)-2.75 E -.165(ey)-.275 G(Syms is associated with each K).165 E
-.165(ey)-.275 G 2.75(Code. The).165 F(list is intended to con)2.75 E
.33 -.165(vey t)-.44 H(he set of).165 E(symbols on the corresponding k)
72 540 Q -.165(ey)-.11 G 5.5(.I)-.55 G 2.75(ft)-5.5 G
(he list \(ignoring trailing)-2.75 E F0(NoSymbol)3.666 E F1
(entries\) is a single)3.666 E -2.365 -.275(Ke y)72 553 T(Sym `).275 E
(`)-.814 E F2(K)A F1 -.814('')C 2.75(,t).814 G
(hen the list is treated as if it were the list `)-2.75 E(`)-.814 E F2
(K)A F1(NoSymbol)2.75 E F2(K)2.75 E F1(NoSymbol')2.75 E 2.75('. If)-.814
F(the list)2.75 E(\(ignoring trailing)72 566 Q F0(NoSymbol)3.666 E F1
(entries\) is a pair of K)3.666 E -.165(ey)-.275 G(Syms `).165 E(`)-.814
E F2(K1 K2)A F1 -.814('')C 2.75(,t).814 G(hen the list is treated as if)
-2.75 E(it were the list `)72 579 Q(`)-.814 E F2(K1 K2 K1 K2)A F1 -.814
('')C 5.5(.I).814 G 2.75(ft)-5.5 G(he list \(ignoring trailing)-2.75 E
F0(NoSymbol)3.666 E F1(entries\) is a triple of)3.666 E -2.365 -.275
(Ke y)72 592 T(Syms `).275 E(`)-.814 E F2(K1 K2 K3)A F1 -.814('')C 2.75
(,t).814 G(hen the list is treated as if it were the list `)-2.75 E(`)
-.814 E F2(K1 K2 K3)A F1(NoSymbol')2.75 E('.)-.814 E(When an e)72 605 Q
(xplicit `)-.165 E(`v)-.814 E(oid')-.22 E 2.75('e)-.814 G
(lement is desired in the list, the v)-2.75 E(alue)-.275 E F0 -1.1(Vo)
3.666 G(idSymbol)1.1 E F1(can be used.)3.666 E
(The \214rst four elements of the list are split into tw)72 621.9 Q 2.75
(og)-.11 G(roups of K)-2.75 E -.165(ey)-.275 G 2.75(Syms. Group).165 F
2.75(1c)2.75 G(ontains the \214rst)-2.75 E(and second K)72 634.9 Q -.165
(ey)-.275 G(Syms; Group 2 contains the third and fourth K).165 E -.165
(ey)-.275 G 2.75(Syms. W).165 F(ithin each group, if the)-.44 E
(second element of the group is)72 647.9 Q F0(NoSymbol)3.666 E F1 2.75
(,t).916 G(hen the group should be treated as if the second ele-)-2.75 E
(ment were the same as the \214rst element, e)72 660.9 Q
(xcept when the \214rst element is an alphabetic K)-.165 E -.165(ey)
-.275 G(Sym).165 E -.814(``)72 673.9 S F2(K).814 E F1 1.628 -.814('' f)D
(or which both lo).814 E(wercase and uppercase forms are de\214ned.)
-.275 E(In that case, the group should be)5.5 E
(treated as if the \214rst element were the lo)72 686.9 Q
(wercase form of `)-.275 E(`)-.814 E F2(K)A F1 1.628 -.814('' a)D
(nd the second element were the).814 E(uppercase form of `)72 699.9 Q(`)
-.814 E F2(K)A F1 -.814('')C(.).814 E
(The standard rules for obtaining a K)72 716.8 Q -.165(ey)-.275 G
(Sym from a).165 E F0 -.275(Ke)3.666 G(yPr).275 E(ess)-.198 E F1 -2.365
-.275(ev e)3.666 H(nt mak).275 E 2.75(eu)-.11 G(se of only the Group 1)
-2.75 E(and Group 2 K)72 729.8 Q -.165(ey)-.275 G
(Syms; no interpretation of other K).165 E -.165(ey)-.275 G
(Syms in the list is gi).165 E -.165(ve)-.275 G 2.75(n. Which).165 F
(group to)2.75 E F0(267)279.75 769 Q 0 Cg EP
%%Page: 268 273
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E/F1 11/Times-Roman@0 SF
(use is determined by the modi\214er state.)72 85 Q
(Switching between groups is controlled by the K)5.5 E -.165(ey)-.275 G
(Sym).165 E(named MODE SWITCH, by attaching that K)72 98 Q -.165(ey)
-.275 G(Sym to some K).165 E -.165(ey)-.275 G(Code and attaching that)
.165 E -2.365 -.275(Ke y)72 111 T(Code to an).275 E 2.75(yo)-.165 G
(ne of the modi\214ers)-2.75 E F0(Mod1)3.666 E F1(through)3.666 E F0
(Mod5)3.666 E F1 5.5(.T).916 G(his modi\214er is called the)-5.5 E/F2 11
/Times-Italic@0 SF(gr)2.75 E(oup)-.495 E(modi\214er)72 124 Q F1 5.5(.F)
.916 G(or an)-5.665 E 2.75(yK)-.165 G -.165(ey)-3.025 G
(Code, Group 1 is used when the group modi\214er is of).165 E
(f, and Group 2 is used)-.275 E(when the group modi\214er is on.)72 137
Q(The)72 153.9 Q F0(Lock)3.666 E F1
(modi\214er is interpreted as CapsLock when the K)3.666 E -.165(ey)-.275
G(Sym named XK_Caps_Lock is).165 E(attached to some K)72 166.9 Q -.165
(ey)-.275 G(Code and that K).165 E -.165(ey)-.275 G
(Code is attached to the).165 E F0(Lock)3.666 E F1(modi\214er)3.666 E
5.5(.T)-.605 G(he)-5.5 E F0(Lock)3.666 E F1(modi-)3.666 E
(\214er is interpreted as ShiftLock when the K)72 179.9 Q -.165(ey)-.275
G(Sym named XK_Shift_Lock is attached to some).165 E -2.365 -.275(Ke y)
72 192.9 T(Code and that K).275 E -.165(ey)-.275 G
(Code is attached to the).165 E F0(Lock)3.666 E F1(modi\214er)3.666 E
5.5(.I)-.605 G 2.75(ft)-5.5 G(he)-2.75 E F0(Lock)3.666 E F1
(modi\214er could be)3.666 E(interpreted as both CapsLock and ShiftLock\
, the CapsLock interpretation is used.)72 205.9 Q(The operation of k)72
222.8 Q -.165(ey)-.11 G(pad k).165 E -.165(ey)-.11 G 2.75(si).165 G 2.75
(sc)-2.75 G(ontrolled by the K)-2.75 E -.165(ey)-.275 G
(Sym named XK_Num_Lock, by attaching).165 E(that K)72 235.8 Q -.165(ey)
-.275 G(Sym to some K).165 E -.165(ey)-.275 G(Code and attaching that K)
.165 E -.165(ey)-.275 G(Code to an).165 E 2.75(yo)-.165 G
(ne of the modi\214ers)-2.75 E F0(Mod1)3.666 E F1(through)72 248.8 Q F0
(Mod5)3.666 E F1 5.5(.T).916 G(his modi\214er is called the)-5.5 E F2
(numloc)2.75 E 2.75(km)-.22 G(odi\214er)-2.75 E F1 5.5(.T).916 G
(he standard K)-5.5 E -.165(ey)-.275 G(Syms with the).165 E(pre\214x `)
72 261.8 Q(`XK_KP_')-.814 E 2.75('i)-.814 G 2.75(nt)-2.75 G
(heir name are called k)-2.75 E -.165(ey)-.11 G(pad K).165 E -.165(ey)
-.275 G(Syms; these are K).165 E -.165(ey)-.275 G(Syms with numeric).165
E -.275(va)72 274.8 S(lue in the he).275 E
(xadecimal range 0xFF80 to 0xFFBD inclusi)-.165 E -.165(ve)-.275 G 5.5
(.I).165 G 2.75(na)-5.5 G(ddition, v)-2.75 E(endor)-.165 E(-speci\214c)
-.22 E -2.365 -.275(Ke y)72 287.8 T(Syms in the he).275 E
(xadecimal range 0x11000000 to 0x1100FFFF are also k)-.165 E -.165(ey)
-.11 G(pad K).165 E -.165(ey)-.275 G(Syms.).165 E -.44(Wi)72 304.7 S
(thin a group, the choice of K).44 E -.165(ey)-.275 G
(Sym is determined by applying the \214rst rule that is satis\214ed).165
E(from the follo)72 317.7 Q(wing list:)-.275 E 23.65<8354>72 334.6 S
(he numlock modi\214er is on and the second K)-23.65 E -.165(ey)-.275 G
(Sym is a k).165 E -.165(ey)-.11 G(pad K).165 E -.165(ey)-.275 G 2.75
(Sym. In).165 F(this case, if)2.75 E(the)99.5 347.6 Q F0(Shift)3.666 E
F1(modi\214er is on, or if the)3.666 E F0(Lock)3.666 E F1
(modi\214er is on and is interpreted as ShiftLock, then)3.666 E
(the \214rst K)99.5 360.6 Q -.165(ey)-.275 G
(Sym is used, otherwise the second K).165 E -.165(ey)-.275 G
(Sym is used.).165 E 23.65<8354>72 377.5 S(he)-23.65 E F0(Shift)3.666 E
F1(and)3.666 E F0(Lock)3.666 E F1(modi\214ers are both of)3.666 E 2.75
(f. In)-.275 F(this case, the \214rst K)2.75 E -.165(ey)-.275 G
(Sym is used.).165 E 23.65<8354>72 394.4 S(he)-23.65 E F0(Shift)3.666 E
F1(modi\214er is of)3.666 E(f, and the)-.275 E F0(Lock)3.666 E F1
(modi\214er is on and is interpreted as CapsLock.)3.666 E(In)5.5 E
(this case, the \214rst K)99.5 407.4 Q -.165(ey)-.275 G(Sym is used, b)
.165 E(ut if that K)-.22 E -.165(ey)-.275 G(Sym is lo).165 E
(wercase alphabetic, then the cor)-.275 E(-)-.22 E
(responding uppercase K)99.5 420.4 Q -.165(ey)-.275 G
(Sym is used instead.).165 E 23.65<8354>72 437.3 S(he)-23.65 E F0(Shift)
3.666 E F1(modi\214er is on, and the)3.666 E F0(Lock)3.666 E F1
(modi\214er is on and is interpreted as CapsLock.)3.666 E(In)5.5 E
(this case, the second K)99.5 450.3 Q -.165(ey)-.275 G(Sym is used, b)
.165 E(ut if that K)-.22 E -.165(ey)-.275 G(Sym is lo).165 E
(wercase alphabetic, then the)-.275 E(corresponding uppercase K)99.5
463.3 Q -.165(ey)-.275 G(Sym is used instead.).165 E 23.65<8354>72 480.2
S(he)-23.65 E F0(Shift)3.666 E F1(modi\214er is on, or the)3.666 E F0
(Lock)3.666 E F1(modi\214er is on and is interpreted as ShiftLock, or)
3.666 E 2.75(both. In)99.5 493.2 R(this case, the second K)2.75 E -.165
(ey)-.275 G(Sym is used.).165 E
(No spatial geometry of the symbols on the k)72 510.1 Q .33 -.165(ey i)
-.11 H 2.75(sd).165 G(e\214ned by their order in the K)-2.75 E -.165(ey)
-.275 G(Sym list,).165 E
(although a geometry might be de\214ned on a serv)72 523.1 Q(er)-.165 E
(-speci\214c basis.)-.22 E(The X serv)5.5 E(er does not use the)-.165 E
(mapping between K)72 536.1 Q -.165(ey)-.275 G(Codes and K).165 E -.165
(ey)-.275 G 2.75(Syms. Rather).165 F 2.75(,i)-.44 G 2.75(tm)-2.75 G
(erely stores it for reading and writing by)-2.75 E(clients.)72 549.1 Q
1.76 -.88(To o)72 579 T(btain the le).88 E -.055(ga)-.165 G 2.75(lK).055
G -.165(ey)-3.025 G(Codes for a display).165 E 2.75(,u)-.715 G(se)-2.75
E F0(XDisplayK)3.666 E(eycodes)-.275 E F1(.).916 E F0(268)279.75 769 Q 0
Cg EP
%%Page: 269 274
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E .44 LW 36 76.75 36 87.75 DL 36 74.75
36 85.75 DL 41.5 73 36 73 DL 43.5 73 38 73 DL 49 73 43.5 73 DL/F1 11
/Times-Roman@0 SF(XDisplayK)72 88.9 Q -.165(ey)-.275 G -1.834(codes \()
.165 F/F2 11/Times-Italic@0 SF(display).916 E F1(,).916 E F2(min_k)2.75
E -.33(ey)-.11 G(codes_r).33 E(eturn)-.407 E F1(,).916 E F2(max_k)2.75 E
-.33(ey)-.11 G(codes_r).33 E(eturn)-.407 E F1(\)).916 E(Display *)94
101.9 Q F2(display).916 E F1(;).916 E(int *)94 114.9 Q F2(min_k).916 E
-.33(ey)-.11 G(codes_r).33 E(eturn)-.407 E F1 2.75(,*).916 G F2(max_k)
-1.834 E -.33(ey)-.11 G(codes_r).33 E(eturn)-.407 E F1(;).916 E F2
(display)72 135.7 Q F1(Speci\214es the connection to the X serv)40.221 E
(er)-.165 E(.)-.605 E F2(min_k)72 152.6 Q -.33(ey)-.11 G(codes_r).33 E
(eturn)-.407 E F1(Returns the minimum number of K)144 165.6 Q -.165(ey)
-.275 G(Codes.).165 E F2(max_k)72 182.5 Q -.33(ey)-.11 G(codes_r).33 E
(eturn)-.407 E F1(Returns the maximum number of K)144 195.5 Q -.165(ey)
-.275 G(Codes.).165 E 36 191.15 36 202.15 DL 36 189.15 36 200.15 DL 41.5
200.4 36 200.4 DL 43.5 200.4 38 200.4 DL 49 200.4 43.5 200.4 DL(The)72
225.4 Q F0(XDisplayK)3.666 E(eycodes)-.275 E F1
(function returns the min-k)3.666 E -.165(ey)-.11 G(codes and max-k).165
E -.165(ey)-.11 G(codes supported by the).165 E(speci\214ed display)72
238.4 Q 5.5(.T)-.715 G(he minimum number of K)-5.5 E -.165(ey)-.275 G
(Codes returned is ne).165 E -.165(ve)-.275 G 2.75(rl).165 G
(ess than 8, and the maxi-)-2.75 E(mum number of K)72 251.4 Q -.165(ey)
-.275 G(Codes returned is ne).165 E -.165(ve)-.275 G 2.75(rg).165 G
(reater than 255.)-2.75 E(Not all K)5.5 E -.165(ey)-.275 G
(Codes in this range are).165 E(required to ha)72 264.4 Q .33 -.165
(ve c)-.22 H(orresponding k).165 E -.165(ey)-.11 G(s.).165 E 1.76 -.88
(To o)72 294.3 T(btain the symbols for the speci\214ed K).88 E -.165(ey)
-.275 G(Codes, use).165 E F0(XGetK)3.666 E(eyboardMapping)-.275 E F1(.)
.916 E 36 312.05 36 323.05 DL 36 310.05 36 321.05 DL 41.5 308.3 36 308.3
DL 43.5 308.3 38 308.3 DL 49 308.3 43.5 308.3 DL -2.365 -.275(Ke y)72
324.2 T(Sym *XGetK).275 E -.165(ey)-.275 G(boardMapping\().165 E F2
(display).916 E F1(,)A F2<8c72>2.75 E(st_k)-.11 E -.33(ey)-.11 G(code)
.33 E F1(,)A F2 -.11(ke)2.75 G(ycode_count)-.22 E F1(,)A F2 -.11(ke)149
337.2 S(ysyms_per_k)-.22 E -.33(ey)-.11 G(code_r).33 E(eturn)-.407 E F1
(\)).916 E(Display *)88.5 350.2 Q F2(display)A F1(;).916 E -2.365 -.275
(Ke y)88.5 363.2 T(Code).275 E F2<8c72>2.75 E(st_k)-.11 E -.33(ey)-.11 G
(code).33 E F1(;).916 E(int)88.5 376.2 Q F2 -.11(ke)2.75 G(ycode_count)
-.22 E F1(;).916 E(int *)88.5 389.2 Q F2 -.11(ke)C(ysyms_per_k)-.22 E
-.33(ey)-.11 G(code_r).33 E(eturn)-.407 E F1(;).916 E F2(display)72 410
Q F1(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)
-.605 E F2<8c72>72 426.9 Q(st_k)-.11 E -.33(ey)-.11 G(code).33 E F1
(Speci\214es the \214rst K)14.514 E -.165(ey)-.275 G
(Code that is to be returned.).165 E F2 -.11(ke)72 443.8 S(ycode_count)
-.22 E F1(Speci\214es the number of K)7.078 E -.165(ey)-.275 G
(Codes that are to be returned.).165 E F2 -.11(ke)72 460.7 S
(ysyms_per_k)-.22 E -.33(ey)-.11 G(code_r).33 E(eturn)-.407 E F1
(Returns the number of K)144 473.7 Q -.165(ey)-.275 G(Syms per K).165 E
-.165(ey)-.275 G(Code.).165 E 36 469.35 36 480.35 DL 36 467.35 36 478.35
DL 41.5 478.6 36 478.6 DL 43.5 478.6 38 478.6 DL 49 478.6 43.5 478.6 DL
(The)72 503.6 Q F0(XGetK)3.666 E(eyboardMapping)-.275 E F1
(function returns the symbols for the speci\214ed number of)3.666 E
-2.365 -.275(Ke y)72 516.6 T(Codes starting with \214rst_k).275 E -.165
(ey)-.11 G 2.75(code. The).165 F -.275(va)2.75 G
(lue speci\214ed in \214rst_k).275 E -.165(ey)-.11 G
(code must be greater than).165 E(or equal to min_k)72 529.6 Q -.165(ey)
-.11 G(code as returned by).165 E F0(XDisplayK)3.666 E(eycodes)-.275 E
F1 2.75(,o).916 G 2.75(ra)-2.75 G F0(BadV).916 E(alue)-1.012 E F1
(error results.)3.666 E(In)5.5 E(addition, the follo)72 542.6 Q(wing e)
-.275 E(xpression must be less than or equal to max_k)-.165 E -.165(ey)
-.11 G(code as returned by).165 E F0(XDisplayK)72.916 555.6 Q(eycodes)
-.275 E F1(:).916 E(\214rst_k)108 579 Q -.165(ey)-.11 G(code + k).165 E
-.165(ey)-.11 G(code_count \255 1).165 E(If this is not the case, a)72
602.4 Q F0(BadV)3.666 E(alue)-1.012 E F1(error results.)3.666 E
(The number of elements in the K)5.5 E -.165(ey)-.275 G(Syms list is:)
.165 E -.11(ke)108 625.8 S(ycode_count * k)-.055 E -.165(ey)-.11 G
(syms_per_k).165 E -.165(ey)-.11 G(code_return).165 E -2.365 -.275(Ke y)
72 649.2 T(Sym number N, counting from zero, for K).275 E -.165(ey)-.275
G(Code K has the follo).165 E(wing inde)-.275 E 2.75(xi)-.165 G 2.75(nt)
-2.75 G(he list, count-)-2.75 E(ing from zero:)72 662.2 Q
(\(K \255 \214rst_code\) * k)108 681.7 Q -.165(ey)-.11 G
(syms_per_code_return + N).165 E(The X serv)72 705.1 Q
(er arbitrarily chooses the k)-.165 E -.165(ey)-.11 G(syms_per_k).165 E
-.165(ey)-.11 G(code_return v).165 E(alue to be lar)-.275 E
(ge enough to)-.198 E(report all requested symbols.)72 718.1 Q 2.75(As)
5.5 G(pecial K)-2.75 E -.165(ey)-.275 G(Sym v).165 E(alue of)-.275 E F0
(NoSymbol)3.666 E F1(is used to \214ll in unused ele-)3.666 E
(ments for indi)72 731.1 Q(vidual K)-.275 E -.165(ey)-.275 G 2.75
(Codes. T).165 F 2.75(of)-.88 G(ree the storage returned by)-2.75 E F0
(XGetK)3.666 E(eyboardMapping)-.275 E F1 2.75(,u).916 G(se)-2.75 E F0
(269)279.75 769 Q 0 Cg EP
%%Page: 270 275
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E(XFr)72.916 85 Q(ee)-.198 E/F1 11
/Times-Roman@0 SF(.).916 E F0(XGetK)72.916 101.9 Q(eyboardMapping)-.275
E F1(can generate a)3.666 E F0(BadV)3.666 E(alue)-1.012 E F1(error)3.666
E(.)-.605 E 1.76 -.88(To c)72 131.8 T(hange the k).88 E -.165(ey)-.11 G
(board mapping, use).165 E F0(XChangeK)3.666 E(eyboardMapping)-.275 E F1
(.).916 E .44 LW 36 149.55 36 160.55 DL 36 147.55 36 158.55 DL 41.5
145.8 36 145.8 DL 43.5 145.8 38 145.8 DL 49 145.8 43.5 145.8 DL
(XChangeK)72 161.7 Q -.165(ey)-.275 G(boardMapping\().165 E/F2 11
/Times-Italic@0 SF(display).916 E F1(,)A F2<8c72>2.75 E(st_k)-.11 E -.33
(ey)-.11 G(code).33 E F1(,)A F2 -.11(ke)2.75 G(ysyms_per_k)-.22 E -.33
(ey)-.11 G(code).33 E F1(,)A F2 -.11(ke)2.75 G(ysyms)-.22 E F1(,)A F2
(num_codes)2.75 E F1(\)).916 E(Display *)88.5 174.7 Q F2(display)A F1(;)
.916 E(int)88.5 187.7 Q F2<8c72>2.75 E(st_k)-.11 E -.33(ey)-.11 G(code)
.33 E F1(;).916 E(int)88.5 200.7 Q F2 -.11(ke)2.75 G(ysyms_per_k)-.22 E
-.33(ey)-.11 G(code).33 E F1(;).916 E -2.365 -.275(Ke y)88.5 213.7 T
(Sym *).275 E F2 -.11(ke)C(ysyms)-.22 E F1(;).916 E(int)88.5 226.7 Q F2
(num_codes)2.75 E F1(;).916 E F2(display)72 247.5 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2<8c72>72 264.4 Q(st_k)-.11 E -.33(ey)-.11 G(code).33 E F1
(Speci\214es the \214rst K)14.514 E -.165(ey)-.275 G
(Code that is to be changed.).165 E F2 -.11(ke)72 281.3 S(ysyms_per_k)
-.22 E -.33(ey)-.11 G(code).33 E F1(Speci\214es the number of K)144
294.3 Q -.165(ey)-.275 G(Syms per K).165 E -.165(ey)-.275 G(Code.).165 E
F2 -.11(ke)72 311.2 S(ysyms)-.22 E F1(Speci\214es an array of K)36.404 E
-.165(ey)-.275 G(Syms.).165 E F2(num_codes)72 328.1 Q F1
(Speci\214es the number of K)22.511 E -.165(ey)-.275 G
(Codes that are to be changed.).165 E 36 323.75 36 334.75 DL 36 321.75
36 332.75 DL 41.5 333 36 333 DL 43.5 333 38 333 DL 49 333 43.5 333 DL
(The)72 358 Q F0(XChangeK)3.666 E(eyboardMapping)-.275 E F1
(function de\214nes the symbols for the speci\214ed number of)3.666 E
-2.365 -.275(Ke y)72 371 T(Codes starting with \214rst_k).275 E -.165
(ey)-.11 G 2.75(code. The).165 F(symbols for K)2.75 E -.165(ey)-.275 G
(Codes outside this range remain).165 E 2.75(unchanged. The)72 384 R
(number of elements in k)2.75 E -.165(ey)-.11 G(syms must be:).165 E
(num_codes * k)108 407.4 Q -.165(ey)-.11 G(syms_per_k).165 E -.165(ey)
-.11 G(code).165 E(The speci\214ed \214rst_k)72 430.8 Q -.165(ey)-.11 G
(code must be greater than or equal to min_k).165 E -.165(ey)-.11 G
(code returned by).165 E F0(XDis-)3.666 E(playK)72 443.8 Q(eycodes)-.275
E F1 2.75(,o).916 G 2.75(ra)-2.75 G F0(BadV).916 E(alue)-1.012 E F1
(error results.)3.666 E(In addition, the follo)5.5 E(wing e)-.275 E
(xpression must be less)-.165 E(than or equal to max_k)72 456.8 Q -.165
(ey)-.11 G(code as returned by).165 E F0(XDisplayK)3.666 E(eycodes)-.275
E F1 2.75(,o).916 G 2.75(ra)-2.75 G F0(BadV).916 E(alue)-1.012 E F1
(error results:)3.666 E(\214rst_k)108 480.2 Q -.165(ey)-.11 G
(code + num_codes \255 1).165 E -2.365 -.275(Ke y)72 503.6 T
(Sym number N, counting from zero, for K).275 E -.165(ey)-.275 G
(Code K has the follo).165 E(wing inde)-.275 E 2.75(xi)-.165 G 2.75(nk)
-2.75 G -.165(ey)-2.86 G(syms,).165 E(counting from zero:)72 516.6 Q
(\(K \255 \214rst_k)108 540 Q -.165(ey)-.11 G(code\) * k).165 E -.165
(ey)-.11 G(syms_per_k).165 E -.165(ey)-.11 G(code + N).165 E
(The speci\214ed k)72 563.4 Q -.165(ey)-.11 G(syms_per_k).165 E -.165
(ey)-.11 G(code can be chosen arbitrarily by the client to be lar).165 E
(ge enough to)-.198 E(hold all desired symbols.)72 576.4 Q 2.75(As)5.5 G
(pecial K)-2.75 E -.165(ey)-.275 G(Sym v).165 E(alue of)-.275 E F0
(NoSymbol)3.666 E F1(should be used to \214ll in unused)3.666 E
(elements for indi)72 589.4 Q(vidual K)-.275 E -.165(ey)-.275 G 2.75
(Codes. It).165 F(is le)2.75 E -.055(ga)-.165 G 2.75(lf).055 G(or)-2.75
E F0(NoSymbol)3.666 E F1(to appear in nontrailing positions of)3.666 E
(the ef)72 602.4 Q(fecti)-.275 E .33 -.165(ve l)-.275 H(ist for a K).165
E -.165(ey)-.275 G(Code.).165 E F0(XChangeK)6.416 E(eyboardMapping)-.275
E F1(generates a)3.666 E F0(MappingNotify)3.666 E F1 -2.365 -.275(ev e)
72 615.4 T(nt.).275 E(There is no requirement that the X serv)72 632.3 Q
(er interpret this mapping.)-.165 E(It is merely stored for reading)5.5
E(and writing by clients.)72 645.3 Q F0(XChangeK)72.916 662.2 Q
(eyboardMapping)-.275 E F1(can generate)3.666 E F0(BadAlloc)3.666 E F1
(and)3.666 E F0(BadV)3.666 E(alue)-1.012 E F1(errors.)3.666 E(The ne)72
679.1 Q(xt six functions mak)-.165 E 2.75(eu)-.11 G(se of the)-2.75 E F0
(XModi\214erK)3.666 E(eymap)-.275 E F1(data structure, which contains:)
3.666 E F0(270)279.75 769 Q 0 Cg EP
%%Page: 271 276
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E .44 LW 36 76.75 36 87.75 DL 36 74.75
36 85.75 DL 41.5 73 36 73 DL 43.5 73 38 73 DL 49 73 43.5 73 DL/F1 11
/Times-Roman@0 SF(typedef struct {)72 91.5 Q(int max_k)108 104.5 Q -.165
(ey)-.11 G 50.17(permod; /*).165 F(This serv)2.75 E(er')-.165 E 2.75(sm)
-.605 G(ax number of k)-2.75 E -.165(ey)-.11 G 2.75(sp).165 G
(er modi\214er */)-2.75 E -2.365 -.275(Ke y)108 117.5 T
(Code *modi\214ermap;).275 E(/* An 8 by max_k)35.364 E -.165(ey)-.11 G
(permod array of the modi\214ers */).165 E 2.75(}X)72 130.5 S
(Modi\214erK)-2.75 E -.165(ey)-.275 G(map;).165 E 36 132.65 36 143.65 DL
36 130.65 36 141.65 DL 41.5 141.9 36 141.9 DL 43.5 141.9 38 141.9 DL 49
141.9 43.5 141.9 DL 1.76 -.88(To c)72 166.9 T(reate an).88 E F0
(XModi\214erK)3.666 E(eymap)-.275 E F1(structure, use)3.666 E F0
(XNewModi\214ermap)3.666 E F1(.).916 E 36 184.65 36 195.65 DL 36 182.65
36 193.65 DL 41.5 180.9 36 180.9 DL 43.5 180.9 38 180.9 DL 49 180.9 43.5
180.9 DL(XModi\214erK)72 196.8 Q -.165(ey)-.275 G(map *XNe).165 E
(wModi\214ermap\()-.275 E/F2 11/Times-Italic@0 SF(max_k).916 E -.33(ey)
-.11 G(s_per_mod).33 E F1(\)).916 E(int)94 209.8 Q F2(max_k)2.75 E -.33
(ey)-.11 G(s_per_mod).33 E F1(;).916 E F2(max_k)72 230.6 Q -.33(ey)-.11
G(s_per_mod).33 E F1(Speci\214es the number of K)144 243.6 Q -.165(ey)
-.275 G(Code entries preallocated to the modi\214ers in the).165 E(map.)
144 256.6 Q 36 252.25 36 263.25 DL 36 250.25 36 261.25 DL 41.5 261.5 36
261.5 DL 43.5 261.5 38 261.5 DL 49 261.5 43.5 261.5 DL(The)72 286.5 Q F0
(XNewModi\214ermap)3.666 E F1(function returns a pointer to)3.666 E F0
(XModi\214erK)3.666 E(eymap)-.275 E F1(structure for later use.)3.666 E
1.76 -.88(To a)72 316.4 T(dd a ne).88 E 2.75(we)-.275 G(ntry to an)-2.75
E F0(XModi\214erK)3.666 E(eymap)-.275 E F1(structure, use)3.666 E F0
(XInsertModi\214ermapEntry)3.666 E F1(.).916 E 36 334.15 36 345.15 DL 36
332.15 36 343.15 DL 41.5 330.4 36 330.4 DL 43.5 330.4 38 330.4 DL 49
330.4 43.5 330.4 DL(XModi\214erK)72 346.3 Q -.165(ey)-.275 G
(map *XInsertModi\214ermapEntry).165 E(\().916 E F2(modmap).916 E F1(,)A
F2 -.11(ke)2.75 G(ycode_entry)-.22 E F1(,)A F2(modi\214er)2.75 E F1(\))
.916 E(XModi\214erK)85.75 359.3 Q -.165(ey)-.275 G(map *).165 E F2
(modmap)A F1(;).916 E -2.365 -.275(Ke y)85.75 372.3 T(Code).275 E F2
-.11(ke)2.75 G(ycode_entry)-.22 E F1(;).916 E(int)85.75 385.3 Q F2
(modi\214er)2.75 E F1(;).916 E F2(modmap)72 406.1 Q F1(Speci\214es the)
34.116 E F0(XModi\214erK)3.666 E(eymap)-.275 E F1(structure.)3.666 E F2
-.11(ke)72 423 S(ycode_entry)-.22 E F1(Speci\214es the K)8.915 E -.165
(ey)-.275 G(Code.).165 E F2(modi\214er)72 439.9 Q F1
(Speci\214es the modi\214er)35.337 E(.)-.605 E 36 435.55 36 446.55 DL 36
433.55 36 444.55 DL 41.5 444.8 36 444.8 DL 43.5 444.8 38 444.8 DL 49
444.8 43.5 444.8 DL(The)72 469.8 Q F0(XInsertModi\214ermapEntry)3.666 E
F1(function adds the speci\214ed K)3.666 E -.165(ey)-.275 G
(Code to the set that controls the).165 E
(speci\214ed modi\214er and returns the resulting)72 482.8 Q F0
(XModi\214erK)3.666 E(eymap)-.275 E F1(structure \(e)3.666 E
(xpanded as needed\).)-.165 E 1.76 -.88(To d)72 512.7 T
(elete an entry from an).88 E F0(XModi\214erK)3.666 E(eymap)-.275 E F1
(structure, use)3.666 E F0(XDeleteModi\214ermapEntry)3.666 E F1(.).916 E
36 530.45 36 541.45 DL 36 528.45 36 539.45 DL 41.5 526.7 36 526.7 DL
43.5 526.7 38 526.7 DL 49 526.7 43.5 526.7 DL(XModi\214erK)72 542.6 Q
-.165(ey)-.275 G(map *XDeleteModi\214ermapEntry).165 E(\().916 E F2
(modmap).916 E F1(,)A F2 -.11(ke)2.75 G(ycode_entry)-.22 E F1(,)A F2
(modi\214er)2.75 E F1(\)).916 E(XModi\214erK)85.75 555.6 Q -.165(ey)
-.275 G(map *).165 E F2(modmap)A F1(;).916 E -2.365 -.275(Ke y)85.75
568.6 T(Code).275 E F2 -.11(ke)2.75 G(ycode_entry)-.22 E F1(;).916 E
(int)85.75 581.6 Q F2(modi\214er)2.75 E F1(;).916 E F2(modmap)72 602.4 Q
F1(Speci\214es the)34.116 E F0(XModi\214erK)3.666 E(eymap)-.275 E F1
(structure.)3.666 E F2 -.11(ke)72 619.3 S(ycode_entry)-.22 E F1
(Speci\214es the K)8.915 E -.165(ey)-.275 G(Code.).165 E F2(modi\214er)
72 636.2 Q F1(Speci\214es the modi\214er)35.337 E(.)-.605 E 36 631.85 36
642.85 DL 36 629.85 36 640.85 DL 41.5 641.1 36 641.1 DL 43.5 641.1 38
641.1 DL 49 641.1 43.5 641.1 DL(The)72 666.1 Q F0
(XDeleteModi\214ermapEntry)3.666 E F1
(function deletes the speci\214ed K)3.666 E -.165(ey)-.275 G
(Code from the set that con-).165 E(trols the speci\214ed modi\214er an\
d returns a pointer to the resulting)72 679.1 Q F0(XModi\214erK)3.666 E
(eymap)-.275 E F1(structure.)3.666 E 1.76 -.88(To d)72 709 T(estro).88 E
2.75(ya)-.11 G(n)-2.75 E F0(XModi\214erK)3.666 E(eymap)-.275 E F1
(structure, use)3.666 E F0(XFr)3.666 E(eeModi\214ermap)-.198 E F1(.).916
E F0(271)279.75 769 Q 0 Cg EP
%%Page: 272 277
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E .44 LW 36 76.75 36 87.75 DL 36 74.75
36 85.75 DL 41.5 73 36 73 DL 43.5 73 38 73 DL 49 73 43.5 73 DL/F1 11
/Times-Roman@0 SF(XFreeModi\214ermap\()72 88.9 Q/F2 11/Times-Italic@0 SF
(modmap).916 E F1(\)).916 E(XModi\214erK)94 101.9 Q -.165(ey)-.275 G
(map *).165 E F2(modmap)A F1(;)A F2(modmap)72 122.7 Q F1
(Speci\214es the)34.116 E F0(XModi\214erK)3.666 E(eymap)-.275 E F1
(structure.)3.666 E 36 118.35 36 129.35 DL 36 116.35 36 127.35 DL 41.5
127.6 36 127.6 DL 43.5 127.6 38 127.6 DL 49 127.6 43.5 127.6 DL(The)72
152.6 Q F0(XFr)3.666 E(eeModi\214ermap)-.198 E F1
(function frees the speci\214ed)3.666 E F0(XModi\214erK)3.666 E(eymap)
-.275 E F1(structure.)3.666 E 1.76 -.88(To s)72 182.5 T(et the K).88 E
-.165(ey)-.275 G(Codes to be used as modi\214ers, use).165 E F0
(XSetModi\214erMapping)3.666 E F1(.).916 E 36 200.25 36 211.25 DL 36
198.25 36 209.25 DL 41.5 196.5 36 196.5 DL 43.5 196.5 38 196.5 DL 49
196.5 43.5 196.5 DL(int XSetModi\214erMapping\()72 212.4 Q F2(display)
.916 E F1(,)A F2(modmap)2.75 E F1(\)).916 E(Display *)94 225.4 Q F2
(display)A F1(;).916 E(XModi\214erK)94 238.4 Q -.165(ey)-.275 G(map *)
.165 E F2(modmap)A F1(;).916 E F2(display)72 259.2 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2(modmap)72 276.1 Q F1(Speci\214es the)34.116 E F0(XModi\214erK)3.666 E
(eymap)-.275 E F1(structure.)3.666 E 36 271.75 36 282.75 DL 36 269.75 36
280.75 DL 41.5 281 36 281 DL 43.5 281 38 281 DL 49 281 43.5 281 DL(The)
72 306 Q F0(XSetModi\214erMapping)3.666 E F1(function speci\214es the K)
3.666 E -.165(ey)-.275 G(Codes of the k).165 E -.165(ey)-.11 G 2.75(s\()
.165 G(if an)-2.75 E(y\) that are to be)-.165 E(used as modi\214ers.)72
319 Q(If it succeeds, the X serv)5.5 E(er generates a)-.165 E F0
(MappingNotify)3.666 E F1 -2.365 -.275(ev e)3.666 H(nt, and).275 E F0
(XSetMod-)3.666 E(i\214erMapping)72 332 Q F1(returns)3.666 E F0
(MappingSuccess)3.666 E F1 5.5(.X).916 G(permits at most 8 modi\214er k)
-2.75 E -.165(ey)-.11 G 2.75(s. If).165 F(more than 8 are)2.75 E
(speci\214ed in the)72 345 Q F0(XModi\214erK)3.666 E(eymap)-.275 E F1
(structure, a)3.666 E F0(BadLength)3.666 E F1(error results.)3.666 E
(The modi\214ermap member of the)72 361.9 Q F0(XModi\214erK)3.666 E
(eymap)-.275 E F1(structure contains 8 sets of max_k)3.666 E -.165(ey)
-.11 G(per).165 E(-)-.22 E(mod K)72 374.9 Q -.165(ey)-.275 G
(Codes, one for each modi\214er in the order).165 E F0(Shift)3.666 E F1
(,).916 E F0(Lock)3.666 E F1(,).916 E F0(Contr)3.666 E(ol)-.198 E F1(,)
.916 E F0(Mod1)3.666 E F1(,).916 E F0(Mod2)3.666 E F1(,).916 E F0(Mod3)
3.666 E F1(,).916 E F0(Mod4)72.916 387.9 Q F1 2.75(,a).916 G(nd)-2.75 E
F0(Mod5)3.666 E F1 5.5(.O).916 G(nly nonzero K)-5.5 E -.165(ey)-.275 G
(Codes ha).165 E .33 -.165(ve m)-.22 H(eaning in each set, and zero K)
.165 E -.165(ey)-.275 G(Codes are).165 E 2.75(ignored. In)72 400.9 R
(addition, all of the nonzero K)2.75 E -.165(ey)-.275 G
(Codes must be in the range speci\214ed by min_k).165 E -.165(ey)-.11 G
(code).165 E(and max_k)72 413.9 Q -.165(ey)-.11 G(code in the).165 E F0
(Display)3.666 E F1(structure, or a)3.666 E F0(BadV)3.666 E(alue)-1.012
E F1(error results.)3.666 E(An X serv)72 430.8 Q
(er can impose restrictions on ho)-.165 E 2.75(wm)-.275 G
(odi\214ers can be changed, for e)-2.75 E(xample, if certain)-.165 E
-.11(ke)72 443.8 S(ys do not generate up transitions in hardw)-.055 E
(are, if auto-repeat cannot be disabled on certain k)-.11 E -.165(ey)
-.11 G(s,).165 E(or if multiple modi\214er k)72 456.8 Q -.165(ey)-.11 G
2.75(sa).165 G(re not supported.)-2.75 E
(If some such restriction is violated, the status)5.5 E(reply is)72
469.8 Q F0(MappingF)3.666 E(ailed)-.275 E F1 2.75(,a).916 G
(nd none of the modi\214ers are changed.)-2.75 E(If the ne)5.5 E 2.75
(wK)-.275 G -.165(ey)-3.025 G(Codes speci\214ed).165 E
(for a modi\214er dif)72 482.8 Q
(fer from those currently de\214ned and an)-.275 E 2.75(y\()-.165 G
(current or ne)-2.75 E(w\) k)-.275 E -.165(ey)-.11 G 2.75(sf).165 G
(or that modi\214er)-2.75 E(are in the logically do)72 495.8 Q
(wn state,)-.275 E F0(XSetModi\214erMapping)3.666 E F1(returns)3.666 E
F0(MappingBusy)3.666 E F1 2.75(,a).916 G(nd none of the)-2.75 E
(modi\214ers is changed.)72 508.8 Q F0(XSetModi\214erMapping)72.916
525.7 Q F1(can generate)3.666 E F0(BadAlloc)3.666 E F1(and)3.666 E F0
(BadV)3.666 E(alue)-1.012 E F1(errors.)3.666 E 1.76 -.88(To o)72 555.6 T
(btain the K).88 E -.165(ey)-.275 G(Codes used as modi\214ers, use).165
E F0(XGetModi\214erMapping)3.666 E F1(.).916 E 36 573.35 36 584.35 DL 36
571.35 36 582.35 DL 41.5 569.6 36 569.6 DL 43.5 569.6 38 569.6 DL 49
569.6 43.5 569.6 DL(XModi\214erK)72 585.5 Q -.165(ey)-.275 G
(map *XGetModi\214erMapping\().165 E F2(display).916 E F1(\)).916 E
(Display *)88.5 598.5 Q F2(display)A F1(;).916 E F2(display)72 632.3 Q
F1(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605
E 36 627.95 36 638.95 DL 36 625.95 36 636.95 DL 41.5 637.2 36 637.2 DL
43.5 637.2 38 637.2 DL 49 637.2 43.5 637.2 DL(The)72 662.2 Q F0
(XGetModi\214erMapping)3.666 E F1(function returns a pointer to a ne)
3.666 E(wly created)-.275 E F0(XModi\214erK)3.666 E(eymap)-.275 E F1
(structure that contains the k)72 675.2 Q -.165(ey)-.11 G 2.75(sb).165 G
(eing used as modi\214ers.)-2.75 E
(The structure should be freed after use)5.5 E(by calling)72 688.2 Q F0
(XFr)3.666 E(eeModi\214ermap)-.198 E F1 5.5(.I).916 G 2.75(fo)-5.5 G
(nly zero v)-2.75 E(alues appear in the set for an)-.275 E 2.75(ym)-.165
G(odi\214er)-2.75 E 2.75(,t)-.44 G(hat modi-)-2.75 E
(\214er is disabled.)72 701.2 Q F0(272)279.75 769 Q 0 Cg EP
%%Page: 273 278
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E/F1 12/Times-Bold@0 SF(Chapter 13)
259.17 111 Q(Locales and Inter)172.302 137 Q(nationalized T)-.18 E
(ext Functions)-1.104 E/F2 11/Times-Roman@0 SF(An internationalized app\
lication is one that is adaptable to the requirements of dif)72 179.9 Q
(ferent nati)-.275 E -.165(ve)-.275 G
(languages, local customs, and character string encodings.)72 192.9 Q
(The process of adapting the operation)5.5 E(to a particular nati)72
205.9 Q .33 -.165(ve l)-.275 H
(anguage, local custom, or string encoding is called).165 E/F3 11
/Times-Italic@0 SF(localization)2.75 E F2 5.5(.A).916 G(goal of)-2.75 E
(internationalization is to permit localization without program source \
modi\214cations or recompila-)72 218.9 Q(tion.)72 231.9 Q
(As one of the localization mechanisms, Xlib pro)72 248.8 Q
(vides an X Input Method \()-.165 E F0(XIM).916 E F2 2.75(\)f).916 G
(unctional inter)-2.75 E(-)-.22 E -.11(fa)72 261.8 S
(ce for internationalized te).11 E(xt input and an X Output Method \()
-.165 E F0(XOM).916 E F2 2.75(\)f).916 G(unctional interf)-2.75 E
(ace for)-.11 E(internationalized te)72 274.8 Q(xt output.)-.165 E
(Internationalization in X is based on the concept of a)72 291.7 Q F3
(locale)2.75 E F2 5.5(.A)C(locale de\214nes the localized)-2.75 E(beha)
72 304.7 Q(vior of a program at run time.)-.22 E(Locales af)5.5 E
(fect Xlib in its:)-.275 E 23.65<8345>72 321.6 S
(ncoding and processing of input method te)-23.65 E(xt)-.165 E 23.65
<8345>72 338.5 S(ncoding of resource \214les and v)-23.65 E(alues)-.275
E 23.65<8345>72 355.4 S(ncoding and imaging of te)-23.65 E(xt strings)
-.165 E 23.65<8345>72 372.3 S(ncoding and decoding for inter)-23.65 E
(-client te)-.22 E(xt communication)-.165 E(Characters from v)72 389.2 Q
(arious languages are represented in a computer using an encoding.)-.275
E(Dif)5.5 E(ferent)-.275 E(languages ha)72 402.2 Q .33 -.165(ve d)-.22 H
(if).165 E(ferent encodings, and there are e)-.275 E -.165(ve)-.275 G
2.75(nd).165 G(if)-2.75 E(ferent encodings for the same charac-)-.275 E
(ters in the same language.)72 415.2 Q
(This chapter de\214nes support for localized te)72 432.1 Q
(xt imaging and te)-.165 E(xt input and describes the locale)-.165 E
(mechanism that controls all locale-dependent Xlib functions.)72 445.1 Q
(Sets of functions are pro)5.5 E(vided for)-.165 E
(multibyte \(char *\) te)72 458.1 Q
(xt as well as wide character \(wchar_t\) te)-.165 E
(xt in the form supported by the host)-.165 E 2.75(Cl)72 471.1 S
(anguage en)-2.75 E 2.75(vironment. The)-.44 F
(multibyte and wide character functions are equi)2.75 E -.275(va)-.275 G
(lent e).275 E(xcept for)-.165 E(the form of the te)72 484.1 Q(xt ar)
-.165 E(gument.)-.198 E
(The Xlib internationalization functions are not meant to pro)72 501 Q
(vide support for multilingual applica-)-.165 E
(tions \(mixing multiple languages within a single piece of te)72 514 Q
(xt\), b)-.165 E(ut the)-.22 E 2.75(ym)-.165 G(ak)-2.75 E 2.75(ei)-.11 G
2.75(tp)-2.75 G(ossible to imple-)-2.75 E(ment applications that w)72
527 Q(ork in limited f)-.11 E
(ashion with more than one language in independent con-)-.11 E(te)72 540
Q(xts.)-.165 E(The remainder of this chapter discusses:)72 556.9 Q 23.65
<8358>72 573.8 S(locale management)-20.9 E 23.65<834c>72 590.7 S
(ocale and modi\214er dependencies)-23.65 E 23.65<8356>72 607.6 S
(ariable ar)-24.871 E(gument lists)-.198 E 23.65<834f>72 624.5 S
(utput methods)-23.65 E 23.65<8349>72 641.4 S(nput methods)-23.65 E
23.65<8353>72 658.3 S(tring constants)-23.65 E F0 2.75(13.1. X)72 684.3
R(Locale Management)2.75 E F2 2.75(Xs)72 701.2 S
(upports one or more of the locales de\214ned by the host en)-2.75 E
2.75(vironment. On)-.44 F(implementations that)2.75 E
(conform to the ANSI C library)72 714.2 Q 2.75(,t)-.715 G
(he locale announcement method is)-2.75 E F0(setlocale)3.666 E F2 5.5
(.T).916 G(his function con-)-5.5 E
(\214gures the locale operation of both the host C library and Xlib)72
727.2 Q 5.5(.T)-.44 G(he operation of Xlib is go)-5.5 E -.165(ve)-.165 G
(rned).165 E F0(273)279.75 769 Q 0 Cg EP
%%Page: 274 279
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E/F1 11/Times-Roman@0 SF
(by the LC_CTYPE cate)72 85 Q(gory; this is called the)-.165 E/F2 11
/Times-Italic@0 SF(curr)2.75 E(ent locale)-.407 E F1 5.5(.A)C 2.75(ni)
-5.5 G(mplementation is permitted to)-2.75 E(pro)72 98 Q(vide implement\
ation-dependent mechanisms for announcing the locale in addition to)
-.165 E F0(setlo-)3.666 E(cale)72 111 Q F1(.).916 E
(On implementations that do not conform to the ANSI C library)72 127.9 Q
2.75(,t)-.715 G(he locale announcement method)-2.75 E
(is Xlib implementation-dependent.)72 140.9 Q(The mechanism by which th\
e semantic operation of Xlib is de\214ned for a speci\214c locale is im\
ple-)72 157.8 Q(mentation-dependent.)72 170.8 Q 2.75(Xi)72 200.7 S 2.75
(sn)-2.75 G
(ot required to support all the locales supported by the host.)-2.75 E
1.76 -.88(To d)5.5 H(etermine if the current).88 E
(locale is supported by X, use)72 213.7 Q F0(XSupportsLocale)3.666 E F1
(.).916 E .44 LW 36 231.45 36 242.45 DL 36 229.45 36 240.45 DL 41.5
227.7 36 227.7 DL 43.5 227.7 38 227.7 DL 49 227.7 43.5 227.7 DL
(Bool XSupportsLocale)72 243.6 Q 1.833(\(\)).916 G 36 243.15 36 254.15
DL 36 241.15 36 252.15 DL 41.5 252.4 36 252.4 DL 43.5 252.4 38 252.4 DL
49 252.4 43.5 252.4 DL(The)72 277.4 Q F0(XSupportsLocale)3.666 E F1
(function returns)3.666 E F0 -.814(Tr)3.666 G(ue).814 E F1
(if Xlib functions are capable of operating under the)3.666 E
(current locale.)72 290.4 Q(If it returns)5.5 E F0 -.275(Fa)3.666 G(lse)
.275 E F1 2.75(,X).916 G(lib locale-dependent functions for which the)
-2.75 E F0(XLocaleNot-)3.666 E(Supported)72 303.4 Q F1
(return status is de\214ned will return)3.666 E F0(XLocaleNotSupported)
3.666 E F1 5.5(.O).916 G(ther Xlib locale-depen-)-5.5 E
(dent routines will operate in the `)72 316.4 Q(`C')-.814 E 2.75('l)
-.814 G(ocale.)-2.75 E
(The client is responsible for selecting its locale and X modi\214ers.)
72 333.3 Q(Clients should pro)5.5 E(vide a means)-.165 E
(for the user to o)72 346.3 Q -.165(ve)-.165 G
(rride the clients' locale selection at client in).165 E -.22(vo)-.44 G
2.75(cation. Most).22 F(single-display X)2.75 E(clients operate in a si\
ngle locale for both X and the host processing en)72 359.3 Q 2.75
(vironment. The)-.44 F 2.75(yw)-.165 G(ill con-)-2.75 E(\214gure the lo\
cale by calling three functions: the host locale con\214guration functi\
on,)72 372.3 Q F0(XSupportsLo-)3.666 E(cale)72 385.3 Q F1 2.75(,a).916 G
(nd)-2.75 E F0(XSetLocaleModi\214ers)3.666 E F1(.).916 E
(The semantics of certain cate)72 402.2 Q
(gories of X internationalization capabilities can be con\214gured by)
-.165 E(setting modi\214ers.)72 415.2 Q(Modi\214ers are named by implem\
entation-dependent and locale-speci\214c strings.)5.5 E(The only standa\
rd use for this capability at present is selecting one of se)72 428.2 Q
-.165(ve)-.275 G(ral styles of k).165 E -.165(ey)-.11 G(board).165 E
(input method.)72 441.2 Q 1.76 -.88(To c)72 471.1 T
(on\214gure Xlib locale modi\214ers for the current locale, use).88 E F0
(XSetLocaleModi\214ers)3.666 E F1(.).916 E 36 488.85 36 499.85 DL 36
486.85 36 497.85 DL 41.5 485.1 36 485.1 DL 43.5 485.1 38 485.1 DL 49
485.1 43.5 485.1 DL(char *XSetLocaleModi\214ers)72 501 Q(\().916 E F2
(modi\214er_list).916 E F1(\)).916 E(char *)88.5 514 Q F2
(modi\214er_list)A F1(;).916 E F2(modi\214er_list)72 534.8 Q F1
(Speci\214es the modi\214ers.)16.384 E 36 530.45 36 541.45 DL 36 528.45
36 539.45 DL 41.5 539.7 36 539.7 DL 43.5 539.7 38 539.7 DL 49 539.7 43.5
539.7 DL(The)72 564.7 Q F0(XSetLocaleModi\214ers)3.666 E F1
(function sets the X modi\214ers for the current locale setting.)3.666 E
(The modi-)5.5 E(\214er_list ar)72 577.7 Q
(gument is a null-terminated string of the form `)-.198 E(`{@)-.814 E F2
(cate).916 E(gory)-.44 E F1(=).916 E F2(value).916 E F1(}').916 E
(', that is, ha)-.814 E(ving)-.22 E(zero or more concatenated `)72 590.7
Q(`@)-.814 E F2(cate).916 E(gory)-.44 E F1(=).916 E F2(value).916 E F1
1.628 -.814('' e).916 H(ntries, where).814 E F2(cate)2.75 E(gory)-.44 E
F1(is a cate)2.75 E(gory name and)-.165 E F2(value)72 603.7 Q F1
(is the \(possibly empty\) setting for that cate)2.75 E(gory)-.165 E 5.5
(.T)-.715 G(he v)-5.5 E(alues are encoded in the current)-.275 E 2.75
(locale. Cate)72 616.7 R(gory names are restricted to the POSIX Portabl\
e Filename Character Set.)-.165 E(The local host X locale modi\214ers a\
nnouncer \(on POSIX-compliant systems, the XMODIFIERS)72 633.6 Q(en)72
646.6 Q(vironment v)-.44 E
(ariable\) is appended to the modi\214er_list to pro)-.275 E(vide def)
-.165 E(ault v)-.11 E(alues on the local host.)-.275 E(If a gi)72 659.6
Q -.165(ve)-.275 G 2.75(nc).165 G(ate)-2.75 E(gory appears more than on\
ce in the list, the \214rst setting in the list is used.)-.165 E
(If a gi)5.5 E -.165(ve)-.275 G(n).165 E(cate)72 672.6 Q
(gory is not included in the full modi\214er list, the cate)-.165 E
(gory is set to an implementation-depen-)-.165 E(dent def)72 685.6 Q
(ault for the current locale.)-.11 E(An empty v)5.5 E(alue for a cate)
-.275 E(gory e)-.165 E(xplicitly speci\214es the imple-)-.165 E
(mentation-dependent def)72 698.6 Q(ault.)-.11 E
(If the function is successful, it returns a pointer to a string.)72
715.5 Q(The contents of the string are such)5.5 E(that a subsequent cal\
l with that string \(in the same locale\) will restore the modi\214ers \
to the same)72 728.5 Q F0(274)279.75 769 Q 0 Cg EP
%%Page: 275 280
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E/F1 11/Times-Roman@0 SF 2.75
(settings. If)72 85 R(modi\214er_list is a NULL pointer)2.75 E(,)-.44 E
F0(XSetLocaleModi\214ers)3.666 E F1(also returns a pointer to such)3.666
E 2.75(as)72 98 S
(tring, and the current locale modi\214ers are not changed.)-2.75 E
(If in)72 114.9 Q -.275(va)-.44 G(lid v).275 E(alues are gi)-.275 E
-.165(ve)-.275 G 2.75(nf).165 G(or one or more modi\214er cate)-2.75 E
(gories supported by the locale, a NULL)-.165 E
(pointer is returned, and none of the current modi\214ers are changed.)
72 127.9 Q(At program startup, the modi\214ers that are in ef)72 144.8 Q
(fect are unspeci\214ed until the \214rst successful call to)-.275 E
(set them.)72 157.8 Q(Whene)5.5 E -.165(ve)-.275 G 2.75(rt).165 G
(he locale is changed, the modi\214ers that are in ef)-2.75 E
(fect become unspeci\214ed)-.275 E(until the ne)72 170.8 Q
(xt successful call to set them.)-.165 E(Clients should al)5.5 E -.11
(wa)-.11 G(ys call).11 E F0(XSetLocaleModi\214ers)3.666 E F1(with)3.666
E 2.75(an)72 183.8 S
(on-NULL modi\214er_list after setting the locale before the)-2.75 E
2.75(yc)-.165 G(all an)-2.75 E 2.75(yl)-.165 G
(ocale-dependent Xlib rou-)-2.75 E(tine.)72 196.8 Q
(The only standard modi\214er cate)72 213.7 Q
(gory currently de\214ned is `)-.165 E(`im')-.814 E
(', which identi\214es the desired input)-.814 E 2.75(method. The)72
226.7 R -.275(va)2.75 G(lues for input method are not standardized.).275
E 2.75(As)5.5 G(ingle locale may use multiple)-2.75 E
(input methods, switching input method under user control.)72 239.7 Q
(The modi\214er may specify the initial)5.5 E(input method in ef)72
252.7 Q(fect or an ordered list of input methods.)-.275 E
(Multiple input methods may be speci-)5.5 E(\214ed in a single im v)72
265.7 Q(alue string in an implementation-dependent manner)-.275 E(.)
-.605 E(The returned modi\214ers string is o)72 282.6 Q
(wned by Xlib and should not be modi\214ed or freed by the client.)-.275
E(It may be freed by Xlib after the current locale or modi\214ers are c\
hanged.)72 295.6 Q(Until freed, it will not)5.5 E(be modi\214ed by Xlib)
72 308.6 Q(.)-.44 E(The recommended procedure for clients initializing \
their locale and modi\214ers is to obtain locale)72 325.5 Q
(and modi\214er announcers separately from one of the follo)72 338.5 Q
(wing prioritized sources:)-.275 E 23.65<8341>72 355.4 S
(command line option)-20.9 E 23.65<8341>72 372.3 S(resource)-20.9 E
23.65<8354>72 389.2 S(he empty string \(")-23.65 E("\)).916 E
(The \214rst of these that is de\214ned should be used.)72 406.1 Q
(Note that when a locale command line option or)5.5 E
(locale resource is de\214ned, the ef)72 419.1 Q
(fect should be to set all cate)-.275 E
(gories to the speci\214ed locale, o)-.165 E -.165(ve)-.165 G(rrid-).165
E(ing an)72 432.1 Q 2.75(yc)-.165 G(ate)-2.75 E
(gory-speci\214c settings in the local host en)-.165 E(vironment.)-.44 E
F0 2.75(13.2. Locale)72 458.1 R(and Modi\214er Dependencies)2.75 E F1(T\
he internationalized Xlib functions operate in the current locale con\
\214gured by the host en)72 475 Q(viron-)-.44 E
(ment and X locale modi\214ers set by)72 488 Q F0(XSetLocaleModi\214ers)
3.666 E F1(or in the locale and modi\214ers con\214g-)3.666 E
(ured at the time some object supplied to the function w)72 501 Q
(as created.)-.11 E -.165(Fo)5.5 G 2.75(re).165 G(ach locale-dependent)
-2.75 E(function, the follo)72 514 Q
(wing table describes the locale \(and modi\214ers\) dependenc)-.275 E
(y:)-.165 E .44 LW 519 525.25 72 525.25 DL F0(Locale fr)72 541.5 Q
46.825(om Affects)-.198 F(the Function)2.75 E(In)101.185 E 519 552.25 72
552.25 DL F1(Locale Query/Con\214guration:)178.5 568.5 Q F0(setlocale)
72.916 587.5 Q(XSupportsLocale)179.416 587.5 Q F1(Locale queried)375
587.5 Q F0(XSetLocaleModi\214ers)179.416 600.5 Q F1(Locale modi\214ed)
375 600.5 Q(Resources:)178.5 626.5 Q F0(setlocale)72.916 645.5 Q
(XrmGetFileDatabase)179.416 645.5 Q F1(Locale of)375 645.5 Q F0
(XrmDatabase)3.666 E(XrmGetStringDatabase)179.416 658.5 Q(XrmDatabase)
72.916 671.5 Q(XrmPutFileDatabase)179.416 671.5 Q F1(Locale of)375 671.5
Q F0(XrmDatabase)3.666 E(XrmLocaleOfDatabase)179.416 684.5 Q F1
(Setting Standard Properties:)178.5 710.5 Q F0(275)279.75 769 Q 0 Cg EP
%%Page: 276 281
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E .44 LW 519 76.75 72 76.75 DL
(Locale fr)72 93 Q 46.825(om Affects)-.198 F(the Function)2.75 E(In)
101.185 E 519 103.75 72 103.75 DL(setlocale)72.916 120 Q(XmbSetWMPr)
179.416 120 Q(operties)-.198 E/F1 11/Times-Roman@0 SF
(Encoding of supplied/returned)375 120 Q(te)375 133 Q
(xt \(some WM_ property)-.165 E(te)375 146 Q(xt in en)-.165 E
(vironment locale\))-.44 E F0(Xutf8SetWMPr)179.416 159 Q(operties)-.198
E(setlocale)72.916 178 Q(XmbT)179.416 178 Q(extPr)-1.012 E(opertyT)-.198
E(oT)-1.012 E(extList)-1.012 E F1(Encoding of supplied/returned)375 178
Q(te)375 191 Q(xt)-.165 E F0(XwcT)179.416 204 Q(extPr)-1.012 E(opertyT)
-.198 E(oT)-1.012 E(extList)-1.012 E(Xutf8T)179.416 217 Q(extPr)-1.012 E
(opertyT)-.198 E(oT)-1.012 E(extList)-1.012 E(XmbT)179.416 230 Q
(extListT)-1.012 E(oT)-1.012 E(extPr)-1.012 E(operty)-.198 E(XwcT)
179.416 243 Q(extListT)-1.012 E(oT)-1.012 E(extPr)-1.012 E(operty)-.198
E(Xutf8T)179.416 256 Q(extListT)-1.012 E(oT)-1.012 E(extPr)-1.012 E
(operty)-.198 E F1 -1.375 -.77(Te x)178.5 282 T 2.75(tI).77 G(nput:)
-2.75 E F0(setlocale)72.916 301 Q(XOpenIM)179.416 301 Q F1
(XIM input method selection)375 301 Q F0(XRegisterIMInstantiateCallback)
179.416 314 Q F1(XIM selection)375 314 Q F0(XUnr)179.416 327 Q
(egisterIMInstantiateCallback)-.198 E F1(XIM selection)375 327 Q F0(XIM)
72.916 340 Q(XCr)179.416 340 Q(eateIC)-.198 E F1
(XIC input method con\214guration)375 340 Q F0(XLocaleOfIM)179.416 353 Q
F1 2.75(,a).916 G(nd so on)-2.75 E(Queried locale)375 353 Q F0(XIC)
72.916 366 Q(XmbLookupString)179.416 366 Q F1 -2.365 -.275(Ke y)375 366
T(board layout).275 E F0(XwcLookupString)179.416 379 Q F1
(Encoding of returned te)375 379 Q(xt)-.165 E F0(Xutf8LookupString)
179.416 392 Q F1 -1.375 -.77(Te x)178.5 418 T 2.75(tD).77 G(ra)-2.75 E
(wing:)-.165 E F0(setlocale)72.916 437 Q(XOpenOM)179.416 437 Q F1
(XOM output method selection)375 437 Q F0(XCr)179.416 450 Q(eateF)-.198
E(ontSet)-.275 E F1(Charsets of fonts in)375 450 Q F0(XF)3.666 E(ontSet)
-.275 E(XOM)72.916 463 Q(XCr)179.416 463 Q(eateOC)-.198 E F1
(XOC output method con\214gura-)375 463 Q(tion)375 476 Q F0(XLocaleOfOM)
179.416 489 Q F1 2.75(,a).916 G(nd so on)-2.75 E(Queried locale)375 489
Q F0(XF)72.916 502 Q(ontSet)-.275 E(XmbDrawT)179.416 502 Q(ext)-1.012 E
F1(,).916 E(Locale of supplied te)375 502 Q(xt)-.165 E F0(XwcDrawT)
179.416 515 Q(ext)-1.012 E F1 2.75(,a).916 G(nd so on)-2.75 E
(Locale of supplied te)375 515 Q(xt)-.165 E F0(Xutf8DrawT)179.416 528 Q
(ext)-1.012 E F1 2.75(,a).916 G(nd so on)-2.75 E
(Locale-dependent metrics)375 528 Q F0(XExtentsOfF)179.416 541 Q(ontSet)
-.275 E F1 2.75(,a).916 G(nd so on)-2.75 E(Locale-dependent metrics)375
541 Q F0(XmbT)179.416 554 Q(extExtents)-1.012 E F1(,).916 E F0(XwcT)
179.416 567 Q(extExtents)-1.012 E F1(,).916 E F0(Xutf8T)179.416 580 Q
(extExtents)-1.012 E F1 2.75(,a).916 G(nd so on)-2.75 E(Xlib Errors:)
178.5 606 Q F0(setlocale)72.916 625 Q(XGetErr)179.416 625 Q(orDatabaseT)
-.198 E(ext)-1.012 E F1(Locale of error message)375 625 Q F0(XGetErr)
179.416 638 Q(orT)-.198 E(ext)-1.012 E 519 648.75 72 648.75 DL F1
(Clients may assume that a locale-encoded te)72 669.4 Q
(xt string returned by an X function can be passed to a)-.165 E 2.75(Cl)
72 682.4 S(ibrary routine, or vice v)-2.75 E
(ersa, if the locale is the same at the tw)-.165 E 2.75(oc)-.11 G(alls.)
-2.75 E(All te)72 699.3 Q(xt strings processed by internationalized Xli\
b functions are assumed to be)-.165 E(gin in the initial)-.165 E(state \
of the encoding of the locale, if the encoding is state-dependent.)72
712.3 Q F0(276)279.75 769 Q 0 Cg EP
%%Page: 277 282
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E/F1 11/Times-Roman@0 SF
(All Xlib functions beha)72 85 Q .33 -.165(ve a)-.22 H 2.75(si).165 G
2.75(ft)-2.75 G(he)-2.75 E 2.75(yd)-.165 G 2.75(on)-2.75 G
(ot change the current locale or X modi\214er setting.)-2.75 E(\(This)
5.5 E(means that if the)72 98 Q 2.75(yd)-.165 G 2.75(oc)-2.75 G
(hange locale or call)-2.75 E F0(XSetLocaleModi\214ers)3.666 E F1
(with a non-NULL ar)3.666 E(gument,)-.198 E(the)72 111 Q 2.75(ym)-.165 G
(ust sa)-2.75 E .33 -.165(ve a)-.22 H
(nd restore the current state on entry and e).165 E 2.75(xit.\) Also,)
-.165 F(Xlib functions on implemen-)2.75 E(tations that conform to the \
ANSI C library do not alter the global state associated with the ANSI)72
124 Q 2.75(Cf)72 137 S(unctions)-2.75 E F0(mblen)3.666 E F1(,).916 E F0
(mbto)3.666 E(wc)-.11 E F1(,).916 E F0(wctomb)3.666 E F1 2.75(,a).916 G
(nd)-2.75 E F0(strtok)3.666 E F1(.).916 E F0 2.75(13.3. V)72 163 R
(ariable Ar)-1.012 E(gument Lists)-.11 E F1 -1.221(Va)72 179.9 S
(rious functions in this chapter ha)1.221 E .33 -.165(ve a)-.22 H -.198
(rg).165 G(uments that conform to the ANSI C v).198 E(ariable ar)-.275 E
(gument)-.198 E(list calling con)72 192.9 Q -.165(ve)-.44 G 2.75
(ntion. Each).165 F(function denoted with an ar)2.75 E
(gument of the form `)-.198 E(`...)-.814 E 1.628 -.814('' t)-.77 H(ak)
.814 E(es a v)-.11 E(ari-)-.275 E(able-length list of name and v)72
205.9 Q(alue pairs, where each name is a string and each v)-.275 E
(alue is of type)-.275 E F0(XP)72.916 218.9 Q(ointer)-.22 E F1 5.5(.A)
.916 G(name ar)-2.75 E
(gument that is NULL identi\214es the end of the list.)-.198 E 2.75(Av)
72 235.8 S(ariable-length ar)-3.025 E
(gument list may contain a nested list.)-.198 E(If the name)5.5 E F0
(XNV)3.666 E(aNestedList)-1.012 E F1(is speci-)3.666 E
(\214ed in place of an ar)72 248.8 Q(gument name, then the follo)-.198 E
(wing v)-.275 E(alue is interpreted as an)-.275 E F0(XV)3.666 E
(aNestedList)-1.012 E F1 -.275(va)72 261.8 S
(lue that speci\214es a list of v).275 E(alues logically inserted into \
the original list at the point of declara-)-.275 E 2.75(tion. A)72 274.8
R(NULL identi\214es the end of a nested list.)2.75 E 1.76 -.88(To a)72
304.7 T(llocate a nested v).88 E(ariable ar)-.275 E
(gument list dynamically)-.198 E 2.75(,u)-.715 G(se)-2.75 E F0(XV)3.666
E(aCr)-1.012 E(eateNestedList)-.198 E F1(.).916 E .44 LW 36 322.45 36
333.45 DL 36 320.45 36 331.45 DL 41.5 318.7 36 318.7 DL 43.5 318.7 38
318.7 DL 49 318.7 43.5 318.7 DL(typedef v)72 334.6 Q(oid * XV)-.22 E
(aNestedList;)-1.221 E(XV)72 360.6 Q(aNestedList XV)-1.221 E -1.834
(aCreateNestedList \()-1.221 F/F2 11/Times-Italic@0 SF(dummy).916 E F1
2.75(,.).916 G(..\))-2.75 E(int)88.5 373.6 Q F2(dummy)2.75 E F1(;).916 E
F2(dummy)72 394.4 Q F1(Speci\214es an unused ar)40.232 E
(gument \(required by ANSI C\).)-.198 E 61(... Speci\214es)72 411.3 R
(the v)2.75 E(ariable length ar)-.275 E(gument list.)-.198 E 36 406.95
36 417.95 DL 36 404.95 36 415.95 DL 41.5 416.2 36 416.2 DL 43.5 416.2 38
416.2 DL 49 416.2 43.5 416.2 DL(The)72 441.2 Q F0(XV)3.666 E(aCr)-1.012
E(eateNestedList)-.198 E F1(function allocates memory and copies its ar)
3.666 E(guments into a single list)-.198 E(pointer)72 454.2 Q 2.75(,w)
-.44 G(hich may be used as a v)-2.75 E(alue for ar)-.275 E
(guments requiring a list v)-.198 E 2.75(alue. An)-.275 F 2.75(ye)-.165
G(ntries are copied)-2.75 E(as speci\214ed.)72 467.2 Q(Data passed by r\
eference is not copied; the caller must ensure data remains v)5.5 E
(alid for)-.275 E(the lifetime of the nested list.)72 480.2 Q
(The list should be freed using)5.5 E F0(XFr)3.666 E(ee)-.198 E F1
(when it is no longer needed.)3.666 E F0 2.75(13.4. Output)72 506.2 R
(Methods)2.75 E F1(This section pro)72 523.1 Q
(vides discussions of the follo)-.165 E
(wing X Output Method \(XOM\) topics:)-.275 E 23.65<834f>72 540 S
(utput method o)-23.65 E -.165(ve)-.165 G(rvie).165 E(w)-.275 E 23.65
<834f>72 556.9 S(utput method functions)-23.65 E 23.65<834f>72 573.8 S
(utput method v)-23.65 E(alues)-.275 E 23.65<834f>72 590.7 S
(utput conte)-23.65 E(xt functions)-.165 E 23.65<834f>72 607.6 S
(utput conte)-23.65 E(xt v)-.165 E(alues)-.275 E 23.65<8343>72 624.5 S
(reating and freeing a font set)-23.65 E 23.65<834f>72 641.4 S
(btaining font set metrics)-23.65 E 23.65<8344>72 658.3 S(ra)-23.65 E
(wing te)-.165 E(xt using font sets)-.165 E F0 2.75(13.4.1. Output)72
684.3 R(Method Ov)2.75 E(er)-.11 E(view)-.11 E F1(Locale-dependent te)72
701.2 Q(xt may include one or more te)-.165 E
(xt components, each of which may require dif-)-.165 E
(ferent fonts and character set encodings.)72 714.2 Q
(In some languages, each component might ha)5.5 E .33 -.165(ve a d)-.22
H(if).165 E(fer)-.275 E(-)-.22 E(ent dra)72 727.2 Q
(wing direction, and some components might contain conte)-.165 E
(xt-dependent characters that)-.165 E F0(277)279.75 769 Q 0 Cg EP
%%Page: 278 283
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E/F1 11/Times-Roman@0 SF
(change shape based on relationships with neighboring characters.)72 85
Q(When dra)72 101.9 Q(wing such locale-dependent te)-.165 E
(xt, some locale-speci\214c kno)-.165 E(wledge is required; for e)-.275
E(xam-)-.165 E(ple, what fonts are required to dra)72 114.9 Q 2.75(wt)
-.165 G(he te)-2.75 E(xt, ho)-.165 E 2.75(wt)-.275 G(he te)-2.75 E
(xt can be separated into components, and)-.165 E
(which fonts are selected to dra)72 127.9 Q 2.75(we)-.165 G
(ach component.)-2.75 E(Further)5.5 E 2.75(,w)-.44 G
(hen bidirectional te)-2.75 E(xt must be)-.165 E(dra)72 140.9 Q
(wn, the internal representation order of the te)-.165 E
(xt must be changed into the visual representation)-.165 E
(order to be dra)72 153.9 Q(wn.)-.165 E(An X Output Method pro)72 170.8
Q(vides a functional interf)-.165 E(ace so that clients do not ha)-.11 E
.33 -.165(ve t)-.22 H 2.75(od).165 G(eal directly)-2.75 E
(with such locale-dependent details.)72 183.8 Q(Output methods pro)5.5 E
(vide the follo)-.165 E(wing capabilities:)-.275 E 23.65<8343>72 200.7 S
(reating a set of fonts required to dra)-23.65 E 2.75(wl)-.165 G
(ocale-dependent te)-2.75 E(xt.)-.165 E 23.65<8344>72 217.6 S(ra)-23.65
E(wing locale-dependent te)-.165 E
(xt with a font set without the caller needing to be a)-.165 E -.11(wa)
-.165 G(re of).11 E(locale dependencies.)99.5 230.6 Q 23.65<834f>72
247.5 S(btaining the escapement and e)-23.65 E(xtents in pix)-.165 E
(els of locale-dependent te)-.165 E(xt.)-.165 E 23.65<8344>72 264.4 S
(etermining if bidirectional or conte)-23.65 E(xt-dependent dra)-.165 E
(wing is required in a speci\214c locale)-.165 E
(with a speci\214c font set.)99.5 277.4 Q -1.1 -.88(Tw o)72 294.3 T(dif)
3.63 E(ferent abstractions are used in the representation of the output\
 method for clients.)-.275 E(The abstraction used to communicate with a\
n output method is an opaque data structure repre-)72 311.2 Q
(sented by the)72 324.2 Q F0(XOM)3.666 E F1(data type.)3.666 E
(The abstraction for representing the state of a particular output)5.5 E
(thread is called an)72 337.2 Q/F2 11/Times-Italic@0 SF(output conte)
2.75 E(xt)-.22 E F1 5.5(.T)C(he Xlib representation of an output conte)
-5.5 E(xt is an)-.165 E F0(XOC)3.666 E F1(,).916 E
(which is compatible with)72 350.2 Q F0(XF)3.666 E(ontSet)-.275 E F1
(in terms of its functional interf)3.666 E(ace, b)-.11 E
(ut is a broader)-.22 E 2.75(,m)-.44 G(ore)-2.75 E
(generalized abstraction.)72 363.2 Q F0 2.75(13.4.2. Output)72 389.2 R
(Method Functions)2.75 E F1 1.76 -.88(To o)72 406.1 T
(pen an output method, use).88 E F0(XOpenOM)3.666 E F1(.).916 E .44 LW
36 423.85 36 434.85 DL 36 421.85 36 432.85 DL 41.5 420.1 36 420.1 DL
43.5 420.1 38 420.1 DL 49 420.1 43.5 420.1 DL(XOM XOpenOM)72 436 Q(\()
.916 E F2(display).916 E F1(,).916 E F2(db)2.75 E F1(,).916 E F2 -.407
(re)2.75 G(s_name).407 E F1(,).916 E F2 -.407(re)2.75 G(s_class).407 E
F1(\)).916 E(Display *)88.5 449 Q F2(display)A F1(;).916 E(XrmDatabase)
88.5 462 Q F2(db)2.75 E F1(;).916 E(char *)88.5 475 Q F2 -.407(re)C
(s_name).407 E F1(;).916 E(char *)88.5 488 Q F2 -.407(re)C(s_class).407
E F1(;).916 E F2(display)72 508.8 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2(db)72 525.7 Q F1(Speci\214es a pointer to the resource database.)61 E
F2 -.407(re)72 542.6 S(s_name).407 E F1
(Speci\214es the full resource name of the application.)29.639 E F2
-.407(re)72 559.5 S(s_class).407 E F1
(Speci\214es the full class name of the application.)31.465 E 36 555.15
36 566.15 DL 36 553.15 36 564.15 DL 41.5 564.4 36 564.4 DL 43.5 564.4 38
564.4 DL 49 564.4 43.5 564.4 DL(The)72 589.4 Q F0(XOpenOM)3.666 E F1(fu\
nction opens an output method matching the current locale and modi\214e\
rs)3.666 E 2.75(speci\214cation. The)72 602.4 R
(current locale and modi\214ers are bound to the output method when)2.75
E F0(XOpenOM)3.666 E F1(is called.)72 615.4 Q
(The locale associated with an output method cannot be changed.)5.5 E(T\
he speci\214c output method to which this call will be routed is identi\
\214ed on the basis of the cur)72 632.3 Q(-)-.22 E
(rent locale and modi\214ers.)72 645.3 Q F0(XOpenOM)6.416 E F1
(will identify a def)3.666 E(ault output method corresponding to the)
-.11 E(current locale.)72 658.3 Q(That def)5.5 E
(ault can be modi\214ed using)-.11 E F0(XSetLocaleModi\214ers)3.666 E F1
(to set the output)3.666 E(method modi\214er)72 671.3 Q(.)-.605 E
(The db ar)72 688.2 Q(gument is the resource database to be used by the\
 output method for looking up)-.198 E(resources that are pri)72 701.2 Q
-.275(va)-.275 G(te to the output method.).275 E
(It is not intended that this database be used to)5.5 E(look up v)72
714.2 Q(alues that can be set as OC v)-.275 E(alues in an output conte)
-.275 E 2.75(xt. If)-.165 F(db is NULL, no database is)2.75 E
(passed to the output method.)72 727.2 Q F0(278)279.75 769 Q 0 Cg EP
%%Page: 279 284
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E/F1 11/Times-Roman@0 SF
(The res_name and res_class ar)72 85 Q
(guments specify the resource name and class of the application.)-.198 E
(The)72 98 Q 2.75(ya)-.165 G(re intended to be used as pre\214x)-2.75 E
(es by the output method when looking up resources that are)-.165 E
(common to all output conte)72 111 Q
(xts that may be created for this output method.)-.165 E
(The characters used)5.5 E(for resource names and classes must be in th\
e X Portable Character Set.)72 124 Q(The resources look)5.5 E(ed up)-.11
E(are not fully speci\214ed if res_name or res_class is NULL.)72 137 Q
(The res_name and res_class ar)72 153.9 Q(guments are not assumed to e)
-.198 E(xist be)-.165 E(yond the call to)-.165 E F0(XOpenOM)3.666 E F1
(.).916 E(The speci\214ed resource database is assumed to e)72 166.9 Q
(xist for the lifetime of the output method.)-.165 E F0(XOpenOM)72.916
183.8 Q F1(returns NULL if no output method could be opened.)3.666 E
1.76 -.88(To c)72 213.7 T(lose an output method, use).88 E F0(XCloseOM)
3.666 E F1(.).916 E .44 LW 36 231.45 36 242.45 DL 36 229.45 36 240.45 DL
41.5 227.7 36 227.7 DL 43.5 227.7 38 227.7 DL 49 227.7 43.5 227.7 DL
(Status XCloseOM)72 243.6 Q(\().916 E/F2 11/Times-Italic@0 SF(om).916 E
F1(\)).916 E(XOM)88.5 256.6 Q F2(om)2.75 E F1(;).916 E F2(om)72 277.4 Q
F1(Speci\214es the output method.)58.558 E 36 273.05 36 284.05 DL 36
271.05 36 282.05 DL 41.5 282.3 36 282.3 DL 43.5 282.3 38 282.3 DL 49
282.3 43.5 282.3 DL(The)72 307.3 Q F0(XCloseOM)3.666 E F1
(function closes the speci\214ed output method.)3.666 E 1.76 -.88(To s)
72 337.2 T(et output method attrib).88 E(utes, use)-.22 E F0(XSetOMV)
3.666 E(alues)-1.012 E F1(.).916 E 36 354.95 36 365.95 DL 36 352.95 36
363.95 DL 41.5 351.2 36 351.2 DL 43.5 351.2 38 351.2 DL 49 351.2 43.5
351.2 DL(char * XSetOMV)72 367.1 Q -1.834(alues \()-1.221 F F2(om).916 E
F1 2.75(,.).916 G(..\))-2.75 E(XOM)88.5 380.1 Q F2(om)2.75 E F1(;).916 E
F2(om)72 400.9 Q F1(Speci\214es the output method.)58.558 E 61
(... Speci\214es)72 417.8 R(the v)2.75 E(ariable-length ar)-.275 E
(gument list to set XOM v)-.198 E(alues.)-.275 E 36 413.45 36 424.45 DL
36 411.45 36 422.45 DL 41.5 422.7 36 422.7 DL 43.5 422.7 38 422.7 DL 49
422.7 43.5 422.7 DL(The)72 447.7 Q F0(XSetOMV)3.666 E(alues)-1.012 E F1
(function presents a v)3.666 E(ariable ar)-.275 E
(gument list programming interf)-.198 E(ace for setting)-.11 E
(properties or features of the speci\214ed output method.)72 460.7 Q
(This function returns NULL if it succeeds;)5.5 E
(otherwise, it returns the name of the \214rst ar)72 473.7 Q
(gument that could not be set.)-.198 E(Xlib does not attempt to)5.5 E
(set ar)72 486.7 Q(guments from the supplied list that follo)-.198 E
2.75(wt)-.275 G(he f)-2.75 E(ailed ar)-.11 E(gument; all ar)-.198 E
(guments in the list pre-)-.198 E(ceding the f)72 499.7 Q(ailed ar)-.11
E(gument ha)-.198 E .33 -.165(ve b)-.22 H(een set correctly).165 E(.)
-.715 E(No standard ar)72 516.6 Q
(guments are currently de\214ned by Xlib)-.198 E(.)-.44 E 1.76 -.88
(To q)72 546.5 T(uery an output method, use).88 E F0(XGetOMV)3.666 E
(alues)-1.012 E F1(.).916 E 36 564.25 36 575.25 DL 36 562.25 36 573.25
DL 41.5 560.5 36 560.5 DL 43.5 560.5 38 560.5 DL 49 560.5 43.5 560.5 DL
(char * XGetOMV)72 576.4 Q -1.834(alues \()-1.221 F F2(om).916 E F1 2.75
(,.).916 G(..\))-2.75 E(XOM)88.5 589.4 Q F2(om)2.75 E F1(;).916 E F2(om)
72 610.2 Q F1(Speci\214es the output method.)58.558 E 61
(... Speci\214es)72 627.1 R(the v)2.75 E(ariable-length ar)-.275 E
(gument list to get XOM v)-.198 E(alues.)-.275 E 36 622.75 36 633.75 DL
36 620.75 36 631.75 DL 41.5 632 36 632 DL 43.5 632 38 632 DL 49 632 43.5
632 DL(The)72 657 Q F0(XGetOMV)3.666 E(alues)-1.012 E F1
(function presents a v)3.666 E(ariable ar)-.275 E
(gument list programming interf)-.198 E(ace for query-)-.11 E
(ing properties or features of the speci\214ed output method.)72 670 Q
(This function returns NULL if it suc-)5.5 E
(ceeds; otherwise, it returns the name of the \214rst ar)72 683 Q
(gument that could not be obtained.)-.198 E 1.76 -.88(To o)72 699.9 T
(btain the display associated with an output method, use).88 E F0
(XDisplayOfOM)3.666 E F1(.).916 E F0(279)279.75 769 Q 0 Cg EP
%%Page: 280 285
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E .44 LW 36 76.75 36 87.75 DL 36 74.75
36 85.75 DL 41.5 73 36 73 DL 43.5 73 38 73 DL 49 73 43.5 73 DL/F1 11
/Times-Roman@0 SF(Display * XDisplayOfOM)72 88.9 Q(\().916 E/F2 11
/Times-Italic@0 SF(om).916 E F1(\)).916 E(XOM)108 101.9 Q F2(om)2.75 E
F1(;).916 E F2(om)72 122.7 Q F1(Speci\214es the output method.)58.558 E
36 118.35 36 129.35 DL 36 116.35 36 127.35 DL 41.5 127.6 36 127.6 DL
43.5 127.6 38 127.6 DL 49 127.6 43.5 127.6 DL(The)72 152.6 Q F0
(XDisplayOfOM)3.666 E F1(function returns the display associated with t\
he speci\214ed output method.)3.666 E 1.76 -.88(To g)72 182.5 T
(et the locale associated with an output method, use).88 E F0
(XLocaleOfOM)3.666 E F1(.).916 E 36 200.25 36 211.25 DL 36 198.25 36
209.25 DL 41.5 196.5 36 196.5 DL 43.5 196.5 38 196.5 DL 49 196.5 43.5
196.5 DL(char * XLocaleOfOM)72 212.4 Q(\().916 E F2(om).916 E F1(\)).916
E(XOM)88.5 225.4 Q F2(om)2.75 E F1(;).916 E F2(om)72 246.2 Q F1
(Speci\214es the output method.)58.558 E 36 241.85 36 252.85 DL 36
239.85 36 250.85 DL 41.5 251.1 36 251.1 DL 43.5 251.1 38 251.1 DL 49
251.1 43.5 251.1 DL(The)72 276.1 Q F0(XLocaleOfOM)3.666 E F1
(returns the locale associated with the speci\214ed output method.)3.666
E F0 2.75(13.4.3. X)72 302.1 R(Output Method V)2.75 E(alues)-1.012 E F1
(The follo)72 319 Q(wing table describes ho)-.275 E 2.75(wX)-.275 G
(OM v)-2.75 E(alues are interpreted by an output method.)-.275 E
(The \214rst)5.5 E(column lists the XOM v)72 332 Q 2.75(alues. The)-.275
F(second column indicates ho)2.75 E 2.75(we)-.275 G(ach of the XOM v)
-2.75 E(alues are)-.275 E(treated by a particular output style.)72 345 Q
(The follo)72 365.8 Q(wing k)-.275 E .33 -.165(ey a)-.11 H
(pplies to this table.).165 E 502.5 377.05 72 377.05 DL F0 -.275(Ke)72
393.3 S 69.833(yE).275 G(xplanation)-69.833 E 502.5 404.05 72 404.05 DL
F1(G)72 420.3 Q(This v)160.5 420.3 Q(alue may be read using)-.275 E F0
(XGetOMV)3.666 E(alues)-1.012 E F1(.).916 E 502.5 431.05 72 431.05 DL
268.386 449.95 72 449.95 DL F0(XOM V)72 466.2 Q 119.238(alue K)-1.012 F
(ey)-.275 E 268.386 476.95 72 476.95 DL(XNRequir)72.916 493.2 Q
(edCharSet)-.198 E F1(G)255.472 493.2 Q F0(XNQueryOrientation)72.916
506.2 Q F1(G)255.472 506.2 Q F0(XNDir)72.916 519.2 Q
(ectionalDependentDrawing)-.198 E F1(G)255.472 519.2 Q F0
(XNContextualDrawing)72.916 532.2 Q F1(G)255.472 532.2 Q 268.386 542.95
72 542.95 DL F0 2.75(13.4.3.1. Requir)72 576.6 R(ed Char Set)-.198 E F1
(The)72 593.5 Q F0(XNRequir)3.666 E(edCharSet)-.198 E F1(ar)3.666 E
(gument returns the list of charsets that are required for loading the)
-.198 E(fonts needed for the locale.)72 606.5 Q(The v)5.5 E
(alue of the ar)-.275 E(gument is a pointer to a structure of type)-.198
E F0(XOM-)3.666 E(CharSetList)72 619.5 Q F1(.).916 E(The)72 636.4 Q F0
(XOMCharSetList)3.666 E F1(structure is de\214ned as follo)3.666 E(ws:)
-.275 E F0(280)279.75 769 Q 0 Cg EP
%%Page: 281 286
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E .44 LW 36 76.75 36 87.75 DL 36 74.75
36 85.75 DL 41.5 73 36 73 DL 43.5 73 38 73 DL 49 73 43.5 73 DL/F1 11
/Times-Roman@0 SF(typedef struct {)72 95.4 Q(int charset_count;)108
108.4 Q(char **charset_list;)108 121.4 Q 2.75(}X)72 134.4 S
(OMCharSetList;)-2.75 E 36 136.55 36 147.55 DL 36 134.55 36 145.55 DL
41.5 145.8 36 145.8 DL 43.5 145.8 38 145.8 DL 49 145.8 43.5 145.8 DL(Th\
e charset_list member is a list of one or more null-terminated charset \
names, and the)72 170.8 Q
(charset_count member is the number of charset names.)72 183.8 Q
(The required charset list is o)72 200.7 Q
(wned by Xlib and should not be modi\214ed or freed by the client.)-.275
E(It)5.5 E(will be freed by a call to)72 213.7 Q F0(XCloseOM)3.666 E F1
(with the associated)3.666 E F0(XOM)3.666 E F1 5.5(.U).916 G
(ntil freed, its contents will not)-5.5 E(be modi\214ed by Xlib)72 226.7
Q(.)-.44 E F0 2.75(13.4.3.2. Query)72 256.6 R(Orientation)2.75 E F1(The)
72 273.5 Q F0(XNQueryOrientation)3.666 E F1(ar)3.666 E
(gument returns the global orientation of te)-.198 E(xt when dra)-.165 E
2.75(wn. Other)-.165 F(than)72 286.5 Q F0(XOMOrientation_L)3.666 E
(TR_TTB)-1.012 E F1 2.75(,t).916 G
(he set of orientations supported is locale-dependent.)-2.75 E(The)5.5 E
-.275(va)72 299.5 S(lue of the ar).275 E
(gument is a pointer to a structure of type)-.198 E F0(XOMOrientation)
3.666 E F1 5.5(.C).916 G(lients are responsi-)-5.5 E
(ble for freeing the)72 312.5 Q F0(XOMOrientation)3.666 E F1
(structure by using)3.666 E F0(XFr)3.666 E(ee)-.198 E F1 2.75(;t).916 G
(his also frees the contents of the)-2.75 E(structure.)72 325.5 Q 36
347.15 36 358.15 DL 36 345.15 36 356.15 DL 41.5 343.4 36 343.4 DL 43.5
343.4 38 343.4 DL 49 343.4 43.5 343.4 DL(typedef struct {)72 361.9 Q
(int num_orientation;)108 374.9 Q(XOrientation *orientation;)108 387.9 Q
(/* Input T)26.982 E -.165(ex)-.77 G 2.75(td).165 G(escription */)-2.75
E 2.75(}X)72 400.9 S(OMOrientation;)-2.75 E(typedef enum {)72 426.9 Q
(XOMOrientation_L)108 439.9 Q(TR_TTB,)-1.012 E(XOMOrientation_R)108
452.9 Q(TL_TTB,)-.66 E(XOMOrientation_TTB_L)108 465.9 Q(TR,)-1.012 E
(XOMOrientation_TTB_R)108 478.9 Q(TL,)-.66 E(XOMOrientation_Conte)108
491.9 Q(xt)-.165 E 2.75(}X)72 504.9 S(Orientation;)-2.75 E 36 507.05 36
518.05 DL 36 505.05 36 516.05 DL 41.5 516.3 36 516.3 DL 43.5 516.3 38
516.3 DL 49 516.3 43.5 516.3 DL(The possible v)72 541.3 Q
(alue for XOrientation may be:)-.275 E<83>72 558.2 Q F0
(XOMOrientation_L)24.566 E(TR_TTB)-1.012 E F1
(left-to-right, top-to-bottom global orientation)3.666 E<83>72 575.1 Q
F0(XOMOrientation_R)24.566 E(TL_TTB)-.44 E F1
(right-to-left, top-to-bottom global orientation)3.666 E<83>72 592 Q F0
(XOMOrientation_TTB_L)24.566 E(TR)-1.012 E F1
(top-to-bottom, left-to-right global orientation)3.666 E<83>72 608.9 Q
F0(XOMOrientation_TTB_R)24.566 E(TL)-.44 E F1
(top-to-bottom, right-to-left global orientation)3.666 E<83>72 625.8 Q
F0(XOMOrientation_Context)24.566 E F1(conte)3.666 E
(xtual global orientation)-.165 E F0 2.75(13.4.3.3. Dir)72 655.7 R
(ectional Dependent Drawing)-.198 E F1(The)72 672.6 Q F0(XNDir)3.666 E
(ectionalDependentDrawing)-.198 E F1(ar)3.666 E
(gument indicates whether the te)-.198 E(xt rendering functions)-.165 E
(implement implicit handling of directional te)72 685.6 Q 2.75(xt. If)
-.165 F(this v)2.75 E(alue is)-.275 E F0 -.814(Tr)3.666 G(ue).814 E F1
2.75(,t).916 G(he output method has)-2.75 E(kno)72 698.6 Q
(wledge of directional dependencies and reorders te)-.275 E
(xt as necessary when rendering te)-.165 E 2.75(xt. If)-.165 F(this)2.75
E -.275(va)72 711.6 S(lue is).275 E F0 -.275(Fa)3.666 G(lse).275 E F1
2.75(,t).916 G(he output method does not implement an)-2.75 E 2.75(yd)
-.165 G(irectional te)-2.75 E(xt handling, and all char)-.165 E(-)-.22 E
(acter directions are assumed to be left-to-right.)72 724.6 Q F0(281)
279.75 769 Q 0 Cg EP
%%Page: 282 287
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E/F1 11/Times-Roman@0 SF(Re)72 85 Q
-.055(ga)-.165 G(rdless of the rendering order of characters, the origi\
ns of all characters are on the primary).055 E(dra)72 98 Q 2.75(wd)-.165
G(irection side of the dra)-2.75 E(wing origin.)-.165 E(This OM v)72
114.9 Q(alue presents functionality identical to the)-.275 E F0(XDir)
3.666 E(ectionalDependentDrawing)-.198 E F1(function.)3.666 E F0 2.75
(13.4.3.4. Context)72 140.9 R(Dependent Drawing)2.75 E F1(The)72 157.8 Q
F0(XNContextualDrawing)3.666 E F1(ar)3.666 E
(gument indicates whether the te)-.198 E
(xt rendering functions implement)-.165 E(implicit conte)72 170.8 Q
(xt-dependent dra)-.165 E 2.75(wing. If)-.165 F(this v)2.75 E(alue is)
-.275 E F0 -.814(Tr)3.666 G(ue).814 E F1 2.75(,t).916 G
(he output method has kno)-2.75 E(wledge of)-.275 E(conte)72 183.8 Q(xt\
 dependencies and performs character shape editing, combining glyphs to\
 present a single)-.165 E(character as necessary)72 196.8 Q 5.5(.T)-.715
G(he actual shape editing is dependent on the locale implementation and)
-5.5 E(the font set used.)72 209.8 Q(This OM v)72 226.7 Q
(alue presents functionality identical to the)-.275 E F0
(XContextualDrawing)3.666 E F1(function.)3.666 E F0 2.75(13.4.4. Output)
72 252.7 R(Context Functions)2.75 E F1(An output conte)72 269.6 Q(xt is\
 an abstraction that contains both the data required by an output metho\
d and)-.165 E(the information required to display that data.)72 282.6 Q
(There can be multiple output conte)5.5 E(xts for one out-)-.165 E
(put method.)72 295.6 Q(The programming interf)5.5 E
(aces for creating, reading, or modifying an output conte)-.11 E(xt)
-.165 E(use a v)72 308.6 Q(ariable ar)-.275 E(gument list.)-.198 E
(The name elements of the ar)5.5 E
(gument lists are referred to as XOC v)-.198 E(al-)-.275 E 2.75(ues. It)
72 321.6 R(is intended that output methods be controlled by these XOC v)
2.75 E 2.75(alues. As)-.275 F(ne)2.75 E 2.75(wX)-.275 G(OC v)-2.75 E
(alues)-.275 E(are created, the)72 334.6 Q 2.75(ys)-.165 G(hould be re)
-2.75 E(gistered with the X Consortium.)-.165 E(An)5.5 E F0(XOC)3.666 E
F1(can be used an)3.666 E(ywhere an)-.165 E F0(XF)72.916 347.6 Q(ontSet)
-.275 E F1(can be used, and vice v)3.666 E(ersa;)-.165 E F0(XF)3.666 E
(ontSet)-.275 E F1(is retained for compatibility with pre)3.666 E(vious)
-.275 E 2.75(releases. The)72 360.6 R
(concepts of output methods and output conte)2.75 E(xts include broader)
-.165 E 2.75(,m)-.44 G(ore generalized)-2.75 E
(abstraction than font set, supporting comple)72 373.6 Q 2.75(xa)-.165 G
(nd more intelligent te)-2.75 E(xt display)-.165 E 2.75(,a)-.715 G
(nd dealing not)-2.75 E(only with multiple fonts b)72 386.6 Q
(ut also with conte)-.22 E(xt dependencies.)-.165 E(Ho)5.5 E(we)-.275 E
-.165(ve)-.275 G -.44(r,).165 G F0(XF)4.106 E(ontSet)-.275 E F1
(is widely used)3.666 E(in se)72 399.6 Q -.165(ve)-.275 G(ral interf)
.165 E(aces, so)-.11 E F0(XOC)3.666 E F1(is de\214ned as an upw)3.666 E
(ard compatible type of)-.11 E F0(XF)3.666 E(ontSet)-.275 E F1(.).916 E
1.76 -.88(To c)72 429.5 T(reate an output conte).88 E(xt, use)-.165 E F0
(XCr)3.666 E(eateOC)-.198 E F1(.).916 E .44 LW 36 447.25 36 458.25 DL 36
445.25 36 456.25 DL 41.5 443.5 36 443.5 DL 43.5 443.5 38 443.5 DL 49
443.5 43.5 443.5 DL(XOC XCreateOC)72 459.4 Q(\().916 E/F2 11
/Times-Italic@0 SF(om).916 E F1 2.75(,.).916 G(..\))-2.75 E(XOM)88.5
472.4 Q F2(om)2.75 E F1(;).916 E F2(om)72 493.2 Q F1
(Speci\214es the output method.)58.558 E 61(... Speci\214es)72 510.1 R
(the v)2.75 E(ariable-length ar)-.275 E(gument list to set XOC v)-.198 E
(alues.)-.275 E 36 505.75 36 516.75 DL 36 503.75 36 514.75 DL 41.5 515
36 515 DL 43.5 515 38 515 DL 49 515 43.5 515 DL(The)72 540 Q F0(XCr)
3.666 E(eateOC)-.198 E F1(function creates an output conte)3.666 E
(xt within the speci\214ed output method.)-.165 E
(The base font names ar)72 556.9 Q
(gument is mandatory at creation time, and the output conte)-.198 E
(xt will not be)-.165 E(created unless it is pro)72 569.9 Q 2.75
(vided. All)-.165 F(other output conte)2.75 E(xt v)-.165 E
(alues can be set later)-.275 E(.)-.605 E F0(XCr)72.916 586.8 Q(eateOC)
-.198 E F1(returns NULL if no output conte)3.666 E(xt could be created.)
-.165 E(NULL can be returned for an)5.5 E(y)-.165 E(of the follo)72
599.8 Q(wing reasons:)-.275 E 23.65<8341>72 616.7 S(required ar)-20.9 E
(gument w)-.198 E(as not set.)-.11 E 23.65<8341>72 633.6 S(read-only ar)
-20.9 E(gument w)-.198 E(as set.)-.11 E 23.65<8341>72 650.5 S 2.75(na)
-23.65 G -.198(rg)-2.75 G(ument name is not recognized.).198 E 23.65
<8354>72 667.4 S(he output method encountered an output method implemen\
tation-dependent error)-23.65 E(.)-.605 E F0(XCr)72.916 684.3 Q(eateOC)
-.198 E F1(can generate a)3.666 E F0(BadAtom)3.666 E F1(error)3.666 E(.)
-.605 E 1.76 -.88(To d)72 714.2 T(estro).88 E 2.75(ya)-.11 G 2.75(no)
-2.75 G(utput conte)-2.75 E(xt, use)-.165 E F0(XDestr)3.666 E(oyOC)-.198
E F1(.).916 E F0(282)279.75 769 Q 0 Cg EP
%%Page: 283 288
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E .44 LW 36 76.75 36 87.75 DL 36 74.75
36 85.75 DL 41.5 73 36 73 DL 43.5 73 38 73 DL 49 73 43.5 73 DL/F1 11
/Times-Roman@0 SF -.22(vo)72 88.9 S(id XDestro).22 E -1.834(yOC \()-.11
F/F2 11/Times-Italic@0 SF(oc).916 E F1(\)).916 E(XOC)88.5 101.9 Q F2(oc)
2.75 E F1(;).916 E F2(oc)72 122.7 Q F1(Speci\214es the output conte)
61.616 E(xt.)-.165 E 36 118.35 36 129.35 DL 36 116.35 36 127.35 DL 41.5
127.6 36 127.6 DL 43.5 127.6 38 127.6 DL 49 127.6 43.5 127.6 DL(The)72
152.6 Q F0(XDestr)3.666 E(oyOC)-.198 E F1(function destro)3.666 E
(ys the speci\214ed output conte)-.11 E(xt.)-.165 E 1.76 -.88(To g)72
182.5 T(et the output method associated with an output conte).88 E
(xt, use)-.165 E F0(XOMOfOC)3.666 E F1(.).916 E 36 200.25 36 211.25 DL
36 198.25 36 209.25 DL 41.5 196.5 36 196.5 DL 43.5 196.5 38 196.5 DL 49
196.5 43.5 196.5 DL(XOM XOMOfOC)72 212.4 Q(\().916 E F2(oc).916 E F1(\))
.916 E(XOC)88.5 225.4 Q F2(oc)2.75 E F1(;).916 E F2(oc)72 246.2 Q F1
(Speci\214es the output conte)61.616 E(xt.)-.165 E 36 241.85 36 252.85
DL 36 239.85 36 250.85 DL 41.5 251.1 36 251.1 DL 43.5 251.1 38 251.1 DL
49 251.1 43.5 251.1 DL(The)72 276.1 Q F0(XOMOfOC)3.666 E F1(function re\
turns the output method associated with the speci\214ed output conte)
3.666 E(xt.)-.165 E(Xlib pro)72 306 Q(vides tw)-.165 E 2.75(of)-.11 G
(unctions for setting and reading output conte)-2.75 E(xt v)-.165 E
(alues, respecti)-.275 E -.165(ve)-.275 G(ly).165 E(,)-.715 E F0
(XSetOC-)3.666 E -1.012(Va)72 319 S(lues)1.012 E F1(and)3.666 E F0
(XGetOCV)3.666 E(alues)-1.012 E F1 5.5(.B).916 G(oth functions ha)-5.5 E
.33 -.165(ve a v)-.22 H(ariable-length ar)-.11 E(gument list.)-.198 E
(In that ar)5.5 E(gu-)-.198 E(ment list, an)72 332 Q 2.75(yX)-.165 G
(OC v)-2.75 E(alue')-.275 E 2.75(sn)-.605 G
(ame must be denoted with a character string using the X Portable)-2.75
E(Character Set.)72 345 Q 1.76 -.88(To s)72 374.9 T(et XOC v).88 E
(alues, use)-.275 E F0(XSetOCV)3.666 E(alues)-1.012 E F1(.).916 E 36
392.65 36 403.65 DL 36 390.65 36 401.65 DL 41.5 388.9 36 388.9 DL 43.5
388.9 38 388.9 DL 49 388.9 43.5 388.9 DL(char * XSetOCV)72 404.8 Q
-1.834(alues \()-1.221 F F2(oc).916 E F1 2.75(,.).916 G(..\))-2.75 E
(XOC)88.5 417.8 Q F2(oc)2.75 E F1(;).916 E F2(oc)72 438.6 Q F1
(Speci\214es the output conte)61.616 E(xt.)-.165 E 61(... Speci\214es)72
455.5 R(the v)2.75 E(ariable-length ar)-.275 E(gument list to set XOC v)
-.198 E(alues.)-.275 E 36 451.15 36 462.15 DL 36 449.15 36 460.15 DL
41.5 460.4 36 460.4 DL 43.5 460.4 38 460.4 DL 49 460.4 43.5 460.4 DL
(The)72 485.4 Q F0(XSetOCV)3.666 E(alues)-1.012 E F1(function returns N\
ULL if no error occurred; otherwise, it returns the name)3.666 E
(of the \214rst ar)72 498.4 Q(gument that could not be set.)-.198 E
(An ar)5.5 E(gument might not be set for an)-.198 E 2.75(yo)-.165 G 2.75
(ft)-2.75 G(he follo)-2.75 E(wing)-.275 E(reasons:)72 511.4 Q 23.65
<8354>72 528.3 S(he ar)-23.65 E(gument is read-only)-.198 E(.)-.715 E
23.65<8354>72 545.2 S(he ar)-23.65 E(gument name is not recognized.)
-.198 E 23.65<8341>72 562.1 S 2.75(ni)-23.65 G
(mplementation-dependent error occurs.)-2.75 E(Each v)72 579 Q(alue to \
be set must be an appropriate datum, matching the data type imposed by \
the seman-)-.275 E(tics of the ar)72 592 Q(gument.)-.198 E F0(XSetOCV)
72.916 608.9 Q(alues)-1.012 E F1(can generate a)3.666 E F0(BadAtom)3.666
E F1(error)3.666 E(.)-.605 E 1.76 -.88(To o)72 638.8 T(btain XOC v).88 E
(alues, use)-.275 E F0(XGetOCV)3.666 E(alues)-1.012 E F1(.).916 E F0
(283)279.75 769 Q 0 Cg EP
%%Page: 284 289
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E .44 LW 36 76.75 36 87.75 DL 36 74.75
36 85.75 DL 41.5 73 36 73 DL 43.5 73 38 73 DL 49 73 43.5 73 DL/F1 11
/Times-Roman@0 SF(char * XGetOCV)72 88.9 Q -1.834(alues \()-1.221 F/F2
11/Times-Italic@0 SF(oc).916 E F1 2.75(,.).916 G(..\))-2.75 E(XOC)88.5
101.9 Q F2(oc)2.75 E F1(;).916 E F2(oc)72 122.7 Q F1
(Speci\214es the output conte)61.616 E(xt.)-.165 E 61(... Speci\214es)72
139.6 R(the v)2.75 E(ariable-length ar)-.275 E(gument list to get XOC v)
-.198 E(alues.)-.275 E 36 135.25 36 146.25 DL 36 133.25 36 144.25 DL
41.5 144.5 36 144.5 DL 43.5 144.5 38 144.5 DL 49 144.5 43.5 144.5 DL
(The)72 169.5 Q F0(XGetOCV)3.666 E(alues)-1.012 E F1(function returns N\
ULL if no error occurred; otherwise, it returns the name)3.666 E
(of the \214rst ar)72 182.5 Q(gument that could not be obtained.)-.198 E
(An ar)5.5 E(gument might not be obtained for an)-.198 E 2.75(yo)-.165 G
(f)-2.75 E(the follo)72 195.5 Q(wing reasons:)-.275 E 23.65<8354>72
212.4 S(he ar)-23.65 E(gument name is not recognized.)-.198 E 23.65
<8341>72 229.3 S 2.75(ni)-23.65 G(mplementation-dependent error occurs.)
-2.75 E(Each ar)72 246.2 Q(gument v)-.198 E(alue follo)-.275 E
(wing a name must point to a location where the v)-.275 E
(alue is to be stored.)-.275 E F0 2.75(13.4.5. Output)72 272.2 R
(Context V)2.75 E(alues)-1.012 E F1(The follo)72 289.1 Q
(wing table describes ho)-.275 E 2.75(wX)-.275 G(OC v)-2.75 E
(alues are interpreted by an output method.)-.275 E(The \214rst)5.5 E
(column lists the XOC v)72 302.1 Q 2.75(alues. The)-.275 F
(second column indicates the alternati)2.75 E .33 -.165(ve i)-.275 H
(nterf).165 E(aces that function)-.11 E(identically and are pro)72 315.1
Q(vided for compatibility with pre)-.165 E(vious releases.)-.275 E
(The third column indicates)5.5 E(ho)72 328.1 Q 2.75(we)-.275 G
(ach of the XOC v)-2.75 E(alues is treated.)-.275 E(The follo)72 345 Q
(wing k)-.275 E -.165(ey)-.11 G 2.75(sa).165 G(pply to this table.)-2.75
E 502.5 356.25 72 356.25 DL F0 -.275(Ke)72 372.5 S 69.833(yE).275 G
(xplanation)-69.833 E 502.5 383.25 72 383.25 DL F1(C)72 393.5 Q(This v)
160.5 393.5 Q(alue must be set with)-.275 E F0(XCr)3.666 E(eateOC)-.198
E F1(.).916 E(D)72 406.5 Q(This v)160.5 406.5 Q(alue may be set using)
-.275 E F0(XCr)3.666 E(eateOC)-.198 E F1 5.5(.I).916 G 2.75(fi)-5.5 G
2.75(ti)-2.75 G 2.75(sn)-2.75 G(ot set,)-2.75 E 2.75(ad)160.5 419.5 S
(ef)-2.75 E(ault is pro)-.11 E(vided.)-.165 E(G)72 432.5 Q(This v)160.5
432.5 Q(alue may be read using)-.275 E F0(XGetOCV)3.666 E(alues)-1.012 E
F1(.).916 E(S)72 445.5 Q(This v)160.5 445.5 Q(alue must be set using)
-.275 E F0(XSetOCV)3.666 E(alues)-1.012 E F1(.).916 E 502.5 456.25 72
456.25 DL 295.993 475.15 72 475.15 DL F0(XOC V)72 491.4 Q 27.214
(alue Alter)-1.012 F(nati)-.165 E .22 -.11(ve I)-.11 H 15.328
(nterface K).11 F(ey)-.275 E 295.993 502.15 72 502.15 DL F1(BaseF)72
518.4 Q(ontName)-.165 E F0(XCr)166.836 518.4 Q(eateF)-.198 E(ontSet)
-.275 E F1(C-G)271.859 518.4 Q(MissingCharSet)72 531.4 Q F0(XCr)166.836
531.4 Q(eateF)-.198 E(ontSet)-.275 E F1(G)277.359 531.4 Q(Def)72 544.4 Q
(aultString)-.11 E F0(XCr)166.836 544.4 Q(eateF)-.198 E(ontSet)-.275 E
F1(G)277.359 544.4 Q(Orientation)72 557.4 Q<ad>201.679 557.4 Q(D-S-G)
266.667 557.4 Q(ResourceName)72 570.4 Q<ad>201.679 570.4 Q(S-G)272.469
570.4 Q(ResourceClass)72 583.4 Q<ad>201.679 583.4 Q(S-G)272.469 583.4 Q
-.165(Fo)72 596.4 S(ntInfo).165 E F0(XF)163.503 596.4 Q(ontsOfF)-.275 E
(ontSet)-.275 E F1(G)277.359 596.4 Q(OMAutomatic)72 609.4 Q<ad>201.679
609.4 Q(G)277.359 609.4 Q 295.993 620.15 72 620.15 DL F0 2.75
(13.4.5.1. Base)72 653.8 R -.275(Fo)2.75 G(nt Name).275 E F1(The)72
670.7 Q F0(XNBaseF)3.666 E(ontName)-.275 E F1(ar)3.666 E
(gument is a list of base font names that Xlib uses to load the fonts)
-.198 E(needed for the locale.)72 683.7 Q
(The base font names are a comma-separated list.)5.5 E
(The string is null-termi-)5.5 E(nated and is assumed to be in the Host\
 Portable Character Encoding; otherwise, the result is)72 696.7 Q 2.75
(implementation-dependent. White)72 709.7 R
(space immediately on either side of a separating comma is)2.75 E
(ignored.)72 722.7 Q F0(284)279.75 769 Q 0 Cg EP
%%Page: 285 290
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E/F1 11/Times-Roman@0 SF
(Use of XLFD font names permits Xlib to obtain the fonts needed for a v)
72 85 Q(ariety of locales from a)-.275 E
(single locale-independent base font name.)72 98 Q
(The single base font name should name a f)5.5 E(amily of)-.11 E
(fonts whose members are encoded in the v)72 111 Q
(arious charsets needed by the locales of interest.)-.275 E
(An XLFD base font name can e)72 127.9 Q
(xplicitly name a charset needed for the locale.)-.165 E(This allo)5.5 E
(ws the)-.275 E(user to specify an e)72 140.9 Q(xact font for use with \
a charset required by a locale, fully controlling the font)-.165 E
(selection.)72 153.9 Q(If a base font name is not an XLFD name, Xlib wi\
ll attempt to obtain an XLFD name from the)72 170.8 Q
(font properties for the font.)72 183.8 Q(If Xlib is successful, the)5.5
E F0(XGetOCV)3.666 E(alues)-1.012 E F1(function will return this)3.666 E
(XLFD name instead of the client-supplied name.)72 196.8 Q(This ar)72
213.7 Q(gument must be set at creation time and cannot be changed.)-.198
E(If no fonts e)5.5 E(xist for an)-.165 E 2.75(yo)-.165 G 2.75(ft)-2.75
G(he)-2.75 E(required charsets, or if the locale de\214nition in Xlib r\
equires that a font e)72 226.7 Q(xist for a particular)-.165 E
(charset and a font is not found for that charset,)72 239.7 Q F0(XCr)
3.666 E(eateOC)-.198 E F1(returns NULL.)3.666 E(When querying for the)72
256.6 Q F0(XNBaseF)3.666 E(ontName)-.275 E F1(XOC v)3.666 E(alue,)-.275
E F0(XGetOCV)3.666 E(alues)-1.012 E F1(returns a null-termi-)3.666 E(na\
ted string identifying the base font names that Xlib used to load the f\
onts needed for the locale.)72 269.6 Q(This string is o)72 282.6 Q
(wned by Xlib and should not be modi\214ed or freed by the client.)-.275
E(The string will be)5.5 E(freed by a call to)72 295.6 Q F0(XDestr)3.666
E(oyOC)-.198 E F1(with the associated)3.666 E F0(XOC)3.666 E F1 5.5(.U)
.916 G(ntil freed, the string contents will)-5.5 E
(not be modi\214ed by Xlib)72 308.6 Q(.)-.44 E F0 2.75
(13.4.5.2. Missing)72 334.6 R(CharSet)2.75 E F1(The)72 351.5 Q F0
(XNMissingCharSet)3.666 E F1(ar)3.666 E
(gument returns the list of required charsets that are missing from the)
-.198 E(font set.)72 364.5 Q(The v)5.5 E(alue of the ar)-.275 E
(gument is a pointer to a structure of type)-.198 E F0(XOMCharSetList)
3.666 E F1(.).916 E(If fonts e)72 381.4 Q(xist for all of the charsets \
required by the current locale, charset_list is set to NULL and)-.165 E
(charset_count is set to zero.)72 394.4 Q(If no fonts e)5.5 E
(xist for one or more of the required charsets, charset_list)-.165 E(is\
 set to a list of one or more null-terminated charset names for which n\
o fonts e)72 407.4 Q(xist, and)-.165 E
(charset_count is set to the number of missing charsets.)72 420.4 Q
(The charsets are from the list of the)5.5 E
(required charsets for the encoding of the locale and do not include an)
72 433.4 Q 2.75(yc)-.165 G(harsets to which Xlib)-2.75 E
(may be able to remap a required charset.)72 446.4 Q
(The missing charset list is o)72 463.3 Q
(wned by Xlib and should not be modi\214ed or freed by the client.)-.275
E(It)5.5 E(will be freed by a call to)72 476.3 Q F0(XDestr)3.666 E(oyOC)
-.198 E F1(with the associated)3.666 E F0(XOC)3.666 E F1 5.5(.U).916 G
(ntil freed, its contents will)-5.5 E(not be modi\214ed by Xlib)72 489.3
Q(.)-.44 E F0 2.75(13.4.5.3. Default)72 515.3 R(String)2.75 E F1
(When a dra)72 532.2 Q(wing or measuring function is called with an)
-.165 E F0(XOC)3.666 E F1(that has missing charsets, some)3.666 E
(characters in the locale will not be dra)72 545.2 Q -.11(wa)-.165 G
2.75(ble. The).11 F F0(XNDefaultString)3.666 E F1(ar)3.666 E
(gument returns a pointer)-.198 E
(to a string that represents the glyphs that are dra)72 558.2 Q
(wn with this)-.165 E F0(XOC)3.666 E F1(when the charsets of the a)3.666
E -.275(va)-.22 G(il-).275 E
(able fonts do not include all glyphs required to dra)72 571.2 Q 2.75
(wac)-.165 G(haracter)-2.75 E 5.5(.T)-.605 G
(he string does not necessarily)-5.5 E(consist of v)72 584.2 Q
(alid characters in the current locale and is not necessarily dra)-.275
E(wn with the fonts loaded)-.165 E(for the font set, b)72 597.2 Q
(ut the client can dra)-.22 E 2.75(wo)-.165 G 2.75(rm)-2.75 G
(easure the def)-2.75 E(ault glyphs by including this string in a)-.11 E
(string being dra)72 610.2 Q(wn or measured with the)-.165 E F0(XOC)
3.666 E F1(.).916 E(If the)72 627.1 Q F0(XNDefaultString)3.666 E F1(ar)
3.666 E(gument returned the empty string \(")-.198 E
("\), no glyphs are dra).916 E(wn and the)-.165 E(escapement is zero.)72
640.1 Q(The returned string is null-terminated.)5.5 E(It is o)5.5 E
(wned by Xlib and should not be)-.275 E
(modi\214ed or freed by the client.)72 653.1 Q
(It will be freed by a call to)5.5 E F0(XDestr)3.666 E(oyOC)-.198 E F1
(with the associated)3.666 E F0(XOC)72.916 666.1 Q F1 5.5(.U).916 G
(ntil freed, its contents will not be modi\214ed by Xlib)-5.5 E(.)-.44 E
F0 2.75(13.4.5.4. Orientation)72 692.1 R F1(The)72 709 Q F0
(XNOrientation)3.666 E F1(ar)3.666 E
(gument speci\214es the current orientation of te)-.198 E(xt when dra)
-.165 E 2.75(wn. The)-.165 F -.275(va)2.75 G(lue of).275 E(this ar)72
722 Q(gument is one of the v)-.198 E(alues returned by the)-.275 E F0
(XGetOMV)3.666 E(alues)-1.012 E F1(function with the)3.666 E F0(285)
279.75 769 Q 0 Cg EP
%%Page: 286 291
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E(XNQueryOrientation)72.916 85 Q/F1 11
/Times-Roman@0 SF(ar)3.666 E(gument speci\214ed in the)-.198 E F0
(XOrientation)3.666 E F1 2.75(list. The)3.666 F -.275(va)2.75 G
(lue of the ar).275 E(gument)-.198 E(is of type)72 98 Q F0(XOrientation)
3.666 E F1 5.5(.W).916 G(hen)-5.5 E F0(XNOrientation)3.666 E F1
(is queried, the v)3.666 E(alue speci\214es the current orien-)-.275 E
2.75(tation. When)72 111 R F0(XNOrientation)3.666 E F1(is set, a v)3.666
E(alue is used to set the current orientation.)-.275 E(When)72 127.9 Q
F0(XOMOrientation_Context)3.666 E F1(is set, the te)3.666 E
(xt orientation of the te)-.165 E(xt is determined according)-.165 E
(to an implementation-de\214ned method \(for e)72 140.9 Q
(xample, ISO 6429 control sequences\), and the initial)-.165 E(te)72
153.9 Q
(xt orientation for locale-dependent Xlib functions is assumed to be)
-.165 E F0(XOMOrienta-)3.666 E(tion_L)72 166.9 Q(TR_TTB)-1.012 E F1(.)
.916 E(The)72 183.8 Q F0(XNOrientation)3.666 E F1 -.275(va)3.666 G
(lue does not change the prime dra).275 E(wing direction for Xlib dra)
-.165 E(wing func-)-.165 E(tions.)72 196.8 Q F0 2.75(13.4.5.5. Resour)72
222.8 R(ce Name and Class)-.198 E F1(The)72 239.7 Q F0(XNResour)3.666 E
(ceName)-.198 E F1(and)3.666 E F0(XNResour)3.666 E(ceClass)-.198 E F1
(ar)3.666 E(guments are strings that specify the full name)-.198 E(and \
class used by the client to obtain resources for the display of the out\
put conte)72 252.7 Q 2.75(xt. These)-.165 F -.275(va)2.75 G(lues).275 E
(should be used as pre\214x)72 265.7 Q
(es for name and class when looking up resources that may v)-.165 E
(ary according)-.275 E(to the output conte)72 278.7 Q 2.75(xt. If)-.165
F(these v)2.75 E
(alues are not set, the resources will not be fully speci\214ed.)-.275 E
(It is not intended that v)72 295.6 Q(alues that can be set as XOM v)
-.275 E(alues be set as resources.)-.275 E(When querying for the)72
312.5 Q F0(XNResour)3.666 E(ceName)-.198 E F1(or)3.666 E F0(XNResour)
3.666 E(ceClass)-.198 E F1(XOC v)3.666 E(alue,)-.275 E F0(XGetOCV)3.666
E(alues)-1.012 E F1(returns a null-terminated string.)72 325.5 Q
(This string is o)5.5 E
(wned by Xlib and should not be modi\214ed or freed)-.275 E
(by the client.)72 338.5 Q(The string will be freed by a call to)5.5 E
F0(XDestr)3.666 E(oyOC)-.198 E F1(with the associated)3.666 E F0(XOC)
3.666 E F1(or)3.666 E(when the associated v)72 351.5 Q
(alue is changed via)-.275 E F0(XSetOCV)3.666 E(alues)-1.012 E F1 5.5
(.U).916 G(ntil freed, the string contents will)-5.5 E
(not be modi\214ed by Xlib)72 364.5 Q(.)-.44 E F0 2.75(13.4.5.6. F)72
390.5 R(ont Inf)-.275 E(o)-.275 E F1(The)72 407.4 Q F0(XNF)3.666 E
(ontInf)-.275 E(o)-.275 E F1(ar)3.666 E
(gument speci\214es a list of one or more)-.198 E F0(XF)3.666 E
(ontStruct)-.275 E F1(structures and font)3.666 E
(names for the fonts used for dra)72 420.4 Q(wing by the gi)-.165 E
-.165(ve)-.275 G 2.75(no).165 G(utput conte)-2.75 E 2.75(xt. The)-.165 F
-.275(va)2.75 G(lue of the ar).275 E(gument is a)-.198 E
(pointer to a structure of type)72 433.4 Q F0(XOMF)3.666 E(ontInf)-.275
E(o)-.275 E F1(.).916 E .44 LW 36 455.05 36 466.05 DL 36 453.05 36
464.05 DL 41.5 451.3 36 451.3 DL 43.5 451.3 38 451.3 DL 49 451.3 43.5
451.3 DL(typedef struct {)72 469.8 Q(int num_font;)108 482.8 Q(XF)108
495.8 Q(ontStruct **font_struct_list;)-.165 E(char **font_name_list;)108
508.8 Q 2.75(}X)72 521.8 S(OMF)-2.75 E(ontInfo;)-.165 E 36 523.95 36
534.95 DL 36 521.95 36 532.95 DL 41.5 533.2 36 533.2 DL 43.5 533.2 38
533.2 DL 49 533.2 43.5 533.2 DL 2.75(Al)72 558.2 S
(ist of pointers to the)-2.75 E F0(XF)3.666 E(ontStruct)-.275 E F1
(structures is returned to font_struct_list.)3.666 E 2.75(Al)5.5 G
(ist of pointers)-2.75 E(to null-terminated, fully-speci\214ed font nam\
e strings in the locale of the output conte)72 571.2 Q(xt is returned)
-.165 E(to font_name_list.)72 584.2 Q
(The font_name_list order corresponds to the font_struct_list order)5.5
E 5.5(.T)-.605 G(he num-)-5.5 E(ber of)72 597.2 Q F0(XF)3.666 E
(ontStruct)-.275 E F1
(structures and font names is returned to num_font.)3.666 E
(Because it is not guaranteed that a gi)72 614.1 Q -.165(ve)-.275 G 2.75
(nc).165 G(haracter will be imaged using a single font glyph, there)
-2.75 E(is no pro)72 627.1 Q(vision for mapping a character or def)-.165
E(ault string to the font properties, font ID, or direc-)-.11 E
(tion hint for the font for the character)72 640.1 Q 5.5(.T)-.605 G
(he client may access the)-5.5 E F0(XF)3.666 E(ontStruct)-.275 E F1
(list to obtain these)3.666 E -.275(va)72 653.1 S
(lues for all the fonts currently in use.).275 E
(Xlib does not guarantee that fonts are loaded from the serv)72 670 Q
(er at the creation of an)-.165 E F0(XOC)3.666 E F1 5.5(.X).916 G(lib)
-5.5 E(may choose to cache font data, loading it only as needed to dra)
72 683 Q 2.75(wt)-.165 G -.165(ex)-2.75 G 2.75(to).165 G 2.75(rc)-2.75 G
(ompute te)-2.75 E(xt dimensions.)-.165 E(Therefore, e)72 696 Q
(xistence of the per_char metrics in the)-.165 E F0(XF)3.666 E
(ontStruct)-.275 E F1(structures in the)3.666 E F0(XF)3.666 E
(ontStruct-)-.275 E(Set)72 709 Q F1(is unde\214ned.)3.666 E
(Also, note that all properties in the)5.5 E F0(XF)3.666 E(ontStruct)
-.275 E F1(structures are in the STRING)3.666 E(encoding.)72 722 Q F0
(286)279.75 769 Q 0 Cg EP
%%Page: 287 292
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E/F1 11/Times-Roman@0 SF
(The client must not free the)72 85 Q F0(XOMF)3.666 E(ontInf)-.275 E(o)
-.275 E F1(struct itself; it will be freed when the)3.666 E F0(XOC)3.666
E F1(is closed.)3.666 E F0 2.75(13.4.5.7. OM)72 111 R -.55(Au)2.75 G
(tomatic).55 E F1(The)72 127.9 Q F0(XNOMA)3.666 E(utomatic)-.55 E F1(ar)
3.666 E(gument returns whether the associated output conte)-.198 E(xt w)
-.165 E(as created by)-.11 E F0(XCr)72.916 140.9 Q(eateF)-.198 E(ontSet)
-.275 E F1(or not.)3.666 E(Because the)5.5 E F0(XFr)3.666 E(eeF)-.198 E
(ontSet)-.275 E F1(function not only destro)3.666 E(ys the output con-)
-.11 E(te)72 153.9 Q(xt b)-.165 E
(ut also closes the implicit output method associated with it,)-.22 E F0
(XFr)3.666 E(eeF)-.198 E(ontSet)-.275 E F1(should be used)3.666 E
(with an)72 166.9 Q 2.75(yo)-.165 G(utput conte)-2.75 E(xt created by)
-.165 E F0(XCr)3.666 E(eateF)-.198 E(ontSet)-.275 E F1 5.5(.H).916 G
-.275(ow)-5.5 G -2.365 -.275(ev e).275 H .88 -.44(r, i).275 H 2.75(ti)
.44 G 2.75(sp)-2.75 G(ossible that a client does)-2.75 E(not kno)72
179.9 Q 2.75(wh)-.275 G .55 -.275(ow t)-2.75 H(he output conte).275 E
(xt w)-.165 E(as created.)-.11 E(Before a client destro)5.5 E
(ys the output conte)-.11 E(xt, it can)-.165 E(query whether)72 192.9 Q
F0(XNOMA)3.666 E(utomatic)-.55 E F1(is set to determine whether)3.666 E
F0(XFr)3.666 E(eeF)-.198 E(ontSet)-.275 E F1(or)3.666 E F0(XDestr)3.666
E(oyOC)-.198 E F1(should be used to destro)72 205.9 Q 2.75(yt)-.11 G
(he output conte)-2.75 E(xt.)-.165 E F0 2.75(13.4.6. Cr)72 231.9 R
(eating and Fr)-.198 E(eeing a F)-.198 E(ont Set)-.275 E F1
(Xlib international te)72 248.8 Q(xt dra)-.165 E(wing is done using a s\
et of one or more fonts, as needed for the locale)-.165 E(of the te)72
261.8 Q 2.75(xt. F)-.165 F(onts are loaded according to a list of base \
font names supplied by the client and the)-.165 E
(charsets required by the locale.)72 274.8 Q(The)5.5 E F0(XF)3.666 E
(ontSet)-.275 E F1(is an opaque type representing the state of a par)
3.666 E(-)-.22 E(ticular output thread and is equi)72 287.8 Q -.275(va)
-.275 G(lent to the type).275 E F0(XOC)3.666 E F1(.).916 E(The)72 317.7
Q F0(XCr)3.666 E(eateF)-.198 E(ontSet)-.275 E F1(function is a con)3.666
E -.165(ve)-.44 G(nience function for creating an output conte).165 E
(xt using)-.165 E(only def)72 330.7 Q(ault v)-.11 E 2.75(alues. The)
-.275 F(returned)2.75 E F0(XF)3.666 E(ontSet)-.275 E F1
(has an implicitly created)3.666 E F0(XOM)3.666 E F1 5.5(.T).916 G(his)
-5.5 E F0(XOM)3.666 E F1(has an)3.666 E(OM v)72 343.7 Q(alue)-.275 E F0
(XNOMA)3.666 E(utomatic)-.55 E F1(automatically set to)3.666 E F0 -.814
(Tr)3.666 G(ue).814 E F1(so that the output conte)3.666 E
(xt self indicates)-.165 E(whether it w)72 356.7 Q(as created by)-.11 E
F0(XCr)3.666 E(eateOC)-.198 E F1(or)3.666 E F0(XCr)3.666 E(eateF)-.198 E
(ontSet)-.275 E F1(.).916 E .44 LW 36 374.45 36 385.45 DL 36 372.45 36
383.45 DL 41.5 370.7 36 370.7 DL 43.5 370.7 38 370.7 DL 49 370.7 43.5
370.7 DL(XF)72 386.6 Q(ontSet XCreateF)-.165 E -1.834(ontSet \()-.165 F
/F2 11/Times-Italic@0 SF(display).916 E F1(,).916 E F2
(base_font_name_list)2.75 E F1(,).916 E F2(missing_c)2.75 E(har)-.165 E
(set_list_r)-.11 E(eturn)-.407 E F1(,).916 E F2(missing_c)113.25 399.6 Q
(har)-.165 E(set_count_r)-.11 E(eturn)-.407 E F1(,).916 E F2
(def_string_r)2.75 E(eturn)-.407 E F1(\)).916 E(Display *)88.5 412.6 Q
F2(display)A F1(;).916 E(char *)88.5 425.6 Q F2(base_font_name_list)A F1
(;).916 E(char ***)88.5 438.6 Q F2(missing_c)A(har)-.165 E(set_list_r)
-.11 E(eturn)-.407 E F1(;).916 E(int *)88.5 451.6 Q F2(missing_c)A(har)
-.165 E(set_count_r)-.11 E(eturn)-.407 E F1(;).916 E(char **)88.5 464.6
Q F2(def_string_r)A(eturn)-.407 E F1(;).916 E F2(display)72 485.4 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2(base_font_name_list)72 502.3 Q F1(Speci\214es the base font names.)
144 515.3 Q F2(missing_c)72 532.2 Q(har)-.165 E(set_list_r)-.11 E(eturn)
-.407 E F1(Returns the missing charsets.)144 545.2 Q F2(missing_c)72
562.1 Q(har)-.165 E(set_count_r)-.11 E(eturn)-.407 E F1
(Returns the number of missing charsets.)144 575.1 Q F2(def_string_r)72
592 Q(eturn)-.407 E F1(Returns the string dra)144 605 Q
(wn for missing charsets.)-.165 E 36 600.65 36 611.65 DL 36 598.65 36
609.65 DL 41.5 609.9 36 609.9 DL 43.5 609.9 38 609.9 DL 49 609.9 43.5
609.9 DL(The)72 634.9 Q F0(XCr)3.666 E(eateF)-.198 E(ontSet)-.275 E F1
(function creates a font set for the speci\214ed display)3.666 E 5.5(.T)
-.715 G(he font set is bound)-5.5 E(to the current locale when)72 647.9
Q F0(XCr)3.666 E(eateF)-.198 E(ontSet)-.275 E F1(is called.)3.666 E
(The font set may be used in subsequent)5.5 E
(calls to obtain font and character information and to image te)72 660.9
Q(xt in the locale of the font set.)-.165 E(The base_font_name_list ar)
72 677.8 Q
(gument is a list of base font names that Xlib uses to load the fonts)
-.198 E(needed for the locale.)72 690.8 Q
(The base font names are a comma-separated list.)5.5 E
(The string is null-termi-)5.5 E(nated and is assumed to be in the Host\
 Portable Character Encoding; otherwise, the result is)72 703.8 Q 2.75
(implementation-dependent. White)72 716.8 R
(space immediately on either side of a separating comma is)2.75 E
(ignored.)72 729.8 Q F0(287)279.75 769 Q 0 Cg EP
%%Page: 288 293
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E/F1 11/Times-Roman@0 SF
(Use of XLFD font names permits Xlib to obtain the fonts needed for a v)
72 85 Q(ariety of locales from a)-.275 E
(single locale-independent base font name.)72 98 Q
(The single base font name should name a f)5.5 E(amily of)-.11 E
(fonts whose members are encoded in the v)72 111 Q
(arious charsets needed by the locales of interest.)-.275 E
(An XLFD base font name can e)72 127.9 Q
(xplicitly name a charset needed for the locale.)-.165 E(This allo)5.5 E
(ws the)-.275 E(user to specify an e)72 140.9 Q(xact font for use with \
a charset required by a locale, fully controlling the font)-.165 E
(selection.)72 153.9 Q(If a base font name is not an XLFD name, Xlib wi\
ll attempt to obtain an XLFD name from the)72 170.8 Q
(font properties for the font.)72 183.8 Q
(If this action is successful in obtaining an XLFD name, the)5.5 E F0
(XBase-)3.666 E -.275(Fo)72 196.8 S(ntNameListOfF).275 E(ontSet)-.275 E
F1(function will return this XLFD name instead of the client-supplied)
3.666 E(name.)72 209.8 Q(Xlib uses the follo)72 226.7 Q
(wing algorithm to select the fonts that will be used to display te)
-.275 E(xt with the)-.165 E F0(XF)72.916 239.7 Q(ontSet)-.275 E F1(.)
.916 E -.165(Fo)72 256.6 S 2.75(re).165 G(ach font charset required by \
the locale, the base font name list is searched for the \214rst)-2.75 E
(appearance of one of the follo)72 269.6 Q
(wing cases that names a set of fonts that e)-.275 E(xist at the serv)
-.165 E(er:)-.165 E 23.65<8354>72 286.5 S(he \214rst XLFD-conforming ba\
se font name that speci\214es the required charset or a superset)-23.65
E(of the required charset in its)99.5 299.5 Q F0(CharSetRegistry)3.666 E
F1(and)3.666 E F0(CharSetEncoding)3.666 E F1 2.75(\214elds. The)3.666 F
(imple-)2.75 E(mentation may use a base font name whose speci\214ed cha\
rset is a superset of the required)99.5 312.5 Q(charset, for e)99.5
325.5 Q(xample, an ISO8859-1 font for an ASCII charset.)-.165 E 23.65
<8354>72 342.4 S(he \214rst set of one or more XLFD-conforming base fon\
t names that specify one or more)-23.65 E
(charsets that can be remapped to support the required charset.)99.5
355.4 Q(The Xlib implementation)5.5 E(may recognize v)99.5 368.4 Q(ario\
us mappings from a required charset to one or more other charsets and)
-.275 E(use the fonts for those charsets.)99.5 381.4 Q -.165(Fo)5.5 G
2.75(re).165 G(xample, JIS Roman is ASCII with tilde and backslash)
-2.915 E(replaced by yen and o)99.5 394.4 Q -.165(ve)-.165 G
(rbar; Xlib may load an ISO8859-1 font to support this character set)
.165 E(if a JIS Roman font is not a)99.5 407.4 Q -.275(va)-.22 G
(ilable.).275 E 23.65<8354>72 424.3 S(he \214rst XLFD-conforming font n\
ame or the \214rst non-XLFD font name for which an)-23.65 E(XLFD font n\
ame can be obtained, combined with the required charset \(replacing the)
99.5 437.3 Q F0(CharSetRegistry)100.416 450.3 Q F1(and)3.666 E F0
(CharSetEncoding)3.666 E F1(\214elds in the XLFD font name\).)3.666 E
(As in case 1,)5.5 E(the implementation may use a charset that is a sup\
erset of the required charset.)99.5 463.3 Q 23.65<8354>72 480.2 S(he \
\214rst font name that can be mapped in some implementation-dependent m\
anner to one)-23.65 E(or more fonts that support imaging te)99.5 493.2 Q
(xt in the charset.)-.165 E -.165(Fo)72 510.1 S 2.75(re).165 G
(xample, assume that a locale required the charsets:)-2.915 E(ISO8859-1)
72 533.5 Q(JISX0208.1983)72 546.5 Q(JISX0201.1976)72 559.5 Q
(GB2312-1980.0)72 572.5 Q
(The user could supply a base_font_name_list that e)72 595.9 Q
(xplicitly speci\214es the charsets, ensuring that)-.165 E
(speci\214c fonts are used if the)72 608.9 Q 2.75(ye)-.165 G 2.75
(xist. F)-2.915 F(or e)-.165 E(xample:)-.165 E("-JIS-Fix)72 632.3 Q
(ed-Medium-R-Normal--26-180-100-100-C-240-JISX0208.1983-0,\\)-.165 E
(-JIS-Fix)72 645.3 Q
(ed-Medium-R-Normal--26-180-100-100-C-120-JISX0201.1976-0,\\)-.165 E
(-GB-Fix)72 658.3 Q
(ed-Medium-R-Normal--26-180-100-100-C-240-GB2312-1980.0,\\)-.165 E
(-Adobe-Courier)72 671.3 Q
(-Bold-R-Normal--25-180-75-75-M-150-ISO8859-1")-.22 E(Alternati)72 694.7
Q -.165(ve)-.275 G(ly).165 E 2.75(,t)-.715 G(he user could supply a bas\
e_font_name_list that omits the charsets, letting Xlib)-2.75 E
(select font charsets required for the locale.)72 707.7 Q -.165(Fo)5.5 G
2.75(re).165 G(xample:)-2.915 E F0(288)279.75 769 Q 0 Cg EP
%%Page: 289 294
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E/F1 11/Times-Roman@0 SF("-JIS-Fix)72 85
Q(ed-Medium-R-Normal--26-180-100-100-C-240,\\)-.165 E(-JIS-Fix)72 98 Q
(ed-Medium-R-Normal--26-180-100-100-C-120,\\)-.165 E(-GB-Fix)72 111 Q
(ed-Medium-R-Normal--26-180-100-100-C-240,\\)-.165 E(-Adobe-Courier)72
124 Q(-Bold-R-Normal--25-180-100-100-M-150")-.22 E(Alternati)72 147.4 Q
-.165(ve)-.275 G(ly).165 E 2.75(,t)-.715 G
(he user could simply supply a single base font name that allo)-2.75 E
(ws Xlib to select from)-.275 E(all a)72 160.4 Q -.275(va)-.22 G
(ilable fonts that meet certain minimum XLFD property requirements.).275
E -.165(Fo)5.5 G 2.75(re).165 G(xample:)-2.915 E
("-*-*-*-R-Normal--*-180-100-100-*-*")72 183.8 Q(If)72 207.2 Q F0(XCr)
3.666 E(eateF)-.198 E(ontSet)-.275 E F1
(is unable to create the font set, either because there is insuf)3.666 E
(\214cient memory or)-.275 E
(because the current locale is not supported,)72 220.2 Q F0(XCr)3.666 E
(eateF)-.198 E(ontSet)-.275 E F1(returns NULL, miss-)3.666 E(ing_charse\
t_list_return is set to NULL, and missing_charset_count_return is set t\
o zero.)72 233.2 Q(If fonts)5.5 E -.165(ex)72 246.2 S
(ist for all of the charsets required by the current locale,).165 E F0
(XCr)3.666 E(eateF)-.198 E(ontSet)-.275 E F1(returns a v)3.666 E(alid)
-.275 E F0(XF)72.916 259.2 Q(ontSet)-.275 E F1 2.75(,m).916 G(issing_ch\
arset_list_return is set to NULL, and missing_charset_count_return is s\
et)-2.75 E(to zero.)72 272.2 Q(If no font e)72 289.1 Q
(xists for one or more of the required charsets,)-.165 E F0(XCr)3.666 E
(eateF)-.198 E(ontSet)-.275 E F1(sets miss-)3.666 E(ing_charset_list_re\
turn to a list of one or more null-terminated charset names for which n\
o font)72 302.1 Q -.165(ex)72 315.1 S(ists and sets missing_charset_cou\
nt_return to the number of missing fonts.).165 E(The charsets are)5.5 E
(from the list of the required charsets for the encoding of the locale \
and do not include an)72 328.1 Q(y)-.165 E
(charsets to which Xlib may be able to remap a required charset.)72
341.1 Q(If no font e)72 358 Q(xists for an)-.165 E 2.75(yo)-.165 G 2.75
(ft)-2.75 G(he required charsets or if the locale de\214nition in Xlib \
requires that a)-2.75 E(font e)72 371 Q(xist for a particular charset a\
nd a font is not found for that charset,)-.165 E F0(XCr)3.666 E(eateF)
-.198 E(ontSet)-.275 E F1(returns)3.666 E 2.75(NULL. Otherwise,)72 384 R
F0(XCr)3.666 E(eateF)-.198 E(ontSet)-.275 E F1(returns a v)3.666 E(alid)
-.275 E F0(XF)3.666 E(ontSet)-.275 E F1(to font_set.)3.666 E
(When an Xmb/wc/utf8 dra)72 400.9 Q
(wing or measuring function is called with an)-.165 E F0(XF)3.666 E
(ontSet)-.275 E F1(that has miss-)3.666 E
(ing charsets, some characters in the locale will not be dra)72 413.9 Q
-.11(wa)-.165 G 2.75(ble. If).11 F(def_string_return is non-)2.75 E
(NULL,)72 426.9 Q F0(XCr)3.666 E(eateF)-.198 E(ontSet)-.275 E F1
(returns a pointer to a string that represents the glyphs that are dra)
3.666 E(wn)-.165 E(with this)72 439.9 Q F0(XF)3.666 E(ontSet)-.275 E F1
(when the charsets of the a)3.666 E -.275(va)-.22 G
(ilable fonts do not include all font glyphs).275 E(required to dra)72
452.9 Q 2.75(wac)-.165 G 2.75(odepoint. The)-2.75 F
(string does not necessarily consist of v)2.75 E(alid characters in the)
-.275 E(current locale and is not necessarily dra)72 465.9 Q
(wn with the fonts loaded for the font set, b)-.165 E(ut the client can)
-.22 E(dra)72 478.9 Q 2.75(wa)-.165 G(nd measure the def)-2.75 E
(ault glyphs by including this string in a string being dra)-.11 E
(wn or measured)-.165 E(with the)72 491.9 Q F0(XF)3.666 E(ontSet)-.275 E
F1(.).916 E
(If the string returned to def_string_return is the empty string \(")72
508.8 Q("\), no glyphs are dra).916 E(wn, and the)-.165 E
(escapement is zero.)72 521.8 Q(The returned string is null-terminated.)
5.5 E(It is o)5.5 E(wned by Xlib and should not be)-.275 E
(modi\214ed or freed by the client.)72 534.8 Q
(It will be freed by a call to)5.5 E F0(XFr)3.666 E(eeF)-.198 E(ontSet)
-.275 E F1(with the associated)3.666 E F0(XF)72.916 547.8 Q(ontSet)-.275
E F1 5.5(.U).916 G
(ntil freed, its contents will not be modi\214ed by Xlib)-5.5 E(.)-.44 E
(The client is responsible for constructing an error message from the m\
issing charset and def)72 564.7 Q(ault)-.11 E(string information and ma\
y choose to continue operation in the case that some fonts did not e)72
577.7 Q(xist.)-.165 E(The returned)72 594.6 Q F0(XF)3.666 E(ontSet)-.275
E F1(and missing charset list should be freed with)3.666 E F0(XFr)3.666
E(eeF)-.198 E(ontSet)-.275 E F1(and)3.666 E F0(XFr)72.916 607.6 Q
(eeStringList)-.198 E F1 2.75(,r).916 G(especti)-2.75 E -.165(ve)-.275 G
(ly).165 E 5.5(.T)-.715 G
(he client-supplied base_font_name_list may be freed by the)-5.5 E
(client after calling)72 620.6 Q F0(XCr)3.666 E(eateF)-.198 E(ontSet)
-.275 E F1(.).916 E 1.76 -.88(To o)72 650.5 T(btain a list of).88 E F0
(XF)3.666 E(ontStruct)-.275 E F1(structures and full font names gi)3.666
E -.165(ve)-.275 G 2.75(na).165 G(n)-2.75 E F0(XF)3.666 E(ontSet)-.275 E
F1 2.75(,u).916 G(se)-2.75 E F0(XF)72.916 663.5 Q(ontsOfF)-.275 E
(ontSet)-.275 E F1(.).916 E F0(289)279.75 769 Q 0 Cg EP
%%Page: 290 295
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E .44 LW 36 76.75 36 87.75 DL 36 74.75
36 85.75 DL 41.5 73 36 73 DL 43.5 73 38 73 DL 49 73 43.5 73 DL/F1 11
/Times-Roman@0 SF(int XF)72 88.9 Q(ontsOfF)-.165 E -1.834(ontSet \()
-.165 F/F2 11/Times-Italic@0 SF(font_set).916 E F1(,).916 E F2
(font_struct_list_r)2.75 E(eturn)-.407 E F1(,).916 E F2
(font_name_list_r)2.75 E(eturn)-.407 E F1(\)).916 E(XF)91.25 101.9 Q
(ontSet)-.165 E F2(font_set)2.75 E F1(;).916 E(XF)91.25 114.9 Q
(ontStruct ***)-.165 E F2(font_struct_list_r)A(eturn)-.407 E F1(;).916 E
(char ***)91.25 127.9 Q F2(font_name_list_r)A(eturn)-.407 E F1(;).916 E
F2(font_set)72 148.7 Q F1(Speci\214es the font set.)37.163 E F2
(font_struct_list_r)72 165.6 Q(eturn)-.407 E F1
(Returns the list of font structs.)144 178.6 Q F2(font_name_list_r)72
195.5 Q(eturn)-.407 E F1(Returns the list of font names.)144 208.5 Q 36
204.15 36 215.15 DL 36 202.15 36 213.15 DL 41.5 213.4 36 213.4 DL 43.5
213.4 38 213.4 DL 49 213.4 43.5 213.4 DL(The)72 238.4 Q F0(XF)3.666 E
(ontsOfF)-.275 E(ontSet)-.275 E F1
(function returns a list of one or more)3.666 E F0(XF)3.666 E
(ontStructs)-.275 E F1(and font names for)3.666 E
(the fonts used by the Xmb/wc/utf8 layer for the gi)72 251.4 Q -.165(ve)
-.275 G 2.75(nf).165 G(ont set.)-2.75 E 2.75(Al)5.5 G
(ist of pointers to the)-2.75 E F0(XF)72.916 264.4 Q(ontStruct)-.275 E
F1(structures is returned to font_struct_list_return.)3.666 E 2.75(Al)
5.5 G(ist of pointers to null-termi-)-2.75 E(nated, fully speci\214ed f\
ont name strings in the locale of the font set is returned to)72 277.4 Q
2.75(font_name_list_return. The)72 290.4 R
(font_name_list order corresponds to the font_struct_list order)2.75 E
5.5(.T)-.605 G(he)-5.5 E(number of)72 303.4 Q F0(XF)3.666 E(ontStruct)
-.275 E F1(structures and font names is returned as the v)3.666 E
(alue of the function.)-.275 E(Because it is not guaranteed that a gi)72
320.3 Q -.165(ve)-.275 G 2.75(nc).165 G
(haracter will be imaged using a single font glyph, there)-2.75 E
(is no pro)72 333.3 Q(vision for mapping a character or def)-.165 E
(ault string to the font properties, font ID, or direc-)-.11 E
(tion hint for the font for the character)72 346.3 Q 5.5(.T)-.605 G
(he client may access the)-5.5 E F0(XF)3.666 E(ontStruct)-.275 E F1
(list to obtain these)3.666 E -.275(va)72 359.3 S
(lues for all the fonts currently in use.).275 E
(Xlib does not guarantee that fonts are loaded from the serv)72 376.2 Q
(er at the creation of an)-.165 E F0(XF)3.666 E(ontSet)-.275 E F1(.).916
E(Xlib may choose to cache font data, loading it only as needed to dra)
72 389.2 Q 2.75(wt)-.165 G -.165(ex)-2.75 G 2.75(to).165 G 2.75(rc)-2.75
G(ompute te)-2.75 E(xt dimen-)-.165 E 2.75(sions. Therefore,)72 402.2 R
-.165(ex)2.75 G(istence of the per_char metrics in the).165 E F0(XF)
3.666 E(ontStruct)-.275 E F1(structures in the)3.666 E F0(XF)72.916
415.2 Q(ontStructSet)-.275 E F1(is unde\214ned.)3.666 E
(Also, note that all properties in the)5.5 E F0(XF)3.666 E(ontStruct)
-.275 E F1(structures are in)3.666 E(the STRING encoding.)72 428.2 Q
(The)72 445.1 Q F0(XF)3.666 E(ontStruct)-.275 E F1
(and font name lists are o)3.666 E
(wned by Xlib and should not be modi\214ed or freed by)-.275 E
(the client.)72 458.1 Q(The)5.5 E 2.75(yw)-.165 G
(ill be freed by a call to)-2.75 E F0(XFr)3.666 E(eeF)-.198 E(ontSet)
-.275 E F1(with the associated)3.666 E F0(XF)3.666 E(ontSet)-.275 E F1
5.5(.U).916 G(ntil)-5.5 E
(freed, their contents will not be modi\214ed by Xlib)72 471.1 Q(.)-.44
E 1.76 -.88(To o)72 501 T
(btain the base font name list and the selected font name list gi).88 E
-.165(ve)-.275 G 2.75(na).165 G(n)-2.75 E F0(XF)3.666 E(ontSet)-.275 E
F1 2.75(,u).916 G(se)-2.75 E F0(XBase-)3.666 E -.275(Fo)72 514 S
(ntNameListOfF).275 E(ontSet)-.275 E F1(.).916 E 36 531.75 36 542.75 DL
36 529.75 36 540.75 DL 41.5 528 36 528 DL 43.5 528 38 528 DL 49 528 43.5
528 DL(char *XBaseF)72 543.9 Q(ontNameListOfF)-.165 E -1.834(ontSet \()
-.165 F F2(font_set).916 E F1(\)).916 E(XF)88.5 556.9 Q(ontSet)-.165 E
F2(font_set)2.75 E F1(;).916 E F2(font_set)72 577.7 Q F1
(Speci\214es the font set.)37.163 E 36 573.35 36 584.35 DL 36 571.35 36
582.35 DL 41.5 582.6 36 582.6 DL 43.5 582.6 38 582.6 DL 49 582.6 43.5
582.6 DL(The)72 607.6 Q F0(XBaseF)3.666 E(ontNameListOfF)-.275 E(ontSet)
-.275 E F1(function returns the original base font name list supplied)
3.666 E(by the client when the)72 620.6 Q F0(XF)3.666 E(ontSet)-.275 E
F1 -.11(wa)3.666 G 2.75(sc).11 G 2.75(reated. A)-2.75 F
(null-terminated string containing a list of)2.75 E
(comma-separated font names is returned as the v)72 633.6 Q
(alue of the function.)-.275 E(White space may appear)5.5 E
(immediately on either side of separating commas.)72 646.6 Q(If)72 663.5
Q F0(XCr)3.666 E(eateF)-.198 E(ontSet)-.275 E F1(obtained an XLFD name \
from the font properties for the font speci\214ed by a)3.666 E
(non-XLFD base name, the)72 676.5 Q F0(XBaseF)3.666 E(ontNameListOfF)
-.275 E(ontSet)-.275 E F1(function will return the XLFD name)3.666 E
(instead of the non-XLFD base name.)72 689.5 Q
(The base font name list is o)72 706.4 Q
(wned by Xlib and should not be modi\214ed or freed by the client.)-.275
E(It)5.5 E(will be freed by a call to)72 719.4 Q F0(XFr)3.666 E(eeF)
-.198 E(ontSet)-.275 E F1(with the associated)3.666 E F0(XF)3.666 E
(ontSet)-.275 E F1 5.5(.U).916 G(ntil freed, its contents)-5.5 E
(will not be modi\214ed by Xlib)72 732.4 Q(.)-.44 E F0(290)279.75 769 Q
0 Cg EP
%%Page: 291 296
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E/F1 11/Times-Roman@0 SF 1.76 -.88(To o)
72 85 T(btain the locale name gi).88 E -.165(ve)-.275 G 2.75(na).165 G
(n)-2.75 E F0(XF)3.666 E(ontSet)-.275 E F1 2.75(,u).916 G(se)-2.75 E F0
(XLocaleOfF)3.666 E(ontSet)-.275 E F1(.).916 E .44 LW 36 102.75 36
113.75 DL 36 100.75 36 111.75 DL 41.5 99 36 99 DL 43.5 99 38 99 DL 49 99
43.5 99 DL(char *XLocaleOfF)72 114.9 Q -1.834(ontSet \()-.165 F/F2 11
/Times-Italic@0 SF(font_set).916 E F1(\)).916 E(XF)88.5 127.9 Q(ontSet)
-.165 E F2(font_set)2.75 E F1(;).916 E F2(font_set)72 148.7 Q F1
(Speci\214es the font set.)37.163 E 36 144.35 36 155.35 DL 36 142.35 36
153.35 DL 41.5 153.6 36 153.6 DL 43.5 153.6 38 153.6 DL 49 153.6 43.5
153.6 DL(The)72 178.6 Q F0(XLocaleOfF)3.666 E(ontSet)-.275 E F1
(function returns the name of the locale bound to the speci\214ed)3.666
E F0(XF)72.916 191.6 Q(ontSet)-.275 E F1 2.75(,a).916 G 2.75(san)-2.75 G
(ull-terminated string.)-2.75 E(The returned locale name string is o)72
208.5 Q(wned by Xlib and should not be modi\214ed or freed by the)-.275
E 2.75(client. It)72 221.5 R(may be freed by a call to)2.75 E F0(XFr)
3.666 E(eeF)-.198 E(ontSet)-.275 E F1(with the associated)3.666 E F0(XF)
3.666 E(ontSet)-.275 E F1 5.5(.U).916 G(ntil freed, it)-5.5 E
(will not be modi\214ed by Xlib)72 234.5 Q(.)-.44 E(The)72 264.4 Q F0
(XFr)3.666 E(eeF)-.198 E(ontSet)-.275 E F1(function is a con)3.666 E
-.165(ve)-.44 G(nience function for freeing an output conte).165 E(xt.)
-.165 E F0(XFr)6.416 E(ee-)-.198 E -.275(Fo)72 277.4 S(ntSet).275 E F1
(also frees its associated)3.666 E F0(XOM)3.666 E F1
(if the output conte)3.666 E(xt w)-.165 E(as created by)-.11 E F0(XCr)
3.666 E(eateF)-.198 E(ontSet)-.275 E F1(.).916 E 36 295.15 36 306.15 DL
36 293.15 36 304.15 DL 41.5 291.4 36 291.4 DL 43.5 291.4 38 291.4 DL 49
291.4 43.5 291.4 DL -.22(vo)72 307.3 S(id XFreeF).22 E -1.834(ontSet \()
-.165 F F2(display).916 E F1(,).916 E F2(font_set)2.75 E F1(\)).916 E
(Display *)88.5 320.3 Q F2(display)A F1(;).916 E(XF)88.5 333.3 Q(ontSet)
-.165 E F2(font_set)2.75 E F1(;).916 E F2(display)72 354.1 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2(font_set)72 371 Q F1(Speci\214es the font set.)37.163 E 36 366.65 36
377.65 DL 36 364.65 36 375.65 DL 41.5 375.9 36 375.9 DL 43.5 375.9 38
375.9 DL 49 375.9 43.5 375.9 DL(The)72 400.9 Q F0(XFr)3.666 E(eeF)-.198
E(ontSet)-.275 E F1(function frees the speci\214ed font set.)3.666 E
(The associated base font name list, font)5.5 E(name list,)72 413.9 Q F0
(XF)3.666 E(ontStruct)-.275 E F1(list, and)3.666 E F0(XF)3.666 E
(ontSetExtents)-.275 E F1 2.75(,i).916 G 2.75(fa)-2.75 G -.165(ny)-2.75
G 2.75(,a)-.55 G(re freed.)-2.75 E F0 2.75(13.4.7. Obtaining)72 439.9 R
-.275(Fo)2.75 G(nt Set Metrics).275 E F1
(Metrics for the internationalized te)72 456.8 Q(xt dra)-.165 E
(wing functions are de\214ned in terms of a primary dra)-.165 E(w)-.165
E(direction, which is the def)72 469.8 Q
(ault direction in which the character origin adv)-.11 E
(ances for each succeed-)-.275 E(ing character in the string.)72 482.8 Q
(The Xlib interf)5.5 E
(ace is currently de\214ned to support only a left-to-right)-.11 E
(primary dra)72 495.8 Q 2.75(wd)-.165 G 2.75(irection. The)-2.75 F(dra)
2.75 E(wing origin is the position passed to the dra)-.165 E
(wing function when)-.165 E(the te)72 508.8 Q(xt is dra)-.165 E 2.75
(wn. The)-.165 F(baseline is a line dra)2.75 E(wn through the dra)-.165
E(wing origin parallel to the primary)-.165 E(dra)72 521.8 Q 2.75(wd)
-.165 G 2.75(irection. Character)-2.75 F(ink is the pix)2.75 E
(els painted in the fore)-.165 E(ground color and does not include)-.165
E(interline or intercharacter spacing or image te)72 534.8 Q
(xt background pix)-.165 E(els.)-.165 E(The dra)72 551.7 Q
(wing functions are allo)-.165 E(wed to implement implicit te)-.275 E
(xt directionality control, re)-.165 E -.165(ve)-.275 G(rsing the).165 E
(order in which characters are rendered along the primary dra)72 564.7 Q
2.75(wd)-.165 G(irection in response to locale-spe-)-2.75 E(ci\214c le)
72 577.7 Q(xical analysis of the string.)-.165 E(Re)72 594.6 Q -.055(ga)
-.165 G(rdless of the character rendering order).055 E 2.75(,t)-.44 G
(he origins of all characters are on the primary dra)-2.75 E(w)-.165 E
(direction side of the dra)72 607.6 Q(wing origin.)-.165 E
(The screen location of a particular character image may be)5.5 E
(determined with)72 620.6 Q F0(XmbT)3.666 E(extP)-1.012 E(erCharExtents)
-.22 E F1(,).916 E F0(XwcT)3.666 E(extP)-1.012 E(erCharExtents)-.22 E F1
(or)3.666 E F0(Xutf8T)3.666 E(extP)-1.012 E(er)-.22 E(-)-.407 E
(CharExtents)72 633.6 Q F1(.).916 E(The dra)72 650.5 Q
(wing functions are allo)-.165 E(wed to implement conte)-.275 E
(xt-dependent rendering, where the glyphs)-.165 E(dra)72 663.5 Q(wn for\
 a string are not simply a concatenation of the glyphs that represent e\
ach indi)-.165 E(vidual)-.275 E(character)72 676.5 Q 5.5(.A)-.605 G
(string of tw)-2.75 E 2.75(oc)-.11 G(haracters dra)-2.75 E(wn with)-.165
E F0(XmbDrawString)3.666 E F1(may render dif)3.666 E(ferently than if)
-.275 E(the tw)72 689.5 Q 2.75(oc)-.11 G(haracters were dra)-2.75 E
(wn with separate calls to)-.165 E F0(XmbDrawString)3.666 E F1 5.5(.I)
.916 G 2.75(ft)-5.5 G(he client appends or)-2.75 E
(inserts a character in a pre)72 702.5 Q(viously dra)-.275 E
(wn string, the client may need to redra)-.165 E 2.75(ws)-.165 G
(ome adjacent char)-2.75 E(-)-.22 E(acters to obtain proper rendering.)
72 715.5 Q F0(291)279.75 769 Q 0 Cg EP
%%Page: 292 297
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E/F1 11/Times-Roman@0 SF 1.76 -.88
(To \214)72 85 T(nd out about direction-dependent rendering, use).88 E
F0(XDir)3.666 E(ectionalDependentDrawing)-.198 E F1(.).916 E .44 LW 36
102.75 36 113.75 DL 36 100.75 36 111.75 DL 41.5 99 36 99 DL 43.5 99 38
99 DL 49 99 43.5 99 DL(Bool XDirectionalDependentDra)72 114.9 Q -1.834
(wing \()-.165 F/F2 11/Times-Italic@0 SF(font_set).916 E F1(\)).916 E
(XF)88.5 127.9 Q(ontSet)-.165 E F2(font_set)2.75 E F1(;).916 E F2
(font_set)72 148.7 Q F1(Speci\214es the font set.)37.163 E 36 144.35 36
155.35 DL 36 142.35 36 153.35 DL 41.5 153.6 36 153.6 DL 43.5 153.6 38
153.6 DL 49 153.6 43.5 153.6 DL(The)72 178.6 Q F0(XDir)3.666 E
(ectionalDependentDrawing)-.198 E F1(function returns)3.666 E F0 -.814
(Tr)3.666 G(ue).814 E F1(if the dra)3.666 E(wing functions implement)
-.165 E(implicit te)72 191.6 Q(xt directionality; otherwise, it returns)
-.165 E F0 -.275(Fa)3.666 G(lse).275 E F1(.).916 E 1.76 -.88(To \214)72
221.5 T(nd out about conte).88 E(xt-dependent rendering, use)-.165 E F0
(XContextualDrawing)3.666 E F1(.).916 E 36 239.25 36 250.25 DL 36 237.25
36 248.25 DL 41.5 235.5 36 235.5 DL 43.5 235.5 38 235.5 DL 49 235.5 43.5
235.5 DL(Bool XConte)72 251.4 Q(xtualDra)-.165 E -1.834(wing \()-.165 F
F2(font_set).916 E F1(\)).916 E(XF)88.5 264.4 Q(ontSet)-.165 E F2
(font_set)2.75 E F1(;).916 E F2(font_set)72 285.2 Q F1
(Speci\214es the font set.)37.163 E 36 280.85 36 291.85 DL 36 278.85 36
289.85 DL 41.5 290.1 36 290.1 DL 43.5 290.1 38 290.1 DL 49 290.1 43.5
290.1 DL(The)72 315.1 Q F0(XContextualDrawing)3.666 E F1
(function returns)3.666 E F0 -.814(Tr)3.666 G(ue).814 E F1(if te)3.666 E
(xt dra)-.165 E(wn with the font set might include)-.165 E(conte)72
328.1 Q(xt-dependent dra)-.165 E(wing; otherwise, it returns)-.165 E F0
-.275(Fa)3.666 G(lse).275 E F1(.).916 E 1.76 -.88(To \214)72 358 T
(nd out about conte).88 E
(xt-dependent or direction-dependent rendering, use)-.165 E F0
(XContextDependent-)3.666 E(Drawing)72 371 Q F1(.).916 E 36 388.75 36
399.75 DL 36 386.75 36 397.75 DL 41.5 385 36 385 DL 43.5 385 38 385 DL
49 385 43.5 385 DL(Bool XConte)72 400.9 Q(xtDependentDra)-.165 E -1.834
(wing \()-.165 F F2(font_set).916 E F1(\)).916 E(XF)88.5 413.9 Q(ontSet)
-.165 E F2(font_set)2.75 E F1(;).916 E F2(font_set)72 434.7 Q F1
(Speci\214es the font set.)37.163 E 36 430.35 36 441.35 DL 36 428.35 36
439.35 DL 41.5 439.6 36 439.6 DL 43.5 439.6 38 439.6 DL 49 439.6 43.5
439.6 DL(The)72 464.6 Q F0(XContextDependentDrawing)3.666 E F1
(function returns)3.666 E F0 -.814(Tr)3.666 G(ue).814 E F1(if the dra)
3.666 E(wing functions implement)-.165 E(implicit te)72 477.6 Q
(xt directionality or if te)-.165 E(xt dra)-.165 E
(wn with the font_set might include conte)-.165 E(xt-dependent)-.165 E
(dra)72 490.6 Q(wing; otherwise, it returns)-.165 E F0 -.275(Fa)3.666 G
(lse).275 E F1(.).916 E(The dra)72 507.5 Q
(wing functions do not interpret ne)-.165 E
(wline, tab, or other control characters.)-.275 E(The beha)5.5 E(vior)
-.22 E(when nonprinting characters other than space are dra)72 520.5 Q
(wn is implementation-dependent.)-.165 E(It is the)5.5 E(client')72
533.5 Q 2.75(sr)-.605 G
(esponsibility to interpret control characters in a te)-2.75 E
(xt stream.)-.165 E(The maximum character e)72 550.4 Q
(xtents for the fonts that are used by the te)-.165 E(xt dra)-.165 E
(wing layers can be)-.165 E(accessed by the)72 563.4 Q F0(XF)3.666 E
(ontSetExtents)-.275 E F1(structure:)3.666 E(typedef struct {)72 586.8 Q
(XRectangle max_ink_e)108 599.8 Q 48.792(xtent; /*)-.165 F -.165(ove)
2.75 G 2.75(ra).165 G(ll dra)-2.75 E -.11(wa)-.165 G(ble characters */)
.11 E(XRectangle max_logical_e)108 612.8 Q 32.908(xtent; /*)-.165 F
-.165(ove)2.75 G 2.75(ra).165 G(ll dra)-2.75 E -.11(wa)-.165 G
(ble characters */).11 E 2.75(}X)72 625.8 S -.165(Fo)-2.75 G
(ntSetExtents;).165 E(The)72 649.2 Q F0(XRectangle)3.666 E F1(structure\
s used to return font set metrics are the usual Xlib screen-oriented re\
c-)3.666 E(tangles with x, y gi)72 662.2 Q(ving the upper left corner)
-.275 E 2.75(,a)-.44 G(nd width and height al)-2.75 E -.11(wa)-.11 G
(ys positi).11 E -.165(ve)-.275 G(.).165 E(The max_ink_e)72 679.1 Q
(xtent member gi)-.165 E -.165(ve)-.275 G 2.75(st).165 G(he maximum e)
-2.75 E(xtent, o)-.165 E -.165(ve)-.165 G 2.75(ra).165 G(ll dra)-2.75 E
-.11(wa)-.165 G(ble characters, of the rec-).11 E
(tangles that bound the character glyph image dra)72 692.1 Q
(wn in the fore)-.165 E(ground color)-.165 E 2.75(,r)-.44 G(elati)-2.75
E .33 -.165(ve t)-.275 H 2.75(oac).165 G(onstant)-2.75 E 2.75
(origin. See)72 705.1 R F0(XmbT)3.666 E(extExtents)-1.012 E F1(,).916 E
F0(XwcT)3.666 E(extExtents)-1.012 E F1(and)3.666 E F0(Xutf8T)3.666 E
(extExtents)-1.012 E F1(for detailed semantics.)3.666 E F0(292)279.75
769 Q 0 Cg EP
%%Page: 293 298
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E/F1 11/Times-Roman@0 SF
(The max_logical_e)72 85 Q(xtent member gi)-.165 E -.165(ve)-.275 G 2.75
(st).165 G(he maximum e)-2.75 E(xtent, o)-.165 E -.165(ve)-.165 G 2.75
(ra).165 G(ll dra)-2.75 E -.11(wa)-.165 G(ble characters, of the).11 E(\
rectangles that specify minimum spacing to other graphical features, re\
lati)72 98 Q .33 -.165(ve t)-.275 H 2.75(oac).165 G(onstant origin.)
-2.75 E(Other graphical features dra)72 111 Q(wn by the client, for e)
-.165 E(xample, a border surrounding the te)-.165 E(xt, should)-.165 E
(not intersect this rectangle.)72 124 Q(The max_logical_e)5.5 E
(xtent member should be used to compute mini-)-.165 E
(mum interline spacing and the minimum area that must be allo)72 137 Q
(wed in a te)-.275 E(xt \214eld to dra)-.165 E 2.75(wag)-.165 G -2.365
-.275(iv e)-2.75 H(n).275 E(number of arbitrary characters.)72 150 Q
(Due to conte)72 166.9 Q(xt-dependent rendering, appending a gi)-.165 E
-.165(ve)-.275 G 2.75(nc).165 G(haracter to a string may change the)
-2.75 E(string')72 179.9 Q 2.75(se)-.605 G
(xtent by an amount other than that character')-2.915 E 2.75(si)-.605 G
(ndi)-2.75 E(vidual e)-.275 E(xtent.)-.165 E(The rectangles for a gi)72
196.8 Q -.165(ve)-.275 G 2.75(nc).165 G
(haracter in a string can be obtained from)-2.75 E F0(XmbP)3.666 E
(erCharExtents)-.22 E F1(,).916 E F0(XwcP)72.916 209.8 Q(erCharExtents)
-.22 E F1(or)3.666 E F0(Xutf8P)3.666 E(erCharExtents)-.22 E F1(.).916 E
1.76 -.88(To o)72 239.7 T(btain the maximum e).88 E(xtents structure gi)
-.165 E -.165(ve)-.275 G 2.75(na).165 G(n)-2.75 E F0(XF)3.666 E(ontSet)
-.275 E F1 2.75(,u).916 G(se)-2.75 E F0(XExtentsOfF)3.666 E(ontSet)-.275
E F1(.).916 E .44 LW 36 257.45 36 268.45 DL 36 255.45 36 266.45 DL 41.5
253.7 36 253.7 DL 43.5 253.7 38 253.7 DL 49 253.7 43.5 253.7 DL(XF)72
269.6 Q(ontSetExtents *XExtentsOfF)-.165 E -1.834(ontSet \()-.165 F/F2
11/Times-Italic@0 SF(font_set).916 E F1(\)).916 E(XF)91.25 282.6 Q
(ontSet)-.165 E F2(font_set)2.75 E F1(;).916 E F2(font_set)72 303.4 Q F1
(Speci\214es the font set.)37.163 E 36 299.05 36 310.05 DL 36 297.05 36
308.05 DL 41.5 308.3 36 308.3 DL 43.5 308.3 38 308.3 DL 49 308.3 43.5
308.3 DL(The)72 333.3 Q F0(XExtentsOfF)3.666 E(ontSet)-.275 E F1
(function returns an)3.666 E F0(XF)3.666 E(ontSetExtents)-.275 E F1
(structure for the fonts used by)3.666 E
(the Xmb/wc/utf8 layer for the gi)72 346.3 Q -.165(ve)-.275 G 2.75(nf)
.165 G(ont set.)-2.75 E(The)72 363.2 Q F0(XF)3.666 E(ontSetExtents)-.275
E F1(structure is o)3.666 E
(wned by Xlib and should not be modi\214ed or freed by the)-.275 E 2.75
(client. It)72 376.2 R(will be freed by a call to)2.75 E F0(XFr)3.666 E
(eeF)-.198 E(ontSet)-.275 E F1(with the associated)3.666 E F0(XF)3.666 E
(ontSet)-.275 E F1 5.5(.U).916 G(ntil freed, its)-5.5 E
(contents will not be modi\214ed by Xlib)72 389.2 Q(.)-.44 E 1.76 -.88
(To o)72 419.1 T(btain the escapement in pix).88 E
(els of the speci\214ed te)-.165 E(xt as a v)-.165 E(alue, use)-.275 E
F0(XmbT)3.666 E(extEscapement)-1.012 E F1(,).916 E F0(XwcT)72.916 432.1
Q(extEscapement)-1.012 E F1(or)3.666 E F0(Xutf8T)3.666 E(extEscapement)
-1.012 E F1(.).916 E 36 449.85 36 460.85 DL 36 447.85 36 458.85 DL 41.5
446.1 36 446.1 DL 43.5 446.1 38 446.1 DL 49 446.1 43.5 446.1 DL
(int XmbT)72 462 Q -.165(ex)-.77 G -1.834(tEscapement \().165 F F2
(font_set).916 E F1(,).916 E F2(string)2.75 E F1(,).916 E F2(num_bytes)
2.75 E F1(\)).916 E(XF)88.5 475 Q(ontSet)-.165 E F2(font_set)2.75 E F1
(;).916 E(char *)88.5 488 Q F2(string)A F1(;).916 E(int)88.5 501 Q F2
(num_bytes)2.75 E F1(;).916 E(int XwcT)72 521.8 Q -.165(ex)-.77 G -1.834
(tEscapement \().165 F F2(font_set).916 E F1(,).916 E F2(string)2.75 E
F1(,).916 E F2(num_wc)2.75 E(har)-.165 E(s)-.11 E F1(\)).916 E(XF)88.5
534.8 Q(ontSet)-.165 E F2(font_set)2.75 E F1(;).916 E(wchar_t *)88.5
547.8 Q F2(string)A F1(;).916 E(int)88.5 560.8 Q F2(num_wc)2.75 E(har)
-.165 E(s)-.11 E F1(;).916 E(int Xutf8T)72 581.6 Q -.165(ex)-.77 G
-1.834(tEscapement \().165 F F2(font_set).916 E F1(,).916 E F2(string)
2.75 E F1(,).916 E F2(num_bytes)2.75 E F1(\)).916 E(XF)88.5 594.6 Q
(ontSet)-.165 E F2(font_set)2.75 E F1(;).916 E(char *)88.5 607.6 Q F2
(string)A F1(;).916 E(int)88.5 620.6 Q F2(num_bytes)2.75 E F1(;).916 E
F2(font_set)72 641.4 Q F1(Speci\214es the font set.)37.163 E F2(string)
72 658.3 Q F1(Speci\214es the character string.)46.326 E F2(num_bytes)72
675.2 Q F1(Speci\214es the number of bytes in the string ar)24.953 E
(gument.)-.198 E F2(num_wc)72 692.1 Q(har)-.165 E(s)-.11 E F1
(Speci\214es the number of characters in the string ar)16.054 E(gument.)
-.198 E 36 687.75 36 698.75 DL 36 685.75 36 696.75 DL 41.5 697 36 697 DL
43.5 697 38 697 DL 49 697 43.5 697 DL(The)72 722 Q F0(XmbT)3.666 E
(extEscapement)-1.012 E F1(,).916 E F0(XwcT)3.666 E(extEscapement)-1.012
E F1(and)3.666 E F0(Xutf8T)3.666 E(extEscapement)-1.012 E F1
(functions return)3.666 E F0(293)279.75 769 Q 0 Cg EP
%%Page: 294 299
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E/F1 11/Times-Roman@0 SF
(the escapement in pix)72 85 Q(els of the speci\214ed string as a v)
-.165 E(alue, using the fonts loaded for the speci\214ed)-.275 E
(font set.)72 98 Q(The escapement is the distance in pix)5.5 E
(els in the primary dra)-.165 E 2.75(wd)-.165 G(irection from the dra)
-2.75 E(wing)-.165 E(origin to the origin of the ne)72 111 Q
(xt character to be dra)-.165 E
(wn, assuming that the rendering of the ne)-.165 E(xt)-.165 E
(character is not dependent on the supplied string.)72 124 Q(Re)72 140.9
Q -.055(ga)-.165 G(rdless of the character rendering order).055 E 2.75
(,t)-.44 G(he escapement is al)-2.75 E -.11(wa)-.11 G(ys positi).11 E
-.165(ve)-.275 G(.).165 E(The function)72 157.8 Q F0(Xutf8T)3.666 E
(extEscapement)-1.012 E F1(is an XFree86 e)3.666 E
(xtension introduced in XFree86 4.0.2. Its)-.165 E
(presence is indicated by the macro)72 170.8 Q F0(X_HA)3.666 E
(VE_UTF8_STRING)-1.595 E F1(.).916 E 1.76 -.88(To o)72 200.7 T
(btain the o).88 E -.165(ve)-.165 G(rall_ink_return and o).165 E -.165
(ve)-.165 G(rall_logical_return ar).165 E(guments, the o)-.198 E -.165
(ve)-.165 G(rall bounding box).165 E(of the string')72 213.7 Q 2.75(si)
-.605 G(mage, and a logical bounding box, use)-2.75 E F0(XmbT)3.666 E
(extExtents)-1.012 E F1(,).916 E F0(XwcT)3.666 E(extExtents)-1.012 E F1
(or)3.666 E F0(Xutf8T)72.916 226.7 Q(extExtents)-1.012 E F1(.).916 E .44
LW 36 244.45 36 255.45 DL 36 242.45 36 253.45 DL 41.5 240.7 36 240.7 DL
43.5 240.7 38 240.7 DL 49 240.7 43.5 240.7 DL(int XmbT)72 256.6 Q -.165
(ex)-.77 G -1.834(tExtents \().165 F/F2 11/Times-Italic@0 SF(font_set)
.916 E F1(,).916 E F2(string)2.75 E F1(,).916 E F2(num_bytes)2.75 E F1
(,).916 E F2 -.11(ov)2.75 G(er).11 E(all_ink_r)-.165 E(eturn)-.407 E F1
(,).916 E F2 -.11(ov)2.75 G(er).11 E(all_lo)-.165 E(gical_r)-.11 E
(eturn)-.407 E F1(\)).916 E(XF)88.5 269.6 Q(ontSet)-.165 E F2(font_set)
2.75 E F1(;).916 E(char *)88.5 282.6 Q F2(string)A F1(;).916 E(int)88.5
295.6 Q F2(num_bytes)2.75 E F1(;).916 E(XRectangle *)88.5 308.6 Q F2
-.11(ov)C(er).11 E(all_ink_r)-.165 E(eturn)-.407 E F1(;).916 E
(XRectangle *)88.5 321.6 Q F2 -.11(ov)C(er).11 E(all_lo)-.165 E(gical_r)
-.11 E(eturn)-.407 E F1(;).916 E(int XwcT)72 342.4 Q -.165(ex)-.77 G
-1.834(tExtents \().165 F F2(font_set).916 E F1(,).916 E F2(string)2.75
E F1(,).916 E F2(num_wc)2.75 E(har)-.165 E(s)-.11 E F1(,).916 E F2 -.11
(ov)72 355.4 S(er).11 E(all_ink_r)-.165 E(eturn)-.407 E F1(,).916 E F2
-.11(ov)2.75 G(er).11 E(all_lo)-.165 E(gical_r)-.11 E(eturn)-.407 E F1
(\)).916 E(XF)88.5 368.4 Q(ontSet)-.165 E F2(font_set)2.75 E F1(;).916 E
(wchar_t *)88.5 381.4 Q F2(string)A F1(;).916 E(int)88.5 394.4 Q F2
(num_wc)2.75 E(har)-.165 E(s)-.11 E F1(;).916 E(XRectangle *)88.5 407.4
Q F2 -.11(ov)C(er).11 E(all_ink_r)-.165 E(eturn)-.407 E F1(;).916 E
(XRectangle *)88.5 420.4 Q F2 -.11(ov)C(er).11 E(all_lo)-.165 E(gical_r)
-.11 E(eturn)-.407 E F1(;).916 E(int Xutf8T)72 441.2 Q -.165(ex)-.77 G
-1.834(tExtents \().165 F F2(font_set).916 E F1(,).916 E F2(string)2.75
E F1(,).916 E F2(num_bytes)2.75 E F1(,).916 E F2 -.11(ov)2.75 G(er).11 E
(all_ink_r)-.165 E(eturn)-.407 E F1(,).916 E F2 -.11(ov)2.75 G(er).11 E
(all_lo)-.165 E(gical_r)-.11 E(eturn)-.407 E F1(\)).916 E(XF)88.5 454.2
Q(ontSet)-.165 E F2(font_set)2.75 E F1(;).916 E(char *)88.5 467.2 Q F2
(string)A F1(;).916 E(int)88.5 480.2 Q F2(num_bytes)2.75 E F1(;).916 E
(XRectangle *)88.5 493.2 Q F2 -.11(ov)C(er).11 E(all_ink_r)-.165 E
(eturn)-.407 E F1(;).916 E(XRectangle *)88.5 506.2 Q F2 -.11(ov)C(er).11
E(all_lo)-.165 E(gical_r)-.11 E(eturn)-.407 E F1(;).916 E F2(font_set)72
527 Q F1(Speci\214es the font set.)37.163 E F2(string)72 543.9 Q F1
(Speci\214es the character string.)46.326 E F2(num_bytes)72 560.8 Q F1
(Speci\214es the number of bytes in the string ar)24.953 E(gument.)-.198
E F2(num_wc)72 577.7 Q(har)-.165 E(s)-.11 E F1
(Speci\214es the number of characters in the string ar)16.054 E(gument.)
-.198 E F2 -.11(ov)72 594.6 S(er).11 E(all_ink_r)-.165 E(eturn)-.407 E
F1(Returns the o)144 607.6 Q -.165(ve)-.165 G(rall ink dimensions.).165
E F2 -.11(ov)72 624.5 S(er).11 E(all_lo)-.165 E(gical_r)-.11 E(eturn)
-.407 E F1(Returns the o)144 637.5 Q -.165(ve)-.165 G
(rall logical dimensions.).165 E 36 633.15 36 644.15 DL 36 631.15 36
642.15 DL 41.5 642.4 36 642.4 DL 43.5 642.4 38 642.4 DL 49 642.4 43.5
642.4 DL(The)72 667.4 Q F0(XmbT)3.666 E(extExtents)-1.012 E F1(,).916 E
F0(XwcT)3.666 E(extExtents)-1.012 E F1(and)3.666 E F0(Xutf8T)3.666 E
(extExtents)-1.012 E F1(functions set the components)3.666 E
(of the speci\214ed o)72 680.4 Q -.165(ve)-.165 G(rall_ink_return and o)
.165 E -.165(ve)-.165 G(rall_logical_return ar).165 E(guments to the o)
-.198 E -.165(ve)-.165 G(rall bounding).165 E(box of the string')72
693.4 Q 2.75(si)-.605 G
(mage and a logical bounding box for spacing purposes, respecti)-2.75 E
-.165(ve)-.275 G(ly).165 E 5.5(.T)-.715 G(he)-5.5 E(y)-.165 E
(return the v)72 706.4 Q(alue returned by)-.275 E F0(XmbT)3.666 E
(extEscapement)-1.012 E F1(,).916 E F0(XwcT)3.666 E(extEscapement)-1.012
E F1(or)3.666 E F0(Xutf8T)3.666 E(extEscape-)-1.012 E(ment)72 719.4 Q F1
5.5(.T).916 G(hese metrics are relati)-5.5 E .33 -.165(ve t)-.275 H 2.75
(ot).165 G(he dra)-2.75 E
(wing origin of the string, using the fonts loaded for the)-.165 E
(speci\214ed font set.)72 732.4 Q F0(294)279.75 769 Q 0 Cg EP
%%Page: 295 300
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E/F1 11/Times-Roman@0 SF(If the o)72 85
Q -.165(ve)-.165 G(rall_ink_return ar).165 E
(gument is non-NULL, it is set to the bounding box of the string')-.198
E 2.75(sc)-.605 G(har)-2.75 E(-)-.22 E(acter ink.)72 98 Q(The o)5.5 E
-.165(ve)-.165 G(rall_ink_return for a nondescending, horizontally dra)
.165 E(wn Latin character is con-)-.165 E -.165(ve)72 111 S
(ntionally entirely abo).165 E .33 -.165(ve t)-.165 H
(he baseline; that is, o).165 E -.165(ve)-.165 G
(rall_ink_return.height <= \255o).165 E -.165(ve)-.165 G -.22(r-).165 G
(all_ink_return.y)72 124 Q 5.5(.T)-.715 G(he o)-5.5 E -.165(ve)-.165 G
(rall_ink_return for a nonk).165 E
(erned character is entirely at, and to the right)-.11 E
(of, the origin; that is, o)72 137 Q -.165(ve)-.165 G
(rall_ink_return.x >= 0.).165 E 2.75(Ac)5.5 G
(haracter consisting of a single pix)-2.75 E(el at the)-.165 E(origin w)
72 150 Q(ould set o)-.11 E -.165(ve)-.165 G
(rall_ink_return \214elds y = 0, x = 0, width = 1, and height = 1.).165
E(If the o)72 166.9 Q -.165(ve)-.165 G(rall_logical_return ar).165 E
(gument is non-NULL, it is set to the bounding box that pro)-.198 E
(vides)-.165 E
(minimum spacing to other graphical features for the string.)72 179.9 Q
(Other graphical features, for e)5.5 E(xam-)-.165 E
(ple, a border surrounding the te)72 192.9 Q
(xt, should not intersect this rectangle.)-.165 E(When the)72 209.8 Q F0
(XF)3.666 E(ontSet)-.275 E F1
(has missing charsets, metrics for each una)3.666 E -.275(va)-.22 G
(ilable character are tak).275 E(en from)-.11 E(the def)72 222.8 Q
(ault string returned by)-.11 E F0(XCr)3.666 E(eateF)-.198 E(ontSet)
-.275 E F1(so that the metrics represent the te)3.666 E(xt as it will)
-.165 E(actually be dra)72 235.8 Q 2.75(wn. The)-.165 F(beha)2.75 E
(vior for an in)-.22 E -.275(va)-.44 G(lid codepoint is unde\214ned.)
.275 E 1.76 -.88(To d)72 252.7 T(etermine the ef).88 E(fecti)-.275 E .33
-.165(ve d)-.275 H(ra).165 E(wing origin for a character in a dra)-.165
E(wn string, the client should call)-.165 E F0(XmbT)72.916 265.7 Q(extP)
-1.012 E(erCharExtents)-.22 E F1
(on the entire string, then on the character)3.666 E 2.75(,a)-.44 G
(nd subtract the x v)-2.75 E(alues of)-.275 E
(the returned rectangles for the character)72 278.7 Q 5.5(.T)-.605 G
(his is useful to redra)-5.5 E 2.75(wp)-.165 G(ortions of a line of te)
-2.75 E(xt or to)-.165 E(justify w)72 291.7 Q(ords, b)-.11 E
(ut for conte)-.22 E
(xt-dependent rendering, the client should not assume that it can redra)
-.165 E(w)-.165 E(the character by itself and get the same rendering.)72
304.7 Q(The function)72 321.6 Q F0(Xutf8T)3.666 E(extExtents)-1.012 E F1
(is an XFree86 e)3.666 E
(xtension introduced in XFree86 4.0.2. Its pres-)-.165 E
(ence is indicated by the macro)72 334.6 Q F0(X_HA)3.666 E
(VE_UTF8_STRING)-1.595 E F1(.).916 E 1.76 -.88(To o)72 364.5 T
(btain per).88 E(-character information for a te)-.22 E(xt string, use)
-.165 E F0(XmbT)3.666 E(extP)-1.012 E(erCharExtents)-.22 E F1(,).916 E
F0(Xwc-)3.666 E -1.012(Te)72 377.5 S(xtP)1.012 E(erCharExtents)-.22 E F1
(or)3.666 E F0(Xutf8T)3.666 E(extP)-1.012 E(erCharExtents)-.22 E F1(.)
.916 E F0(295)279.75 769 Q 0 Cg EP
%%Page: 296 301
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E .44 LW 36 76.75 36 87.75 DL 36 74.75
36 85.75 DL 41.5 73 36 73 DL 43.5 73 38 73 DL 49 73 43.5 73 DL/F1 11
/Times-Roman@0 SF(Status XmbT)72 88.9 Q -.165(ex)-.77 G -1.834
(tPerCharExtents \().165 F/F2 11/Times-Italic@0 SF(font_set).916 E F1(,)
.916 E F2(string)2.75 E F1(,).916 E F2(num_bytes)2.75 E F1(,).916 E F2
(ink_arr)2.75 E(ay_r)-.165 E(eturn)-.407 E F1(,).916 E F2(lo)102.25
101.9 Q(gical_arr)-.11 E(ay_r)-.165 E(eturn)-.407 E F1(,).916 E F2(arr)
2.75 E(ay_size)-.165 E F1(,).916 E F2(num_c)2.75 E(har)-.165 E(s_r)-.11
E(eturn)-.407 E F1(,).916 E F2 -.11(ov)2.75 G(er).11 E(all_ink_r)-.165 E
(eturn)-.407 E F1(,).916 E F2 -.11(ov)2.75 G(er).11 E(all_lo)-.165 E
(gical_r)-.11 E(eturn)-.407 E F1(\)).916 E(XF)88.5 114.9 Q(ontSet)-.165
E F2(font_set)2.75 E F1(;).916 E(char *)88.5 127.9 Q F2(string)A F1(;)
.916 E(int)88.5 140.9 Q F2(num_bytes)2.75 E F1(;).916 E(XRectangle *)
88.5 153.9 Q F2(ink_arr)A(ay_r)-.165 E(eturn)-.407 E F1(;).916 E
(XRectangle *)88.5 166.9 Q F2(lo)A(gical_arr)-.11 E(ay_r)-.165 E(eturn)
-.407 E F1(;).916 E(int)88.5 179.9 Q F2(arr)2.75 E(ay_size)-.165 E F1(;)
.916 E(int *)88.5 192.9 Q F2(num_c)A(har)-.165 E(s_r)-.11 E(eturn)-.407
E F1(;).916 E(XRectangle *)88.5 205.9 Q F2 -.11(ov)C(er).11 E(all_ink_r)
-.165 E(eturn)-.407 E F1(;).916 E(XRectangle *)88.5 218.9 Q F2 -.11(ov)C
(er).11 E(all_lo)-.165 E(gical_r)-.11 E(eturn)-.407 E F1(;).916 E
(Status XwcT)72 239.7 Q -.165(ex)-.77 G -1.834(tPerCharExtents \().165 F
F2(font_set).916 E F1(,).916 E F2(string)2.75 E F1(,).916 E F2(num_wc)
2.75 E(har)-.165 E(s)-.11 E F1(,).916 E F2(ink_arr)2.75 E(ay_r)-.165 E
(eturn)-.407 E F1(,).916 E F2(lo)99.5 252.7 Q(gical_arr)-.11 E(ay_r)
-.165 E(eturn)-.407 E F1(,).916 E F2(arr)2.75 E(ay_size)-.165 E F1(,)
.916 E F2(num_c)2.75 E(har)-.165 E(s_r)-.11 E(eturn)-.407 E F1(,).916 E
F2 -.11(ov)2.75 G(er).11 E(all_ink_r)-.165 E(eturn)-.407 E F1(,).916 E
F2 -.11(ov)2.75 G(er).11 E(all_ink_r)-.165 E(eturn)-.407 E F1(\)).916 E
(XF)88.5 265.7 Q(ontSet)-.165 E F2(font_set)2.75 E F1(;).916 E
(wchar_t *)88.5 278.7 Q F2(string)A F1(;).916 E(int)88.5 291.7 Q F2
(num_wc)2.75 E(har)-.165 E(s)-.11 E F1(;).916 E(XRectangle *)88.5 304.7
Q F2(ink_arr)A(ay_r)-.165 E(eturn)-.407 E F1(;).916 E(XRectangle *)88.5
317.7 Q F2(lo)A(gical_arr)-.11 E(ay_r)-.165 E(eturn)-.407 E F1(;)A(int)
88.5 330.7 Q F2(arr)2.75 E(ay_size)-.165 E F1(;).916 E(int *)88.5 343.7
Q F2(num_c)A(har)-.165 E(s_r)-.11 E(eturn)-.407 E F1(;).916 E
(XRectangle *)88.5 356.7 Q F2 -.11(ov)C(er).11 E(all_ink_r)-.165 E
(eturn)-.407 E F1(;).916 E(XRectangle *)88.5 369.7 Q F2 -.11(ov)C(er).11
E(all_lo)-.165 E(gical_r)-.11 E(eturn)-.407 E F1(;).916 E(Status Xutf8T)
72 390.5 Q -.165(ex)-.77 G -1.834(tPerCharExtents \().165 F F2(font_set)
.916 E F1(,).916 E F2(string)2.75 E F1(,).916 E F2(num_bytes)2.75 E F1
(,).916 E F2(ink_arr)2.75 E(ay_r)-.165 E(eturn)-.407 E F1(,).916 E F2
(lo)102.25 403.5 Q(gical_arr)-.11 E(ay_r)-.165 E(eturn)-.407 E F1(,).916
E F2(arr)2.75 E(ay_size)-.165 E F1(,).916 E F2(num_c)2.75 E(har)-.165 E
(s_r)-.11 E(eturn)-.407 E F1(,).916 E F2 -.11(ov)2.75 G(er).11 E
(all_ink_r)-.165 E(eturn)-.407 E F1(,).916 E F2 -.11(ov)2.75 G(er).11 E
(all_lo)-.165 E(gical_r)-.11 E(eturn)-.407 E F1(\)).916 E(XF)88.5 416.5
Q(ontSet)-.165 E F2(font_set)2.75 E F1(;).916 E(char *)88.5 429.5 Q F2
(string)A F1(;).916 E(int)88.5 442.5 Q F2(num_bytes)2.75 E F1(;).916 E
(XRectangle *)88.5 455.5 Q F2(ink_arr)A(ay_r)-.165 E(eturn)-.407 E F1(;)
.916 E(XRectangle *)88.5 468.5 Q F2(lo)A(gical_arr)-.11 E(ay_r)-.165 E
(eturn)-.407 E F1(;).916 E(int)88.5 481.5 Q F2(arr)2.75 E(ay_size)-.165
E F1(;).916 E(int *)88.5 494.5 Q F2(num_c)A(har)-.165 E(s_r)-.11 E
(eturn)-.407 E F1(;).916 E(XRectangle *)88.5 507.5 Q F2 -.11(ov)C(er).11
E(all_ink_r)-.165 E(eturn)-.407 E F1(;).916 E(XRectangle *)88.5 520.5 Q
F2 -.11(ov)C(er).11 E(all_lo)-.165 E(gical_r)-.11 E(eturn)-.407 E F1(;)
.916 E F2(font_set)72 541.3 Q F1(Speci\214es the font set.)37.163 E F2
(string)72 558.2 Q F1(Speci\214es the character string.)46.326 E F2
(num_bytes)72 575.1 Q F1
(Speci\214es the number of bytes in the string ar)24.953 E(gument.)-.198
E F2(num_wc)72 592 Q(har)-.165 E(s)-.11 E F1
(Speci\214es the number of characters in the string ar)16.054 E(gument.)
-.198 E F2(ink_arr)72 608.9 Q(ay_r)-.165 E(eturn)-.407 E F1
(Returns the ink dimensions for each character)144 621.9 Q(.)-.605 E F2
(lo)72 638.8 Q(gical_arr)-.11 E(ay_r)-.165 E(eturn)-.407 E F1
(Returns the logical dimensions for each character)144 651.8 Q(.)-.605 E
F2(arr)72 668.7 Q(ay_size)-.165 E F1
(Speci\214es the size of ink_array_return and logical_array_return.)
25.723 E(The caller must)5.5 E(pass in arrays of this size.)144 681.7 Q
F2(num_c)72 698.6 Q(har)-.165 E(s_r)-.11 E(eturn)-.407 E F1
(Returns the number of characters in the string ar)144 711.6 Q(gument.)
-.198 E F2 -.11(ov)72 728.5 S(er).11 E(all_ink_r)-.165 E(eturn)-.407 E
F0(296)279.75 769 Q 0 Cg EP
%%Page: 297 302
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E/F1 11/Times-Roman@0 SF(Returns the o)
144 85 Q -.165(ve)-.165 G(rall ink e).165 E
(xtents of the entire string.)-.165 E/F2 11/Times-Italic@0 SF -.11(ov)72
101.9 S(er).11 E(all_lo)-.165 E(gical_r)-.11 E(eturn)-.407 E F1
(Returns the o)144 114.9 Q -.165(ve)-.165 G(rall logical e).165 E
(xtents of the entire string.)-.165 E .44 LW 36 110.55 36 121.55 DL 36
108.55 36 119.55 DL 41.5 119.8 36 119.8 DL 43.5 119.8 38 119.8 DL 49
119.8 43.5 119.8 DL(The)72 144.8 Q F0(XmbT)3.666 E(extP)-1.012 E
(erCharExtents)-.22 E F1(,).916 E F0(XwcT)3.666 E(extP)-1.012 E
(erCharExtents)-.22 E F1(and)3.666 E F0(Xutf8T)3.666 E(extP)-1.012 E
(erCharExtents)-.22 E F1(functions return the te)72 157.8 Q
(xt dimensions of each character of the speci\214ed te)-.165 E
(xt, using the fonts loaded)-.165 E(for the speci\214ed font set.)72
170.8 Q(Each successi)5.5 E .33 -.165(ve e)-.275 H
(lement of ink_array_return and logical_array_return).165 E
(is set to the successi)72 183.8 Q .33 -.165(ve c)-.275 H(haracter').165
E 2.75(sd)-.605 G(ra)-2.75 E(wn metrics, relati)-.165 E .33 -.165(ve t)
-.275 H 2.75(ot).165 G(he dra)-2.75 E(wing origin of the string and)
-.165 E(one rectangle for each character in the supplied te)72 196.8 Q
(xt string.)-.165 E(The number of elements of)5.5 E
(ink_array_return and logical_array_return that ha)72 209.8 Q .33 -.165
(ve b)-.22 H(een set is returned to num_chars_return.).165 E(Each eleme\
nt of ink_array_return is set to the bounding box of the corresponding \
character')72 226.7 Q(s)-.605 E(dra)72 239.7 Q(wn fore)-.165 E
(ground color)-.165 E 5.5(.E)-.605 G
(ach element of logical_array_return is set to the bounding box that)
-5.5 E(pro)72 252.7 Q(vides minimum spacing to other graphical features\
 for the corresponding character)-.165 E 5.5(.O)-.605 G(ther)-5.5 E
(graphical features should not intersect an)72 265.7 Q 2.75(yo)-.165 G
2.75(ft)-2.75 G(he logical_array_return rectangles.)-2.75 E
(Note that an)72 282.6 Q F0(XRectangle)3.666 E F1(represents the ef)
3.666 E(fecti)-.275 E .33 -.165(ve d)-.275 H(ra).165 E
(wing dimensions of the character)-.165 E 2.75(,r)-.44 G -2.475 -.165
(eg a)-2.75 H(rdless).165 E
(of the number of font glyphs that are used to dra)72 295.6 Q 2.75(wt)
-.165 G(he character or the direction in which the char)-2.75 E(-)-.22 E
(acter is dra)72 308.6 Q 2.75(wn. If)-.165 F(multiple characters map to\
 a single character glyph, the dimensions of all the)2.75 E F0
(XRectangles)72.916 321.6 Q F1(of those characters are the same.)3.666 E
(When the)72 338.5 Q F0(XF)3.666 E(ontSet)-.275 E F1
(has missing charsets, metrics for each una)3.666 E -.275(va)-.22 G
(ilable character are tak).275 E(en from)-.11 E(the def)72 351.5 Q
(ault string returned by)-.11 E F0(XCr)3.666 E(eateF)-.198 E(ontSet)
-.275 E F1(so that the metrics represent the te)3.666 E(xt as it will)
-.165 E(actually be dra)72 364.5 Q 2.75(wn. The)-.165 F(beha)2.75 E
(vior for an in)-.22 E -.275(va)-.44 G(lid codepoint is unde\214ned.)
.275 E(If the array_size is too small for the number of characters in t\
he supplied te)72 381.4 Q(xt, the functions return)-.165 E
(zero and num_chars_return is set to the number of rectangles required.)
72 394.4 Q(Otherwise, the functions)5.5 E(return a nonzero v)72 407.4 Q
(alue.)-.275 E(If the o)72 424.3 Q -.165(ve)-.165 G
(rall_ink_return or o).165 E -.165(ve)-.165 G(rall_logical_return ar)
.165 E(gument is non-NULL,)-.198 E F0(XmbT)3.666 E(extP)-1.012 E(er)-.22
E(-)-.407 E(CharExtents)72 437.3 Q F1(,).916 E F0(XwcT)3.666 E(extP)
-1.012 E(erCharExtents)-.22 E F1(and)3.666 E F0(Xutf8T)3.666 E(extP)
-1.012 E(erCharExtents)-.22 E F1(return the maximum)3.666 E -.165(ex)72
450.3 S(tent of the string').165 E 2.75(sm)-.605 G(etrics to o)-2.75 E
-.165(ve)-.165 G(rall_ink_return or o).165 E -.165(ve)-.165 G
(rall_logical_return, as returned by).165 E F0(Xmb-)3.666 E -1.012(Te)72
463.3 S(xtExtents)1.012 E F1(,).916 E F0(XwcT)3.666 E(extExtents)-1.012
E F1(or)3.666 E F0(Xutf8T)3.666 E(extExtents)-1.012 E F1(.).916 E
(The function)72 480.2 Q F0(Xutf8T)3.666 E(extP)-1.012 E(erCharExtents)
-.22 E F1(is an XFree86 e)3.666 E(xtension introduced in XFree86 4.0.2.)
-.165 E(Its presence is indicated by the macro)72 493.2 Q F0(X_HA)3.666
E(VE_UTF8_STRING)-1.595 E F1(.).916 E F0 2.75(13.4.8. Drawing)72 519.2 R
-1.012(Te)2.75 G(xt Using F)1.012 E(ont Sets)-.275 E F1
(The functions de\214ned in this section dra)72 536.1 Q 2.75(wt)-.165 G
-.165(ex)-2.75 G 2.75(ta).165 G 2.75(tas)-2.75 G
(peci\214ed location in a dra)-2.75 E -.11(wa)-.165 G 2.75(ble. The).11
F 2.75(ya)-.165 G(re)-2.75 E(similar to the functions)72 549.1 Q F0
(XDrawT)3.666 E(ext)-1.012 E F1(,).916 E F0(XDrawString)3.666 E F1 2.75
(,a).916 G(nd)-2.75 E F0(XDrawImageString)3.666 E F1 -.165(ex)3.666 G
(cept that the).165 E(y)-.165 E -.11(wo)72 562.1 S
(rk with font sets instead of single fonts and interpret the te).11 E
(xt based on the locale of the font set)-.165 E(\(for functions whose n\
ame starts with Xmb or Xwc\) or as UTF-8 encoded te)72 575.1 Q
(xt \(for functions)-.165 E(whose name starts with Xutf8\), instead of \
treating the bytes of the string as direct font inde)72 588.1 Q -.165
(xe)-.165 G(s.).165 E
(See section 8.6 for details of the use of Graphics Conte)72 601.1 Q
(xts \(GCs\) and possible protocol errors.)-.165 E(If)5.5 E(a)72 614.1 Q
F0(BadF)3.666 E(ont)-.275 E F1
(error is generated, characters prior to the of)3.666 E
(fending character may ha)-.275 E .33 -.165(ve b)-.22 H(een dra).165 E
(wn.)-.165 E(The te)72 631 Q(xt is dra)-.165 E(wn using the fonts loade\
d for the speci\214ed font set; the font in the GC is ignored)-.165 E
(and may be modi\214ed by the functions.)72 644 Q(No v)5.5 E
(alidation that all fonts conform to some width rule is)-.275 E
(performed.)72 657 Q(The te)72 673.9 Q(xt functions)-.165 E F0(XmbDrawT)
3.666 E(ext)-1.012 E F1(,).916 E F0(XwcDrawT)3.666 E(ext)-1.012 E F1
(and)3.666 E F0(Xutf8DrawT)3.666 E(ext)-1.012 E F1(use the follo)3.666 E
(wing)-.275 E(structures:)72 686.9 Q F0(297)279.75 769 Q 0 Cg EP
%%Page: 298 303
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E .44 LW 36 76.75 36 87.75 DL 36 74.75
36 85.75 DL 41.5 73 36 73 DL 43.5 73 38 73 DL 49 73 43.5 73 DL/F1 11
/Times-Roman@0 SF(typedef struct {)72 91.5 Q(char *chars;)108 104.5 Q
(/* pointer to string */)90.551 E(int nchars;)108 117.5 Q
(/* number of bytes */)97.866 E(int delta;)108 130.5 Q(/* pix)105.192 E
(el delta between strings */)-.165 E(XF)108 143.5 Q(ontSet font_set;)
-.165 E(/* fonts, None means don')60.741 E 2.75(tc)-.198 G(hange */)
-2.75 E 2.75(}X)72 156.5 S(mbT)-2.75 E -.165(ex)-.77 G(tItem;).165 E
(typedef struct {)72 186.4 Q(wchar_t *chars;)108 199.4 Q
(/* pointer to wide char string */)74.051 E(int nchars;)108 212.4 Q
(/* number of wide characters */)97.866 E(int delta;)108 225.4 Q(/* pix)
105.192 E(el delta between strings */)-.165 E(XF)108 238.4 Q
(ontSet font_set;)-.165 E(/* fonts, None means don')60.741 E 2.75(tc)
-.198 G(hange */)-2.75 E 2.75(}X)72 251.4 S(wcT)-2.75 E -.165(ex)-.77 G
(tItem;).165 E 36 253.55 36 264.55 DL 36 251.55 36 262.55 DL 41.5 262.8
36 262.8 DL 43.5 262.8 38 262.8 DL 49 262.8 43.5 262.8 DL 1.76 -.88
(To d)72 300.8 T(ra).88 E 2.75(wt)-.165 G -.165(ex)-2.75 G 2.75(tu).165
G(sing multiple font sets in a gi)-2.75 E -.165(ve)-.275 G 2.75(nd).165
G(ra)-2.75 E -.11(wa)-.165 G(ble, use).11 E F0(XmbDrawT)3.666 E(ext)
-1.012 E F1(,).916 E F0(XwcDrawT)3.666 E(ext)-1.012 E F1(or)3.666 E F0
(Xutf8DrawT)72.916 313.8 Q(ext)-1.012 E F1(.).916 E F0(298)279.75 769 Q
0 Cg EP
%%Page: 299 304
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E .44 LW 36 76.75 36 87.75 DL 36 74.75
36 85.75 DL 41.5 73 36 73 DL 43.5 73 38 73 DL 49 73 43.5 73 DL/F1 11
/Times-Roman@0 SF -.22(vo)72 88.9 S(id XmbDra).22 E(wT)-.165 E -.165(ex)
-.77 G .916(t\().165 G/F2 11/Times-Italic@0 SF(display)A F1(,).916 E F2
(d)2.75 E F1(,).916 E F2(gc)2.75 E F1(,).916 E F2(x)2.75 E F1(,).916 E
F2(y)2.75 E F1(,).916 E F2(items)2.75 E F1(,).916 E F2(nitems)2.75 E F1
(\)).916 E(Display *)88.5 101.9 Q F2(display)A F1(;).916 E(Dra)88.5
114.9 Q -.11(wa)-.165 G(ble).11 E F2(d)2.75 E F1(;).916 E(GC)88.5 127.9
Q F2(gc)2.75 E F1(;).916 E(int)88.5 140.9 Q F2(x)2.75 E F1(,).916 E F2
(y)2.75 E F1(;).916 E(XmbT)88.5 153.9 Q -.165(ex)-.77 G(tItem *).165 E
F2(items)A F1(;).916 E(int)88.5 166.9 Q F2(nitems)2.75 E F1(;).916 E
-.22(vo)72 187.7 S(id XwcDra).22 E(wT)-.165 E -.165(ex)-.77 G .916(t\()
.165 G F2(display)A F1(,).916 E F2(d)2.75 E F1(,).916 E F2(gc)2.75 E F1
(,).916 E F2(x)2.75 E F1(,).916 E F2(y)2.75 E F1(,).916 E F2(items)2.75
E F1(,).916 E F2(nitems)2.75 E F1(\)).916 E(Display *)88.5 200.7 Q F2
(display)A F1(;).916 E(Dra)88.5 213.7 Q -.11(wa)-.165 G(ble).11 E F2(d)
2.75 E F1(;).916 E(GC)88.5 226.7 Q F2(gc)2.75 E F1(;).916 E(int)88.5
239.7 Q F2(x)2.75 E F1(,).916 E F2(y)2.75 E F1(;).916 E(XwcT)88.5 252.7
Q -.165(ex)-.77 G(tItem *).165 E F2(items)A F1(;).916 E(int)88.5 265.7 Q
F2(nitems)2.75 E F1(;).916 E -.22(vo)72 286.5 S(id Xutf8Dra).22 E(wT)
-.165 E -.165(ex)-.77 G .916(t\().165 G F2(display)A F1(,).916 E F2(d)
2.75 E F1(,).916 E F2(gc)2.75 E F1(,).916 E F2(x)2.75 E F1(,).916 E F2
(y)2.75 E F1(,).916 E F2(items)2.75 E F1(,).916 E F2(nitems)2.75 E F1
(\)).916 E(Display *)88.5 299.5 Q F2(display)A F1(;).916 E(Dra)88.5
312.5 Q -.11(wa)-.165 G(ble).11 E F2(d)2.75 E F1(;).916 E(GC)88.5 325.5
Q F2(gc)2.75 E F1(;).916 E(int)88.5 338.5 Q F2(x)2.75 E F1(,).916 E F2
(y)2.75 E F1(;).916 E(XmbT)88.5 351.5 Q -.165(ex)-.77 G(tItem *).165 E
F2(items)A F1(;).916 E(int)88.5 364.5 Q F2(nitems)2.75 E F1(;).916 E F2
(display)72 385.3 Q F1(Speci\214es the connection to the X serv)40.221 E
(er)-.165 E(.)-.605 E F2(d)72 402.2 Q F1(Speci\214es the dra)66.5 E -.11
(wa)-.165 G(ble.).11 E F2(gc)72 419.1 Q F1(Speci\214es the GC.)61.616 E
F2(x)72 436 Q(y)72 449 Q F1(Specify the x and y coordinates.)67.116 E F2
(items)72 465.9 Q F1(Speci\214es an array of te)48.779 E(xt items.)-.165
E F2(nitems)72 482.8 Q F1(Speci\214es the number of te)43.279 E
(xt items in the array)-.165 E(.)-.715 E 36 478.45 36 489.45 DL 36
476.45 36 487.45 DL 41.5 487.7 36 487.7 DL 43.5 487.7 38 487.7 DL 49
487.7 43.5 487.7 DL(The)72 512.7 Q F0(XmbDrawT)3.666 E(ext)-1.012 E F1
(,).916 E F0(XwcDrawT)3.666 E(ext)-1.012 E F1(and)3.666 E F0(Xutf8DrawT)
3.666 E(ext)-1.012 E F1(functions allo)3.666 E 2.75(wc)-.275 G(omple)
-2.75 E 2.75(xs)-.165 G(pacing and)-2.75 E(font set shifts between te)72
525.7 Q(xt strings.)-.165 E(Each te)5.5 E
(xt item is processed in turn, with the origin of a te)-.165 E(xt)-.165
E(element adv)72 538.7 Q(anced in the primary dra)-.275 E 2.75(wd)-.165
G(irection by the escapement of the pre)-2.75 E(vious te)-.275 E
(xt item.)-.165 E(A)5.5 E(te)72 551.7 Q
(xt item delta speci\214es an additional escapement of the te)-.165 E
(xt item dra)-.165 E(wing origin in the primary)-.165 E(dra)72 564.7 Q
2.75(wd)-.165 G 2.75(irection. A)-2.75 F(font_set member other than)2.75
E F0(None)3.666 E F1(in an item causes the font set to be used for)3.666
E(this and subsequent te)72 577.7 Q(xt items in the te)-.165 E
(xt_items list.)-.165 E(Leading te)5.5 E
(xt items with a font_set member)-.165 E(set to)72 590.7 Q F0(None)3.666
E F1(will not be dra)3.666 E(wn.)-.165 E F0(XmbDrawT)72.916 607.6 Q(ext)
-1.012 E F1(,).916 E F0(XwcDrawT)3.666 E(ext)-1.012 E F1(and)3.666 E F0
(Xutf8DrawT)3.666 E(ext)-1.012 E F1(do not perform an)3.666 E 2.75(yc)
-.165 G(onte)-2.75 E(xt-dependent)-.165 E(rendering between te)72 620.6
Q(xt se)-.165 E 2.75(gments. Clients)-.165 F(may compute the dra)2.75 E
(wing metrics by passing each te)-.165 E(xt)-.165 E(se)72 633.6 Q
(gment to)-.165 E F0(XmbT)3.666 E(extExtents)-1.012 E F1(,).916 E F0
(XwcT)3.666 E(extExtents)-1.012 E F1(,).916 E F0(Xutf8T)3.666 E
(extExtents)-1.012 E F1(or)3.666 E F0(XmbT)3.666 E(extP)-1.012 E
(erCharEx-)-.22 E(tents)72 646.6 Q F1(,).916 E F0(XwcT)3.666 E(extP)
-1.012 E(erCharExtents)-.22 E F1(.).916 E F0(Xutf8T)6.416 E(extP)-1.012
E(erCharExtents)-.22 E F1 5.5(.W).916 G(hen the)-5.5 E F0(XF)3.666 E
(ontSet)-.275 E F1(has miss-)3.666 E(ing charsets, each una)72 659.6 Q
-.275(va)-.22 G(ilable character is dra).275 E(wn with the def)-.165 E
(ault string returned by)-.11 E F0(XCr)3.666 E(eate-)-.198 E -.275(Fo)72
672.6 S(ntSet).275 E F1 5.5(.T).916 G(he beha)-5.5 E(vior for an in)-.22
E -.275(va)-.44 G(lid codepoint is unde\214ned.).275 E(The function)72
689.5 Q F0(Xutf8DrawT)3.666 E(ext)-1.012 E F1(is an XFree86 e)3.666 E
(xtension introduced in XFree86 4.0.2. Its presence)-.165 E
(is indicated by the macro)72 702.5 Q F0(X_HA)3.666 E(VE_UTF8_STRING)
-1.595 E F1(.).916 E 1.76 -.88(To d)72 732.4 T(ra).88 E 2.75(wt)-.165 G
-.165(ex)-2.75 G 2.75(tu).165 G(sing a single font set in a gi)-2.75 E
-.165(ve)-.275 G 2.75(nd).165 G(ra)-2.75 E -.11(wa)-.165 G(ble, use).11
E F0(XmbDrawString)3.666 E F1(,).916 E F0(XwcDrawString)3.666 E(299)
279.75 769 Q 0 Cg EP
%%Page: 300 305
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E/F1 11/Times-Roman@0 SF(or)72 85 Q F0
(Xutf8DrawString)3.666 E F1(.).916 E .44 LW 36 102.75 36 113.75 DL 36
100.75 36 111.75 DL 41.5 99 36 99 DL 43.5 99 38 99 DL 49 99 43.5 99 DL
-.22(vo)72 114.9 S(id XmbDra).22 E -1.834(wString \()-.165 F/F2 11
/Times-Italic@0 SF(display).916 E F1(,).916 E F2(d)2.75 E F1(,).916 E F2
(font_set)2.75 E F1(,).916 E F2(gc)2.75 E F1(,).916 E F2(x)2.75 E F1(,)
.916 E F2(y)2.75 E F1(,).916 E F2(string)2.75 E F1(,).916 E F2
(num_bytes)2.75 E F1(\)).916 E(Display *)88.5 127.9 Q F2(display)A F1(;)
.916 E(Dra)88.5 140.9 Q -.11(wa)-.165 G(ble).11 E F2(d)2.75 E F1(;).916
E(XF)88.5 153.9 Q(ontSet)-.165 E F2(font_set)2.75 E F1(;).916 E(GC)88.5
166.9 Q F2(gc)2.75 E F1(;).916 E(int)88.5 179.9 Q F2(x)2.75 E F1(,).916
E F2(y)2.75 E F1(;).916 E(char *)88.5 192.9 Q F2(string)A F1(;).916 E
(int)88.5 205.9 Q F2(num_bytes)2.75 E F1(;).916 E -.22(vo)72 226.7 S
(id XwcDra).22 E -1.834(wString \()-.165 F F2(display).916 E F1(,).916 E
F2(d)2.75 E F1(,).916 E F2(font_set)2.75 E F1(,).916 E F2(gc)2.75 E F1
(,).916 E F2(x)2.75 E F1(,).916 E F2(y)2.75 E F1(,).916 E F2(string)2.75
E F1(,).916 E F2(num_wc)2.75 E(har)-.165 E(s)-.11 E F1(\)).916 E
(Display *)88.5 239.7 Q F2(display)A F1(;).916 E(Dra)88.5 252.7 Q -.11
(wa)-.165 G(ble).11 E F2(d)2.75 E F1(;).916 E(XF)88.5 265.7 Q(ontSet)
-.165 E F2(font_set)2.75 E F1(;).916 E(GC)88.5 278.7 Q F2(gc)2.75 E F1
(;).916 E(int)88.5 291.7 Q F2(x)2.75 E F1(,).916 E F2(y)2.75 E F1(;).916
E(wchar_t *)88.5 304.7 Q F2(string)A F1(;).916 E(int)88.5 317.7 Q F2
(num_wc)2.75 E(har)-.165 E(s)-.11 E F1(;).916 E -.22(vo)72 338.5 S
(id Xutf8Dra).22 E -1.834(wString \()-.165 F F2(display).916 E F1(,).916
E F2(d)2.75 E F1(,).916 E F2(font_set)2.75 E F1(,).916 E F2(gc)2.75 E F1
(,).916 E F2(x)2.75 E F1(,).916 E F2(y)2.75 E F1(,).916 E F2(string)2.75
E F1(,).916 E F2(num_bytes)2.75 E F1(\)).916 E(Display *)88.5 351.5 Q F2
(display)A F1(;).916 E(Dra)88.5 364.5 Q -.11(wa)-.165 G(ble).11 E F2(d)
2.75 E F1(;).916 E(XF)88.5 377.5 Q(ontSet)-.165 E F2(font_set)2.75 E F1
(;).916 E(GC)88.5 390.5 Q F2(gc)2.75 E F1(;).916 E(int)88.5 403.5 Q F2
(x)2.75 E F1(,).916 E F2(y)2.75 E F1(;).916 E(char *)88.5 416.5 Q F2
(string)A F1(;).916 E(int)88.5 429.5 Q F2(num_bytes)2.75 E F1(;).916 E
F2(display)72 450.3 Q F1(Speci\214es the connection to the X serv)40.221
E(er)-.165 E(.)-.605 E F2(d)72 467.2 Q F1(Speci\214es the dra)66.5 E
-.11(wa)-.165 G(ble.).11 E F2(font_set)72 484.1 Q F1
(Speci\214es the font set.)37.163 E F2(gc)72 501 Q F1
(Speci\214es the GC.)61.616 E F2(x)72 517.9 Q(y)72 530.9 Q F1
(Specify the x and y coordinates.)67.116 E F2(string)72 547.8 Q F1
(Speci\214es the character string.)46.326 E F2(num_bytes)72 564.7 Q F1
(Speci\214es the number of bytes in the string ar)24.953 E(gument.)-.198
E F2(num_wc)72 581.6 Q(har)-.165 E(s)-.11 E F1
(Speci\214es the number of characters in the string ar)16.054 E(gument.)
-.198 E 36 577.25 36 588.25 DL 36 575.25 36 586.25 DL 41.5 586.5 36
586.5 DL 43.5 586.5 38 586.5 DL 49 586.5 43.5 586.5 DL(The)72 611.5 Q F0
(XmbDrawString)3.666 E F1(,).916 E F0(XwcDrawString)3.666 E F1(and)3.666
E F0(Xutf8DrawString)3.666 E F1(functions dra)3.666 E 2.75(wt)-.165 G
(he speci\214ed)-2.75 E(te)72 624.5 Q(xt with the fore)-.165 E
(ground pix)-.165 E 2.75(el. When)-.165 F(the)2.75 E F0(XF)3.666 E
(ontSet)-.275 E F1(has missing charsets, each una)3.666 E -.275(va)-.22
G(ilable char).275 E(-)-.22 E(acter is dra)72 637.5 Q(wn with the def)
-.165 E(ault string returned by)-.11 E F0(XCr)3.666 E(eateF)-.198 E
(ontSet)-.275 E F1 5.5(.T).916 G(he beha)-5.5 E(vior for an in)-.22 E
-.275(va)-.44 G(lid).275 E(codepoint is unde\214ned.)72 650.5 Q
(The function)72 667.4 Q F0(Xutf8DrawString)3.666 E F1(is an XFree86 e)
3.666 E(xtension introduced in XFree86 4.0.2. Its pres-)-.165 E
(ence is indicated by the macro)72 680.4 Q F0(X_HA)3.666 E
(VE_UTF8_STRING)-1.595 E F1(.).916 E 1.76 -.88(To d)72 710.3 T(ra).88 E
2.75(wi)-.165 G(mage te)-2.75 E(xt using a single font set in a gi)-.165
E -.165(ve)-.275 G 2.75(nd).165 G(ra)-2.75 E -.11(wa)-.165 G(ble, use)
.11 E F0(XmbDrawImageString)3.666 E F1(,).916 E F0(XwcDrawImageString)
72.916 723.3 Q F1(or)3.666 E F0(Xutf8DrawImageString)3.666 E F1(.).916 E
F0(300)279.75 769 Q 0 Cg EP
%%Page: 301 306
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E .44 LW 36 76.75 36 87.75 DL 36 74.75
36 85.75 DL 41.5 73 36 73 DL 43.5 73 38 73 DL 49 73 43.5 73 DL/F1 11
/Times-Roman@0 SF -.22(vo)72 88.9 S(id XmbDra).22 E -1.834
(wImageString \()-.165 F/F2 11/Times-Italic@0 SF(display).916 E F1(,)
.916 E F2(d)2.75 E F1(,).916 E F2(font_set)2.75 E F1(,).916 E F2(gc)2.75
E F1(,).916 E F2(x)2.75 E F1(,).916 E F2(y)2.75 E F1(,).916 E F2(string)
2.75 E F1(,).916 E F2(num_bytes)2.75 E F1(\)).916 E(Display *)88.5 101.9
Q F2(display)A F1(;).916 E(Dra)88.5 114.9 Q -.11(wa)-.165 G(ble).11 E F2
(d)2.75 E F1(;).916 E(XF)88.5 127.9 Q(ontSet)-.165 E F2(font_set)2.75 E
F1(;).916 E(GC)88.5 140.9 Q F2(gc)2.75 E F1(;).916 E(int)88.5 153.9 Q F2
(x)2.75 E F1(,).916 E F2(y)2.75 E F1(;).916 E(char *)88.5 166.9 Q F2
(string)A F1(;).916 E(int)88.5 179.9 Q F2(num_bytes)2.75 E F1(;).916 E
-.22(vo)72 200.7 S(id XwcDra).22 E -1.834(wImageString \()-.165 F F2
(display).916 E F1(,).916 E F2(d)2.75 E F1(,).916 E F2(font_set)2.75 E
F1(,).916 E F2(gc)2.75 E F1(,).916 E F2(x)2.75 E F1(,).916 E F2(y)2.75 E
F1(,).916 E F2(string)2.75 E F1(,).916 E F2(num_wc)2.75 E(har)-.165 E(s)
-.11 E F1(\)).916 E(Display *)88.5 213.7 Q F2(display)A F1(;).916 E(Dra)
88.5 226.7 Q -.11(wa)-.165 G(ble).11 E F2(d)2.75 E F1(;).916 E(XF)88.5
239.7 Q(ontSet)-.165 E F2(font_set)2.75 E F1(;).916 E(GC)88.5 252.7 Q F2
(gc)2.75 E F1(;).916 E(int)88.5 265.7 Q F2(x)2.75 E F1(,).916 E F2(y)
2.75 E F1(;).916 E(wchar_t *)88.5 278.7 Q F2(string)A F1(;).916 E(int)
88.5 291.7 Q F2(num_wc)2.75 E(har)-.165 E(s)-.11 E F1(;).916 E -.22(vo)
72 312.5 S(id Xutf8Dra).22 E -1.834(wImageString \()-.165 F F2(display)
.916 E F1(,).916 E F2(d)2.75 E F1(,).916 E F2(font_set)2.75 E F1(,).916
E F2(gc)2.75 E F1(,).916 E F2(x)2.75 E F1(,).916 E F2(y)2.75 E F1(,).916
E F2(string)2.75 E F1(,).916 E F2(num_bytes)2.75 E F1(\)).916 E
(Display *)88.5 325.5 Q F2(display)A F1(;).916 E(Dra)88.5 338.5 Q -.11
(wa)-.165 G(ble).11 E F2(d)2.75 E F1(;).916 E(XF)88.5 351.5 Q(ontSet)
-.165 E F2(font_set)2.75 E F1(;).916 E(GC)88.5 364.5 Q F2(gc)2.75 E F1
(;).916 E(int)88.5 377.5 Q F2(x)2.75 E F1(,).916 E F2(y)2.75 E F1(;).916
E(char *)88.5 390.5 Q F2(string)A F1(;).916 E(int)88.5 403.5 Q F2
(num_bytes)2.75 E F1(;).916 E F2(display)72 424.3 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2(d)72 441.2 Q F1(Speci\214es the dra)66.5 E -.11(wa)-.165 G(ble.).11 E
F2(font_set)72 458.1 Q F1(Speci\214es the font set.)37.163 E F2(gc)72
475 Q F1(Speci\214es the GC.)61.616 E F2(x)72 491.9 Q(y)72 504.9 Q F1
(Specify the x and y coordinates.)67.116 E F2(string)72 521.8 Q F1
(Speci\214es the character string.)46.326 E F2(num_bytes)72 538.7 Q F1
(Speci\214es the number of bytes in the string ar)24.953 E(gument.)-.198
E F2(num_wc)72 555.6 Q(har)-.165 E(s)-.11 E F1
(Speci\214es the number of characters in the string ar)16.054 E(gument.)
-.198 E 36 551.25 36 562.25 DL 36 549.25 36 560.25 DL 41.5 560.5 36
560.5 DL 43.5 560.5 38 560.5 DL 49 560.5 43.5 560.5 DL(The)72 585.5 Q F0
(XmbDrawImageString)3.666 E F1(,).916 E F0(XwcDrawImageString)3.666 E F1
(and)3.666 E F0(Xutf8DrawImageString)3.666 E F1(functions)3.666 E
(\214ll a destination rectangle with the background pix)72 598.5 Q
(el de\214ned in the GC and then paint the te)-.165 E(xt)-.165 E
(with the fore)72 611.5 Q(ground pix)-.165 E 2.75(el. The)-.165 F
(\214lled rectangle is the rectangle returned to o)2.75 E -.165(ve)-.165
G(rall_logical_return).165 E(by)72 624.5 Q F0(XmbT)3.666 E(extExtents)
-1.012 E F1(,).916 E F0(XwcT)3.666 E(extExtents)-1.012 E F1(or)3.666 E
F0(Xutf8T)3.666 E(extExtents)-1.012 E F1(for the same te)3.666 E(xt and)
-.165 E F0(XF)3.666 E(ontSet)-.275 E F1(.).916 E(When the)72 641.4 Q F0
(XF)3.666 E(ontSet)-.275 E F1(has missing charsets, each una)3.666 E
-.275(va)-.22 G(ilable character is dra).275 E(wn with the def)-.165 E
(ault)-.11 E(string returned by)72 654.4 Q F0(XCr)3.666 E(eateF)-.198 E
(ontSet)-.275 E F1 5.5(.T).916 G(he beha)-5.5 E(vior for an in)-.22 E
-.275(va)-.44 G(lid codepoint is unde\214ned.).275 E(The function)72
671.3 Q F0(Xutf8T)3.666 E(extExtents)-1.012 E F1(is an XFree86 e)3.666 E
(xtension introduced in XFree86 4.0.2. Its pres-)-.165 E
(ence is indicated by the macro)72 684.3 Q F0(X_HA)3.666 E
(VE_UTF8_STRING)-1.595 E F1(.).916 E F0(301)279.75 769 Q 0 Cg EP
%%Page: 302 307
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E 2.75(13.5. Input)72 85 R(Methods)2.75
E/F1 11/Times-Roman@0 SF(This section pro)72 101.9 Q
(vides discussions of the follo)-.165 E
(wing X Input Method \(XIM\) topics:)-.275 E 23.65<8349>72 118.8 S
(nput method o)-23.65 E -.165(ve)-.165 G(rvie).165 E(w)-.275 E 23.65
<8349>72 135.7 S(nput method management)-23.65 E 23.65<8349>72 152.6 S
(nput method functions)-23.65 E 23.65<8349>72 169.5 S(nput method v)
-23.65 E(alues)-.275 E 23.65<8349>72 186.4 S(nput conte)-23.65 E
(xt functions)-.165 E 23.65<8349>72 203.3 S(nput conte)-23.65 E(xt v)
-.165 E(alues)-.275 E 23.65<8349>72 220.2 S
(nput method callback semantics)-23.65 E 23.65<8345>72 237.1 S -.165(ve)
-23.65 G(nt \214ltering).165 E 23.65<8347>72 254 S(etting k)-23.65 E
-.165(ey)-.11 G(board input).165 E 23.65<8349>72 270.9 S
(nput method con)-23.65 E -.165(ve)-.44 G(ntions).165 E F0 2.75
(13.5.1. Input)72 296.9 R(Method Ov)2.75 E(er)-.11 E(view)-.11 E F1
(This section pro)72 313.8 Q(vides de\214nitions for terms and concepts\
 used for internationalized te)-.165 E(xt input and a)-.165 E(brief o)72
326.8 Q -.165(ve)-.165 G(rvie).165 E 2.75(wo)-.275 G 2.75(ft)-2.75 G
(he intended use of the mechanisms pro)-2.75 E(vided by Xlib)-.165 E(.)
-.44 E 2.75(Al)72 343.7 S(ar)-2.75 E(ge number of languages in the w)
-.198 E(orld use alphabets consisting of a small set of symbols \(let-)
-.11 E(ters\) to form w)72 356.7 Q 2.75(ords. T)-.11 F 2.75(oe)-.88 G
(nter te)-2.75 E
(xt into a computer in an alphabetic language, a user usually has a)
-.165 E -.11(ke)72 369.7 S(yboard on which there e)-.055 E(xist k)-.165
E .33 -.165(ey s)-.11 H(ymbols corresponding to the alphabet.).165 E
(Sometimes, a fe)5.5 E(w)-.275 E
(characters of an alphabetic language are missing on the k)72 382.7 Q
-.165(ey)-.11 G 2.75(board. Man).165 F 2.75(yc)-.165 G
(omputer users who)-2.75 E
(speak a Latin-alphabet-based language only ha)72 395.7 Q .33 -.165
(ve a)-.22 H 2.75(nE).165 G(nglish-based k)-2.75 E -.165(ey)-.11 G 2.75
(board. The).165 F 2.75(yn)-.165 G(eed to hit a)-2.75 E
(combination of k)72 408.7 Q -.165(ey)-.11 G(strok).165 E
(es to enter a character that does not e)-.11 E(xist directly on the k)
-.165 E -.165(ey)-.11 G 2.75(board. A).165 F(number of algorithms ha)72
421.7 Q .33 -.165(ve b)-.22 H(een de).165 E -.165(ve)-.275 G
(loped for entering such characters.).165 E(These are kno)5.5 E(wn as)
-.275 E(European input methods, compose input methods, or dead-k)72
434.7 Q .33 -.165(ey i)-.11 H(nput methods.).165 E(Japanese is an e)72
451.6 Q(xample of a language with a phonetic symbol set, where each sym\
bol represents a)-.165 E(speci\214c sound.)72 464.6 Q(There are tw)5.5 E
2.75(op)-.11 G(honetic symbol sets in Japanese:)-2.75 E
(Katakana and Hirag)5.5 E 2.75(ana. In)-.055 F(gen-)2.75 E
(eral, Katakana is used for w)72 477.6 Q
(ords that are of foreign origin, and Hirag)-.11 E
(ana is used for writing nati)-.055 E -.165(ve)-.275 G(Japanese w)72
490.6 Q 2.75(ords. Collecti)-.11 F -.165(ve)-.275 G(ly).165 E 2.75(,t)
-.715 G(he tw)-2.75 E 2.75(os)-.11 G(ystems are called Kana.)-2.75 E
(Each set consists of 48 charac-)5.5 E(ters.)72 503.6 Q -.385(Ko)72
520.5 S(rean also has a phonetic symbol set, called Hangul.).385 E
(Each of the 24 basic phonetic symbols \(14)5.5 E(consonants and 10 v)72
533.5 Q -.275(ow)-.22 G(els\) represents a speci\214c sound.).275 E 2.75
(As)5.5 G(yllable is composed of tw)-2.75 E 2.75(oo)-.11 G 2.75(rt)-2.75
G(hree)-2.75 E(parts: the initial consonants, the v)72 546.5 Q -.275(ow)
-.22 G(els, and the optional last consonants.).275 E -.44(Wi)5.5 G
(th Hangul, syllables).44 E
(can be treated as the basic units on which te)72 559.5 Q
(xt processing is done.)-.165 E -.165(Fo)5.5 G 2.75(re).165 G
(xample, a delete opera-)-2.915 E(tion may w)72 572.5 Q
(ork on a phonetic symbol or a syllable.)-.11 E -.385(Ko)5.5 G
(rean code sets include se).385 E -.165(ve)-.275 G(ral thousands of).165
E(these syllables.)72 585.5 Q 2.75(Au)5.5 G
(ser types the phonetic symbols that mak)-2.75 E 2.75(eu)-.11 G 2.75(pt)
-2.75 G(he syllables of the w)-2.75 E(ords to be)-.11 E 2.75
(entered. The)72 598.5 R
(display may change as each phonetic symbol is entered.)2.75 E -.165(Fo)
5.5 G 2.75(re).165 G(xample, when the)-2.915 E(second phonetic symbol o\
f a syllable is entered, the \214rst phonetic symbol may change its sha\
pe)72 611.5 Q(and size.)72 624.5 Q(Lik)5.5 E -.275(ew)-.11 G
(ise, when the third phonetic symbol is entered, the \214rst tw).275 E
2.75(op)-.11 G(honetic symbols)-2.75 E(may change their shape and size.)
72 637.5 Q
(Not all languages rely solely on alphabetic or phonetic systems.)72
654.4 Q(Some languages, including)5.5 E(Japanese and K)72 667.4 Q
(orean, emplo)-.385 E 2.75(ya)-.11 G 2.75(ni)-2.75 G
(deographic writing system.)-2.75 E(In an ideographic system, rather)5.5
E(than taking a small set of symbols and combining them in dif)72 680.4
Q(ferent w)-.275 E(ays to create w)-.11 E(ords, each)-.11 E -.11(wo)72
693.4 S(rd consists of one unique symbol \(or).11 E 2.75(,o)-.44 G
(ccasionally)-2.75 E 2.75(,s)-.715 G -2.365 -.275(ev e)-2.75 H
(ral symbols\).).275 E(The number of symbols)5.5 E(can be v)72 706.4 Q
(ery lar)-.165 E(ge: approximately 50,000 ha)-.198 E .33 -.165(ve b)-.22
H(een identi\214ed in Hanzi, the Chinese ideographic).165 E(system.)72
719.4 Q F0(302)279.75 769 Q 0 Cg EP
%%Page: 303 308
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E/F1 11/Times-Roman@0 SF -1.1 -.88(Tw o)
72 85 T
(major aspects of ideographic systems impact their use with computers.)
3.63 E(First, the standard)5.5 E
(computer character sets in Japan, China, and K)72 98 Q
(orea include roughly 8,000 characters, while sets)-.385 E(in T)72 111 Q
(aiw)-.88 E(an ha)-.11 E .33 -.165(ve b)-.22 H
(etween 15,000 and 30,000 characters.).165 E(This mak)5.5 E
(es it necessary to use more than)-.11 E
(one byte to represent a character)72 124 Q 5.5(.S)-.605 G(econd, it ob)
-5.5 E(viously is impractical to ha)-.165 E .33 -.165(ve a k)-.22 H
-.165(ey).055 G(board that).165 E(includes all of a gi)72 137 Q -.165
(ve)-.275 G 2.75(nl).165 G(anguage')-2.75 E 2.75(si)-.605 G
(deographic symbols.)-2.75 E(Therefore, a mechanism is required for)5.5
E(entering characters so that a k)72 150 Q -.165(ey)-.11 G
(board with a reasonable number of k).165 E -.165(ey)-.11 G 2.75(sc).165
G(an be used.)-2.75 E(Those input)5.5 E
(methods are usually based on phonetics, b)72 163 Q(ut there also e)-.22
E(xist methods based on the graphical prop-)-.165 E
(erties of characters.)72 176 Q
(In Japan, both Kana and the ideographic system Kanji are used.)72 192.9
Q(In K)5.5 E(orea, Hangul and sometimes)-.385 E
(the ideographic system Hanja are used.)72 205.9 Q(No)5.5 E 2.75(wc)
-.275 G(onsider entering ideographs in Japan, K)-2.75 E(orea,)-.385 E
(China, and T)72 218.9 Q(aiw)-.88 E(an.)-.11 E
(In Japan, either Kana or English characters are typed and then a re)72
235.8 Q(gion is selected \(sometimes)-.165 E(automatically\) for con)72
248.8 Q -.165(ve)-.44 G(rsion to Kanji.).165 E(Se)5.5 E -.165(ve)-.275 G
(ral Kanji characters may ha).165 E .33 -.165(ve t)-.22 H
(he same phonetic rep-).165 E 2.75(resentation. If)72 261.8 R(that is t\
he case with the string entered, a menu of characters is presented and \
the)2.75 E(user must choose the appropriate one.)72 274.8 Q
(If no choice is necessary or a preference has been estab-)5.5 E
(lished, the input method does the substitution directly)72 287.8 Q 5.5
(.W)-.715 G(hen Latin characters are con)-5.5 E -.165(ve)-.44 G(rted to)
.165 E(Kana or Kanji, it is called a romaji con)72 300.8 Q -.165(ve)-.44
G(rsion.).165 E(In K)72 317.7 Q(orea, it is usually acceptable to k)
-.385 E(eep K)-.11 E(orean te)-.385 E(xt in Hangul form, b)-.165 E
(ut some people may)-.22 E(choose to write Hanja-originated w)72 330.7 Q
(ords in Hanja rather than in Hangul.)-.11 E 1.76 -.88(To c)5.5 H
(hange Hangul to).88 E(Hanja, the user selects a re)72 343.7 Q
(gion for con)-.165 E -.165(ve)-.44 G(rsion and then follo).165 E
(ws the same basic method as that)-.275 E(described for Japanese.)72
356.7 Q(Probably because there are well-accepted phonetic writing syste\
ms for Japanese and K)72 373.6 Q(orean,)-.385 E(computer input methods \
in these countries for entering ideographs are f)72 386.6 Q
(airly standard.)-.11 E -2.365 -.275(Ke y)5.5 H(board).275 E -.11(ke)72
399.6 S(ys ha)-.055 E .33 -.165(ve b)-.22 H
(oth English characters and phonetic symbols engra).165 E -.165(ve)-.22
G 2.75(do).165 G 2.75(nt)-2.75 G(hem, and the user can)-2.75 E
(switch between the tw)72 412.6 Q 2.75(os)-.11 G(ets.)-2.75 E
(The situation is dif)72 429.5 Q(ferent for Chinese.)-.275 E
(While there is a phonetic system called Pin)5.5 E(yin promoted)-.165 E
(by authorities, there is no consensus for entering Chinese te)72 442.5
Q 2.75(xt. Some)-.165 F -.165(ve)2.75 G(ndors use a phonetic).165 E
(decomposition \(Pin)72 455.5 Q
(yin or another\), others use ideographic decomposition of Chinese w)
-.165 E(ords, with)-.11 E -.275(va)72 468.5 S
(rious implementations and k).275 E -.165(ey)-.11 G(board layouts.).165
E(There are about 16 kno)5.5 E(wn methods, none of)-.275 E
(which is a clear standard.)72 481.5 Q(Also, there are actually tw)72
498.4 Q 2.75(oi)-.11 G(deographic sets used: T)-2.75 E
(raditional Chinese \(the original written Chi-)-.385 E
(nese\) and Simpli\214ed Chinese.)72 511.4 Q(Se)5.5 E -.165(ve)-.275 G
(ral years ago, the People').165 E 2.75(sR)-.605 G
(epublic of China launched a cam-)-2.75 E(paign to simplify some ideogr\
aphic characters and eliminate redundancies altogether)72 524.4 Q 5.5
(.U)-.605 G(nder the)-5.5 E(plan, characters w)72 537.4 Q
(ould be streamlined e)-.11 E -.165(ve)-.275 G(ry \214v).165 E 2.75(ey)
-.165 G 2.75(ears. Characters)-2.75 F(ha)2.75 E .33 -.165(ve b)-.22 H
(een re).165 E(vised se)-.275 E -.165(ve)-.275 G(ral).165 E(times no)72
550.4 Q 1.43 -.715(w, r)-.275 H(esulting in the smaller).715 E 2.75(,s)
-.44 G(impler set that mak)-2.75 E(es up Simpli\214ed Chinese.)-.11 E F0
2.75(13.5.1.1. Input)72 576.4 R(Method Ar)2.75 E(chitectur)-.198 E(e)
-.198 E F1(As sho)72 593.3 Q(wn in the pre)-.275 E
(vious section, there are man)-.275 E 2.75(yd)-.165 G(if)-2.75 E
(ferent input methods in use today)-.275 E 2.75(,e)-.715 G(ach v)-2.75 E
(ary-)-.275 E(ing with language, culture, and history)72 606.3 Q 5.5(.A)
-.715 G(common feature of man)-2.75 E 2.75(yi)-.165 G
(nput methods is that the user)-2.75 E(may type multiple k)72 619.3 Q
-.165(ey)-.11 G(strok).165 E
(es to compose a single character \(or set of characters\).)-.11 E
(The process of)5.5 E(composing characters from k)72 632.3 Q -.165(ey)
-.11 G(strok).165 E(es is called)-.11 E/F2 11/Times-Italic@0 SF(pr)2.75
E(eediting)-.407 E F1 5.5(.I)C 2.75(tm)-5.5 G(ay require comple)-2.75 E
2.75(xa)-.165 G(lgorithms)-2.75 E(and lar)72 645.3 Q(ge dictionaries in)
-.198 E -.22(vo)-.44 G(lving substantial computer resources.).22 E
(Input methods may require one or more areas in which to sho)72 662.2 Q
2.75(wt)-.275 G(he feedback of the actual)-2.75 E -.11(ke)72 675.2 S
(ystrok)-.055 E(es, to propose disambiguation to the user)-.11 E 2.75
(,t)-.44 G 2.75(ol)-2.75 G(ist dictionaries, and so on.)-2.75 E
(The input)5.5 E(method areas of concern are as follo)72 688.2 Q(ws:)
-.275 E 23.65<8354>72 705.1 S(he)-23.65 E F2(status)2.75 E F1
(area is a logical e)2.75 E(xtension of the LEDs that e)-.165 E
(xist on the ph)-.165 E(ysical k)-.055 E -.165(ey)-.11 G 2.75(board. It)
.165 F(is)2.75 E 2.75(aw)99.5 718.1 S(indo)-2.75 E 2.75(wt)-.275 G(hat \
is intended to present the internal state of the input method that is c\
ritical to)-2.75 E(the user)99.5 731.1 Q 5.5(.T)-.605 G
(he status area may consist of te)-5.5 E
(xt data and bitmaps or some combination.)-.165 E F0(303)279.75 769 Q 0
Cg EP
%%Page: 304 309
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E/F1 11/Times-Roman@0 SF 23.65<8354>72
85 S(he)-23.65 E/F2 11/Times-Italic@0 SF(pr)2.75 E(eedit)-.407 E F1
(area displays the intermediate te)2.75 E
(xt for those languages that are composing prior)-.165 E
(to the client handling the data.)99.5 98 Q 23.65<8354>72 114.9 S(he)
-23.65 E F2(auxiliary)2.75 E F1(area is used for pop-up menus and custo\
mizing dialogs that may be required)2.75 E(for an input method.)99.5
127.9 Q(There may be multiple auxiliary areas for an input method.)5.5 E
(Auxiliary)5.5 E
(areas are managed by the input method independent of the client.)99.5
140.9 Q(Auxiliary areas are)5.5 E(assumed to be separate dialogs, which\
 are maintained by the input method.)99.5 153.9 Q(There are v)72 170.8 Q
(arious user interaction styles used for preediting.)-.275 E
(The ones supported by Xlib are as)5.5 E(follo)72 183.8 Q(ws:)-.275 E
23.65<8346>72 200.7 S(or)-23.815 E F2(on-the-spot)2.75 E F1(input metho\
ds, preediting data will be displayed directly in the application)2.75 E
(windo)99.5 213.7 Q 4.18 -.715(w. A)-.275 H(pplication data is mo).715 E
-.165(ve)-.165 G 2.75(dt).165 G 2.75(oa)-2.75 G(llo)-2.75 E 2.75(wp)
-.275 G(reedit data to appear at the point of insertion.)-2.75 E<83>72
230.6 Q F2(Over)23.65 E(-the-spot)-.22 E F1
(preediting means that the data is displayed in a preedit windo)2.75 E
2.75(wt)-.275 G(hat is placed)-2.75 E -.165(ove)99.5 243.6 S 2.75(rt)
.165 G(he point of insertion.)-2.75 E<83>72 260.5 Q F2(Of)23.65 E
(f-the-spot)-.198 E F1(preediting means that the preedit windo)2.75 E
2.75(wi)-.275 G 2.75(si)-2.75 G(nside the application windo)-2.75 E 2.75
(wb)-.275 G(ut)-2.97 E(not at the point of insertion.)99.5 273.5 Q
(Often, this type of windo)5.5 E 2.75(wi)-.275 G 2.75(sp)-2.75 G
(laced at the bottom of the)-2.75 E(application windo)99.5 286.5 Q -.715
(w.)-.275 G<83>72 303.4 Q F2(Root-window)23.65 E F1
(preediting refers to input methods that use a preedit windo)2.75 E 2.75
(wt)-.275 G(hat is the child)-2.75 E(of)99.5 316.4 Q F0(RootW)3.666 E
(indo)-.198 E(w)-.11 E F1(.).916 E(It w)72 333.3 Q(ould require a lot o\
f computing resources if portable applications had to include input met\
h-)-.11 E(ods for all the languages in the w)72 346.3 Q 2.75(orld. T)
-.11 F 2.75(oa)-.88 G -.22(vo)-2.97 G
(id this, a goal of the Xlib design is to allo).22 E 2.75(wa)-.275 G(n)
-2.75 E(application to communicate with an input method placed in a sep\
arate process.)72 359.3 Q(Such a process is)5.5 E(called an)72 372.3 Q
F2(input server)2.75 E F1 5.5(.T)C(he serv)-5.5 E
(er to which the application should connect is dependent on the)-.165 E
(en)72 385.3 Q(vironment when the application is started up, that is, t\
he user language and the actual encoding)-.44 E(to be used for it.)72
398.3 Q(The input method connection is said to be)5.5 E F2
(locale-dependent)2.75 E F1 5.5(.I)C 2.75(ti)-5.5 G 2.75(sa)-2.75 G
(lso user)-2.75 E(-)-.22 E 2.75(dependent. F)72 411.3 R(or a gi)-.165 E
-.165(ve)-.275 G 2.75(nl).165 G(anguage, the user can choose, to some e)
-2.75 E(xtent, the user interf)-.165 E(ace style of)-.11 E
(input method \(if choice is possible among se)72 424.3 Q -.165(ve)-.275
G(ral\).).165 E(Using an input serv)72 441.2 Q
(er implies communication o)-.165 E -.165(ve)-.165 G(rhead, b).165 E
(ut applications can be migrated without)-.22 E 2.75(relinking. Input)72
454.2 R(methods can be implemented either as a stub communicating to an\
 input serv)2.75 E(er)-.165 E(or as a local library)72 467.2 Q(.)-.715 E
(An input method may be based on a)72 484.1 Q F2(fr)2.75 E(ont-end)-.495
E F1(or a)2.75 E F2(bac)2.75 E(k-end)-.22 E F1 2.75(architecture. In)
2.75 F 2.75(af)2.75 G(ront-end architec-)-2.75 E(ture, there are tw)72
497.1 Q 2.75(os)-.11 G(eparate connections to the X serv)-2.75 E(er: k)
-.165 E -.165(ey)-.11 G(strok).165 E(es go directly from the X serv)-.11
E(er)-.165 E(to the input method on one connection and other e)72 510.1
Q -.165(ve)-.275 G(nts to the re).165 E(gular client connection.)-.165 E
(The)5.5 E(input method is then acting as a \214lter and sends composed\
 strings to the client.)72 523.1 Q 2.75(Af)5.5 G(ront-end archi-)-2.75 E
(tecture requires synchronization between the tw)72 536.1 Q 2.75(oc)-.11
G(onnections to a)-2.75 E -.22(vo)-.22 G(id lost k).22 E .33 -.165(ey e)
-.11 H -.165(ve)-.11 G(nts or locking).165 E(issues.)72 549.1 Q
(In a back-end architecture, a single X serv)72 566 Q
(er connection is used.)-.165 E 2.75(Ad)5.5 G(ispatching mechanism must)
-2.75 E(decide on this channel to dele)72 579 Q -.055(ga)-.165 G
(te appropriate k).055 E -.165(ey)-.11 G(strok).165 E
(es to the input method.)-.11 E -.165(Fo)5.5 G 2.75(ri).165 G
(nstance, it)-2.75 E(may retain a Help k)72 592 Q -.165(ey)-.11 G(strok)
.165 E 2.75(ef)-.11 G(or its o)-2.75 E(wn purpose.)-.275 E
(In the case where the input method is a separate)5.5 E
(process \(that is, a serv)72 605 Q(er\), there must be a special commu\
nication protocol between the back-end)-.165 E
(client and the input serv)72 618 Q(er)-.165 E(.)-.605 E 2.75(Af)72
634.9 S(ront-end architecture introduces synchronization issues and a \
\214ltering mechanism for nonchar)-2.75 E(-)-.22 E(acter k)72 647.9 Q
-.165(ey)-.11 G(strok).165 E(es \(Function k)-.11 E -.165(ey)-.11 G
(s, Help, and so on\).).165 E 2.75(Ab)5.5 G
(ack-end architecture sometimes implies)-2.75 E(more communication o)72
660.9 Q -.165(ve)-.165 G(rhead and more process switching.).165 E
(If all three processes \(X serv)5.5 E(er)-.165 E(,)-.44 E(input serv)72
673.9 Q(er)-.165 E 2.75(,c)-.44 G(lient\) are running on a single w)
-2.75 E(orkstation, there are tw)-.11 E 2.75(op)-.11 G
(rocess switches for each)-2.75 E -.11(ke)72 686.9 S(ystrok)-.055 E 2.75
(ei)-.11 G 2.75(nab)-2.75 G(ack-end architecture, b)-2.75 E
(ut there is only one in a front-end architecture.)-.22 E(The abstracti\
on used by a client to communicate with an input method is an opaque da\
ta structure)72 703.8 Q(represented by the)72 716.8 Q F0(XIM)3.666 E F1
(data type.)3.666 E(This data structure is returned by the)5.5 E F0
(XOpenIM)3.666 E F1(function,)3.666 E
(which opens an input method on a gi)72 729.8 Q -.165(ve)-.275 G 2.75
(nd).165 G(isplay)-2.75 E 5.5(.S)-.715 G
(ubsequent operations on this data structure)-5.5 E F0(304)279.75 769 Q
0 Cg EP
%%Page: 305 310
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E/F1 11/Times-Roman@0 SF
(encapsulate all communication between client and input method.)72 85 Q
(There is no need for an X client)5.5 E(to use an)72 98 Q 2.75(yn)-.165
G(etw)-2.75 E
(orking library or natural language package to use an input method.)-.11
E 2.75(As)72 114.9 S(ingle input serv)-2.75 E(er may be used for one or\
 more languages, supporting one or more encoding)-.165 E 2.75
(schemes. But)72 127.9 R
(the strings returned from an input method will al)2.75 E -.11(wa)-.11 G
(ys be encoded in the \(single\)).11 E(locale associated with the)72
140.9 Q F0(XIM)3.666 E F1(object.)3.666 E F0 2.75(13.5.1.2. Input)72
166.9 R(Contexts)2.75 E F1(Xlib pro)72 183.8 Q
(vides the ability to manage a multi-threaded state for te)-.165 E
(xt input.)-.165 E 2.75(Ac)5.5 G(lient may be using)-2.75 E
(multiple windo)72 196.8 Q(ws, each windo)-.275 E 2.75(ww)-.275 G
(ith multiple te)-2.75 E
(xt entry areas, and the user possibly switching)-.165 E
(among them at an)72 209.8 Q 2.75(yt)-.165 G 2.75(ime. The)-2.75 F
(abstraction for representing the state of a particular input thread is)
2.75 E(called an)72 222.8 Q/F2 11/Times-Italic@0 SF(input conte)2.75 E
(xt)-.22 E F1 5.5(.T)C(he Xlib representation of an input conte)-5.5 E
(xt is an)-.165 E F0(XIC)3.666 E F1(.).916 E(An input conte)72 239.7 Q(\
xt is the abstraction retaining the state, properties, and semantics of\
 communica-)-.165 E(tion between a client and an input method.)72 252.7
Q(An input conte)5.5 E(xt is a combination of an input method,)-.165 E
2.75(al)72 265.7 S(ocale specifying the encoding of the character strin\
gs to be returned, a client windo)-2.75 E 1.43 -.715(w, i)-.275 H
(nternal).715 E(state information, and v)72 278.7 Q
(arious layout or appearance characteristics.)-.275 E(The input conte)
5.5 E(xt concept)-.165 E(some)72 291.7 Q
(what matches for input the graphics conte)-.275 E
(xt abstraction de\214ned for graphics output.)-.165 E(One input conte)
72 308.6 Q(xt belongs to e)-.165 E(xactly one input method.)-.165 E(Dif)
5.5 E(ferent input conte)-.275 E(xts may be associ-)-.165 E
(ated with the same input method, possibly with the same client windo)72
321.6 Q 4.18 -.715(w. A)-.275 H(n).715 E F0(XIC)3.666 E F1
(is created with)3.666 E(the)72 334.6 Q F0(XCr)3.666 E(eateIC)-.198 E F1
(function, pro)3.666 E(viding an)-.165 E F0(XIM)3.666 E F1(ar)3.666 E
(gument and af)-.198 E(\214liating the input conte)-.275 E(xt to the)
-.165 E(input method for its lifetime.)72 347.6 Q
(When an input method is closed with)5.5 E F0(XCloseIM)3.666 E F1 2.75
(,a).916 G(ll of its af)-2.75 E(\214li-)-.275 E(ated input conte)72
360.6 Q(xts should not be used an)-.165 E 2.75(ym)-.165 G
(ore \(and should preferably be destro)-2.75 E(yed before clos-)-.11 E
(ing the input method\).)72 373.6 Q(Considering the e)72 390.5 Q
(xample of a client windo)-.165 E 2.75(ww)-.275 G(ith multiple te)-2.75
E(xt entry areas, the application pro-)-.165 E(grammer could, for e)72
403.5 Q(xample, choose to implement as follo)-.165 E(ws:)-.275 E 23.65
<8341>72 420.4 S 2.75(sm)-23.65 G(an)-2.75 E 2.75(yi)-.165 G(nput conte)
-2.75 E(xts are created as te)-.165 E
(xt entry areas, and the client will get the input)-.165 E
(accumulated on each conte)99.5 433.4 Q
(xt each time it looks up in that conte)-.165 E(xt.)-.165 E 23.65<8341>
72 450.3 S(single conte)-20.9 E(xt is created for a top-le)-.165 E -.165
(ve)-.275 G 2.75(lw).165 G(indo)-2.75 E 2.75(wi)-.275 G 2.75(nt)-2.75 G
(he application.)-2.75 E(If such a windo)5.5 E(w)-.275 E(contains se)
99.5 463.3 Q -.165(ve)-.275 G(ral te).165 E
(xt entry areas, each time the user mo)-.165 E -.165(ve)-.165 G 2.75(st)
.165 G 2.75(oa)-2.75 G(nother te)-2.75 E(xt entry area, the)-.165 E
(client has to indicate changes in the conte)99.5 476.3 Q(xt.)-.165 E
2.75(Ar)72 493.2 S(ange of choices can be made by application designers\
 to use either a single or multiple input)-2.75 E(conte)72 506.2 Q
(xts, according to the needs of their application.)-.165 E F0 2.75
(13.5.1.3. Getting)72 532.2 R -.275(Ke)2.75 G(yboard Input).275 E F1
1.76 -.88(To o)72 549.1 T
(btain characters from an input method, a client must call the function)
.88 E F0(XmbLookupString)3.666 E F1(,).916 E F0(XwcLookupString)72.916
562.1 Q F1(or)3.666 E F0(Xutf8LookupString)3.666 E F1
(with an input conte)3.666 E(xt created from that input)-.165 E 2.75
(method. Both)72 575.1 R 2.75(al)2.75 G(ocale and display are bound to \
an input method when it is opened, and an input)-2.75 E(conte)72 588.1 Q
(xt inherits this locale and display)-.165 E 5.5(.A)-.715 G .33 -.165
(ny s)-5.5 H(trings returned by).165 E F0(XmbLookupString)3.666 E F1(or)
3.666 E F0(XwcLookupString)72.916 601.1 Q F1
(will be encoded in that locale. Strings returned by)3.666 E F0
(Xutf8LookupString)3.666 E F1(are)3.666 E(encoded in UTF-8.)72 614.1 Q
F0 2.75(13.5.1.4. F)72 640.1 R(ocus Management)-.275 E F1 -.165(Fo)72
657 S 2.75(re).165 G(ach te)-2.75 E(xt entry area in which the)-.165 E
F0(XmbLookupString)3.666 E F1(,).916 E F0(XwcLookupString)3.666 E F1(or)
3.666 E F0(Xutf8Lookup-)3.666 E(String)72 670 Q F1
(functions are used, there will be an associated input conte)3.666 E
(xt.)-.165 E(When the application focus mo)72 686.9 Q -.165(ve)-.165 G
2.75(st).165 G 2.75(oat)-2.75 G -.165(ex)-2.75 G 2.75(te).165 G
(ntry area, the application must set the input conte)-2.75 E(xt)-.165 E
(focus to the input conte)72 699.9 Q(xt associated with that area.)-.165
E(The input conte)5.5 E(xt focus is set by calling)-.165 E F0(XSetICF)
72.916 712.9 Q(ocus)-.275 E F1(with the appropriate input conte)3.666 E
(xt.)-.165 E F0(305)279.75 769 Q 0 Cg EP
%%Page: 306 311
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E/F1 11/Times-Roman@0 SF
(Also, when the application focus mo)72 85 Q -.165(ve)-.165 G 2.75(so)
.165 G(ut of a te)-2.75 E
(xt entry area, the application should unset the)-.165 E
(focus for the associated input conte)72 98 Q(xt by calling)-.165 E F0
(XUnsetICF)3.666 E(ocus)-.275 E F1 5.5(.A).916 G 2.75(sa)-5.5 G 2.75(no)
-2.75 G(ptimization, if)-2.75 E F0(XSet-)3.666 E(ICF)72 111 Q(ocus)-.275
E F1(is called successi)3.666 E -.165(ve)-.275 G(ly on tw).165 E 2.75
(od)-.11 G(if)-2.75 E(ferent input conte)-.275 E
(xts, setting the focus on the second)-.165 E
(will automatically unset the focus on the \214rst.)72 124 Q 1.76 -.88
(To s)72 140.9 T(et and unset the input conte).88 E(xt focus correctly)
-.165 E 2.75(,i)-.715 G 2.75(ti)-2.75 G 2.75(sn)-2.75 G
(ecessary to track application-le)-2.75 E -.165(ve)-.275 G 2.75(lf).165
G(ocus)-2.75 E 2.75(changes. Such)72 153.9 R
(focus changes do not necessarily correspond to X serv)2.75 E
(er focus changes.)-.165 E(If a single input conte)72 170.8 Q
(xt is being used to do input for multiple te)-.165 E
(xt entry areas, it will also be nec-)-.165 E
(essary to set the focus windo)72 183.8 Q 2.75(wo)-.275 G 2.75(ft)-2.75
G(he input conte)-2.75 E(xt whene)-.165 E -.165(ve)-.275 G 2.75(rt).165
G(he focus windo)-2.75 E 2.75(wc)-.275 G(hanges \(see sec-)-2.75 E
(tion 13.5.6.3\).)72 196.8 Q F0 2.75(13.5.1.5. Geometry)72 222.8 R
(Management)2.75 E F1
(In most input method architectures \(on-the-spot being the notable e)72
239.7 Q(xception\), the input method)-.165 E
(will perform the display of its o)72 252.7 Q(wn data.)-.275 E 1.76 -.88
(To p)5.5 H(ro).88 E(vide better visual locality)-.165 E 2.75(,i)-.715 G
2.75(ti)-2.75 G 2.75(so)-2.75 G(ften desirable to)-2.75 E(ha)72 265.7 Q
.33 -.165(ve t)-.22 H(he input method areas embedded within a client.)
.165 E 1.76 -.88(To d)5.5 H 2.75(ot).88 G
(his, the client may need to allocate)-2.75 E
(space for an input method.)72 278.7 Q(Xlib pro)5.5 E
(vides support that allo)-.165 E(ws the size and position of input)-.275
E(method areas to be pro)72 291.7 Q(vided by a client.)-.165 E
(The input method areas that are supported for geometry)5.5 E
(management are the status area and the preedit area.)72 304.7 Q(The fu\
ndamental concept on which geometry management for input method windo)72
321.6 Q(ws is based is)-.275 E(the proper di)72 334.6 Q(vision of respo\
nsibilities between the client \(or toolkit\) and the input method.)
-.275 E(The)5.5 E(di)72 347.6 Q(vision of responsibilities is as follo)
-.275 E(ws:)-.275 E 23.65<8354>72 364.5 S
(he client is responsible for the geometry of the input method windo)
-23.65 E -.715(w.)-.275 G 23.65<8354>72 381.4 S(he input method is resp\
onsible for the contents of the input method windo)-23.65 E -.715(w.)
-.275 G(An input method is able to suggest a size to the client, b)72
398.3 Q(ut it cannot suggest a placement.)-.22 E(Also the)5.5 E
(input method can only suggest a size.)72 411.3 Q
(It does not determine the size, and it must accept the size it)5.5 E
(is gi)72 424.3 Q -.165(ve)-.275 G(n.).165 E(Before a client pro)72
441.2 Q(vides geometry management for an input method, it must determin\
e if geome-)-.165 E(try management is needed.)72 454.2 Q
(The input method indicates the need for geometry management by)5.5 E
(setting)72 467.2 Q F0(XIMPr)3.666 E(eeditAr)-.198 E(ea)-.198 E F1(or)
3.666 E F0(XIMStatusAr)3.666 E(ea)-.198 E F1(in its)3.666 E F0
(XIMStyles)3.666 E F1 -.275(va)3.666 G(lue returned by).275 E F0
(XGetIMV)3.666 E(al-)-1.012 E(ues)72 480.2 Q F1 5.5(.W).916 G
(hen a client has decided that it will pro)-5.5 E
(vide geometry management for an input method, it)-.165 E
(indicates that decision by setting the)72 493.2 Q F0(XNInputStyle)3.666
E F1 -.275(va)3.666 G(lue in the).275 E F0(XIC)3.666 E F1(.).916 E(Afte\
r a client has established with the input method that it will do geomet\
ry management, the)72 510.1 Q(client must ne)72 523.1 Q
(gotiate the geometry with the input method.)-.165 E(The geometry is ne)
5.5 E(gotiated by the fol-)-.165 E(lo)72 536.1 Q(wing steps:)-.275 E
23.65<8354>72 553 S
(he client suggests an area to the input method by setting the)-23.65 E
F0(XN)3.666 E(Ar)-.22 E(eaNeeded)-.198 E F1 -.275(va)3.666 G(lue for)
.275 E(that area.)99.5 566 Q(If the client has no constraints for the i\
nput method, it either will not suggest an)5.5 E
(area or will set the width and height to zero.)99.5 579 Q
(Otherwise, it will set one of the v)5.5 E(alues.)-.275 E 23.65<8354>72
595.9 S(he client will get the XIC v)-23.65 E(alue)-.275 E F0(XN)3.666 E
(Ar)-.22 E(eaNeeded)-.198 E F1 5.5(.T).916 G
(he input method will return its sug-)-5.5 E(gested size in this v)99.5
608.9 Q 2.75(alue. The)-.275 F(input method should pay attention to an)
2.75 E 2.75(yc)-.165 G(onstraints sug-)-2.75 E(gested by the client.)
99.5 621.9 Q 23.65<8354>72 638.8 S(he client sets the XIC v)-23.65 E
(alue)-.275 E F0(XN)3.666 E(Ar)-.22 E(ea)-.198 E F1
(to inform the input method of the geometry of its)3.666 E(windo)99.5
651.8 Q 4.18 -.715(w. T)-.275 H(he client should try to honor the geome\
try requested by the input method.).715 E(The)5.5 E
(input method must accept this geometry)99.5 664.8 Q(.)-.715 E
(Clients doing geometry management must be a)72 681.7 Q -.11(wa)-.165 G
(re that setting other XIC v).11 E(alues may af)-.275 E(fect the)-.275 E
(geometry desired by an input method.)72 694.7 Q -.165(Fo)5.5 G 2.75(re)
.165 G(xample,)-2.915 E F0(XNF)3.666 E(ontSet)-.275 E F1(and)3.666 E F0
(XNLineSpacing)3.666 E F1(may)3.666 E
(change the geometry desired by the input method.)72 707.7 Q F0(306)
279.75 769 Q 0 Cg EP
%%Page: 307 312
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E/F1 11/Times-Roman@0 SF
(The table of XIC v)72 85 Q
(alues \(see section 13.5.6\) indicates the v)-.275 E
(alues that can cause the desired geom-)-.275 E(etry to change when the)
72 98 Q 2.75(ya)-.165 G(re set.)-2.75 E
(It is the responsibility of the client to rene)5.5 E
(gotiate the geometry)-.165 E(of the input method windo)72 111 Q 2.75
(ww)-.275 G(hen it is needed.)-2.75 E
(In addition, a geometry management callback is pro)72 127.9 Q
(vided by which an input method can initiate a)-.165 E(geometry change.)
72 140.9 Q F0 2.75(13.5.1.6. Ev)72 166.9 R(ent Filtering)-.11 E F1 2.75
<418c>72 183.8 S(ltering mechanism is pro)-2.75 E(vided to allo)-.165 E
2.75(wi)-.275 G(nput methods to capture X e)-2.75 E -.165(ve)-.275 G
(nts transparently to).165 E 2.75(clients. It)72 196.8 R(is e)2.75 E
(xpected that toolkits \(or clients\) using)-.165 E F0(XmbLookupString)
3.666 E F1(,).916 E F0(XwcLookupString)3.666 E F1(or)3.666 E F0
(Xutf8LookupString)72.916 209.8 Q F1
(will call this \214lter at some point in the e)3.666 E -.165(ve)-.275 G
(nt processing mechanism to mak).165 E(e)-.11 E(sure that e)72 222.8 Q
-.165(ve)-.275 G
(nts needed by an input method can be \214ltered by that input method.)
.165 E(If there were no \214lter)72 239.7 Q 2.75(,ac)-.44 G
(lient could recei)-2.75 E .33 -.165(ve a)-.275 H(nd discard e).165 E
-.165(ve)-.275 G(nts that are necessary for the proper).165 E
(functioning of an input method.)72 252.7 Q(The follo)5.5 E(wing pro)
-.275 E(vides a fe)-.165 E 2.75(we)-.275 G(xamples of such e)-2.915 E
-.165(ve)-.275 G(nts:).165 E 23.65<8345>72 269.6 S(xpose e)-23.65 E
-.165(ve)-.275 G(nts on preedit windo).165 E 2.75(wi)-.275 G 2.75(nl)
-2.75 G(ocal mode.)-2.75 E 23.65<8345>72 286.5 S -.165(ve)-23.65 G
(nts may be used by an input method to communicate with an input serv)
.165 E(er)-.165 E 5.5(.S)-.605 G(uch input)-5.5 E(serv)99.5 299.5 Q
(er protocol-related e)-.165 E -.165(ve)-.275 G(nts ha).165 E .33 -.165
(ve t)-.22 H 2.75(ob).165 G 2.75(ei)-2.75 G
(ntercepted if one does not w)-2.75 E(ant to disturb client)-.11 E
(code.)99.5 312.5 Q 23.65<834b>72 329.4 S .33 -.165(ey e)-23.925 H -.165
(ve)-.11 G(nts can be sent to a \214lter before the).165 E 2.75(ya)-.165
G(re bound to translations such as those the X)-2.75 E -.88(To)99.5
342.4 S(olkit Intrinsics library pro).88 E(vides.)-.165 E(Clients are e)
72 359.3 Q(xpected to get the XIC v)-.165 E(alue)-.275 E F0(XNFilterEv)
3.666 E(ents)-.11 E F1(and augment the e)3.666 E -.165(ve)-.275 G
(nt mask for the).165 E(client windo)72 372.3 Q 2.75(ww)-.275 G
(ith that e)-2.75 E -.165(ve)-.275 G(nt mask.).165 E
(This mask may be zero.)5.5 E F0 2.75(13.5.1.7. Callbacks)72 398.3 R F1
(When an on-the-spot input method is implemented, only the client can i\
nsert or delete preedit)72 415.2 Q(data in place and possibly scroll e)
72 428.2 Q(xisting te)-.165 E 2.75(xt. This)-.165 F
(means that the echo of the k)2.75 E -.165(ey)-.11 G(strok).165 E
(es has to)-.11 E(be achie)72 441.2 Q -.165(ve)-.275 G 2.75(db).165 G
2.75(yt)-2.75 G
(he client itself, tightly coupled with the input method logic.)-2.75 E
(When the user enters a k)72 458.1 Q -.165(ey)-.11 G(strok).165 E
(e, the client calls)-.11 E F0(XmbLookupString)3.666 E F1(,).916 E F0
(XwcLookupString)3.666 E F1(or)3.666 E F0(Xutf8LookupString)72.916 471.1
Q F1 5.5(.A).916 G 2.75(tt)-5.5 G
(his point, in the on-the-spot case, the echo of the k)-2.75 E -.165(ey)
-.11 G(strok).165 E 2.75(ei)-.11 G 2.75(nt)-2.75 G(he)-2.75 E
(preedit has not yet been done.)72 484.1 Q
(Before returning to the client logic that handles the input charac-)5.5
E(ters, the look-up function must call the echoing logic to insert the \
ne)72 497.1 Q 2.75(wk)-.275 G -.165(ey)-2.86 G(strok).165 E 2.75(e. If)
-.11 F(the)2.75 E -.11(ke)72 510.1 S(ystrok)-.055 E(es entered so f)-.11
E(ar mak)-.11 E 2.75(eu)-.11 G 2.75(pac)-2.75 G(haracter)-2.75 E 2.75
(,t)-.44 G(he k)-2.75 E -.165(ey)-.11 G(strok).165 E
(es entered need to be deleted, and the)-.11 E
(composed character will be returned.)72 523.1 Q
(Hence, what happens is that, while being called by client)5.5 E(code, \
the input method logic has to call back to the client before it returns\
.)72 536.1 Q(The client code, that)5.5 E
(is, a callback procedure, is called from the input method logic.)72
549.1 Q(There are a number of cases where the input method logic has to\
 call back the client.)72 566 Q(Each of)5.5 E
(those cases is associated with a well-de\214ned callback action.)72 579
Q(It is possible for the client to spec-)5.5 E(ify)72 592 Q 2.75(,f)
-.715 G(or each input conte)-2.75 E
(xt, what callback is to be called for each action.)-.165 E
(There are also callbacks pro)72 608.9 Q
(vided for feedback of status information and a callback to initiate a)
-.165 E(geometry request for an input method.)72 621.9 Q F0 2.75
(13.5.1.8. V)72 647.9 R(isible P)-.407 E(osition F)-.22 E(eedback Masks)
-.275 E F1(In the on-the-spot input style, there is a problem when atte\
mpting to dra)72 664.8 Q 2.75(wp)-.165 G(reedit strings that are)-2.75 E
(longer than the a)72 677.8 Q -.275(va)-.22 G(ilable space.).275 E
(Once the display area is e)5.5 E(xceeded, it is not clear ho)-.165 E
2.75(wb)-.275 G(est to dis-)-2.75 E(play the preedit string.)72 690.8 Q
(The visible position feedback masks of)5.5 E F0(XIMT)3.666 E(ext)-1.012
E F1(help resolv)3.666 E 2.75(et)-.165 G(his prob-)-2.75 E(lem by allo)
72 703.8 Q(wing the input method to specify hints that indicate the ess\
ential portions of the)-.275 E(preedit string.)72 716.8 Q -.165(Fo)5.5 G
2.75(re).165 G(xample, such hints can help de)-2.915 E -.165(ve)-.275 G
(lopers implement scrolling of a long preedit).165 E
(string within a short preedit display area.)72 729.8 Q F0(307)279.75
769 Q 0 Cg EP
%%Page: 308 313
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E 2.75(13.5.1.9. Pr)72 85 R
(eedit String Management)-.198 E/F1 11/Times-Roman@0 SF
(As highlighted before, the input method architecture pro)72 101.9 Q
(vides preediting, which supports a type)-.165 E
(of preprocessor input composition.)72 114.9 Q
(In this case, composition consists of interpreting a sequence)5.5 E
(of k)72 127.9 Q .33 -.165(ey e)-.11 H -.165(ve)-.11 G
(nts and returning a committed string via).165 E F0(XmbLookupString)
3.666 E F1(,).916 E F0(XwcLookupString)3.666 E F1(or)3.666 E F0
(Xutf8LookupString)72.916 140.9 Q F1 5.5(.T).916 G(his pro)-5.5 E
(vides the basics for input methods.)-.165 E
(In addition to preediting based on k)72 157.8 Q .33 -.165(ey e)-.11 H
-.165(ve)-.11 G(nts, a general frame).165 E -.11(wo)-.275 G(rk is pro)
.11 E(vided to gi)-.165 E .33 -.165(ve a c)-.275 H(lient that).165 E
(desires it more adv)72 170.8 Q(anced preediting based on the te)-.275 E
(xt within the client.)-.165 E(This frame)5.5 E -.11(wo)-.275 G
(rk is called).11 E/F2 11/Times-Italic@0 SF(string con)72 183.8 Q(ver)
-.44 E(sion)-.11 E F1(and is pro)2.75 E(vided using XIC v)-.165 E 2.75
(alues. The)-.275 F(fundamental concept of string con)2.75 E -.165(ve)
-.44 G -.22(r-).165 G(sion is to allo)72 196.8 Q 2.75(wt)-.275 G
(he input method to manipulate the client')-2.75 E 2.75(st)-.605 G -.165
(ex)-2.75 G 2.75(ti).165 G(ndependent of an)-2.75 E 2.75(yu)-.165 G
(ser preedit-)-2.75 E(ing operation.)72 209.8 Q(The need for string con)
72 226.7 Q -.165(ve)-.44 G
(rsion is based on language needs and input method capabilities.).165 E
(The)5.5 E(follo)72 239.7 Q(wing are some e)-.275 E
(xamples of string con)-.165 E -.165(ve)-.44 G(rsion:).165 E 23.65<8354>
72 256.6 S(ransliteration con)-24.035 E -.165(ve)-.44 G(rsion pro).165 E
(vides language-speci\214c con)-.165 E -.165(ve)-.44 G
(rsions within the input method.).165 E(In the case of K)99.5 269.6 Q
(orean input, users wish to con)-.385 E -.165(ve)-.44 G
(rt a Hangul string into a Hanja string while).165 E
(in preediting, after preediting, or in other situations \(for e)99.5
282.6 Q(xample, on a selected string\).)-.165 E(The)5.5 E(con)99.5 295.6
Q -.165(ve)-.44 G
(rsion is triggered when the user presses a Hangul-to-Hanja k).165 E .33
-.165(ey s)-.11 H(equence \(which may).165 E
(be input method speci\214c\).)99.5 308.6 Q(Sometimes the user may w)5.5
E(ant to in)-.11 E -.22(vo)-.44 G .22 -.11(ke t).22 H(he con).11 E -.165
(ve)-.44 G(rsion after \214n-).165 E(ishing preediting or on a user)99.5
321.6 Q(-selected string.)-.22 E(Thus, the string to be con)5.5 E -.165
(ve)-.44 G(rted is in an).165 E(application b)99.5 334.6 Q(uf)-.22 E
(fer)-.275 E 2.75(,n)-.44 G(ot in the preedit area of the input method.)
-2.75 E(The string con)5.5 E -.165(ve)-.44 G(rsion ser).165 E(-)-.22 E
(vices allo)99.5 347.6 Q 2.75(wt)-.275 G
(he client to request this transliteration con)-2.75 E -.165(ve)-.44 G
(rsion from the input method.).165 E(There are man)99.5 360.6 Q 2.75(yo)
-.165 G(ther transliteration con)-2.75 E -.165(ve)-.44 G
(rsions de\214ned for v).165 E(arious languages, for e)-.275 E(xam-)
-.165 E(ple, Kana-to-Kanji con)99.5 373.6 Q -.165(ve)-.44 G
(rsion in Japanese.).165 E(The k)99.5 399.6 Q .33 -.165(ey t)-.11 H 2.75
(or).165 G(emember is that transliteration con)-2.75 E -.165(ve)-.44 G
(rsions are triggered at the request of the).165 E
(user and returned to the client immediately without af)99.5 412.6 Q
(fecting the preedit area of the input)-.275 E(method.)99.5 425.6 Q
23.65<8352>72 442.5 S(econ)-23.65 E -.165(ve)-.44 G(rsion of a pre).165
E(viously committed string or a selected string is supported by man)
-.275 E(y)-.165 E(input methods as a con)99.5 455.5 Q -.165(ve)-.44 G
(nience to the user).165 E 5.5(.F)-.605 G(or e)-5.665 E
(xample, a user tends to mistype the com-)-.165 E(mit k)99.5 468.5 Q .33
-.165(ey w)-.11 H(hile preediting.).165 E
(In that case, some input methods pro)5.5 E(vide a special k)-.165 E .33
-.165(ey s)-.11 H(equence).165 E(to request a `)99.5 481.5 Q(`recon)
-.814 E -.165(ve)-.44 G(rt').165 E 2.75('o)-.814 G
(peration on the committed string, similiar to the undo f)-2.75 E
(acility)-.11 E(pro)99.5 494.5 Q(vided by most te)-.165 E(xt editors.)
-.165 E(Another e)5.5 E
(xample is where the user is proofreading a docu-)-.165 E
(ment that has some miscon)99.5 507.5 Q -.165(ve)-.44 G
(rsions from preediting and w).165 E(ants to correct the miscon)-.11 E
-.165(ve)-.44 G(rted).165 E(te)99.5 520.5 Q 2.75(xt. Such)-.165 F(recon)
2.75 E -.165(ve)-.44 G(rsion is ag).165 E(ain triggered by the user in)
-.055 E -.22(vo)-.44 G(king some special action, b).22 E(ut)-.22 E
(recon)99.5 533.5 Q -.165(ve)-.44 G(rsions should not af).165 E
(fect the state of the preedit area.)-.275 E 23.65<8343>72 550.4 S(onte)
-23.65 E(xt-sensiti)-.165 E .33 -.165(ve c)-.275 H(on).165 E -.165(ve)
-.44 G
(rsion is required for some languages and input methods that need to)
.165 E(retrie)99.5 563.4 Q .33 -.165(ve t)-.275 H -.165(ex).165 G 2.75
(tt).165 G(hat surrounds the current spot location \(cursor position\) \
of the client')-2.75 E 2.75(sb)-.605 G(uf)-2.97 E(fer)-.275 E(.)-.605 E
(Such te)99.5 576.4 Q(xt is needed when the preediting operation depend\
s on some surrounding characters)-.165 E
(\(usually preceding the spot location\).)99.5 589.4 Q -.165(Fo)5.5 G
2.75(re).165 G(xample, in Thai language input, certain charac-)-2.915 E
(ter sequences may be in)99.5 602.4 Q -.275(va)-.44 G
(lid and the input method may w).275 E(ant to check whether characters)
-.11 E(constitute a v)99.5 615.4 Q(alid w)-.275 E 2.75(ord. Input)-.11 F
(methods that do such conte)2.75 E(xt-dependent checking need to)-.165 E
(retrie)99.5 628.4 Q .33 -.165(ve t)-.275 H(he characters surrounding t\
he current cursor position to obtain complete w).165 E(ords.)-.11 E
(Unlik)99.5 654.4 Q 2.75(eo)-.11 G(ther con)-2.75 E -.165(ve)-.44 G
(rsions, this con).165 E -.165(ve)-.44 G(rsion is not e).165 E
(xplicitly requested by the user)-.165 E 5.5(.I)-.605 G(nput)-5.5 E
(methods that pro)99.5 667.4 Q(vide such conte)-.165 E(xt-sensiti)-.165
E .33 -.165(ve c)-.275 H(on).165 E -.165(ve)-.44 G
(rsion continuously need to request con-).165 E(te)99.5 680.4 Q
(xt from the client, and an)-.165 E 2.75(yc)-.165 G(hange in the conte)
-2.75 E(xt of the spot location may af)-.165 E(fect such con-)-.275 E
-.165(ve)99.5 693.4 S 2.75(rsions. The).165 F(client')2.75 E 2.75(sc)
-.605 G(onte)-2.75 E(xt w)-.165 E(ould be needed if the user mo)-.11 E
-.165(ve)-.165 G 2.75(st).165 G(he cursor and starts edit-)-2.75 E
(ing ag)99.5 706.4 Q(ain.)-.055 E -.165(Fo)99.5 732.4 S 2.75(rt).165 G
(his reason, an input method supporting this type of con)-2.75 E -.165
(ve)-.44 G(rsion should tak).165 E 2.75(en)-.11 G(otice of)-2.75 E F0
(308)279.75 769 Q 0 Cg EP
%%Page: 309 314
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E/F1 11/Times-Roman@0 SF
(when the client calls)99.5 85 Q F0(XmbResetIC)3.666 E F1(,).916 E F0
(XwcResetIC)3.666 E F1(or)3.666 E F0(Xutf8ResetIC)3.666 E F1 2.75(,w)
.916 G(hich is usually an)-2.75 E(indication of a conte)99.5 98 Q
(xt change.)-.165 E(Conte)72 114.9 Q(xt-sensiti)-.165 E .33 -.165(ve c)
-.275 H(on).165 E -.165(ve)-.44 G(rsions just need a cop).165 E 2.75(yo)
-.11 G 2.75(ft)-2.75 G(he client')-2.75 E 2.75(st)-.605 G -.165(ex)-2.75
G(t, while other con).165 E -.165(ve)-.44 G(rsions replace).165 E
(the client')72 127.9 Q 2.75(st)-.605 G -.165(ex)-2.75 G 2.75(tw).165 G
(ith ne)-2.75 E 2.75(wt)-.275 G -.165(ex)-2.75 G 2.75(tt).165 G 2.75(oa)
-2.75 G(chie)-2.75 E .33 -.165(ve t)-.275 H(he recon).165 E -.165(ve)
-.44 G(rsion or transliteration.).165 E -1.1(Ye)8.25 G 2.75(ti)1.1 G
2.75(na)-2.75 G(ll cases the)-2.75 E(result of a con)72 140.9 Q -.165
(ve)-.44 G
(rsion, either immediately or via preediting, is returned by the).165 E
F0(XmbLookup-)3.666 E(String)72 153.9 Q F1(,).916 E F0(XwcLookupString)
3.666 E F1(and)3.666 E F0(Xutf8LookupString)3.666 E F1(functions.)3.666
E(String con)72 170.8 Q -.165(ve)-.44 G
(rsion support is dependent on the a).165 E -.275(va)-.22 G
(ilability of the).275 E F0(XNStringCon)3.666 E -.11(ve)-.44 G(rsion).11
E F1(or)3.666 E F0(XNStringCon)72.916 183.8 Q -.11(ve)-.44 G
(rsionCallback).11 E F1(XIC v)3.666 E 2.75(alues. Because)-.275 F
(the input method may not support string)2.75 E(con)72 196.8 Q -.165(ve)
-.44 G(rsions, clients ha).165 E .33 -.165(ve t)-.22 H 2.75(oq).165 G
(uery the a)-2.75 E -.275(va)-.22 G(ilability of string con).275 E -.165
(ve)-.44 G(rsion operations by checking the).165 E(supported XIC v)72
209.8 Q(alues list by calling)-.275 E F0(XGetIMV)3.666 E(alues)-1.012 E
F1(with the)3.666 E F0(XNQueryICV)3.666 E(aluesList)-1.012 E F1(IM v)
3.666 E(alue.)-.275 E(The dif)72 226.7 Q(ference between these tw)-.275
E 2.75(ov)-.11 G(alues is whether the con)-3.025 E -.165(ve)-.44 G
(rsion is in).165 E -.22(vo)-.44 G -.11(ke).22 G 2.75(db).11 G 2.75(yt)
-2.75 G(he client or the)-2.75 E(input method.)72 239.7 Q(The)5.5 E F0
(XNStringCon)3.666 E -.11(ve)-.44 G(rsion).11 E F1(XIC v)3.666 E
(alue is used by clients to request a string con)-.275 E -.165(ve)-.44 G
-.22(r-).165 G(sion from the input method.)72 252.7 Q
(The client is responsible for determining which e)5.5 E -.165(ve)-.275
G(nts are used to).165 E(trigger the string con)72 265.7 Q -.165(ve)-.44
G(rsion and whether the string to be con).165 E -.165(ve)-.44 G
(rted should be copied or deleted.).165 E(The type of con)72 278.7 Q
-.165(ve)-.44 G(rsion is determined by the input method; the client can\
 only pass the string to be).165 E(con)72 291.7 Q -.165(ve)-.44 G 2.75
(rted. The).165 F(client is guaranteed that no)2.75 E F0(XNStringCon)
3.666 E -.11(ve)-.44 G(rsionCallback).11 E F1(will be issued when)3.666
E(this v)72 304.7 Q
(alue is set; thus, the client need only set one of these v)-.275 E
(alues.)-.275 E(The)72 321.6 Q F0(XNStringCon)3.666 E -.11(ve)-.44 G
(rsionCallback).11 E F1(XIC v)3.666 E
(alue is used by the client to notify the input method)-.275 E
(that it will accept requests from the input method for string con)72
334.6 Q -.165(ve)-.44 G 2.75(rsion. If).165 F(this v)2.75 E
(alue is set, it is)-.275 E(the input method')72 347.6 Q 2.75(sr)-.605 G
(esponsibility to determine which e)-2.75 E -.165(ve)-.275 G
(nts are used to trigger the string con).165 E -.165(ve)-.44 G -.22(r-)
.165 G 2.75(sion. When)72 360.6 R(such e)2.75 E -.165(ve)-.275 G
(nts occur).165 E 2.75(,t)-.44 G
(he input method issues a call to the client-supplied procedure to)-2.75
E(retrie)72 373.6 Q .33 -.165(ve t)-.275 H(he string to be con).165 E
-.165(ve)-.44 G 2.75(rted. The).165 F(client')2.75 E 2.75(sc)-.605 G
(allback procedure is noti\214ed whether to cop)-2.75 E 2.75(yo)-.11 G
(r)-2.75 E(delete the string and is pro)72 386.6 Q
(vided with hints as to the amount of te)-.165 E(xt needed.)-.165 E(The)
5.5 E F0(XIMStringCon-)3.666 E -.11(ve)72 399.6 S(rsionCallbackStruct)
.11 E F1(speci\214es which te)3.666 E
(xt should be passed back to the input method.)-.165 E(Finally)72 416.5
Q 2.75(,t)-.715 G(he input method may call the client')-2.75 E(s)-.605 E
F0(XNStringCon)3.666 E -.11(ve)-.44 G(rsionCallback).11 E F1
(procedure multi-)3.666 E
(ple times if the string returned from the callback is not suf)72 429.5
Q(\214cient to perform a successful con)-.275 E -.165(ve)-.44 G -.22(r-)
.165 G 5.5(sion. The)72 442.5 R(ar)2.75 E(guments to the client')-.198 E
2.75(sp)-.605 G(rocedure allo)-2.75 E 2.75(wt)-.275 G
(he input method to de\214ne a position \(in)-2.75 E
(character units\) relati)72 455.5 Q .33 -.165(ve t)-.275 H 2.75(ot).165
G(he client')-2.75 E 2.75(sc)-.605 G
(ursor position and the size of the te)-2.75 E(xt needed.)-.165 E(By v)
5.5 E(arying)-.275 E(the position and size of the desired te)72 468.5 Q
(xt in subsequent callbacks, the input method can retrie)-.165 E -.165
(ve)-.275 G(additional te)72 481.5 Q(xt.)-.165 E F0 2.75(13.5.2. Input)
72 511.4 R(Method Management)2.75 E F1(The interf)72 528.3 Q(ace to inp\
ut methods might appear to be simply creating an input method \()-.11 E
F0(XOpenIM).916 E F1(\)).916 E(and freeing an input method \()72 541.3 Q
F0(XCloseIM).916 E F1 2.75(\). Ho).916 F(we)-.275 E -.165(ve)-.275 G .88
-.44(r, i).165 H(nput methods may require comple).44 E 2.75(xc)-.165 G
(om-)-2.75 E(munication with input method serv)72 554.3 Q(ers \(IM serv)
-.165 E(ers\), for e)-.165 E(xample:)-.165 E 23.65<8349>72 571.2 S 2.75
(ft)-23.65 G(he X serv)-2.75 E(er)-.165 E 2.75(,I)-.44 G 2.75(Ms)-2.75 G
(erv)-2.75 E(er)-.165 E 2.75(,a)-.44 G
(nd X clients are started asynchronously)-2.75 E 2.75(,s)-.715 G
(ome clients may)-2.75 E(attempt to connect to the IM serv)99.5 584.2 Q
(er before it is fully operational, and f)-.165 E 2.75(ail. Therefore,)
-.11 F(some)2.75 E(mechanism is needed to allo)99.5 597.2 Q 2.75(wc)
-.275 G(lients to detect when an IM serv)-2.75 E(er has started.)-.165 E
(It is up to clients to decide what should be done when an IM serv)72
614.1 Q(er is not a)-.165 E -.275(va)-.22 G(ilable \(for e).275 E
(xample,)-.165 E -.11(wa)72 627.1 S(it, or use some other IM serv).11 E
(er\).)-.165 E 23.65<8353>72 647.9 S(ome input methods may allo)-23.65 E
2.75(wt)-.275 G(he underlying IM serv)-2.75 E(er to be switched.)-.165 E
(Such customiza-)5.5 E
(tion may be desired without restarting the entire client.)99.5 660.9 Q
1.76 -.88(To s)72 677.8 T
(upport management of input methods in these cases, the follo).88 E
(wing functions are pro)-.275 E(vided:)-.165 E F0(309)279.75 769 Q 0 Cg
EP
%%Page: 310 315
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E(XRegisterIMInstantiateCallback)72.916
85 Q/F1 11/Times-Roman@0 SF(This function allo)261.3 85 Q
(ws clients to re)-.275 E(gister a callback pro-)-.165 E
(cedure to be called when Xlib detects that an IM)261.3 98 Q(serv)261.3
111 Q(er is up and a)-.165 E -.275(va)-.22 G(ilable.).275 E F0(XOpenIM)
72.916 124 Q F1 2.75(Ac)261.3 124 S
(lient calls this function as a result of the callback)-2.75 E
(procedure being called.)261.3 137 Q F0(XSetIMV)72.916 150 Q(alue)-1.012
E F1(,).916 E F0(XSetICV)3.666 E(alue)-1.012 E F1
(These functions use the XIM and XIC v)261.3 150 Q(alues,)-.275 E F0
(XNDe-)3.666 E(str)261.3 163 Q(oyCallback)-.198 E F1 2.75(,t).916 G 2.75
(oa)-2.75 G(llo)-2.75 E 2.75(wac)-.275 G(lient to re)-2.75 E
(gister a callback)-.165 E
(procedure to be called when Xlib detects that an IM)261.3 176 Q(serv)
261.3 189 Q(er that w)-.165 E(as associated with an opened input)-.11 E
(method is no longer a)261.3 202 Q -.275(va)-.22 G(ilable.).275 E
(In addition, this function can be used to switch IM)261.3 219 Q(serv)
261.3 232 Q(ers for those input methods that support such)-.165 E
(functionality)261.3 245 Q 5.5(.T)-.715 G(he IM v)-5.5 E
(alue for switching IM serv)-.275 E(ers)-.165 E
(is implementation-dependent; see the description)261.3 258 Q(belo)261.3
271 Q 2.75(wa)-.275 G(bout switching IM serv)-2.75 E(ers.)-.165 E F0
(XUnr)72.916 284 Q(egisterIMInstantiateCallback)-.198 E F1
(This function remo)261.3 284 Q -.165(ve)-.165 G 2.75(sac).165 G
(allback procedure re)-2.75 E(gis-)-.165 E(tered by the client.)261.3
297 Q(Input methods that support switching of IM serv)72 320.4 Q
(ers may e)-.165 E(xhibit some side-ef)-.165 E(fects:)-.275 E 23.65
<8354>72 337.3 S(he input method will ensure that an)-23.65 E 2.75(yn)
-.165 G .55 -.275(ew I)-2.75 H 2.75(Ms).275 G(erv)-2.75 E
(er supports an)-.165 E 2.75(yo)-.165 G 2.75(ft)-2.75 G
(he input styles being)-2.75 E(used by input conte)99.5 350.3 Q
(xts already associated with the input method.)-.165 E(Ho)5.5 E(we)-.275
E -.165(ve)-.275 G .88 -.44(r, t).165 H(he list of sup-).44 E
(ported input styles may be dif)99.5 363.3 Q(ferent.)-.275 E 23.65<8347>
72 384.1 S(eometry management requests on pre)-23.65 E
(viously created input conte)-.275 E(xts may be initiated by)-.165 E
(the ne)99.5 397.1 Q 2.75(wI)-.275 G 2.75(Ms)-2.75 G(erv)-2.75 E(er)
-.165 E(.)-.605 E F0 2.75(13.5.2.1. Hot)72 427 R -.275(Ke)2.75 G(ys).275
E F1(Some clients need to guarantee which k)72 443.9 Q -.165(ey)-.11 G
2.75(sc).165 G(an be used to escape from the input method, re)-2.75 E
-.055(ga)-.165 G(rd-).055 E(less of the input method state; for e)72
456.9 Q(xample, the client-speci\214c Help k)-.165 E .33 -.165(ey o)-.11
H 2.75(rt).165 G(he k)-2.75 E -.165(ey)-.11 G 2.75(st).165 G 2.75(om)
-2.75 G .33 -.165(ove t)-2.75 H(he).165 E(input focus.)72 469.9 Q
(The HotK)5.5 E .33 -.165(ey m)-.275 H(echanism allo).165 E
(ws clients to specify a set of k)-.275 E -.165(ey)-.11 G 2.75(sf).165 G
(or this purpose.)-2.75 E(Ho)72 482.9 Q(we)-.275 E -.165(ve)-.275 G .88
-.44(r, t).165 H(he input method might not allo).44 E 2.75(wc)-.275 G
(lients to specify hot k)-2.75 E -.165(ey)-.11 G 2.75(s. Therefore,).165
F(clients ha)2.75 E .33 -.165(ve t)-.22 H(o).165 E
(query support of hot k)72 495.9 Q -.165(ey)-.11 G 2.75(sb).165 G 2.75
(yc)-2.75 G(hecking the supported XIC v)-2.75 E(alues list by calling)
-.275 E F0(XGetIMV)3.666 E(alues)-1.012 E F1(with the)72 508.9 Q F0
(XNQueryICV)3.666 E(aluesList)-1.012 E F1(IM v)3.666 E 2.75(alue. When)
-.275 F(the hot k)2.75 E -.165(ey)-.11 G 2.75(ss).165 G
(peci\214ed con\215ict with the k)-2.75 E -.165(ey)-.11 G
(bindings of the input method, hot k)72 521.9 Q -.165(ey)-.11 G 2.75(st)
.165 G(ak)-2.75 E 2.75(ep)-.11 G(recedence o)-2.75 E -.165(ve)-.165 G
2.75(rt).165 G(he k)-2.75 E .33 -.165(ey b)-.11 H
(indings of the input method.).165 E F0 2.75(13.5.2.2. Pr)72 551.8 R
(eedit State Operation)-.198 E F1(An input method may ha)72 568.7 Q .33
-.165(ve s)-.22 H -2.365 -.275(ev e).165 H
(ral internal states, depending on its implementation and the).275 E
2.75(locale. Ho)72 581.7 R(we)-.275 E -.165(ve)-.275 G .88 -.44(r, o)
.165 H(ne state that is independent of locale and implementation is whe\
ther the input).44 E
(method is currently performing a preediting operation.)72 594.7 Q
(Xlib pro)5.5 E(vides the ability for an applica-)-.165 E
(tion to manage the preedit state programmatically)72 607.7 Q 5.5(.T)
-.715 G .22 -.11(wo m)-6.38 H(ethods are pro).11 E(vided for retrie)
-.165 E(ving the)-.275 E(preedit state of an input conte)72 620.7 Q 2.75
(xt. One)-.165 F(method is to query the state by calling)2.75 E F0
(XGetICV)3.666 E(alues)-1.012 E F1(with)3.666 E(the)72 633.7 Q F0(XNPr)
3.666 E(eeditState)-.198 E F1(XIC v)3.666 E 2.75(alue. Another)-.275 F
(method is to recei)2.75 E .33 -.165(ve n)-.275 H(oti\214cation whene)
.165 E -.165(ve)-.275 G 2.75(rt).165 G(he preedit)-2.75 E
(state is changed.)72 646.7 Q 1.76 -.88(To r)5.5 H(ecei).88 E .33 -.165
(ve s)-.275 H(uch noti\214cation, an application needs to re).165 E
(gister a callback by call-)-.165 E(ing)72 659.7 Q F0(XSetICV)3.666 E
(alues)-1.012 E F1(with the)3.666 E F0(XNPr)3.666 E
(eeditStateNotifyCallback)-.198 E F1(XIC v)3.666 E 2.75(alue. In)-.275 F
(order to change the)2.75 E(preedit state programmatically)72 672.7 Q
2.75(,a)-.715 G 2.75(na)-2.75 G(pplication needs to call)-2.75 E F0
(XSetICV)3.666 E(alues)-1.012 E F1(with)3.666 E F0(XNPr)3.666 E(eedit-)
-.198 E(State.)72 685.7 Q F1 -1.397 -.814(Av a)72 702.6 T
(ilability of the preedit state is input method dependent.).814 E
(The input method may not pro)5.5 E(vide)-.165 E
(the ability to set the state or to retrie)72 715.6 Q .33 -.165(ve t)
-.275 H(he state programmatically).165 E 5.5(.T)-.715 G
(herefore, clients ha)-5.5 E .33 -.165(ve t)-.22 H(o).165 E(query a)72
728.6 Q -.275(va)-.22 G
(ilability of preedit state operations by checking the supported XIC v)
.275 E(alues list by calling)-.275 E F0(310)279.75 769 Q 0 Cg EP
%%Page: 311 316
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E(XGetIMV)72.916 85 Q(alues)-1.012 E/F1
11/Times-Roman@0 SF(with the)3.666 E F0(XNQueryICV)3.666 E(aluesList)
-1.012 E F1(IM v)3.666 E(alue.)-.275 E F0 2.75(13.5.3. Input)72 111 R
(Method Functions)2.75 E F1 1.76 -.88(To o)72 127.9 T
(pen a connection, use).88 E F0(XOpenIM)3.666 E F1(.).916 E .44 LW 36
145.65 36 156.65 DL 36 143.65 36 154.65 DL 41.5 141.9 36 141.9 DL 43.5
141.9 38 141.9 DL 49 141.9 43.5 141.9 DL(XIM XOpenIM)72 157.8 Q(\().916
E/F2 11/Times-Italic@0 SF(display).916 E F1(,).916 E F2(db)2.75 E F1(,)
.916 E F2 -.407(re)2.75 G(s_name).407 E F1(,).916 E F2 -.407(re)2.75 G
(s_class).407 E F1(\)).916 E(Display *)88.5 170.8 Q F2(display)A F1(;)
.916 E(XrmDatabase)88.5 183.8 Q F2(db)2.75 E F1(;).916 E(char *)88.5
196.8 Q F2 -.407(re)C(s_name).407 E F1(;).916 E(char *)88.5 209.8 Q F2
-.407(re)C(s_class).407 E F1(;).916 E F2(display)72 230.6 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2(db)72 247.5 Q F1(Speci\214es a pointer to the resource database.)61 E
F2 -.407(re)72 264.4 S(s_name).407 E F1
(Speci\214es the full resource name of the application.)29.639 E F2
-.407(re)72 281.3 S(s_class).407 E F1
(Speci\214es the full class name of the application.)31.465 E 36 276.95
36 287.95 DL 36 274.95 36 285.95 DL 41.5 286.2 36 286.2 DL 43.5 286.2 38
286.2 DL 49 286.2 43.5 286.2 DL(The)72 311.2 Q F0(XOpenIM)3.666 E F1(fu\
nction opens an input method, matching the current locale and modi\214e\
rs speci-)3.666 E 2.75(\214cation. Current)72 324.2 R
(locale and modi\214ers are bound to the input method at opening time.)
2.75 E(The locale)5.5 E
(associated with an input method cannot be changed dynamically)72 337.2
Q 5.5(.T)-.715 G(his implies that the strings)-5.5 E(returned by)72
350.2 Q F0(XmbLookupString)3.666 E F1(or)3.666 E F0(XwcLookupString)
3.666 E F1 2.75(,f).916 G(or an)-2.75 E 2.75(yi)-.165 G(nput conte)-2.75
E(xt af)-.165 E(\214liated with a)-.275 E(gi)72 363.2 Q -.165(ve)-.275 G
2.75(ni).165 G(nput method, will be encoded in the locale current at th\
e time the input method is opened.)-2.75 E(The speci\214c input method \
to which this call will be routed is identi\214ed on the basis of the c\
urrent)72 380.1 Q(locale.)72 393.1 Q F0(XOpenIM)6.416 E F1
(will identify a def)3.666 E
(ault input method corresponding to the current locale.)-.11 E(That)5.5
E(def)72 406.1 Q(ault can be modi\214ed using)-.11 E F0
(XSetLocaleModi\214ers)3.666 E F1(for the input method modi\214er)3.666
E(.)-.605 E(The db ar)72 423 Q(gument is the resource database to be us\
ed by the input method for looking up resources)-.198 E(that are pri)72
436 Q -.275(va)-.275 G(te to the input method.).275 E
(It is not intended that this database be used to look up v)5.5 E(alues)
-.275 E(that can be set as IC v)72 449 Q(alues in an input conte)-.275 E
2.75(xt. If)-.165 F(db is NULL, no database is passed to the input)2.75
E(method.)72 462 Q(The res_name and res_class ar)72 478.9 Q
(guments specify the resource name and class of the application.)-.198 E
(The)72 491.9 Q 2.75(ya)-.165 G(re intended to be used as pre\214x)-2.75
E(es by the input method when looking up resources that are)-.165 E
(common to all input conte)72 504.9 Q
(xts that may be created for this input method.)-.165 E
(The characters used for)5.5 E
(resource names and classes must be in the X Portable Character Set.)72
517.9 Q(The resources look)5.5 E(ed up are)-.11 E
(not fully speci\214ed if res_name or res_class is NULL.)72 530.9 Q
(The res_name and res_class ar)72 547.8 Q(guments are not assumed to e)
-.198 E(xist be)-.165 E(yond the call to)-.165 E F0(XOpenIM)3.666 E F1
(.).916 E(The speci\214ed resource database is assumed to e)72 560.8 Q
(xist for the lifetime of the input method.)-.165 E F0(XOpenIM)72.916
577.7 Q F1(returns NULL if no input method could be opened.)3.666 E 1.76
-.88(To c)72 607.6 T(lose a connection, use).88 E F0(XCloseIM)3.666 E F1
(.).916 E 36 625.35 36 636.35 DL 36 623.35 36 634.35 DL 41.5 621.6 36
621.6 DL 43.5 621.6 38 621.6 DL 49 621.6 43.5 621.6 DL(Status XCloseIM)
72 637.5 Q(\().916 E F2(im).916 E F1(\)).916 E(XIM)88.5 650.5 Q F2(im)
2.75 E F1(;).916 E F2(im)72 671.3 Q F1(Speci\214es the input method.)61
E 36 666.95 36 677.95 DL 36 664.95 36 675.95 DL 41.5 676.2 36 676.2 DL
43.5 676.2 38 676.2 DL 49 676.2 43.5 676.2 DL(The)72 701.2 Q F0
(XCloseIM)3.666 E F1(function closes the speci\214ed input method.)3.666
E 1.76 -.88(To s)72 731.1 T(et input method attrib).88 E(utes, use)-.22
E F0(XSetIMV)3.666 E(alues)-1.012 E F1(.).916 E F0(311)279.75 769 Q 0 Cg
EP
%%Page: 312 317
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E .44 LW 36 76.75 36 87.75 DL 36 74.75
36 85.75 DL 41.5 73 36 73 DL 43.5 73 38 73 DL 49 73 43.5 73 DL/F1 11
/Times-Roman@0 SF(char * XSetIMV)72 88.9 Q -1.834(alues \()-1.221 F/F2
11/Times-Italic@0 SF(im).916 E F1 2.75(,.).916 G(..\))-2.75 E(XIM)88.5
101.9 Q F2(im)2.75 E F1(;).916 E F2(im)72 122.7 Q F1
(Speci\214es the input method.)61 E 61(... Speci\214es)72 139.6 R(the v)
2.75 E(ariable-length ar)-.275 E(gument list to set XIM v)-.198 E
(alues.)-.275 E 36 135.25 36 146.25 DL 36 133.25 36 144.25 DL 41.5 144.5
36 144.5 DL 43.5 144.5 38 144.5 DL 49 144.5 43.5 144.5 DL(The)72 169.5 Q
F0(XSetIMV)3.666 E(alues)-1.012 E F1(function presents a v)3.666 E
(ariable ar)-.275 E(gument list programming interf)-.198 E
(ace for setting)-.11 E(attrib)72 182.5 Q
(utes of the speci\214ed input method.)-.22 E
(It returns NULL if it succeeds; otherwise, it returns the)5.5 E
(name of the \214rst ar)72 195.5 Q(gument that could not be set.)-.198 E
(Xlib does not attempt to set ar)5.5 E(guments from the)-.198 E
(supplied list that follo)72 208.5 Q 2.75(wt)-.275 G(he f)-2.75 E
(ailed ar)-.11 E(gument; all ar)-.198 E
(guments in the list preceding the f)-.198 E(ailed ar)-.11 E(gu-)-.198 E
(ment ha)72 221.5 Q .33 -.165(ve b)-.22 H(een set correctly).165 E(.)
-.715 E 1.76 -.88(To q)72 251.4 T(uery an input method, use).88 E F0
(XGetIMV)3.666 E(alues)-1.012 E F1(.).916 E 36 269.15 36 280.15 DL 36
267.15 36 278.15 DL 41.5 265.4 36 265.4 DL 43.5 265.4 38 265.4 DL 49
265.4 43.5 265.4 DL(char * XGetIMV)72 281.3 Q -1.834(alues \()-1.221 F
F2(im).916 E F1 2.75(,.).916 G(..\))-2.75 E(XIM)88.5 294.3 Q F2(im)2.75
E F1(;).916 E F2(im)72 315.1 Q F1(Speci\214es the input method.)61 E 61
(... Speci\214es)72 332 R(the v)2.75 E(ariable length ar)-.275 E
(gument list to get XIM v)-.198 E(alues.)-.275 E 36 327.65 36 338.65 DL
36 325.65 36 336.65 DL 41.5 336.9 36 336.9 DL 43.5 336.9 38 336.9 DL 49
336.9 43.5 336.9 DL(The)72 361.9 Q F0(XGetIMV)3.666 E(alues)-1.012 E F1
(function presents a v)3.666 E(ariable ar)-.275 E
(gument list programming interf)-.198 E(ace for query-)-.11 E
(ing properties or features of the speci\214ed input method.)72 374.9 Q
(This function returns NULL if it suc-)5.5 E
(ceeds; otherwise, it returns the name of the \214rst ar)72 387.9 Q
(gument that could not be obtained.)-.198 E(Each XIM v)72 404.8 Q
(alue ar)-.275 E(gument \(follo)-.198 E
(wing a name\) must point to a location where the XIM v)-.275 E
(alue is to)-.275 E(be stored.)72 417.8 Q(That is, if the XIM v)5.5 E
(alue is of type T)-.275 E 2.75(,t)-.814 G(he ar)-2.75 E
(gument must be of type T*.)-.198 E(If T itself is a)5.5 E
(pointer type, then)72 430.8 Q F0(XGetIMV)3.666 E(alues)-1.012 E F1
(allocates memory to store the actual data, and the client is)3.666 E
(responsible for freeing this data by calling)72 443.8 Q F0(XFr)3.666 E
(ee)-.198 E F1(with the returned pointer)3.666 E(.)-.605 E 1.76 -.88
(To o)72 473.7 T(btain the display associated with an input method, use)
.88 E F0(XDisplayOfIM)3.666 E F1(.).916 E 36 491.45 36 502.45 DL 36
489.45 36 500.45 DL 41.5 487.7 36 487.7 DL 43.5 487.7 38 487.7 DL 49
487.7 43.5 487.7 DL(Display * XDisplayOfIM)72 503.6 Q(\().916 E F2(im)
.916 E F1(\)).916 E(XIM)108 516.6 Q F2(im)2.75 E F1(;).916 E F2(im)72
537.4 Q F1(Speci\214es the input method.)61 E 36 533.05 36 544.05 DL 36
531.05 36 542.05 DL 41.5 542.3 36 542.3 DL 43.5 542.3 38 542.3 DL 49
542.3 43.5 542.3 DL(The)72 567.3 Q F0(XDisplayOfIM)3.666 E F1(function \
returns the display associated with the speci\214ed input method.)3.666
E 1.76 -.88(To g)72 597.2 T
(et the locale associated with an input method, use).88 E F0
(XLocaleOfIM)3.666 E F1(.).916 E 36 614.95 36 625.95 DL 36 612.95 36
623.95 DL 41.5 611.2 36 611.2 DL 43.5 611.2 38 611.2 DL 49 611.2 43.5
611.2 DL(char * XLocaleOfIM)72 627.1 Q(\().916 E F2(im).916 E F1(\)).916
E(XIM)88.5 640.1 Q F2(im)2.75 E F1(;).916 E F2(im)72 660.9 Q F1
(Speci\214es the input method.)61 E 36 656.55 36 667.55 DL 36 654.55 36
665.55 DL 41.5 665.8 36 665.8 DL 43.5 665.8 38 665.8 DL 49 665.8 43.5
665.8 DL(The)72 690.8 Q F0(XLocaleOfIM)3.666 E F1(function returns the \
locale associated with the speci\214ed input method.)3.666 E 1.76 -.88
(To r)72 720.7 T -.165(eg).88 G
(ister an input method instantiate callback, use).165 E F0
(XRegisterIMInstantiateCallback)3.666 E F1(.).916 E F0(312)279.75 769 Q
0 Cg EP
%%Page: 313 318
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E .44 LW 36 76.75 36 87.75 DL 36 74.75
36 85.75 DL 41.5 73 36 73 DL 43.5 73 38 73 DL 49 73 43.5 73 DL/F1 11
/Times-Roman@0 SF(Bool XRe)72 88.9 Q -1.834
(gisterIMInstantiateCallback \()-.165 F/F2 11/Times-Italic@0 SF(display)
.916 E F1(,).916 E F2(db)2.75 E F1(,).916 E F2 -.407(re)2.75 G(s_name)
.407 E F1(,).916 E F2 -.407(re)2.75 G(s_class).407 E F1(,).916 E F2
(callbac)2.75 E(k)-.22 E F1(,).916 E F2(client_data)2.75 E F1(\)).916 E
(Display *)88.5 101.9 Q F2(display)A F1(;).916 E(XrmDatabase)88.5 114.9
Q F2(db)2.75 E F1(;).916 E(char *)88.5 127.9 Q F2 -.407(re)C(s_name).407
E F1(;).916 E(char *)88.5 140.9 Q F2 -.407(re)C(s_class).407 E F1(;).916
E(XIMProc)88.5 153.9 Q F2(callbac)5.5 E(k)-.22 E F1(;).916 E(XPointer *)
88.5 166.9 Q F2(client_data)A F1(;).916 E F2(display)72 187.7 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2(db)72 204.6 Q F1(Speci\214es a pointer to the resource database.)61 E
F2 -.407(re)72 221.5 S(s_name).407 E F1
(Speci\214es the full resource name of the application.)29.639 E F2
-.407(re)72 238.4 S(s_class).407 E F1
(Speci\214es the full class name of the application.)31.465 E F2
(callbac)72 255.3 Q(k)-.22 E F1
(Speci\214es a pointer to the input method instantiate callback.)34.952
E F2(client_data)72 272.2 Q F1(Speci\214es the additional client data.)
22.5 E 36 267.85 36 278.85 DL 36 265.85 36 276.85 DL 41.5 277.1 36 277.1
DL 43.5 277.1 38 277.1 DL 49 277.1 43.5 277.1 DL(The)72 302.1 Q F0
(XRegisterIMInstantiateCallback)3.666 E F1(function re)3.666 E
(gisters a callback to be in)-.165 E -.22(vo)-.44 G -.11(ke).22 G 2.75
(dw).11 G(hene)-2.75 E -.165(ve)-.275 G 2.75(ra).165 G(ne)72 315.1 Q
2.75(wi)-.275 G(nput method becomes a)-2.75 E -.275(va)-.22 G
(ilable for the speci\214ed display that matches the current locale and)
.275 E(modi\214ers.)72 328.1 Q(The function returns)72 345 Q F0 -.814
(Tr)3.666 G(ue).814 E F1(if it succeeds; otherwise, it returns)74.75 358
Q F0 -.275(Fa)3.666 G(lse).275 E F1(.).916 E
(The generic prototype is as follo)72 374.9 Q(ws:)-.275 E 36 392.65 36
403.65 DL 36 390.65 36 401.65 DL 41.5 388.9 36 388.9 DL 43.5 388.9 38
388.9 DL 49 388.9 43.5 388.9 DL -.22(vo)72 404.8 S
(id IMInstantiateCallback).22 E(\().916 E F2(display).916 E F1(,).916 E
F2(client_data)2.75 E F1(,).916 E F2(call_data)2.75 E F1(\)).916 E
(Display *)88.5 417.8 Q F2(display)A F1(;).916 E(XPointer)88.5 430.8 Q
F2(client_data)2.75 E F1(;).916 E(XPointer)88.5 443.8 Q F2(call_data)
2.75 E F1(;).916 E F2(display)72 464.6 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2(client_data)72 481.5 Q F1(Speci\214es the additional client data.)
22.5 E F2(call_data)72 498.4 Q F1(Not used for this callback and al)
30.442 E -.11(wa)-.11 G(ys passed as NULL.).11 E 36 494.05 36 505.05 DL
36 492.05 36 503.05 DL 41.5 503.3 36 503.3 DL 43.5 503.3 38 503.3 DL 49
503.3 43.5 503.3 DL 1.76 -.88(To u)72 528.3 T(nre).88 E
(gister an input method instantiation callback, use)-.165 E F0(XUnr)
3.666 E(egisterIMInstantiateCallback)-.198 E F1(.).916 E F0(313)279.75
769 Q 0 Cg EP
%%Page: 314 319
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E .44 LW 36 76.75 36 87.75 DL 36 74.75
36 85.75 DL 41.5 73 36 73 DL 43.5 73 38 73 DL 49 73 43.5 73 DL/F1 11
/Times-Roman@0 SF(Bool XUnre)72 88.9 Q -1.834
(gisterIMInstantiateCallback \()-.165 F/F2 11/Times-Italic@0 SF(display)
.916 E F1(,).916 E F2(db)2.75 E F1(,).916 E F2 -.407(re)2.75 G(s_name)
.407 E F1(,).916 E F2 -.407(re)2.75 G(s_class).407 E F1(,).916 E F2
(callbac)2.75 E(k)-.22 E F1(,).916 E F2(client_data)2.75 E F1(\)).916 E
(Display *)88.5 101.9 Q F2(display)A F1(;).916 E(XrmDatabase)88.5 114.9
Q F2(db)2.75 E F1(;).916 E(char *)88.5 127.9 Q F2 -.407(re)C(s_name).407
E F1(;).916 E(char *)88.5 140.9 Q F2 -.407(re)C(s_class).407 E F1(;).916
E(XIMProc)88.5 153.9 Q F2(callbac)5.5 E(k)-.22 E F1(;).916 E(XPointer *)
88.5 166.9 Q F2(client_data)A F1(;).916 E F2(display)72 187.7 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2(db)72 204.6 Q F1(Speci\214es a pointer to the resource database.)61 E
F2 -.407(re)72 221.5 S(s_name).407 E F1
(Speci\214es the full resource name of the application.)29.639 E F2
-.407(re)72 238.4 S(s_class).407 E F1
(Speci\214es the full class name of the application.)31.465 E F2
(callbac)72 255.3 Q(k)-.22 E F1
(Speci\214es a pointer to the input method instantiate callback.)34.952
E F2(client_data)72 272.2 Q F1(Speci\214es the additional client data.)
22.5 E 36 267.85 36 278.85 DL 36 265.85 36 276.85 DL 41.5 277.1 36 277.1
DL 43.5 277.1 38 277.1 DL 49 277.1 43.5 277.1 DL(The)72 302.1 Q F0(XUnr)
3.666 E(egisterIMInstantiateCallback)-.198 E F1(function remo)3.666 E
-.165(ve)-.165 G 2.75(sa).165 G 2.75(ni)-2.75 G
(nput method instantiation call-)-2.75 E(back pre)72 315.1 Q(viously re)
-.275 E 2.75(gistered. The)-.165 F(function returns)2.75 E F0 -.814(Tr)
3.666 G(ue).814 E F1(if it succeeds; otherwise, it returns)3.666 E F0
-.275(Fa)3.666 G(lse).275 E F1(.).916 E F0 2.75(13.5.4. Input)72 341.1 R
(Method V)2.75 E(alues)-1.012 E F1(The follo)72 358 Q
(wing table describes ho)-.275 E 2.75(wX)-.275 G(IM v)-2.75 E
(alues are interpreted by an input method.)-.275 E(The \214rst col-)5.5
E(umn lists the XIM v)72 371 Q 2.75(alues. The)-.275 F
(second column indicates ho)2.75 E 2.75(we)-.275 G(ach of the XIM v)
-2.75 E(alues are treated)-.275 E(by that input style.)72 384 Q
(The follo)72 404.8 Q(wing k)-.275 E -.165(ey)-.11 G 2.75(sa).165 G
(pply to this table.)-2.75 E 502.5 416.05 72 416.05 DL F0 -.275(Ke)72
432.3 S 69.833(yE).275 G(xplanation)-69.833 E 502.5 443.05 72 443.05 DL
F1(D)72 453.3 Q(This v)160.5 453.3 Q(alue may be set using)-.275 E F0
(XSetIMV)3.666 E(alues)-1.012 E F1 5.5(.I).916 G 2.75(fi)-5.5 G 2.75(ti)
-2.75 G 2.75(sn)-2.75 G(ot set,)-2.75 E 2.75(ad)160.5 466.3 S(ef)-2.75 E
(ault is pro)-.11 E(vided.)-.165 E(S)72 479.3 Q(This v)160.5 479.3 Q
(alue may be set using)-.275 E F0(XSetIMV)3.666 E(alues)-1.012 E F1(.)
.916 E(G)72 492.3 Q(This v)160.5 492.3 Q(alue may be read using)-.275 E
F0(XGetIMV)3.666 E(alues)-1.012 E F1(.).916 E 502.5 503.05 72 503.05 DL
279.826 521.95 72 521.95 DL F0(XIM V)72 538.2 Q 129.236(alue K)-1.012 F
(ey)-.275 E 279.826 548.95 72 548.95 DL(XNQueryInputStyle)72.916 565.2 Q
F1(G)261.192 565.2 Q F0(XNResour)72.916 578.2 Q(ceName)-.198 E F1(D-S-G)
250.5 578.2 Q F0(XNResour)72.916 591.2 Q(ceClass)-.198 E F1(D-S-G)250.5
591.2 Q F0(XNDestr)72.916 604.2 Q(oyCallback)-.198 E F1(D-S-G)250.5
604.2 Q F0(XNQueryIMV)72.916 617.2 Q(aluesList)-1.012 E F1(G)261.192
617.2 Q F0(XNQueryICV)72.916 630.2 Q(aluesList)-1.012 E F1(G)261.192
630.2 Q F0(XNV)72.916 643.2 Q(isibleP)-.407 E(osition)-.22 E F1(G)
261.192 643.2 Q F0(XNR6Pr)72.916 656.2 Q(eeditCallbackBeha)-.198 E(vior)
-.275 E F1(D-S-G)250.5 656.2 Q 279.826 666.95 72 666.95 DL F0(XNR6Pr)
72.916 687.6 Q(eeditCallbackBeha)-.198 E(vior)-.275 E F1
(is obsolete and its use is not recommended \(see section)3.666 E
(13.5.4.6\).)72 700.6 Q F0(314)279.75 769 Q 0 Cg EP
%%Page: 315 320
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E 2.75(13.5.4.1. Query)72 85 R
(Input Style)2.75 E/F1 11/Times-Roman@0 SF 2.75(Ac)72 101.9 S
(lient should al)-2.75 E -.11(wa)-.11 G(ys query the input method to de\
termine which input styles are supported.).11 E(The client should then \
\214nd an input style it is capable of supporting.)72 114.9 Q(If the cl\
ient cannot \214nd an input style that it can support, it should ne)72
131.8 Q(gotiate with the user the con-)-.165 E
(tinuation of the program \(e)72 144.8 Q
(xit, choose another input method, and so on\).)-.165 E(The ar)72 161.7
Q(gument v)-.198 E
(alue must be a pointer to a location where the returned v)-.275 E
(alue will be stored.)-.275 E(The)5.5 E(returned v)72 174.7 Q
(alue is a pointer to a structure of type)-.275 E F0(XIMStyles)3.666 E
F1 5.5(.C).916 G(lients are responsible for freeing)-5.5 E(the)72 187.7
Q F0(XIMStyles)3.666 E F1 2.75(structure. T)3.666 F 2.75(od)-.88 G 2.75
(os)-2.75 G(o, use)-2.75 E F0(XFr)3.666 E(ee)-.198 E F1(.).916 E(The)72
204.6 Q F0(XIMStyles)3.666 E F1(structure is de\214ned as follo)3.666 E
(ws:)-.275 E .44 LW 36 226.25 36 237.25 DL 36 224.25 36 235.25 DL 41.5
222.5 36 222.5 DL 43.5 222.5 38 222.5 DL 49 222.5 43.5 222.5 DL
(typedef unsigned long XIMStyle;)72 241 Q(#de\214ne)72 267 Q F0(XIMPr)
125.416 267 Q(eeditAr)-.198 E(ea)-.198 E F1(0x0001L)285 267 Q(#de\214ne)
72 280 Q F0(XIMPr)125.416 280 Q(eeditCallbacks)-.198 E F1(0x0002L)285
280 Q(#de\214ne)72 293 Q F0(XIMPr)125.416 293 Q(eeditP)-.198 E(osition)
-.22 E F1(0x0004L)285 293 Q(#de\214ne)72 306 Q F0(XIMPr)125.416 306 Q
(eeditNothing)-.198 E F1(0x0008L)285 306 Q(#de\214ne)72 319 Q F0(XIMPr)
125.416 319 Q(eeditNone)-.198 E F1(0x0010L)285 319 Q(#de\214ne)72 345 Q
F0(XIMStatusAr)125.416 345 Q(ea)-.198 E F1(0x0100L)285 345 Q(#de\214ne)
72 358 Q F0(XIMStatusCallbacks)125.416 358 Q F1(0x0200L)285 358 Q
(#de\214ne)72 371 Q F0(XIMStatusNothing)125.416 371 Q F1(0x0400L)285 371
Q(#de\214ne)72 384 Q F0(XIMStatusNone)125.416 384 Q F1(0x0800L)285 384 Q
(typedef struct {)72 410 Q(unsigned short count_styles;)108 423 Q
(XIMStyle * supported_styles;)108 436 Q 2.75(}X)72 449 S(IMStyles;)-2.75
E 36 451.15 36 462.15 DL 36 449.15 36 460.15 DL 41.5 460.4 36 460.4 DL
43.5 460.4 38 460.4 DL 49 460.4 43.5 460.4 DL(An)72 485.4 Q F0
(XIMStyles)3.666 E F1(structure contains the number of input styles sup\
ported in its count_styles \214eld.)3.666 E
(This is also the size of the supported_styles array)72 498.4 Q(.)-.715
E(The supported styles is a list of bitmask combinations, which indicat\
e the combination of styles)72 515.3 Q(for each of the areas supported.)
72 528.3 Q(These areas are described later)5.5 E 5.5(.E)-.605 G
(ach element in the list should)-5.5 E(select one of the bitmask v)72
541.3 Q(alues for each area.)-.275 E
(The list describes the complete set of combina-)5.5 E(tions supported.)
72 554.3 Q(Only these combinations are supported by the input method.)
5.5 E(The preedit cate)72 571.2 Q
(gory de\214nes what type of support is pro)-.165 E
(vided by the input method for preedit)-.165 E(information.)72 584.2 Q
F0(XIMPr)72.916 603.7 Q(eeditAr)-.198 E(ea)-.198 E F1
(If chosen, the input method w)196.5 603.7 Q
(ould require the client to pro)-.11 E(vide some)-.165 E(area v)196.5
616.7 Q(alues for it to do its preediting.)-.275 E(Refer to XIC v)5.5 E
(alues)-.275 E F0(XN)3.666 E(Ar)-.22 E(ea)-.198 E F1(and)196.5 629.7 Q
F0(XN)3.666 E(Ar)-.22 E(eaNeeded)-.198 E F1(.).916 E F0(XIMPr)72.916
642.7 Q(eeditP)-.198 E(osition)-.22 E F1(If chosen, the input method w)
196.5 642.7 Q(ould require the client to pro)-.11 E(vide posi-)-.165 E
(tional v)196.5 655.7 Q 2.75(alues. Refer)-.275 F(to XIC v)2.75 E(alues)
-.275 E F0(XNSpotLocation)3.666 E F1(and)3.666 E F0(XNF)3.666 E(o-)-.275
E(cusW)196.5 668.7 Q(indo)-.198 E(w)-.11 E F1(.).916 E F0(315)279.75 769
Q 0 Cg EP
%%Page: 316 321
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E(XIMPr)72.916 85 Q(eeditCallbacks)-.198
E/F1 11/Times-Roman@0 SF(If chosen, the input method w)196.5 85 Q
(ould require the client to de\214ne the set)-.11 E
(of preedit callbacks.)196.5 98 Q(Refer to XIC v)5.5 E(alues)-.275 E F0
(XNPr)3.666 E(eeditStartCallback)-.198 E F1(,).916 E F0(XNPr)197.416 111
Q(eeditDoneCallback)-.198 E F1(,).916 E F0(XNPr)3.666 E
(eeditDrawCallback)-.198 E F1 2.75(,a).916 G(nd)-2.75 E F0(XNPr)197.416
124 Q(eeditCar)-.198 E(etCallback)-.198 E F1(.).916 E F0(XIMPr)72.916
137 Q(eeditNothing)-.198 E F1
(If chosen, the input method can function without an)196.5 137 Q 2.75
(yp)-.165 G(reedit v)-2.75 E(alues.)-.275 E F0(XIMPr)72.916 150 Q
(eeditNone)-.198 E F1(The input method does not pro)196.5 150 Q(vide an)
-.165 E 2.75(yp)-.165 G(reedit feedback.)-2.75 E(An)5.5 E(y)-.165 E
(preedit v)196.5 163 Q(alue is ignored.)-.275 E
(This style is mutually e)5.5 E(xclusi)-.165 E .33 -.165(ve w)-.275 H
(ith the).165 E(other preedit styles.)196.5 176 Q(The status cate)72
199.4 Q(gory de\214nes what type of support is pro)-.165 E
(vided by the input method for status infor)-.165 E(-)-.22 E(mation.)72
212.4 Q F0(XIMStatusAr)72.916 231.9 Q(ea)-.198 E F1
(The input method requires the client to pro)196.5 231.9 Q
(vide some area v)-.165 E(alues for)-.275 E
(it to do its status feedback.)196.5 244.9 Q(See)5.5 E F0(XN)3.666 E(Ar)
-.22 E(ea)-.198 E F1(and)3.666 E F0(XN)3.666 E(Ar)-.22 E(eaNeeded)-.198
E F1(.).916 E F0(XIMStatusCallbacks)72.916 257.9 Q F1(The input method \
requires the client to de\214ne the set of status call-)196.5 257.9 Q
(backs,)196.5 270.9 Q F0(XNStatusStartCallback)3.666 E F1(,).916 E F0
(XNStatusDoneCallback)3.666 E F1 2.75(,a).916 G(nd)-2.75 E F0
(XNStatusDrawCallback)197.416 283.9 Q F1(.).916 E F0(XIMStatusNothing)
72.916 296.9 Q F1(The input method can function without an)196.5 296.9 Q
2.75(ys)-.165 G(tatus v)-2.75 E(alues.)-.275 E F0(XIMStatusNone)72.916
309.9 Q F1(The input method does not pro)196.5 309.9 Q(vide an)-.165 E
2.75(ys)-.165 G(tatus feedback.)-2.75 E(If chosen,)5.5 E(an)196.5 322.9
Q 2.75(ys)-.165 G(tatus v)-2.75 E(alue is ignored.)-.275 E
(This style is mutually e)5.5 E(xclusi)-.165 E .33 -.165(ve w)-.275 H
(ith the).165 E(other status styles.)196.5 335.9 Q F0 2.75
(13.5.4.2. Resour)72 368.4 R(ce Name and Class)-.198 E F1(The)72 385.3 Q
F0(XNResour)3.666 E(ceName)-.198 E F1(and)3.666 E F0(XNResour)3.666 E
(ceClass)-.198 E F1(ar)3.666 E
(guments are strings that specify the full name)-.198 E
(and class used by the input method.)72 398.3 Q(These v)5.5 E
(alues should be used as pre\214x)-.275 E(es for the name and)-.165 E
(class when looking up resources that may v)72 411.3 Q
(ary according to the input method.)-.275 E(If these v)5.5 E(alues are)
-.275 E(not set, the resources will not be fully speci\214ed.)72 424.3 Q
(It is not intended that v)72 441.2 Q(alues that can be set as XIM v)
-.275 E(alues be set as resources.)-.275 E F0 2.75(13.5.4.3. Destr)72
471.1 R(oy Callback)-.198 E F1(The)72 488 Q F0(XNDestr)3.666 E
(oyCallback)-.198 E F1(ar)3.666 E
(gument is a pointer to a structure of type)-.198 E F0(XIMCallback)3.666
E F1(.).916 E F0(XNDe-)6.416 E(str)72 501 Q(oyCallback)-.198 E F1
(is triggered when an input method stops its service for an)3.666 E 2.75
(yr)-.165 G 2.75(eason. After)-2.75 F(the call-)2.75 E(back is in)72 514
Q -.22(vo)-.44 G -.11(ke).22 G
(d, the input method is closed and the associated input conte).11 E
(xt\(s\) are destro)-.165 E(yed by)-.11 E(Xlib)72 527 Q 5.5(.T)-.44 G
(herefore, the client should not call)-5.5 E F0(XCloseIM)3.666 E F1(or)
3.666 E F0(XDestr)3.666 E(oyIC)-.198 E F1(.).916 E
(The generic prototype of this callback function is as follo)72 543.9 Q
(ws:)-.275 E .44 LW 36 561.65 36 572.65 DL 36 559.65 36 570.65 DL 41.5
557.9 36 557.9 DL 43.5 557.9 38 557.9 DL 49 557.9 43.5 557.9 DL -.22(vo)
72 573.8 S(id Destro).22 E -1.834(yCallback \()-.11 F/F2 11
/Times-Italic@0 SF(im).916 E F1(,).916 E F2(client_data)2.75 E F1(,).916
E F2(call_data)2.75 E F1(\)).916 E(XIM)88.5 586.8 Q F2(im)2.75 E F1(;)
.916 E(XPointer)88.5 599.8 Q F2(client_data)2.75 E F1(;).916 E(XPointer)
88.5 612.8 Q F2(call_data)2.75 E F1(;).916 E F2(im)72 633.6 Q F1
(Speci\214es the input method.)61 E F2(client_data)72 650.5 Q F1
(Speci\214es the additional client data.)22.5 E F2(call_data)72 667.4 Q
F1(Not used for this callback and al)30.442 E -.11(wa)-.11 G
(ys passed as NULL.).11 E 36 663.05 36 674.05 DL 36 661.05 36 672.05 DL
41.5 672.3 36 672.3 DL 43.5 672.3 38 672.3 DL 49 672.3 43.5 672.3 DL
2.75(AD)72 697.3 S(estro)-2.75 E(yCallback is al)-.11 E -.11(wa)-.11 G
(ys called with a NULL call_data ar).11 E(gument.)-.198 E F0(316)279.75
769 Q 0 Cg EP
%%Page: 317 322
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E 2.75(13.5.4.4. Query)72 85 R(IM/IC V)
2.75 E(alues List)-1.012 E(XNQueryIMV)72.916 101.9 Q(aluesList)-1.012 E
/F1 11/Times-Roman@0 SF(and)3.666 E F0(XNQueryICV)3.666 E(aluesList)
-1.012 E F1(are used to query about XIM and XIC v)3.666 E(al-)-.275 E
(ues supported by the input method.)72 114.9 Q(The ar)72 131.8 Q
(gument v)-.198 E
(alue must be a pointer to a location where the returned v)-.275 E
(alue will be stored.)-.275 E(The)5.5 E(returned v)72 144.8 Q
(alue is a pointer to a structure of type)-.275 E F0(XIMV)3.666 E
(aluesList)-1.012 E F1 5.5(.C).916 G(lients are responsible for)-5.5 E
(freeing the)72 157.8 Q F0(XIMV)3.666 E(aluesList)-1.012 E F1 2.75
(structure. T)3.666 F 2.75(od)-.88 G 2.75(os)-2.75 G(o, use)-2.75 E F0
(XFr)3.666 E(ee)-.198 E F1(.).916 E(The)72 174.7 Q F0(XIMV)3.666 E
(aluesList)-1.012 E F1(structure is de\214ned as follo)3.666 E(ws:)-.275
E .44 LW 36 192.45 36 203.45 DL 36 190.45 36 201.45 DL 41.5 188.7 36
188.7 DL 43.5 188.7 38 188.7 DL 49 188.7 43.5 188.7 DL(typedef struct {)
72 207.2 Q(unsigned short count_v)108 220.2 Q(alues;)-.275 E
(char **supported_v)108 233.2 Q(alues;)-.275 E 2.75(}X)72 246.2 S(IMV)
-2.75 E(aluesList;)-1.221 E 36 248.35 36 259.35 DL 36 246.35 36 257.35
DL 41.5 257.6 36 257.6 DL 43.5 257.6 38 257.6 DL 49 257.6 43.5 257.6 DL
F0 2.75(13.5.4.5. V)72 295.6 R(isible P)-.407 E(osition)-.22 E F1(The)72
312.5 Q F0(XNV)3.666 E(isibleP)-.407 E(osition)-.22 E F1(ar)3.666 E
(gument indicates whether the visible position masks of)-.198 E F0(XIMF)
3.666 E(eed-)-.275 E(back)72 325.5 Q F1(in)3.666 E F0(XIMT)3.666 E(ext)
-1.012 E F1(are a)3.666 E -.275(va)-.22 G(ilable.).275 E(The ar)72 342.4
Q(gument v)-.198 E
(alue must be a pointer to a location where the returned v)-.275 E
(alue will be stored.)-.275 E(The)5.5 E(returned v)72 355.4 Q
(alue is of type)-.275 E F0(Bool)3.666 E F1 5.5(.I).916 G 2.75(ft)-5.5 G
(he returned v)-2.75 E(alue is)-.275 E F0 -.814(Tr)3.666 G(ue).814 E F1
2.75(,t).916 G(he input method uses the visible)-2.75 E
(position masks of)72 368.4 Q F0(XIMF)3.666 E(eedback)-.275 E F1(in)
3.666 E F0(XIMT)3.666 E(ext)-1.012 E F1 2.75(;o).916 G
(therwise, the input method does not use the)-2.75 E(masks.)72 381.4 Q
(Because this XIM v)72 398.3 Q(alue is optional, a client should call)
-.275 E F0(XGetIMV)3.666 E(alues)-1.012 E F1(with ar)3.666 E(gument)
-.198 E F0(XNQueryIMV)72.916 411.3 Q(alues)-1.012 E F1
(before using this ar)3.666 E 2.75(gument. If)-.198 F(the)2.75 E F0(XNV)
3.666 E(isibleP)-.407 E(osition)-.22 E F1(does not e)3.666 E
(xist in the)-.165 E(IM v)72 424.3 Q(alues list returned from)-.275 E F0
(XNQueryIMV)3.666 E(alues)-1.012 E F1 2.75(,t).916 G
(he visible position masks of)-2.75 E F0(XIMF)3.666 E(eedback)-.275 E F1
(in)72 437.3 Q F0(XIMT)3.666 E(ext)-1.012 E F1
(are not used to indicate the visible position.)3.666 E F0 2.75
(13.5.4.6. Pr)72 467.2 R(eedit Callback Beha)-.198 E(vior)-.275 E F1
(The)72 484.1 Q F0(XNR6Pr)3.666 E(eeditCallbackBeha)-.198 E(vior)-.275 E
F1(ar)3.666 E(gument originally included in the X11R6 speci\214cation)
-.198 E(has been deprecated.\207)72 497.1 Q(The)72 514 Q F0(XNR6Pr)3.666
E(eeditCallbackBeha)-.198 E(vior)-.275 E F1(ar)3.666 E
(gument indicates whether the beha)-.198 E(vior of preedit call-)-.22 E
(backs re)72 527 Q -.055(ga)-.165 G(rding).055 E F0(XIMPr)3.666 E
(eeditDrawCallbackStruct)-.198 E F1 -.275(va)3.666 G(lues follo).275 E
(ws Release 5 or Release 6 seman-)-.275 E(tics.)72 540 Q(The v)72 556.9
Q(alue is of type)-.275 E F0(Bool)3.666 E F1 5.5(.W).916 G
(hen querying for)-5.5 E F0(XNR6Pr)3.666 E(eeditCallbackBeha)-.198 E
(vior)-.275 E F1 2.75(,i).916 G 2.75(ft)-2.75 G(he returned)-2.75 E
-.275(va)72 569.9 S(lue is).275 E F0 -.814(Tr)3.666 G(ue).814 E F1 2.75
(,t).916 G(he input method uses the Release 6 beha)-2.75 E
(vior; otherwise, it uses the Release 5)-.22 E(beha)72 582.9 Q(vior)-.22
E 5.5(.T)-.605 G(he def)-5.5 E(ault v)-.11 E(alue is)-.275 E F0 -.275
(Fa)3.666 G(lse).275 E F1 5.5(.I).916 G 2.75(no)-5.5 G
(rder to use Release 6 semantics, the v)-2.75 E(alue of)-.275 E F0
(XNR6Pr)72.916 595.9 Q(eeditCallbackBeha)-.198 E(vior)-.275 E F1
(must be set to)3.666 E F0 -.814(Tr)3.666 G(ue).814 E F1(.).916 E
(Because this XIM v)72 612.8 Q(alue is optional, a client should call)
-.275 E F0(XGetIMV)3.666 E(alues)-1.012 E F1(with ar)3.666 E(gument)
-.198 E F0(XNQueryIMV)72.916 625.8 Q(alues)-1.012 E F1
(before using this ar)3.666 E 2.75(gument. If)-.198 F(the)2.75 E F0
(XNR6Pr)3.666 E(eeditCallbackBeha)-.198 E(vior)-.275 E F1(does)3.666 E
(not e)72 638.8 Q(xist in the IM v)-.165 E(alues list returned from)
-.275 E F0(XNQueryIMV)3.666 E(alues)-1.012 E F1 2.75(,t).916 G
(he PreeditCallback beha)-2.75 E(vior is)-.22 E(Release 5 semantics.)72
651.8 Q .36 LW 144 676 72 676 DL/F2 9/Times-Roman@0 SF 2.25<8744>83 687
S(uring formulation of the X11R6 speci\214cation, the beha)-2.25 E
(vior of the R6 PreeditDra)-.18 E(wCallbacks)-.135 E -.09(wa)72 698 S
2.25(sg).09 G(oing to dif)-2.25 E
(fer signi\214cantly from that of the R5 callbacks.)-.225 E
(Late changes to the speci\214cation)4.5 E(con)72 709 Q -.135(ve)-.36 G
-.162(rg).135 G(ed the R5 and R6 beha).162 E
(viors, eliminating the need for)-.18 E/F3 9/Times-Bold@0 SF(XNR6Pr)3 E
(eeditCallbackBeha)-.162 E(vior)-.225 E F2(.).75 E(Unfortunately)72 720
Q 2.25(,t)-.585 G(his ar)-2.25 E(gument w)-.162 E(as not remo)-.09 E
-.135(ve)-.135 G 2.25(df).135 G(rom the R6 speci\214cation before it w)
-2.25 E(as published.)-.09 E F0(317)279.75 769 Q 0 Cg EP
%%Page: 318 323
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E 2.75(13.5.5. Input)72 85 R
(Context Functions)2.75 E/F1 11/Times-Roman@0 SF(An input conte)72 101.9
Q(xt is an abstraction that is used to contain both the data required \
\(if an)-.165 E(y\) by an)-.165 E
(input method and the information required to display that data.)72
114.9 Q(There may be multiple input con-)5.5 E(te)72 127.9 Q
(xts for one input method.)-.165 E(The programming interf)5.5 E
(aces for creating, reading, or modifying an)-.11 E(input conte)72 140.9
Q(xt use a v)-.165 E(ariable ar)-.275 E(gument list.)-.198 E
(The name elements of the ar)5.5 E(gument lists are referred)-.198 E
(to as XIC v)72 153.9 Q 2.75(alues. It)-.275 F
(is intended that input methods be controlled by these XIC v)2.75 E 2.75
(alues. As)-.275 F(ne)2.75 E(w)-.275 E(XIC v)72 166.9 Q
(alues are created, the)-.275 E 2.75(ys)-.165 G(hould be re)-2.75 E
(gistered with the X Consortium.)-.165 E 1.76 -.88(To c)72 196.8 T
(reate an input conte).88 E(xt, use)-.165 E F0(XCr)3.666 E(eateIC)-.198
E F1(.).916 E .44 LW 36 214.55 36 225.55 DL 36 212.55 36 223.55 DL 41.5
210.8 36 210.8 DL 43.5 210.8 38 210.8 DL 49 210.8 43.5 210.8 DL
(XIC XCreateIC)72 226.7 Q(\().916 E/F2 11/Times-Italic@0 SF(im).916 E F1
2.75(,.).916 G(..\))-2.75 E(XIM)88.5 239.7 Q F2(im)2.75 E F1(;).916 E F2
(im)72 260.5 Q F1(Speci\214es the input method.)61 E 61(... Speci\214es)
72 277.4 R(the v)2.75 E(ariable length ar)-.275 E
(gument list to set XIC v)-.198 E(alues.)-.275 E 36 273.05 36 284.05 DL
36 271.05 36 282.05 DL 41.5 282.3 36 282.3 DL 43.5 282.3 38 282.3 DL 49
282.3 43.5 282.3 DL(The)72 307.3 Q F0(XCr)3.666 E(eateIC)-.198 E F1
(function creates a conte)3.666 E
(xt within the speci\214ed input method.)-.165 E(Some of the ar)72 324.2
Q(guments are mandatory at creation time, and the input conte)-.198 E
(xt will not be created if)-.165 E(those ar)72 337.2 Q
(guments are not pro)-.198 E 2.75(vided. The)-.165 F(mandatory ar)2.75 E
(guments are the input style and the set of te)-.198 E(xt)-.165 E
(callbacks \(if the input style selected requires callbacks\).)72 350.2
Q(All other input conte)5.5 E(xt v)-.165 E(alues can be set)-.275 E
(later)72 363.2 Q(.)-.605 E F0(XCr)72.916 380.1 Q(eateIC)-.198 E F1
(returns a NULL v)3.666 E(alue if no input conte)-.275 E
(xt could be created.)-.165 E 2.75(AN)5.5 G(ULL v)-2.75 E(alue could be)
-.275 E(returned for an)72 393.1 Q 2.75(yo)-.165 G 2.75(ft)-2.75 G
(he follo)-2.75 E(wing reasons:)-.275 E 23.65<8341>72 410 S(required ar)
-20.9 E(gument w)-.198 E(as not set.)-.11 E 23.65<8341>72 426.9 S
(read-only ar)-20.9 E(gument w)-.198 E(as set \(for e)-.11 E(xample,)
-.165 E F0(XNFilterEv)3.666 E(ents)-.11 E F1(\).).916 E 23.65<8354>72
443.8 S(he ar)-23.65 E(gument name is not recognized.)-.198 E 23.65
<8354>72 460.7 S(he input method encountered an input method implementa\
tion-dependent error)-23.65 E(.)-.605 E F0(XCr)72.916 477.6 Q(eateIC)
-.198 E F1(can generate)3.666 E F0(BadAtom)3.666 E F1(,).916 E F0
(BadColor)3.666 E F1(,).916 E F0(BadPixmap)3.666 E F1 2.75(,a).916 G(nd)
-2.75 E F0(BadW)3.666 E(indo)-.198 E(w)-.11 E F1(errors.)3.666 E 1.76
-.88(To d)72 507.5 T(estro).88 E 2.75(ya)-.11 G 2.75(ni)-2.75 G
(nput conte)-2.75 E(xt, use)-.165 E F0(XDestr)3.666 E(oyIC)-.198 E F1(.)
.916 E 36 525.25 36 536.25 DL 36 523.25 36 534.25 DL 41.5 521.5 36 521.5
DL 43.5 521.5 38 521.5 DL 49 521.5 43.5 521.5 DL -.22(vo)72 537.4 S
(id XDestro).22 E -1.834(yIC \()-.11 F F2(ic).916 E F1(\)).916 E(XIC)
88.5 550.4 Q F2(ic)2.75 E F1(;).916 E F2(ic)72 571.2 Q F1
(Speci\214es the input conte)64.058 E(xt.)-.165 E 36 566.85 36 577.85 DL
36 564.85 36 575.85 DL 41.5 576.1 36 576.1 DL 43.5 576.1 38 576.1 DL 49
576.1 43.5 576.1 DL F0(XDestr)72.916 601.1 Q(oyIC)-.198 E F1(destro)
3.666 E(ys the speci\214ed input conte)-.11 E(xt.)-.165 E 1.76 -.88
(To c)72 631 T(ommunicate to and synchronize with input method for an)
.88 E 2.75(yc)-.165 G(hanges in k)-2.75 E -.165(ey)-.11 G
(board focus from).165 E(the client side, use)72 644 Q F0(XSetICF)3.666
E(ocus)-.275 E F1(and)3.666 E F0(XUnsetICF)3.666 E(ocus)-.275 E F1(.)
.916 E F0(318)279.75 769 Q 0 Cg EP
%%Page: 319 324
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E .44 LW 36 76.75 36 87.75 DL 36 74.75
36 85.75 DL 41.5 73 36 73 DL 43.5 73 38 73 DL 49 73 43.5 73 DL/F1 11
/Times-Roman@0 SF -.22(vo)72 88.9 S(id XSetICF).22 E -1.834(ocus \()
-.165 F/F2 11/Times-Italic@0 SF(ic).916 E F1(\)).916 E(XIC)88.5 101.9 Q
F2(ic)2.75 E F1(;).916 E F2(ic)72 122.7 Q F1
(Speci\214es the input conte)64.058 E(xt.)-.165 E 36 118.35 36 129.35 DL
36 116.35 36 127.35 DL 41.5 127.6 36 127.6 DL 43.5 127.6 38 127.6 DL 49
127.6 43.5 127.6 DL(The)72 152.6 Q F0(XSetICF)3.666 E(ocus)-.275 E F1
(function allo)3.666 E
(ws a client to notify an input method that the focus windo)-.275 E(w)
-.275 E(attached to the speci\214ed input conte)72 165.6 Q(xt has recei)
-.165 E -.165(ve)-.275 G 2.75(dk).165 G -.165(ey)-2.86 G(board focus.)
.165 E(The input method should)5.5 E(tak)72 178.6 Q 2.75(ea)-.11 G
(ction to pro)-2.75 E(vide appropriate feedback.)-.165 E
(Complete feedback speci\214cation is a matter of user)5.5 E(interf)72
191.6 Q(ace polic)-.11 E -.715(y.)-.165 G(Calling)72 208.5 Q F0(XSetICF)
3.666 E(ocus)-.275 E F1(does not af)3.666 E(fect the focus windo)-.275 E
2.75(wv)-.275 G(alue.)-3.025 E 36 243.15 36 254.15 DL 36 241.15 36
252.15 DL 41.5 239.4 36 239.4 DL 43.5 239.4 38 239.4 DL 49 239.4 43.5
239.4 DL -.22(vo)72 255.3 S(id XUnsetICF).22 E -1.834(ocus \()-.165 F F2
(ic).916 E F1(\)).916 E(XIC)88.5 268.3 Q F2(ic)2.75 E F1(;).916 E F2(ic)
72 289.1 Q F1(Speci\214es the input conte)64.058 E(xt.)-.165 E 36 284.75
36 295.75 DL 36 282.75 36 293.75 DL 41.5 294 36 294 DL 43.5 294 38 294
DL 49 294 43.5 294 DL(The)72 319 Q F0(XUnsetICF)3.666 E(ocus)-.275 E F1
(function allo)3.666 E
(ws a client to notify an input method that the speci\214ed input)-.275
E(conte)72 332 Q(xt has lost the k)-.165 E -.165(ey)-.11 G
(board focus and that no more input is e).165 E
(xpected on the focus windo)-.165 E(w)-.275 E
(attached to that input conte)72 345 Q 2.75(xt. The)-.165 F
(input method should tak)2.75 E 2.75(ea)-.11 G(ction to pro)-2.75 E
(vide appropriate feed-)-.165 E 2.75(back. Complete)72 358 R
(feedback speci\214cation is a matter of user interf)2.75 E(ace polic)
-.11 E -.715(y.)-.165 G(Calling)72 374.9 Q F0(XUnsetICF)3.666 E(ocus)
-.275 E F1(does not af)3.666 E(fect the focus windo)-.275 E 2.75(wv)
-.275 G(alue; the client may still recei)-3.025 E -.165(ve)-.275 G
-2.365 -.275(ev e)72 387.9 T
(nts from the input method that are directed to the focus windo).275 E
-.715(w.)-.275 G 1.76 -.88(To r)72 417.8 T
(eset the state of an input conte).88 E(xt to its initial state, use)
-.165 E F0(XmbResetIC)3.666 E F1(,).916 E F0(XwcResetIC)3.666 E F1(or)
3.666 E F0(Xutf8ResetIC)72.916 430.8 Q F1(.).916 E 36 448.55 36 459.55
DL 36 446.55 36 457.55 DL 41.5 444.8 36 444.8 DL 43.5 444.8 38 444.8 DL
49 444.8 43.5 444.8 DL(char * XmbResetIC)72 460.7 Q(\().916 E F2(ic).916
E F1(\)).916 E(XIC)88.5 473.7 Q F2(ic)2.75 E F1(;).916 E
(wchar_t * XwcResetIC)72 494.5 Q(\().916 E F2(ic).916 E F1(\)).916 E
(XIC)88.5 507.5 Q F2(ic)2.75 E F1(;).916 E(char * Xutf8ResetIC)72 528.3
Q(\().916 E F2(ic).916 E F1(\)).916 E(XIC)88.5 541.3 Q F2(ic)2.75 E F1
(;).916 E F2(ic)72 562.1 Q F1(Speci\214es the input conte)64.058 E(xt.)
-.165 E 36 557.75 36 568.75 DL 36 555.75 36 566.75 DL 41.5 567 36 567 DL
43.5 567 38 567 DL 49 567 43.5 567 DL(When)72 592 Q F0(XNResetState)
3.666 E F1(is set to)3.666 E F0(XIMInitialState)3.666 E F1(,).916 E F0
(XmbResetIC)3.666 E F1(,).916 E F0(XwcResetIC)3.666 E F1(and)3.666 E F0
(Xutf8ResetIC)72.916 605 Q F1(reset an input conte)3.666 E
(xt to its initial state; when)-.165 E F0(XNResetState)3.666 E F1
(is set to)3.666 E F0(XIMPr)3.666 E(e-)-.198 E(ser)72 618 Q -.11(ve)-.11
G(State).11 E F1 2.75(,t).916 G(he current input conte)-2.75 E
(xt state is preserv)-.165 E 2.75(ed. In)-.165 F(both cases, an)2.75 E
2.75(yi)-.165 G(nput pending on that)-2.75 E(conte)72 631 Q
(xt is deleted.)-.165 E
(The input method is required to clear the preedit area, if an)5.5 E
1.43 -.715(y, a)-.165 H(nd update the).715 E(status accordingly)72 644 Q
5.5(.C)-.715 G(alling)-5.5 E F0(XmbResetIC)3.666 E F1(,).916 E F0
(XwcResetIC)3.666 E F1(or)3.666 E F0(Xutf8ResetIC)3.666 E F1
(does not change the)3.666 E(focus.)72 657 Q(The return v)72 673.9 Q
(alue of)-.275 E F0(XmbResetIC)3.666 E F1
(is its current preedit string as a multibyte string.)3.666 E
(The return)5.5 E -.275(va)72 686.9 S(lue of).275 E F0(XwcResetIC)3.666
E F1(is its current preedit string as a wide character string.)3.666 E
(The return v)5.5 E(alue of)-.275 E F0(Xutf8ResetIC)72.916 699.9 Q F1
(is its current preedit string as an UTF-8 string.)3.666 E
(If there is an)5.5 E 2.75(yp)-.165 G(reedit te)-2.75 E(xt dra)-.165 E
(wn)-.165 E(or visible to the user)72 712.9 Q 2.75(,t)-.44 G
(hen these procedures must return a non-NULL string.)-2.75 E
(If there is no visible)5.5 E(preedit te)72 725.9 Q(xt, then it is inpu\
t method implementation-dependent whether these procedures return a)
-.165 E F0(319)279.75 769 Q 0 Cg EP
%%Page: 320 325
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E/F1 11/Times-Roman@0 SF
(non-NULL string or NULL.)72 85 Q
(The client should free the returned string by calling)72 101.9 Q F0
(XFr)3.666 E(ee)-.198 E F1(.).916 E(The function)72 118.8 Q F0
(Xutf8ResetIC)3.666 E F1(is an XFree86 e)3.666 E
(xtension introduced in XFree86 4.0.2. Its presence is)-.165 E
(indicated by the macro)72 131.8 Q F0(X_HA)3.666 E(VE_UTF8_STRING)-1.595
E F1(.).916 E 1.76 -.88(To g)72 161.7 T
(et the input method associated with an input conte).88 E(xt, use)-.165
E F0(XIMOfIC)3.666 E F1(.).916 E .44 LW 36 179.45 36 190.45 DL 36 177.45
36 188.45 DL 41.5 175.7 36 175.7 DL 43.5 175.7 38 175.7 DL 49 175.7 43.5
175.7 DL(XIM XIMOfIC)72 191.6 Q(\().916 E/F2 11/Times-Italic@0 SF(ic)
.916 E F1(\)).916 E(XIC)88.5 204.6 Q F2(ic)2.75 E F1(;).916 E F2(ic)72
225.4 Q F1(Speci\214es the input conte)64.058 E(xt.)-.165 E 36 221.05 36
232.05 DL 36 219.05 36 230.05 DL 41.5 230.3 36 230.3 DL 43.5 230.3 38
230.3 DL 49 230.3 43.5 230.3 DL(The)72 255.3 Q F0(XIMOfIC)3.666 E F1(fu\
nction returns the input method associated with the speci\214ed input c\
onte)3.666 E(xt.)-.165 E(Xlib pro)72 285.2 Q(vides tw)-.165 E 2.75(of)
-.11 G(unctions for setting and reading XIC v)-2.75 E(alues, respecti)
-.275 E -.165(ve)-.275 G(ly).165 E(,)-.715 E F0(XSetICV)3.666 E(alues)
-1.012 E F1(and)3.666 E F0(XGetICV)72.916 298.2 Q(alues)-1.012 E F1 5.5
(.B).916 G(oth functions ha)-5.5 E .33 -.165(ve a v)-.22 H
(ariable-length ar)-.11 E(gument list.)-.198 E(In that ar)5.5 E
(gument list, an)-.198 E(y)-.165 E(XIC v)72 311.2 Q(alue')-.275 E 2.75
(sn)-.605 G(ame must be denoted with a character string using the X Por\
table Character Set.)-2.75 E 1.76 -.88(To s)72 341.1 T(et XIC v).88 E
(alues, use)-.275 E F0(XSetICV)3.666 E(alues)-1.012 E F1(.).916 E 36
358.85 36 369.85 DL 36 356.85 36 367.85 DL 41.5 355.1 36 355.1 DL 43.5
355.1 38 355.1 DL 49 355.1 43.5 355.1 DL(char * XSetICV)72 371 Q -1.834
(alues \()-1.221 F F2(ic).916 E F1 2.75(,.).916 G(..\))-2.75 E(XIC)88.5
384 Q F2(ic)2.75 E F1(;).916 E F2(ic)72 404.8 Q F1
(Speci\214es the input conte)64.058 E(xt.)-.165 E 61(... Speci\214es)72
421.7 R(the v)2.75 E(ariable length ar)-.275 E(gument list to set XIC v)
-.198 E(alues.)-.275 E 36 417.35 36 428.35 DL 36 415.35 36 426.35 DL
41.5 426.6 36 426.6 DL 43.5 426.6 38 426.6 DL 49 426.6 43.5 426.6 DL
(The)72 451.6 Q F0(XSetICV)3.666 E(alues)-1.012 E F1(function returns N\
ULL if no error occurred; otherwise, it returns the name of)3.666 E
(the \214rst ar)72 464.6 Q(gument that could not be set.)-.198 E(An ar)
5.5 E(gument might not be set for an)-.198 E 2.75(yo)-.165 G 2.75(ft)
-2.75 G(he follo)-2.75 E(wing)-.275 E(reasons:)72 477.6 Q 23.65<8354>72
494.5 S(he ar)-23.65 E(gument is read-only \(for e)-.198 E(xample,)-.165
E F0(XNFilterEv)3.666 E(ents)-.11 E F1(\).).916 E 23.65<8354>72 511.4 S
(he ar)-23.65 E(gument name is not recognized.)-.198 E 23.65<8341>72
528.3 S 2.75(ni)-23.65 G(mplementation-dependent error occurs.)-2.75 E
(Each v)72 545.2 Q(alue to be set must be an appropriate datum, matchin\
g the data type imposed by the seman-)-.275 E(tics of the ar)72 558.2 Q
(gument.)-.198 E F0(XSetICV)72.916 575.1 Q(alues)-1.012 E F1
(can generate)3.666 E F0(BadAtom)3.666 E F1(,).916 E F0(BadColor)3.666 E
F1(,).916 E F0(BadCursor)3.666 E F1(,).916 E F0(BadPixmap)3.666 E F1
2.75(,a).916 G(nd)-2.75 E F0(BadW)3.666 E(in-)-.198 E(do)72 588.1 Q(w)
-.11 E F1(errors.)3.666 E 1.76 -.88(To o)72 618 T(btain XIC v).88 E
(alues, use)-.275 E F0(XGetICV)3.666 E(alues)-1.012 E F1(.).916 E 36
635.75 36 646.75 DL 36 633.75 36 644.75 DL 41.5 632 36 632 DL 43.5 632
38 632 DL 49 632 43.5 632 DL(char * XGetICV)72 647.9 Q -1.834(alues \()
-1.221 F F2(ic).916 E F1 2.75(,.).916 G(..\))-2.75 E(XIC)88.5 660.9 Q F2
(ic)2.75 E F1(;).916 E F2(ic)72 681.7 Q F1(Speci\214es the input conte)
64.058 E(xt.)-.165 E 61(... Speci\214es)72 698.6 R(the v)2.75 E
(ariable length ar)-.275 E(gument list to get XIC v)-.198 E(alues.)-.275
E 36 694.25 36 705.25 DL 36 692.25 36 703.25 DL 41.5 703.5 36 703.5 DL
43.5 703.5 38 703.5 DL 49 703.5 43.5 703.5 DL(The)72 728.5 Q F0(XGetICV)
3.666 E(alues)-1.012 E F1(function returns NULL if no error occurred; o\
therwise, it returns the name of)3.666 E F0(320)279.75 769 Q 0 Cg EP
%%Page: 321 326
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E/F1 11/Times-Roman@0 SF(the \214rst ar)
72 85 Q(gument that could not be obtained.)-.198 E(An ar)5.5 E
(gument could not be obtained for an)-.198 E 2.75(yo)-.165 G 2.75(ft)
-2.75 G(he)-2.75 E(follo)72 98 Q(wing reasons:)-.275 E 23.65<8354>72
114.9 S(he ar)-23.65 E(gument name is not recognized.)-.198 E 23.65
<8354>72 131.8 S
(he input method encountered an implementation-dependent error)-23.65 E
(.)-.605 E(Each IC attrib)72 148.7 Q(ute v)-.22 E(alue ar)-.275 E
(gument \(follo)-.198 E
(wing a name\) must point to a location where the IC v)-.275 E(alue)
-.275 E(is to be stored.)72 161.7 Q(That is, if the IC v)5.5 E
(alue is of type T)-.275 E 2.75(,t)-.814 G(he ar)-2.75 E
(gument must be of type T*.)-.198 E(If T itself is)5.5 E 2.75(ap)72
174.7 S(ointer type, then)-2.75 E F0(XGetICV)3.666 E(alues)-1.012 E F1
(allocates memory to store the actual data, and the client is)3.666 E
(responsible for freeing this data by calling)72 187.7 Q F0(XFr)3.666 E
(ee)-.198 E F1(with the returned pointer)3.666 E 5.5(.T)-.605 G(he e)
-5.5 E(xception to this)-.165 E(rule is for an IC v)72 200.7 Q
(alue of type)-.275 E F0(XV)3.666 E(aNestedList)-1.012 E F1
(\(for preedit and status attrib)3.666 E 2.75(utes\). In)-.22 F
(this case,)2.75 E(the)5.5 E(ar)72 213.7 Q(gument must also be of type)
-.198 E F0(XV)3.666 E(aNestedList)-1.012 E F1 5.5(.T).916 G
(hen, the rule of changing type T to T* and free-)-5.5 E
(ing the allocated data applies to each element of the nested list.)72
226.7 Q F0 2.75(13.5.6. Input)72 252.7 R(Context V)2.75 E(alues)-1.012 E
F1(The follo)72 269.6 Q(wing tables describe ho)-.275 E 2.75(wX)-.275 G
(IC v)-2.75 E(alues are interpreted by an input method depending on)
-.275 E(the input style chosen by the user)72 282.6 Q(.)-.605 E
(The \214rst column lists the XIC v)72 299.5 Q 2.75(alues. The)-.275 F
(second column indicates which v)2.75 E(alues are in)-.275 E -.22(vo)
-.44 G(lv).22 E(ed in)-.165 E(af)72 312.5 Q(fecting, ne)-.275 E
(gotiating, and setting the geometry of the input method windo)-.165 E
2.75(ws. The)-.275 F(subentries)2.75 E
(under the third column indicate the dif)72 325.5 Q
(ferent input styles that are supported.)-.275 E(Each of these col-)5.5
E(umns indicates ho)72 338.5 Q 2.75(we)-.275 G(ach of the XIC v)-2.75 E
(alues are treated by that input style.)-.275 E(The follo)72 355.4 Q
(wing k)-.275 E -.165(ey)-.11 G 2.75(sa).165 G(pply to these tables.)
-2.75 E .44 LW 502.5 366.65 72 366.65 DL F0 -.275(Ke)72 382.9 S 69.833
(yE).275 G(xplanation)-69.833 E 502.5 393.65 72 393.65 DL F1(C)72 403.9
Q(This v)160.5 403.9 Q(alue must be set with)-.275 E F0(XCr)3.666 E
(eateIC)-.198 E F1(.).916 E(D)72 416.9 Q(This v)160.5 416.9 Q
(alue may be set using)-.275 E F0(XCr)3.666 E(eateIC)-.198 E F1 5.5(.I)
.916 G 2.75(fi)-5.5 G 2.75(ti)-2.75 G 2.75(sn)-2.75 G(ot set, a def)
-2.75 E(ault is pro-)-.11 E(vided.)160.5 429.9 Q(G)72 442.9 Q(This v)
160.5 442.9 Q(alue may be read using)-.275 E F0(XGetICV)3.666 E(alues)
-1.012 E F1(.).916 E(GN)72 455.9 Q(This v)160.5 455.9 Q
(alue may cause geometry ne)-.275 E(gotiation when its v)-.165 E
(alue is set by means of)-.275 E F0(XCr)161.416 468.9 Q(eateIC)-.198 E
F1(or)3.666 E F0(XSetICV)3.666 E(alues)-1.012 E F1(.).916 E(GR)72 481.9
Q(This v)160.5 481.9 Q
(alue will be the response of the input method when an)-.275 E 2.75(yG)
-.165 G 2.75(Nv)-2.75 G(alue is)-3.025 E(changed.)160.5 494.9 Q(GS)72
507.9 Q(This v)160.5 507.9 Q
(alue will cause the geometry of the input method windo)-.275 E 2.75(wt)
-.275 G 2.75(ob)-2.75 G 2.75(es)-2.75 G(et.)-2.75 E(O)72 520.9 Q(This v)
160.5 520.9 Q(alue must be set once and only once.)-.275 E
(It need not be set at create time.)5.5 E(S)72 533.9 Q(This v)160.5
533.9 Q(alue may be set with)-.275 E F0(XSetICV)3.666 E(alues)-1.012 E
F1(.).916 E(Ignored)72 546.9 Q(This v)160.5 546.9 Q
(alue is ignored by the input method for the gi)-.275 E -.165(ve)-.275 G
2.75(ni).165 G(nput style.)-2.75 E 502.5 557.65 72 557.65 DL 537.322
576.55 72 576.55 DL F0(Input Style)388.365 592.8 Q(XIC V)72 605.8 Q
98.785(alue Geometry)-1.012 F(Pr)24.244 E 17.325(eedit Pr)-.198 F 14.878
(eedit Pr)-.198 F 14.872(eedit Pr)-.198 F 14.872(eedit Pr)-.198 F(eedit)
-.198 E 10.076(Management Callback)215.6 618.8 R -.22(Po)14.162 G 18.546
(sition Ar).22 F 18.431(ea Nothing)-.198 F(None)20.465 E 537.322 629.55
72 629.55 DL F1(Input Style)72 645.8 Q 32.395(C-G C-G)181.164 F 29.942
(C-G C-G C-G)32.698 F(Client W)72 658.8 Q(indo)-.44 E 162.635(wO)-.275 G
31.79(-G O-G)-162.635 F 29.337(O-G O-G)32.092 F(Ignored)24.756 E -.165
(Fo)72 671.8 S(cus W).165 E(indo)-.44 E 100.479(wG)-.275 G 42.163(ND)
-100.479 G 22.011(-S-G D-S-G)-42.163 F 19.558(D-S-G D-S-G)22.314 F
(Ignored)19.866 E(Resource Name)72 684.8 Q 19.569(Ignored D-S-G)152.168
F 19.558(D-S-G D-S-G)22.314 F(Ignored)19.866 E(Resource Class)72 697.8 Q
19.569(Ignored D-S-G)154.599 F 19.558(D-S-G D-S-G)22.314 F(Ignored)
19.866 E(Geometry Callback)72 710.8 Q 17.127(Ignored Ignored)136.273 F
17.116(D-S-G Ignored)19.872 F(Ignored)17.424 E F0(321)279.75 769 Q 0 Cg
EP
%%Page: 322 327
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E .44 LW 537.322 76.75 72 76.75 DL
(Input Style)388.365 93 Q(XIC V)72 106 Q 98.785(alue Geometry)-1.012 F
(Pr)24.244 E 17.325(eedit Pr)-.198 F 14.878(eedit Pr)-.198 F 14.872
(eedit Pr)-.198 F 14.872(eedit Pr)-.198 F(eedit)-.198 E 10.076
(Management Callback)215.6 119 R -.22(Po)14.162 G 18.546(sition Ar).22 F
18.431(ea Nothing)-.198 F(None)20.465 E 537.322 129.75 72 129.75 DL/F1
11/Times-Roman@0 SF(Filter Ev)72 146 Q 176.137(ents G)-.165 F 43.698(GG)
46.145 G 30.558(GI)-.006 G(gnored)-30.558 E(Destro)72 159 Q 2.75(yC)-.11
G 145.238(allback D-S-G)-2.75 F 19.564(D-S-G D-S-G)24.761 F 19.558
(D-S-G D-S-G)22.308 F(String Con)72 172 Q -.165(ve)-.44 G
(rsion Callback).165 E 33.616(S-G S-G)108.746 F 31.163(S-G S-G S-G)
33.918 F(String Con)72 185 Q -.165(ve)-.44 G 142.048(rsion D-S-G).165 F
19.564(D-S-G D-S-G)24.761 F 19.558(D-S-G D-S-G)22.308 F(Reset State)72
198 Q 22.011(D-S-G D-S-G)175.367 F 19.558(D-S-G D-S-G)22.314 F(Ignored)
19.866 E(HotK)72 211 Q 193.556 -.165(ey S)-.275 H 33.616(-G S-G).165 F
31.163(S-G S-G)33.918 F(Ignored)25.669 E(HotK)72 224 Q -.165(ey)-.275 G
165.423(State D-S-G).165 F 19.564(D-S-G D-S-G)24.761 F 17.116
(D-S-G Ignored)22.308 F F0(Pr)72 243 Q(eedit)-.198 E F1 143.302(Area GS)
72 256 R 19.569(Ignored D-S-G)40.634 F 17.116(D-S-G Ignored)22.314 F
(Ignored)17.424 E(Area Needed)72 269 Q 27.5(GN-GR Ignored)99.324 F
22.924(Ignored S-G)19.877 F 14.674(Ignored Ignored)25.669 F
(Spot Location)72 282 Q 19.569(Ignored D-S-G)160.088 F 14.674
(Ignored Ignored Ignored)19.872 F 175.367(Colormap Ignored)72 295 R
19.564(D-S-G D-S-G)22.319 F 17.116(D-S-G Ignored)22.308 F -.165(Fo)72
308 S(re).165 E 168.371(ground Ignored)-.165 F 19.564(D-S-G D-S-G)22.319
F 17.116(D-S-G Ignored)22.308 F 165.599(Background Ignored)72 321 R
19.564(D-S-G D-S-G)22.319 F 17.116(D-S-G Ignored)22.308 F
(Background Pixmap)72 334 Q 19.569(Ignored D-S-G)131.983 F 19.558
(D-S-G D-S-G)22.314 F(Ignored)19.866 E -.165(Fo)72 347 S(nt Set).165 E
36.971(GN Ignored)129.695 F 19.564(D-S-G D-S-G)22.319 F 17.116
(D-S-G Ignored)22.308 F(Line Spacing)72 360 Q 36.971(GN Ignored)108.157
F 19.564(D-S-G D-S-G)22.319 F 17.116(D-S-G Ignored)22.308 F 189.425
(Cursor Ignored)72 373 R 19.564(D-S-G D-S-G)22.319 F 17.116
(D-S-G Ignored)22.308 F(Preedit State)72 386 Q 22.011(D-S-G D-S-G)
168.646 F 19.558(D-S-G D-S-G)22.314 F(Ignored)19.866 E
(Preedit State Notify Callback)72 399 Q 33.616(S-G S-G)101.123 F 31.163
(S-G S-G)33.918 F(Ignored)25.669 E(Preedit Callbacks)72 412 Q 19.871
(C-S-G Ignored)147.565 F 14.674(Ignored Ignored Ignored)17.43 F 537.322
422.75 72 422.75 DL 445.648 441.65 72 441.65 DL F0(Input Style)322.976
457.9 Q(XIC V)72 470.9 Q 59.68(alue Geometry)-1.012 F 21.07
(Status Status)26.582 F 19.547(Status Status)22.297 F 10.076
(Management Callback)176.495 483.9 R(Ar)20.564 E 18.431(ea Nothing)-.198
F(None)20.465 E 445.648 494.65 72 494.65 DL F1(Input Style)72 510.9 Q
31.466(C-G C-G)142.059 F 29.942(C-G C-G)32.692 F(Client W)72 523.9 Q
(indo)-.44 E 123.53(wO)-.275 G 30.86(-G O-G)-123.53 F 22.006
(O-G Ignored)32.087 F -.165(Fo)72 536.9 S(cus W).165 E(indo)-.44 E
61.374(wG)-.275 G 42.163(ND)-61.374 G 21.082(-S-G D-S-G)-42.163 F 17.116
(D-S-G Ignored)22.308 F(Resource Name)72 549.9 Q 18.64(Ignored D-S-G)
113.063 F 17.116(D-S-G Ignored)22.308 F(Resource Class)72 562.9 Q 18.64
(Ignored D-S-G)115.494 F 17.116(D-S-G Ignored)22.308 F
(Geometry Callback)72 575.9 Q 18.64(Ignored D-S-G)97.168 F 14.674
(Ignored Ignored)19.866 F(Filter Ev)72 588.9 Q 137.032(ents G)-.165 F
43.692(GGG)45.216 G F0(Status)72 607.9 Q F1 104.197(Area GS)72 620.9 R
18.64(Ignored D-S-G)40.634 F 14.674(Ignored Ignored)19.866 F
(Area Needed)72 633.9 Q 27.5(GN-GR Ignored)60.219 F 22.919(S-G Ignored)
27.192 F(Ignored)17.424 E 136.262(Colormap Ignored)72 646.9 R 19.558
(D-S-G D-S-G)21.39 F(Ignored)19.866 E -.165(Fo)72 659.9 S(re).165 E
129.266(ground Ignored)-.165 F 19.558(D-S-G D-S-G)21.39 F(Ignored)19.866
E 126.494(Background Ignored)72 672.9 R 19.558(D-S-G D-S-G)21.39 F
(Ignored)19.866 E(Background Pixmap)72 685.9 Q 18.64(Ignored D-S-G)
92.878 F 17.116(D-S-G Ignored)22.308 F -.165(Fo)72 698.9 S(nt Set).165 E
36.971(GN Ignored)90.59 F 19.558(D-S-G D-S-G)21.39 F(Ignored)19.866 E
(Line Spacing)72 711.9 Q 36.971(GN Ignored)69.052 F 19.558(D-S-G D-S-G)
21.39 F(Ignored)19.866 E F0(322)279.75 769 Q 0 Cg EP
%%Page: 323 328
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E .44 LW 445.648 76.75 72 76.75 DL
(Input Style)322.976 93 Q(XIC V)72 106 Q 59.68(alue Geometry)-1.012 F
21.07(Status Status)26.582 F 19.547(Status Status)22.297 F 10.076
(Management Callback)176.495 119 R(Ar)20.564 E 18.431(ea Nothing)-.198 F
(None)20.465 E 445.648 129.75 72 129.75 DL/F1 11/Times-Roman@0 SF 150.32
(Cursor Ignored)72 146 R 19.558(D-S-G D-S-G)21.39 F(Ignored)19.866 E
(Status Callbacks)72 159 Q 18.942(C-S-G Ignored)112.728 F 14.674
(Ignored Ignored)17.424 F 445.648 169.75 72 169.75 DL F0 2.75
(13.5.6.1. Input)72 199.5 R(Style)2.75 E F1(The)72 216.4 Q F0
(XNInputStyle)3.666 E F1(ar)3.666 E
(gument speci\214es the input style to be used.)-.198 E(The v)5.5 E
(alue of this ar)-.275 E(gument)-.198 E(must be one of the v)72 229.4 Q
(alues returned by the)-.275 E F0(XGetIMV)3.666 E(alues)-1.012 E F1
(function with the)3.666 E F0(XNQueryInput-)3.666 E(Style)72 242.4 Q F1
(ar)3.666 E(gument speci\214ed in the supported_styles list.)-.198 E
(Note that this ar)72 259.3 Q
(gument must be set at creation time and cannot be changed.)-.198 E F0
2.75(13.5.6.2. Client)72 285.3 R -.198(Wi)2.75 G(ndo).198 E(w)-.11 E F1
(The)72 302.2 Q F0(XNClientW)3.666 E(indo)-.198 E(w)-.11 E F1(ar)3.666 E
(gument speci\214es to the input method the client windo)-.198 E 2.75
(wi)-.275 G 2.75(nw)-2.75 G(hich the)-2.75 E
(input method can display data or create subwindo)72 315.2 Q 2.75
(ws. Geometry)-.275 F -.275(va)2.75 G(lues for input method areas are)
.275 E(gi)72 328.2 Q -.165(ve)-.275 G 2.75(nw).165 G
(ith respect to the client windo)-2.75 E 4.18 -.715(w. D)-.275 H
(ynamic change of client windo).715 E 2.75(wi)-.275 G 2.75(sn)-2.75 G
(ot supported.)-2.75 E(This ar)72 341.2 Q
(gument may be set only once and should be set before an)-.198 E 2.75
(yi)-.165 G(nput is done using this input)-2.75 E(conte)72 354.2 Q 2.75
(xt. If)-.165 F
(it is not set, the input method may not operate correctly)2.75 E(.)
-.715 E(If an attempt is made to set this v)72 371.1 Q
(alue a second time with)-.275 E F0(XSetICV)3.666 E(alues)-1.012 E F1
2.75(,t).916 G(he string)-2.75 E F0(XNClien-)3.666 E(tW)72 384.1 Q(indo)
-.198 E(w)-.11 E F1(will be returned by)3.666 E F0(XSetICV)3.666 E
(alues)-1.012 E F1 2.75(,a).916 G(nd the client windo)-2.75 E 2.75(ww)
-.275 G(ill not be changed.)-2.75 E(If the client windo)72 401 Q 2.75
(wi)-.275 G 2.75(sn)-2.75 G(ot a v)-2.75 E(alid windo)-.275 E 2.75(wI)
-.275 G 2.75(Do)-2.75 G 2.75(nt)-2.75 G
(he display attached to the input method, a)-2.75 E F0(Bad-)3.666 E
-.198(Wi)72 414 S(ndo).198 E(w)-.11 E F1
(error can be generated when this v)3.666 E
(alue is used by the input method.)-.275 E F0 2.75(13.5.6.3. F)72 440 R
(ocus W)-.275 E(indo)-.198 E(w)-.11 E F1(The)72 456.9 Q F0(XNF)3.666 E
(ocusW)-.275 E(indo)-.198 E(w)-.11 E F1(ar)3.666 E
(gument speci\214es the focus windo)-.198 E 4.18 -.715(w. T)-.275 H
(he primary purpose of the).715 E F0(XNF)72.916 469.9 Q(ocusW)-.275 E
(indo)-.198 E(w)-.11 E F1(is to identify the windo)3.666 E 2.75(wt)-.275
G(hat will recei)-2.75 E .33 -.165(ve t)-.275 H(he k).165 E .33 -.165
(ey e)-.11 H -.165(ve)-.11 G(nt when input is com-).165 E 2.75
(posed. In)72 482.9 R(addition, the input method may possibly af)2.75 E
(fect the focus windo)-.275 E 2.75(wa)-.275 G 2.75(sf)-2.75 G(ollo)-2.75
E(ws:)-.275 E 23.65<8353>72 499.8 S(elect e)-23.65 E -.165(ve)-.275 G
(nts on it).165 E 23.65<8353>72 516.7 S(end e)-23.65 E -.165(ve)-.275 G
(nts to it).165 E 23.65<834d>72 533.6 S(odify its properties)-23.65 E
23.65<8347>72 550.5 S(rab the k)-23.65 E -.165(ey)-.11 G
(board within that windo).165 E(w)-.275 E(The associated v)72 567.4 Q
(alue must be of type)-.275 E F0 -.198(Wi)3.666 G(ndo).198 E(w)-.11 E F1
5.5(.I).916 G 2.75(ft)-5.5 G(he focus windo)-2.75 E 2.75(wi)-.275 G 2.75
(sn)-2.75 G(ot a v)-2.75 E(alid windo)-.275 E 2.75(wI)-.275 G 2.75(Do)
-2.75 G(n)-2.75 E(the display attached to the input method, a)72 580.4 Q
F0(BadW)3.666 E(indo)-.198 E(w)-.11 E F1
(error can be generated when this v)3.666 E(alue is)-.275 E
(used by the input method.)72 593.4 Q(When this XIC v)72 610.3 Q
(alue is left unspeci\214ed, the input method will use the client windo)
-.275 E 2.75(wa)-.275 G 2.75(st)-2.75 G(he)-2.75 E(def)72 623.3 Q
(ault focus windo)-.11 E -.715(w.)-.275 G F0 2.75(13.5.6.4. Resour)72
649.3 R(ce Name and Class)-.198 E F1(The)72 666.2 Q F0(XNResour)3.666 E
(ceName)-.198 E F1(and)3.666 E F0(XNResour)3.666 E(ceClass)-.198 E F1
(ar)3.666 E(guments are strings that specify the full name)-.198 E
(and class used by the client to obtain resources for the client windo)
72 679.2 Q 4.18 -.715(w. T)-.275 H(hese v).715 E(alues should be)-.275 E
(used as pre\214x)72 692.2 Q
(es for name and class when looking up resources that may v)-.165 E
(ary according to the)-.275 E(input conte)72 705.2 Q 2.75(xt. If)-.165 F
(these v)2.75 E
(alues are not set, the resources will not be fully speci\214ed.)-.275 E
F0(323)279.75 769 Q 0 Cg EP
%%Page: 324 329
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E/F1 11/Times-Roman@0 SF
(It is not intended that v)72 85 Q(alues that can be set as XIC v)-.275
E(alues be set as resources.)-.275 E F0 2.75(13.5.6.5. Geometry)72 111 R
(Callback)2.75 E F1(The)72 127.9 Q F0(XNGeometryCallback)3.666 E F1(ar)
3.666 E(gument is a structure of type)-.198 E F0(XIMCallback)3.666 E F1
(\(see section)3.666 E(13.5.6.13.12\).)72 140.9 Q(The)72 157.8 Q F0
(XNGeometryCallback)3.666 E F1(ar)3.666 E
(gument speci\214es the geometry callback that a client can set.)-.198 E
(This)5.5 E(callback is not required for correct operation of either an\
 input method or a client.)72 170.8 Q(It can be set)5.5 E
(for a client whose user interf)72 183.8 Q(ace polic)-.11 E 2.75(yp)
-.165 G(ermits an input method to request the dynamic change of)-2.75 E
(that input method')72 196.8 Q 2.75(sw)-.605 G(indo)-2.75 E 4.18 -.715
(w. A)-.275 H 2.75(ni).715 G
(nput method that does dynamic change will need to \214lter an)-2.75 E
(y)-.165 E -2.365 -.275(ev e)72 209.8 T
(nts that it uses to initiate the change.).275 E F0 2.75
(13.5.6.6. Filter)72 235.8 R(Ev)2.75 E(ents)-.11 E F1(The)72 252.7 Q F0
(XNFilterEv)3.666 E(ents)-.11 E F1(ar)3.666 E(gument returns the e)-.198
E -.165(ve)-.275 G(nt mask that an input method needs to ha).165 E -.165
(ve)-.22 G(selected for)72 265.7 Q 5.5(.T)-.605 G(he client is e)-5.5 E
(xpected to augment its o)-.165 E(wn e)-.275 E -.165(ve)-.275 G
(nt mask for the client windo).165 E 2.75(ww)-.275 G(ith this)-2.75 E
(one.)72 278.7 Q(This ar)72 295.6 Q(gument is read-only)-.198 E 2.75(,i)
-.715 G 2.75(ss)-2.75 G
(et by the input method at create time, and is ne)-2.75 E -.165(ve)-.275
G 2.75(rc).165 G(hanged.)-2.75 E(The type of this ar)72 312.5 Q
(gument is)-.198 E F0 1.832(unsigned long)3.666 F F1 5.5(.S).916 G
(etting this v)-5.5 E(alue will cause an error)-.275 E(.)-.605 E F0 2.75
(13.5.6.7. Destr)72 338.5 R(oy Callback)-.198 E F1(The)72 355.4 Q F0
(XNDestr)3.666 E(oyCallback)-.198 E F1(ar)3.666 E
(gument is a pointer to a structure of type)-.198 E F0(XIMCallback)3.666
E F1(\(see section)3.666 E 2.75(13.5.6.13.12\). This)72 368.4 R
(callback is triggered when the input method stops its service for an)
2.75 E 2.75(yr)-.165 G(eason;)-2.75 E(for e)72 381.4 Q
(xample, when a connection to an IM serv)-.165 E(er is brok)-.165 E 2.75
(en. After)-.11 F(the destro)2.75 E 2.75(yc)-.11 G(allback is called,)
-2.75 E(the input conte)72 394.4 Q(xt is destro)-.165 E
(yed and the input method is closed.)-.11 E
(Therefore, the client should not call)5.5 E F0(XDestr)72.916 407.4 Q
(oyIC)-.198 E F1(and)3.666 E F0(XCloseIM)3.666 E F1(.).916 E F0 2.75
(13.5.6.8. String)72 437.3 R(Con)2.75 E -.11(ve)-.44 G(rsion Callback)
.11 E F1(The)72 454.2 Q F0(XNStringCon)3.666 E -.11(ve)-.44 G
(rsionCallback).11 E F1(ar)3.666 E(gument is a structure of type)-.198 E
F0(XIMCallback)3.666 E F1(\(see section)3.666 E(13.5.6.13.12\).)72 467.2
Q(The)72 484.1 Q F0(XNStringCon)3.666 E -.11(ve)-.44 G(rsionCallback).11
E F1(ar)3.666 E(gument speci\214es a string con)-.198 E -.165(ve)-.44 G
(rsion callback.).165 E(This call-)5.5 E(back is not required for corre\
ct operation of either the input method or the client.)72 497.1 Q
(It can be set by)5.5 E 2.75(ac)72 510.1 S(lient to support string con)
-2.75 E -.165(ve)-.44 G
(rsions that may be requested by the input method.).165 E(An input)5.5 E
(method that does string con)72 523.1 Q -.165(ve)-.44 G
(rsions will \214lter an).165 E 2.75(ye)-.165 G -.165(ve)-3.025 G
(nts that it uses to initiate the con).165 E -.165(ve)-.44 G(rsion.).165
E(Because this XIC v)72 540 Q(alue is optional, a client should call)
-.275 E F0(XGetIMV)3.666 E(alues)-1.012 E F1(with ar)3.666 E(gument)
-.198 E F0(XNQueryICV)72.916 553 Q(aluesList)-1.012 E F1
(before using this ar)3.666 E(gument.)-.198 E F0 2.75(13.5.6.9. String)
72 582.9 R(Con)2.75 E -.11(ve)-.44 G(rsion).11 E F1(The)72 599.8 Q F0
(XNStringCon)3.666 E -.11(ve)-.44 G(rsion).11 E F1(ar)3.666 E
(gument is a structure of type)-.198 E F0(XIMStringCon)3.666 E -.11(ve)
-.44 G(rsionT).11 E(ext)-1.012 E F1(.).916 E(The)72 616.7 Q F0
(XNStringCon)3.666 E -.11(ve)-.44 G(rsion).11 E F1(ar)3.666 E
(gument speci\214es the string to be con)-.198 E -.165(ve)-.44 G
(rted by an input method.).165 E(This ar)72 629.7 Q(gument is not requi\
red for correct operation of either the input method or the client.)
-.198 E(String con)72 646.6 Q -.165(ve)-.44 G(rsion f).165 E
(acilitates the manipulation of te)-.11 E(xt independent of preediting.)
-.165 E(It is essential for)5.5 E
(some input methods and clients to manipulate te)72 659.6 Q
(xt by performing conte)-.165 E(xt-sensiti)-.165 E .33 -.165(ve c)-.275
H(on).165 E -.165(ve)-.44 G(rsion,).165 E(recon)72 672.6 Q -.165(ve)-.44
G(rsion, or transliteration con).165 E -.165(ve)-.44 G(rsion on it.).165
E(Because this XIC v)72 689.5 Q(alue is optional, a client should call)
-.275 E F0(XGetIMV)3.666 E(alues)-1.012 E F1(with ar)3.666 E(gument)
-.198 E F0(XNQueryICV)72.916 702.5 Q(aluesList)-1.012 E F1
(before using this ar)3.666 E(gument.)-.198 E(The)72 719.4 Q F0
(XIMStringCon)3.666 E -.11(ve)-.44 G(rsionT).11 E(ext)-1.012 E F1
(structure is de\214ned as follo)3.666 E(ws:)-.275 E F0(324)279.75 769 Q
0 Cg EP
%%Page: 325 330
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E .44 LW 36 76.75 36 87.75 DL 36 74.75
36 85.75 DL 41.5 73 36 73 DL 43.5 73 38 73 DL 49 73 43.5 73 DL/F1 11
/Times-Roman@0 SF(typedef struct _XIMStringCon)72 104.5 Q -.165(ve)-.44
G(rsionT).165 E -.165(ex)-.77 G 2.75(t{).165 G(unsigned short length;)
99.5 117.5 Q(XIMStringCon)99.5 130.5 Q -.165(ve)-.44 G
(rsionFeedback *feedback;).165 E(Bool encoding_is_wchar;)99.5 143.5 Q
(union {)99.5 156.5 Q 5.819(char *mbs;)127 169.5 R(wchar_t *wcs;)127
182.5 Q 2.75(}s)99.5 195.5 S(tring;)-2.75 E 2.75(}X)72 208.5 S
(IMStringCon)-2.75 E -.165(ve)-.44 G(rsionT).165 E -.165(ex)-.77 G(t;)
.165 E(typedef unsigned long XIMStringCon)72 234.5 Q -.165(ve)-.44 G
(rsionFeedback;).165 E 36 236.65 36 247.65 DL 36 234.65 36 245.65 DL
41.5 245.9 36 245.9 DL 43.5 245.9 38 245.9 DL 49 245.9 43.5 245.9 DL
(The feedback member is reserv)72 270.9 Q(ed for future use.)-.165 E
(The te)5.5 E(xt to be con)-.165 E -.165(ve)-.44 G
(rted is de\214ned by the string).165 E(and length members.)72 283.9 Q
(The length is indicated in characters.)5.5 E 1.76 -.88(To p)5.5 H(re)
.88 E -.165(ve)-.275 G(nt the library from freeing).165 E
(memory pointed to by an uninitialized pointer)72 296.9 Q 2.75(,t)-.44 G
(he client should set the feedback element to)-2.75 E(NULL.)72 309.9 Q
F0 2.75(13.5.6.10. Reset)72 339.8 R(State)2.75 E F1(The)72 356.7 Q F0
(XNResetState)3.666 E F1(ar)3.666 E
(gument speci\214es the state the input conte)-.198 E
(xt will return to after calling)-.165 E F0(XmbResetIC)72.916 369.7 Q F1
(,).916 E F0(XwcResetIC)3.666 E F1(or)3.666 E F0(Xutf8ResetIC)3.666 E F1
(.).916 E
(The XIC state may be set to its initial state, as speci\214ed by the)72
386.6 Q F0(XNPr)3.666 E(eeditState)-.198 E F1 -.275(va)3.666 G(lue when)
.275 E F0(XCr)72.916 399.6 Q(eateIC)-.198 E F1 -.11(wa)3.666 G 2.75(sc)
.11 G(alled, or it may be set to preserv)-2.75 E 2.75(et)-.165 G
(he current state.)-2.75 E(The v)72 416.5 Q(alid masks for)-.275 E F0
(XIMResetState)3.666 E F1(are as follo)3.666 E(ws:)-.275 E 36 438.15 36
449.15 DL 36 436.15 36 447.15 DL 41.5 434.4 36 434.4 DL 43.5 434.4 38
434.4 DL 49 434.4 43.5 434.4 DL(typedef unsigned long XIMResetState;)72
456.8 Q(#de\214ne)72 482.8 Q F0(XIMInitialState)125.416 482.8 Q F1
(\(1L\))285 482.8 Q(#de\214ne)72 495.8 Q F0(XIMPr)125.416 495.8 Q(eser)
-.198 E -.11(ve)-.11 G(State).11 E F1(\(1L<<1\))285 495.8 Q 36 497.95 36
508.95 DL 36 495.95 36 506.95 DL 41.5 507.2 36 507.2 DL 43.5 507.2 38
507.2 DL 49 507.2 43.5 507.2 DL(If)72 532.2 Q F0(XIMInitialState)3.666 E
F1(is set, then)3.666 E F0(XmbResetIC)3.666 E F1(,).916 E F0(XwcResetIC)
3.666 E F1(and)3.666 E F0(Xutf8ResetIC)3.666 E F1(will return to)3.666 E
(the initial)72 545.2 Q F0(XNPr)3.666 E(eeditState)-.198 E F1
(state of the XIC.)3.666 E(If)72 562.1 Q F0(XIMPr)3.666 E(eser)-.198 E
-.11(ve)-.11 G(State).11 E F1(is set, then)3.666 E F0(XmbResetIC)3.666 E
F1(,).916 E F0(XwcResetIC)3.666 E F1(and)3.666 E F0(Xutf8ResetIC)3.666 E
F1(will preserv)3.666 E(e)-.165 E(the current state of the XIC.)72 575.1
Q(If)72 592 Q F0(XNResetState)3.666 E F1(is left unspeci\214ed, the def)
3.666 E(ault is)-.11 E F0(XIMInitialState)3.666 E F1(.).916 E F0
(XIMResetState)72.916 608.9 Q F1 -.275(va)3.666 G
(lues other than those speci\214ed abo).275 E .33 -.165(ve w)-.165 H
(ill def).165 E(ault to)-.11 E F0(XIMInitialState)3.666 E F1(.).916 E
(Because this XIC v)72 625.8 Q(alue is optional, a client should call)
-.275 E F0(XGetIMV)3.666 E(alues)-1.012 E F1(with ar)3.666 E(gument)
-.198 E F0(XNQueryICV)72.916 638.8 Q(aluesList)-1.012 E F1
(before using this ar)3.666 E(gument.)-.198 E F0 2.75(13.5.6.11. Hot)72
668.7 R -.275(Ke)2.75 G(ys).275 E F1(The)72 685.6 Q F0(XNHotK)3.666 E
(ey)-.275 E F1(ar)3.666 E(gument speci\214es the hot k)-.198 E .33 -.165
(ey l)-.11 H(ist to the XIC.).165 E(The hot k)5.5 E .33 -.165(ey l)-.11
H(ist is a pointer to the).165 E(structure of type)72 698.6 Q F0
(XIMHotK)3.666 E(eyT)-.275 E(riggers)-.814 E F1 2.75(,w).916 G
(hich speci\214es the k)-2.75 E .33 -.165(ey e)-.11 H -.165(ve)-.11 G
(nts that must be recei).165 E -.165(ve)-.275 G(d).165 E(without an)72
711.6 Q 2.75(yi)-.165 G(nterruption of the input method.)-2.75 E -.165
(Fo)5.5 G 2.75(rt).165 G(he hot k)-2.75 E .33 -.165(ey l)-.11 H
(ist set with this ar).165 E(gument to be uti-)-.198 E
(lized, the client must also set)72 724.6 Q F0(XNHotK)3.666 E(eyState)
-.275 E F1(to)3.666 E F0(XIMHotK)3.666 E(eyStateON)-.275 E F1(.).916 E
F0(325)279.75 769 Q 0 Cg EP
%%Page: 326 331
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E/F1 11/Times-Roman@0 SF
(Because this XIC v)72 85 Q(alue is optional, a client should call)-.275
E F0(XGetIMV)3.666 E(alues)-1.012 E F1(with ar)3.666 E(gument)-.198 E F0
(XNQueryICV)72.916 98 Q(aluesList)-1.012 E F1
(before using this functionality)3.666 E(.)-.715 E(The v)72 114.9 Q
(alue of the ar)-.275 E(gument is a pointer to a structure of type)-.198
E F0(XIMHotK)3.666 E(eyT)-.275 E(riggers)-.814 E F1(.).916 E(If an e)72
131.8 Q -.165(ve)-.275 G(nt for a k).165 E .33 -.165(ey i)-.11 H 2.75
(nt).165 G(he hot k)-2.75 E .33 -.165(ey l)-.11 H
(ist is found, then the process will recei).165 E .33 -.165(ve t)-.275 H
(he e).165 E -.165(ve)-.275 G(nt and it will).165 E
(be processed inside the client.)72 144.8 Q .44 LW 36 166.45 36 177.45
DL 36 164.45 36 175.45 DL 41.5 162.7 36 162.7 DL 43.5 162.7 38 162.7 DL
49 162.7 43.5 162.7 DL(typedef struct {)72 181.2 Q -2.365 -.275(Ke y)108
194.2 T(Sym k).275 E -.165(ey)-.11 G(sym;).165 E
(unsigned int modi\214er;)108 207.2 Q(unsigned int modi\214er_mask;)108
220.2 Q 2.75(}X)72 233.2 S(IMHotK)-2.75 E -.165(ey)-.275 G -.385(Tr).165
G(igger;).385 E(typedef struct {)72 259.2 Q(int num_hot_k)108 272.2 Q
-.165(ey)-.11 G(;).165 E(XIMHotK)108 285.2 Q -.165(ey)-.275 G -.385(Tr)
.165 G(igger *k).385 E -.165(ey)-.11 G(;).165 E 2.75(}X)72 298.2 S
(IMHotK)-2.75 E -.165(ey)-.275 G -.385(Tr).165 G(iggers;).385 E 36
300.35 36 311.35 DL 36 298.35 36 309.35 DL 41.5 309.6 36 309.6 DL 43.5
309.6 38 309.6 DL 49 309.6 43.5 309.6 DL(The combination of modi\214er \
and modi\214er_mask are used to represent one of three states for each)
72 338.5 Q(modi\214er: either the modi\214er must be on, or the modi\
\214er must be of)72 351.5 Q(f, or the modi\214er is a `)-.275 E(`don')
-.814 E(t)-.198 E(care')72 364.5 Q 2.75('\255i)-.814 G 2.75(tm)-2.75 G
(ay be on or of)-2.75 E 2.75(f. When)-.275 F 2.75(am)2.75 G
(odi\214er_mask bit is set to 0, the state of the associated)-2.75 E
(modi\214er is ignored when e)72 377.5 Q -.275(va)-.275 G
(luating whether the k).275 E .33 -.165(ey i)-.11 H 2.75(sh).165 G
(ot or not.)-2.75 E 465 388.75 72 388.75 DL F0(Modi\214er Bit)72 405 Q
(Mask Bit)30.75 E(Meaning)45.413 E 465 415.75 72 415.75 DL F1(0)72 432 Q
(1)160.5 432 Q(The modi\214er must be of)249 432 Q(f.)-.275 E(1)72 445 Q
(1)160.5 445 Q(The modi\214er must be on.)249 445 Q(n/a)72 458 Q(0)160.5
458 Q(Do not care if the modi\214er is on or of)249 458 Q(f.)-.275 E 465
468.75 72 468.75 DL F0 2.75(13.5.6.12. Hot)72 498.5 R -.275(Ke)2.75 G
2.75(yS).275 G(tate)-2.75 E F1(The)72 515.4 Q F0(XNHotK)3.666 E(eyState)
-.275 E F1(ar)3.666 E(gument speci\214es the hot k)-.198 E .33 -.165
(ey s)-.11 H(tate of the input method.).165 E(This is usually)5.5 E
(used to switch the input method between hot k)72 528.4 Q .33 -.165
(ey o)-.11 H(peration and normal input processing.).165 E(The v)72 545.3
Q(alue of the ar)-.275 E
(gument is a pointer to a structure of type XIMHotK)-.198 E -.165(ey)
-.275 G(State .).165 E 36 566.95 36 577.95 DL 36 564.95 36 575.95 DL
41.5 563.2 36 563.2 DL 43.5 563.2 38 563.2 DL 49 563.2 43.5 563.2 DL
(typedef unsigned long XIMHotK)72 581.7 Q -.165(ey)-.275 G(State;).165 E
(#de\214ne)72 607.7 Q F0(XIMHotK)125.416 607.7 Q(eyStateON)-.275 E F1
(\(0x0001L\))357 607.7 Q(#de\214ne)72 620.7 Q F0(XIMHotK)125.416 620.7 Q
(eyStateOFF)-.275 E F1(\(0x0002L\))357 620.7 Q 36 622.85 36 633.85 DL 36
620.85 36 631.85 DL 41.5 632.1 36 632.1 DL 43.5 632.1 38 632.1 DL 49
632.1 43.5 632.1 DL(If not speci\214ed, the def)72 661 Q(ault is)-.11 E
F0(XIMHotK)3.666 E(eyStateOFF)-.275 E F1(.).916 E F0 2.75(13.5.6.13. Pr)
72 690.9 R(eedit and Status Attrib)-.198 E(utes)-.22 E F1(The)72 707.8 Q
F0(XNPr)3.666 E(eeditAttrib)-.198 E(utes)-.22 E F1(and)3.666 E F0
(XNStatusAttrib)3.666 E(utes)-.22 E F1(ar)3.666 E
(guments specify to an input method the)-.198 E(attrib)72 720.8 Q
(utes to be used for the preedit and status areas, if an)-.22 E 4.18
-.715(y. T)-.165 H(hose attrib).715 E(utes are passed to)-.22 E F0(326)
279.75 769 Q 0 Cg EP
%%Page: 327 332
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E(XSetICV)72.916 85 Q(alues)-1.012 E/F1
11/Times-Roman@0 SF(or)3.666 E F0(XGetICV)3.666 E(alues)-1.012 E F1
(as a nested v)3.666 E(ariable-length list.)-.275 E
(The names to be used in these)5.5 E(lists are described in the follo)72
98 Q(wing sections.)-.275 E F0 2.75(13.5.6.13.1. Ar)72 124 R(ea)-.198 E
F1(The v)72 140.9 Q(alue of the)-.275 E F0(XN)3.666 E(Ar)-.22 E(ea)-.198
E F1(ar)3.666 E(gument must be a pointer to a structure of type)-.198 E
F0(XRectangle.)3.666 E F1(The)3.666 E(interpretation of the)72 153.9 Q
F0(XN)3.666 E(Ar)-.22 E(ea)-.198 E F1(ar)3.666 E
(gument is dependent on the input method style that has been set.)-.198
E(If the input method style is)72 170.8 Q F0(XIMPr)3.666 E(eeditP)-.198
E(osition)-.22 E F1(,).916 E F0(XN)3.666 E(Ar)-.22 E(ea)-.198 E F1
(speci\214es the clipping re)3.666 E(gion within)-.165 E
(which preediting will tak)72 183.8 Q 2.75(ep)-.11 G 2.75(lace. If)-2.75
F(the focus windo)2.75 E 2.75(wh)-.275 G
(as been set, the coordinates are assumed)-2.75 E(to be relati)72 196.8
Q .33 -.165(ve t)-.275 H 2.75(ot).165 G(he focus windo)-2.75 E 4.18
-.715(w. O)-.275 H(therwise, the coordinates are assumed to be relati)
.715 E .33 -.165(ve t)-.275 H 2.75(ot).165 G(he)-2.75 E(client windo)72
209.8 Q 4.18 -.715(w. I)-.275 H 2.75(fn).715 G
(either has been set, the results are unde\214ned.)-2.75 E(If)72 226.7 Q
F0(XN)3.666 E(Ar)-.22 E(ea)-.198 E F1
(is not speci\214ed, is set to NULL, or is in)3.666 E -.275(va)-.44 G
(lid, the input method will def).275 E(ault the clip-)-.11 E(ping re)72
239.7 Q(gion to the geometry of the)-.165 E F0(XNF)3.666 E(ocusW)-.275 E
(indo)-.198 E(w)-.11 E F1 5.5(.I).916 G 2.75(ft)-5.5 G
(he area speci\214ed is NULL or in)-2.75 E -.275(va)-.44 G(lid,).275 E
(the results are unde\214ned.)72 252.7 Q(If the input style is)72 269.6
Q F0(XIMPr)3.666 E(eeditAr)-.198 E(ea)-.198 E F1(or)3.666 E F0
(XIMStatusAr)3.666 E(ea)-.198 E F1(,).916 E F0(XN)3.666 E(Ar)-.22 E(ea)
-.198 E F1(speci\214es the geometry pro-)3.666 E
(vided by the client to the input method.)72 282.6 Q
(The input method may use this area to display its data,)5.5 E
(either preedit or status depending on the area designated.)72 295.6 Q
(The input method may create a windo)5.5 E(w)-.275 E
(as a child of the client windo)72 308.6 Q 2.75(ww)-.275 G
(ith dimensions that \214t the)-2.75 E F0(XN)3.666 E(Ar)-.22 E(ea)-.198
E F1 5.5(.T).916 G(he coordinates are relati)-5.5 E -.165(ve)-.275 G
(to the client windo)72 321.6 Q 4.18 -.715(w. I)-.275 H 2.75(ft).715 G
(he client windo)-2.75 E 2.75(wh)-.275 G
(as not been set yet, the input method should sa)-2.75 E -.165(ve)-.22 G
(these v)72 334.6 Q(alues and apply them when the client windo)-.275 E
2.75(wi)-.275 G 2.75(ss)-2.75 G 2.75(et. If)-2.75 F F0(XN)3.666 E(Ar)
-.22 E(ea)-.198 E F1(is not speci\214ed, is set to)3.666 E
(NULL, or is in)72 347.6 Q -.275(va)-.44 G
(lid, the results are unde\214ned.).275 E F0 2.75(13.5.6.13.2. Ar)72
373.6 R(ea Needed)-.198 E F1(When set, the)72 390.5 Q F0(XN)3.666 E(Ar)
-.22 E(eaNeeded)-.198 E F1(ar)3.666 E
(gument speci\214es the geometry suggested by the client for this)-.198
E(area \(preedit or status\).)72 403.5 Q(The v)5.5 E
(alue associated with the ar)-.275 E
(gument must be a pointer to a structure of)-.198 E(type)72 416.5 Q F0
(XRectangle)3.666 E F1 5.5(.N).916 G(ote that the x, y v)-5.5 E
(alues are not used and that nonzero v)-.275 E(alues for width or)-.275
E(height are the constraints that the client wishes the input method to\
 respect.)72 429.5 Q(When read, the)72 446.4 Q F0(XN)3.666 E(Ar)-.22 E
(eaNeeded)-.198 E F1(ar)3.666 E
(gument speci\214es the preferred geometry desired by the input)-.198 E
(method for the area.)72 459.4 Q(This ar)72 476.3 Q(gument is only v)
-.198 E(alid if the input style is)-.275 E F0(XIMPr)3.666 E(eeditAr)
-.198 E(ea)-.198 E F1(or)3.666 E F0(XIMStatusAr)3.666 E(ea)-.198 E F1
5.5(.I).916 G 2.75(ti)-5.5 G 2.75(su)-2.75 G(sed)-2.75 E
(for geometry ne)72 489.3 Q
(gotiation between the client and the input method and has no other ef)
-.165 E(fect on the)-.275 E(input method \(see section 13.5.1.5\).)72
502.3 Q F0 2.75(13.5.6.13.3. Spot)72 528.3 R(Location)2.75 E F1(The)72
545.2 Q F0(XNSpotLocation)3.666 E F1(ar)3.666 E(gument speci\214es to t\
he input method the coordinates of the spot to be)-.198 E
(used by an input method e)72 558.2 Q -.165(xe)-.165 G(cuting with).165
E F0(XNInputStyle)3.666 E F1(set to)3.666 E F0(XIMPr)3.666 E(eeditP)
-.198 E(osition)-.22 E F1 5.5(.W).916 G(hen spec-)-5.5 E(i\214ed to an)
72 571.2 Q 2.75(yi)-.165 G(nput method other than)-2.75 E F0(XIMPr)3.666
E(eeditP)-.198 E(osition)-.22 E F1 2.75(,t).916 G(his XIC v)-2.75 E
(alue is ignored.)-.275 E
(The x coordinate speci\214es the position where the ne)72 588.1 Q
(xt character w)-.165 E(ould be inserted.)-.11 E(The y coordi-)5.5 E
(nate is the position of the baseline used by the current te)72 601.1 Q
(xt line in the focus windo)-.165 E 4.18 -.715(w. T)-.275 H(he x and y)
.715 E(coordinates are relati)72 614.1 Q .33 -.165(ve t)-.275 H 2.75(ot)
.165 G(he focus windo)-2.75 E 1.43 -.715(w, i)-.275 H 2.75(fi).715 G
2.75(th)-2.75 G(as been set; otherwise, the)-2.75 E 2.75(ya)-.165 G
(re relati)-2.75 E .33 -.165(ve t)-.275 H 2.75(ot).165 G(he)-2.75 E
(client windo)72 627.1 Q 4.18 -.715(w. I)-.275 H 2.75(fn).715 G
(either the focus windo)-2.75 E 2.75(wn)-.275 G(or the client windo)
-2.75 E 2.75(wh)-.275 G(as been set, the results are)-2.75 E
(unde\214ned.)72 640.1 Q(The v)72 657 Q(alue of the ar)-.275 E
(gument is a pointer to a structure of type)-.198 E F0(XP)3.666 E(oint)
-.22 E F1(.).916 E F0 2.75(13.5.6.13.4. Colormap)72 683 R F1 -1.1 -.88
(Tw o)72 699.9 T(dif)3.63 E(ferent ar)-.275 E(guments can be used to in\
dicate what colormap the input method should use to)-.198 E
(allocate colors, a colormap ID, or a standard colormap name.)72 712.9 Q
F0(327)279.75 769 Q 0 Cg EP
%%Page: 328 333
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E/F1 11/Times-Roman@0 SF(The)72 85 Q F0
(XNColormap)3.666 E F1(ar)3.666 E
(gument is used to specify a colormap ID.)-.198 E(The ar)5.5 E(gument v)
-.198 E(alue is of type)-.275 E F0(Colormap)72.916 98 Q F1 5.5(.A).916 G
2.75(ni)-5.5 G -2.145 -.44(nv a)-2.75 H(lid ar).44 E
(gument may generate a)-.198 E F0(BadColor)3.666 E F1
(error when it is used by the input)3.666 E(method.)72 111 Q(The)72
127.9 Q F0(XNStdColormap)3.666 E F1(ar)3.666 E
(gument is used to indicate the name of the standard colormap in which)
-.198 E(the input method should allocate colors.)72 140.9 Q(The ar)5.5 E
(gument v)-.198 E(alue is an)-.275 E F0(Atom)3.666 E F1
(that should be a v)3.666 E(alid)-.275 E(atom for calling)72 153.9 Q F0
(XGetRGBColormaps)3.666 E F1 5.5(.A).916 G 2.75(ni)-5.5 G -2.145 -.44
(nv a)-2.75 H(lid ar).44 E(gument may generate a)-.198 E F0(BadAtom)
3.666 E F1(error)3.666 E(when it is used by the input method.)72 166.9 Q
(If the colormap is left unspeci\214ed, the client windo)72 183.8 Q 2.75
(wc)-.275 G(olormap becomes the def)-2.75 E(ault.)-.11 E F0 2.75
(13.5.6.13.5. F)72 209.8 R(or)-.275 E(egr)-.198 E(ound and Backgr)-.198
E(ound)-.198 E F1(The)72 226.7 Q F0(XNF)3.666 E(or)-.275 E(egr)-.198 E
(ound)-.198 E F1(and)3.666 E F0(XNBackgr)3.666 E(ound)-.198 E F1(ar)
3.666 E(guments specify the fore)-.198 E(ground and background)-.165 E
(pix)72 239.7 Q(el, respecti)-.165 E -.165(ve)-.275 G(ly).165 E 5.5(.T)
-.715 G(he ar)-5.5 E(gument v)-.198 E(alue is of type)-.275 E F0 1.832
(unsigned long)3.666 F F1 5.5(.I).916 G 2.75(tm)-5.5 G(ust be a v)-2.75
E(alid pix)-.275 E(el in the)-.165 E(input method colormap.)72 252.7 Q
(If these v)72 269.6 Q(alues are left unspeci\214ed, the def)-.275 E
(ault is determined by the input method.)-.11 E F0 2.75
(13.5.6.13.6. Backgr)72 295.6 R(ound Pixmap)-.198 E F1(The)72 312.5 Q F0
(XNBackgr)3.666 E(oundPixmap)-.198 E F1(ar)3.666 E
(gument speci\214es a background pixmap to be used as the back-)-.198 E
(ground of the windo)72 325.5 Q 4.18 -.715(w. T)-.275 H(he v).715 E
(alue must be of type)-.275 E F0(Pixmap)3.666 E F1 5.5(.A).916 G 2.75
(ni)-5.5 G -2.145 -.44(nv a)-2.75 H(lid ar).44 E(gument may generate a)
-.198 E F0(BadPixmap)72.916 338.5 Q F1
(error when it is used by the input method.)3.666 E(If this v)72 355.4 Q
(alue is left unspeci\214ed, the def)-.275 E
(ault is determined by the input method.)-.11 E F0 2.75(13.5.6.13.7. F)
72 381.4 R(ont Set)-.275 E F1(The)72 398.3 Q F0(XNF)3.666 E(ontSet)-.275
E F1(ar)3.666 E
(gument speci\214es to the input method what font set is to be used.)
-.198 E(The ar)5.5 E(gu-)-.198 E(ment v)72 411.3 Q(alue is of type)-.275
E F0(XF)3.666 E(ontSet)-.275 E F1(.).916 E(If this v)72 428.2 Q
(alue is left unspeci\214ed, the def)-.275 E
(ault is determined by the input method.)-.11 E F0 2.75
(13.5.6.13.8. Line)72 454.2 R(Spacing)2.75 E F1(The)72 471.1 Q F0
(XNLineSpace)3.666 E F1(ar)3.666 E(gument speci\214es to the input meth\
od what line spacing is to be used in the)-.198 E(preedit windo)72 484.1
Q 2.75(wi)-.275 G 2.75(fm)-2.75 G(ore than one line is to be used.)-2.75
E(This ar)5.5 E(gument is of type)-.198 E F0(int)3.666 E F1(.).916 E
(If this v)72 501 Q(alue is left unspeci\214ed, the def)-.275 E
(ault is determined by the input method.)-.11 E F0 2.75
(13.5.6.13.9. Cursor)72 527 R F1(The)72 543.9 Q F0(XNCursor)3.666 E F1
(ar)3.666 E(gument speci\214es to the input method what cursor is to be\
 used in the speci\214ed)-.198 E(windo)72 556.9 Q 4.18 -.715(w. T)-.275
H(his ar).715 E(gument is of type)-.198 E F0(Cursor)3.666 E F1(.).916 E
(An in)72 573.8 Q -.275(va)-.44 G(lid ar).275 E(gument may generate a)
-.198 E F0(BadCursor)3.666 E F1
(error when it is used by the input method.)3.666 E(If)5.5 E(this v)72
586.8 Q(alue is left unspeci\214ed, the def)-.275 E
(ault is determined by the input method.)-.11 E F0 2.75
(13.5.6.13.10. Pr)72 612.8 R(eedit State)-.198 E F1(The)72 629.7 Q F0
(XNPr)3.666 E(eeditState)-.198 E F1(ar)3.666 E
(gument speci\214es the state of input preediting for the input method.)
-.198 E(Input)5.5 E(preediting can be on or of)72 642.7 Q(f.)-.275 E
(The v)72 659.6 Q(alid mask names for)-.275 E F0(XNPr)3.666 E
(eeditState)-.198 E F1(are as follo)3.666 E(ws:)-.275 E F0(328)279.75
769 Q 0 Cg EP
%%Page: 329 334
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E .44 LW 36 76.75 36 87.75 DL 36 74.75
36 85.75 DL 41.5 73 36 73 DL 43.5 73 38 73 DL 49 73 43.5 73 DL/F1 11
/Times-Roman@0 SF(typedef unsigned long XIMPreeditState;)72 95.4 Q
(#de\214ne)72 121.4 Q F0(XIMPr)125.416 121.4 Q(eeditUnkno)-.198 E(wn)
-.11 E F1(0L)285 121.4 Q(#de\214ne)72 134.4 Q F0(XIMPr)125.416 134.4 Q
(eeditEnable)-.198 E F1(1L)285 134.4 Q(#de\214ne)72 147.4 Q F0(XIMPr)
125.416 147.4 Q(eeditDisable)-.198 E F1(\(1L<<1\))285 147.4 Q 36 149.55
36 160.55 DL 36 147.55 36 158.55 DL 41.5 158.8 36 158.8 DL 43.5 158.8 38
158.8 DL 49 158.8 43.5 158.8 DL(If a v)72 183.8 Q(alue of)-.275 E F0
(XIMPr)3.666 E(eeditEnable)-.198 E F1
(is set, then input preediting is turned on by the input method.)3.666 E
(If a v)72 200.7 Q(alue of)-.275 E F0(XIMPr)3.666 E(eeditDisable)-.198 E
F1(is set, then input preediting is turned of)3.666 E 2.75(fb)-.275 G
2.75(yt)-2.75 G(he input method.)-2.75 E(If)72 217.6 Q F0(XNPr)3.666 E
(eeditState)-.198 E F1(is left unspeci\214ed, then the state will be im\
plementation-dependent.)3.666 E(When)72 234.5 Q F0(XNResetState)3.666 E
F1(is set to)3.666 E F0(XIMInitialState)3.666 E F1 2.75(,t).916 G(he)
-2.75 E F0(XNPr)3.666 E(eeditState)-.198 E F1 -.275(va)3.666 G
(lue speci\214ed at the cre-).275 E
(ation time will be re\215ected as the initial state for)72 247.5 Q F0
(XmbResetIC)3.666 E F1(,).916 E F0(XwcResetIC)3.666 E F1(and)3.666 E F0
(Xutf8ResetIC)72.916 260.5 Q F1(.).916 E(Because this XIC v)72 277.4 Q
(alue is optional, a client should call)-.275 E F0(XGetIMV)3.666 E
(alues)-1.012 E F1(with ar)3.666 E(gument)-.198 E F0(XNQueryICV)72.916
290.4 Q(aluesList)-1.012 E F1(before using this ar)3.666 E(gument.)-.198
E F0 2.75(13.5.6.13.11. Pr)72 316.4 R(eedit State Notify Callback)-.198
E F1(The preedit state notify callback is triggered by the input method\
 when the preediting state has)72 333.3 Q 2.75(changed. The)72 346.3 R
-.275(va)2.75 G(lue of the).275 E F0(XNPr)3.666 E
(eeditStateNotifyCallback)-.198 E F1(ar)3.666 E
(gument is a pointer to a structure)-.198 E(of type)72 359.3 Q F0
(XIMCallback)3.666 E F1 5.5(.T).916 G(he generic prototype is as follo)
-5.5 E(ws:)-.275 E 36 377.05 36 388.05 DL 36 375.05 36 386.05 DL 41.5
373.3 36 373.3 DL 43.5 373.3 38 373.3 DL 49 373.3 43.5 373.3 DL -.22(vo)
72 389.2 S(id PreeditStateNotifyCallback).22 E(\().916 E/F2 11
/Times-Italic@0 SF(ic).916 E F1(,).916 E F2(client_data)2.75 E F1(,).916
E F2(call_data)2.75 E F1(\)).916 E(XIC)88.5 402.2 Q F2(ic)2.75 E F1(;)
.916 E(XPointer)88.5 415.2 Q F2(client_data)2.75 E F1(;).916 E
(XIMPreeditStateNotifyCallbackStruct *)88.5 428.2 Q F2(call_data)A F1(;)
.916 E F2(ic)72 449 Q F1(Speci\214es the input conte)64.058 E(xt.)-.165
E F2(client_data)72 465.9 Q F1(Speci\214es the additional client data.)
22.5 E F2(call_data)72 482.8 Q F1
(Speci\214es the current preedit state.)30.442 E 36 478.45 36 489.45 DL
36 476.45 36 487.45 DL 41.5 487.7 36 487.7 DL 43.5 487.7 38 487.7 DL 49
487.7 43.5 487.7 DL(The)72 512.7 Q F0(XIMPr)3.666 E
(eeditStateNotifyCallbackStruct)-.198 E F1
(structure is de\214ned as follo)3.666 E(ws:)-.275 E 36 534.35 36 545.35
DL 36 532.35 36 543.35 DL 41.5 530.6 36 530.6 DL 43.5 530.6 38 530.6 DL
49 530.6 43.5 530.6 DL
(typedef struct _XIMPreeditStateNotifyCallbackStruct {)72 549.1 Q
(XIMPreeditState state;)108 562.1 Q 2.75(}X)72 575.1 S
(IMPreeditStateNotifyCallbackStruct;)-2.75 E 36 577.25 36 588.25 DL 36
575.25 36 586.25 DL 41.5 586.5 36 586.5 DL 43.5 586.5 38 586.5 DL 49
586.5 43.5 586.5 DL(Because this XIC v)72 615.4 Q
(alue is optional, a client should call)-.275 E F0(XGetIMV)3.666 E
(alues)-1.012 E F1(with ar)3.666 E(gument)-.198 E F0(XNQueryICV)72.916
628.4 Q(aluesList)-1.012 E F1(before using this ar)3.666 E(gument.)-.198
E F0 2.75(13.5.6.13.12. Pr)72 654.4 R(eedit and Status Callbacks)-.198 E
F1 2.75(Ac)72 671.3 S(lient that w)-2.75 E
(ants to support the input style)-.11 E F0(XIMPr)3.666 E(eeditCallbacks)
-.198 E F1(must pro)3.666 E(vide a set of preedit)-.165 E
(callbacks to the input method.)72 684.3 Q
(The set of preedit callbacks is as follo)5.5 E(ws:)-.275 E F0(XNPr)
72.916 703.8 Q(eeditStartCallback)-.198 E F1
(This is called when the input method starts preedit.)214.5 703.8 Q F0
(XNPr)72.916 716.8 Q(eeditDoneCallback)-.198 E F1
(This is called when the input method stops preedit.)214.5 716.8 Q F0
(329)279.75 769 Q 0 Cg EP
%%Page: 330 335
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E(XNPr)72.916 85 Q(eeditDrawCallback)
-.198 E/F1 11/Times-Roman@0 SF
(This is called when a number of preedit k)214.5 85 Q -.165(ey)-.11 G
(strok).165 E(es should be)-.11 E(echoed.)214.5 98 Q F0(XNPr)72.916 111
Q(eeditCar)-.198 E(etCallback)-.198 E F1(This is called to mo)214.5 111
Q .33 -.165(ve t)-.165 H(he te).165 E
(xt insertion point within the preedit)-.165 E(string.)214.5 124 Q 2.75
(Ac)72 147.4 S(lient that w)-2.75 E(ants to support the input style)-.11
E F0(XIMStatusCallbacks)3.666 E F1(must pro)3.666 E
(vide a set of status)-.165 E(callbacks to the input method.)72 160.4 Q
(The set of status callbacks is as follo)5.5 E(ws:)-.275 E F0
(XNStatusStartCallback)72.916 179.9 Q F1
(This is called when the input method initializes the status area.)214.5
179.9 Q F0(XNStatusDoneCallback)72.916 192.9 Q F1
(This is called when the input method no longer needs the status)214.5
192.9 Q(area.)214.5 205.9 Q F0(XNStatusDrawCallback)72.916 218.9 Q F1
(This is called when updating of the status area is required.)214.5
218.9 Q(The v)72 242.3 Q(alue of an)-.275 E 2.75(ys)-.165 G
(tatus or preedit ar)-2.75 E(gument is a pointer to a structure of type)
-.198 E F0(XIMCallback)3.666 E F1(.).916 E .44 LW 36 260.05 36 271.05 DL
36 258.05 36 269.05 DL 41.5 256.3 36 256.3 DL 43.5 256.3 38 256.3 DL 49
256.3 43.5 256.3 DL(typedef v)72 278.7 Q(oid \(*XIMProc\)\(\);)-.22 E
(typedef struct {)72 304.7 Q(XPointer client_data;)108 317.7 Q
(XIMProc callback;)108 330.7 Q 2.75(}X)72 343.7 S(IMCallback;)-2.75 E 36
345.85 36 356.85 DL 36 343.85 36 354.85 DL 41.5 355.1 36 355.1 DL 43.5
355.1 38 355.1 DL 49 355.1 43.5 355.1 DL(Each callback has some particu\
lar semantics and will carry the data that e)72 380.1 Q(xpresses the en)
-.165 E(viron-)-.44 E
(ment necessary to the client into a speci\214c data structure.)72 393.1
Q(This paragraph only describes the ar)5.5 E(gu-)-.198 E
(ments to be used to set the callback.)72 406.1 Q(Setting an)72 423 Q
2.75(yo)-.165 G 2.75(ft)-2.75 G(hese v)-2.75 E
(alues while doing preedit may cause une)-.275 E(xpected results.)-.165
E F0 2.75(13.5.7. Input)72 449 R(Method Callback Semantics)2.75 E F1
(XIM callbacks are procedures de\214ned by clients or te)72 465.9 Q
(xt dra)-.165 E(wing packages that are to be called)-.165 E
(from the input method when selected e)72 478.9 Q -.165(ve)-.275 G
(nts occur).165 E 5.5(.M)-.605 G(ost clients will use a te)-5.5 E
(xt editing package or)-.165 E 2.75(at)72 491.9 S
(oolkit and, hence, will not need to de\214ne such callbacks.)-2.75 E
(This section de\214nes the callback)5.5 E(semantics, when the)72 504.9
Q 2.75(ya)-.165 G(re triggered, and what their ar)-2.75 E(guments are.)
-.198 E(This information is mostly)5.5 E
(useful for X toolkit implementors.)72 517.9 Q(Callbacks are mostly pro)
72 534.8 Q(vided so that clients \(or te)-.165 E
(xt editing packages\) can implement on-the-)-.165 E
(spot preediting in their o)72 547.8 Q(wn windo)-.275 E 4.18 -.715(w. I)
-.275 H 2.75(nt).715 G
(hat case, the input method needs to communicate and)-2.75 E
(synchronize with the client.)72 560.8 Q
(The input method needs to communicate changes in the preedit win-)5.5 E
(do)72 573.8 Q 2.75(ww)-.275 G(hen it is under control of the client.)
-2.75 E(Those callbacks allo)5.5 E 2.75(wt)-.275 G
(he client to initialize the)-2.75 E(preedit area, display a ne)72 586.8
Q 2.75(wp)-.275 G(reedit string, mo)-2.75 E .33 -.165(ve t)-.165 H
(he te).165 E(xt insertion point during preedit, terminate)-.165 E
(preedit, or update the status area.)72 599.8 Q
(All callback procedures follo)72 616.7 Q 2.75(wt)-.275 G
(he generic prototype:)-2.75 E F0(330)279.75 769 Q 0 Cg EP
%%Page: 331 336
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E .44 LW 36 76.75 36 87.75 DL 36 74.75
36 85.75 DL 41.5 73 36 73 DL 43.5 73 38 73 DL 49 73 43.5 73 DL/F1 11
/Times-Roman@0 SF -.22(vo)72 88.9 S(id CallbackPrototype).22 E(\().916 E
/F2 11/Times-Italic@0 SF(ic).916 E F1(,).916 E F2(client_data)2.75 E F1
(,).916 E F2(call_data)2.75 E F1(\)).916 E(XIC)88.5 101.9 Q F2(ic)2.75 E
F1(;).916 E(XPointer)88.5 114.9 Q F2(client_data)2.75 E F1(;).916 E
(SomeT)88.5 127.9 Q(ype)-.88 E F2(call_data)2.75 E F1(;).916 E F2(ic)72
148.7 Q F1(Speci\214es the input conte)64.058 E(xt.)-.165 E F2
(client_data)72 165.6 Q F1(Speci\214es the additional client data.)22.5
E F2(call_data)72 182.5 Q F1
(Speci\214es data speci\214c to the callback.)30.442 E 36 178.15 36
189.15 DL 36 176.15 36 187.15 DL 41.5 187.4 36 187.4 DL 43.5 187.4 38
187.4 DL 49 187.4 43.5 187.4 DL(The call_data ar)72 212.4 Q
(gument is a structure that e)-.198 E(xpresses the ar)-.165 E
(guments needed to achie)-.198 E .33 -.165(ve t)-.275 H(he seman-).165 E
(tics; that is, it is a speci\214c data structure appropriate to the ca\
llback.)72 225.4 Q(In cases where no data is)5.5 E
(needed in the callback, this call_data ar)72 238.4 Q(gument is NULL.)
-.198 E(The client_data ar)5.5 E(gument is a closure)-.198 E(that has b\
een initially speci\214ed by the client when specifying the callback an\
d passed back.)72 251.4 Q(It)5.5 E(may serv)72 264.4 Q(e, for e)-.165 E
(xample, to inherit application conte)-.165 E(xt in the callback.)-.165
E(The follo)72 281.3 Q(wing paragraphs describe the programming semanti\
cs and speci\214c data structure associ-)-.275 E(ated with the dif)72
294.3 Q(ferent reasons.)-.275 E F0 2.75(13.5.7.1. Geometry)72 320.3 R
(Callback)2.75 E F1(The geometry callback is triggered by the input met\
hod to indicate that it w)72 337.2 Q(ants the client to)-.11 E(ne)72
350.2 Q(gotiate geometry)-.165 E 5.5(.T)-.715 G
(he generic prototype is as follo)-5.5 E(ws:)-.275 E 36 367.95 36 378.95
DL 36 365.95 36 376.95 DL 41.5 364.2 36 364.2 DL 43.5 364.2 38 364.2 DL
49 364.2 43.5 364.2 DL -.22(vo)72 380.1 S(id GeometryCallback).22 E(\()
.916 E F2(ic).916 E F1(,).916 E F2(client_data)2.75 E F1(,).916 E F2
(call_data)2.75 E F1(\)).916 E(XIC)88.5 393.1 Q F2(ic)2.75 E F1(;).916 E
(XPointer)88.5 406.1 Q F2(client_data)2.75 E F1(;).916 E(XPointer)88.5
419.1 Q F2(call_data)2.75 E F1(;).916 E F2(ic)72 439.9 Q F1
(Speci\214es the input conte)64.058 E(xt.)-.165 E F2(client_data)72
456.8 Q F1(Speci\214es the additional client data.)22.5 E F2(call_data)
72 473.7 Q F1(Not used for this callback and al)30.442 E -.11(wa)-.11 G
(ys passed as NULL.).11 E 36 469.35 36 480.35 DL 36 467.35 36 478.35 DL
41.5 478.6 36 478.6 DL 43.5 478.6 38 478.6 DL 49 478.6 43.5 478.6 DL
(The callback is called with a NULL call_data ar)72 503.6 Q(gument.)
-.198 E F0 2.75(13.5.7.2. Destr)72 529.6 R(oy Callback)-.198 E F1
(The destro)72 546.5 Q 2.75(yc)-.11 G
(allback is triggered by the input method when it stops service for an)
-2.75 E 2.75(yr)-.165 G 2.75(eason. After)-2.75 F(the callback is in)72
559.5 Q -.22(vo)-.44 G -.11(ke).22 G(d, the input conte).11 E
(xt will be freed by Xlib)-.165 E 5.5(.T)-.44 G
(he generic prototype is as fol-)-5.5 E(lo)72 572.5 Q(ws:)-.275 E 36
590.25 36 601.25 DL 36 588.25 36 599.25 DL 41.5 586.5 36 586.5 DL 43.5
586.5 38 586.5 DL 49 586.5 43.5 586.5 DL -.22(vo)72 602.4 S(id Destro)
.22 E -1.834(yCallback \()-.11 F F2(ic).916 E F1(,).916 E F2
(client_data)2.75 E F1(,).916 E F2(call_data)2.75 E F1(\)).916 E(XIC)
88.5 615.4 Q F2(ic)2.75 E F1(;).916 E(XPointer)88.5 628.4 Q F2
(client_data)2.75 E F1(;).916 E(XPointer)88.5 641.4 Q F2(call_data)2.75
E F1(;).916 E F2(ic)72 662.2 Q F1(Speci\214es the input conte)64.058 E
(xt.)-.165 E F2(client_data)72 679.1 Q F1
(Speci\214es the additional client data.)22.5 E F2(call_data)72 696 Q F1
(Not used for this callback and al)30.442 E -.11(wa)-.11 G
(ys passed as NULL.).11 E 36 691.65 36 702.65 DL 36 689.65 36 700.65 DL
41.5 700.9 36 700.9 DL 43.5 700.9 38 700.9 DL 49 700.9 43.5 700.9 DL
(The callback is called with a NULL call_data ar)72 725.9 Q(gument.)
-.198 E F0(331)279.75 769 Q 0 Cg EP
%%Page: 332 337
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E 2.75(13.5.7.3. String)72 85 R(Con)2.75
E -.11(ve)-.44 G(rsion Callback).11 E/F1 11/Times-Roman@0 SF
(The string con)72 101.9 Q -.165(ve)-.44 G(rsion callback is triggered \
by the input method to request the client to return the).165 E
(string to be con)72 114.9 Q -.165(ve)-.44 G 2.75(rted. The).165 F
(returned string may be either a multibyte or wide character string,)
2.75 E(with an encoding matching the locale bound to the input conte)72
127.9 Q 2.75(xt. The)-.165 F(callback prototype is as)2.75 E(follo)72
140.9 Q(ws:)-.275 E .44 LW 36 158.65 36 169.65 DL 36 156.65 36 167.65 DL
41.5 154.9 36 154.9 DL 43.5 154.9 38 154.9 DL 49 154.9 43.5 154.9 DL
-.22(vo)72 170.8 S(id StringCon).22 E -.165(ve)-.44 G -1.834
(rsionCallback \().165 F/F2 11/Times-Italic@0 SF(ic).916 E F1(,).916 E
F2(client_data)2.75 E F1(,).916 E F2(call_data)2.75 E F1(\)).916 E(XIC)
88.5 183.8 Q F2(ic)2.75 E F1(;).916 E(XPointer)88.5 196.8 Q F2
(client_data)2.75 E F1(;).916 E(XIMStringCon)88.5 209.8 Q -.165(ve)-.44
G(rsionCallbackStruct *).165 E F2(call_data)A F1(;).916 E F2(ic)72 230.6
Q F1(Speci\214es the input method.)64.058 E F2(client_data)72 247.5 Q F1
(Speci\214es the additional client data.)22.5 E F2(call_data)72 264.4 Q
F1(Speci\214es the amount of the string to be con)30.442 E -.165(ve)-.44
G(rted.).165 E 36 260.05 36 271.05 DL 36 258.05 36 269.05 DL 41.5 269.3
36 269.3 DL 43.5 269.3 38 269.3 DL 49 269.3 43.5 269.3 DL
(The callback is passed an)72 294.3 Q F0(XIMStringCon)3.666 E -.11(ve)
-.44 G(rsionCallbackStruct).11 E F1(structure in the call_data ar)3.666
E(gu-)-.198 E 2.75(ment. The)72 307.3 R(te)2.75 E(xt member is an)-.165
E F0(XIMStringCon)3.666 E -.11(ve)-.44 G(rsionT).11 E(ext)-1.012 E F1
(structure \(see section 13.5.6.9\) to be)3.666 E
(\214lled in by the client and describes the te)72 320.3 Q
(xt to be sent to the input method.)-.165 E(The data pointed to by)5.5 E
(the string and feedback elements of the)72 333.3 Q F0(XIMStringCon)
3.666 E -.11(ve)-.44 G(rsionT).11 E(ext)-1.012 E F1
(structure will be freed using)3.666 E F0(XFr)72.916 346.3 Q(ee)-.198 E
F1(by the input method after the callback returns.)3.666 E
(So the client should not point to internal)5.5 E -.22(bu)72 359.3 S
-.275(ff).22 G(ers that are critical to the client.).275 E(Similarly)5.5
E 2.75(,b)-.715 G(ecause the feedback element is currently reserv)-2.75
E(ed)-.165 E
(for future use, the client should set feedback to NULL to pre)72 372.3
Q -.165(ve)-.275 G(nt the library from freeing memory).165 E
(at some random location due to an uninitialized pointer)72 385.3 Q(.)
-.605 E(The)72 402.2 Q F0(XIMStringCon)3.666 E -.11(ve)-.44 G
(rsionCallbackStruct).11 E F1(structure is de\214ned as follo)3.666 E
(ws:)-.275 E 36 423.85 36 434.85 DL 36 421.85 36 432.85 DL 41.5 420.1 36
420.1 DL 43.5 420.1 38 420.1 DL 49 420.1 43.5 420.1 DL
(typedef struct _XIMStringCon)72 442.5 Q -.165(ve)-.44 G
(rsionCallbackStruct {).165 E(XIMStringCon)99.5 455.5 Q -.165(ve)-.44 G
(rsionPosition position;).165 E(XIMCaretDirection direction;)99.5 468.5
Q(short f)99.5 481.5 Q(actor;)-.11 E(XIMStringCon)99.5 494.5 Q -.165(ve)
-.44 G(rsionOperation operation;).165 E(XIMStringCon)99.5 507.5 Q -.165
(ve)-.44 G(rsionT).165 E -.165(ex)-.77 G 2.75(t*).165 G(te)-2.75 E(xt;)
-.165 E 2.75(}X)72 520.5 S(IMStringCon)-2.75 E -.165(ve)-.44 G
(rsionCallbackStruct;).165 E(typedef short XIMStringCon)72 546.5 Q -.165
(ve)-.44 G(rsionPosition;).165 E(typedef unsigned short XIMStringCon)72
572.5 Q -.165(ve)-.44 G(rsionOperation;).165 E(#de\214ne)72 615.4 Q F0
(XIMStringCon)125.416 615.4 Q -.11(ve)-.44 G(rsionSubstitution).11 E F1
(\(0x0001\))357 615.4 Q(#de\214ne)72 628.4 Q F0(XIMStringCon)125.416
628.4 Q -.11(ve)-.44 G(rsionRetrie).11 E -.11(va)-.165 G(l).11 E F1
(\(0x0002\))357 628.4 Q 36 630.55 36 641.55 DL 36 628.55 36 639.55 DL
41.5 639.8 36 639.8 DL 43.5 639.8 38 639.8 DL 49 639.8 43.5 639.8 DL F0
(XIMStringCon)72.916 664.8 Q -.11(ve)-.44 G(rsionP).11 E(osition)-.22 E
F1
(speci\214es the starting position of the string to be returned in the)
3.666 E F0(XIMStringCon)72.916 677.8 Q -.11(ve)-.44 G(rsionT).11 E(ext)
-1.012 E F1 2.75(structure. The)3.666 F -.275(va)2.75 G
(lue identi\214es a position, in units of characters, rel-).275 E(ati)72
690.8 Q .33 -.165(ve t)-.275 H 2.75(ot).165 G(he client')-2.75 E 2.75
(sc)-.605 G(ursor position in the client')-2.75 E 2.75(sb)-.605 G(uf)
-2.97 E(fer)-.275 E(.)-.605 E(The ending position of the te)72 707.7 Q
(xt b)-.165 E(uf)-.22 E(fer is determined by the direction and f)-.275 E
(actor members.)-.11 E(Speci\214-)5.5 E(cally)72 720.7 Q 2.75(,i)-.715 G
2.75(ti)-2.75 G 2.75(st)-2.75 G(he character position relati)-2.75 E .33
-.165(ve t)-.275 H 2.75(ot).165 G(he starting point as de\214ned by the)
-2.75 E F0(332)279.75 769 Q 0 Cg EP
%%Page: 333 338
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E(XIMCar)72.916 85 Q(etDir)-.198 E
(ection)-.198 E/F1 11/Times-Roman@0 SF 5.5(.T).916 G(he f)-5.5 E
(actor member of)-.11 E F0(XIMStringCon)3.666 E -.11(ve)-.44 G
(rsionCallbackStruct).11 E F1(speci\214es)3.666 E(the number of)72 98 Q
F0(XIMCar)3.666 E(etDir)-.198 E(ection)-.198 E F1
(positions to be applied.)3.666 E -.165(Fo)5.5 G 2.75(re).165 G
(xample, if the direction speci-)-2.915 E(\214es)72 111 Q F0(XIMLineEnd)
3.666 E F1(and f)3.666 E(actor is 1, then all characters from the start\
ing position to the end of the)-.11 E
(current display line are returned.)72 124 Q
(If the direction speci\214es)5.5 E F0(XIMF)3.666 E(orwardChar)-.275 E
F1(or)3.666 E F0(XIMBack-)3.666 E(wardChar)72 137 Q F1 2.75(,t).916 G
(hen the f)-2.75 E(actor speci\214es a relati)-.11 E .33 -.165(ve p)
-.275 H(osition, indicated in characters, from the starting).165 E
(position.)72 150 Q F0(XIMStringCon)72.916 166.9 Q -.11(ve)-.44 G
(rsionOperation).11 E F1(speci\214es whether the string to be con)3.666
E -.165(ve)-.44 G(rted should be deleted).165 E
(\(substitution\) or copied \(retrie)72 179.9 Q -.275(va)-.275 G
(l\) from the client').275 E 2.75(sb)-.605 G(uf)-2.97 E(fer)-.275 E 5.5
(.W)-.605 G(hen the)-5.5 E F0(XIMStringCon)3.666 E -.11(ve)-.44 G
(rsionOp-).11 E(eration)72 192.9 Q F1(is)3.666 E F0(XIMStringCon)3.666 E
-.11(ve)-.44 G(rsionSubstitution).11 E F1 2.75(,t).916 G
(he client must delete the string to be con)-2.75 E -.165(ve)-.44 G
(rted).165 E(from its o)72 205.9 Q(wn b)-.275 E(uf)-.22 E(fer)-.275 E
5.5(.W)-.605 G(hen the)-5.5 E F0(XIMStringCon)3.666 E -.11(ve)-.44 G
(rsionOperation).11 E F1(is)3.666 E F0(XIMStringCon)3.666 E -.11(ve)-.44
G(rsionRe-).11 E(trie)72 218.9 Q -.11(va)-.165 G(l).11 E F1 2.75(,t).916
G(he client must not delete the string to be con)-2.75 E -.165(ve)-.44 G
(rted from its b).165 E(uf)-.22 E(fer)-.275 E 5.5(.T)-.605 G
(he substitute opera-)-5.5 E(tion is typically used for recon)72 231.9 Q
-.165(ve)-.44 G(rsion and transliteration con).165 E -.165(ve)-.44 G
(rsion, while the retrie).165 E -.275(va)-.275 G 2.75(lo).275 G
(peration)-2.75 E(is typically used for conte)72 244.9 Q(xt-sensiti)
-.165 E .33 -.165(ve c)-.275 H(on).165 E -.165(ve)-.44 G(rsion.).165 E
F0 2.75(13.5.7.4. Pr)72 270.9 R(eedit State Callbacks)-.198 E F1
(When the input method turns preediting on or of)72 287.8 Q(f, a)-.275 E
F0(Pr)3.666 E(eeditStartCallback)-.198 E F1(or)3.666 E F0(Pr)3.666 E
(eeditDoneCall-)-.198 E(back)72 300.8 Q F1(callback is triggered to let\
 the toolkit do the setup or the cleanup for the preedit re)3.666 E
(gion.)-.165 E .44 LW 36 318.55 36 329.55 DL 36 316.55 36 327.55 DL 41.5
314.8 36 314.8 DL 43.5 314.8 38 314.8 DL 49 314.8 43.5 314.8 DL
(int PreeditStartCallback)72 330.7 Q(\().916 E/F2 11/Times-Italic@0 SF
(ic).916 E F1(,).916 E F2(client_data)2.75 E F1(,).916 E F2(call_data)
2.75 E F1(\)).916 E(XIC)88.5 343.7 Q F2(ic)2.75 E F1(;).916 E(XPointer)
88.5 356.7 Q F2(client_data)2.75 E F1(;).916 E(XPointer)88.5 369.7 Q F2
(call_data)2.75 E F1(;).916 E F2(ic)72 390.5 Q F1
(Speci\214es the input conte)64.058 E(xt.)-.165 E F2(client_data)72
407.4 Q F1(Speci\214es the additional client data.)22.5 E F2(call_data)
72 424.3 Q F1(Not used for this callback and al)30.442 E -.11(wa)-.11 G
(ys passed as NULL.).11 E 36 419.95 36 430.95 DL 36 417.95 36 428.95 DL
41.5 429.2 36 429.2 DL 43.5 429.2 38 429.2 DL 49 429.2 43.5 429.2 DL
(When preedit starts on the speci\214ed input conte)72 454.2 Q
(xt, the callback is called with a NULL call_data)-.165 E(ar)72 467.2 Q
(gument.)-.198 E F0(Pr)6.416 E(eeditStartCallback)-.198 E F1
(will return the maximum size of the preedit string.)3.666 E 2.75(Ap)5.5
G(ositi)-2.75 E -.165(ve)-.275 G
(number indicates the maximum number of bytes allo)72 480.2 Q
(wed in the preedit string, and a v)-.275 E(alue of \2551)-.275 E
(indicates there is no limit.)72 493.2 Q 36 510.95 36 521.95 DL 36
508.95 36 519.95 DL 41.5 507.2 36 507.2 DL 43.5 507.2 38 507.2 DL 49
507.2 43.5 507.2 DL -.22(vo)72 523.1 S(id PreeditDoneCallback).22 E(\()
.916 E F2(ic).916 E F1(,).916 E F2(client_data)2.75 E F1(,).916 E F2
(call_data)2.75 E F1(\)).916 E(XIC)88.5 536.1 Q F2(ic)2.75 E F1(;).916 E
(XPointer)88.5 549.1 Q F2(client_data)2.75 E F1(;).916 E(XPointer)88.5
562.1 Q F2(call_data)2.75 E F1(;).916 E F2(ic)72 582.9 Q F1
(Speci\214es the input conte)64.058 E(xt.)-.165 E F2(client_data)72
599.8 Q F1(Speci\214es the additional client data.)22.5 E F2(call_data)
72 616.7 Q F1(Not used for this callback and al)30.442 E -.11(wa)-.11 G
(ys passed as NULL.).11 E 36 612.35 36 623.35 DL 36 610.35 36 621.35 DL
41.5 621.6 36 621.6 DL 43.5 621.6 38 621.6 DL 49 621.6 43.5 621.6 DL
(When preedit stops on the speci\214ed input conte)72 646.6 Q
(xt, the callback is called with a NULL call_data)-.165 E(ar)72 659.6 Q
2.75(gument. The)-.198 F(client can release the data allocated by)2.75 E
F0(Pr)3.666 E(eeditStartCallback)-.198 E F1(.).916 E F0(Pr)72.916 676.5
Q(eeditStartCallback)-.198 E F1(should initialize appropriate data need\
ed for displaying preedit informa-)3.666 E
(tion and for handling further)72 689.5 Q F0(Pr)3.666 E
(eeditDrawCallback)-.198 E F1 2.75(calls. Once)3.666 F F0(Pr)3.666 E
(eeditStartCallback)-.198 E F1(is)3.666 E
(called, it will not be called ag)72 702.5 Q(ain before)-.055 E F0(Pr)
3.666 E(eeditDoneCallback)-.198 E F1(has been called.)3.666 E F0(333)
279.75 769 Q 0 Cg EP
%%Page: 334 339
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E 2.75(13.5.7.5. Pr)72 85 R
(eedit Draw Callback)-.198 E/F1 11/Times-Roman@0 SF
(This callback is triggered to dra)72 101.9 Q 2.75(wa)-.165 G
(nd insert, delete or replace, preedit te)-2.75 E(xt in the preedit re)
-.165 E(gion.)-.165 E(The preedit te)72 114.9 Q(xt may include uncon)
-.165 E -.165(ve)-.44 G(rted input te).165 E
(xt such as Japanese Kana, con)-.165 E -.165(ve)-.44 G(rted te).165 E
(xt such)-.165 E
(as Japanese Kanji characters, or characters of both kinds.)72 127.9 Q
(That string is either a multibyte or wide)5.5 E(character string, whos\
e encoding matches the locale bound to the input conte)72 140.9 Q 2.75
(xt. The)-.165 F(callback)2.75 E(prototype is as follo)72 153.9 Q(ws:)
-.275 E .44 LW 36 171.65 36 182.65 DL 36 169.65 36 180.65 DL 41.5 167.9
36 167.9 DL 43.5 167.9 38 167.9 DL 49 167.9 43.5 167.9 DL -.22(vo)72
183.8 S(id PreeditDra).22 E -1.834(wCallback \()-.165 F/F2 11
/Times-Italic@0 SF(ic).916 E F1(,).916 E F2(client_data)2.75 E F1(,).916
E F2(call_data)2.75 E F1(\)).916 E(XIC)88.5 196.8 Q F2(ic)2.75 E F1(;)
.916 E(XPointer)88.5 209.8 Q F2(client_data)2.75 E F1(;).916 E
(XIMPreeditDra)88.5 222.8 Q(wCallbackStruct *)-.165 E F2(call_data)A F1
(;).916 E F2(ic)72 243.6 Q F1(Speci\214es the input conte)64.058 E(xt.)
-.165 E F2(client_data)72 260.5 Q F1
(Speci\214es the additional client data.)22.5 E F2(call_data)72 277.4 Q
F1(Speci\214es the preedit dra)30.442 E(wing information.)-.165 E 36
273.05 36 284.05 DL 36 271.05 36 282.05 DL 41.5 282.3 36 282.3 DL 43.5
282.3 38 282.3 DL 49 282.3 43.5 282.3 DL(The callback is passed an)72
307.3 Q F0(XIMPr)3.666 E(eeditDrawCallbackStruct)-.198 E F1
(structure in the call_data ar)3.666 E(gument.)-.198 E(The te)72 320.3 Q
(xt member of this structure contains the te)-.165 E(xt to be dra)-.165
E 2.75(wn. After)-.165 F(the string has been dra)2.75 E(wn,)-.165 E
(the caret should be mo)72 333.3 Q -.165(ve)-.165 G 2.75(dt).165 G 2.75
(ot)-2.75 G(he speci\214ed location.)-2.75 E(The)72 350.2 Q F0(XIMPr)
3.666 E(eeditDrawCallbackStruct)-.198 E F1
(structure is de\214ned as follo)3.666 E(ws:)-.275 E 36 371.85 36 382.85
DL 36 369.85 36 380.85 DL 41.5 368.1 36 368.1 DL 43.5 368.1 38 368.1 DL
49 368.1 43.5 368.1 DL(typedef struct _XIMPreeditDra)72 386.6 Q
(wCallbackStruct {)-.165 E(int caret;)108 399.6 Q(/* Cursor of)105.203 E
(fset within preedit string */)-.275 E(int chg_\214rst;)108 412.6 Q
(/* Starting change position */)88.076 E(int chg_length;)108 425.6 Q
(/* Length of the change in character count */)77.692 E(XIMT)108 438.6 Q
-.165(ex)-.77 G 2.75(t*).165 G(te)-2.75 E(xt;)-.165 E 2.75(}X)72 451.6 S
(IMPreeditDra)-2.75 E(wCallbackStruct;)-.165 E 36 453.75 36 464.75 DL 36
451.75 36 462.75 DL 41.5 463 36 463 DL 43.5 463 38 463 DL 49 463 43.5
463 DL(The client must k)72 488 Q(eep updating a b)-.11 E(uf)-.22 E
(fer of the preedit te)-.275 E(xt and the callback ar)-.165 E
(guments referring to)-.198 E(inde)72 501 Q -.165(xe)-.165 G 2.75(si)
.165 G 2.75(nt)-2.75 G(hat b)-2.75 E(uf)-.22 E(fer)-.275 E 5.5(.T)-.605
G(he call_data \214elds ha)-5.5 E .33 -.165(ve s)-.22 H
(peci\214c meanings according to the operation, as).165 E(follo)72 514 Q
(ws:)-.275 E 23.65<8354>72 530.9 S 2.75(oi)-24.53 G(ndicate te)-2.75 E
(xt deletion, the call_data member speci\214es a NULL te)-.165 E
(xt \214eld.)-.165 E(The te)5.5 E(xt to be)-.165 E
(deleted is then the current te)99.5 543.9 Q(xt in the b)-.165 E(uf)-.22
E(fer from position chg_\214rst \(starting at zero\) on a)-.275 E
(character length of chg_length.)99.5 556.9 Q 23.65<8357>72 573.8 S
(hen te)-23.65 E
(xt is non-NULL, it indicates insertion or replacement of te)-.165 E
(xt in the b)-.165 E(uf)-.22 E(fer)-.275 E(.)-.605 E(The chg_length mem\
ber identi\214es the number of characters in the current preedit b)99.5
590.7 Q(uf)-.22 E(fer)-.275 E(that are af)99.5 603.7 Q
(fected by this call.)-.275 E 2.75(Ap)5.5 G(ositi)-2.75 E .33 -.165
(ve c)-.275 H(hg_length indicates that chg_length number of).165 E(char\
acters, starting at chg_\214rst, must be deleted or must be replaced by\
 te)99.5 616.7 Q(xt, whose length)-.165 E(is speci\214ed in the)99.5
629.7 Q F0(XIMT)3.666 E(ext)-1.012 E F1(structure.)3.666 E 2.75(Ac)99.5
646.6 S(hg_length v)-2.75 E(alue of zero indicates that te)-.275 E
(xt must be inserted right at the position speci-)-.165 E
(\214ed by chg_\214rst.)99.5 659.6 Q 2.75(Av)5.5 G(alue of zero for chg\
_\214rst speci\214es the \214rst character in the b)-3.025 E(uf)-.22 E
(fer)-.275 E(.)-.605 E(chg_length and chg_\214rst combine to identify t\
he modi\214cation required to the preedit)99.5 676.5 Q -.22(bu)99.5
689.5 S -.275(ff).22 G(er; be).275 E(ginning at chg_\214rst, replace ch\
g_length number of characters with the te)-.165 E(xt in the)-.165 E
(supplied)99.5 702.5 Q F0(XIMT)3.666 E(ext)-1.012 E F1(structure. F)
3.666 E(or e)-.165 E(xample, suppose the preedit b)-.165 E(uf)-.22 E
(fer contains the string)-.275 E("ABCDE".)99.5 715.5 Q F0(334)279.75 769
Q 0 Cg EP
%%Page: 335 340
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E/F1 11/Courier@0 SF 33(Text: A)135.5 85
R 6.6(BCDE)6.6 G 6.6(^^^^^^)201.5 98 S 6.6(CharPos: 0)135.5 111 R 6.6
(12345)6.6 G/F2 11/Times-Roman@0 SF(The CharPos in the diagram sho)99.5
143.5 Q(ws the location of the character position relati)-.275 E .33
-.165(ve t)-.275 H 2.75(ot).165 G(he)-2.75 E(character)99.5 156.5 Q(.)
-.605 E(If the v)99.5 173.4 Q(alue of chg_\214rst is 1 and the v)-.275 E
(alue of chg_length is 3, this says to replace 3 charac-)-.275 E
(ters be)99.5 186.4 Q
(ginning at character position 1 with the string in the)-.165 E F0(XIMT)
3.666 E(ext)-1.012 E F2 2.75(structure. Hence,)3.666 F(BCD w)99.5 199.4
Q(ould be replaced by the v)-.11 E(alue in the structure.)-.275 E
(Though chg_length and chg_\214rst are both signed inte)99.5 216.3 Q
(gers the)-.165 E 2.75(yw)-.165 G(ill ne)-2.75 E -.165(ve)-.275 G 2.75
(rh).165 G -2.475 -.22(av e)-2.75 H 2.75(an)2.97 G -2.475 -.165(eg a)
-2.75 H(ti).165 E -.165(ve)-.275 G -.275(va)99.5 229.3 S(lue.).275 E
23.65<8354>72 246.2 S(he caret member identi\214es the character positi\
on before which the cursor should be placed)-23.65 E 2.75<ad61>99.5
259.2 S(fter modi\214cation to the preedit b)-2.75 E(uf)-.22 E
(fer has been completed.)-.275 E -.165(Fo)5.5 G 2.75(re).165 G
(xample, if caret is zero,)-2.915 E(the cursor is at the be)99.5 272.2 Q
(ginning of the b)-.165 E(uf)-.22 E(fer)-.275 E 5.5(.I)-.605 G 2.75(ft)
-5.5 G(he caret is one, the cursor is between the \214rst)-2.75 E
(and second character)99.5 285.2 Q(.)-.605 E .44 LW 36 306.85 36 317.85
DL 36 304.85 36 315.85 DL 41.5 303.1 36 303.1 DL 43.5 303.1 38 303.1 DL
49 303.1 43.5 303.1 DL(typedef struct _XIMT)108 321.6 Q -.165(ex)-.77 G
2.75(t{).165 G(unsigned short length;)135.5 334.6 Q
(XIMFeedback * feedback;)135.5 347.6 Q(Bool encoding_is_wchar;)135.5
360.6 Q(union {)135.5 373.6 Q(char * multi_byte;)163 386.6 Q
(wchar_t * wide_char;)163 399.6 Q 2.75(}s)135.5 412.6 S(tring;)-2.75 E
2.75(}X)108 425.6 S(IMT)-2.75 E -.165(ex)-.77 G(t;).165 E 36 427.75 36
438.75 DL 36 425.75 36 436.75 DL 41.5 437 36 437 DL 43.5 437 38 437 DL
49 437 43.5 437 DL(The te)72 462 Q
(xt string passed is actually a structure specifying as follo)-.165 E
(ws:)-.275 E 23.65<8354>72 478.9 S(he length member is the te)-23.65 E
(xt length in characters.)-.165 E 23.65<8354>72 495.8 S
(he encoding_is_wchar member is a v)-23.65 E
(alue that indicates if the te)-.275 E(xt string is encoded in)-.165 E
(wide character or multibyte format.)99.5 508.8 Q(The te)5.5 E
(xt string may be passed either as multibyte or as)-.165 E(wide charact\
er; the input method controls in which form data is passed.)99.5 521.8 Q
(The client')5.5 E 2.75(sc)-.605 G(all-)-2.75 E
(back routine must be able to handle data passed in either form.)99.5
534.8 Q 23.65<8354>72 551.7 S(he string member is the te)-23.65 E
(xt string.)-.165 E 23.65<8354>72 568.6 S(he feedback member indicates \
rendering type for each character in the string member)-23.65 E 5.5(.I)
-.605 G(f)-5.5 E
(string is NULL \(indicating that only highlighting of the e)99.5 581.6
Q(xisting preedit b)-.165 E(uf)-.22 E(fer should be)-.275 E(updated\), \
feedback points to length highlight elements that should be applied to \
the e)99.5 594.6 Q(xisting)-.165 E(preedit b)99.5 607.6 Q(uf)-.22 E(fer)
-.275 E 2.75(,b)-.44 G -.165(eg)-2.75 G(inning at chg_\214rst.).165 E
(The feedback member e)72 624.5 Q(xpresses the types of rendering feedb\
ack the callback should apply when)-.165 E(dra)72 637.5 Q(wing te)-.165
E 2.75(xt. Rendering)-.165 F(of the te)2.75 E(xt to be dra)-.165 E
(wn is speci\214ed either in generic w)-.165 E(ays \(for e)-.11 E
(xample,)-.165 E(primary)72 650.5 Q 2.75(,s)-.715 G
(econdary\) or in speci\214c w)-2.75 E(ays \(re)-.11 E -.165(ve)-.275 G
(rse, underline\).).165 E(When generic indications are gi)5.5 E -.165
(ve)-.275 G(n,).165 E(the client is free to choose the rendering style.)
72 663.5 Q(It is necessary)5.5 E 2.75(,h)-.715 G -.275(ow)-2.75 G -2.365
-.275(ev e).275 H .88 -.44(r, t).275 H(hat primary and sec-).44 E
(ondary be mapped to tw)72 676.5 Q 2.75(od)-.11 G
(istinct rendering styles.)-2.75 E(If an input method w)72 693.4 Q(ants\
 to control display of the preedit string, an input method can indicate\
 the)-.11 E(visibility hints using feedbacks in a speci\214c w)72 706.4
Q(ay)-.11 E 5.5(.T)-.715 G(he)-5.5 E F0(XIMV)3.666 E(isibleT)-.407 E(oF)
-1.012 E(orward)-.275 E F2(,).916 E F0(XIMV)3.666 E(isibleT)-.407 E(o-)
-1.012 E(Backward)72 719.4 Q F2 2.75(,a).916 G(nd)-2.75 E F0(XIMV)3.666
E(isibleCenter)-.407 E F2(masks are e)3.666 E(xclusi)-.165 E -.165(ve)
-.275 G(ly used for these visibility hints.).165 E(The)5.5 E F0(XIMV)
72.916 732.4 Q(isibleT)-.407 E(oF)-1.012 E(orward)-.275 E F2
(mask indicates that the preedit te)3.666 E
(xt is preferably displayed in the)-.165 E F0(335)279.75 769 Q 0 Cg EP
%%Page: 336 341
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E/F1 11/Times-Roman@0 SF(primary dra)72
85 Q 2.75(wd)-.165 G
(irection from the caret position in the preedit area forw)-2.75 E 2.75
(ard. The)-.11 F F0(XIMV)3.666 E(isibleT)-.407 E(o-)-1.012 E(Backward)72
98 Q F1(mask indicates that the preedit te)3.666 E
(xt is preferably displayed from the caret position in)-.165 E
(the preedit area backw)72 111 Q(ard, relati)-.11 E .33 -.165(ve t)-.275
H 2.75(ot).165 G(he primary dra)-2.75 E 2.75(wd)-.165 G 2.75
(irection. The)-2.75 F F0(XIMV)3.666 E(isibleCenter)-.407 E F1(mask)
3.666 E(indicates that the preedit te)72 124 Q
(xt is preferably displayed with the caret position in the preedit area)
-.165 E(centered.)72 137 Q
(The insertion point of the preedit string could e)72 153.9 Q
(xist outside of the visible area when visibility hints)-.165 E
(are used.)72 166.9 Q(Only one of the masks is v)5.5 E
(alid for the entire preedit string, and only one character can)-.275 E
(hold one of these feedbacks for a gi)72 179.9 Q -.165(ve)-.275 G 2.75
(ni).165 G(nput conte)-2.75 E(xt at one time.)-.165 E
(This feedback may be OR'ed)5.5 E
(together with another highlight \(such as)72 192.9 Q F0(XIMRe)3.666 E
-.11(ve)-.165 G(rse).11 E F1 2.75(\). Only).916 F
(the most recently set feedback is)2.75 E -.275(va)72 205.9 S
(lid, and an).275 E 2.75(yp)-.165 G(re)-2.75 E
(vious feedback is automatically canceled.)-.275 E
(This is a hint to the client, and the)5.5 E
(client is free to choose ho)72 218.9 Q 2.75(wt)-.275 G 2.75(od)-2.75 G
(isplay the preedit string.)-2.75 E
(The feedback member also speci\214es ho)72 235.8 Q 2.75(wr)-.275 G
(endering of the te)-2.75 E(xt ar)-.165 E(gument should be performed.)
-.198 E(If)5.5 E(the feedback is NULL, the callback should apply the sa\
me feedback as is used for the surround-)72 248.8 Q
(ing characters in the preedit b)72 261.8 Q(uf)-.22 E
(fer; if chg_\214rst is at a highlight boundary)-.275 E 2.75(,t)-.715 G
(he client can choose)-2.75 E(which of the tw)72 274.8 Q 2.75(oh)-.11 G
(ighlights to use.)-2.75 E
(If feedback is not NULL, feedback speci\214es an array de\214ning)5.5 E
(the rendering for each character of the string, and the length of the \
array is thus length.)72 287.8 Q(If an input method w)72 304.7 Q(ants t\
o indicate that it is only updating the feedback of the preedit te)-.11
E(xt with-)-.165 E(out changing the content of it, the)72 317.7 Q F0
(XIMT)3.666 E(ext)-1.012 E F1(structure will contain a NULL v)3.666 E
(alue for the string)-.275 E(\214eld, the number of characters af)72
330.7 Q(fected \(relati)-.275 E .33 -.165(ve t)-.275 H 2.75(oc).165 G
(hg_\214rst\) will be in the length \214eld, and the)-2.75 E
(feedback \214eld will point to an array of)72 343.7 Q F0(XIMF)3.666 E
(eedback)-.275 E F1(.).916 E
(Each element in the feedback array is a bitmask represented by a v)72
360.6 Q(alue of type)-.275 E F0(XIMF)3.666 E(eedback)-.275 E F1(.).916 E
(The v)72 373.6 Q(alid mask names are as follo)-.275 E(ws:)-.275 E .44
LW 36 395.25 36 406.25 DL 36 393.25 36 404.25 DL 41.5 391.5 36 391.5 DL
43.5 391.5 38 391.5 DL 49 391.5 43.5 391.5 DL
(typedef unsigned long XIMFeedback;)72 413.9 Q(#de\214ne)72 439.9 Q F0
(XIMRe)125.416 439.9 Q -.11(ve)-.165 G(rse).11 E F1(1L)285 439.9 Q
(#de\214ne)72 452.9 Q F0(XIMUnderline)125.416 452.9 Q F1(\(1L<<1\))285
452.9 Q(#de\214ne)72 465.9 Q F0(XIMHighlight)125.416 465.9 Q F1
(\(1L<<2\))285 465.9 Q(#de\214ne)72 478.9 Q F0(XIMPrimary)125.416 478.9
Q F1(\(1L<<5\)\207)285 478.9 Q(#de\214ne)72 491.9 Q F0(XIMSecondary)
125.416 491.9 Q F1(\(1L<<6\)\207)285 491.9 Q(#de\214ne)72 504.9 Q F0
(XIMT)125.416 504.9 Q(ertiary)-1.012 E F1(\(1L<<7\)\207)285 504.9 Q
(#de\214ne)72 517.9 Q F0(XIMV)125.416 517.9 Q(isibleT)-.407 E(oF)-1.012
E(orward)-.275 E F1(\(1L<<8\))285 517.9 Q(#de\214ne)72 530.9 Q F0(XIMV)
125.416 530.9 Q(isibleT)-.407 E(oBackward)-1.012 E F1(\(1L<<9\))285
530.9 Q(#de\214ne)72 543.9 Q F0(XIMV)125.416 543.9 Q(isibleCenter)-.407
E F1(\(1L<<10\))285 543.9 Q 36 546.05 36 557.05 DL 36 544.05 36 555.05
DL 41.5 555.3 36 555.3 DL 43.5 555.3 38 555.3 DL 49 555.3 43.5 555.3 DL
(Characters dra)72 584.2 Q(wn with the)-.165 E F0(XIMRe)3.666 E -.11(ve)
-.165 G(rse).11 E F1(highlight should be dra)3.666 E(wn by sw)-.165 E
(apping the fore)-.11 E(ground)-.165 E
(and background colors used to dra)72 597.2 Q 2.75(wn)-.165 G
(ormal, unhighlighted characters.)-2.75 E(Characters dra)5.5 E
(wn with the)-.165 E F0(XIMUnderline)72.916 610.2 Q F1
(highlight should be underlined.)3.666 E(Characters dra)5.5 E
(wn with the)-.165 E F0(XIMHighlight)3.666 E F1(,).916 E F0(XIMPrimary)
72.916 623.2 Q F1(,).916 E F0(XIMSecondary)3.666 E F1 2.75(,a).916 G(nd)
-2.75 E F0(XIMT)3.666 E(ertiary)-1.012 E F1(highlights should be dra)
3.666 E(wn in some unique)-.165 E(manner that must be dif)72 636.2 Q
(ferent from)-.275 E F0(XIMRe)3.666 E -.11(ve)-.165 G(rse).11 E F1(and)
3.666 E F0(XIMUnderline)3.666 E F1(.).916 E .36 LW 144 676 72 676 DL/F2
9/Times-Roman@0 SF 2.25<8754>83 687 S(he v)-2.25 E(alues for)-.225 E/F3
9/Times-Bold@0 SF(XIMPrimary)3 E F2(,).75 E F3(XIMSecondary)3 E F2 2.25
(,a).75 G(nd)-2.25 E F3(XIMT)3 E(ertiary)-.828 E F2
(were incorrectly de\214ned in)3 E(the R5 speci\214cation.)72 698 Q
(The X Consortium')4.5 E 2.25(sX)-.495 G
(11R5 implementation correctly implemented the v)-2.25 E(al-)-.225 E
(ues for these highlights.)72 709 Q(The v)4.5 E
(alue of these highlights has been corrected in this speci\214cation to)
-.225 E(agree with the v)72 720 Q(alues in the Consortium')-.225 E 2.25
(sX)-.495 G(11R5 and X11R6 implementations.)-2.25 E F0(336)279.75 769 Q
0 Cg EP
%%Page: 337 342
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E 2.75(13.5.7.6. Pr)72 85 R(eedit Car)
-.198 E(et Callback)-.198 E/F1 11/Times-Roman@0 SF
(An input method may ha)72 101.9 Q .33 -.165(ve i)-.22 H(ts o).165 E
(wn na)-.275 E(vig)-.22 E(ation k)-.055 E -.165(ey)-.11 G 2.75(st).165 G
2.75(oa)-2.75 G(llo)-2.75 E 2.75(wt)-.275 G(he user to mo)-2.75 E .33
-.165(ve t)-.165 H(he te).165 E(xt insertion)-.165 E
(point in the preedit area \(for e)72 114.9 Q(xample, to mo)-.165 E .33
-.165(ve b)-.165 H(ackw).165 E(ard or forw)-.11 E 2.75
(ard\). Consequently)-.11 F 2.75(,i)-.715 G(nput)-2.75 E
(method needs to indicate to the client that it should mo)72 127.9 Q .33
-.165(ve t)-.165 H(he te).165 E(xt insertion point.)-.165 E
(It then calls the)5.5 E(PreeditCaretCallback.)72 140.9 Q .44 LW 36
158.65 36 169.65 DL 36 156.65 36 167.65 DL 41.5 154.9 36 154.9 DL 43.5
154.9 38 154.9 DL 49 154.9 43.5 154.9 DL -.22(vo)72 170.8 S
(id PreeditCaretCallback).22 E(\().916 E/F2 11/Times-Italic@0 SF(ic).916
E F1(,).916 E F2(client_data)2.75 E F1(,).916 E F2(call_data)2.75 E F1
(\)).916 E(XIC)88.5 183.8 Q F2(ic)2.75 E F1(;).916 E(XPointer)88.5 196.8
Q F2(client_data)2.75 E F1(;).916 E(XIMPreeditCaretCallbackStruct *)88.5
209.8 Q F2(call_data)A F1(;).916 E F2(ic)72 230.6 Q F1
(Speci\214es the input conte)64.058 E(xt.)-.165 E F2(client_data)72
247.5 Q F1(Speci\214es the additional client data.)22.5 E F2(call_data)
72 264.4 Q F1(Speci\214es the preedit caret information.)30.442 E 36
260.05 36 271.05 DL 36 258.05 36 269.05 DL 41.5 269.3 36 269.3 DL 43.5
269.3 38 269.3 DL 49 269.3 43.5 269.3 DL
(The input method will trigger PreeditCaretCallback to mo)72 294.3 Q .33
-.165(ve t)-.165 H(he te).165 E(xt insertion point during)-.165 E 2.75
(preedit. The)72 307.3 R(call_data ar)2.75 E
(gument contains a pointer to an)-.198 E F0(XIMPr)3.666 E(eeditCar)-.198
E(etCallbackStruct)-.198 E F1
(structure, which indicates where the caret should be mo)72 320.3 Q
-.165(ve)-.165 G 2.75(d. The).165 F(callback must mo)2.75 E .33 -.165
(ve t)-.165 H(he inser).165 E(-)-.22 E(tion point to its ne)72 333.3 Q
2.75(wl)-.275 G(ocation and return, in \214eld position, the ne)-2.75 E
2.75(wo)-.275 G -.275(ff)-2.75 G(set v).275 E(alue from the initial)
-.275 E(position.)72 346.3 Q(The)72 363.2 Q F0(XIMPr)3.666 E(eeditCar)
-.198 E(etCallbackStruct)-.198 E F1(structure is de\214ned as follo)
3.666 E(ws:)-.275 E 36 384.85 36 395.85 DL 36 382.85 36 393.85 DL 41.5
381.1 36 381.1 DL 43.5 381.1 38 381.1 DL 49 381.1 43.5 381.1 DL
(typedef struct _XIMPreeditCaretCallbackStruct {)72 399.6 Q
(int position;)108 412.6 Q(/* Caret of)91.123 E
(fset within preedit string */)-.275 E(XIMCaretDirection direction;)108
425.6 Q(/* Caret mo)12.33 E -.165(ve)-.165 G 2.75(sd).165 G(irection */)
-2.75 E(XIMCaretStyle style;)108 438.6 Q(/* Feedback of the caret */)
49.587 E 2.75(}X)72 451.6 S(IMPreeditCaretCallbackStruct;)-2.75 E 36
453.75 36 464.75 DL 36 451.75 36 462.75 DL 41.5 463 36 463 DL 43.5 463
38 463 DL 49 463 43.5 463 DL(The)72 488 Q F0(XIMCar)3.666 E(etStyle)
-.198 E F1(structure is de\214ned as follo)3.666 E(ws:)-.275 E 36 509.65
36 520.65 DL 36 507.65 36 518.65 DL 41.5 505.9 36 505.9 DL 43.5 505.9 38
505.9 DL 49 505.9 43.5 505.9 DL(typedef enum {)72 524.4 Q(XIMIsIn)108
537.4 Q 71.114(visible, /*)-.44 F(Disable caret feedback */)2.75 E
(XIMIsPrimary)108 550.4 Q 77.197(,/)-.715 G 2.75(*U)-77.197 G 2.75(Id)
-2.75 G(e\214ned caret feedback */)-2.75 E(XIMIsSecondary)108 563.4 Q
66.208(,/)-.715 G 2.75(*U)-66.208 G 2.75(Id)-2.75 G
(e\214ned caret feedback */)-2.75 E 2.75(}X)72 576.4 S(IMCaretStyle;)
-2.75 E 36 578.55 36 589.55 DL 36 576.55 36 587.55 DL 41.5 587.8 36
587.8 DL 43.5 587.8 38 587.8 DL 49 587.8 43.5 587.8 DL(The)72 612.8 Q F0
(XIMCar)3.666 E(etDir)-.198 E(ection)-.198 E F1
(structure is de\214ned as follo)3.666 E(ws:)-.275 E F0(337)279.75 769 Q
0 Cg EP
%%Page: 338 343
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E .44 LW 36 76.75 36 87.75 DL 36 74.75
36 85.75 DL 41.5 73 36 73 DL 43.5 73 38 73 DL 49 73 43.5 73 DL/F1 11
/Times-Roman@0 SF(typedef enum {)72 91.5 Q(XIMF)108 104.5 Q(orw)-.165 E
(ardChar)-.11 E 2.75(,X)-.44 G(IMBackw)-2.75 E(ardChar)-.11 E(,)-.44 E
(XIMF)108 117.5 Q(orw)-.165 E(ardW)-.11 E(ord, XIMBackw)-.88 E(ardW)-.11
E(ord,)-.88 E(XIMCaretUp, XIMCaretDo)108 130.5 Q(wn,)-.275 E(XIMNe)108
143.5 Q(xtLine, XIMPre)-.165 E(viousLine,)-.275 E
(XIMLineStart, XIMLineEnd,)108 156.5 Q(XIMAbsolutePosition,)108 169.5 Q
(XIMDontChange,)108 182.5 Q 2.75(}X)74.75 195.5 S(IMCaretDirection;)
-2.75 E 36 197.65 36 208.65 DL 36 195.65 36 206.65 DL 41.5 206.9 36
206.9 DL 43.5 206.9 38 206.9 DL 49 206.9 43.5 206.9 DL(These v)72 231.9
Q(alues are de\214ned as follo)-.275 E(ws:)-.275 E F0(XIMF)72.916 251.4
Q(orwardChar)-.275 E F1(Mo)196.5 251.4 Q .33 -.165(ve t)-.165 H
(he caret forw).165 E(ard one character position.)-.11 E F0
(XIMBackwardChar)72.916 264.4 Q F1(Mo)196.5 264.4 Q .33 -.165(ve t)-.165
H(he caret backw).165 E(ard one character position.)-.11 E F0(XIMF)
72.916 277.4 Q(orwardW)-.275 E(ord)-.825 E F1(Mo)196.5 277.4 Q .33 -.165
(ve t)-.165 H(he caret forw).165 E(ard one w)-.11 E(ord.)-.11 E F0
(XIMBackwardW)72.916 290.4 Q(ord)-.825 E F1(Mo)196.5 290.4 Q .33 -.165
(ve t)-.165 H(he caret backw).165 E(ard one w)-.11 E(ord.)-.11 E F0
(XIMCar)72.916 303.4 Q(etUp)-.198 E F1(Mo)196.5 303.4 Q .33 -.165(ve t)
-.165 H(he caret up one line k).165 E(eeping the current horizontal of)
-.11 E(fset.)-.275 E F0(XIMCar)72.916 316.4 Q(etDo)-.198 E(wn)-.11 E F1
(Mo)196.5 316.4 Q .33 -.165(ve t)-.165 H(he caret do).165 E
(wn one line k)-.275 E(eeping the current horizontal of)-.11 E(fset.)
-.275 E F0(XIMPr)72.916 329.4 Q -.165(ev)-.198 G(iousLine).165 E F1(Mo)
196.5 329.4 Q .33 -.165(ve t)-.165 H(he caret to the be).165 E
(ginning of the pre)-.165 E(vious line.)-.275 E F0(XIMNextLine)72.916
342.4 Q F1(Mo)196.5 342.4 Q .33 -.165(ve t)-.165 H(he caret to the be)
.165 E(ginning of the ne)-.165 E(xt line.)-.165 E F0(XIMLineStart)72.916
355.4 Q F1(Mo)196.5 355.4 Q .33 -.165(ve t)-.165 H(he caret to the be)
.165 E(ginning of the current display line that con-)-.165 E
(tains the caret.)196.5 368.4 Q F0(XIMLineEnd)72.916 381.4 Q F1(Mo)196.5
381.4 Q .33 -.165(ve t)-.165 H
(he caret to the end of the current display line that contains the).165
E(caret.)196.5 394.4 Q F0(XIMAbsoluteP)72.916 407.4 Q(osition)-.22 E F1
(The callback must mo)196.5 407.4 Q .33 -.165(ve t)-.165 H 2.75(ot).165
G(he location speci\214ed by the position \214eld)-2.75 E
(of the callback data, indicated in characters, starting from the be)
196.5 420.4 Q(gin-)-.165 E(ning of the preedit te)196.5 433.4 Q 2.75
(xt. Hence,)-.165 F 2.75(av)2.75 G(alue of zero means mo)-3.025 E .33
-.165(ve b)-.165 H(ack to).165 E(the be)196.5 446.4 Q
(ginning of the preedit te)-.165 E(xt.)-.165 E F0(XIMDontChange)72.916
459.4 Q F1(The caret position does not change.)196.5 459.4 Q F0 2.75
(13.5.7.7. Status)72 491.9 R(Callbacks)2.75 E F1(An input method may co\
mmunicate changes in the status of an input conte)72 508.8 Q(xt \(for e)
-.165 E(xample, cre-)-.165 E(ated, destro)72 521.8 Q
(yed, or focus changes\) with three status callbacks:)-.11 E
(StatusStartCallback, Status-)5.5 E(DoneCallback, and StatusDra)72 534.8
Q(wCallback.)-.165 E(When the input conte)72 564.7 Q(xt is created or g)
-.165 E(ains focus, the input method calls the StatusStartCallback)-.055
E(callback.)72 577.7 Q 36 595.45 36 606.45 DL 36 593.45 36 604.45 DL
41.5 591.7 36 591.7 DL 43.5 591.7 38 591.7 DL 49 591.7 43.5 591.7 DL
-.22(vo)72 607.6 S(id StatusStartCallback).22 E(\().916 E/F2 11
/Times-Italic@0 SF(ic).916 E F1(,).916 E F2(client_data)2.75 E F1(,).916
E F2(call_data)2.75 E F1(\)).916 E(XIC)88.5 620.6 Q F2(ic)2.75 E F1(;)
.916 E(XPointer)88.5 633.6 Q F2(client_data)2.75 E F1(;).916 E(XPointer)
88.5 646.6 Q F2(call_data)2.75 E F1(;).916 E F2(ic)72 667.4 Q F1
(Speci\214es the input conte)64.058 E(xt.)-.165 E F2(client_data)72
684.3 Q F1(Speci\214es the additional client data.)22.5 E F2(call_data)
72 701.2 Q F1(Not used for this callback and al)30.442 E -.11(wa)-.11 G
(ys passed as NULL.).11 E 36 696.85 36 707.85 DL 36 694.85 36 705.85 DL
41.5 706.1 36 706.1 DL 43.5 706.1 38 706.1 DL 49 706.1 43.5 706.1 DL(Th\
e callback should initialize appropriate data for displaying status and\
 for responding to)72 731.1 Q F0(338)279.75 769 Q 0 Cg EP
%%Page: 339 344
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E/F1 11/Times-Roman@0 SF(StatusDra)72 85
Q(wCallback calls.)-.165 E
(Once StatusStartCallback is called, it will not be called ag)5.5 E
(ain before)-.055 E(StatusDoneCallback has been called.)72 98 Q
(When an input conte)72 127.9 Q(xt is destro)-.165 E
(yed or when it loses focus, the input method calls Status-)-.11 E
(DoneCallback.)72 140.9 Q .44 LW 36 158.65 36 169.65 DL 36 156.65 36
167.65 DL 41.5 154.9 36 154.9 DL 43.5 154.9 38 154.9 DL 49 154.9 43.5
154.9 DL -.22(vo)72 170.8 S(id StatusDoneCallback).22 E(\().916 E/F2 11
/Times-Italic@0 SF(ic).916 E F1(,).916 E F2(client_data)2.75 E F1(,).916
E F2(call_data)2.75 E F1(\)).916 E(XIC)88.5 183.8 Q F2(ic)2.75 E F1(;)
.916 E(XPointer)88.5 196.8 Q F2(client_data)2.75 E F1(;).916 E(XPointer)
88.5 209.8 Q F2(call_data)2.75 E F1(;).916 E F2(ic)72 230.6 Q F1
(Speci\214es the input conte)64.058 E(xt.)-.165 E F2(client_data)72
247.5 Q F1(Speci\214es the additional client data.)22.5 E F2(call_data)
72 264.4 Q F1(Not used for this callback and al)30.442 E -.11(wa)-.11 G
(ys passed as NULL.).11 E 36 260.05 36 271.05 DL 36 258.05 36 269.05 DL
41.5 269.3 36 269.3 DL 43.5 269.3 38 269.3 DL 49 269.3 43.5 269.3 DL
(The callback may release an)72 294.3 Q 2.75(yd)-.165 G
(ata allocated on)-2.75 E F0(StatusStart)3.666 E F1(.).916 E
(When an input conte)72 324.2 Q
(xt status has to be updated, the input method calls StatusDra)-.165 E
(wCallback.)-.165 E 36 341.95 36 352.95 DL 36 339.95 36 350.95 DL 41.5
338.2 36 338.2 DL 43.5 338.2 38 338.2 DL 49 338.2 43.5 338.2 DL -.22(vo)
72 354.1 S(id StatusDra).22 E -1.834(wCallback \()-.165 F F2(ic).916 E
F1(,).916 E F2(client_data)2.75 E F1(,).916 E F2(call_data)2.75 E F1(\))
.916 E(XIC)88.5 367.1 Q F2(ic)2.75 E F1(;).916 E(XPointer)88.5 380.1 Q
F2(client_data)2.75 E F1(;).916 E(XIMStatusDra)88.5 393.1 Q
(wCallbackStruct *)-.165 E F2(call_data)A F1(;).916 E F2(ic)72 413.9 Q
F1(Speci\214es the input conte)64.058 E(xt.)-.165 E F2(client_data)72
430.8 Q F1(Speci\214es the additional client data.)22.5 E F2(call_data)
72 447.7 Q F1(Speci\214es the status dra)30.442 E(wing information.)
-.165 E 36 443.35 36 454.35 DL 36 441.35 36 452.35 DL 41.5 452.6 36
452.6 DL 43.5 452.6 38 452.6 DL 49 452.6 43.5 452.6 DL
(The callback should update the status area by either dra)72 477.6 Q
(wing a string or imaging a bitmap in the)-.165 E(status area.)72 490.6
Q(The)72 507.5 Q F0(XIMStatusDataT)3.666 E(ype)-.814 E F1(and)3.666 E F0
(XIMStatusDrawCallbackStruct)3.666 E F1
(structures are de\214ned as fol-)3.666 E(lo)72 520.5 Q(ws:)-.275 E F0
(339)279.75 769 Q 0 Cg EP
%%Page: 340 345
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E .44 LW 36 76.75 36 87.75 DL 36 74.75
36 85.75 DL 41.5 73 36 73 DL 43.5 73 38 73 DL 49 73 43.5 73 DL/F1 11
/Times-Roman@0 SF(typedef enum {)72 91.5 Q(XIMT)108 104.5 Q -.165(ex)
-.77 G(tT).165 E(ype,)-.88 E(XIMBitmapT)108 117.5 Q(ype,)-.88 E 2.75(}X)
72 130.5 S(IMStatusDataT)-2.75 E(ype;)-.88 E
(typedef struct _XIMStatusDra)72 156.5 Q(wCallbackStruct {)-.165 E
(XIMStatusDataT)108 169.5 Q(ype type;)-.88 E(union {)108 182.5 Q(XIMT)
144 195.5 Q -.165(ex)-.77 G 2.75(t*).165 G(te)-2.75 E(xt;)-.165 E 2.75
(Pixmap bitmap;)144 208.5 R 2.75(}d)108 221.5 S(ata;)-2.75 E 2.75(}X)72
234.5 S(IMStatusDra)-2.75 E(wCallbackStruct;)-.165 E 36 236.65 36 247.65
DL 36 234.65 36 245.65 DL 41.5 245.9 36 245.9 DL 43.5 245.9 38 245.9 DL
49 245.9 43.5 245.9 DL(The feedback styles)72 274.8 Q F0(XIMV)3.666 E
(isibleT)-.407 E(oF)-1.012 E(orward)-.275 E F1(,).916 E F0(XIMV)3.666 E
(isibleT)-.407 E(oBackward)-1.012 E F1 2.75(,a).916 G(nd)-2.75 E F0
(XIMV)3.666 E(isibleT)-.407 E(o-)-1.012 E(Center)72 287.8 Q F1
(are not rele)3.666 E -.275(va)-.275 G(nt and will not appear in the)
.275 E F0(XIMF)3.666 E(eedback)-.275 E F1(element of the)3.666 E F0
(XIMT)3.666 E(ext)-1.012 E F1(struc-)3.666 E(ture.)72 300.8 Q F0 2.75
(13.5.8. Ev)72 330.7 R(ent Filtering)-.11 E F1(Xlib pro)72 347.6 Q
(vides the ability for an input method to re)-.165 E
(gister a \214lter internal to Xlib)-.165 E 5.5(.T)-.44 G
(his \214lter is)-5.5 E(called by a client \(or toolkit\) by calling)72
360.6 Q F0(XFilterEv)3.666 E(ent)-.11 E F1(after calling)3.666 E F0
(XNextEv)3.666 E(ent)-.11 E F1 5.5(.A).916 G .33 -.165(ny c)-5.5 H
(lient that).165 E(uses the)72 373.6 Q F0(XIM)3.666 E F1(interf)3.666 E
(ace should call)-.11 E F0(XFilterEv)3.666 E(ent)-.11 E F1(to allo)3.666
E 2.75(wi)-.275 G(nput methods to process their e)-2.75 E -.165(ve)-.275
G(nts).165 E(without kno)72 386.6 Q(wledge of the client')-.275 E 2.75
(sd)-.605 G(ispatching mechanism.)-2.75 E 2.75(Ac)5.5 G(lient')-2.75 E
2.75(su)-.605 G(ser interf)-2.75 E(ace polic)-.11 E 2.75(ym)-.165 G(ay)
-2.75 E(determine the priority of e)72 399.6 Q -.165(ve)-.275 G
(nt \214lters with respect to other e).165 E -.165(ve)-.275 G
(nt-handling mechanisms \(for e).165 E(xam-)-.165 E(ple, modal grabs\).)
72 412.6 Q(Clients may not kno)72 429.5 Q 2.75(wh)-.275 G .55 -.275
(ow m)-2.75 H(an).275 E 2.75<798c>-.165 G(lters there are, if an)-2.75 E
1.43 -.715(y, a)-.165 H(nd what the).715 E 2.75(yd)-.165 G 2.75(o. The)
-2.75 F 2.75(ym)-.165 G(ay only kno)-2.75 E(w)-.275 E(if an e)72 442.5 Q
-.165(ve)-.275 G(nt has been \214ltered on return of).165 E F0
(XFilterEv)3.666 E(ent)-.11 E F1 5.5(.C).916 G
(lients should discard \214ltered e)-5.5 E -.165(ve)-.275 G(nts.).165 E
1.76 -.88(To \214)72 472.4 T(lter an e).88 E -.165(ve)-.275 G(nt, use)
.165 E F0(XFilterEv)3.666 E(ent)-.11 E F1(.).916 E 36 490.15 36 501.15
DL 36 488.15 36 499.15 DL 41.5 486.4 36 486.4 DL 43.5 486.4 38 486.4 DL
49 486.4 43.5 486.4 DL(Bool XFilterEv)72 502.3 Q -1.834(ent \()-.165 F
/F2 11/Times-Italic@0 SF -.165(ev).916 G(ent).165 E F1(,).916 E F2(w)
2.75 E F1(\)).916 E(XEv)88.5 515.3 Q(ent *)-.165 E F2 -.165(ev)C(ent)
.165 E F1(;).916 E -.44(Wi)88.5 528.3 S(ndo).44 E(w)-.275 E F2(w)2.75 E
F1(;).916 E F2 -.165(ev)72 549.1 S(ent).165 E F1(Speci\214es the e)
48.955 E -.165(ve)-.275 G(nt to \214lter).165 E(.)-.605 E F2(w)72 566 Q
F1(Speci\214es the windo)64.663 E 2.75(wf)-.275 G
(or which the \214lter is to be applied.)-2.75 E 36 561.65 36 572.65 DL
36 559.65 36 570.65 DL 41.5 570.9 36 570.9 DL 43.5 570.9 38 570.9 DL 49
570.9 43.5 570.9 DL(If the windo)72 595.9 Q 2.75(wa)-.275 G -.198(rg)
-2.75 G(ument is).198 E F0(None)3.666 E F1(,).916 E F0(XFilterEv)3.666 E
(ent)-.11 E F1(applies the \214lter to the windo)3.666 E 2.75(ws)-.275 G
(peci\214ed in the)-2.75 E F0(XEv)72.916 608.9 Q(ent)-.11 E F1 2.75
(structure. The)3.666 F(windo)2.75 E 2.75(wa)-.275 G -.198(rg)-2.75 G
(ument is pro).198 E(vided so that layers abo)-.165 E .33 -.165(ve X)
-.165 H(lib that do e).165 E -.165(ve)-.275 G(nt redi-).165 E
(rection can indicate to which windo)72 621.9 Q 2.75(wa)-.275 G 2.75(ne)
-2.75 G -.165(ve)-3.025 G(nt has been redirected.).165 E(If)72 638.8 Q
F0(XFilterEv)3.666 E(ent)-.11 E F1(returns)3.666 E F0 -.814(Tr)3.666 G
(ue).814 E F1 2.75(,t).916 G(hen some input method has \214ltered the e)
-2.75 E -.165(ve)-.275 G(nt, and the client).165 E(should discard the e)
72 651.8 Q -.165(ve)-.275 G 2.75(nt. If).165 F F0(XFilterEv)3.666 E(ent)
-.11 E F1(returns)3.666 E F0 -.275(Fa)3.666 G(lse).275 E F1 2.75(,t).916
G(hen the client should continue process-)-2.75 E(ing the e)72 664.8 Q
-.165(ve)-.275 G(nt.).165 E(If a grab has occurred in the client and)72
681.7 Q F0(XFilterEv)3.666 E(ent)-.11 E F1(returns)3.666 E F0 -.814(Tr)
3.666 G(ue).814 E F1 2.75(,t).916 G(he client should ungrab the)-2.75 E
-.11(ke)72 694.7 S(yboard.)-.055 E F0(340)279.75 769 Q 0 Cg EP
%%Page: 341 346
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E 2.75(13.5.9. Getting)72 85 R -.275(Ke)
2.75 G(yboard Input).275 E/F1 11/Times-Roman@0 SF 1.76 -.88(To g)72
101.9 T(et composed input from an input method, use).88 E F0
(XmbLookupString)3.666 E F1(,).916 E F0(XwcLookupString)3.666 E F1(or)
3.666 E F0(Xutf8LookupString)72.916 114.9 Q F1(.).916 E .44 LW 36 132.65
36 143.65 DL 36 130.65 36 141.65 DL 41.5 128.9 36 128.9 DL 43.5 128.9 38
128.9 DL 49 128.9 43.5 128.9 DL(int XmbLookupString)72 144.8 Q(\().916 E
/F2 11/Times-Italic@0 SF(ic).916 E F1(,).916 E F2 -.165(ev)2.75 G(ent)
.165 E F1(,).916 E F2 -.22(bu)2.75 G -.198(ff).22 G(er_r).198 E(eturn)
-.407 E F1(,).916 E F2(bytes_b)2.75 E(uf)-.22 E(fer)-.198 E F1(,).916 E
F2 -.11(ke)2.75 G(ysym_r)-.22 E(eturn)-.407 E F1(,).916 E F2(status_r)
2.75 E(eturn)-.407 E F1(\)).916 E(XIC)88.5 157.8 Q F2(ic)2.75 E F1(;)
.916 E(XK)88.5 170.8 Q -.165(ey)-.275 G(PressedEv).165 E(ent *)-.165 E
F2 -.165(ev)C(ent).165 E F1(;)A(char *)88.5 183.8 Q F2 -.22(bu)C -.198
(ff).22 G(er_r).198 E(eturn)-.407 E F1(;).916 E(int)88.5 196.8 Q F2
(bytes_b)2.75 E(uf)-.22 E(fer)-.198 E F1(;).916 E -2.365 -.275(Ke y)88.5
209.8 T(Sym *).275 E F2 -.11(ke)C(ysym_r)-.22 E(eturn)-.407 E F1(;).916
E(Status *)88.5 222.8 Q F2(status_r)A(eturn)-.407 E F1(;).916 E
(int XwcLookupString)72 243.6 Q(\().916 E F2(ic).916 E F1(,).916 E F2
-.165(ev)2.75 G(ent).165 E F1(,).916 E F2 -.22(bu)2.75 G -.198(ff).22 G
(er_r).198 E(eturn)-.407 E F1(,).916 E F2(bytes_b)2.75 E(uf)-.22 E(fer)
-.198 E F1(,).916 E F2 -.11(ke)2.75 G(ysym_r)-.22 E(eturn)-.407 E F1(,)
.916 E F2(status_r)2.75 E(eturn)-.407 E F1(\)).916 E(XIC)88.5 256.6 Q F2
(ic)2.75 E F1(;).916 E(XK)88.5 269.6 Q -.165(ey)-.275 G(PressedEv).165 E
(ent *)-.165 E F2 -.165(ev)C(ent).165 E F1(;).916 E(wchar_t *)88.5 282.6
Q F2 -.22(bu)C -.198(ff).22 G(er_r).198 E(eturn)-.407 E F1(;).916 E(int)
88.5 295.6 Q F2(wc)2.75 E(har)-.165 E(s_b)-.11 E(uf)-.22 E(fer)-.198 E
F1(;).916 E -2.365 -.275(Ke y)88.5 308.6 T(Sym *).275 E F2 -.11(ke)C
(ysym_r)-.22 E(eturn)-.407 E F1(;).916 E(Status *)88.5 321.6 Q F2
(status_r)A(eturn)-.407 E F1(;).916 E(int Xutf8LookupString)72 342.4 Q
(\().916 E F2(ic).916 E F1(,).916 E F2 -.165(ev)2.75 G(ent).165 E F1(,)
.916 E F2 -.22(bu)2.75 G -.198(ff).22 G(er_r).198 E(eturn)-.407 E F1(,)
.916 E F2(bytes_b)2.75 E(uf)-.22 E(fer)-.198 E F1(,).916 E F2 -.11(ke)
2.75 G(ysym_r)-.22 E(eturn)-.407 E F1(,).916 E F2(status_r)2.75 E(eturn)
-.407 E F1(\)).916 E(XIC)88.5 355.4 Q F2(ic)2.75 E F1(;).916 E(XK)88.5
368.4 Q -.165(ey)-.275 G(PressedEv).165 E(ent *)-.165 E F2 -.165(ev)C
(ent).165 E F1(;)A(char *)88.5 381.4 Q F2 -.22(bu)C -.198(ff).22 G(er_r)
.198 E(eturn)-.407 E F1(;).916 E(int)88.5 394.4 Q F2(bytes_b)2.75 E(uf)
-.22 E(fer)-.198 E F1(;).916 E -2.365 -.275(Ke y)88.5 407.4 T(Sym *).275
E F2 -.11(ke)C(ysym_r)-.22 E(eturn)-.407 E F1(;).916 E(Status *)88.5
420.4 Q F2(status_r)A(eturn)-.407 E F1(;).916 E F2(ic)72 441.2 Q F1
(Speci\214es the input conte)64.058 E(xt.)-.165 E F2 -.165(ev)72 458.1 S
(ent).165 E F1(Speci\214es the k)48.955 E .33 -.165(ey e)-.11 H -.165
(ve)-.11 G(nt to be used.).165 E F2 -.22(bu)72 475 S -.198(ff).22 G
(er_r).198 E(eturn)-.407 E F1
(Returns a multibyte string or wide character string \(if an)13.546 E
(y\) from the input)-.165 E(method.)144 488 Q F2(bytes_b)72 504.9 Q(uf)
-.22 E(fer)-.198 E(wc)72 517.9 Q(har)-.165 E(s_b)-.11 E(uf)-.22 E(fer)
-.198 E F1(Speci\214es space a)9.135 E -.275(va)-.22 G
(ilable in the return b).275 E(uf)-.22 E(fer)-.275 E(.)-.605 E F2 -.11
(ke)72 534.8 S(ysym_r)-.22 E(eturn)-.407 E F1(Returns the K)8.09 E -.165
(ey)-.275 G(Sym computed from the e).165 E -.165(ve)-.275 G
(nt if this ar).165 E(gument is not NULL.)-.198 E F2(status_r)72 551.7 Q
(eturn)-.407 E F1(Returns a v)13.733 E
(alue indicating what kind of data is returned.)-.275 E 36 547.35 36
558.35 DL 36 545.35 36 556.35 DL 41.5 556.6 36 556.6 DL 43.5 556.6 38
556.6 DL 49 556.6 43.5 556.6 DL(The)72 581.6 Q F0(XmbLookupString)3.666
E F1(,).916 E F0(XwcLookupString)3.666 E F1(and)3.666 E F0
(Xutf8LookupString)3.666 E F1(functions return the)3.666 E
(string from the input method speci\214ed in the b)72 594.6 Q(uf)-.22 E
(fer_return ar)-.275 E 2.75(gument. If)-.198 F
(no string is returned, the)2.75 E -.22(bu)72 607.6 S -.275(ff).22 G
(er_return ar).275 E(gument is unchanged.)-.198 E(The K)72 624.5 Q -.165
(ey)-.275 G(Sym into which the K).165 E -.165(ey)-.275 G
(Code from the e).165 E -.165(ve)-.275 G(nt w).165 E
(as mapped is returned in the)-.11 E -.11(ke)72 637.5 S(ysym_return ar)
-.055 E(gument if it is non-NULL and the status_return ar)-.198 E
(gument indicates that a)-.198 E -2.365 -.275(Ke y)72 650.5 T(Sym w).275
E(as returned.)-.11 E(If both a string and a K)5.5 E -.165(ey)-.275 G
(Sym are returned, the K).165 E -.165(ey)-.275 G(Sym v).165 E
(alue does not)-.275 E(necessarily correspond to the string returned.)72
663.5 Q F0(XmbLookupString)72.916 680.4 Q F1(and)3.666 E F0
(Xutf8LookupString)3.666 E F1
(return the length of the string in bytes, and)3.666 E F0
(XwcLookupString)72.916 693.4 Q F1
(returns the length of the string in characters.)3.666 E(Both)5.5 E F0
(XmbLookupString)3.666 E F1(and)3.666 E F0(XwcLookupString)72.916 706.4
Q F1(return te)3.666 E
(xt in the encoding of the locale bound to the input method of the)-.165
E(speci\214ed input conte)72 719.4 Q(xt, and)-.165 E F0
(Xutf8LookupString)3.666 E F1(returns te)3.666 E(xt in UTF-8 encoding.)
-.165 E F0(341)279.75 769 Q 0 Cg EP
%%Page: 342 347
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E/F1 11/Times-Roman@0 SF
(Each string returned by)72 85 Q F0(XmbLookupString)3.666 E F1(and)3.666
E F0(XwcLookupString)3.666 E F1(be)3.666 E(gins in the initial state of)
-.165 E(the encoding of the locale \(if the encoding of the locale is s\
tate-dependent\).)72 98 Q(Note)277.308 121 Q 1.76 -.88(To e)99.5 139 T(\
nsure proper input processing, it is essential that the client pass onl\
y).88 E F0 -.275(Ke)3.666 G(yPr).275 E(ess)-.198 E F1 -2.365 -.275(ev e)
99.5 152 T(nts to).275 E F0(XmbLookupString)3.666 E F1(,).916 E F0
(XwcLookupString)3.666 E F1(and)3.666 E F0(Xutf8LookupString)3.666 E F1
5.5(.T).916 G(heir)-5.5 E(beha)99.5 165 Q(vior when a client passes a)
-.22 E F0 -.275(Ke)3.666 G(yRelease).275 E F1 -2.365 -.275(ev e)3.666 H
(nt is unde\214ned.).275 E(Clients should check the status_return ar)72
191.9 Q(gument before using the other returned v)-.198 E 2.75
(alues. These)-.275 F(three functions each return a v)72 204.9 Q
(alue to status_return that indicates what has been returned in the)
-.275 E(other ar)72 217.9 Q 2.75(guments. The)-.198 F(possible v)2.75 E
(alues returned are:)-.275 E F0(XBufferOv)72.916 237.4 Q(er\215o)-.11 E
(w)-.11 E F1(The input string to be returned is too lar)196.5 237.4 Q
(ge for the supplied)-.198 E -.22(bu)196.5 250.4 S -.275(ff).22 G 2.75
(er_return. The).275 F(required size \(for)2.75 E F0(XmbLookupString)
3.666 E F1(,).916 E F0(Xutf8LookupString)197.416 263.4 Q F1
(in bytes; for)3.666 E F0(XwcLookupString)3.666 E F1(in characters\))
3.666 E(is returned as the v)196.5 276.4 Q
(alue of the function, and the contents of)-.275 E -.22(bu)196.5 289.4 S
-.275(ff).22 G(er_return and k).275 E -.165(ey)-.11 G
(sym_return are not modi\214ed.).165 E(The client should)5.5 E
(recall the function with the same e)196.5 302.4 Q -.165(ve)-.275 G
(nt and a b).165 E(uf)-.22 E(fer of adequate size)-.275 E
(to obtain the string.)196.5 315.4 Q F0(XLookupNone)72.916 328.4 Q F1
(No consistent input has been composed so f)196.5 328.4 Q(ar)-.11 E 5.5
(.T)-.605 G(he contents of)-5.5 E -.22(bu)196.5 341.4 S -.275(ff).22 G
(er_return and k).275 E -.165(ey)-.11 G
(sym_return are not modi\214ed, and the function).165 E(returns zero.)
196.5 354.4 Q F0(XLookupChars)72.916 367.4 Q F1
(Some input characters ha)196.5 367.4 Q .33 -.165(ve b)-.22 H
(een composed.).165 E(The)5.5 E 2.75(ya)-.165 G(re placed in the)-2.75 E
-.22(bu)196.5 380.4 S -.275(ff).22 G(er_return ar).275 E
(gument, using the encoding described abo)-.198 E -.165(ve)-.165 G 2.75
(,a).165 G(nd the)-2.75 E(string length is returned as the v)196.5 393.4
Q(alue of the function.)-.275 E(The content of)5.5 E(the k)196.5 406.4 Q
-.165(ey)-.11 G(sym_return ar).165 E(gument is not modi\214ed.)-.198 E
F0(XLookupK)72.916 419.4 Q(eySym)-.275 E F1 2.75(AK)196.5 419.4 S -.165
(ey)-3.025 G
(Sym has been returned instead of a string and is returned in).165 E
-.11(ke)196.5 432.4 S 2.75(ysym_return. The)-.055 F(content of the b)
2.75 E(uf)-.22 E(fer_return ar)-.275 E(gument is not)-.198 E
(modi\214ed, and the function returns zero.)196.5 445.4 Q F0
(XLookupBoth)72.916 458.4 Q F1(Both a K)196.5 458.4 Q -.165(ey)-.275 G
(Sym and a string are returned;).165 E F0(XLookupChars)3.666 E F1(and)
3.666 E F0(XLookupK)197.416 471.4 Q(eySym)-.275 E F1
(occur simultaneously)3.666 E(.)-.715 E(It does not mak)72 494.8 Q 2.75
(ea)-.11 G .33 -.165(ny d)-2.75 H(if).165 E(ference if the input conte)
-.275 E(xt passed as an ar)-.165 E(gument to)-.198 E F0(XmbLookup-)3.666
E(String)72 507.8 Q F1(,).916 E F0(XwcLookupString)3.666 E F1(and)3.666
E F0(Xutf8LookupString)3.666 E F1
(is the one currently in possession of the)3.666 E(focus or not.)72
520.8 Q(Input may ha)5.5 E .33 -.165(ve b)-.22 H
(een composed within an input conte).165 E
(xt before it lost the focus, and)-.165 E
(that input may be returned on subsequent calls to)72 533.8 Q F0
(XmbLookupString)3.666 E F1(,).916 E F0(XwcLookupString)3.666 E F1(or)
3.666 E F0(Xutf8LookupString)72.916 546.8 Q F1 -2.365 -.275(ev e)3.666 H
2.75(nt).275 G(hough it does not ha)-2.75 E .33 -.165(ve a)-.22 H .33
-.165(ny m).165 H(ore k).165 E -.165(ey)-.11 G(board focus.).165 E
(The function)72 563.7 Q F0(Xutf8LookupString)3.666 E F1
(is an XFree86 e)3.666 E
(xtension introduced in XFree86 4.0.2. Its pres-)-.165 E
(ence is indicated by the macro)72 576.7 Q F0(X_HA)3.666 E
(VE_UTF8_STRING)-1.595 E F1(.).916 E F0 2.75(13.5.10. Input)72 602.7 R
(Method Con)2.75 E -.11(ve)-.44 G(ntions).11 E F1
(The input method architecture is transparent to the client.)72 619.6 Q
(Ho)5.5 E(we)-.275 E -.165(ve)-.275 G .88 -.44(r, c).165 H
(lients should respect a num-).44 E(ber of con)72 632.6 Q -.165(ve)-.44
G(ntions in order to w).165 E(ork properly)-.11 E 5.5(.C)-.715 G
(lients must also be a)-5.5 E -.11(wa)-.165 G(re of possible ef).11 E
(fects of)-.275 E(synchronization between input method and library in t\
he case of a remote input serv)72 645.6 Q(er)-.165 E(.)-.605 E F0 2.75
(13.5.10.1. Client)72 671.6 R(Con)2.75 E -.11(ve)-.44 G(ntions).11 E F1
2.75(Aw)72 688.5 S(ell-beha)-2.75 E -.165(ve)-.22 G 2.75(dc).165 G
(lient \(or toolkit\) should \214rst query the input method style.)-2.75
E(If the client cannot)5.5 E(satisfy the requirements of the supported \
styles \(in terms of geometry management or callbacks\),)72 701.5 Q
(it should ne)72 714.5 Q
(gotiate with the user continuation of the program or raise an e)-.165 E
(xception or error of)-.165 E(some sort.)72 727.5 Q F0(342)279.75 769 Q
0 Cg EP
%%Page: 343 348
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E 2.75(13.5.10.2. Synchr)72 85 R
(onization Con)-.198 E -.11(ve)-.44 G(ntions).11 E/F1 11/Times-Roman@0
SF(A)72 101.9 Q F0 -.275(Ke)3.666 G(yPr).275 E(ess)-.198 E F1 -2.365
-.275(ev e)3.666 H(nt with a K).275 E -.165(ey)-.275 G
(Code of zero is used e).165 E(xclusi)-.165 E -.165(ve)-.275 G
(ly as a signal that an input method).165 E
(has composed input that can be returned by)72 114.9 Q F0
(XmbLookupString)3.666 E F1(,).916 E F0(XwcLookupString)3.666 E F1(or)
3.666 E F0(Xutf8LookupString)72.916 127.9 Q F1 5.5(.N).916 G 2.75(oo)
-5.5 G(ther use is made of a)-2.75 E F0 -.275(Ke)3.666 G(yPr).275 E(ess)
-.198 E F1 -2.365 -.275(ev e)3.666 H(nt with K).275 E -.165(ey)-.275 G
(Code of zero.).165 E(Such an e)72 144.8 Q -.165(ve)-.275 G(nt may be g\
enerated by either a front-end or a back-end input method in an imple-)
.165 E(mentation-dependent manner)72 157.8 Q 5.5(.S)-.605 G
(ome possible w)-5.5 E(ays to generate this e)-.11 E -.165(ve)-.275 G
(nt include:).165 E 23.65<8341>72 174.7 S(synthetic e)-20.9 E -.165(ve)
-.275 G(nt sent by an input method serv).165 E(er)-.165 E 23.65<8341>72
191.6 S 2.75(na)-23.65 G(rti\214cial e)-2.75 E -.165(ve)-.275 G
(nt created by a input method \214lter and pushed onto a client').165 E
2.75(se)-.605 G -.165(ve)-3.025 G(nt queue).165 E 23.65<8341>72 208.5 S
F0 -.275(Ke)-19.984 G(yPr).275 E(ess)-.198 E F1 -2.365 -.275(ev e)3.666
H(nt whose K).275 E -.165(ey)-.275 G(Code v).165 E
(alue is modi\214ed by an input method \214lter)-.275 E(When callback s\
upport is speci\214ed by the client, input methods will not tak)72 225.4
Q 2.75(ea)-.11 G(ction unless the)-2.75 E(y)-.165 E -.165(ex)72 238.4 S
(plicitly called back the client and obtained no response \(the callbac\
k is not speci\214ed or returned).165 E(in)72 251.4 Q -.275(va)-.44 G
(lid data\).).275 E F0 2.75(13.6. String)72 277.4 R(Constants)2.75 E F1
(The follo)72 294.3 Q
(wing symbols for string constants are de\214ned in <)-.275 E F0
(X11/Xlib)A(.h)-.44 E F1 2.75(>. Although)B(the)2.75 E 2.75(ya)-.165 G
(re)-2.75 E(sho)72 307.3 Q
(wn here with particular macro de\214nitions, the)-.275 E 2.75(ym)-.165
G(ay be implemented as macros, as global)-2.75 E
(symbols, or as a mixture of the tw)72 320.3 Q 2.75(o. The)-.11 F
(string pointer v)2.75 E(alue itself is not signi\214cant; clients must)
-.275 E(not assume that inequality of tw)72 333.3 Q 2.75(ov)-.11 G
(alues implies inequality of the actual string data.)-3.025 E(#de\214ne)
72 352.8 Q F0(XNV)125.416 352.8 Q(aNestedList)-1.012 E F1("XNV)339 352.8
Q(aNestedList")-1.221 E(#de\214ne)72 365.8 Q F0(XNSeparator)125.416
365.8 Q(ofNestedList)-.198 E F1("separatorofNestedList")339 365.8 Q
(#de\214ne)72 378.8 Q F0(XNQueryInputStyle)125.416 378.8 Q F1
("queryInputStyle")339 378.8 Q(#de\214ne)72 391.8 Q F0(XNClientW)125.416
391.8 Q(indo)-.198 E(w)-.11 E F1("clientW)339 391.8 Q(indo)-.44 E(w")
-.275 E(#de\214ne)72 404.8 Q F0(XNInputStyle)125.416 404.8 Q F1
("inputStyle")339 404.8 Q(#de\214ne)72 417.8 Q F0(XNF)125.416 417.8 Q
(ocusW)-.275 E(indo)-.198 E(w)-.11 E F1("focusW)339 417.8 Q(indo)-.44 E
(w")-.275 E(#de\214ne)72 430.8 Q F0(XNResour)125.416 430.8 Q(ceName)
-.198 E F1("resourceName")339 430.8 Q(#de\214ne)72 443.8 Q F0(XNResour)
125.416 443.8 Q(ceClass)-.198 E F1("resourceClass")339 443.8 Q
(#de\214ne)72 456.8 Q F0(XNGeometryCallback)125.416 456.8 Q F1
("geometryCallback")339 456.8 Q(#de\214ne)72 469.8 Q F0(XNDestr)125.416
469.8 Q(oyCallback)-.198 E F1("destro)339 469.8 Q(yCallback")-.11 E
(#de\214ne)72 482.8 Q F0(XNFilterEv)125.416 482.8 Q(ents)-.11 E F1
("\214lterEv)339 482.8 Q(ents")-.165 E(#de\214ne)72 495.8 Q F0(XNPr)
125.416 495.8 Q(eeditStartCallback)-.198 E F1("preeditStartCallback")339
495.8 Q(#de\214ne)72 508.8 Q F0(XNPr)125.416 508.8 Q(eeditDoneCallback)
-.198 E F1("preeditDoneCallback")339 508.8 Q(#de\214ne)72 521.8 Q F0
(XNPr)125.416 521.8 Q(eeditDrawCallback)-.198 E F1("preeditDra)339 521.8
Q(wCallback")-.165 E(#de\214ne)72 534.8 Q F0(XNPr)125.416 534.8 Q
(eeditCar)-.198 E(etCallback)-.198 E F1("preeditCaretCallback")339 534.8
Q(#de\214ne)72 547.8 Q F0(XNPr)125.416 547.8 Q(eeditStateNotifyCallback)
-.198 E F1("preeditStateNotifyCallback")339 547.8 Q(#de\214ne)72 560.8 Q
F0(XNPr)125.416 560.8 Q(eeditAttrib)-.198 E(utes)-.22 E F1
("preeditAttrib)339 560.8 Q(utes")-.22 E(#de\214ne)72 573.8 Q F0
(XNStatusStartCallback)125.416 573.8 Q F1("statusStartCallback")339
573.8 Q(#de\214ne)72 586.8 Q F0(XNStatusDoneCallback)125.416 586.8 Q F1
("statusDoneCallback")339 586.8 Q(#de\214ne)72 599.8 Q F0
(XNStatusDrawCallback)125.416 599.8 Q F1("statusDra)339 599.8 Q
(wCallback")-.165 E(#de\214ne)72 612.8 Q F0(XNStatusAttrib)125.416 612.8
Q(utes)-.22 E F1("statusAttrib)339 612.8 Q(utes")-.22 E(#de\214ne)72
625.8 Q F0(XN)125.416 625.8 Q(Ar)-.22 E(ea)-.198 E F1("area")339 625.8 Q
(#de\214ne)72 638.8 Q F0(XN)125.416 638.8 Q(Ar)-.22 E(eaNeeded)-.198 E
F1("areaNeeded")339 638.8 Q(#de\214ne)72 651.8 Q F0(XNSpotLocation)
125.416 651.8 Q F1("spotLocation")339 651.8 Q(#de\214ne)72 664.8 Q F0
(XNColormap)125.416 664.8 Q F1("colorMap")339 664.8 Q(#de\214ne)72 677.8
Q F0(XNStdColormap)125.416 677.8 Q F1("stdColorMap")339 677.8 Q
(#de\214ne)72 690.8 Q F0(XNF)125.416 690.8 Q(or)-.275 E(egr)-.198 E
(ound)-.198 E F1("fore)339 690.8 Q(ground")-.165 E(#de\214ne)72 703.8 Q
F0(XNBackgr)125.416 703.8 Q(ound)-.198 E F1("background")339 703.8 Q
(#de\214ne)72 716.8 Q F0(XNBackgr)125.416 716.8 Q(oundPixmap)-.198 E F1
("backgroundPixmap")339 716.8 Q F0(343)279.75 769 Q 0 Cg EP
%%Page: 344 349
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E/F1 11/Times-Roman@0 SF(#de\214ne)72 85
Q F0(XNF)125.416 85 Q(ontSet)-.275 E F1("fontSet")339 85 Q(#de\214ne)72
98 Q F0(XNLineSpace)125.416 98 Q F1("lineSpace")339 98 Q(#de\214ne)72
111 Q F0(XNCursor)125.416 111 Q F1("cursor")339 111 Q(#de\214ne)72 124 Q
F0(XNQueryIMV)125.416 124 Q(aluesList)-1.012 E F1("queryIMV)339 124 Q
(aluesList")-1.221 E(#de\214ne)72 137 Q F0(XNQueryICV)125.416 137 Q
(aluesList)-1.012 E F1("queryICV)339 137 Q(aluesList")-1.221 E
(#de\214ne)72 150 Q F0(XNStringCon)125.416 150 Q -.11(ve)-.44 G
(rsionCallback).11 E F1("stringCon)339 150 Q -.165(ve)-.44 G
(rsionCallback").165 E(#de\214ne)72 163 Q F0(XNStringCon)125.416 163 Q
-.11(ve)-.44 G(rsion).11 E F1("stringCon)339 163 Q -.165(ve)-.44 G
(rsion").165 E(#de\214ne)72 176 Q F0(XNResetState)125.416 176 Q F1
("resetState")339 176 Q(#de\214ne)72 189 Q F0(XNHotK)125.416 189 Q(ey)
-.275 E F1("hotk)339 189 Q -.165(ey)-.11 G(").165 E(#de\214ne)72 202 Q
F0(XNHotK)125.416 202 Q(eyState)-.275 E F1("hotk)339 202 Q -.165(ey)-.11
G(State").165 E(#de\214ne)72 215 Q F0(XNPr)125.416 215 Q(eeditState)
-.198 E F1("preeditState")339 215 Q(#de\214ne)72 228 Q F0(XNV)125.416
228 Q(isibleP)-.407 E(osition)-.22 E F1("visiblePosition")339 228 Q
(#de\214ne)72 241 Q F0(XNR6Pr)125.416 241 Q(eeditCallbackBeha)-.198 E
(vior)-.275 E F1("r6PreeditCallback")339 241 Q(#de\214ne)72 254 Q F0
(XNRequir)125.416 254 Q(edCharSet)-.198 E F1("requiredCharSet")339 254 Q
(#de\214ne)72 267 Q F0(XNQueryOrientation)125.416 267 Q F1
("queryOrientation")339 267 Q(#de\214ne)72 280 Q F0(XNDir)125.416 280 Q
(ectionalDependentDrawing)-.198 E F1("directionalDependentDra)339 280 Q
(wing")-.165 E(#de\214ne)72 293 Q F0(XNContextualDrawing)125.416 293 Q
F1("conte)339 293 Q(xtualDra)-.165 E(wing")-.165 E(#de\214ne)72 306 Q F0
(XNBaseF)125.416 306 Q(ontName)-.275 E F1("baseF)339 306 Q(ontName")
-.165 E(#de\214ne)72 319 Q F0(XNMissingCharSet)125.416 319 Q F1
("missingCharSet")339 319 Q(#de\214ne)72 332 Q F0(XNDefaultString)
125.416 332 Q F1("def)339 332 Q(aultString")-.11 E(#de\214ne)72 345 Q F0
(XNOrientation)125.416 345 Q F1("orientation")339 345 Q(#de\214ne)72 358
Q F0(XNF)125.416 358 Q(ontInf)-.275 E(o)-.275 E F1("fontInfo")339 358 Q
(#de\214ne)72 371 Q F0(XNOMA)125.416 371 Q(utomatic)-.55 E F1
("omAutomatic")339 371 Q F0(344)279.75 769 Q 0 Cg EP
%%Page: 345 350
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E/F1 12/Times-Bold@0 SF(Chapter 14)
259.17 111 Q(Inter)187.89 137 Q(-Client Communication Functions)-.444 E
/F2 11/Times-Roman@0 SF(The)72 179.9 Q/F3 11/Times-Italic@0 SF(Inter)
2.75 E(-Client Communication Con)-.22 E(ventions Manual)-.44 E F2 2.75
(,h)C(ereafter referred to as the ICCCM,)-2.75 E
(details the X Consortium appro)72 192.9 Q -.165(ve)-.165 G 2.75(dc).165
G(on)-2.75 E -.165(ve)-.44 G(ntions that go).165 E -.165(ve)-.165 G
(rn inter).165 E(-client communications.)-.22 E(These)5.5 E(con)72 205.9
Q -.165(ve)-.44 G(ntions ensure peer).165 E
(-to-peer client cooperation in the use of selections, cut b)-.22 E(uf)
-.22 E(fers, and shared)-.275 E
(resources as well as client cooperation with windo)72 218.9 Q 2.75(wa)
-.275 G(nd session managers.)-2.75 E -.165(Fo)5.5 G 2.75(rf).165 G
(urther informa-)-2.75 E(tion, see the)72 231.9 Q F3(Inter)2.75 E
(-Client Communication Con)-.22 E(ventions Manual)-.44 E F2(.)A
(Xlib pro)72 248.8 Q
(vides a number of standard properties and programming interf)-.165 E
(aces that are ICCCM com-)-.11 E 2.75(pliant. The)72 261.8 R
(prede\214ned atoms for some of these properties are de\214ned in the <)
2.75 E F0(X11/Xatom.h)A F2(>)A(header \214le, where to a)72 274.8 Q -.22
(vo)-.22 G(id name con\215icts with user symbols their).22 E F0
(#de\214ne)3.666 E F2(name has an XA_ pre-)3.666 E 2.75(\214x. F)72
287.8 R
(or further information about atoms and properties, see section 4.3.)
-.165 E(Xlib')72 304.7 Q 2.75(ss)-.605 G(election and cut b)-2.75 E(uf)
-.22 E(fer mechanisms pro)-.275 E(vide the primary programming interf)
-.165 E(aces by which)-.11 E(peer client applications communicate with \
each other \(see sections 4.5 and 16.6\).)72 317.7 Q(The functions)5.5 E
(discussed in this chapter pro)72 330.7 Q
(vide the primary programming interf)-.165 E
(aces by which client applications)-.11 E(communicate with their windo)
72 343.7 Q 2.75(wa)-.275 G
(nd session managers as well as share standard colormaps.)-2.75 E(The s\
tandard properties that are of special interest for communicating with \
windo)72 360.6 Q 2.75(wa)-.275 G(nd session)-2.75 E(managers are:)72
373.6 Q .44 LW 538.314 384.85 72 384.85 DL F0 130.261(Name T)72 401.1 R
69.927(ype F)-.814 F 10.208(ormat Description)-.275 F 538.314 411.85 72
411.85 DL/F4 10/Times-Roman@0 SF(WM_CLASS)72 422.1 Q(STRING)232.5 422.1
Q F2(8)341.257 422.1 Q(Set by application programs to allo)376.314 422.1
Q(w)-.275 E(windo)376.314 435.1 Q 2.75(wa)-.275 G
(nd session managers to)-2.75 E(obtain the application')376.314 448.1 Q
2.75(sr)-.605 G(esources)-2.75 E(from the resource database.)376.314
461.1 Q F4(WM_CLIENT_MA)72 480.1 Q(CHINE)-.4 E(TEXT)232.5 480.1 Q F2
(The string name of the machine on)376.314 480.1 Q
(which the client application is run-)376.314 493.1 Q(ning.)376.314
506.1 Q F4(WM_COLORMAP_WINDO)72 525.1 Q(WS)-.35 E(WINDO)232.5 525.1 Q(W)
-.35 E F2(32)338.507 525.1 Q(The list of windo)376.314 525.1 Q 2.75(wI)
-.275 G(Ds that may)-2.75 E(need a dif)376.314 538.1 Q
(ferent colormap from that)-.275 E(of their top-le)376.314 551.1 Q -.165
(ve)-.275 G 2.75(lw).165 G(indo)-2.75 E -.715(w.)-.275 G F4(WM_COMMAND)
72 570.1 Q(TEXT)232.5 570.1 Q F2(The command and ar)376.314 570.1 Q
(guments, null-)-.198 E(separated, used to in)376.314 583.1 Q -.22(vo)
-.44 G .22 -.11(ke t).22 H(he appli-).11 E(cation.)376.314 596.1 Q F4
(WM_HINTS)72 615.1 Q(WM_HINTS)232.5 615.1 Q F2(32)338.507 615.1 Q
(Additional hints set by the client for)376.314 615.1 Q
(use by the windo)376.314 628.1 Q 2.75(wm)-.275 G(anager)-2.75 E 5.5(.T)
-.605 G(he C)-5.5 E(type of this property is)376.314 641.1 Q F0
(XWMHints)3.666 E F2(.).916 E F4(WM_ICON_N)72 660.1 Q(AME)-.35 E(TEXT)
232.5 660.1 Q F2(The name to be used in an icon.)376.314 660.1 Q F0(345)
279.75 769 Q 0 Cg EP
%%Page: 346 351
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E .44 LW 538.314 76.75 72 76.75 DL
130.261(Name T)72 93 R 69.927(ype F)-.814 F 10.208(ormat Description)
-.275 F 538.314 103.75 72 103.75 DL/F1 10/Times-Roman@0 SF(WM_ICON_SIZE)
72 114 Q(WM_ICON_SIZE)232.5 114 Q/F2 11/Times-Roman@0 SF(32)338.507 114
Q(The windo)376.314 114 Q 2.75(wm)-.275 G(anager may set this)-2.75 E
(property on the root windo)376.314 127 Q 2.75(wt)-.275 G(o)-2.75 E
(specify the icon sizes it supports.)376.314 140 Q
(The C type of this property is)376.314 153 Q F0(XIconSize)377.23 166 Q
F2(.).916 E F1(WM_N)72 185 Q(AME)-.35 E(TEXT)232.5 185 Q F2
(The name of the application.)376.314 185 Q F1(WM_NORMAL_HINTS)72 204 Q
(WM_SIZE_HINTS)232.5 204 Q F2(32)338.507 204 Q(Size hints for a windo)
376.314 204 Q 2.75(wi)-.275 G 2.75(ni)-2.75 G(ts)-2.75 E(normal state.)
376.314 217 Q(The C type of this)5.5 E(property is)376.314 230 Q F0
(XSizeHints)3.666 E F2(.).916 E F1(WM_PR)72 249 Q -1.88 -.4(OT O)-.4 H
(COLS).4 E -.46 -1.11(AT O)232.5 249 T(M)1.11 E F2(32)338.507 249 Q
(List of atoms that identify the com-)376.314 249 Q
(munications protocols between the)376.314 262 Q(client and windo)
376.314 275 Q 2.75(wm)-.275 G(anager in)-2.75 E
(which the client is willing to partici-)376.314 288 Q(pate.)376.314 301
Q F1(WM_ST)72 320 Q -1.11(AT)-.93 G(E)1.11 E(WM_ST)232.5 320 Q -1.11(AT)
-.93 G(E)1.11 E F2(32)338.507 320 Q(Intended for communication)376.314
320 Q(between windo)376.314 333 Q 2.75(wa)-.275 G(nd session man-)-2.75
E(agers only)376.314 346 Q(.)-.715 E F1(WM_TRANSIENT_FOR)72 365 Q(WINDO)
232.5 365 Q(W)-.35 E F2(32)338.507 365 Q
(Set by application programs to indi-)376.314 365 Q(cate to the windo)
376.314 378 Q 2.75(wm)-.275 G(anager that a)-2.75 E(transient top-le)
376.314 391 Q -.165(ve)-.275 G 2.75(lw).165 G(indo)-2.75 E 1.43 -.715
(w, s)-.275 H(uch as a).715 E(dialog box.)376.314 404 Q 538.314 414.75
72 414.75 DL(The remainder of this chapter discusses:)72 435.4 Q 23.65
<8343>72 452.3 S(lient to windo)-23.65 E 2.75(wm)-.275 G
(anager communication)-2.75 E 23.65<8343>72 469.2 S
(lient to session manager communication)-23.65 E 23.65<8353>72 486.1 S
(tandard colormaps)-23.65 E F0 2.75(14.1. Client)72 512.1 R(to W)2.75 E
(indo)-.198 E 2.75(wM)-.11 G(anager Communication)-2.75 E F2
(This section discusses ho)72 529 Q 2.75(wt)-.275 G(o:)-2.75 E 23.65
<834d>72 545.9 S(anipulate top-le)-23.65 E -.165(ve)-.275 G 2.75(lw).165
G(indo)-2.75 E(ws)-.275 E 23.65<8343>72 562.8 S(on)-23.65 E -.165(ve)
-.44 G(rt string lists).165 E 23.65<8353>72 579.7 S(et and read te)
-23.65 E(xt properties)-.165 E 23.65<8353>72 596.6 S
(et and read the WM_N)-23.65 E(AME property)-.385 E 23.65<8353>72 613.5
S(et and read the WM_ICON_N)-23.65 E(AME property)-.385 E 23.65<8353>72
630.4 S(et and read the WM_HINTS property)-23.65 E 23.65<8353>72 647.3 S
(et and read the WM_NORMAL_HINTS property)-23.65 E 23.65<8353>72 664.2 S
(et and read the WM_CLASS property)-23.65 E 23.65<8353>72 681.1 S
(et and read the WM_TRANSIENT_FOR property)-23.65 E 23.65<8353>72 698 S
(et and read the WM_PR)-23.65 E -2.068 -.44(OT O)-.44 H(COLS property)
.44 E 23.65<8353>72 714.9 S(et and read the WM_COLORMAP_WINDO)-23.65 E
(WS property)-.385 E F0(346)279.75 769 Q 0 Cg EP
%%Page: 347 352
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E/F1 11/Times-Roman@0 SF 23.65<8353>72
85 S(et and read the WM_ICON_SIZE property)-23.65 E 23.65<8355>72 101.9
S(se windo)-23.65 E 2.75(wm)-.275 G(anager con)-2.75 E -.165(ve)-.44 G
(nience functions).165 E F0 2.75(14.1.1. Manipulating)72 127.9 R -1.012
(To)2.75 G(p-Le)1.012 E -.11(ve)-.165 G 2.75(lW).11 G(indo)-2.948 E(ws)
-.11 E F1(Xlib pro)72 144.8 Q(vides functions that you can use to chang\
e the visibility or size of top-le)-.165 E -.165(ve)-.275 G 2.75(lw).165
G(indo)-2.75 E(ws \(that)-.275 E
(is, those that were created as children of the root windo)72 157.8 Q
2.75(w\). Note)-.275 F(that the subwindo)2.75 E(ws that you)-.275 E
(create are ignored by windo)72 170.8 Q 2.75(wm)-.275 G 2.75
(anagers. Therefore,)-2.75 F(you should use the basic windo)2.75 E 2.75
(wf)-.275 G(unctions)-2.75 E
(described in chapter 3 to manipulate your application')72 183.8 Q 2.75
(ss)-.605 G(ubwindo)-2.75 E(ws.)-.275 E 1.76 -.88(To r)72 200.7 T
(equest that a top-le).88 E -.165(ve)-.275 G 2.75(lw).165 G(indo)-2.75 E
2.75(wb)-.275 G 2.75(ei)-2.75 G(coni\214ed, use)-2.75 E F0(XIconifyW)
3.666 E(indo)-.198 E(w)-.11 E F1(.).916 E .44 LW 36 218.45 36 229.45 DL
36 216.45 36 227.45 DL 41.5 214.7 36 214.7 DL 43.5 214.7 38 214.7 DL 49
214.7 43.5 214.7 DL(Status XIconifyW)72 230.6 Q(indo)-.44 E .916(w\()
-.275 G/F2 11/Times-Italic@0 SF(display)A F1(,)A F2(w)2.75 E F1(,)A F2
(scr)2.75 E(een_number)-.407 E F1(\)).916 E(Display *)88.5 243.6 Q F2
(display)A F1(;).916 E -.44(Wi)88.5 256.6 S(ndo).44 E(w)-.275 E F2(w)
2.75 E F1(;)A(int)88.5 269.6 Q F2(scr)2.75 E(een_number)-.407 E F1(;)
.916 E F2(display)72 290.4 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2(w)72 307.3 Q F1(Speci\214es the windo)64.663 E -.715(w.)-.275 G F2
(scr)72 324.2 Q(een_number)-.407 E F1
(Speci\214es the appropriate screen number on the host serv)144 337.2 Q
(er)-.165 E(.)-.605 E 36 332.85 36 343.85 DL 36 330.85 36 341.85 DL 41.5
342.1 36 342.1 DL 43.5 342.1 38 342.1 DL 49 342.1 43.5 342.1 DL(The)72
367.1 Q F0(XIconifyW)3.666 E(indo)-.198 E(w)-.11 E F1
(function sends a WM_CHANGE_ST)3.666 E -1.221(AT)-1.023 G(E)1.221 E F0
(ClientMessage)3.666 E F1 -2.365 -.275(ev e)3.666 H(nt with a).275 E
(format of 32 and a \214rst data element of)72 380.1 Q F0(IconicState)
3.666 E F1(\(as described in section 4.1.4 of the)3.666 E F2(Inter)2.75
E(-)-.22 E(Client Communication Con)72 393.1 Q(ventions Manual)-.44 E F1
2.75(\)a)C(nd a windo)-2.75 E 2.75(wo)-.275 G 2.75(fwt)-2.75 G 2.75(ot)
-2.75 G(he root windo)-2.75 E 2.75(wo)-.275 G 2.75(ft)-2.75 G(he speci-)
-2.75 E(\214ed screen with an e)72 406.1 Q -.165(ve)-.275 G
(nt mask set to).165 E F0(Substructur)3.666 E(eNotifyMask)-.198 E F1(|)
.916 E F0(Substructur)3.666 E(eRedir)-.198 E(ectMask)-.198 E F1(.).916 E
-.44(Wi)72 419.1 S(ndo).44 E 2.75(wm)-.275 G(anagers may elect to recei)
-2.75 E .33 -.165(ve t)-.275 H(his message and if the windo).165 E 2.75
(wi)-.275 G 2.75(si)-2.75 G 2.75(ni)-2.75 G(ts normal state, may)-2.75 E
(treat it as a request to change the windo)72 432.1 Q(w')-.275 E 2.75
(ss)-.605 G(tate from normal to iconic.)-2.75 E(If the)5.5 E
(WM_CHANGE_ST)72 445.1 Q -1.221(AT)-1.023 G 2.75(Ep)1.221 G
(roperty cannot be interned,)-2.75 E F0(XIconifyW)3.666 E(indo)-.198 E
(w)-.11 E F1(does not send a message)3.666 E(and returns a zero status.)
72 458.1 Q(It returns a nonzero status if the client message is sent su\
ccessfully; oth-)5.5 E(erwise, it returns a zero status.)72 471.1 Q 1.76
-.88(To r)72 501 T(equest that a top-le).88 E -.165(ve)-.275 G 2.75(lw)
.165 G(indo)-2.75 E 2.75(wb)-.275 G 2.75(ew)-2.75 G(ithdra)-2.75 E
(wn, use)-.165 E F0(XW)3.666 E(ithdrawW)-.198 E(indo)-.198 E(w)-.11 E F1
(.).916 E 36 518.75 36 529.75 DL 36 516.75 36 527.75 DL 41.5 515 36 515
DL 43.5 515 38 515 DL 49 515 43.5 515 DL(Status XW)72 530.9 Q(ithdra)
-.44 E(wW)-.165 E(indo)-.44 E .916(w\()-.275 G F2(display)A F1(,)A F2(w)
2.75 E F1(,)A F2(scr)2.75 E(een_number)-.407 E F1(\)).916 E(Display *)
88.5 543.9 Q F2(display)A F1(;).916 E -.44(Wi)88.5 556.9 S(ndo).44 E(w)
-.275 E F2(w)2.75 E F1(;).916 E(int)88.5 569.9 Q F2(scr)2.75 E
(een_number)-.407 E F1(;).916 E F2(display)72 590.7 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2(w)72 607.6 Q F1(Speci\214es the windo)64.663 E -.715(w.)-.275 G F2
(scr)72 624.5 Q(een_number)-.407 E F1
(Speci\214es the appropriate screen number on the host serv)144 637.5 Q
(er)-.165 E(.)-.605 E 36 633.15 36 644.15 DL 36 631.15 36 642.15 DL 41.5
642.4 36 642.4 DL 43.5 642.4 38 642.4 DL 49 642.4 43.5 642.4 DL(The)72
667.4 Q F0(XW)3.666 E(ithdrawW)-.198 E(indo)-.198 E(w)-.11 E F1
(function unmaps the speci\214ed windo)3.666 E 2.75(wa)-.275 G
(nd sends a synthetic)-2.75 E F0(Unmap-)3.666 E(Notify)72 680.4 Q F1
-2.365 -.275(ev e)3.666 H(nt to the root windo).275 E 2.75(wo)-.275 G
2.75(ft)-2.75 G(he speci\214ed screen.)-2.75 E -.44(Wi)5.5 G(ndo).44 E
2.75(wm)-.275 G(anagers may elect to recei)-2.75 E -.165(ve)-.275 G
(this message and may treat it as a request to change the windo)72 693.4
Q(w')-.275 E 2.75(ss)-.605 G(tate to withdra)-2.75 E 2.75(wn. When)-.165
F(a)2.75 E(windo)72 706.4 Q 2.75(wi)-.275 G 2.75(si)-2.75 G 2.75(nt)
-2.75 G(he withdra)-2.75 E(wn state, neither its normal nor its iconic \
representations is visible.)-.165 E(It)5.5 E
(returns a nonzero status if the)72 719.4 Q F0(UnmapNotify)3.666 E F1
-2.365 -.275(ev e)3.666 H
(nt is successfully sent; otherwise, it returns a).275 E(zero status.)72
732.4 Q F0(347)279.75 769 Q 0 Cg EP
%%Page: 348 353
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E(XW)72.916 85 Q(ithdrawW)-.198 E(indo)
-.198 E(w)-.11 E/F1 11/Times-Roman@0 SF(can generate a)3.666 E F0(BadW)
3.666 E(indo)-.198 E(w)-.11 E F1(error)3.666 E(.)-.605 E 1.76 -.88(To r)
72 114.9 T(equest that a top-le).88 E -.165(ve)-.275 G 2.75(lw).165 G
(indo)-2.75 E 2.75(wb)-.275 G 2.75(er)-2.75 G(econ\214gured, use)-2.75 E
F0(XRecon\214gur)3.666 E(eWMW)-.198 E(indo)-.198 E(w)-.11 E F1(.).916 E
.44 LW 36 132.65 36 143.65 DL 36 130.65 36 141.65 DL 41.5 128.9 36 128.9
DL 43.5 128.9 38 128.9 DL 49 128.9 43.5 128.9 DL
(Status XRecon\214gureWMW)72 144.8 Q(indo)-.44 E .916(w\()-.275 G/F2 11
/Times-Italic@0 SF(display)A F1(,)A F2(w)2.75 E F1(,)A F2(scr)2.75 E
(een_number)-.407 E F1(,)A F2(value_mask)2.75 E F1(,)A F2(values)2.75 E
F1(\)).916 E(Display *)88.5 157.8 Q F2(display)A F1(;).916 E -.44(Wi)
88.5 170.8 S(ndo).44 E(w)-.275 E F2(w)2.75 E F1(;).916 E(int)88.5 183.8
Q F2(scr)2.75 E(een_number)-.407 E F1(;).916 E(unsigned int)88.5 196.8 Q
F2(value_mask)2.75 E F1(;).916 E(XW)88.5 209.8 Q(indo)-.44 E(wChanges *)
-.275 E F2(values)A F1(;)A F2(display)72 230.6 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2(w)72 247.5 Q F1(Speci\214es the windo)64.663 E -.715(w.)-.275 G F2
(scr)72 264.4 Q(een_number)-.407 E F1
(Speci\214es the appropriate screen number on the host serv)144 277.4 Q
(er)-.165 E(.)-.605 E F2(value_mask)72 294.3 Q F1(Speci\214es which v)
20.069 E(alues are to be set using information in the v)-.275 E
(alues structure.)-.275 E(This mask is the bitwise inclusi)144 307.3 Q
.33 -.165(ve O)-.275 H 2.75(Ro).165 G 2.75(ft)-2.75 G(he v)-2.75 E
(alid con\214gure windo)-.275 E 2.75(wv)-.275 G(alues bits.)-3.025 E F2
(values)72 324.2 Q F1(Speci\214es the)43.895 E F0(XW)3.666 E(indo)-.198
E(wChanges)-.11 E F1(structure.)3.666 E 36 319.85 36 330.85 DL 36 317.85
36 328.85 DL 41.5 329.1 36 329.1 DL 43.5 329.1 38 329.1 DL 49 329.1 43.5
329.1 DL(The)72 354.1 Q F0(XRecon\214gur)3.666 E(eWMW)-.198 E(indo)-.198
E(w)-.11 E F1(function issues a)3.666 E F0(Con\214gur)3.666 E(eW)-.198 E
(indo)-.198 E(w)-.11 E F1(request on the speci\214ed)3.666 E(top-le)72
367.1 Q -.165(ve)-.275 G 2.75(lw).165 G(indo)-2.75 E 4.18 -.715(w. I)
-.275 H 2.75(ft).715 G(he stacking mode is changed and the request f)
-2.75 E(ails with a)-.11 E F0(BadMatch)3.666 E F1(error)3.666 E(,)-.44 E
(the error is trapped by Xlib and a synthetic)72 380.1 Q F0(Con\214gur)
3.666 E(eRequestEv)-.198 E(ent)-.11 E F1(containing the same con\214g-)
3.666 E(uration parameters is sent to the root of the speci\214ed windo)
72 393.1 Q 4.18 -.715(w. W)-.275 H(indo).275 E 2.75(wm)-.275 G
(anagers may elect to)-2.75 E(recei)72 406.1 Q .33 -.165(ve t)-.275 H
(his e).165 E -.165(ve)-.275 G
(nt and treat it as a request to recon\214gure the indicated windo).165
E 4.18 -.715(w. I)-.275 H 2.75(tr).715 G(eturns a)-2.75 E
(nonzero status if the request or e)72 419.1 Q -.165(ve)-.275 G
(nt is successfully sent; otherwise, it returns a zero status.).165 E F0
(XRecon\214gur)72.916 436 Q(eWMW)-.198 E(indo)-.198 E(w)-.11 E F1
(can generate)3.666 E F0(BadV)3.666 E(alue)-1.012 E F1(and)3.666 E F0
(BadW)3.666 E(indo)-.198 E(w)-.11 E F1(errors.)3.666 E F0 2.75
(14.1.2. Con)72 462 R -.11(ve)-.44 G(rting String Lists).11 E F1(Man)72
478.9 Q 2.75(yo)-.165 G 2.75(ft)-2.75 G(he te)-2.75 E
(xt properties allo)-.165 E 2.75(wav)-.275 G
(ariety of types and formats.)-3.025 E(Because the data stored in these)
5.5 E(properties are not simple null-terminated strings, an)72 491.9 Q
F0(XT)3.666 E(extPr)-1.012 E(operty)-.198 E F1
(structure is used to describe)3.666 E
(the encoding, type, and length of the te)72 504.9 Q
(xt as well as its v)-.165 E 2.75(alue. The)-.275 F F0(XT)3.666 E(extPr)
-1.012 E(operty)-.198 E F1(structure con-)3.666 E(tains:)72 517.9 Q 36
535.65 36 546.65 DL 36 533.65 36 544.65 DL 41.5 531.9 36 531.9 DL 43.5
531.9 38 531.9 DL 49 531.9 43.5 531.9 DL(typedef struct {)72 550.4 Q
(unsigned char *v)108 563.4 Q 44.989(alue; /*)-.275 F(property data */)
2.75 E(Atom encoding;)108 576.4 Q(/* type of property */)72.808 E
(int format;)108 589.4 Q(/* 8, 16, or 32 */)97.25 E
(unsigned long nitems;)108 602.4 Q(/* number of items in v)46.826 E
(alue */)-.275 E 2.75(}X)72 615.4 S -1.375 -.77(Te x)-2.75 H(tProperty;)
.77 E 36 617.55 36 628.55 DL 36 615.55 36 626.55 DL 41.5 626.8 36 626.8
DL 43.5 626.8 38 626.8 DL 49 626.8 43.5 626.8 DL(Xlib pro)72 651.8 Q
(vides functions to con)-.165 E -.165(ve)-.44 G(rt localized te).165 E
(xt to or from encodings that support the inter)-.165 E(-client)-.22 E
(communication con)72 664.8 Q -.165(ve)-.44 G(ntions for te).165 E 2.75
(xt. In)-.165 F(addition, functions are pro)2.75 E(vided for con)-.165 E
-.165(ve)-.44 G(rting between).165 E
(lists of pointers to character strings and te)72 677.8 Q
(xt properties in the STRING encoding.)-.165 E
(The functions for localized te)72 694.7 Q(xt return a signed inte)-.165
E(ger error status that encodes)-.165 E F0(Success)3.666 E F1(as zero,)
3.666 E(speci\214c error conditions as ne)72 707.7 Q -.055(ga)-.165 G
(ti).055 E .33 -.165(ve n)-.275 H(umbers, and partial con).165 E -.165
(ve)-.44 G(rsion as a count of uncon).165 E -.165(ve)-.44 G(rtible).165
E(characters.)72 720.7 Q F0(348)279.75 769 Q 0 Cg EP
%%Page: 349 354
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E .44 LW 36 76.75 36 87.75 DL 36 74.75
36 85.75 DL 41.5 73 36 73 DL 43.5 73 38 73 DL 49 73 43.5 73 DL/F1 11
/Times-Roman@0 SF(#de\214ne)72 91.5 Q F0(XNoMemory)125.416 91.5 Q F1
<ad31>285 91.5 Q(#de\214ne)72 104.5 Q F0(XLocaleNotSupported)125.416
104.5 Q F1<ad32>285 104.5 Q(#de\214ne)72 117.5 Q F0(XCon)125.416 117.5 Q
-.11(ve)-.44 G(rterNotF).11 E(ound)-.275 E F1<ad33>285 117.5 Q
(typedef enum {)72 143.5 Q 81.047(XStringStyle, /*)108 156.5 R
(STRING */)2.75 E(XCompoundT)108 169.5 Q -.165(ex)-.77 G 39.819
(tStyle, /*).165 F(COMPOUND_TEXT */)2.75 E(XT)108 182.5 Q -.165(ex)-.77
G 88.714(tStyle, /*).165 F(te)2.75 E(xt in o)-.165 E(wner')-.275 E 2.75
(se)-.605 G(ncoding \(current locale\) */)-2.75 E(XStdICCT)108 195.5 Q
-.165(ex)-.77 G 55.703(tStyle, /*).165 F(STRING, else COMPOUND_TEXT */)
2.75 E 57.518(XUTF8StringStyle /*)108 208.5 R(UTF8_STRING */)2.75 E 2.75
(}X)72 221.5 S(ICCEncodingStyle;)-2.75 E 36 223.65 36 234.65 DL 36
221.65 36 232.65 DL 41.5 232.9 36 232.9 DL 43.5 232.9 38 232.9 DL 49
232.9 43.5 232.9 DL(The v)72 257.9 Q(alue)-.275 E F0(XUTF8StringStyle)
3.666 E F1(is an XFree86 e)3.666 E
(xtension introduced in XFree86 4.0.2. Its presence)-.165 E
(is indicated by the macro)72 270.9 Q F0(X_HA)3.666 E(VE_UTF8_STRING)
-1.595 E F1(.).916 E 1.76 -.88(To c)72 300.8 T(on).88 E -.165(ve)-.44 G
(rt a list of te).165 E(xt strings to an)-.165 E F0(XT)3.666 E(extPr)
-1.012 E(operty)-.198 E F1(structure, use)3.666 E F0(XmbT)3.666 E
(extListT)-1.012 E(oT)-1.012 E(extPr)-1.012 E(op-)-.198 E(erty)72 313.8
Q F1(,).916 E F0(XwcT)3.666 E(extListT)-1.012 E(oT)-1.012 E(extPr)-1.012
E(operty)-.198 E F1(or)3.666 E F0(Xutf8T)3.666 E(extListT)-1.012 E(oT)
-1.012 E(extPr)-1.012 E(operty)-.198 E F1(.).916 E 36 331.55 36 342.55
DL 36 329.55 36 340.55 DL 41.5 327.8 36 327.8 DL 43.5 327.8 38 327.8 DL
49 327.8 43.5 327.8 DL(int XmbT)72 343.7 Q -.165(ex)-.77 G(tListT).165 E
(oT)-.88 E -.165(ex)-.77 G -1.834(tProperty \().165 F/F2 11
/Times-Italic@0 SF(display).916 E F1(,).916 E F2(list)2.75 E F1(,).916 E
F2(count)2.75 E F1(,).916 E F2(style)2.75 E F1(,).916 E F2(te)2.75 E
(xt_pr)-.22 E(op_r)-.495 E(eturn)-.407 E F1(\)).916 E(Display *)88.5
356.7 Q F2(display)A F1(;).916 E(char **)88.5 369.7 Q F2(list)A F1(;)
.916 E(int)88.5 382.7 Q F2(count)2.75 E F1(;).916 E(XICCEncodingStyle)
88.5 395.7 Q F2(style)2.75 E F1(;).916 E(XT)88.5 408.7 Q -.165(ex)-.77 G
(tProperty *).165 E F2(te)A(xt_pr)-.22 E(op_r)-.495 E(eturn)-.407 E F1
(;).916 E(int XwcT)72 429.5 Q -.165(ex)-.77 G(tListT).165 E(oT)-.88 E
-.165(ex)-.77 G -1.834(tProperty \().165 F F2(display).916 E F1(,).916 E
F2(list)2.75 E F1(,).916 E F2(count)2.75 E F1(,).916 E F2(style)2.75 E
F1(,).916 E F2(te)2.75 E(xt_pr)-.22 E(op_r)-.495 E(eturn)-.407 E F1(\))
.916 E(Display *)88.5 442.5 Q F2(display)A F1(;).916 E(wchar_t **)88.5
455.5 Q F2(list)A F1(;).916 E(int)88.5 468.5 Q F2(count)2.75 E F1(;).916
E(XICCEncodingStyle)88.5 481.5 Q F2(style)2.75 E F1(;).916 E(XT)88.5
494.5 Q -.165(ex)-.77 G(tProperty *).165 E F2(te)A(xt_pr)-.22 E(op_r)
-.495 E(eturn)-.407 E F1(;).916 E(int Xutf8T)72 515.3 Q -.165(ex)-.77 G
(tListT).165 E(oT)-.88 E -.165(ex)-.77 G -1.834(tProperty \().165 F F2
(display).916 E F1(,).916 E F2(list)2.75 E F1(,).916 E F2(count)2.75 E
F1(,).916 E F2(style)2.75 E F1(,).916 E F2(te)2.75 E(xt_pr)-.22 E(op_r)
-.495 E(eturn)-.407 E F1(\)).916 E(Display *)88.5 528.3 Q F2(display)A
F1(;).916 E(char **)88.5 541.3 Q F2(list)A F1(;).916 E(int)88.5 554.3 Q
F2(count)2.75 E F1(;).916 E(XICCEncodingStyle)88.5 567.3 Q F2(style)2.75
E F1(;).916 E(XT)88.5 580.3 Q -.165(ex)-.77 G(tProperty *).165 E F2(te)A
(xt_pr)-.22 E(op_r)-.495 E(eturn)-.407 E F1(;).916 E F2(display)72 601.1
Q F1(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)
-.605 E F2(list)72 618 Q F1
(Speci\214es a list of null-terminated character strings.)58.547 E F2
(count)72 634.9 Q F1(Speci\214es the number of strings speci\214ed.)
47.558 E F2(style)72 651.8 Q F1
(Speci\214es the manner in which the property is encoded.)51.837 E F2
(te)72 668.7 Q(xt_pr)-.22 E(op_r)-.495 E(eturn)-.407 E F1(Returns the)
144 681.7 Q F0(XT)3.666 E(extPr)-1.012 E(operty)-.198 E F1(structure.)
3.666 E 36 677.35 36 688.35 DL 36 675.35 36 686.35 DL 41.5 686.6 36
686.6 DL 43.5 686.6 38 686.6 DL 49 686.6 43.5 686.6 DL(The)72 711.6 Q F0
(XmbT)3.666 E(extListT)-1.012 E(oT)-1.012 E(extPr)-1.012 E(operty)-.198
E F1(,).916 E F0(XwcT)3.666 E(extListT)-1.012 E(oT)-1.012 E(extPr)-1.012
E(operty)-.198 E F1(and)3.666 E F0(Xutf8T)3.666 E(extListT)-1.012 E(o-)
-1.012 E -1.012(Te)72 724.6 S(xtPr)1.012 E(operty)-.198 E F1
(functions set the speci\214ed)3.666 E F0(XT)3.666 E(extPr)-1.012 E
(operty)-.198 E F1 -.275(va)3.666 G(lue to a set of null-separated).275
E F0(349)279.75 769 Q 0 Cg EP
%%Page: 350 355
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E/F1 11/Times-Roman@0 SF(elements repre\
senting the concatenation of the speci\214ed list of null-terminated te)
72 85 Q(xt strings. The)-.165 E(input te)72 98 Q(xt strings must be gi)
-.165 E -.165(ve)-.275 G 2.75(ni).165 G 2.75(nt)-2.75 G
(he current locale encoding \(for)-2.75 E F0(XmbT)3.666 E(extListT)
-1.012 E(oT)-1.012 E(extPr)-1.012 E(operty)-.198 E F1(and)72 111 Q F0
(XwcT)3.666 E(extListT)-1.012 E(oT)-1.012 E(extPr)-1.012 E(operty)-.198
E F1(\), or in UTF-8 encoding \(for).916 E F0(Xutf8T)3.666 E(extListT)
-1.012 E(oT)-1.012 E(extPr)-1.012 E(operty)-.198 E F1(\).).916 E
(The functions set the encoding \214eld of te)72 127.9 Q
(xt_prop_return to an)-.165 E F0(Atom)3.666 E F1
(for the speci\214ed display)3.666 E
(naming the encoding determined by the speci\214ed style and con)72
140.9 Q -.165(ve)-.44 G(rt the speci\214ed te).165 E(xt list to this)
-.165 E(encoding for storage in the te)72 153.9 Q(xt_prop_return v)-.165
E(alue \214eld.)-.275 E(If the style)5.5 E F0(XStringStyle)3.666 E F1
(or)3.666 E F0(XCom-)3.666 E(poundT)72 166.9 Q(extStyle)-1.012 E F1
(is speci\214ed, this encoding is `)3.666 E(`STRING')-.814 E 2.75('o)
-.814 G 2.75(r`)-2.75 G(`COMPOUND_TEXT')-3.564 E(', respec-)-.814 E(ti)
72 179.9 Q -.165(ve)-.275 G(ly).165 E 5.5(.I)-.715 G 2.75(ft)-5.5 G
(he style)-2.75 E F0(XUTF8StringStyle)3.666 E F1
(is speci\214ed, this encoding is `)3.666 E(`UTF8_STRING')-.814 E
('. \(This is)-.814 E(an XFree86 e)72 192.9 Q(xtension introduced in XF\
ree86 4.0.2. Its presence is indicated by the macro)-.165 E F0(X_HA)
72.916 205.9 Q(VE_UTF8_STRING)-1.595 E F1 2.75(.\) If).916 F(the style)
2.75 E F0(XT)3.666 E(extStyle)-1.012 E F1
(is speci\214ed, this encoding is the encoding)3.666 E
(of the current locale.)72 218.9 Q(If the style)5.5 E F0(XStdICCT)3.666
E(extStyle)-1.012 E F1(is speci\214ed, this encoding is `)3.666 E
(`STRING')-.814 E 2.75('i)-.814 G(f)-2.75 E(the te)72 231.9 Q
(xt is fully con)-.165 E -.165(ve)-.44 G(rtible to STRING, else `).165 E
(`COMPOUND_TEXT')-.814 E 2.75('. A)-.814 F(\214nal terminating null)2.75
E(byte is stored at the end of the v)72 244.9 Q(alue \214eld of te)-.275
E(xt_prop_return b)-.165 E(ut is not included in the nitems)-.22 E
(member)72 257.9 Q(.)-.605 E(If insuf)72 274.8 Q(\214cient memory is a)
-.275 E -.275(va)-.22 G(ilable for the ne).275 E 2.75(wv)-.275 G
(alue string, the functions return)-3.025 E F0(XNoMemory)3.666 E F1 5.5
(.I).916 G(f)-5.5 E
(the current locale is not supported, the functions return)72 287.8 Q F0
(XLocaleNotSupported)3.666 E F1 5.5(.I).916 G 2.75(nb)-5.5 G
(oth of these)-2.75 E(error cases, the functions do not set te)72 300.8
Q(xt_prop_return.)-.165 E 1.76 -.88(To d)72 317.7 T
(etermine if the functions are guaranteed not to return).88 E F0
(XLocaleNotSupported)3.666 E F1 2.75(,u).916 G(se)-2.75 E F0(XSup-)3.666
E(portsLocale)72 330.7 Q F1(.).916 E(If the supplied te)72 347.6 Q
(xt is not fully con)-.165 E -.165(ve)-.44 G
(rtible to the speci\214ed encoding, the functions return the num-).165
E(ber of uncon)72 360.6 Q -.165(ve)-.44 G(rtible characters.).165 E
(Each uncon)5.5 E -.165(ve)-.44 G(rtible character is con).165 E -.165
(ve)-.44 G(rted to an implementation-).165 E
(de\214ned and encoding-speci\214c def)72 373.6 Q(ault string.)-.11 E
(Otherwise, the functions return)5.5 E F0(Success)3.666 E F1 5.5(.N).916
G(ote that)-5.5 E(full con)72 386.6 Q -.165(ve)-.44 G
(rtibility to all styles e).165 E(xcept)-.165 E F0(XStringStyle)3.666 E
F1(is guaranteed.)3.666 E 1.76 -.88(To f)72 403.5 T
(ree the storage for the v).88 E(alue \214eld, use)-.275 E F0(XFr)3.666
E(ee)-.198 E F1(.).916 E(The function)72 420.4 Q F0(Xutf8T)3.666 E
(extListT)-1.012 E(oT)-1.012 E(extPr)-1.012 E(operty)-.198 E F1
(is an XFree86 e)3.666 E(xtension introduced in XFree86)-.165 E
(4.0.2. Its presence is indicated by the macro)72 433.4 Q F0(X_HA)3.666
E(VE_UTF8_STRING)-1.595 E F1(.).916 E 1.76 -.88(To o)72 463.3 T
(btain a list of te).88 E(xt strings from an)-.165 E F0(XT)3.666 E
(extPr)-1.012 E(operty)-.198 E F1(structure, use)3.666 E F0(XmbT)3.666 E
(extPr)-1.012 E(opertyT)-.198 E(o-)-1.012 E -1.012(Te)72 476.3 S(xtList)
1.012 E F1(,).916 E F0(XwcT)3.666 E(extPr)-1.012 E(opertyT)-.198 E(oT)
-1.012 E(extList)-1.012 E F1(or)3.666 E F0(Xutf8T)3.666 E(extPr)-1.012 E
(opertyT)-.198 E(oT)-1.012 E(extList)-1.012 E F1(.).916 E F0(350)279.75
769 Q 0 Cg EP
%%Page: 351 356
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E .44 LW 36 76.75 36 87.75 DL 36 74.75
36 85.75 DL 41.5 73 36 73 DL 43.5 73 38 73 DL 49 73 43.5 73 DL/F1 11
/Times-Roman@0 SF(int XmbT)72 88.9 Q -.165(ex)-.77 G(tPropertyT).165 E
(oT)-.88 E -.165(ex)-.77 G -1.834(tList \().165 F/F2 11/Times-Italic@0
SF(display).916 E F1(,).916 E F2(te)2.75 E(xt_pr)-.22 E(op)-.495 E F1(,)
.916 E F2(list_r)2.75 E(eturn)-.407 E F1(,).916 E F2(count_r)2.75 E
(eturn)-.407 E F1(\)).916 E(Display *)88.5 101.9 Q F2(display)A F1(;)
.916 E(XT)88.5 114.9 Q -.165(ex)-.77 G(tProperty *).165 E F2(te)A(xt_pr)
-.22 E(op)-.495 E F1(;).916 E(char ***)88.5 127.9 Q F2(list_r)A(eturn)
-.407 E F1(;).916 E(int *)88.5 140.9 Q F2(count_r)A(eturn)-.407 E F1(;)
.916 E(int XwcT)72 161.7 Q -.165(ex)-.77 G(tPropertyT).165 E(oT)-.88 E
-.165(ex)-.77 G -1.834(tList \().165 F F2(display).916 E F1(,).916 E F2
(te)2.75 E(xt_pr)-.22 E(op)-.495 E F1(,).916 E F2(list_r)2.75 E(eturn)
-.407 E F1(,).916 E F2(count_r)2.75 E(eturn)-.407 E F1(\)).916 E
(Display *)88.5 174.7 Q F2(display)A F1(;).916 E(XT)88.5 187.7 Q -.165
(ex)-.77 G(tProperty *).165 E F2(te)A(xt_pr)-.22 E(op)-.495 E F1(;).916
E(wchar_t ***)88.5 200.7 Q F2(list_r)A(eturn)-.407 E F1(;).916 E(int *)
88.5 213.7 Q F2(count_r)A(eturn)-.407 E F1(;).916 E(int Xutf8T)72 234.5
Q -.165(ex)-.77 G(tPropertyT).165 E(oT)-.88 E -.165(ex)-.77 G -1.834
(tList \().165 F F2(display).916 E F1(,).916 E F2(te)2.75 E(xt_pr)-.22 E
(op)-.495 E F1(,).916 E F2(list_r)2.75 E(eturn)-.407 E F1(,).916 E F2
(count_r)2.75 E(eturn)-.407 E F1(\)).916 E(Display *)88.5 247.5 Q F2
(display)A F1(;).916 E(XT)88.5 260.5 Q -.165(ex)-.77 G(tProperty *).165
E F2(te)A(xt_pr)-.22 E(op)-.495 E F1(;).916 E(char ***)88.5 273.5 Q F2
(list_r)A(eturn)-.407 E F1(;).916 E(int *)88.5 286.5 Q F2(count_r)A
(eturn)-.407 E F1(;).916 E F2(display)72 307.3 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2(te)72 324.2 Q(xt_pr)-.22 E(op)-.495 E F1(Speci\214es the)30.552 E F0
(XT)3.666 E(extPr)-1.012 E(operty)-.198 E F1(structure to be used.)3.666
E F2(list_r)72 341.1 Q(eturn)-.407 E F1
(Returns a list of null-terminated character strings.)25.954 E F2
(count_r)72 358 Q(eturn)-.407 E F1(Returns the number of strings.)14.965
E 36 353.65 36 364.65 DL 36 351.65 36 362.65 DL 41.5 362.9 36 362.9 DL
43.5 362.9 38 362.9 DL 49 362.9 43.5 362.9 DL(The)72 387.9 Q F0(XmbT)
3.666 E(extPr)-1.012 E(opertyT)-.198 E(oT)-1.012 E(extList)-1.012 E F1
(,).916 E F0(XwcT)3.666 E(extPr)-1.012 E(opertyT)-.198 E(oT)-1.012 E
(extList)-1.012 E F1(and)3.666 E F0(Xutf8T)3.666 E(extPr)-1.012 E
(opertyT)-.198 E(o-)-1.012 E -1.012(Te)72 400.9 S(xtList)1.012 E F1
(functions return a list of te)3.666 E
(xt strings representing the null-separated elements of the)-.165 E
(speci\214ed)72 413.9 Q F0(XT)3.666 E(extPr)-1.012 E(operty)-.198 E F1
(structure. The returned strings are encoded using the current locale)
3.666 E(encoding \(for)72 426.9 Q F0(XmbT)3.666 E(extPr)-1.012 E
(opertyT)-.198 E(oT)-1.012 E(extList)-1.012 E F1(and)3.666 E F0(XwcT)
3.666 E(extPr)-1.012 E(opertyT)-.198 E(oT)-1.012 E(extList)-1.012 E F1
2.75(\)o).916 G 2.75(ri)-2.75 G 2.75(nU)-2.75 G(TF-8)-2.75 E(\(for)72
439.9 Q F0(Xutf8T)3.666 E(extPr)-1.012 E(opertyT)-.198 E(oT)-1.012 E
(extList)-1.012 E F1 2.75(\). The).916 F(data in te)2.75 E
(xt_prop must be format 8.)-.165 E
(Multiple elements of the property \(for e)72 456.8 Q
(xample, the strings in a disjoint te)-.165 E(xt selection\) are sepa-)
-.165 E(rated by a null byte.)72 469.8 Q(The contents of the property a\
re not required to be null-terminated; an)5.5 E 2.75(yt)-.165 G(er)-2.75
E(-)-.22 E(minating null should not be included in te)72 482.8 Q
(xt_prop.nitems.)-.165 E(If insuf)72 499.7 Q(\214cient memory is a)-.275
E -.275(va)-.22 G(ilable for the list and its elements,).275 E F0(XmbT)
3.666 E(extPr)-1.012 E(opertyT)-.198 E(oT)-1.012 E(extList)-1.012 E F1
(,).916 E F0(XwcT)72.916 512.7 Q(extPr)-1.012 E(opertyT)-.198 E(oT)
-1.012 E(extList)-1.012 E F1(and)3.666 E F0(Xutf8T)3.666 E(extPr)-1.012
E(opertyT)-.198 E(oT)-1.012 E(extList)-1.012 E F1(return)3.666 E F0
(XNoMemory)3.666 E F1 5.5(.I).916 G 2.75(ft)-5.5 G(he)-2.75 E
(current locale is not supported, the functions return)72 525.7 Q F0
(XLocaleNotSupported)3.666 E F1 5.5(.O).916 G(therwise, if the)-5.5 E
(encoding \214eld of te)72 538.7 Q(xt_prop is not con)-.165 E -.165(ve)
-.44 G(rtible to the encoding of the current locale, the functions).165
E(return)72 551.7 Q F0(XCon)3.666 E -.11(ve)-.44 G(rterNotF).11 E(ound)
-.275 E F1 5.5(.F).916 G(or supported locales, e)-5.665 E
(xistence of a con)-.165 E -.165(ve)-.44 G(rter from COM-).165 E
(POUND_TEXT)72 564.7 Q 2.75(,S)-.814 G(TRING, UTF8_STRING or the encodi\
ng of the current locale is guaranteed if)-2.75 E F0(XSupportsLocale)
72.916 577.7 Q F1(returns)3.666 E F0 -.814(Tr)3.666 G(ue).814 E F1
(for the current locale \(b)3.666 E(ut the actual te)-.22 E
(xt may contain uncon)-.165 E -.165(ve)-.44 G(rt-).165 E
(ible characters\).)72 590.7 Q(Con)5.5 E -.165(ve)-.44 G
(rsion of other encodings is implementation-dependent.).165 E
(In all of these)5.5 E(error cases, the functions do not set an)72 603.7
Q 2.75(yr)-.165 G(eturn v)-2.75 E(alues.)-.275 E(Otherwise,)72 620.6 Q
F0(XmbT)3.666 E(extPr)-1.012 E(opertyT)-.198 E(oT)-1.012 E(extList)
-1.012 E F1(,).916 E F0(XwcT)3.666 E(extPr)-1.012 E(opertyT)-.198 E(oT)
-1.012 E(extList)-1.012 E F1(and)3.666 E F0(Xutf8T)3.666 E(extPr)-1.012
E(op-)-.198 E(ertyT)72 633.6 Q(oT)-1.012 E(extList)-1.012 E F1
(return the list of null-terminated te)3.666 E
(xt strings to list_return and the number of te)-.165 E(xt)-.165 E
(strings to count_return.)72 646.6 Q(If the v)72 663.5 Q
(alue \214eld of te)-.275 E(xt_prop is not fully con)-.165 E -.165(ve)
-.44 G(rtible to the encoding of the current locale, the).165 E
(functions return the number of uncon)72 676.5 Q -.165(ve)-.44 G
(rtible characters.).165 E(Each uncon)5.5 E -.165(ve)-.44 G
(rtible character is con-).165 E -.165(ve)72 689.5 S(rted to a string i\
n the current locale that is speci\214c to the current locale.).165 E
1.76 -.88(To o)5.5 H(btain the v).88 E(alue of)-.275 E(this string, use)
72 702.5 Q F0(XDefaultString)3.666 E F1 5.5(.O).916 G(therwise,)-5.5 E
F0(XmbT)3.666 E(extPr)-1.012 E(opertyT)-.198 E(oT)-1.012 E(extList)
-1.012 E F1(,).916 E F0(XwcT)3.666 E(extPr)-1.012 E(operty-)-.198 E
-1.012(To)72 715.5 S -1.012(Te)1.012 G(xtList)1.012 E F1(and)3.666 E F0
(Xutf8T)3.666 E(extPr)-1.012 E(opertyT)-.198 E(oT)-1.012 E(extList)
-1.012 E F1(return)3.666 E F0(Success)3.666 E F1(.).916 E F0(351)279.75
769 Q 0 Cg EP
%%Page: 352 357
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E/F1 11/Times-Roman@0 SF 1.76 -.88(To f)
72 85 T(ree the storage for the list and its contents returned by).88 E
F0(XmbT)3.666 E(extPr)-1.012 E(opertyT)-.198 E(oT)-1.012 E(extList)
-1.012 E F1(or)3.666 E F0(Xutf8T)72.916 98 Q(extPr)-1.012 E(opertyT)
-.198 E(oT)-1.012 E(extList)-1.012 E F1 2.75(,u).916 G(se)-2.75 E F0
(XFr)3.666 E(eeStringList)-.198 E F1 5.5(.T).916 G 2.75(of)-6.38 G
(ree the storage for the list and its)-2.75 E(contents returned by)72
111 Q F0(XwcT)3.666 E(extPr)-1.012 E(opertyT)-.198 E(oT)-1.012 E
(extList)-1.012 E F1 2.75(,u).916 G(se)-2.75 E F0(XwcFr)3.666 E
(eeStringList)-.198 E F1(.).916 E(The function)72 127.9 Q F0(Xutf8T)
3.666 E(extPr)-1.012 E(opertyT)-.198 E(oT)-1.012 E(extList)-1.012 E F1
(is an XFree86 e)3.666 E(xtension introduced in XFree86)-.165 E
(4.0.2. Its presence is indicated by the macro)72 140.9 Q F0(X_HA)3.666
E(VE_UTF8_STRING)-1.595 E F1(.).916 E 1.76 -.88(To f)72 170.8 T(ree the\
 in-memory data associated with the speci\214ed wide character string l\
ist, use).88 E F0(XwcFr)72.916 183.8 Q(eeStringList)-.198 E F1(.).916 E
.44 LW 36 201.55 36 212.55 DL 36 199.55 36 210.55 DL 41.5 197.8 36 197.8
DL 43.5 197.8 38 197.8 DL 49 197.8 43.5 197.8 DL -.22(vo)72 213.7 S
(id XwcFreeStringList).22 E(\().916 E/F2 11/Times-Italic@0 SF(list).916
E F1(\)).916 E(wchar_t **)88.5 226.7 Q F2(list)A F1(;).916 E F2(list)72
247.5 Q F1(Speci\214es the list of strings to be freed.)58.547 E 36
243.15 36 254.15 DL 36 241.15 36 252.15 DL 41.5 252.4 36 252.4 DL 43.5
252.4 38 252.4 DL 49 252.4 43.5 252.4 DL(The)72 277.4 Q F0(XwcFr)3.666 E
(eeStringList)-.198 E F1(function frees memory allocated by)3.666 E F0
(XwcT)3.666 E(extPr)-1.012 E(opertyT)-.198 E(oT)-1.012 E(extList)-1.012
E F1(.).916 E 1.76 -.88(To o)72 307.3 T(btain the def).88 E
(ault string for te)-.11 E(xt con)-.165 E -.165(ve)-.44 G
(rsion in the current locale, use).165 E F0(XDefaultString)3.666 E F1(.)
.916 E 36 325.05 36 336.05 DL 36 323.05 36 334.05 DL 41.5 321.3 36 321.3
DL 43.5 321.3 38 321.3 DL 49 321.3 43.5 321.3 DL(char *XDef)72 337.2 Q
-1.834(aultString \()-.11 F(\))1.833 E 36 336.75 36 347.75 DL 36 334.75
36 345.75 DL 41.5 346 36 346 DL 43.5 346 38 346 DL 49 346 43.5 346 DL
(The)72 371 Q F0(XDefaultString)3.666 E F1(function returns the def)
3.666 E(ault string used by Xlib for te)-.11 E(xt con)-.165 E -.165(ve)
-.44 G(rsion \(for).165 E -.165(ex)72 384 S(ample, in).165 E F0(XmbT)
3.666 E(extPr)-1.012 E(opertyT)-.198 E(oT)-1.012 E(extList)-1.012 E F1
2.75(\). The).916 F(def)2.75 E
(ault string is the string in the current locale)-.11 E
(that is output when an uncon)72 397 Q -.165(ve)-.44 G
(rtible character is found during te).165 E(xt con)-.165 E -.165(ve)-.44
G 2.75(rsion. If).165 F(the string)2.75 E(returned by)72 410 Q F0
(XDefaultString)3.666 E F1(is the empty string \(")3.666 E
("\), no character is output in the con).916 E -.165(ve)-.44 G(rted te)
.165 E(xt.)-.165 E F0(XDefaultString)72.916 423 Q F1
(does not return NULL.)3.666 E(The string returned by)72 439.9 Q F0
(XDefaultString)3.666 E F1(is independent of the def)3.666 E
(ault string for te)-.11 E(xt dra)-.165 E(wing; see)-.165 E F0(XCr)
72.916 452.9 Q(eateF)-.198 E(ontSet)-.275 E F1(to obtain the def)3.666 E
(ault string for an)-.11 E F0(XF)3.666 E(ontSet)-.275 E F1(.).916 E
(The beha)72 469.8 Q(vior when an in)-.22 E -.275(va)-.44 G
(lid codepoint is supplied to an).275 E 2.75(yX)-.165 G
(lib function is unde\214ned.)-2.75 E
(The returned string is null-terminated.)72 486.7 Q(It is o)5.5 E
(wned by Xlib and should not be modi\214ed or freed by)-.275 E
(the client.)72 499.7 Q
(It may be freed after the current locale is changed.)5.5 E
(Until freed, it will not be modi\214ed)5.5 E(by Xlib)72 512.7 Q(.)-.44
E 1.76 -.88(To s)72 542.6 T
(et the speci\214ed list of strings in the STRING encoding to a).88 E F0
(XT)3.666 E(extPr)-1.012 E(operty)-.198 E F1(structure, use)3.666 E F0
(XStringListT)72.916 555.6 Q(oT)-1.012 E(extPr)-1.012 E(operty)-.198 E
F1(.).916 E 36 573.35 36 584.35 DL 36 571.35 36 582.35 DL 41.5 569.6 36
569.6 DL 43.5 569.6 38 569.6 DL 49 569.6 43.5 569.6 DL
(Status XStringListT)72 585.5 Q(oT)-.88 E -.165(ex)-.77 G -1.834
(tProperty \().165 F F2(list).916 E F1(,)A F2(count)2.75 E F1(,)A F2(te)
2.75 E(xt_pr)-.22 E(op_r)-.495 E(eturn)-.407 E F1(\)).916 E(char **)88.5
598.5 Q F2(list)A F1(;).916 E(int)88.5 611.5 Q F2(count)2.75 E F1(;).916
E(XT)88.5 624.5 Q -.165(ex)-.77 G(tProperty *).165 E F2(te)A(xt_pr)-.22
E(op_r)-.495 E(eturn)-.407 E F1(;).916 E F2(list)72 645.3 Q F1
(Speci\214es a list of null-terminated character strings.)58.547 E F2
(count)72 662.2 Q F1(Speci\214es the number of strings.)47.558 E F2(te)
72 679.1 Q(xt_pr)-.22 E(op_r)-.495 E(eturn)-.407 E F1(Returns the)144
692.1 Q F0(XT)3.666 E(extPr)-1.012 E(operty)-.198 E F1(structure.)3.666
E 36 687.75 36 698.75 DL 36 685.75 36 696.75 DL 41.5 697 36 697 DL 43.5
697 38 697 DL 49 697 43.5 697 DL(The)72 722 Q F0(XStringListT)3.666 E
(oT)-1.012 E(extPr)-1.012 E(operty)-.198 E F1
(function sets the speci\214ed)3.666 E F0(XT)3.666 E(extPr)-1.012 E
(operty)-.198 E F1(to be of type)3.666 E F0(352)279.75 769 Q 0 Cg EP
%%Page: 353 358
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E/F1 11/Times-Roman@0 SF
(STRING \(format 8\) with a v)72 85 Q(alue representing the concatenati\
on of the speci\214ed list of null-sepa-)-.275 E
(rated character strings.)72 98 Q(An e)5.5 E(xtra null byte \(which is \
not included in the nitems member\) is stored)-.165 E
(at the end of the v)72 111 Q(alue \214eld of te)-.275 E 2.75
(xt_prop_return. The)-.165 F(strings are assumed \(without v)2.75 E
(eri\214cation\) to)-.165 E(be in the STRING encoding.)72 124 Q
(If insuf)5.5 E(\214cient memory is a)-.275 E -.275(va)-.22 G
(ilable for the ne).275 E 2.75(wv)-.275 G(alue string,)-3.025 E F0
(XStringListT)72.916 137 Q(oT)-1.012 E(extPr)-1.012 E(operty)-.198 E F1
(does not set an)3.666 E 2.75<798c>-.165 G(elds in the)-2.75 E F0(XT)
3.666 E(extPr)-1.012 E(operty)-.198 E F1(structure and returns)3.666 E
2.75(az)72 150 S(ero status.)-2.75 E
(Otherwise, it returns a nonzero status.)5.5 E 1.76 -.88(To f)5.5 H
(ree the storage for the v).88 E(alue \214eld, use)-.275 E F0(XFr)72.916
163 Q(ee)-.198 E F1(.).916 E 1.76 -.88(To o)72 192.9 T
(btain a list of strings from a speci\214ed).88 E F0(XT)3.666 E(extPr)
-1.012 E(operty)-.198 E F1(structure in the STRING encoding,)3.666 E
(use)72 205.9 Q F0(XT)3.666 E(extPr)-1.012 E(opertyT)-.198 E
(oStringList)-1.012 E F1(.).916 E .44 LW 36 223.65 36 234.65 DL 36
221.65 36 232.65 DL 41.5 219.9 36 219.9 DL 43.5 219.9 38 219.9 DL 49
219.9 43.5 219.9 DL(Status XT)72 235.8 Q -.165(ex)-.77 G(tPropertyT).165
E -1.834(oStringList \()-.88 F/F2 11/Times-Italic@0 SF(te).916 E(xt_pr)
-.22 E(op)-.495 E F1(,)A F2(list_r)2.75 E(eturn)-.407 E F1(,)A F2
(count_r)2.75 E(eturn)-.407 E F1(\)).916 E(XT)91.25 248.8 Q -.165(ex)
-.77 G(tProperty *).165 E F2(te)A(xt_pr)-.22 E(op)-.495 E F1(;).916 E
(char ***)91.25 261.8 Q F2(list_r)A(eturn)-.407 E F1(;).916 E(int *)
91.25 274.8 Q F2(count_r)A(eturn)-.407 E F1(;).916 E F2(te)72 295.6 Q
(xt_pr)-.22 E(op)-.495 E F1(Speci\214es the)30.552 E F0(XT)3.666 E
(extPr)-1.012 E(operty)-.198 E F1(structure to be used.)3.666 E F2
(list_r)72 312.5 Q(eturn)-.407 E F1
(Returns a list of null-terminated character strings.)25.954 E F2
(count_r)72 329.4 Q(eturn)-.407 E F1(Returns the number of strings.)
14.965 E 36 325.05 36 336.05 DL 36 323.05 36 334.05 DL 41.5 334.3 36
334.3 DL 43.5 334.3 38 334.3 DL 49 334.3 43.5 334.3 DL(The)72 359.3 Q F0
(XT)3.666 E(extPr)-1.012 E(opertyT)-.198 E(oStringList)-1.012 E F1
(function returns a list of strings representing the null-separated)
3.666 E(elements of the speci\214ed)72 372.3 Q F0(XT)3.666 E(extPr)
-1.012 E(operty)-.198 E F1 2.75(structure. The)3.666 F(data in te)2.75 E
(xt_prop must be of type)-.165 E(STRING and format 8.)72 385.3 Q
(Multiple elements of the property \(for e)5.5 E
(xample, the strings in a disjoint)-.165 E(te)72 398.3 Q
(xt selection\) are separated by NULL \(encoding 0\).)-.165 E
(The contents of the property are not null-ter)5.5 E(-)-.22 E 2.75
(minated. If)72 411.3 R(insuf)2.75 E(\214cient memory is a)-.275 E -.275
(va)-.22 G(ilable for the list and its elements,).275 E F0(XT)3.666 E
(extPr)-1.012 E(operty-)-.198 E -1.012(To)72 424.3 S(StringList)1.012 E
F1(sets no return v)3.666 E(alues and returns a zero status.)-.275 E
(Otherwise, it returns a nonzero sta-)5.5 E 2.75(tus. T)72 437.3 R 2.75
(of)-.88 G(ree the storage for the list and its contents, use)-2.75 E F0
(XFr)3.666 E(eeStringList)-.198 E F1(.).916 E 1.76 -.88(To f)72 467.2 T
(ree the in-memory data associated with the speci\214ed string list, us\
e).88 E F0(XFr)3.666 E(eeStringList)-.198 E F1(.).916 E 36 484.95 36
495.95 DL 36 482.95 36 493.95 DL 41.5 481.2 36 481.2 DL 43.5 481.2 38
481.2 DL 49 481.2 43.5 481.2 DL -.22(vo)72 497.1 S(id XFreeStringList)
.22 E(\().916 E F2(list).916 E F1(\)).916 E(char **)88.5 510.1 Q F2
(list)A F1(;).916 E F2(list)72 530.9 Q F1
(Speci\214es the list of strings to be freed.)58.547 E 36 526.55 36
537.55 DL 36 524.55 36 535.55 DL 41.5 535.8 36 535.8 DL 43.5 535.8 38
535.8 DL 49 535.8 43.5 535.8 DL(The)72 560.8 Q F0(XFr)3.666 E
(eeStringList)-.198 E F1(function releases memory allocated by)3.666 E
F0(XmbT)3.666 E(extPr)-1.012 E(opertyT)-.198 E(oT)-1.012 E(extList)
-1.012 E F1(,).916 E F0(Xutf8T)72.916 573.8 Q(extPr)-1.012 E(opertyT)
-.198 E(oT)-1.012 E(extList)-1.012 E F1(and)3.666 E F0(XT)3.666 E(extPr)
-1.012 E(opertyT)-.198 E(oStringList)-1.012 E F1
(and the missing charset list)3.666 E(allocated by)72 586.8 Q F0(XCr)
3.666 E(eateF)-.198 E(ontSet)-.275 E F1(.).916 E F0 2.75
(14.1.3. Setting)72 612.8 R(and Reading T)2.75 E(ext Pr)-1.012 E
(operties)-.198 E F1(Xlib pro)72 629.7 Q(vides tw)-.165 E 2.75(of)-.11 G
(unctions that you can use to set and read the te)-2.75 E
(xt properties for a gi)-.165 E -.165(ve)-.275 G 2.75(nw).165 G(in-)
-2.75 E(do)72 642.7 Q 4.18 -.715(w. Y)-.275 H(ou can use these function\
s to set and read those properties of type TEXT \(WM_N)-.495 E(AME,)
-.385 E(WM_ICON_N)72 655.7 Q(AME, WM_COMMAND, and WM_CLIENT_MA)-.385 E
2.75(CHINE\). In)-.44 F(addition, Xlib pro-)2.75 E(vides separate con)72
668.7 Q -.165(ve)-.44 G
(nience functions that you can use to set each of these properties.).165
E -.165(Fo)5.5 G 2.75(rf).165 G(urther)-2.75 E
(information about these con)72 681.7 Q -.165(ve)-.44 G
(nience functions, see sections 14.1.4, 14.1.5, 14.2.1, and 14.2.2,).165
E(respecti)72 694.7 Q -.165(ve)-.275 G(ly).165 E(.)-.715 E F0(353)279.75
769 Q 0 Cg EP
%%Page: 354 359
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E/F1 11/Times-Roman@0 SF 1.76 -.88(To s)
72 85 T(et one of a windo).88 E(w')-.275 E 2.75(st)-.605 G -.165(ex)
-2.75 G 2.75(tp).165 G(roperties, use)-2.75 E F0(XSetT)3.666 E(extPr)
-1.012 E(operty)-.198 E F1(.).916 E .44 LW 36 102.75 36 113.75 DL 36
100.75 36 111.75 DL 41.5 99 36 99 DL 43.5 99 38 99 DL 49 99 43.5 99 DL
-.22(vo)72 114.9 S(id XSetT).22 E -.165(ex)-.77 G -1.834(tProperty \()
.165 F/F2 11/Times-Italic@0 SF(display).916 E F1(,)A F2(w)2.75 E F1(,)A
F2(te)2.75 E(xt_pr)-.22 E(op)-.495 E F1(,)A F2(pr)2.75 E(operty)-.495 E
F1(\)).916 E(Display *)88.5 127.9 Q F2(display)A F1(;).916 E -.44(Wi)
88.5 140.9 S(ndo).44 E(w)-.275 E F2(w)2.75 E F1(;).916 E(XT)88.5 153.9 Q
-.165(ex)-.77 G(tProperty *).165 E F2(te)A(xt_pr)-.22 E(op)-.495 E F1(;)
.916 E(Atom)88.5 166.9 Q F2(pr)2.75 E(operty)-.495 E F1(;).916 E F2
(display)72 187.7 Q F1(Speci\214es the connection to the X serv)40.221 E
(er)-.165 E(.)-.605 E F2(w)72 204.6 Q F1(Speci\214es the windo)64.663 E
-.715(w.)-.275 G F2(te)72 221.5 Q(xt_pr)-.22 E(op)-.495 E F1
(Speci\214es the)30.552 E F0(XT)3.666 E(extPr)-1.012 E(operty)-.198 E F1
(structure to be used.)3.666 E F2(pr)72 238.4 Q(operty)-.495 E F1
(Speci\214es the property name.)34.611 E 36 234.05 36 245.05 DL 36
232.05 36 243.05 DL 41.5 243.3 36 243.3 DL 43.5 243.3 38 243.3 DL 49
243.3 43.5 243.3 DL(The)72 268.3 Q F0(XSetT)3.666 E(extPr)-1.012 E
(operty)-.198 E F1(function replaces the e)3.666 E
(xisting speci\214ed property for the named windo)-.165 E(w)-.275 E
(with the data, type, format, and number of items determined by the v)72
281.3 Q(alue \214eld, the encoding \214eld,)-.275 E
(the format \214eld, and the nitems \214eld, respecti)72 294.3 Q -.165
(ve)-.275 G(ly).165 E 2.75(,o)-.715 G 2.75(ft)-2.75 G(he speci\214ed)
-2.75 E F0(XT)3.666 E(extPr)-1.012 E(operty)-.198 E F1 2.75
(structure. If)3.666 F(the property does not already e)72 307.3 Q(xist,)
-.165 E F0(XSetT)3.666 E(extPr)-1.012 E(operty)-.198 E F1
(sets it for the speci\214ed windo)3.666 E -.715(w.)-.275 G F0(XSetT)
72.916 324.2 Q(extPr)-1.012 E(operty)-.198 E F1(can generate)3.666 E F0
(BadAlloc)3.666 E F1(,).916 E F0(BadAtom)3.666 E F1(,).916 E F0(BadV)
3.666 E(alue)-1.012 E F1 2.75(,a).916 G(nd)-2.75 E F0(BadW)3.666 E(indo)
-.198 E(w)-.11 E F1(errors.)3.666 E 1.76 -.88(To r)72 354.1 T
(ead one of a windo).88 E(w')-.275 E 2.75(st)-.605 G -.165(ex)-2.75 G
2.75(tp).165 G(roperties, use)-2.75 E F0(XGetT)3.666 E(extPr)-1.012 E
(operty)-.198 E F1(.).916 E 36 371.85 36 382.85 DL 36 369.85 36 380.85
DL 41.5 368.1 36 368.1 DL 43.5 368.1 38 368.1 DL 49 368.1 43.5 368.1 DL
(Status XGetT)72 384 Q -.165(ex)-.77 G -1.834(tProperty \().165 F F2
(display).916 E F1(,)A F2(w)2.75 E F1(,)A F2(te)2.75 E(xt_pr)-.22 E
(op_r)-.495 E(eturn)-.407 E F1(,)A F2(pr)2.75 E(operty)-.495 E F1(\))
.916 E(Display *)91.25 397 Q F2(display)A F1(;).916 E -.44(Wi)91.25 410
S(ndo).44 E(w)-.275 E F2(w)2.75 E F1(;).916 E(XT)91.25 423 Q -.165(ex)
-.77 G(tProperty *).165 E F2(te)A(xt_pr)-.22 E(op_r)-.495 E(eturn)-.407
E F1(;).916 E(Atom)91.25 436 Q F2(pr)2.75 E(operty)-.495 E F1(;).916 E
F2(display)72 456.8 Q F1(Speci\214es the connection to the X serv)40.221
E(er)-.165 E(.)-.605 E F2(w)72 473.7 Q F1(Speci\214es the windo)64.663 E
-.715(w.)-.275 G F2(te)72 490.6 Q(xt_pr)-.22 E(op_r)-.495 E(eturn)-.407
E F1(Returns the)144 503.6 Q F0(XT)3.666 E(extPr)-1.012 E(operty)-.198 E
F1(structure.)3.666 E F2(pr)72 520.5 Q(operty)-.495 E F1
(Speci\214es the property name.)34.611 E 36 516.15 36 527.15 DL 36
514.15 36 525.15 DL 41.5 525.4 36 525.4 DL 43.5 525.4 38 525.4 DL 49
525.4 43.5 525.4 DL(The)72 550.4 Q F0(XGetT)3.666 E(extPr)-1.012 E
(operty)-.198 E F1
(function reads the speci\214ed property from the windo)3.666 E 2.75(wa)
-.275 G(nd stores the)-2.75 E(data in the returned)72 563.4 Q F0(XT)
3.666 E(extPr)-1.012 E(operty)-.198 E F1 2.75(structure. It)3.666 F
(stores the data in the v)2.75 E(alue \214eld, the type of the)-.275 E(\
data in the encoding \214eld, the format of the data in the format \214\
eld, and the number of items of)72 576.4 Q(data in the nitems \214eld.)
72 589.4 Q(An e)5.5 E
(xtra byte containing null \(which is not included in the nitems mem-)
-.165 E(ber\) is stored at the end of the v)72 602.4 Q
(alue \214eld of te)-.275 E 2.75(xt_prop_return. The)-.165 F
(particular interpretation of the)2.75 E(property')72 615.4 Q 2.75(se)
-.605 G(ncoding and data as te)-2.75 E
(xt is left to the calling application.)-.165 E
(If the speci\214ed property)5.5 E(does not e)72 628.4 Q
(xist on the windo)-.165 E -.715(w,)-.275 G F0(XGetT)4.381 E(extPr)
-1.012 E(operty)-.198 E F1(sets the v)3.666 E
(alue \214eld to NULL, the encoding)-.275 E(\214eld to)72 641.4 Q F0
(None)3.666 E F1 2.75(,t).916 G
(he format \214eld to zero, and the nitems \214eld to zero.)-2.75 E
(If it w)72 658.3 Q(as able to read and store the data in the)-.11 E F0
(XT)3.666 E(extPr)-1.012 E(operty)-.198 E F1(structure,)3.666 E F0
(XGetT)3.666 E(extPr)-1.012 E(operty)-.198 E F1
(returns a nonzero status; otherwise, it returns a zero status.)72 671.3
Q F0(XGetT)72.916 688.2 Q(extPr)-1.012 E(operty)-.198 E F1(can generate)
3.666 E F0(BadAtom)3.666 E F1(and)3.666 E F0(BadW)3.666 E(indo)-.198 E
(w)-.11 E F1(errors.)3.666 E F0(354)279.75 769 Q 0 Cg EP
%%Page: 355 360
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E 2.75(14.1.4. Setting)72 85 R
(and Reading the WM_N)2.75 E(AME Pr)-.22 E(operty)-.198 E/F1 11
/Times-Roman@0 SF(Xlib pro)72 101.9 Q(vides con)-.165 E -.165(ve)-.44 G
(nience functions that you can use to set and read the WM_N).165 E
(AME property)-.385 E(for a gi)72 114.9 Q -.165(ve)-.275 G 2.75(nw).165
G(indo)-2.75 E -.715(w.)-.275 G 1.76 -.88(To s)72 144.8 T(et a windo).88
E(w')-.275 E 2.75(sW)-.605 G(M_N)-2.75 E
(AME property with the supplied con)-.385 E -.165(ve)-.44 G
(nience function, use).165 E F0(XSetWM-)3.666 E(Name)72 157.8 Q F1(.)
.916 E .44 LW 36 175.55 36 186.55 DL 36 173.55 36 184.55 DL 41.5 171.8
36 171.8 DL 43.5 171.8 38 171.8 DL 49 171.8 43.5 171.8 DL -.22(vo)72
187.7 S(id XSetWMName).22 E(\().916 E/F2 11/Times-Italic@0 SF(display)
.916 E F1(,)A F2(w)2.75 E F1(,)A F2(te)2.75 E(xt_pr)-.22 E(op)-.495 E F1
(\)).916 E(Display *)88.5 200.7 Q F2(display)A F1(;).916 E -.44(Wi)88.5
213.7 S(ndo).44 E(w)-.275 E F2(w)2.75 E F1(;).916 E(XT)88.5 226.7 Q
-.165(ex)-.77 G(tProperty *).165 E F2(te)A(xt_pr)-.22 E(op)-.495 E F1(;)
.916 E F2(display)72 247.5 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2(w)72 264.4 Q F1(Speci\214es the windo)64.663 E -.715(w.)-.275 G F2
(te)72 281.3 Q(xt_pr)-.22 E(op)-.495 E F1(Speci\214es the)30.552 E F0
(XT)3.666 E(extPr)-1.012 E(operty)-.198 E F1(structure to be used.)3.666
E 36 276.95 36 287.95 DL 36 274.95 36 285.95 DL 41.5 286.2 36 286.2 DL
43.5 286.2 38 286.2 DL 49 286.2 43.5 286.2 DL(The)72 311.2 Q F0
(XSetWMName)3.666 E F1(con)3.666 E -.165(ve)-.44 G
(nience function calls).165 E F0(XSetT)3.666 E(extPr)-1.012 E(operty)
-.198 E F1(to set the WM_N)3.666 E(AME prop-)-.385 E(erty)72 324.2 Q(.)
-.715 E 1.76 -.88(To r)72 354.1 T(ead a windo).88 E(w')-.275 E 2.75(sW)
-.605 G(M_N)-2.75 E(AME property with the supplied con)-.385 E -.165(ve)
-.44 G(nience function, use).165 E F0(XGetWMName)72.916 367.1 Q F1(.)
.916 E 36 384.85 36 395.85 DL 36 382.85 36 393.85 DL 41.5 381.1 36 381.1
DL 43.5 381.1 38 381.1 DL 49 381.1 43.5 381.1 DL(Status XGetWMName)72
397 Q(\().916 E F2(display).916 E F1(,)A F2(w)2.75 E F1(,)A F2(te)2.75 E
(xt_pr)-.22 E(op_r)-.495 E(eturn)-.407 E F1(\)).916 E(Display *)88.5 410
Q F2(display)A F1(;).916 E -.44(Wi)88.5 423 S(ndo).44 E(w)-.275 E F2(w)
2.75 E F1(;).916 E(XT)88.5 436 Q -.165(ex)-.77 G(tProperty *).165 E F2
(te)A(xt_pr)-.22 E(op_r)-.495 E(eturn)-.407 E F1(;).916 E F2(display)72
456.8 Q F1(Speci\214es the connection to the X serv)40.221 E(er)-.165 E
(.)-.605 E F2(w)72 473.7 Q F1(Speci\214es the windo)64.663 E -.715(w.)
-.275 G F2(te)72 490.6 Q(xt_pr)-.22 E(op_r)-.495 E(eturn)-.407 E F1
(Returns the)144 503.6 Q F0(XT)3.666 E(extPr)-1.012 E(operty)-.198 E F1
(structure.)3.666 E 36 499.25 36 510.25 DL 36 497.25 36 508.25 DL 41.5
508.5 36 508.5 DL 43.5 508.5 38 508.5 DL 49 508.5 43.5 508.5 DL(The)72
533.5 Q F0(XGetWMName)3.666 E F1(con)3.666 E -.165(ve)-.44 G
(nience function calls).165 E F0(XGetT)3.666 E(extPr)-1.012 E(operty)
-.198 E F1(to obtain the WM_N)3.666 E(AME)-.385 E(property)72 546.5 Q
5.5(.I)-.715 G 2.75(tr)-5.5 G(eturns a nonzero status on success; other\
wise, it returns a zero status.)-2.75 E(The follo)72 563.4 Q(wing tw)
-.275 E 2.75(of)-.11 G(unctions ha)-2.75 E .33 -.165(ve b)-.22 H
(een superseded by).165 E F0(XSetWMName)3.666 E F1(and)3.666 E F0
(XGetWMName)3.666 E F1(,).916 E(respecti)72 576.4 Q -.165(ve)-.275 G(ly)
.165 E 5.5(.Y)-.715 G(ou can use these additional con)-6.71 E -.165(ve)
-.44 G(nience functions for windo).165 E 2.75(wn)-.275 G(ames that are)
-2.75 E(encoded as STRING properties.)72 589.4 Q 1.76 -.88(To a)72 619.3
T(ssign a name to a windo).88 E 1.43 -.715(w, u)-.275 H(se).715 E F0
(XStor)3.666 E(eName)-.198 E F1(.).916 E F0(355)279.75 769 Q 0 Cg EP
%%Page: 356 361
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E .44 LW 36 76.75 36 87.75 DL 36 74.75
36 85.75 DL 41.5 73 36 73 DL 43.5 73 38 73 DL 49 73 43.5 73 DL/F1 11
/Times-Roman@0 SF -1.834(XStoreName \()72 88.9 R/F2 11/Times-Italic@0 SF
(display).916 E F1(,)A F2(w)2.75 E F1(,).916 E F2(window_name)2.75 E F1
(\)).916 E(Display *)88.5 101.9 Q F2(display)A F1(;).916 E -.44(Wi)88.5
114.9 S(ndo).44 E(w)-.275 E F2(w)2.75 E F1(;).916 E(char *)88.5 127.9 Q
F2(window_name)A F1(;).916 E F2(display)72 148.7 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2(w)72 165.6 Q F1(Speci\214es the windo)64.663 E -.715(w.)-.275 G F2
(window_name)72 182.5 Q F1(Speci\214es the windo)8.442 E 2.75(wn)-.275 G
(ame, which should be a null-terminated string.)-2.75 E 36 178.15 36
189.15 DL 36 176.15 36 187.15 DL 41.5 187.4 36 187.4 DL 43.5 187.4 38
187.4 DL 49 187.4 43.5 187.4 DL(The)72 212.4 Q F0(XStor)3.666 E(eName)
-.198 E F1(function assigns the name passed to windo)3.666 E
(w_name to the speci\214ed windo)-.275 E -.715(w.)-.275 G 2.75(Aw)72
225.4 S(indo)-2.75 E 2.75(wm)-.275 G(anager can display the windo)-2.75
E 2.75(wn)-.275 G(ame in some prominent place, such as the title bar)
-2.75 E(,)-.44 E(to allo)72 238.4 Q 2.75(wu)-.275 G
(sers to identify windo)-2.75 E(ws easily)-.275 E 5.5(.S)-.715 G
(ome windo)-5.5 E 2.75(wm)-.275 G(anagers may display a windo)-2.75 E
(w')-.275 E 2.75(sn)-.605 G(ame)-2.75 E(in the windo)72 251.4 Q(w')-.275
E 2.75(si)-.605 G(con, although the)-2.75 E 2.75(ya)-.165 G
(re encouraged to use the windo)-2.75 E(w')-.275 E 2.75(si)-.605 G
(con name if one is pro-)-2.75 E(vided by the application.)72 264.4 Q(I\
f the string is not in the Host Portable Character Encoding, the result\
 is)5.5 E(implementation-dependent.)72 277.4 Q F0(XStor)72.916 294.3 Q
(eName)-.198 E F1(can generate)3.666 E F0(BadAlloc)3.666 E F1(and)3.666
E F0(BadW)3.666 E(indo)-.198 E(w)-.11 E F1(errors.)3.666 E 1.76 -.88
(To g)72 324.2 T(et the name of a windo).88 E 1.43 -.715(w, u)-.275 H
(se).715 E F0(XF)3.666 E(etchName)-.275 E F1(.).916 E 36 341.95 36
352.95 DL 36 339.95 36 350.95 DL 41.5 338.2 36 338.2 DL 43.5 338.2 38
338.2 DL 49 338.2 43.5 338.2 DL(Status XFetchName)72 354.1 Q(\().916 E
F2(display).916 E F1(,)A F2(w)2.75 E F1(,).916 E F2(window_name_r)2.75 E
(eturn)-.407 E F1(\)).916 E(Display *)88.5 367.1 Q F2(display)A F1(;)
.916 E -.44(Wi)88.5 380.1 S(ndo).44 E(w)-.275 E F2(w)2.75 E F1(;).916 E
(char **)88.5 393.1 Q F2(window_name_r)A(eturn)-.407 E F1(;).916 E F2
(display)72 413.9 Q F1(Speci\214es the connection to the X serv)40.221 E
(er)-.165 E(.)-.605 E F2(w)72 430.8 Q F1(Speci\214es the windo)64.663 E
-.715(w.)-.275 G F2(window_name_r)72 447.7 Q(eturn)-.407 E F1
(Returns the windo)144 460.7 Q 2.75(wn)-.275 G
(ame, which is a null-terminated string.)-2.75 E 36 456.35 36 467.35 DL
36 454.35 36 465.35 DL 41.5 465.6 36 465.6 DL 43.5 465.6 38 465.6 DL 49
465.6 43.5 465.6 DL(The)72 490.6 Q F0(XF)3.666 E(etchName)-.275 E F1
(function returns the name of the speci\214ed windo)3.666 E 4.18 -.715
(w. I)-.275 H 2.75(fi).715 G 2.75(ts)-2.75 G(ucceeds, it returns a)-2.75
E(nonzero status; otherwise, no name has been set for the windo)72 503.6
Q 1.43 -.715(w, a)-.275 H(nd it returns zero.).715 E(If the)5.5 E(WM_N)
72 516.6 Q(AME property has not been set for this windo)-.385 E -.715
(w,)-.275 G F0(XF)4.381 E(etchName)-.275 E F1(sets windo)3.666 E
(w_name_return)-.275 E(to NULL.)72 529.6 Q
(If the data returned by the serv)5.5 E
(er is in the Latin Portable Character Encoding, then the)-.165 E
(returned string is in the Host Portable Character Encoding.)72 542.6 Q
(Otherwise, the result is implementa-)5.5 E 2.75(tion-dependent. When)72
555.6 R(\214nished with it, a client must free the windo)2.75 E 2.75(wn)
-.275 G(ame string using)-2.75 E F0(XFr)3.666 E(ee)-.198 E F1(.).916 E
F0(XF)72.916 572.5 Q(etchName)-.275 E F1(can generate a)3.666 E F0(BadW)
3.666 E(indo)-.198 E(w)-.11 E F1(error)3.666 E(.)-.605 E F0 2.75
(14.1.5. Setting)72 598.5 R(and Reading the WM_ICON_N)2.75 E(AME Pr)-.22
E(operty)-.198 E F1(Xlib pro)72 615.4 Q(vides con)-.165 E -.165(ve)-.44
G(nience functions that you can use to set and read the WM_ICON_N).165 E
(AME)-.385 E(property for a gi)72 628.4 Q -.165(ve)-.275 G 2.75(nw).165
G(indo)-2.75 E -.715(w.)-.275 G 1.76 -.88(To s)72 658.3 T(et a windo).88
E(w')-.275 E 2.75(sW)-.605 G(M_ICON_N)-2.75 E(AME property)-.385 E 2.75
(,u)-.715 G(se)-2.75 E F0(XSetWMIconName)3.666 E F1(.).916 E F0(356)
279.75 769 Q 0 Cg EP
%%Page: 357 362
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E .44 LW 36 76.75 36 87.75 DL 36 74.75
36 85.75 DL 41.5 73 36 73 DL 43.5 73 38 73 DL 49 73 43.5 73 DL/F1 11
/Times-Roman@0 SF -.22(vo)72 88.9 S(id XSetWMIconName).22 E(\().916 E/F2
11/Times-Italic@0 SF(display).916 E F1(,)A F2(w)2.75 E F1(,)A F2(te)2.75
E(xt_pr)-.22 E(op)-.495 E F1(\)).916 E(Display *)88.5 101.9 Q F2
(display)A F1(;).916 E -.44(Wi)88.5 114.9 S(ndo).44 E(w)-.275 E F2(w)
2.75 E F1(;).916 E(XT)88.5 127.9 Q -.165(ex)-.77 G(tProperty *).165 E F2
(te)A(xt_pr)-.22 E(op)-.495 E F1(;).916 E F2(display)72 148.7 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2(w)72 165.6 Q F1(Speci\214es the windo)64.663 E -.715(w.)-.275 G F2
(te)72 182.5 Q(xt_pr)-.22 E(op)-.495 E F1(Speci\214es the)30.552 E F0
(XT)3.666 E(extPr)-1.012 E(operty)-.198 E F1(structure to be used.)3.666
E 36 178.15 36 189.15 DL 36 176.15 36 187.15 DL 41.5 187.4 36 187.4 DL
43.5 187.4 38 187.4 DL 49 187.4 43.5 187.4 DL(The)72 212.4 Q F0
(XSetWMIconName)3.666 E F1(con)3.666 E -.165(ve)-.44 G
(nience function calls).165 E F0(XSetT)3.666 E(extPr)-1.012 E(operty)
-.198 E F1(to set the)3.666 E(WM_ICON_N)72 225.4 Q(AME property)-.385 E
(.)-.715 E 1.76 -.88(To r)72 255.3 T(ead a windo).88 E(w')-.275 E 2.75
(sW)-.605 G(M_ICON_N)-2.75 E(AME property)-.385 E 2.75(,u)-.715 G(se)
-2.75 E F0(XGetWMIconName)3.666 E F1(.).916 E 36 273.05 36 284.05 DL 36
271.05 36 282.05 DL 41.5 269.3 36 269.3 DL 43.5 269.3 38 269.3 DL 49
269.3 43.5 269.3 DL(Status XGetWMIconName)72 285.2 Q(\().916 E F2
(display).916 E F1(,)A F2(w)2.75 E F1(,)A F2(te)2.75 E(xt_pr)-.22 E
(op_r)-.495 E(eturn)-.407 E F1(\)).916 E(Display *)88.5 298.2 Q F2
(display)A F1(;).916 E -.44(Wi)88.5 311.2 S(ndo).44 E(w)-.275 E F2(w)
2.75 E F1(;).916 E(XT)88.5 324.2 Q -.165(ex)-.77 G(tProperty *).165 E F2
(te)A(xt_pr)-.22 E(op_r)-.495 E(eturn)-.407 E F1(;).916 E F2(display)72
345 Q F1(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)
-.605 E F2(w)72 361.9 Q F1(Speci\214es the windo)64.663 E -.715(w.)-.275
G F2(te)72 378.8 Q(xt_pr)-.22 E(op_r)-.495 E(eturn)-.407 E F1
(Returns the)144 391.8 Q F0(XT)3.666 E(extPr)-1.012 E(operty)-.198 E F1
(structure.)3.666 E 36 387.45 36 398.45 DL 36 385.45 36 396.45 DL 41.5
396.7 36 396.7 DL 43.5 396.7 38 396.7 DL 49 396.7 43.5 396.7 DL(The)72
421.7 Q F0(XGetWMIconName)3.666 E F1(con)3.666 E -.165(ve)-.44 G
(nience function calls).165 E F0(XGetT)3.666 E(extPr)-1.012 E(operty)
-.198 E F1(to obtain the)3.666 E(WM_ICON_N)72 434.7 Q(AME property)-.385
E 5.5(.I)-.715 G 2.75(tr)-5.5 G
(eturns a nonzero status on success; otherwise, it returns a zero)-2.75
E(status.)72 447.7 Q(The ne)72 464.6 Q(xt tw)-.165 E 2.75(of)-.11 G
(unctions ha)-2.75 E .33 -.165(ve b)-.22 H(een superseded by).165 E F0
(XSetWMIconName)3.666 E F1(and)3.666 E F0(XGetWMIconName)3.666 E F1(,)
.916 E(respecti)72 477.6 Q -.165(ve)-.275 G(ly).165 E 5.5(.Y)-.715 G
(ou can use these additional con)-6.71 E -.165(ve)-.44 G
(nience functions for windo).165 E 2.75(wn)-.275 G(ames that are)-2.75 E
(encoded as STRING properties.)72 490.6 Q 1.76 -.88(To s)72 533.5 T
(et the name to be displayed in a windo).88 E(w')-.275 E 2.75(si)-.605 G
(con, use)-2.75 E F0(XSetIconName)3.666 E F1(.).916 E 36 551.25 36
562.25 DL 36 549.25 36 560.25 DL 41.5 547.5 36 547.5 DL 43.5 547.5 38
547.5 DL 49 547.5 43.5 547.5 DL -1.834(XSetIconName \()72 563.4 R F2
(display).916 E F1(,)A F2(w)2.75 E F1(,).916 E F2(icon_name)2.75 E F1
(\)).916 E(Display *)88.5 576.4 Q F2(display)A F1(;).916 E -.44(Wi)88.5
589.4 S(ndo).44 E(w)-.275 E F2(w)2.75 E F1(;).916 E(char *)88.5 602.4 Q
F2(icon_name)A F1(;).916 E F2(display)72 623.2 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2(w)72 640.1 Q F1(Speci\214es the windo)64.663 E -.715(w.)-.275 G F2
(icon_name)72 657 Q F1
(Speci\214es the icon name, which should be a null-terminated string.)
23.732 E 36 652.65 36 663.65 DL 36 650.65 36 661.65 DL 41.5 661.9 36
661.9 DL 43.5 661.9 38 661.9 DL 49 661.9 43.5 661.9 DL(If the string is\
 not in the Host Portable Character Encoding, the result is implementat\
ion-depen-)72 686.9 Q(dent.)72 699.9 Q F0(XSetIconName)6.416 E F1
(can generate)3.666 E F0(BadAlloc)3.666 E F1(and)3.666 E F0(BadW)3.666 E
(indo)-.198 E(w)-.11 E F1(errors.)3.666 E 1.76 -.88(To g)72 729.8 T
(et the name a windo).88 E 2.75(ww)-.275 G
(ants displayed in its icon, use)-2.86 E F0(XGetIconName)3.666 E F1(.)
.916 E F0(357)279.75 769 Q 0 Cg EP
%%Page: 358 363
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E .44 LW 36 76.75 36 87.75 DL 36 74.75
36 85.75 DL 41.5 73 36 73 DL 43.5 73 38 73 DL 49 73 43.5 73 DL/F1 11
/Times-Roman@0 SF(Status XGetIconName)72 88.9 Q(\().916 E/F2 11
/Times-Italic@0 SF(display).916 E F1(,)A F2(w)2.75 E F1(,).916 E F2
(icon_name_r)2.75 E(eturn)-.407 E F1(\)).916 E(Display *)88.5 101.9 Q F2
(display)A F1(;).916 E -.44(Wi)88.5 114.9 S(ndo).44 E(w)-.275 E F2(w)
2.75 E F1(;).916 E(char **)88.5 127.9 Q F2(icon_name_r)A(eturn)-.407 E
F1(;).916 E F2(display)72 148.7 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2(w)72 165.6 Q F1(Speci\214es the windo)64.663 E -.715(w.)-.275 G F2
(icon_name_r)72 182.5 Q(eturn)-.407 E F1(Returns the windo)144 195.5 Q
(w')-.275 E 2.75(si)-.605 G
(con name, which is a null-terminated string.)-2.75 E 36 191.15 36
202.15 DL 36 189.15 36 200.15 DL 41.5 200.4 36 200.4 DL 43.5 200.4 38
200.4 DL 49 200.4 43.5 200.4 DL(The)72 225.4 Q F0(XGetIconName)3.666 E
F1(function returns the name to be displayed in the speci\214ed windo)
3.666 E(w')-.275 E 2.75(si)-.605 G 2.75(con. If)-2.75 F(it succeeds, it\
 returns a nonzero status; otherwise, if no icon name has been set for \
the windo)72 238.4 Q 1.43 -.715(w, i)-.275 H(t).715 E(returns zero.)72
251.4 Q(If you ne)5.5 E -.165(ve)-.275 G 2.75(ra).165 G
(ssigned a name to the windo)-2.75 E -.715(w,)-.275 G F0(XGetIconName)
4.381 E F1(sets)3.666 E(icon_name_return to NULL.)72 264.4 Q
(If the data returned by the serv)5.5 E
(er is in the Latin Portable Character)-.165 E(Encoding, then the retur\
ned string is in the Host Portable Character Encoding.)72 277.4 Q
(Otherwise, the)5.5 E(result is implementation-dependent.)72 290.4 Q
(When \214nished with it, a client must free the icon name)5.5 E
(string using)72 303.4 Q F0(XFr)3.666 E(ee)-.198 E F1(.).916 E F0
(XGetIconName)72.916 320.3 Q F1(can generate a)3.666 E F0(BadW)3.666 E
(indo)-.198 E(w)-.11 E F1(error)3.666 E(.)-.605 E F0 2.75
(14.1.6. Setting)72 346.3 R(and Reading the WM_HINTS Pr)2.75 E(operty)
-.198 E F1(Xlib pro)72 363.2 Q(vides functions that you can use to set \
and read the WM_HINTS property for a gi)-.165 E -.165(ve)-.275 G(n).165
E(windo)72 376.2 Q 4.18 -.715(w. T)-.275 H
(hese functions use the \215ags and the).715 E F0(XWMHints)3.666 E F1
(structure, as de\214ned in the)3.666 E(<)72 389.2 Q F0(X11/Xutil.h)A F1
2.75(>h)C(eader \214le.)-2.75 E 1.76 -.88(To a)72 419.1 T(llocate an).88
E F0(XWMHints)3.666 E F1(structure, use)3.666 E F0(XAllocWMHints)3.666 E
F1(.).916 E 36 436.85 36 447.85 DL 36 434.85 36 445.85 DL 41.5 433.1 36
433.1 DL 43.5 433.1 38 433.1 DL 49 433.1 43.5 433.1 DL
(XWMHints *XAllocWMHints)72 449 Q 1.833(\(\)).916 G 36 448.55 36 459.55
DL 36 446.55 36 457.55 DL 41.5 457.8 36 457.8 DL 43.5 457.8 38 457.8 DL
49 457.8 43.5 457.8 DL(The)72 482.8 Q F0(XAllocWMHints)3.666 E F1
(function allocates and returns a pointer to an)3.666 E F0(XWMHints)
3.666 E F1 2.75(structure. Note)3.666 F(that all \214elds in the)72
495.8 Q F0(XWMHints)3.666 E F1(structure are initially set to zero.)
3.666 E(If insuf)5.5 E(\214cient memory is a)-.275 E -.275(va)-.22 G
(il-).275 E(able,)72 508.8 Q F0(XAllocWMHints)3.666 E F1(returns NULL.)
3.666 E 1.76 -.88(To f)5.5 H
(ree the memory allocated to this structure, use).88 E F0(XFr)72.916
521.8 Q(ee)-.198 E F1(.).916 E(The)72 538.7 Q F0(XWMHints)3.666 E F1
(structure contains:)3.666 E F0(358)279.75 769 Q 0 Cg EP
%%Page: 359 364
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E .44 LW 36 76.75 36 87.75 DL 36 74.75
36 85.75 DL 41.5 73 36 73 DL 43.5 73 38 73 DL 49 73 43.5 73 DL/F1 11
/Times-Roman@0 SF(/* W)72 85 Q(indo)-.44 E 2.75(wm)-.275 G
(anager hints mask bits */)-2.75 E(#de\214ne)72 104.5 Q F0(InputHint)
125.416 104.5 Q F1(\(1L << 0\))321 104.5 Q(#de\214ne)72 117.5 Q F0
(StateHint)125.416 117.5 Q F1(\(1L << 1\))321 117.5 Q(#de\214ne)72 130.5
Q F0(IconPixmapHint)125.416 130.5 Q F1(\(1L << 2\))321 130.5 Q
(#de\214ne)72 143.5 Q F0(IconW)125.416 143.5 Q(indo)-.198 E(wHint)-.11 E
F1(\(1L << 3\))321 143.5 Q(#de\214ne)72 156.5 Q F0(IconP)125.416 156.5 Q
(ositionHint)-.22 E F1(\(1L << 4\))321 156.5 Q(#de\214ne)72 169.5 Q F0
(IconMaskHint)125.416 169.5 Q F1(\(1L << 5\))321 169.5 Q(#de\214ne)72
182.5 Q F0 -.198(Wi)125.416 182.5 S(ndo).198 E(wGr)-.11 E(oupHint)-.198
E F1(\(1L << 6\))321 182.5 Q(#de\214ne)72 195.5 Q F0(Ur)125.416 195.5 Q
(gencyHint)-.11 E F1(\(1L << 8\))321 195.5 Q(#de\214ne)72 208.5 Q F0
(AllHints)125.416 208.5 Q F1(\(InputHint|StateHint|IconPixmapHint|)321
208.5 Q(IconW)321 221.5 Q(indo)-.44 E(wHint|IconPositionHint|)-.275 E
(IconMaskHint|W)321 234.5 Q(indo)-.44 E(wGroupHint\))-.275 E(/* V)72
260.5 Q(alues */)-1.221 E(typedef struct {)72 286.5 Q(long \215ags;)108
299.5 Q(/* marks which \214elds in this structure are de\214ned */)
97.855 E(Bool input;)108 312.5 Q
(/* does this application rely on the windo)94.181 E 2.75(wm)-.275 G
(anager to)-2.75 E(get k)252 325.5 Q -.165(ey)-.11 G(board input? */)
.165 E(int initial_state;)108 338.5 Q(/* see belo)75.239 E 2.75(w*)-.275
G(/)-2.75 E(Pixmap icon_pixmap;)108 351.5 Q
(/* pixmap to be used as icon */)47.134 E -.44(Wi)108 364.5 S(ndo).44 E
2.75(wi)-.275 G(con_windo)-2.75 E 38.664(w; /*)-.275 F(windo)2.75 E 2.75
(wt)-.275 G 2.75(ob)-2.75 G 2.75(eu)-2.75 G(sed as icon */)-2.75 E
(int icon_x, icon_y;)108 377.5 Q(/* initial position of icon */)61.192 E
(Pixmap icon_mask;)108 390.5 Q
(/* pixmap to be used as mask for icon_pixmap */)56.913 E(XID windo)108
403.5 Q 49.565(w_group; /*)-.275 F(id of related windo)2.75 E 2.75(wg)
-.275 G(roup */)-2.75 E(/* this structure may be e)108 416.5 Q
(xtended in the future */)-.165 E 2.75(}X)72 429.5 S(WMHints;)-2.75 E 36
431.65 36 442.65 DL 36 429.65 36 440.65 DL 41.5 440.9 36 440.9 DL 43.5
440.9 38 440.9 DL 49 440.9 43.5 440.9 DL
(The input member is used to communicate to the windo)72 465.9 Q 2.75
(wm)-.275 G(anager the input focus model used by)-2.75 E
(the application.)72 478.9 Q(Applications that e)5.5 E(xpect input b)
-.165 E(ut ne)-.22 E -.165(ve)-.275 G 2.75(re).165 G
(xplicitly set focus to an)-2.915 E 2.75(yo)-.165 G 2.75(ft)-2.75 G
(heir sub-)-2.75 E(windo)72 491.9 Q
(ws \(that is, use the push model of focus management\), such as X V)
-.275 E(ersion 10 style applica-)-1.221 E
(tions that use real-estate dri)72 504.9 Q -.165(ve)-.275 G 2.75(nf).165
G(ocus, should set this member to)-2.75 E F0 -.814(Tr)3.666 G(ue).814 E
F1 5.5(.S).916 G(imilarly)-5.5 E 2.75(,a)-.715 G(pplications)-2.75 E
(that set input focus to their subwindo)72 517.9 Q
(ws only when it is gi)-.275 E -.165(ve)-.275 G 2.75(nt).165 G 2.75(ot)
-2.75 G(heir top-le)-2.75 E -.165(ve)-.275 G 2.75(lw).165 G(indo)-2.75 E
2.75(wb)-.275 G 2.75(yaw)-2.75 G(in-)-2.75 E(do)72 530.9 Q 2.75(wm)-.275
G(anager should also set this member to)-2.75 E F0 -.814(Tr)3.666 G(ue)
.814 E F1 5.5(.A).916 G(pplications that manage their o)-5.5 E(wn input)
-.275 E(focus by e)72 543.9 Q
(xplicitly setting focus to one of their subwindo)-.165 E(ws whene)-.275
E -.165(ve)-.275 G 2.75(rt).165 G(he)-2.75 E 2.75(yw)-.165 G(ant k)-2.86
E -.165(ey)-.11 G(board input).165 E(\(that is, use the pull model of f\
ocus management\) should set this member to)72 556.9 Q F0 -.275(Fa)3.666
G(lse).275 E F1 5.5(.A).916 G(pplications)-5.5 E(that ne)72 569.9 Q
-.165(ve)-.275 G 2.75(re).165 G(xpect an)-2.915 E 2.75(yk)-.165 G -.165
(ey)-2.86 G(board input also should set this member to).165 E F0 -.275
(Fa)3.666 G(lse).275 E F1(.).916 E(Pull model windo)72 586.8 Q 2.75(wm)
-.275 G(anagers should mak)-2.75 E 2.75(ei)-.11 G 2.75(tp)-2.75 G
(ossible for push model applications to get input by)-2.75 E
(setting input focus to the top-le)72 599.8 Q -.165(ve)-.275 G 2.75(lw)
.165 G(indo)-2.75 E(ws of applications whose input member is)-.275 E F0
-.814(Tr)3.666 G(ue).814 E F1 5.5(.P).916 G(ush)-5.5 E(model windo)72
612.8 Q 2.75(wm)-.275 G(anagers should mak)-2.75 E 2.75(es)-.11 G
(ure that pull model applications do not break them by)-2.75 E
(resetting input focus to)72 625.8 Q F0 -.22(Po)3.666 G(interRoot).22 E
F1(when it is appropriate \(for e)3.666 E(xample, whene)-.165 E -.165
(ve)-.275 G 2.75(ra).165 G 2.75(na)-2.75 G(pplica-)-2.75 E
(tion whose input member is)72 638.8 Q F0 -.275(Fa)3.666 G(lse).275 E F1
(sets input focus to one of its subwindo)3.666 E(ws\).)-.275 E
(The de\214nitions for the initial_state \215ag are:)72 655.7 Q
(#de\214ne)72 675.2 Q F0 -.198(Wi)125.416 675.2 S(thdrawnState).198 E F1
(0)285 675.2 Q(#de\214ne)72 688.2 Q F0(NormalState)125.416 688.2 Q F1(1)
285 688.2 Q(/* most applications start this w)315.9 688.2 Q(ay */)-.11 E
(#de\214ne)72 701.2 Q F0(IconicState)125.416 701.2 Q F1(3)285 701.2 Q
(/* application w)315.9 701.2 Q(ants to start as an icon */)-.11 E
(The icon_mask speci\214es which pix)72 720.7 Q
(els of the icon_pixmap should be used as the icon.)-.165 E(This allo)
5.5 E(ws)-.275 E F0(359)279.75 769 Q 0 Cg EP
%%Page: 360 365
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E/F1 11/Times-Roman@0 SF
(for nonrectangular icons.)72 85 Q
(Both icon_pixmap and icon_mask must be bitmaps.)5.5 E(The icon_windo)
5.5 E(w)-.275 E(lets an application pro)72 98 Q(vide a windo)-.165 E
2.75(wf)-.275 G(or use as an icon for windo)-2.75 E 2.75(wm)-.275 G
(anagers that support such)-2.75 E 2.75(use. The)72 111 R(windo)2.75 E
(w_group lets you specify that this windo)-.275 E 2.75(wb)-.275 G
(elongs to a group of other windo)-2.75 E(ws.)-.275 E -.165(Fo)72 124 S
2.75(re).165 G
(xample, if a single application manipulates multiple top-le)-2.915 E
-.165(ve)-.275 G 2.75(lw).165 G(indo)-2.75 E(ws, this allo)-.275 E
(ws you to)-.275 E(pro)72 137 Q(vide enough information that a windo)
-.165 E 2.75(wm)-.275 G(anager can iconify all of the windo)-2.75 E
(ws rather than)-.275 E(just the one windo)72 150 Q -.715(w.)-.275 G
(The)72 166.9 Q F0(Ur)3.666 E(gencyHint)-.11 E F1(\215ag, if set in the\
 \215ags \214eld, indicates that the client deems the windo)3.666 E 2.75
(wc)-.275 G(on-)-2.75 E(tents to be ur)72 179.9 Q
(gent, requiring the timely response of the user)-.198 E 5.5(.T)-.605 G
(he windo)-5.5 E 2.75(wm)-.275 G(anager will mak)-2.75 E(e)-.11 E
(some ef)72 192.9 Q(fort to dra)-.275 E 2.75(wt)-.165 G(he user')-2.75 E
2.75(sa)-.605 G(ttention to this windo)-2.75 E 2.75(ww)-.275 G
(hile this \215ag is set.)-2.75 E(The client must pro-)5.5 E
(vide some means by which the user can cause the ur)72 205.9 Q(genc)
-.198 E 2.75<798d>-.165 G(ag to be cleared \(either mitig)-2.75 E
(ating the)-.055 E(condition that made the windo)72 218.9 Q 2.75(wu)
-.275 G -.198(rg)-2.75 G(ent or merely shutting of).198 E 2.75(ft)-.275
G(he alarm\) or the windo)-2.75 E 2.75(wt)-.275 G 2.75(ob)-2.75 G(e)
-2.75 E(withdra)72 231.9 Q(wn.)-.165 E 1.76 -.88(To s)72 261.8 T
(et a windo).88 E(w')-.275 E 2.75(sW)-.605 G(M_HINTS property)-2.75 E
2.75(,u)-.715 G(se)-2.75 E F0(XSetWMHints)3.666 E F1(.).916 E .44 LW 36
279.55 36 290.55 DL 36 277.55 36 288.55 DL 41.5 275.8 36 275.8 DL 43.5
275.8 38 275.8 DL 49 275.8 43.5 275.8 DL -1.834(XSetWMHints \()72 291.7
R/F2 11/Times-Italic@0 SF(display).916 E F1(,)A F2(w)2.75 E F1(,)A F2
(wmhints)2.75 E F1(\)).916 E(Display *)88.5 304.7 Q F2(display)A F1(;)
.916 E -.44(Wi)88.5 317.7 S(ndo).44 E(w)-.275 E F2(w)2.75 E F1(;).916 E
(XWMHints *)88.5 330.7 Q F2(wmhints)A F1(;).916 E F2(display)72 364.5 Q
F1(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605
E F2(w)72 381.4 Q F1(Speci\214es the windo)64.663 E -.715(w.)-.275 G F2
(wmhints)72 398.3 Q F1(Speci\214es the)35.326 E F0(XWMHints)3.666 E F1
(structure to be used.)3.666 E 36 393.95 36 404.95 DL 36 391.95 36
402.95 DL 41.5 403.2 36 403.2 DL 43.5 403.2 38 403.2 DL 49 403.2 43.5
403.2 DL(The)72 428.2 Q F0(XSetWMHints)3.666 E F1
(function sets the windo)3.666 E 2.75(wm)-.275 G
(anager hints that include icon information and)-2.75 E
(location, the initial state of the windo)72 441.2 Q 1.43 -.715(w, a)
-.275 H(nd whether the application relies on the windo).715 E 2.75(wm)
-.275 G(an-)-2.75 E(ager to get k)72 454.2 Q -.165(ey)-.11 G
(board input.).165 E F0(XSetWMHints)72.916 471.1 Q F1(can generate)3.666
E F0(BadAlloc)3.666 E F1(and)3.666 E F0(BadW)3.666 E(indo)-.198 E(w)-.11
E F1(errors.)3.666 E 1.76 -.88(To r)72 501 T(ead a windo).88 E(w')-.275
E 2.75(sW)-.605 G(M_HINTS property)-2.75 E 2.75(,u)-.715 G(se)-2.75 E F0
(XGetWMHints)3.666 E F1(.).916 E 36 518.75 36 529.75 DL 36 516.75 36
527.75 DL 41.5 515 36 515 DL 43.5 515 38 515 DL 49 515 43.5 515 DL
(XWMHints *XGetWMHints)72 530.9 Q(\().916 E F2(display).916 E F1(,)A F2
(w)2.75 E F1(\)).916 E(Display *)88.5 543.9 Q F2(display)A F1(;).916 E
-.44(Wi)88.5 556.9 S(ndo).44 E(w)-.275 E F2(w)2.75 E F1(;).916 E F2
(display)72 577.7 Q F1(Speci\214es the connection to the X serv)40.221 E
(er)-.165 E(.)-.605 E F2(w)72 594.6 Q F1(Speci\214es the windo)64.663 E
-.715(w.)-.275 G 36 590.25 36 601.25 DL 36 588.25 36 599.25 DL 41.5
599.5 36 599.5 DL 43.5 599.5 38 599.5 DL 49 599.5 43.5 599.5 DL(The)72
624.5 Q F0(XGetWMHints)3.666 E F1(function reads the windo)3.666 E 2.75
(wm)-.275 G(anager hints and returns NULL if no)-2.75 E
(WM_HINTS property w)72 637.5 Q(as set on the windo)-.11 E 2.75(wo)-.275
G 2.75(rr)-2.75 G(eturns a pointer to an)-2.75 E F0(XWMHints)3.666 E F1
(structure if it)3.666 E 2.75(succeeds. When)72 650.5 R
(\214nished with the data, free the space used for it by calling)2.75 E
F0(XFr)3.666 E(ee)-.198 E F1(.).916 E F0(XGetWMHints)72.916 667.4 Q F1
(can generate a)3.666 E F0(BadW)3.666 E(indo)-.198 E(w)-.11 E F1(error)
3.666 E(.)-.605 E F0 2.75(14.1.7. Setting)72 693.4 R
(and Reading the WM_NORMAL_HINTS Pr)2.75 E(operty)-.198 E F1(Xlib pro)72
710.3 Q(vides functions that you can use to set or read the WM_NORMAL_H\
INTS property for a)-.165 E(gi)72 723.3 Q -.165(ve)-.275 G 2.75(nw).165
G(indo)-2.75 E 4.18 -.715(w. T)-.275 H
(he functions use the \215ags and the).715 E F0(XSizeHints)3.666 E F1
(structure, as de\214ned in the)3.666 E F0(360)279.75 769 Q 0 Cg EP
%%Page: 361 366
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E/F1 11/Times-Roman@0 SF(<)72 85 Q F0
(X11/Xutil.h)A F1 2.75(>h)C(eader \214le.)-2.75 E(The size of the)72
101.9 Q F0(XSizeHints)3.666 E F1(structure may gro)3.666 E 2.75(wi)-.275
G 2.75(nf)-2.75 G(uture releases, as ne)-2.75 E 2.75(wc)-.275 G
(omponents are added)-2.75 E(to support ne)72 114.9 Q 2.75(wI)-.275 G
(CCCM features.)-2.75 E -.165(Pa)5.5 G
(ssing statically allocated instances of this structure into Xlib).165 E
(may result in memory corruption when running ag)72 127.9 Q
(ainst a future release of the library)-.055 E 5.5(.A)-.715 G 2.75(ss)
-5.5 G(uch, it)-2.75 E(is recommended that only dynamically allocated i\
nstances of the structure be used.)72 140.9 Q 1.76 -.88(To a)72 170.8 T
(llocate an).88 E F0(XSizeHints)3.666 E F1(structure, use)3.666 E F0
(XAllocSizeHints)3.666 E F1(.).916 E .44 LW 36 188.55 36 199.55 DL 36
186.55 36 197.55 DL 41.5 184.8 36 184.8 DL 43.5 184.8 38 184.8 DL 49
184.8 43.5 184.8 DL(XSizeHints *XAllocSizeHints)72 200.7 Q 1.833(\(\))
.916 G 36 200.25 36 211.25 DL 36 198.25 36 209.25 DL 41.5 209.5 36 209.5
DL 43.5 209.5 38 209.5 DL 49 209.5 43.5 209.5 DL(The)72 234.5 Q F0
(XAllocSizeHints)3.666 E F1
(function allocates and returns a pointer to an)3.666 E F0(XSizeHints)
3.666 E F1 2.75(structure. Note)3.666 F(that all \214elds in the)72
247.5 Q F0(XSizeHints)3.666 E F1(structure are initially set to zero.)
3.666 E(If insuf)5.5 E(\214cient memory is a)-.275 E -.275(va)-.22 G
(il-).275 E(able,)72 260.5 Q F0(XAllocSizeHints)3.666 E F1
(returns NULL.)3.666 E 1.76 -.88(To f)5.5 H
(ree the memory allocated to this structure, use).88 E F0(XFr)72.916
273.5 Q(ee)-.198 E F1(.).916 E(The)72 290.4 Q F0(XSizeHints)3.666 E F1
(structure contains:)3.666 E F0(361)279.75 769 Q 0 Cg EP
%%Page: 362 367
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E .44 LW 36 76.75 36 87.75 DL 36 74.75
36 85.75 DL 41.5 73 36 73 DL 43.5 73 38 73 DL 49 73 43.5 73 DL/F1 11
/Times-Roman@0 SF(/* Size hints mask bits */)72 85 Q(#de\214ne)72 104.5
Q F0(USP)125.416 104.5 Q(osition)-.22 E F1(\(1L << 0\))220.2 104.5 Q
(/* user speci\214ed x, y */)344.7 104.5 Q(#de\214ne)72 117.5 Q F0
(USSize)125.416 117.5 Q F1(\(1L << 1\))220.2 117.5 Q
(/* user speci\214ed width, height */)344.7 117.5 Q(#de\214ne)72 130.5 Q
F0(PP)125.416 130.5 Q(osition)-.22 E F1(\(1L << 2\))220.2 130.5 Q
(/* program speci\214ed position */)344.7 130.5 Q(#de\214ne)72 143.5 Q
F0(PSize)125.416 143.5 Q F1(\(1L << 3\))220.2 143.5 Q
(/* program speci\214ed size */)344.7 143.5 Q(#de\214ne)72 156.5 Q F0
(PMinSize)125.416 156.5 Q F1(\(1L << 4\))220.2 156.5 Q
(/* program speci\214ed minimum size */)344.7 156.5 Q(#de\214ne)72 169.5
Q F0(PMaxSize)125.416 169.5 Q F1(\(1L << 5\))220.2 169.5 Q
(/* program speci\214ed maximum size */)344.7 169.5 Q(#de\214ne)72 182.5
Q F0(PResizeInc)125.416 182.5 Q F1(\(1L << 6\))220.2 182.5 Q
(/* program speci\214ed resize increments */)344.7 182.5 Q(#de\214ne)72
195.5 Q F0 -.814(PA)125.416 195.5 S(spect).814 E F1(\(1L << 7\))220.2
195.5 Q(/* program speci\214ed min and max aspect ratios */)344.7 195.5
Q(#de\214ne)72 208.5 Q F0(PBaseSize)125.416 208.5 Q F1(\(1L << 8\))220.2
208.5 Q(#de\214ne)72 221.5 Q F0(PW)125.416 221.5 Q(inGra)-.198 E(vity)
-.275 E F1(\(1L << 9\))220.2 221.5 Q(#de\214ne)72 234.5 Q F0 -.814(PA)
125.416 234.5 S(llHints).814 E F1(\(PPosition|PSize|)220.2 234.5 Q
(PMinSize|PMaxSize|)220.2 247.5 Q(PResizeInc|P)220.2 260.5 Q(Aspect\))
-1.012 E(/* V)72 286.5 Q(alues */)-1.221 E(typedef struct {)72 312.5 Q
(long \215ags;)108 325.5 Q
(/* marks which \214elds in this structure are de\214ned */)97.855 E
(int x, y;)108 338.5 Q(/* Obsolete */)110.076 E(int width, height;)108
351.5 Q(/* Obsolete */)68.518 E(int min_width, min_height;)108 364.5 Q
(int max_width, max_height;)108 377.5 Q(int width_inc, height_inc;)108
390.5 Q(struct {)108 403.5 Q(int x;)127.25 416.5 Q(/* numerator */)
101.826 E(int y;)127.25 429.5 Q(/* denominator */)101.826 E 2.75(}m)108
442.5 S(in_aspect, max_aspect;)-2.75 E(int base_width, base_height;)108
455.5 Q(int win_gra)108 468.5 Q(vity;)-.22 E(/* this structure may be e)
108 481.5 Q(xtended in the future */)-.165 E 2.75(}X)72 494.5 S
(SizeHints;)-2.75 E 36 496.65 36 507.65 DL 36 494.65 36 505.65 DL 41.5
505.9 36 505.9 DL 43.5 505.9 38 505.9 DL 49 505.9 43.5 505.9 DL
(The x, y)72 530.9 Q 2.75(,w)-.715 G(idth, and height members are no)
-2.75 E 2.75(wo)-.275 G
(bsolete and are left solely for compatibility rea-)-2.75 E 2.75
(sons. The)72 543.9 R
(min_width and min_height members specify the minimum windo)2.75 E 2.75
(ws)-.275 G(ize that still)-2.75 E(allo)72 556.9 Q
(ws the application to be useful.)-.275 E
(The max_width and max_height members specify the maxi-)5.5 E(mum windo)
72 569.9 Q 2.75(ws)-.275 G 2.75(ize. The)-2.75 F
(width_inc and height_inc members de\214ne an arithmetic progression of)
2.75 E(sizes \(minimum to maximum\) into which the windo)72 582.9 Q 2.75
(wp)-.275 G(refers to be resized.)-2.75 E(The min_aspect and)5.5 E
(max_aspect members are e)72 595.9 Q(xpressed as ratios of x and y)-.165
E 2.75(,a)-.715 G(nd the)-2.75 E 2.75(ya)-.165 G(llo)-2.75 E 2.75(wa)
-.275 G 2.75(na)-2.75 G(pplication to specify)-2.75 E
(the range of aspect ratios it prefers.)72 608.9 Q
(The base_width and base_height members de\214ne the desired)5.5 E
(size of the windo)72 621.9 Q 4.18 -.715(w. T)-.275 H(he windo).715 E
2.75(wm)-.275 G(anager will interpret the position of the windo)-2.75 E
2.75(wa)-.275 G(nd its border)-2.75 E
(width to position the point of the outer rectangle of the o)72 634.9 Q
-.165(ve)-.165 G(rall windo).165 E 2.75(ws)-.275 G
(peci\214ed by the win_gra)-2.75 E(v-)-.22 E(ity member)72 647.9 Q 5.5
(.T)-.605 G(he outer rectangle of the windo)-5.5 E 2.75(wi)-.275 G
(ncludes an)-2.75 E 2.75(yb)-.165 G(orders or decorations supplied by)
-2.75 E(the windo)72 660.9 Q 2.75(wm)-.275 G(anager)-2.75 E 5.5(.I)-.605
G 2.75(no)-5.5 G(ther w)-2.75 E(ords, if the windo)-.11 E 2.75(wm)-.275
G(anager decides to place the windo)-2.75 E 2.75(ww)-.275 G(here)-2.75 E
(the client ask)72 673.9 Q(ed, the position on the parent windo)-.11 E
(w')-.275 E 2.75(sb)-.605 G(order named by the win_gra)-2.75 E
(vity will be)-.22 E(placed where the client windo)72 686.9 Q 2.75(ww)
-.275 G(ould ha)-2.86 E .33 -.165(ve b)-.22 H
(een placed in the absence of a windo).165 E 2.75(wm)-.275 G(anager)
-2.75 E(.)-.605 E(Note that use of the)72 703.8 Q F0 -.814(PA)3.666 G
(llHints).814 E F1(macro is highly discouraged.)3.666 E F0(362)279.75
769 Q 0 Cg EP
%%Page: 363 368
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E/F1 11/Times-Roman@0 SF 1.76 -.88(To s)
72 85 T(et a windo).88 E(w')-.275 E 2.75(sW)-.605 G
(M_NORMAL_HINTS property)-2.75 E 2.75(,u)-.715 G(se)-2.75 E F0
(XSetWMNormalHints)3.666 E F1(.).916 E .44 LW 36 102.75 36 113.75 DL 36
100.75 36 111.75 DL 41.5 99 36 99 DL 43.5 99 38 99 DL 49 99 43.5 99 DL
-.22(vo)72 114.9 S(id XSetWMNormalHints).22 E(\().916 E/F2 11
/Times-Italic@0 SF(display).916 E F1(,)A F2(w)2.75 E F1(,)A F2(hints)
2.75 E F1(\)).916 E(Display *)88.5 127.9 Q F2(display)A F1(;).916 E -.44
(Wi)88.5 140.9 S(ndo).44 E(w)-.275 E F2(w)2.75 E F1(;).916 E
(XSizeHints *)88.5 153.9 Q F2(hints)A F1(;).916 E F2(display)72 174.7 Q
F1(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605
E F2(w)72 191.6 Q F1(Speci\214es the windo)64.663 E -.715(w.)-.275 G F2
(hints)72 208.5 Q F1(Speci\214es the size hints for the windo)50.605 E
2.75(wi)-.275 G 2.75(ni)-2.75 G(ts normal state.)-2.75 E 36 204.15 36
215.15 DL 36 202.15 36 213.15 DL 41.5 213.4 36 213.4 DL 43.5 213.4 38
213.4 DL 49 213.4 43.5 213.4 DL(The)72 238.4 Q F0(XSetWMNormalHints)
3.666 E F1(function replaces the size hints for the WM_NORMAL_HINTS)
3.666 E(property on the speci\214ed windo)72 251.4 Q 4.18 -.715(w. I)
-.275 H 2.75(ft).715 G(he property does not already e)-2.75 E(xist,)
-.165 E F0(XSetWMNormalHints)3.666 E F1(sets the size hints for the WM_\
NORMAL_HINTS property on the speci\214ed windo)72 264.4 Q 4.18 -.715
(w. T)-.275 H(he prop-).715 E
(erty is stored with a type of WM_SIZE_HINTS and a format of 32.)72
277.4 Q F0(XSetWMNormalHints)72.916 294.3 Q F1(can generate)3.666 E F0
(BadAlloc)3.666 E F1(and)3.666 E F0(BadW)3.666 E(indo)-.198 E(w)-.11 E
F1(errors.)3.666 E 1.76 -.88(To r)72 324.2 T(ead a windo).88 E(w')-.275
E 2.75(sW)-.605 G(M_NORMAL_HINTS property)-2.75 E 2.75(,u)-.715 G(se)
-2.75 E F0(XGetWMNormalHints)3.666 E F1(.).916 E 36 341.95 36 352.95 DL
36 339.95 36 350.95 DL 41.5 338.2 36 338.2 DL 43.5 338.2 38 338.2 DL 49
338.2 43.5 338.2 DL(Status XGetWMNormalHints)72 354.1 Q(\().916 E F2
(display).916 E F1(,)A F2(w)2.75 E F1(,)A F2(hints_r)2.75 E(eturn)-.407
E F1(,)A F2(supplied_r)2.75 E(eturn)-.407 E F1(\)).916 E(Display *)88.5
367.1 Q F2(display)A F1(;).916 E -.44(Wi)88.5 380.1 S(ndo).44 E(w)-.275
E F2(w)2.75 E F1(;).916 E(XSizeHints *)88.5 393.1 Q F2(hints_r)A(eturn)
-.407 E F1(;).916 E(long *)88.5 406.1 Q F2(supplied_r)A(eturn)-.407 E F1
(;).916 E F2(display)72 426.9 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2(w)72 443.8 Q F1(Speci\214es the windo)64.663 E -.715(w.)-.275 G F2
(hints_r)72 460.7 Q(eturn)-.407 E F1
(Returns the size hints for the windo)18.012 E 2.75(wi)-.275 G 2.75(ni)
-2.75 G(ts normal state.)-2.75 E F2(supplied_r)72 477.6 Q(eturn)-.407 E
F1(Returns the hints that were supplied by the user)144 490.6 Q(.)-.605
E 36 486.25 36 497.25 DL 36 484.25 36 495.25 DL 41.5 495.5 36 495.5 DL
43.5 495.5 38 495.5 DL 49 495.5 43.5 495.5 DL(The)72 520.5 Q F0
(XGetWMNormalHints)3.666 E F1
(function returns the size hints stored in the)3.666 E
(WM_NORMAL_HINTS property on the speci\214ed windo)72 533.5 Q 4.18 -.715
(w. I)-.275 H 2.75(ft).715 G(he property is of type)-2.75 E(WM_SIZE_HIN\
TS, is of format 32, and is long enough to contain either an old \(pre-\
ICCCM\) or)72 546.5 Q(ne)72 559.5 Q 2.75(ws)-.275 G
(ize hints structure,)-2.75 E F0(XGetWMNormalHints)3.666 E F1
(sets the v)3.666 E(arious \214elds of the)-.275 E F0(XSizeHints)3.666 E
F1(struc-)3.666 E(ture, sets the supplied_return ar)72 572.5 Q(gument t\
o the list of \214elds that were supplied by the user \(whether)-.198 E
(or not the)72 585.5 Q 2.75(yc)-.165 G(ontained de\214ned v)-2.75 E
(alues\), and returns a nonzero status.)-.275 E
(Otherwise, it returns a zero)5.5 E(status.)72 598.5 Q(If)72 615.4 Q F0
(XGetWMNormalHints)3.666 E F1
(returns successfully and a pre-ICCCM size hints property is read, the)
3.666 E(supplied_return ar)72 628.4 Q(gument will contain the follo)
-.198 E(wing bits:)-.275 E
(\(USPosition|USSize|PPosition|PSize|PMinSize|)108 651.8 Q
(PMaxSize|PResizeInc|P)110.75 664.8 Q(Aspect\))-1.012 E
(If the property is lar)72 688.2 Q
(ge enough to contain the base size and windo)-.198 E 2.75(wg)-.275 G
(ra)-2.75 E(vity \214elds as well, the sup-)-.22 E(plied_return ar)72
701.2 Q(gument will also contain the follo)-.198 E(wing bits:)-.275 E
(PBaseSize|PW)108 724.6 Q(inGra)-.44 E(vity)-.22 E F0(363)279.75 769 Q 0
Cg EP
%%Page: 364 369
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E(XGetWMNormalHints)72.916 85 Q/F1 11
/Times-Roman@0 SF(can generate a)3.666 E F0(BadW)3.666 E(indo)-.198 E(w)
-.11 E F1(error)3.666 E(.)-.605 E 1.76 -.88(To s)72 114.9 T(et a windo)
.88 E(w')-.275 E 2.75(sW)-.605 G(M_SIZE_HINTS property)-2.75 E 2.75(,u)
-.715 G(se)-2.75 E F0(XSetWMSizeHints)3.666 E F1(.).916 E .44 LW 36
132.65 36 143.65 DL 36 130.65 36 141.65 DL 41.5 128.9 36 128.9 DL 43.5
128.9 38 128.9 DL 49 128.9 43.5 128.9 DL -.22(vo)72 144.8 S
(id XSetWMSizeHints).22 E(\().916 E/F2 11/Times-Italic@0 SF(display).916
E F1(,)A F2(w)2.75 E F1(,)A F2(hints)2.75 E F1(,)A F2(pr)2.75 E(operty)
-.495 E F1(\)).916 E(Display *)88.5 157.8 Q F2(display)A F1(;).916 E
-.44(Wi)88.5 170.8 S(ndo).44 E(w)-.275 E F2(w)2.75 E F1(;).916 E
(XSizeHints *)88.5 183.8 Q F2(hints)A F1(;).916 E(Atom)88.5 196.8 Q F2
(pr)2.75 E(operty)-.495 E F1(;).916 E F2(display)72 217.6 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2(w)72 234.5 Q F1(Speci\214es the windo)64.663 E -.715(w.)-.275 G F2
(hints)72 251.4 Q F1(Speci\214es the)50.605 E F0(XSizeHints)3.666 E F1
(structure to be used.)3.666 E F2(pr)72 268.3 Q(operty)-.495 E F1
(Speci\214es the property name.)34.611 E 36 263.95 36 274.95 DL 36
261.95 36 272.95 DL 41.5 273.2 36 273.2 DL 43.5 273.2 38 273.2 DL 49
273.2 43.5 273.2 DL(The)72 298.2 Q F0(XSetWMSizeHints)3.666 E F1(functi\
on replaces the size hints for the speci\214ed property on the named)
3.666 E(windo)72 311.2 Q 4.18 -.715(w. I)-.275 H 2.75(ft).715 G
(he speci\214ed property does not already e)-2.75 E(xist,)-.165 E F0
(XSetWMSizeHints)3.666 E F1(sets the size hints)3.666 E
(for the speci\214ed property on the named windo)72 324.2 Q 4.18 -.715
(w. T)-.275 H(he property is stored with a type of).715 E
(WM_SIZE_HINTS and a format of 32.)72 337.2 Q 1.76 -.88(To s)5.5 H
(et a windo).88 E(w')-.275 E 2.75(sn)-.605 G
(ormal size hints, you can use the)-2.75 E F0(XSetWMNormalHints)72.916
350.2 Q F1(function.)3.666 E F0(XSetWMSizeHints)72.916 367.1 Q F1
(can generate)3.666 E F0(BadAlloc)3.666 E F1(,).916 E F0(BadAtom)3.666 E
F1 2.75(,a).916 G(nd)-2.75 E F0(BadW)3.666 E(indo)-.198 E(w)-.11 E F1
(errors.)3.666 E 1.76 -.88(To r)72 397 T(ead a windo).88 E(w')-.275 E
2.75(sW)-.605 G(M_SIZE_HINTS property)-2.75 E 2.75(,u)-.715 G(se)-2.75 E
F0(XGetWMSizeHints)3.666 E F1(.).916 E 36 414.75 36 425.75 DL 36 412.75
36 423.75 DL 41.5 411 36 411 DL 43.5 411 38 411 DL 49 411 43.5 411 DL
(Status XGetWMSizeHints)72 426.9 Q(\().916 E F2(display).916 E F1(,)A F2
(w)2.75 E F1(,)A F2(hints_r)2.75 E(eturn)-.407 E F1(,)A F2(supplied_r)
2.75 E(eturn)-.407 E F1(,)A F2(pr)2.75 E(operty)-.495 E F1(\)).916 E
(Display *)88.5 439.9 Q F2(display)A F1(;).916 E -.44(Wi)88.5 452.9 S
(ndo).44 E(w)-.275 E F2(w)2.75 E F1(;).916 E(XSizeHints *)88.5 465.9 Q
F2(hints_r)A(eturn)-.407 E F1(;).916 E(long *)88.5 478.9 Q F2
(supplied_r)A(eturn)-.407 E F1(;).916 E(Atom)88.5 491.9 Q F2(pr)2.75 E
(operty)-.495 E F1(;).916 E F2(display)72 512.7 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2(w)72 529.6 Q F1(Speci\214es the windo)64.663 E -.715(w.)-.275 G F2
(hints_r)72 546.5 Q(eturn)-.407 E F1(Returns the)18.012 E F0(XSizeHints)
3.666 E F1(structure.)3.666 E F2(supplied_r)72 563.4 Q(eturn)-.407 E F1
(Returns the hints that were supplied by the user)144 576.4 Q(.)-.605 E
F2(pr)72 593.3 Q(operty)-.495 E F1(Speci\214es the property name.)34.611
E 36 588.95 36 599.95 DL 36 586.95 36 597.95 DL 41.5 598.2 36 598.2 DL
43.5 598.2 38 598.2 DL 49 598.2 43.5 598.2 DL(The)72 623.2 Q F0
(XGetWMSizeHints)3.666 E F1(function returns the size hints stored in t\
he speci\214ed property on the)3.666 E(named windo)72 636.2 Q 4.18 -.715
(w. I)-.275 H 2.75(ft).715 G(he property is of type WM_SIZE_HINTS, is o\
f format 32, and is long enough)-2.75 E
(to contain either an old \(pre-ICCCM\) or ne)72 649.2 Q 2.75(ws)-.275 G
(ize hints structure,)-2.75 E F0(XGetWMSizeHints)3.666 E F1(sets the)
3.666 E -.275(va)72 662.2 S(rious \214elds of the).275 E F0(XSizeHints)
3.666 E F1(structure, sets the supplied_return ar)3.666 E
(gument to the list of \214elds)-.198 E
(that were supplied by the user \(whether or not the)72 675.2 Q 2.75(yc)
-.165 G(ontained de\214ned v)-2.75 E(alues\), and returns a)-.275 E
(nonzero status.)72 688.2 Q(Otherwise, it returns a zero status.)5.5 E
1.76 -.88(To g)5.5 H(et a windo).88 E(w')-.275 E 2.75(sn)-.605 G
(ormal size hints, you can)-2.75 E(use the)72 701.2 Q F0
(XGetWMNormalHints)3.666 E F1(function.)3.666 E(If)72 718.1 Q F0
(XGetWMSizeHints)3.666 E F1(returns successfully and a pre-ICCCM size h\
ints property is read, the sup-)3.666 E(plied_return ar)72 731.1 Q
(gument will contain the follo)-.198 E(wing bits:)-.275 E F0(364)279.75
769 Q 0 Cg EP
%%Page: 365 370
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E/F1 11/Times-Roman@0 SF
(\(USPosition|USSize|PPosition|PSize|PMinSize|)108 85 Q
(PMaxSize|PResizeInc|P)110.75 98 Q(Aspect\))-1.012 E
(If the property is lar)72 121.4 Q
(ge enough to contain the base size and windo)-.198 E 2.75(wg)-.275 G
(ra)-2.75 E(vity \214elds as well, the sup-)-.22 E(plied_return ar)72
134.4 Q(gument will also contain the follo)-.198 E(wing bits:)-.275 E
(PBaseSize|PW)108 157.8 Q(inGra)-.44 E(vity)-.22 E F0(XGetWMSizeHints)
72.916 181.2 Q F1(can generate)3.666 E F0(BadAtom)3.666 E F1(and)3.666 E
F0(BadW)3.666 E(indo)-.198 E(w)-.11 E F1(errors.)3.666 E F0 2.75
(14.1.8. Setting)72 207.2 R(and Reading the WM_CLASS Pr)2.75 E(operty)
-.198 E F1(Xlib pro)72 224.1 Q(vides functions that you can use to set \
and get the WM_CLASS property for a gi)-.165 E -.165(ve)-.275 G 2.75(nw)
.165 G(in-)-2.75 E(do)72 237.1 Q 4.18 -.715(w. T)-.275 H
(hese functions use the).715 E F0(XClassHint)3.666 E F1
(structure, which is de\214ned in the <)3.666 E F0(X11/Xutil.h)A F1(>)A
(header \214le.)72 250.1 Q 1.76 -.88(To a)72 280 T(llocate an).88 E F0
(XClassHint)3.666 E F1(structure, use)3.666 E F0(XAllocClassHint)3.666 E
F1(.).916 E .44 LW 36 297.75 36 308.75 DL 36 295.75 36 306.75 DL 41.5
294 36 294 DL 43.5 294 38 294 DL 49 294 43.5 294 DL
(XClassHint *XAllocClassHint)72 309.9 Q 1.833(\(\)).916 G 36 309.45 36
320.45 DL 36 307.45 36 318.45 DL 41.5 318.7 36 318.7 DL 43.5 318.7 38
318.7 DL 49 318.7 43.5 318.7 DL(The)72 343.7 Q F0(XAllocClassHint)3.666
E F1(function allocates and returns a pointer to an)3.666 E F0
(XClassHint)3.666 E F1 2.75(structure. Note)3.666 F
(that the pointer \214elds in the)72 356.7 Q F0(XClassHint)3.666 E F1
(structure are initially set to NULL.)3.666 E(If insuf)5.5 E
(\214cient mem-)-.275 E(ory is a)72 369.7 Q -.275(va)-.22 G(ilable,).275
E F0(XAllocClassHint)3.666 E F1(returns NULL.)3.666 E 1.76 -.88(To f)5.5
H(ree the memory allocated to this structure,).88 E(use)72 382.7 Q F0
(XFr)3.666 E(ee)-.198 E F1(.).916 E(The)72 399.6 Q F0(XClassHint)3.666 E
F1(contains:)3.666 E 36 421.25 36 432.25 DL 36 419.25 36 430.25 DL 41.5
417.5 36 417.5 DL 43.5 417.5 38 417.5 DL 49 417.5 43.5 417.5 DL
(typedef struct {)72 436 Q(char *res_name;)108 449 Q(char *res_class;)
108 462 Q 2.75(}X)72 475 S(ClassHint;)-2.75 E 36 477.15 36 488.15 DL 36
475.15 36 486.15 DL 41.5 486.4 36 486.4 DL 43.5 486.4 38 486.4 DL 49
486.4 43.5 486.4 DL(The res_name member contains the application name, \
and the res_class member contains the)72 511.4 Q(application class.)72
524.4 Q(Note that the name set in this property may dif)5.5 E
(fer from the name set as)-.275 E(WM_N)72 537.4 Q 2.75(AME. That)-.385 F
(is, WM_N)2.75 E
(AME speci\214es what should be displayed in the title bar and, there-)
-.385 E(fore, can contain temporal information \(for e)72 550.4 Q
(xample, the name of a \214le currently in an editor')-.165 E(s)-.605 E
-.22(bu)72 563.4 S -.275(ff).22 G 2.75(er\). On).275 F(the other hand, \
the name speci\214ed as part of WM_CLASS is the formal name of the)2.75
E(application that should be used when retrie)72 576.4 Q
(ving the application')-.275 E 2.75(sr)-.605 G
(esources from the resource)-2.75 E(database.)72 589.4 Q 1.76 -.88(To s)
72 619.3 T(et a windo).88 E(w')-.275 E 2.75(sW)-.605 G(M_CLASS property)
-2.75 E 2.75(,u)-.715 G(se)-2.75 E F0(XSetClassHint)3.666 E F1(.).916 E
F0(365)279.75 769 Q 0 Cg EP
%%Page: 366 371
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E .44 LW 36 76.75 36 87.75 DL 36 74.75
36 85.75 DL 41.5 73 36 73 DL 43.5 73 38 73 DL 49 73 43.5 73 DL/F1 11
/Times-Roman@0 SF -1.834(XSetClassHint \()72 88.9 R/F2 11/Times-Italic@0
SF(display).916 E F1(,)A F2(w)2.75 E F1(,)A F2(class_hints)2.75 E F1(\))
.916 E(Display *)88.5 101.9 Q F2(display)A F1(;).916 E -.44(Wi)88.5
114.9 S(ndo).44 E(w)-.275 E F2(w)2.75 E F1(;).916 E(XClassHint *)88.5
127.9 Q F2(class_hints)A F1(;).916 E F2(display)72 148.7 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2(w)72 165.6 Q F1(Speci\214es the windo)64.663 E -.715(w.)-.275 G F2
(class_hints)72 182.5 Q F1(Speci\214es the)23.105 E F0(XClassHint)3.666
E F1(structure that is to be used.)3.666 E 36 178.15 36 189.15 DL 36
176.15 36 187.15 DL 41.5 187.4 36 187.4 DL 43.5 187.4 38 187.4 DL 49
187.4 43.5 187.4 DL(The)72 212.4 Q F0(XSetClassHint)3.666 E F1
(function sets the class hint for the speci\214ed windo)3.666 E 4.18
-.715(w. I)-.275 H 2.75(ft).715 G(he strings are not in)-2.75 E(the Hos\
t Portable Character Encoding, the result is implementation-dependent.)
72 225.4 Q F0(XSetClassHint)72.916 242.3 Q F1(can generate)3.666 E F0
(BadAlloc)3.666 E F1(and)3.666 E F0(BadW)3.666 E(indo)-.198 E(w)-.11 E
F1(errors.)3.666 E 1.76 -.88(To r)72 272.2 T(ead a windo).88 E(w')-.275
E 2.75(sW)-.605 G(M_CLASS property)-2.75 E 2.75(,u)-.715 G(se)-2.75 E F0
(XGetClassHint)3.666 E F1(.).916 E 36 289.95 36 300.95 DL 36 287.95 36
298.95 DL 41.5 286.2 36 286.2 DL 43.5 286.2 38 286.2 DL 49 286.2 43.5
286.2 DL(Status XGetClassHint)72 302.1 Q(\().916 E F2(display).916 E F1
(,)A F2(w)2.75 E F1(,)A F2(class_hints_r)2.75 E(eturn)-.407 E F1(\)).916
E(Display *)88.5 315.1 Q F2(display)A F1(;).916 E -.44(Wi)88.5 328.1 S
(ndo).44 E(w)-.275 E F2(w)2.75 E F1(;)A(XClassHint *)88.5 341.1 Q F2
(class_hints_r)A(eturn)-.407 E F1(;).916 E F2(display)72 361.9 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2(w)72 378.8 Q F1(Speci\214es the windo)64.663 E -.715(w.)-.275 G F2
(class_hints_r)72 395.7 Q(eturn)-.407 E F1(Returns the)144 408.7 Q F0
(XClassHint)3.666 E F1(structure.)3.666 E 36 404.35 36 415.35 DL 36
402.35 36 413.35 DL 41.5 413.6 36 413.6 DL 43.5 413.6 38 413.6 DL 49
413.6 43.5 413.6 DL(The)72 438.6 Q F0(XGetClassHint)3.666 E F1
(function returns the class hint of the speci\214ed windo)3.666 E 2.75
(wt)-.275 G 2.75(ot)-2.75 G(he members of)-2.75 E
(the supplied structure.)72 451.6 Q(If the data returned by the serv)5.5
E(er is in the Latin Portable Character Encod-)-.165 E(ing, then the re\
turned strings are in the Host Portable Character Encoding.)72 464.6 Q
(Otherwise, the result)5.5 E(is implementation-dependent.)72 477.6 Q
(It returns a nonzero status on success; otherwise, it returns a zero)
5.5 E 2.75(status. T)72 490.6 R 2.75(of)-.88 G
(ree res_name and res_class when \214nished with the strings, use)-2.75
E F0(XFr)3.666 E(ee)-.198 E F1(on each indi-)3.666 E(vidually)72 503.6 Q
(.)-.715 E F0(XGetClassHint)72.916 520.5 Q F1(can generate a)3.666 E F0
(BadW)3.666 E(indo)-.198 E(w)-.11 E F1(error)3.666 E(.)-.605 E F0 2.75
(14.1.9. Setting)72 546.5 R(and Reading the WM_TRANSIENT_FOR Pr)2.75 E
(operty)-.198 E F1(Xlib pro)72 563.4 Q(vides functions that you can use\
 to set and read the WM_TRANSIENT_FOR property)-.165 E(for a gi)72 576.4
Q -.165(ve)-.275 G 2.75(nw).165 G(indo)-2.75 E -.715(w.)-.275 G 1.76
-.88(To s)72 606.3 T(et a windo).88 E(w')-.275 E 2.75(sW)-.605 G
(M_TRANSIENT_FOR property)-2.75 E 2.75(,u)-.715 G(se)-2.75 E F0(XSetT)
3.666 E(ransientF)-.814 E(orHint)-.275 E F1(.).916 E F0(366)279.75 769 Q
0 Cg EP
%%Page: 367 372
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E .44 LW 36 76.75 36 87.75 DL 36 74.75
36 85.75 DL 41.5 73 36 73 DL 43.5 73 38 73 DL 49 73 43.5 73 DL/F1 11
/Times-Roman@0 SF(XSetT)72 88.9 Q(ransientF)-.385 E -1.834(orHint \()
-.165 F/F2 11/Times-Italic@0 SF(display).916 E F1(,)A F2(w)2.75 E F1(,)A
F2(pr)2.75 E(op_window)-.495 E F1(\)).916 E(Display *)88.5 101.9 Q F2
(display)A F1(;).916 E -.44(Wi)88.5 114.9 S(ndo).44 E(w)-.275 E F2(w)
2.75 E F1(;).916 E -.44(Wi)88.5 127.9 S(ndo).44 E(w)-.275 E F2(pr)2.75 E
(op_window)-.495 E F1(;).916 E F2(display)72 148.7 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2(w)72 165.6 Q F1(Speci\214es the windo)64.663 E -.715(w.)-.275 G F2
(pr)72 182.5 Q(op_window)-.495 E F1(Speci\214es the windo)11.984 E 2.75
(wt)-.275 G(hat the WM_TRANSIENT_FOR property is to be set to.)-2.75 E
36 178.15 36 189.15 DL 36 176.15 36 187.15 DL 41.5 187.4 36 187.4 DL
43.5 187.4 38 187.4 DL 49 187.4 43.5 187.4 DL(The)72 212.4 Q F0(XSetT)
3.666 E(ransientF)-.814 E(orHint)-.275 E F1
(function sets the WM_TRANSIENT_FOR property of the speci\214ed)3.666 E
(windo)72 225.4 Q 2.75(wt)-.275 G 2.75(ot)-2.75 G
(he speci\214ed prop_windo)-2.75 E -.715(w.)-.275 G F0(XSetT)72.916
242.3 Q(ransientF)-.814 E(orHint)-.275 E F1(can generate)3.666 E F0
(BadAlloc)3.666 E F1(and)3.666 E F0(BadW)3.666 E(indo)-.198 E(w)-.11 E
F1(errors.)3.666 E 1.76 -.88(To r)72 272.2 T(ead a windo).88 E(w')-.275
E 2.75(sW)-.605 G(M_TRANSIENT_FOR property)-2.75 E 2.75(,u)-.715 G(se)
-2.75 E F0(XGetT)3.666 E(ransientF)-.814 E(orHint)-.275 E F1(.).916 E 36
289.95 36 300.95 DL 36 287.95 36 298.95 DL 41.5 286.2 36 286.2 DL 43.5
286.2 38 286.2 DL 49 286.2 43.5 286.2 DL(Status XGetT)72 302.1 Q
(ransientF)-.385 E -1.834(orHint \()-.165 F F2(display).916 E F1(,)A F2
(w)2.75 E F1(,)A F2(pr)2.75 E(op_window_r)-.495 E(eturn)-.407 E F1(\))
.916 E(Display *)88.5 315.1 Q F2(display)A F1(;).916 E -.44(Wi)88.5
328.1 S(ndo).44 E(w)-.275 E F2(w)2.75 E F1(;).916 E -.44(Wi)88.5 341.1 S
(ndo).44 E 2.75(w*)-.275 G F2(pr)-2.75 E(op_window_r)-.495 E(eturn)-.407
E F1(;).916 E F2(display)72 361.9 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2(w)72 378.8 Q F1(Speci\214es the windo)64.663 E -.715(w.)-.275 G F2
(pr)72 395.7 Q(op_window_r)-.495 E(eturn)-.407 E F1
(Returns the WM_TRANSIENT_FOR property of the speci\214ed windo)144
408.7 Q -.715(w.)-.275 G 36 404.35 36 415.35 DL 36 402.35 36 413.35 DL
41.5 413.6 36 413.6 DL 43.5 413.6 38 413.6 DL 49 413.6 43.5 413.6 DL
(The)72 438.6 Q F0(XGetT)3.666 E(ransientF)-.814 E(orHint)-.275 E F1
(function returns the WM_TRANSIENT_FOR property for the)3.666 E
(speci\214ed windo)72 451.6 Q 4.18 -.715(w. I)-.275 H 2.75(tr).715 G(et\
urns a nonzero status on success; otherwise, it returns a zero status.)
-2.75 E F0(XGetT)72.916 468.5 Q(ransientF)-.814 E(orHint)-.275 E F1
(can generate a)3.666 E F0(BadW)3.666 E(indo)-.198 E(w)-.11 E F1(error)
3.666 E(.)-.605 E F0 2.75(14.1.10. Setting)72 494.5 R
(and Reading the WM_PR)2.75 E -2.068 -.44(OT O)-.33 H(COLS Pr).44 E
(operty)-.198 E F1(Xlib pro)72 511.4 Q
(vides functions that you can use to set and read the WM_PR)-.165 E
-2.068 -.44(OT O)-.44 H(COLS property for a).44 E(gi)72 524.4 Q -.165
(ve)-.275 G 2.75(nw).165 G(indo)-2.75 E -.715(w.)-.275 G 1.76 -.88(To s)
72 554.3 T(et a windo).88 E(w')-.275 E 2.75(sW)-.605 G(M_PR)-2.75 E
-2.068 -.44(OT O)-.44 H(COLS property).44 E 2.75(,u)-.715 G(se)-2.75 E
F0(XSetWMPr)3.666 E(otocols)-.198 E F1(.).916 E F0(367)279.75 769 Q 0 Cg
EP
%%Page: 368 373
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E .44 LW 36 76.75 36 87.75 DL 36 74.75
36 85.75 DL 41.5 73 36 73 DL 43.5 73 38 73 DL 49 73 43.5 73 DL/F1 11
/Times-Roman@0 SF(Status XSetWMProtocols)72 88.9 Q(\().916 E/F2 11
/Times-Italic@0 SF(display).916 E F1(,)A F2(w)2.75 E F1(,)A F2(pr)2.75 E
(otocols)-.495 E F1(,)A F2(count)2.75 E F1(\)).916 E(Display *)88.5
101.9 Q F2(display)A F1(;).916 E -.44(Wi)88.5 114.9 S(ndo).44 E(w)-.275
E F2(w)2.75 E F1(;).916 E(Atom *)88.5 127.9 Q F2(pr)A(otocols)-.495 E F1
(;).916 E(int)88.5 140.9 Q F2(count)2.75 E F1(;).916 E F2(display)72
161.7 Q F1(Speci\214es the connection to the X serv)40.221 E(er)-.165 E
(.)-.605 E F2(w)72 178.6 Q F1(Speci\214es the windo)64.663 E -.715(w.)
-.275 G F2(pr)72 195.5 Q(otocols)-.495 E F1
(Speci\214es the list of protocols.)30.937 E F2(count)72 212.4 Q F1
(Speci\214es the number of protocols in the list.)47.558 E 36 208.05 36
219.05 DL 36 206.05 36 217.05 DL 41.5 217.3 36 217.3 DL 43.5 217.3 38
217.3 DL 49 217.3 43.5 217.3 DL(The)72 242.3 Q F0(XSetWMPr)3.666 E
(otocols)-.198 E F1(function replaces the WM_PR)3.666 E -2.068 -.44
(OT O)-.44 H(COLS property on the speci\214ed win-).44 E(do)72 255.3 Q
2.75(ww)-.275 G(ith the list of atoms speci\214ed by the protocols ar)
-2.75 E 2.75(gument. If)-.198 F(the property does not already)2.75 E
-.165(ex)72 268.3 S(ist,).165 E F0(XSetWMPr)3.666 E(otocols)-.198 E F1
(sets the WM_PR)3.666 E -2.068 -.44(OT O)-.44 H
(COLS property on the speci\214ed windo).44 E 2.75(wt)-.275 G 2.75(ot)
-2.75 G(he)-2.75 E(list of atoms speci\214ed by the protocols ar)72
281.3 Q 2.75(gument. The)-.198 F(property is stored with a type of A)
2.75 E -.198(TO)-1.221 G(M).198 E(and a format of 32.)72 294.3 Q
(If it cannot intern the WM_PR)5.5 E -2.068 -.44(OT O)-.44 H(COLS atom,)
.44 E F0(XSetWMPr)3.666 E(otocols)-.198 E F1(returns)3.666 E 2.75(az)72
307.3 S(ero status.)-2.75 E(Otherwise, it returns a nonzero status.)5.5
E F0(XSetWMPr)72.916 324.2 Q(otocols)-.198 E F1(can generate)3.666 E F0
(BadAlloc)3.666 E F1(and)3.666 E F0(BadW)3.666 E(indo)-.198 E(w)-.11 E
F1(errors.)3.666 E 1.76 -.88(To r)72 354.1 T(ead a windo).88 E(w')-.275
E 2.75(sW)-.605 G(M_PR)-2.75 E -2.068 -.44(OT O)-.44 H(COLS property).44
E 2.75(,u)-.715 G(se)-2.75 E F0(XGetWMPr)3.666 E(otocols)-.198 E F1(.)
.916 E 36 371.85 36 382.85 DL 36 369.85 36 380.85 DL 41.5 368.1 36 368.1
DL 43.5 368.1 38 368.1 DL 49 368.1 43.5 368.1 DL(Status XGetWMProtocols)
72 384 Q(\().916 E F2(display).916 E F1(,)A F2(w)2.75 E F1(,)A F2(pr)
2.75 E(otocols_r)-.495 E(eturn)-.407 E F1(,)A F2(count_r)2.75 E(eturn)
-.407 E F1(\)).916 E(Display *)88.5 397 Q F2(display)A F1(;).916 E -.44
(Wi)88.5 410 S(ndo).44 E(w)-.275 E F2(w)2.75 E F1(;).916 E(Atom **)88.5
423 Q F2(pr)A(otocols_r)-.495 E(eturn)-.407 E F1(;).916 E(int *)88.5 436
Q F2(count_r)A(eturn)-.407 E F1(;).916 E F2(display)72 456.8 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2(w)72 473.7 Q F1(Speci\214es the windo)64.663 E -.715(w.)-.275 G F2
(pr)72 490.6 Q(otocols_r)-.495 E(eturn)-.407 E F1
(Returns the list of protocols.)144 503.6 Q F2(count_r)72 520.5 Q(eturn)
-.407 E F1(Returns the number of protocols in the list.)14.965 E 36
516.15 36 527.15 DL 36 514.15 36 525.15 DL 41.5 525.4 36 525.4 DL 43.5
525.4 38 525.4 DL 49 525.4 43.5 525.4 DL(The)72 550.4 Q F0(XGetWMPr)
3.666 E(otocols)-.198 E F1
(function returns the list of atoms stored in the WM_PR)3.666 E -2.068
-.44(OT O)-.44 H(COLS).44 E(property on the speci\214ed windo)72 563.4 Q
4.18 -.715(w. T)-.275 H(hese atoms describe windo).715 E 2.75(wm)-.275 G
(anager protocols in which the)-2.75 E -.275(ow)72 576.4 S
(ner of this windo).275 E 2.75(wi)-.275 G 2.75(sw)-2.75 G
(illing to participate.)-2.75 E(If the property e)5.5 E
(xists, is of type A)-.165 E -.198(TO)-1.221 G(M, is of for).198 E(-)
-.22 E(mat 32, and the atom WM_PR)72 589.4 Q -2.068 -.44(OT O)-.44 H
(COLS can be interned,).44 E F0(XGetWMPr)3.666 E(otocols)-.198 E F1
(sets the proto-)3.666 E(cols_return ar)72 602.4 Q
(gument to a list of atoms, sets the count_return ar)-.198 E
(gument to the number of elements)-.198 E
(in the list, and returns a nonzero status.)72 615.4 Q
(Otherwise, it sets neither of the return ar)5.5 E(guments and)-.198 E
(returns a zero status.)72 628.4 Q 1.76 -.88(To r)5.5 H
(elease the list of atoms, use).88 E F0(XFr)3.666 E(ee)-.198 E F1(.).916
E F0(XGetWMPr)72.916 645.3 Q(otocols)-.198 E F1(can generate a)3.666 E
F0(BadW)3.666 E(indo)-.198 E(w)-.11 E F1(error)3.666 E(.)-.605 E F0 2.75
(14.1.11. Setting)72 671.3 R(and Reading the WM_COLORMAP_WINDO)2.75 E
(WS Pr)-.55 E(operty)-.198 E F1(Xlib pro)72 688.2 Q
(vides functions that you can use to set and read the WM_COLORMAP_WINDO)
-.165 E(WS)-.385 E(property for a gi)72 701.2 Q -.165(ve)-.275 G 2.75
(nw).165 G(indo)-2.75 E -.715(w.)-.275 G F0(368)279.75 769 Q 0 Cg EP
%%Page: 369 374
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E/F1 11/Times-Roman@0 SF 1.76 -.88(To s)
72 85 T(et a windo).88 E(w')-.275 E 2.75(sW)-.605 G(M_COLORMAP_WINDO)
-2.75 E(WS property)-.385 E 2.75(,u)-.715 G(se)-2.75 E F0
(XSetWMColormapW)3.666 E(indo)-.198 E(ws)-.11 E F1(.).916 E .44 LW 36
102.75 36 113.75 DL 36 100.75 36 111.75 DL 41.5 99 36 99 DL 43.5 99 38
99 DL 49 99 43.5 99 DL(Status XSetWMColormapW)72 114.9 Q(indo)-.44 E
-1.834(ws \()-.275 F/F2 11/Times-Italic@0 SF(display).916 E F1(,)A F2(w)
2.75 E F1(,)A F2(colormap_windows)2.75 E F1(,)A F2(count)2.75 E F1(\))
.916 E(Display *)88.5 127.9 Q F2(display)A F1(;).916 E -.44(Wi)88.5
140.9 S(ndo).44 E(w)-.275 E F2(w)2.75 E F1(;).916 E -.44(Wi)88.5 153.9 S
(ndo).44 E 2.75(w*)-.275 G F2(colormap_windows)-2.75 E F1(;).916 E(int)
88.5 166.9 Q F2(count)2.75 E F1(;).916 E F2(display)72 187.7 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2(w)72 204.6 Q F1(Speci\214es the windo)64.663 E -.715(w.)-.275 G F2
(colormap_windows)72 221.5 Q F1(Speci\214es the list of windo)144 234.5
Q(ws.)-.275 E F2(count)72 251.4 Q F1(Speci\214es the number of windo)
47.558 E(ws in the list.)-.275 E 36 247.05 36 258.05 DL 36 245.05 36
256.05 DL 41.5 256.3 36 256.3 DL 43.5 256.3 38 256.3 DL 49 256.3 43.5
256.3 DL(The)72 281.3 Q F0(XSetWMColormapW)3.666 E(indo)-.198 E(ws)-.11
E F1(function replaces the WM_COLORMAP_WINDO)3.666 E(WS prop-)-.385 E
(erty on the speci\214ed windo)72 294.3 Q 2.75(ww)-.275 G
(ith the list of windo)-2.75 E(ws speci\214ed by the colormap_windo)
-.275 E(ws ar)-.275 E(gu-)-.198 E 2.75(ment. If)72 307.3 R
(the property does not already e)2.75 E(xist,)-.165 E F0
(XSetWMColormapW)3.666 E(indo)-.198 E(ws)-.11 E F1(sets the WM_COL-)
3.666 E(ORMAP_WINDO)72 320.3 Q(WS property on the speci\214ed windo)
-.385 E 2.75(wt)-.275 G 2.75(ot)-2.75 G(he list of windo)-2.75 E
(ws speci\214ed by the)-.275 E(colormap_windo)72 333.3 Q(ws ar)-.275 E
2.75(gument. The)-.198 F(property is stored with a type of WINDO)2.75 E
2.75(Wa)-.385 G(nd a format of)-2.75 E 2.75(32. If)72 346.3 R
(it cannot intern the WM_COLORMAP_WINDO)2.75 E(WS atom,)-.385 E F0
(XSetWMColormapW)3.666 E(indo)-.198 E(ws)-.11 E F1
(returns a zero status.)72 359.3 Q
(Otherwise, it returns a nonzero status.)5.5 E F0(XSetWMColormapW)72.916
376.2 Q(indo)-.198 E(ws)-.11 E F1(can generate)3.666 E F0(BadAlloc)3.666
E F1(and)3.666 E F0(BadW)3.666 E(indo)-.198 E(w)-.11 E F1(errors.)3.666
E 1.76 -.88(To r)72 406.1 T(ead a windo).88 E(w')-.275 E 2.75(sW)-.605 G
(M_COLORMAP_WINDO)-2.75 E(WS property)-.385 E 2.75(,u)-.715 G(se)-2.75 E
F0(XGetWMColormapW)3.666 E(in-)-.198 E(do)72 419.1 Q(ws)-.11 E F1(.).916
E 36 436.85 36 447.85 DL 36 434.85 36 445.85 DL 41.5 433.1 36 433.1 DL
43.5 433.1 38 433.1 DL 49 433.1 43.5 433.1 DL(Status XGetWMColormapW)72
449 Q(indo)-.44 E -1.834(ws \()-.275 F F2(display).916 E F1(,)A F2(w)
2.75 E F1(,)A F2(colormap_windows_r)2.75 E(eturn)-.407 E F1(,)A F2
(count_r)2.75 E(eturn)-.407 E F1(\)).916 E(Display *)88.5 462 Q F2
(display)A F1(;).916 E -.44(Wi)88.5 475 S(ndo).44 E(w)-.275 E F2(w)2.75
E F1(;).916 E -.44(Wi)88.5 488 S(ndo).44 E 2.75(w*)-.275 G(*)-2.75 E F2
(colormap_windows_r)A(eturn)-.407 E F1(;).916 E(int *)88.5 501 Q F2
(count_r)A(eturn)-.407 E F1(;).916 E F2(display)72 521.8 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2(w)72 538.7 Q F1(Speci\214es the windo)64.663 E -.715(w.)-.275 G F2
(colormap_windows_r)72 555.6 Q(eturn)-.407 E F1
(Returns the list of windo)144 568.6 Q(ws.)-.275 E F2(count_r)72 585.5 Q
(eturn)-.407 E F1(Returns the number of windo)14.965 E(ws in the list.)
-.275 E 36 581.15 36 592.15 DL 36 579.15 36 590.15 DL 41.5 590.4 36
590.4 DL 43.5 590.4 38 590.4 DL 49 590.4 43.5 590.4 DL(The)72 615.4 Q F0
(XGetWMColormapW)3.666 E(indo)-.198 E(ws)-.11 E F1
(function returns the list of windo)3.666 E 2.75(wi)-.275 G
(denti\214ers stored in the)-2.75 E(WM_COLORMAP_WINDO)72 628.4 Q
(WS property on the speci\214ed windo)-.385 E 4.18 -.715(w. T)-.275 H
(hese identi\214ers indicate the).715 E(colormaps that the windo)72
641.4 Q 2.75(wm)-.275 G(anager may need to install for this windo)-2.75
E 4.18 -.715(w. I)-.275 H 2.75(ft).715 G(he property e)-2.75 E
(xists, is)-.165 E(of type WINDO)72 654.4 Q 2.024 -1.012(W, i)-.385 H
2.75(so)1.012 G 2.75(ff)-2.75 G
(ormat 32, and the atom WM_COLORMAP_WINDO)-2.75 E(WS can be)-.385 E
(interned,)72 667.4 Q F0(XGetWMColormapW)3.666 E(indo)-.198 E(ws)-.11 E
F1(sets the windo)3.666 E(ws_return ar)-.275 E
(gument to a list of windo)-.198 E(w)-.275 E
(identi\214ers, sets the count_return ar)72 680.4 Q
(gument to the number of elements in the list, and returns a)-.198 E
(nonzero status.)72 693.4 Q(Otherwise, it sets neither of the return ar)
5.5 E(guments and returns a zero status.)-.198 E -.88(To)5.5 G
(release the list of windo)72 706.4 Q 2.75(wi)-.275 G(denti\214ers, use)
-2.75 E F0(XFr)3.666 E(ee)-.198 E F1(.).916 E F0(369)279.75 769 Q 0 Cg
EP
%%Page: 370 375
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E(XGetWMColormapW)72.916 85 Q(indo)-.198
E(ws)-.11 E/F1 11/Times-Roman@0 SF(can generate a)3.666 E F0(BadW)3.666
E(indo)-.198 E(w)-.11 E F1(error)3.666 E(.)-.605 E F0 2.75
(14.1.12. Setting)72 111 R(and Reading the WM_ICON_SIZE Pr)2.75 E
(operty)-.198 E F1(Xlib pro)72 127.9 Q(vides functions that you can use\
 to set and read the WM_ICON_SIZE property for a)-.165 E(gi)72 140.9 Q
-.165(ve)-.275 G 2.75(nw).165 G(indo)-2.75 E 4.18 -.715(w. T)-.275 H
(hese functions use the).715 E F0(XIconSize)3.666 E F1
(structure, which is de\214ned in the)3.666 E(<)72 153.9 Q F0
(X11/Xutil.h)A F1 2.75(>h)C(eader \214le.)-2.75 E 1.76 -.88(To a)72
183.8 T(llocate an).88 E F0(XIconSize)3.666 E F1(structure, use)3.666 E
F0(XAllocIconSize)3.666 E F1(.).916 E .44 LW 36 201.55 36 212.55 DL 36
199.55 36 210.55 DL 41.5 197.8 36 197.8 DL 43.5 197.8 38 197.8 DL 49
197.8 43.5 197.8 DL(XIconSize *XAllocIconSize)72 213.7 Q 1.833(\(\)).916
G 36 213.25 36 224.25 DL 36 211.25 36 222.25 DL 41.5 222.5 36 222.5 DL
43.5 222.5 38 222.5 DL 49 222.5 43.5 222.5 DL(The)72 247.5 Q F0
(XAllocIconSize)3.666 E F1
(function allocates and returns a pointer to an)3.666 E F0(XIconSize)
3.666 E F1 2.75(structure. Note)3.666 F(that all \214elds in the)72
260.5 Q F0(XIconSize)3.666 E F1(structure are initially set to zero.)
3.666 E(If insuf)5.5 E(\214cient memory is a)-.275 E -.275(va)-.22 G
(il-).275 E(able,)72 273.5 Q F0(XAllocIconSize)3.666 E F1(returns NULL.)
3.666 E 1.76 -.88(To f)5.5 H
(ree the memory allocated to this structure, use).88 E F0(XFr)3.666 E
(ee)-.198 E F1(.).916 E(The)72 290.4 Q F0(XIconSize)3.666 E F1
(structure contains:)3.666 E 36 312.05 36 323.05 DL 36 310.05 36 321.05
DL 41.5 308.3 36 308.3 DL 43.5 308.3 38 308.3 DL 49 308.3 43.5 308.3 DL
(typedef struct {)72 326.8 Q(int min_width, min_height;)108 339.8 Q
(int max_width, max_height;)108 352.8 Q(int width_inc, height_inc;)108
365.8 Q 2.75(}X)72 378.8 S(IconSize;)-2.75 E 36 380.95 36 391.95 DL 36
378.95 36 389.95 DL 41.5 390.2 36 390.2 DL 43.5 390.2 38 390.2 DL 49
390.2 43.5 390.2 DL(The width_inc and height_inc members de\214ne an ar\
ithmetic progression of sizes \(minimum to)72 415.2 Q
(maximum\) that represent the supported icon sizes.)72 428.2 Q 1.76 -.88
(To s)72 458.1 T(et a windo).88 E(w')-.275 E 2.75(sW)-.605 G
(M_ICON_SIZE property)-2.75 E 2.75(,u)-.715 G(se)-2.75 E F0
(XSetIconSizes)3.666 E F1(.).916 E 36 475.85 36 486.85 DL 36 473.85 36
484.85 DL 41.5 472.1 36 472.1 DL 43.5 472.1 38 472.1 DL 49 472.1 43.5
472.1 DL -1.834(XSetIconSizes \()72 488 R/F2 11/Times-Italic@0 SF
(display).916 E F1(,)A F2(w)2.75 E F1(,)A F2(size_list)2.75 E F1(,)A F2
(count)2.75 E F1(\)).916 E(Display *)88.5 501 Q F2(display)A F1(;).916 E
-.44(Wi)88.5 514 S(ndo).44 E(w)-.275 E F2(w)2.75 E F1(;).916 E
(XIconSize *)88.5 527 Q F2(size_list)A F1(;).916 E(int)88.5 540 Q F2
(count)2.75 E F1(;).916 E F2(display)72 560.8 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2(w)72 577.7 Q F1(Speci\214es the windo)64.663 E -.715(w.)-.275 G F2
(size_list)72 594.6 Q F1(Speci\214es the size list.)36.547 E F2(count)72
611.5 Q F1(Speci\214es the number of items in the size list.)47.558 E 36
607.15 36 618.15 DL 36 605.15 36 616.15 DL 41.5 616.4 36 616.4 DL 43.5
616.4 38 616.4 DL 49 616.4 43.5 616.4 DL(The)72 641.4 Q F0
(XSetIconSizes)3.666 E F1(function is used only by windo)3.666 E 2.75
(wm)-.275 G(anagers to set the supported icon sizes.)-2.75 E F0
(XSetIconSizes)72.916 658.3 Q F1(can generate)3.666 E F0(BadAlloc)3.666
E F1(and)3.666 E F0(BadW)3.666 E(indo)-.198 E(w)-.11 E F1(errors.)3.666
E 1.76 -.88(To r)72 688.2 T(ead a windo).88 E(w')-.275 E 2.75(sW)-.605 G
(M_ICON_SIZE property)-2.75 E 2.75(,u)-.715 G(se)-2.75 E F0
(XGetIconSizes)3.666 E F1(.).916 E F0(370)279.75 769 Q 0 Cg EP
%%Page: 371 376
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E .44 LW 36 76.75 36 87.75 DL 36 74.75
36 85.75 DL 41.5 73 36 73 DL 43.5 73 38 73 DL 49 73 43.5 73 DL/F1 11
/Times-Roman@0 SF(Status XGetIconSizes)72 88.9 Q(\().916 E/F2 11
/Times-Italic@0 SF(display).916 E F1(,)A F2(w)2.75 E F1(,)A F2
(size_list_r)2.75 E(eturn)-.407 E F1(,)A F2(count_r)2.75 E(eturn)-.407 E
F1(\)).916 E(Display *)88.5 101.9 Q F2(display)A F1(;).916 E -.44(Wi)
88.5 114.9 S(ndo).44 E(w)-.275 E F2(w)2.75 E F1(;).916 E(XIconSize **)
88.5 127.9 Q F2(size_list_r)A(eturn)-.407 E F1(;).916 E(int *)88.5 140.9
Q F2(count_r)A(eturn)-.407 E F1(;).916 E F2(display)72 161.7 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2(w)72 178.6 Q F1(Speci\214es the windo)64.663 E -.715(w.)-.275 G F2
(size_list_r)72 195.5 Q(eturn)-.407 E F1(Returns the size list.)144
208.5 Q F2(count_r)72 225.4 Q(eturn)-.407 E F1
(Returns the number of items in the size list.)14.965 E 36 221.05 36
232.05 DL 36 219.05 36 230.05 DL 41.5 230.3 36 230.3 DL 43.5 230.3 38
230.3 DL 49 230.3 43.5 230.3 DL(The)72 255.3 Q F0(XGetIconSizes)3.666 E
F1(function returns zero if a windo)3.666 E 2.75(wm)-.275 G
(anager has not set icon sizes; otherwise,)-2.75 E(it returns nonzero.)
72 268.3 Q F0(XGetIconSizes)6.416 E F1
(should be called by an application that w)3.666 E
(ants to \214nd out what)-.11 E(icon sizes w)72 281.3 Q
(ould be most appreciated by the windo)-.11 E 2.75(wm)-.275 G
(anager under which the application is run-)-2.75 E 2.75(ning. The)72
294.3 R(application should then use)2.75 E F0(XSetWMHints)3.666 E F1
(to supply the windo)3.666 E 2.75(wm)-.275 G(anager with an)-2.75 E
(icon pixmap or windo)72 307.3 Q 2.75(wi)-.275 G 2.75(no)-2.75 G
(ne of the supported sizes.)-2.75 E 1.76 -.88(To f)5.5 H
(ree the data allocated in).88 E(size_list_return, use)72 320.3 Q F0
(XFr)3.666 E(ee)-.198 E F1(.).916 E F0(XGetIconSizes)72.916 337.2 Q F1
(can generate a)3.666 E F0(BadW)3.666 E(indo)-.198 E(w)-.11 E F1(error)
3.666 E(.)-.605 E F0 2.75(14.1.13. Using)72 363.2 R -.198(Wi)2.75 G(ndo)
.198 E 2.75(wM)-.11 G(anager Con)-2.75 E -.11(ve)-.44 G
(nience Functions).11 E F1(The)72 380.1 Q F0(XmbSetWMPr)3.666 E
(operties)-.198 E F1(and)3.666 E F0(Xutf8SetWMPr)3.666 E(operties)-.198
E F1(functions store the standard set of)3.666 E(windo)72 393.1 Q 2.75
(wm)-.275 G(anager properties, with te)-2.75 E
(xt properties in standard encodings for internationalized te)-.165 E
(xt)-.165 E 2.75(communication. The)72 406.1 R(standard windo)2.75 E
2.75(wm)-.275 G(anager properties for a gi)-2.75 E -.165(ve)-.275 G 2.75
(nw).165 G(indo)-2.75 E 2.75(wa)-.275 G(re WM_N)-2.75 E(AME,)-.385 E
(WM_ICON_N)72 419.1 Q
(AME, WM_HINTS, WM_NORMAL_HINTS, WM_CLASS, WM_COMMAND,)-.385 E
(WM_CLIENT_MA)72 432.1 Q(CHINE, and WM_LOCALE_N)-.44 E(AME.)-.385 E F0
(371)279.75 769 Q 0 Cg EP
%%Page: 372 377
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E .44 LW 36 76.75 36 87.75 DL 36 74.75
36 85.75 DL 41.5 73 36 73 DL 43.5 73 38 73 DL 49 73 43.5 73 DL/F1 11
/Times-Roman@0 SF -.22(vo)72 88.9 S(id XmbSetWMProperties).22 E(\().916
E/F2 11/Times-Italic@0 SF(display).916 E F1(,).916 E F2(w)2.75 E F1(,)
.916 E F2(window_name)2.75 E F1(,).916 E F2(icon_name)2.75 E F1(,).916 E
F2(ar)2.75 E(gv)-.407 E F1(,).916 E F2(ar)2.75 E(gc)-.407 E F1(,).916 E
F2(normal_hints)132.5 101.9 Q F1(,).916 E F2(wm_hints)2.75 E F1(,).916 E
F2(class_hints)2.75 E F1(\)).916 E(Display *)88.5 114.9 Q F2(display)A
F1(;).916 E -.44(Wi)88.5 127.9 S(ndo).44 E(w)-.275 E F2(w)2.75 E F1(;)
.916 E(char *)88.5 140.9 Q F2(window_name)A F1(;).916 E(char *)88.5
153.9 Q F2(icon_name)A F1(;).916 E(char *)88.5 166.9 Q F2(ar)A(gv)-.407
E F1([];).916 E(int)88.5 179.9 Q F2(ar)2.75 E(gc)-.407 E F1(;).916 E
(XSizeHints *)88.5 192.9 Q F2(normal_hints)A F1(;).916 E(XWMHints *)88.5
205.9 Q F2(wm_hints)A F1(;).916 E(XClassHint *)88.5 218.9 Q F2
(class_hints)A F1(;).916 E -.22(vo)72 239.7 S(id Xutf8SetWMProperties)
.22 E(\().916 E F2(display).916 E F1(,).916 E F2(w)2.75 E F1(,).916 E F2
(window_name)2.75 E F1(,).916 E F2(icon_name)2.75 E F1(,).916 E F2(ar)
2.75 E(gv)-.407 E F1(,).916 E F2(ar)2.75 E(gc)-.407 E F1(,).916 E F2
(normal_hints)132.5 252.7 Q F1(,).916 E F2(wm_hints)2.75 E F1(,).916 E
F2(class_hints)2.75 E F1(\)).916 E(Display *)88.5 265.7 Q F2(display)A
F1(;).916 E -.44(Wi)88.5 278.7 S(ndo).44 E(w)-.275 E F2(w)2.75 E F1(;)
.916 E(char *)88.5 291.7 Q F2(window_name)A F1(;).916 E(char *)88.5
304.7 Q F2(icon_name)A F1(;).916 E(char *)88.5 317.7 Q F2(ar)A(gv)-.407
E F1([];).916 E(int)88.5 330.7 Q F2(ar)2.75 E(gc)-.407 E F1(;).916 E
(XSizeHints *)88.5 343.7 Q F2(normal_hints)A F1(;).916 E(XWMHints *)88.5
356.7 Q F2(wm_hints)A F1(;).916 E(XClassHint *)88.5 369.7 Q F2
(class_hints)A F1(;).916 E F2(display)72 390.5 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2(w)72 407.4 Q F1(Speci\214es the windo)64.663 E -.715(w.)-.275 G F2
(window_name)72 424.3 Q F1(Speci\214es the windo)8.442 E 2.75(wn)-.275 G
(ame, which should be a null-terminated string.)-2.75 E F2(icon_name)72
441.2 Q F1
(Speci\214es the icon name, which should be a null-terminated string.)
23.732 E F2(ar)72 458.1 Q(gv)-.407 E F1(Speci\214es the application')
52.244 E 2.75(sa)-.605 G -.198(rg)-2.75 G(ument list.).198 E F2(ar)72
475 Q(gc)-.407 E F1(Speci\214es the number of ar)52.244 E(guments.)-.198
E F2(hints)72 491.9 Q F1(Speci\214es the size hints for the windo)50.605
E 2.75(wi)-.275 G 2.75(ni)-2.75 G(ts normal state.)-2.75 E F2(wm_hints)
72 508.8 Q F1(Speci\214es the)29.826 E F0(XWMHints)3.666 E F1
(structure to be used.)3.666 E F2(class_hints)72 525.7 Q F1
(Speci\214es the)23.105 E F0(XClassHint)3.666 E F1
(structure to be used.)3.666 E 36 521.35 36 532.35 DL 36 519.35 36
530.35 DL 41.5 530.6 36 530.6 DL 43.5 530.6 38 530.6 DL 49 530.6 43.5
530.6 DL(The)72 555.6 Q F0(XmbSetWMPr)3.666 E(operties)-.198 E F1(and)
3.666 E F0(Xutf8SetWMPr)3.666 E(operties)-.198 E F1(con)3.666 E -.165
(ve)-.44 G(nience functions pro).165 E(vide a sim-)-.165 E
(ple programming interf)72 568.6 Q
(ace for setting those essential windo)-.11 E 2.75(wp)-.275 G
(roperties that are used for commu-)-2.75 E
(nicating with other clients \(particularly windo)72 581.6 Q 2.75(wa)
-.275 G(nd session managers\).)-2.75 E(If the windo)72 598.5 Q
(w_name ar)-.275 E(gument is non-NULL, the)-.198 E 2.75(ys)-.165 G
(et the WM_N)-2.75 E(AME property)-.385 E 5.5(.I)-.715 G 2.75(ft)-5.5 G
(he)-2.75 E(icon_name ar)72 611.5 Q(gument is non-NULL, the)-.198 E 2.75
(ys)-.165 G(et the WM_ICON_N)-2.75 E(AME property)-.385 E 5.5(.T)-.715 G
(he win-)-5.5 E(do)72 624.5 Q(w_name and icon_name ar)-.275 E
(guments are null-terminated strings, for)-.198 E F0(XmbSetWMPr)3.666 E
(operties)-.198 E F1(in)3.666 E(the encoding of the current locale, for)
72 637.5 Q F0(Xutf8SetWMPr)3.666 E(operties)-.198 E F1
(in UTF-8 encoding.)3.666 E(If the ar)5.5 E(gu-)-.198 E
(ments can be fully con)72 650.5 Q -.165(ve)-.44 G
(rted to the STRING encoding, the properties are created with type).165
E -.814(``)72 663.5 S(STRING').814 E('; otherwise, the ar)-.814 E
(guments are con)-.198 E -.165(ve)-.44 G(rted to Compound T).165 E -.165
(ex)-.77 G(t, and the properties are).165 E(created with type `)72 676.5
Q(`COMPOUND_TEXT')-.814 E('.)-.814 E(If the normal_hints ar)72 693.4 Q
(gument is non-NULL,)-.198 E F0(XmbSetWMPr)3.666 E(operties)-.198 E F1
(and)3.666 E F0(Xutf8SetWMPr)3.666 E(oper)-.198 E(-)-.407 E(ties)72
706.4 Q F1(call)3.666 E F0(XSetWMNormalHints)3.666 E F1 2.75(,w).916 G
(hich sets the WM_NORMAL_HINTS property \(see section)-2.75 E 2.75
(14.1.7\). If)72 719.4 R(the wm_hints ar)2.75 E(gument is non-NULL,)
-.198 E F0(XmbSetWMPr)3.666 E(operties)-.198 E F1(and)3.666 E F0
(Xutf8SetWM-)3.666 E(Pr)72 732.4 Q(operties)-.198 E F1(call)3.666 E F0
(XSetWMHints)3.666 E F1 2.75(,w).916 G
(hich sets the WM_HINTS property \(see section 14.1.6\).)-2.75 E F0(372)
279.75 769 Q 0 Cg EP
%%Page: 373 378
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E/F1 11/Times-Roman@0 SF(If the ar)72 85
Q(gv ar)-.198 E(gument is non-NULL,)-.198 E F0(XmbSetWMPr)3.666 E
(operties)-.198 E F1(and)3.666 E F0(Xutf8SetWMPr)3.666 E(operties)-.198
E F1(set)3.666 E(the WM_COMMAND property from ar)72 98 Q(gv and ar)-.198
E 2.75(gc. An)-.198 F(ar)2.75 E(gc of zero indicates a zero-length com-)
-.198 E(mand.)72 111 Q(The hostname of the machine is stored using)72
127.9 Q F0(XSetWMClientMachine)3.666 E F1(\(see section 14.2.2\).)3.666
E(If the class_hints ar)72 144.8 Q(gument is non-NULL,)-.198 E F0
(XmbSetWMPr)3.666 E(operties)-.198 E F1(and)3.666 E F0(Xutf8SetWMPr)
3.666 E(operties)-.198 E F1(set the WM_CLASS property)72 157.8 Q 5.5(.I)
-.715 G 2.75(ft)-5.5 G(he res_name member in the)-2.75 E F0(XClassHint)
3.666 E F1(structure is set to the)3.666 E
(NULL pointer and the RESOURCE_N)72 170.8 Q(AME en)-.385 E(vironment v)
-.44 E(ariable is set, the v)-.275 E(alue of the en)-.275 E(viron-)-.44
E(ment v)72 183.8 Q(ariable is substituted for res_name.)-.275 E
(If the res_name member is NULL, the en)5.5 E(vironment)-.44 E -.275(va)
72 196.8 S(riable is not set, and ar).275 E(gv and ar)-.198 E
(gv[0] are set, then the v)-.198 E(alue of ar)-.275 E
(gv[0], stripped of an)-.198 E 2.75(yd)-.165 G(irec-)-2.75 E
(tory pre\214x)72 209.8 Q(es, is substituted for res_name.)-.165 E
(It is assumed that the supplied class_hints.res_name and ar)72 226.7 Q
(gv)-.198 E 2.75(,t)-.715 G(he RESOURCE_N)-2.75 E(AME en)-.385 E(viron-)
-.44 E(ment v)72 239.7 Q(ariable, and the hostname of the machine are i\
n the encoding of the current locale.)-.275 E(The)5.5 E
(corresponding WM_CLASS, WM_COMMAND, and WM_CLIENT_MA)72 252.7 Q
(CHINE properties are)-.44 E
(typed according to the local host locale announcer)72 265.7 Q 5.5(.N)
-.605 G 2.75(oe)-5.5 G(ncoding con)-2.75 E -.165(ve)-.44 G
(rsion is performed for).165 E
(these strings prior to storage in the properties.)72 278.7 Q -.165(Fo)
72 295.6 S 2.75(rc).165 G(lients that need to process the property te)
-2.75 E(xt in a locale,)-.165 E F0(XmbSetWMPr)3.666 E(operties)-.198 E
F1(and)3.666 E F0(Xutf8SetWMPr)72.916 308.6 Q(operties)-.198 E F1
(set the WM_LOCALE_N)3.666 E(AME property to be the name of the current)
-.385 E 2.75(locale. The)72 321.6 R(name is assumed to be in the Host P\
ortable Character Encoding and is con)2.75 E -.165(ve)-.44 G(rted to)
.165 E(STRING for storage in the property)72 334.6 Q(.)-.715 E F0
(XmbSetWMPr)72.916 351.5 Q(operties)-.198 E F1(and)3.666 E F0
(Xutf8SetWMPr)3.666 E(operties)-.198 E F1(can generate)3.666 E F0
(BadAlloc)3.666 E F1(and)3.666 E F0(BadW)3.666 E(in-)-.198 E(do)72 364.5
Q(w)-.11 E F1(errors.)3.666 E(The function)72 381.4 Q F0(Xutf8SetWMPr)
3.666 E(operties)-.198 E F1(is an XFree86 e)3.666 E
(xtension introduced in XFree86 4.0.2. Its)-.165 E
(presence is indicated by the macro)72 394.4 Q F0(X_HA)3.666 E
(VE_UTF8_STRING)-1.595 E F1(.).916 E 1.76 -.88(To s)72 424.3 T
(et a windo).88 E(w')-.275 E 2.75(ss)-.605 G(tandard windo)-2.75 E 2.75
(wm)-.275 G
(anager properties with strings in client-speci\214ed encodings,)-2.75 E
(use)72 437.3 Q F0(XSetWMPr)3.666 E(operties)-.198 E F1 5.5(.T).916 G
(he standard windo)-5.5 E 2.75(wm)-.275 G(anager properties for a gi)
-2.75 E -.165(ve)-.275 G 2.75(nw).165 G(indo)-2.75 E 2.75(wa)-.275 G(re)
-2.75 E(WM_N)72 450.3 Q(AME, WM_ICON_N)-.385 E
(AME, WM_HINTS, WM_NORMAL_HINTS, WM_CLASS,)-.385 E
(WM_COMMAND, and WM_CLIENT_MA)72 463.3 Q(CHINE.)-.44 E F0(373)279.75 769
Q 0 Cg EP
%%Page: 374 379
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E .44 LW 36 76.75 36 87.75 DL 36 74.75
36 85.75 DL 41.5 73 36 73 DL 43.5 73 38 73 DL 49 73 43.5 73 DL/F1 11
/Times-Roman@0 SF -.22(vo)72 88.9 S(id XSetWMProperties).22 E(\().916 E
/F2 11/Times-Italic@0 SF(display).916 E F1(,)A F2(w)2.75 E F1(,)A F2
(window_name)2.75 E F1(,)A F2(icon_name)2.75 E F1(,)A F2(ar)2.75 E(gv)
-.407 E F1(,)A F2(ar)2.75 E(gc)-.407 E F1(,)A F2(normal_hints)2.75 E F1
(,)A F2(wm_hints)2.75 E F1(,)A F2(class_hints)2.75 E F1(\)).916 E
(Display *)88.5 101.9 Q F2(display)A F1(;).916 E -.44(Wi)88.5 114.9 S
(ndo).44 E(w)-.275 E F2(w)2.75 E F1(;).916 E(XT)88.5 127.9 Q -.165(ex)
-.77 G(tProperty *).165 E F2(window_name)A F1(;).916 E(XT)88.5 140.9 Q
-.165(ex)-.77 G(tProperty *).165 E F2(icon_name)A F1(;).916 E(char **)
88.5 153.9 Q F2(ar)A(gv)-.407 E F1(;).916 E(int)88.5 166.9 Q F2(ar)2.75
E(gc)-.407 E F1(;).916 E(XSizeHints *)88.5 179.9 Q F2(normal_hints)A F1
(;).916 E(XWMHints *)88.5 192.9 Q F2(wm_hints)A F1(;).916 E
(XClassHint *)88.5 205.9 Q F2(class_hints)A F1(;).916 E F2(display)72
226.7 Q F1(Speci\214es the connection to the X serv)40.221 E(er)-.165 E
(.)-.605 E F2(w)72 243.6 Q F1(Speci\214es the windo)64.663 E -.715(w.)
-.275 G F2(window_name)72 260.5 Q F1(Speci\214es the windo)8.442 E 2.75
(wn)-.275 G(ame, which should be a null-terminated string.)-2.75 E F2
(icon_name)72 277.4 Q F1
(Speci\214es the icon name, which should be a null-terminated string.)
23.732 E F2(ar)72 294.3 Q(gv)-.407 E F1(Speci\214es the application')
52.244 E 2.75(sa)-.605 G -.198(rg)-2.75 G(ument list.).198 E F2(ar)72
311.2 Q(gc)-.407 E F1(Speci\214es the number of ar)52.244 E(guments.)
-.198 E F2(normal_hints)72 328.1 Q F1
(Speci\214es the size hints for the windo)13.326 E 2.75(wi)-.275 G 2.75
(ni)-2.75 G(ts normal state.)-2.75 E F2(wm_hints)72 345 Q F1
(Speci\214es the)29.826 E F0(XWMHints)3.666 E F1(structure to be used.)
3.666 E F2(class_hints)72 361.9 Q F1(Speci\214es the)23.105 E F0
(XClassHint)3.666 E F1(structure to be used.)3.666 E 36 357.55 36 368.55
DL 36 355.55 36 366.55 DL 41.5 366.8 36 366.8 DL 43.5 366.8 38 366.8 DL
49 366.8 43.5 366.8 DL(The)72 391.8 Q F0(XSetWMPr)3.666 E(operties)-.198
E F1(con)3.666 E -.165(ve)-.44 G(nience function pro).165 E
(vides a single programming interf)-.165 E(ace for set-)-.11 E
(ting those essential windo)72 404.8 Q 2.75(wp)-.275 G
(roperties that are used for communicating with other clients \(partic-)
-2.75 E(ularly windo)72 417.8 Q 2.75(wa)-.275 G(nd session managers\).)
-2.75 E(If the windo)72 434.7 Q(w_name ar)-.275 E(gument is non-NULL,)
-.198 E F0(XSetWMPr)3.666 E(operties)-.198 E F1(calls)3.666 E F0
(XSetWMName)3.666 E F1 2.75(,w).916 G(hich,)-2.75 E
(in turn, sets the WM_N)72 447.7 Q(AME property \(see section 14.1.4\).)
-.385 E(If the icon_name ar)5.5 E(gument is non-)-.198 E(NULL,)72 460.7
Q F0(XSetWMPr)3.666 E(operties)-.198 E F1(calls)3.666 E F0
(XSetWMIconName)3.666 E F1 2.75(,w).916 G(hich sets the WM_ICON_N)-2.75
E(AME)-.385 E(property \(see section 14.1.5\).)72 473.7 Q(If the ar)5.5
E(gv ar)-.198 E(gument is non-NULL,)-.198 E F0(XSetWMPr)3.666 E
(operties)-.198 E F1(calls)3.666 E F0(XSetCommand)72.916 486.7 Q F1 2.75
(,w).916 G(hich sets the WM_COMMAND property \(see section 14.2.1\).)
-2.75 E(Note that an)5.5 E(ar)72 499.7 Q(gc of zero is allo)-.198 E
(wed to indicate a zero-length command.)-.275 E
(Note also that the hostname of this)5.5 E(machine is stored using)72
512.7 Q F0(XSetWMClientMachine)3.666 E F1(\(see section 14.2.2\).)3.666
E(If the normal_hints ar)72 529.6 Q(gument is non-NULL,)-.198 E F0
(XSetWMPr)3.666 E(operties)-.198 E F1(calls)3.666 E F0
(XSetWMNormalHints)3.666 E F1(,).916 E
(which sets the WM_NORMAL_HINTS property \(see section 14.1.7\).)72
542.6 Q(If the wm_hints ar)5.5 E(gument)-.198 E(is non-NULL,)72 555.6 Q
F0(XSetWMPr)3.666 E(operties)-.198 E F1(calls)3.666 E F0(XSetWMHints)
3.666 E F1 2.75(,w).916 G(hich sets the WM_HINTS property)-2.75 E
(\(see section 14.1.6\).)72 568.6 Q(If the class_hints ar)72 585.5 Q
(gument is non-NULL,)-.198 E F0(XSetWMPr)3.666 E(operties)-.198 E F1
(calls)3.666 E F0(XSetClassHint)3.666 E F1 2.75(,w).916 G(hich sets)
-2.75 E(the WM_CLASS property \(see section 14.1.8\).)72 598.5 Q
(If the res_name member in the)5.5 E F0(XClassHint)3.666 E F1
(structure is set to the NULL pointer and the RESOURCE_N)72 611.5 Q
(AME en)-.385 E(vironment v)-.44 E(ariable is set,)-.275 E(then the v)72
624.5 Q(alue of the en)-.275 E(vironment v)-.44 E
(ariable is substituted for res_name.)-.275 E(If the res_name member is)
5.5 E(NULL, the en)72 637.5 Q(vironment v)-.44 E
(ariable is not set, and ar)-.275 E(gv and ar)-.198 E
(gv[0] are set, then the v)-.198 E(alue of ar)-.275 E(gv[0],)-.198 E
(stripped of an)72 650.5 Q 2.75(yd)-.165 G(irectory pre\214x)-2.75 E
(es, is substituted for res_name.)-.165 E F0(XSetWMPr)72.916 667.4 Q
(operties)-.198 E F1(can generate)3.666 E F0(BadAlloc)3.666 E F1(and)
3.666 E F0(BadW)3.666 E(indo)-.198 E(w)-.11 E F1(errors.)3.666 E F0 2.75
(14.2. Client)72 693.4 R(to Session Manager Communication)2.75 E F1
(This section discusses ho)72 710.3 Q 2.75(wt)-.275 G(o:)-2.75 E F0(374)
279.75 769 Q 0 Cg EP
%%Page: 375 380
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E/F1 11/Times-Roman@0 SF 23.65<8353>72
85 S(et and read the WM_COMMAND property)-23.65 E 23.65<8353>72 101.9 S
(et and read the WM_CLIENT_MA)-23.65 E(CHINE property)-.44 E F0 2.75
(14.2.1. Setting)72 127.9 R(and Reading the WM_COMMAND Pr)2.75 E(operty)
-.198 E F1(Xlib pro)72 144.8 Q(vides functions that you can use to set \
and read the WM_COMMAND property for a)-.165 E(gi)72 157.8 Q -.165(ve)
-.275 G 2.75(nw).165 G(indo)-2.75 E -.715(w.)-.275 G 1.76 -.88(To s)72
187.7 T(et a windo).88 E(w')-.275 E 2.75(sW)-.605 G(M_COMMAND property)
-2.75 E 2.75(,u)-.715 G(se)-2.75 E F0(XSetCommand)3.666 E F1(.).916 E
.44 LW 36 205.45 36 216.45 DL 36 203.45 36 214.45 DL 41.5 201.7 36 201.7
DL 43.5 201.7 38 201.7 DL 49 201.7 43.5 201.7 DL -1.834(XSetCommand \()
72 217.6 R/F2 11/Times-Italic@0 SF(display).916 E F1(,)A F2(w)2.75 E F1
(,)A F2(ar)2.75 E(gv)-.407 E F1(,)A F2(ar)2.75 E(gc)-.407 E F1(\)).916 E
(Display *)88.5 230.6 Q F2(display)A F1(;).916 E -.44(Wi)88.5 243.6 S
(ndo).44 E(w)-.275 E F2(w)2.75 E F1(;).916 E(char **)88.5 256.6 Q F2(ar)
A(gv)-.407 E F1(;).916 E(int)88.5 269.6 Q F2(ar)2.75 E(gc)-.407 E F1(;)
.916 E F2(display)72 290.4 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2(w)72 307.3 Q F1(Speci\214es the windo)64.663 E -.715(w.)-.275 G F2
(ar)72 324.2 Q(gv)-.407 E F1(Speci\214es the application')52.244 E 2.75
(sa)-.605 G -.198(rg)-2.75 G(ument list.).198 E F2(ar)72 341.1 Q(gc)
-.407 E F1(Speci\214es the number of ar)52.244 E(guments.)-.198 E 36
336.75 36 347.75 DL 36 334.75 36 345.75 DL 41.5 346 36 346 DL 43.5 346
38 346 DL 49 346 43.5 346 DL(The)72 371 Q F0(XSetCommand)3.666 E F1
(function sets the command and ar)3.666 E(guments used to in)-.198 E
-.22(vo)-.44 G .22 -.11(ke t).22 H(he application.).11 E(\(T)72 384 Q
(ypically)-.88 E 2.75(,a)-.715 G -.198(rg)-2.75 G 2.75(vi).198 G 2.75
(st)-2.75 G(he ar)-2.75 E(gv array of your main program.\))-.198 E
(If the strings are not in the Host Porta-)5.5 E
(ble Character Encoding, the result is implementation-dependent.)72 397
Q F0(XSetCommand)72.916 413.9 Q F1(can generate)3.666 E F0(BadAlloc)
3.666 E F1(and)3.666 E F0(BadW)3.666 E(indo)-.198 E(w)-.11 E F1(errors.)
3.666 E 1.76 -.88(To r)72 443.8 T(ead a windo).88 E(w')-.275 E 2.75(sW)
-.605 G(M_COMMAND property)-2.75 E 2.75(,u)-.715 G(se)-2.75 E F0
(XGetCommand)3.666 E F1(.).916 E 36 461.55 36 472.55 DL 36 459.55 36
470.55 DL 41.5 457.8 36 457.8 DL 43.5 457.8 38 457.8 DL 49 457.8 43.5
457.8 DL(Status XGetCommand)72 473.7 Q(\().916 E F2(display).916 E F1(,)
A F2(w)2.75 E F1(,)A F2(ar)2.75 E(gv_r)-.407 E(eturn)-.407 E F1(,)A F2
(ar)2.75 E(gc_r)-.407 E(eturn)-.407 E F1(\)).916 E(Display *)88.5 486.7
Q F2(display)A F1(;).916 E -.44(Wi)88.5 499.7 S(ndo).44 E(w)-.275 E F2
(w)2.75 E F1(;).916 E(char ***)88.5 512.7 Q F2(ar)A(gv_r)-.407 E(eturn)
-.407 E F1(;).916 E(int *)88.5 525.7 Q F2(ar)A(gc_r)-.407 E(eturn)-.407
E F1(;).916 E F2(display)72 546.5 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2(w)72 563.4 Q F1(Speci\214es the windo)64.663 E -.715(w.)-.275 G F2
(ar)72 580.3 Q(gv_r)-.407 E(eturn)-.407 E F1(Returns the application')
19.651 E 2.75(sa)-.605 G -.198(rg)-2.75 G(ument list.).198 E F2(ar)72
597.2 Q(gc_r)-.407 E(eturn)-.407 E F1(Returns the number of ar)19.651 E
(guments returned.)-.198 E 36 592.85 36 603.85 DL 36 590.85 36 601.85 DL
41.5 602.1 36 602.1 DL 43.5 602.1 38 602.1 DL 49 602.1 43.5 602.1 DL
(The)72 627.1 Q F0(XGetCommand)3.666 E F1
(function reads the WM_COMMAND property from the speci\214ed windo)3.666
E(w)-.275 E(and returns a string list.)72 640.1 Q
(If the WM_COMMAND property e)5.5 E(xists, it is of type STRING and for)
-.165 E(-)-.22 E(mat 8.)72 653.1 Q(If suf)5.5 E
(\214cient memory can be allocated to contain the string list,)-.275 E
F0(XGetCommand)3.666 E F1(\214lls in)3.666 E(the ar)72 666.1 Q
(gv_return and ar)-.198 E(gc_return ar)-.198 E
(guments and returns a nonzero status.)-.198 E(Otherwise, it returns a)
5.5 E(zero status.)72 679.1 Q(If the data returned by the serv)5.5 E
(er is in the Latin Portable Character Encoding, then)-.165 E
(the returned strings are in the Host Portable Character Encoding.)72
692.1 Q(Otherwise, the result is imple-)5.5 E 2.75
(mentation-dependent. T)72 705.1 R 2.75(of)-.88 G
(ree the memory allocated to the string list, use)-2.75 E F0(XFr)3.666 E
(eeStringList)-.198 E F1(.).916 E F0(375)279.75 769 Q 0 Cg EP
%%Page: 376 381
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E 2.75(14.2.2. Setting)72 85 R
(and Reading the WM_CLIENT_MA)2.75 E(CHINE Pr)-.605 E(operty)-.198 E/F1
11/Times-Roman@0 SF(Xlib pro)72 101.9 Q
(vides functions that you can use to set and read the WM_CLIENT_MA)-.165
E(CHINE property)-.44 E(for a gi)72 114.9 Q -.165(ve)-.275 G 2.75(nw)
.165 G(indo)-2.75 E -.715(w.)-.275 G 1.76 -.88(To s)72 144.8 T
(et a windo).88 E(w')-.275 E 2.75(sW)-.605 G(M_CLIENT_MA)-2.75 E
(CHINE property)-.44 E 2.75(,u)-.715 G(se)-2.75 E F0
(XSetWMClientMachine)3.666 E F1(.).916 E .44 LW 36 162.55 36 173.55 DL
36 160.55 36 171.55 DL 41.5 158.8 36 158.8 DL 43.5 158.8 38 158.8 DL 49
158.8 43.5 158.8 DL -.22(vo)72 174.7 S(id XSetWMClientMachine).22 E(\()
.916 E/F2 11/Times-Italic@0 SF(display).916 E F1(,)A F2(w)2.75 E F1(,)A
F2(te)2.75 E(xt_pr)-.22 E(op)-.495 E F1(\)).916 E(Display *)88.5 187.7 Q
F2(display)A F1(;).916 E -.44(Wi)88.5 200.7 S(ndo).44 E(w)-.275 E F2(w)
2.75 E F1(;).916 E(XT)88.5 213.7 Q -.165(ex)-.77 G(tProperty *).165 E F2
(te)A(xt_pr)-.22 E(op)-.495 E F1(;).916 E F2(display)72 234.5 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2(w)72 251.4 Q F1(Speci\214es the windo)64.663 E -.715(w.)-.275 G F2
(te)72 268.3 Q(xt_pr)-.22 E(op)-.495 E F1(Speci\214es the)30.552 E F0
(XT)3.666 E(extPr)-1.012 E(operty)-.198 E F1(structure to be used.)3.666
E 36 263.95 36 274.95 DL 36 261.95 36 272.95 DL 41.5 273.2 36 273.2 DL
43.5 273.2 38 273.2 DL 49 273.2 43.5 273.2 DL(The)72 298.2 Q F0
(XSetWMClientMachine)3.666 E F1(con)3.666 E -.165(ve)-.44 G
(nience function calls).165 E F0(XSetT)3.666 E(extPr)-1.012 E(operty)
-.198 E F1(to set the)3.666 E(WM_CLIENT_MA)72 311.2 Q(CHINE property)
-.44 E(.)-.715 E 1.76 -.88(To r)72 341.1 T(ead a windo).88 E(w')-.275 E
2.75(sW)-.605 G(M_CLIENT_MA)-2.75 E(CHINE property)-.44 E 2.75(,u)-.715
G(se)-2.75 E F0(XGetWMClientMachine)3.666 E F1(.).916 E 36 358.85 36
369.85 DL 36 356.85 36 367.85 DL 41.5 355.1 36 355.1 DL 43.5 355.1 38
355.1 DL 49 355.1 43.5 355.1 DL(Status XGetWMClientMachine)72 371 Q(\()
.916 E F2(display).916 E F1(,)A F2(w)2.75 E F1(,)A F2(te)2.75 E(xt_pr)
-.22 E(op_r)-.495 E(eturn)-.407 E F1(\)).916 E(Display *)88.5 384 Q F2
(display)A F1(;).916 E -.44(Wi)88.5 397 S(ndo).44 E(w)-.275 E F2(w)2.75
E F1(;).916 E(XT)88.5 410 Q -.165(ex)-.77 G(tProperty *).165 E F2(te)A
(xt_pr)-.22 E(op_r)-.495 E(eturn)-.407 E F1(;).916 E F2(display)72 430.8
Q F1(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)
-.605 E F2(w)72 447.7 Q F1(Speci\214es the windo)64.663 E -.715(w.)-.275
G F2(te)72 464.6 Q(xt_pr)-.22 E(op_r)-.495 E(eturn)-.407 E F1
(Returns the)144 477.6 Q F0(XT)3.666 E(extPr)-1.012 E(operty)-.198 E F1
(structure.)3.666 E 36 473.25 36 484.25 DL 36 471.25 36 482.25 DL 41.5
482.5 36 482.5 DL 43.5 482.5 38 482.5 DL 49 482.5 43.5 482.5 DL(The)72
507.5 Q F0(XGetWMClientMachine)3.666 E F1(con)3.666 E -.165(ve)-.44 G
(nience function performs an).165 E F0(XGetT)3.666 E(extPr)-1.012 E
(operty)-.198 E F1(on the)3.666 E(WM_CLIENT_MA)72 520.5 Q
(CHINE property)-.44 E 5.5(.I)-.715 G 2.75(tr)-5.5 G
(eturns a nonzero status on success; otherwise, it returns)-2.75 E 2.75
(az)72 533.5 S(ero status.)-2.75 E F0 2.75(14.3. Standard)72 559.5 R
(Colormaps)2.75 E F1
(Applications with color palettes, smooth-shaded dra)72 576.4 Q
(wings, or digitized images demand lar)-.165 E(ge)-.198 E
(numbers of colors.)72 589.4 Q
(In addition, these applications often require an ef)5.5 E
(\214cient mapping from color)-.275 E(triples to pix)72 602.4 Q(el v)
-.165 E(alues that display the appropriate colors.)-.275 E(As an e)72
619.3 Q(xample, consider a three-dimensional display program that w)
-.165 E(ants to dra)-.11 E 2.75(was)-.165 G(moothly)-2.75 E
(shaded sphere.)72 632.3 Q(At each pix)5.5 E
(el in the image of the sphere, the program computes the intensity and)
-.165 E(color of light re\215ected back to the vie)72 645.3 Q(wer)-.275
E 5.5(.T)-.605 G
(he result of each computation is a triple of red, green,)-5.5 E
(and blue \(RGB\) coef)72 658.3 Q(\214cients in the range 0.0 to 1.0.)
-.275 E 1.76 -.88(To d)5.5 H(ra).88 E 2.75(wt)-.165 G
(he sphere, the program needs a col-)-2.75 E(ormap that pro)72 671.3 Q
(vides a lar)-.165 E(ge range of uniformly distrib)-.198 E(uted colors.)
-.22 E(The colormap should be)5.5 E
(arranged so that the program can con)72 684.3 Q -.165(ve)-.44 G
(rt its RGB triples into pix).165 E(el v)-.165 E(alues v)-.275 E
(ery quickly)-.165 E 2.75(,b)-.715 G(ecause)-2.75 E(dra)72 697.3 Q
(wing the entire sphere requires man)-.165 E 2.75(ys)-.165 G(uch con)
-2.75 E -.165(ve)-.44 G(rsions.).165 E(On man)72 714.2 Q 2.75(yc)-.165 G
(urrent w)-2.75 E(orkstations, the display is limited to 256 or fe)-.11
E(wer colors.)-.275 E(Applications must)5.5 E(allocate colors carefully)
72 727.2 Q 2.75(,n)-.715 G(ot only to mak)-2.75 E 2.75(es)-.11 G
(ure the)-2.75 E 2.75(yc)-.165 G -.165(ove)-2.75 G 2.75(rt).165 G
(he entire range the)-2.75 E 2.75(yn)-.165 G(eed b)-2.75 E(ut also to)
-.22 E F0(376)279.75 769 Q 0 Cg EP
%%Page: 377 382
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E/F1 11/Times-Roman@0 SF(mak)72 85 Q
2.75(eu)-.11 G(se of as man)-2.75 E 2.75(yo)-.165 G 2.75(ft)-2.75 G
(he a)-2.75 E -.275(va)-.22 G(ilable colors as possible.).275 E
(On a typical X display)5.5 E 2.75(,m)-.715 G(an)-2.75 E 2.75(ya)-.165 G
(pplica-)-2.75 E(tions are acti)72 98 Q .33 -.165(ve a)-.275 H 2.75(to)
.165 G 2.75(nce. Most)-2.75 F -.11(wo)2.75 G(rkstations ha).11 E .33
-.165(ve o)-.22 H(nly one hardw).165 E(are look-up table for colors, so)
-.11 E(only one application colormap can be installed at a gi)72 111 Q
-.165(ve)-.275 G 2.75(nt).165 G 2.75(ime. The)-2.75 F
(application using the)2.75 E(installed colormap is displayed correctly)
72 124 Q 2.75(,a)-.715 G
(nd the other applications go technicolor and are dis-)-2.75 E
(played with f)72 137 Q(alse colors.)-.11 E(As another e)72 153.9 Q(xam\
ple, consider a user who is running an image processing program to disp\
lay)-.165 E(earth-resources data.)72 166.9 Q
(The image processing program needs a colormap set up with 8 reds, 8)5.5
E(greens, and 4 blues, for a total of 256 colors.)72 179.9 Q
(Because some colors are already in use in the)5.5 E(def)72 192.9 Q(aul\
t colormap, the image processing program allocates and installs a ne)
-.11 E 2.75(wc)-.275 G(olormap.)-2.75 E
(The user decides to alter some of the colors in the image by in)72
209.8 Q -.22(vo)-.44 G(king a color palette program to).22 E
(mix and choose colors.)72 222.8 Q
(The color palette program also needs a colormap with eight reds, eight)
5.5 E(greens, and four blues, so just lik)72 235.8 Q 2.75(et)-.11 G
(he image processing program, it must allocate and install a)-2.75 E(ne)
72 248.8 Q 2.75(wc)-.275 G(olormap.)-2.75 E(Because only one colormap c\
an be installed at a time, the color palette may be displayed incor)72
265.7 Q(-)-.22 E(rectly whene)72 278.7 Q -.165(ve)-.275 G 2.75(rt).165 G
(he image processing program is acti)-2.75 E -.165(ve)-.275 G 5.5(.C)
.165 G(on)-5.5 E -.165(ve)-.44 G(rsely).165 E 2.75(,w)-.715 G(hene)-2.75
E -.165(ve)-.275 G 2.75(rt).165 G(he palette pro-)-2.75 E(gram is acti)
72 291.7 Q -.165(ve)-.275 G 2.75(,t).165 G
(he image may be displayed incorrectly)-2.75 E 5.5(.T)-.715 G
(he user can ne)-5.5 E -.165(ve)-.275 G 2.75(rm).165 G(atch or compare)
-2.75 E(colors in the palette and image.)72 304.7 Q
(Contention for colormap resources can be reduced if applications)5.5 E
(with similar color needs share colormaps.)72 317.7 Q(The image process\
ing program and the color palette program could share the same colormap\
 if)72 334.6 Q(there e)72 347.6 Q(xisted a con)-.165 E -.165(ve)-.44 G
(ntion that described ho).165 E 2.75(wt)-.275 G(he colormap w)-2.75 E
(as set up.)-.11 E(Whene)5.5 E -.165(ve)-.275 G 2.75(re).165 G
(ither program)-2.75 E -.11(wa)72 360.6 S 2.75(sa).11 G(cti)-2.75 E
-.165(ve)-.275 G 2.75(,b).165 G(oth w)-2.75 E
(ould be displayed correctly)-.11 E(.)-.715 E(The standard colormap pro\
perties de\214ne a set of commonly used colormaps.)72 377.5 Q
(Applications that)5.5 E(share these colormaps and con)72 390.5 Q -.165
(ve)-.44 G(ntions display true colors more often and pro).165 E
(vide a better inter)-.165 E(-)-.22 E -.11(fa)72 403.5 S(ce to the user)
.11 E(.)-.605 E(Standard colormaps allo)72 420.4 Q 2.75(wa)-.275 G
(pplications to share commonly used color resources.)-2.75 E(This allo)
5.5 E(ws)-.275 E(man)72 433.4 Q 2.75(ya)-.165 G
(pplications to be displayed in true colors simultaneously)-2.75 E 2.75
(,e)-.715 G -.165(ve)-3.025 G 2.75(nw).165 G(hen each application)-2.75
E(needs an entirely \214lled colormap.)72 446.4 Q(Se)72 463.3 Q -.165
(ve)-.275 G(ral standard colormaps are described in this section.).165 E
(Usually)5.5 E 2.75(,aw)-.715 G(indo)-2.75 E 2.75(wm)-.275 G
(anager creates)-2.75 E(these colormaps.)72 476.3 Q
(Applications should use the standard colormaps if the)5.5 E 2.75(ya)
-.165 G(lready e)-2.75 E(xist.)-.165 E 1.76 -.88(To a)72 506.2 T
(llocate an).88 E F0(XStandardColormap)3.666 E F1(structure, use)3.666 E
F0(XAllocStandardColormap)3.666 E F1(.).916 E .44 LW 36 523.95 36 534.95
DL 36 521.95 36 532.95 DL 41.5 520.2 36 520.2 DL 43.5 520.2 38 520.2 DL
49 520.2 43.5 520.2 DL(XStandardColormap *XAllocStandardColormap)72
536.1 Q 1.833(\(\)).916 G 36 535.65 36 546.65 DL 36 533.65 36 544.65 DL
41.5 544.9 36 544.9 DL 43.5 544.9 38 544.9 DL 49 544.9 43.5 544.9 DL
(The)72 569.9 Q F0(XAllocStandardColormap)3.666 E F1
(function allocates and returns a pointer to an)3.666 E F0
(XStandardCol-)3.666 E(ormap)72 582.9 Q F1 2.75(structure. Note)3.666 F
(that all \214elds in the)2.75 E F0(XStandardColormap)3.666 E F1
(structure are initially set to)3.666 E 2.75(zero. If)72 595.9 R(insuf)
2.75 E(\214cient memory is a)-.275 E -.275(va)-.22 G(ilable,).275 E F0
(XAllocStandardColormap)3.666 E F1(returns NULL.)3.666 E 1.76 -.88(To f)
5.5 H(ree the).88 E(memory allocated to this structure, use)72 608.9 Q
F0(XFr)3.666 E(ee)-.198 E F1(.).916 E(The)72 625.8 Q F0
(XStandardColormap)3.666 E F1(structure contains:)3.666 E F0(377)279.75
769 Q 0 Cg EP
%%Page: 378 383
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E .44 LW 36 76.75 36 87.75 DL 36 74.75
36 85.75 DL 41.5 73 36 73 DL 43.5 73 38 73 DL 49 73 43.5 73 DL/F1 11
/Times-Roman@0 SF(/* Hints */)72 85 Q(#de\214ne)72 104.5 Q F0
(ReleaseByFr)125.416 104.5 Q(eeingColormap)-.198 E F1 2.75(\(\()285
104.5 S(XID\) 1L\))-2.75 E(/* V)72 124 Q(alues */)-1.221 E
(typedef struct {)72 143.5 Q(Colormap colormap;)108 156.5 Q
(unsigned long red_max;)108 169.5 Q(unsigned long red_mult;)108 182.5 Q
(unsigned long green_max;)108 195.5 Q(unsigned long green_mult;)108
208.5 Q(unsigned long blue_max;)108 221.5 Q(unsigned long blue_mult;)108
234.5 Q(unsigned long base_pix)108 247.5 Q(el;)-.165 E -.66(Vi)108 260.5
S(sualID visualid;).66 E(XID killid;)108 273.5 Q 2.75(}X)72 286.5 S
(StandardColormap;)-2.75 E 36 288.65 36 299.65 DL 36 286.65 36 297.65 DL
41.5 297.9 36 297.9 DL 43.5 297.9 38 297.9 DL 49 297.9 43.5 297.9 DL
(The colormap member is the colormap created by the)72 322.9 Q F0(XCr)
3.666 E(eateColormap)-.198 E F1 2.75(function. The)3.666 F
(red_max, green_max, and blue_max members gi)72 335.9 Q .33 -.165(ve t)
-.275 H(he maximum red, green, and blue v).165 E(alues,)-.275 E
(respecti)72 348.9 Q -.165(ve)-.275 G(ly).165 E 5.5(.E)-.715 G
(ach color coef)-5.5 E(\214cient ranges from zero to its max, inclusi)
-.275 E -.165(ve)-.275 G 5.5(.F).165 G(or e)-5.665 E(xample, a com-)
-.165 E(mon colormap allocation is 3/3/2 \(3 planes for red, 3 planes f\
or green, and 2 planes for blue\).)72 361.9 Q(This colormap w)72 374.9 Q
(ould ha)-.11 E .33 -.165(ve r)-.22 H
(ed_max = 7, green_max = 7, and blue_max = 3.).165 E
(An alternate alloca-)5.5 E(tion that uses only 216 colors is red_max =\
 5, green_max = 5, and blue_max = 5.)72 387.9 Q
(The red_mult, green_mult, and blue_mult members gi)72 404.8 Q .33 -.165
(ve t)-.275 H(he scale f).165 E(actors used to compose a full)-.11 E
(pix)72 417.8 Q(el v)-.165 E 2.75(alue. \(See)-.275 F
(the discussion of the base_pix)2.75 E
(el members for further information.\))-.165 E -.165(Fo)5.5 G 2.75(ra3)
.165 G(/3/2)-2.75 E(allocation, red_mult might be 32, green_mult might \
be 4, and blue_mult might be 1.)72 430.8 Q -.165(Fo)5.5 G 2.75(ra6).165
G(-col-)-2.75 E(ors-each allocation, red_mult might be 36, green_mult m\
ight be 6, and blue_mult might be 1.)72 443.8 Q(The base_pix)72 460.7 Q
(el member gi)-.165 E -.165(ve)-.275 G 2.75(st).165 G(he base pix)-2.75
E(el v)-.165 E(alue used to compose a full pix)-.275 E(el v)-.165 E 2.75
(alue. Usually)-.275 F(,)-.715 E(the base_pix)72 473.7 Q
(el is obtained from a call to the)-.165 E F0(XAllocColorPlanes)3.666 E
F1 2.75(function. Gi)3.666 F -.165(ve)-.275 G 2.75(ni).165 G(nte)-2.75 E
(ger red,)-.165 E(green, and blue coef)72 486.7 Q(\214cients in their a\
ppropriate ranges, one then can compute a corresponding)-.275 E(pix)72
499.7 Q(el v)-.165 E(alue by using the follo)-.275 E(wing e)-.275 E
(xpression:)-.165 E
(\(r * red_mult + g * green_mult + b * blue_mult + base_pix)108 523.1 Q
(el\) & 0xFFFFFFFF)-.165 E -.165(Fo)72 546.5 S(r).165 E F0(GrayScale)
3.666 E F1
(colormaps, only the colormap, red_max, red_mult, and base_pix)3.666 E
(el members are)-.165 E 2.75(de\214ned. The)72 559.5 R
(other members are ignored.)2.75 E 1.76 -.88(To c)5.5 H(ompute a).88 E
F0(GrayScale)3.666 E F1(pix)3.666 E(el v)-.165 E(alue, use the follo)
-.275 E(w-)-.275 E(ing e)72 572.5 Q(xpression:)-.165 E
(\(gray * red_mult + base_pix)108 595.9 Q(el\) & 0xFFFFFFFF)-.165 E(Ne)
72 619.3 Q -.055(ga)-.165 G(ti).055 E .33 -.165(ve m)-.275 H
(ultipliers can be represented by con).165 E -.165(ve)-.44 G
(rting the 2').165 E 2.75(sc)-.605 G(omplement representation of the)
-2.75 E(multiplier into an unsigned long and storing the result in the \
appropriate _mult \214eld.)72 632.3 Q(The step of)5.5 E
(masking by 0xFFFFFFFF ef)72 645.3 Q(fecti)-.275 E -.165(ve)-.275 G
(ly con).165 E -.165(ve)-.44 G(rts the resulting positi).165 E .33 -.165
(ve m)-.275 H(ultiplier into a ne).165 E -.055(ga)-.165 G(ti).055 E .33
-.165(ve o)-.275 H(ne.).165 E(The masking step will tak)72 658.3 Q 2.75
(ep)-.11 G(lace automatically on man)-2.75 E 2.75(ym)-.165 G
(achine architectures, depending on the)-2.75 E(size of the inte)72
671.3 Q(ger type used to do the computation.)-.165 E
(The visualid member gi)72 688.2 Q -.165(ve)-.275 G 2.75(st).165 G
(he ID number of the visual from which the colormap w)-2.75 E
(as created.)-.11 E(The killid member gi)72 701.2 Q -.165(ve)-.275 G
2.75(sar).165 G
(esource ID that indicates whether the cells held by this standard col-)
-2.75 E
(ormap are to be released by freeing the colormap ID or by calling the)
72 714.2 Q F0(XKillClient)3.666 E F1(function on)3.666 E
(the indicated resource.)72 727.2 Q
(\(Note that this method is necessary for allocating out of an e)5.5 E
(xisting)-.165 E F0(378)279.75 769 Q 0 Cg EP
%%Page: 379 384
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E/F1 11/Times-Roman@0 SF(colormap.\))72
85 Q(The properties containing the)72 101.9 Q F0(XStandardColormap)3.666
E F1(information ha)3.666 E .33 -.165(ve t)-.22 H(he type).165 E
(RGB_COLOR_MAP)72 114.9 Q(.)-1.221 E(The remainder of this section disc\
usses standard colormap properties and atoms as well as ho)72 131.8 Q
2.75(wt)-.275 G(o)-2.75 E(manipulate standard colormaps.)72 144.8 Q F0
2.75(14.3.1. Standard)72 170.8 R(Colormap Pr)2.75 E(operties and Atoms)
-.198 E F1(Se)72 187.7 Q -.165(ve)-.275 G(ral standard colormaps are a)
.165 E -.275(va)-.22 G 2.75(ilable. Each).275 F
(standard colormap is de\214ned by a property)2.75 E 2.75(,a)-.715 G(nd)
-2.75 E(each such property is identi\214ed by an atom.)72 200.7 Q
(The follo)5.5 E(wing list names the atoms and describes the)-.275 E
(colormap associated with each one.)72 213.7 Q(The <)5.5 E F0
(X11/Xatom.h)A F1 2.75(>h)C(eader \214le contains the de\214nitions for)
-2.75 E(each of the follo)72 226.7 Q(wing atoms, which are pre\214x)
-.275 E(ed with XA_.)-.165 E(RGB_DEF)72 243.6 Q -.605(AU)-.814 G -1.012
(LT).605 G(_MAP)1.012 E(This atom names a property)99.5 256.6 Q 5.5(.T)
-.715 G(he v)-5.5 E(alue of the property is an array of)-.275 E F0
(XStandardCol-)3.666 E(ormap)99.5 269.6 Q F1 2.75(structures. Each)3.666
F(entry in the array describes an RGB subset of the def)2.75 E
(ault color)-.11 E(map for the V)99.5 282.6 Q
(isual speci\214ed by visual_id.)-.66 E
(Some applications only need a fe)99.5 299.5 Q 2.75(wR)-.275 G
(GB colors and may be able to allocate them from the)-2.75 E(system def)
99.5 312.5 Q(ault colormap.)-.11 E
(This is the ideal situation because the fe)5.5 E
(wer colormaps that are)-.275 E(acti)99.5 325.5 Q .33 -.165(ve i)-.275 H
2.75(nt).165 G(he system the more applications are displayed with corre\
ct colors at all times.)-2.75 E 2.75(At)99.5 342.4 S
(ypical allocation for the RGB_DEF)-2.75 E -.605(AU)-.814 G -1.012(LT)
.605 G(_MAP on 8-plane displays is 6 reds, 6 greens,)1.012 E
(and 6 blues.)99.5 355.4 Q(This gi)5.5 E -.165(ve)-.275 G 2.75(s2).165 G
(16 uniformly distrib)-2.75 E(uted colors \(6 intensities of 36 dif)-.22
E(ferent hues\))-.275 E(and still lea)99.5 368.4 Q -.165(ve)-.22 G 2.75
(s4).165 G 2.75(0e)-2.75 G(lements of a 256-element colormap a)-2.75 E
-.275(va)-.22 G(ilable for special-purpose colors).275 E(for te)99.5
381.4 Q(xt, borders, and so on.)-.165 E(RGB_BEST_MAP)72 398.3 Q
(This atom names a property)99.5 411.3 Q 5.5(.T)-.715 G(he v)-5.5 E
(alue of the property is an)-.275 E F0(XStandardColormap)3.666 E F1(.)
.916 E(The property de\214nes the best RGB colormap a)99.5 428.2 Q -.275
(va)-.22 G(ilable on the screen.).275 E(\(Of course, this is a)5.5 E
(subjecti)99.5 441.2 Q .33 -.165(ve e)-.275 H -.275(va)-.11 G 2.75
(luation.\) Man).275 F 2.75(yi)-.165 G
(mage processing and three-dimensional applications need to)-2.75 E
(use all a)99.5 454.2 Q -.275(va)-.22 G
(ilable colormap cells and to distrib).275 E(ute as man)-.22 E 2.75(yp)
-.165 G(erceptually distinct colors as)-2.75 E(possible o)99.5 467.2 Q
-.165(ve)-.165 G 2.75(rt).165 G(hose cells.)-2.75 E
(This implies that there may be more green v)5.5 E(alues a)-.275 E -.275
(va)-.22 G(ilable than).275 E
(red, as well as more green or red than blue.)99.5 480.2 Q -.165(Fo)99.5
497.1 S 2.75(ra).165 G 2.75(n8)-2.75 G(-plane)-2.75 E F0(PseudoColor)
3.666 E F1(visual, RGB_BEST_MAP is lik)3.666 E
(ely to be a 3/3/2 allocation.)-.11 E -.165(Fo)99.5 510.1 S 2.75(ra2)
.165 G(4-plane)-2.75 E F0(Dir)3.666 E(ectColor)-.198 E F1
(visual, RGB_BEST_MAP is normally an 8/8/8 allocation.)3.666 E
(RGB_RED_MAP)72 527 Q(RGB_GREEN_MAP)72 540 Q(RGB_BLUE_MAP)72 553 Q
(These atoms name properties.)99.5 566 Q(The v)5.5 E
(alue of each property is an)-.275 E F0(XStandardColormap)3.666 E F1(.)
.916 E(The properties de\214ne all-red, all-green, and all-blue colorma\
ps, respecti)99.5 582.9 Q -.165(ve)-.275 G(ly).165 E 5.5(.T)-.715 G
(hese maps)-5.5 E(are used by applications that w)99.5 595.9 Q
(ant to mak)-.11 E 2.75(ec)-.11 G(olor)-2.75 E(-separated images.)-.22 E
-.165(Fo)5.5 G 2.75(re).165 G(xample, a user)-2.915 E(might generate a \
full-color image on an 8-plane display both by rendering an image three)
99.5 608.9 Q(times \(once with high color resolution in red, once with \
green, and once with blue\) and by)99.5 621.9 Q(multiply e)99.5 634.9 Q
(xposing a single frame in a camera.)-.165 E(RGB_GRA)72 651.8 Q(Y_MAP)
-1.155 E(This atom names a property)99.5 664.8 Q 5.5(.T)-.715 G(he v)
-5.5 E(alue of the property is an)-.275 E F0(XStandardColormap)3.666 E
F1(.).916 E(The property describes the best)99.5 681.7 Q F0(GrayScale)
3.666 E F1(colormap a)3.666 E -.275(va)-.22 G(ilable on the screen.).275
E(As pre)5.5 E(vi-)-.275 E
(ously mentioned, only the colormap, red_max, red_mult, and base_pix)
99.5 694.7 Q(el members of the)-.165 E F0(XStandardColormap)100.416
707.7 Q F1(structure are used for)3.666 E F0(GrayScale)3.666 E F1
(colormaps.)3.666 E F0(379)279.75 769 Q 0 Cg EP
%%Page: 380 385
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E 2.75(14.3.2. Setting)72 85 R
(and Obtaining Standard Colormaps)2.75 E/F1 11/Times-Roman@0 SF
(Xlib pro)72 101.9 Q
(vides functions that you can use to set and obtain an)-.165 E F0
(XStandardColormap)3.666 E F1(structure.)3.666 E 1.76 -.88(To s)72 131.8
T(et an).88 E F0(XStandardColormap)3.666 E F1(structure, use)3.666 E F0
(XSetRGBColormaps)3.666 E F1(.).916 E .44 LW 36 149.55 36 160.55 DL 36
147.55 36 158.55 DL 41.5 145.8 36 145.8 DL 43.5 145.8 38 145.8 DL 49
145.8 43.5 145.8 DL -.22(vo)72 161.7 S(id XSetRGBColormaps).22 E(\().916
E/F2 11/Times-Italic@0 SF(display).916 E F1(,)A F2(w)2.75 E F1(,)A F2
(std_colormap)2.75 E F1(,)A F2(count)2.75 E F1(,)A F2(pr)2.75 E(operty)
-.495 E F1(\)).916 E(Display *)88.5 174.7 Q F2(display)A F1(;).916 E
-.44(Wi)88.5 187.7 S(ndo).44 E(w)-.275 E F2(w)2.75 E F1(;).916 E
(XStandardColormap *)88.5 200.7 Q F2(std_colormap)A F1(;).916 E(int)88.5
213.7 Q F2(count)2.75 E F1(;).916 E(Atom)88.5 226.7 Q F2(pr)2.75 E
(operty)-.495 E F1(;).916 E F2(display)72 247.5 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2(w)72 264.4 Q F1(Speci\214es the windo)64.663 E -.715(w.)-.275 G F2
(std_colormap)72 281.3 Q F1(Speci\214es the)11.5 E F0(XStandardColormap)
3.666 E F1(structure to be used.)3.666 E F2(count)72 298.2 Q F1
(Speci\214es the number of colormaps.)47.558 E F2(pr)72 315.1 Q(operty)
-.495 E F1(Speci\214es the property name.)34.611 E 36 310.75 36 321.75
DL 36 308.75 36 319.75 DL 41.5 320 36 320 DL 43.5 320 38 320 DL 49 320
43.5 320 DL(The)72 345 Q F0(XSetRGBColormaps)3.666 E F1(function replac\
es the RGB colormap de\214nition in the speci\214ed prop-)3.666 E
(erty on the named windo)72 358 Q 4.18 -.715(w. I)-.275 H 2.75(ft).715 G
(he property does not already e)-2.75 E(xist,)-.165 E F0
(XSetRGBColormaps)3.666 E F1(sets the)3.666 E(RGB colormap de\214nition\
 in the speci\214ed property on the named windo)72 371 Q 4.18 -.715
(w. T)-.275 H(he property is stored).715 E
(with a type of RGB_COLOR_MAP and a format of 32.)72 384 Q
(Note that it is the caller')5.5 E 2.75(sr)-.605 G(esponsibility)-2.75 E
(to honor the ICCCM restriction that only RGB_DEF)72 397 Q -.605(AU)
-.814 G -1.012(LT).605 G(_MAP contain more than one de\214ni-)1.012 E
(tion.)72 410 Q(The)72 426.9 Q F0(XSetRGBColormaps)3.666 E F1
(function usually is only used by windo)3.666 E 2.75(wo)-.275 G 2.75(rs)
-2.75 G(ession managers.)-2.75 E 1.76 -.88(To c)5.5 H(re-).88 E
(ate a standard colormap, follo)72 439.9 Q 2.75(wt)-.275 G
(his procedure:)-2.75 E 16.5(1. Open)72 456.8 R 2.75(an)2.75 G .55 -.275
(ew c)-2.75 H(onnection to the same serv).275 E(er)-.165 E(.)-.605 E
16.5(2. Grab)72 473.7 R(the serv)2.75 E(er)-.165 E(.)-.605 E 16.5
(3. See)72 490.6 R
(if the property is on the property list of the root windo)2.75 E 2.75
(wf)-.275 G(or the screen.)-2.75 E 16.5(4. If)72 507.5 R
(the desired property is not present:)2.75 E 23.65<8343>99.5 524.4 S
(reate a colormap \(unless you are using the def)-23.65 E
(ault colormap of the screen\).)-.11 E 23.65<8344>99.5 541.3 S
(etermine the color characteristics of the visual.)-23.65 E 23.65<8341>
99.5 558.2 S(llocate cells in the colormap \(or create it with)-23.65 E
F0(AllocAll)3.666 E F1(\).).916 E 23.65<8343>99.5 575.1 S(all)-23.65 E
F0(XStor)3.666 E(eColors)-.198 E F1(to store appropriate color v)3.666 E
(alues in the colormap.)-.275 E 23.65<8346>99.5 592 S
(ill in the descripti)-23.65 E .33 -.165(ve m)-.275 H(embers in the).165
E F0(XStandardColormap)3.666 E F1(structure.)3.666 E 23.65<8341>99.5
608.9 S(ttach the property to the root windo)-23.65 E -.715(w.)-.275 G
23.65<8355>99.5 625.8 S(se)-23.65 E F0(XSetCloseDo)3.666 E(wnMode)-.11 E
F1(to mak)3.666 E 2.75(et)-.11 G(he resource permanent.)-2.75 E 16.5
(5. Ungrab)72 642.7 R(the serv)2.75 E(er)-.165 E(.)-.605 E F0
(XSetRGBColormaps)72.916 659.6 Q F1(can generate)3.666 E F0(BadAlloc)
3.666 E F1(,).916 E F0(BadAtom)3.666 E F1 2.75(,a).916 G(nd)-2.75 E F0
(BadW)3.666 E(indo)-.198 E(w)-.11 E F1(errors.)3.666 E 1.76 -.88(To o)72
689.5 T(btain the).88 E F0(XStandardColormap)3.666 E F1
(structure associated with the speci\214ed property)3.666 E 2.75(,u)
-.715 G(se)-2.75 E F0(XGetRGBColormaps)72.916 702.5 Q F1(.).916 E F0
(380)279.75 769 Q 0 Cg EP
%%Page: 381 386
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E .44 LW 36 76.75 36 87.75 DL 36 74.75
36 85.75 DL 41.5 73 36 73 DL 43.5 73 38 73 DL 49 73 43.5 73 DL/F1 11
/Times-Roman@0 SF(Status XGetRGBColormaps)72 88.9 Q(\().916 E/F2 11
/Times-Italic@0 SF(display).916 E F1(,)A F2(w)2.75 E F1(,)A F2
(std_colormap_r)2.75 E(eturn)-.407 E F1(,)A F2(count_r)2.75 E(eturn)
-.407 E F1(,)A F2(pr)2.75 E(operty)-.495 E F1(\)).916 E(Display *)88.5
101.9 Q F2(display)A F1(;).916 E -.44(Wi)88.5 114.9 S(ndo).44 E(w)-.275
E F2(w)2.75 E F1(;).916 E(XStandardColormap **)88.5 127.9 Q F2
(std_colormap_r)A(eturn)-.407 E F1(;).916 E(int *)88.5 140.9 Q F2
(count_r)A(eturn)-.407 E F1(;).916 E(Atom)88.5 153.9 Q F2(pr)2.75 E
(operty)-.495 E F1(;).916 E F2(display)72 174.7 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2(w)72 191.6 Q F1(Speci\214es the windo)64.663 E -.715(w.)-.275 G F2
(std_colormap_r)72 208.5 Q(eturn)-.407 E F1(Returns the)144 221.5 Q F0
(XStandardColormap)3.666 E F1(structure.)3.666 E F2(count_r)72 238.4 Q
(eturn)-.407 E F1(Returns the number of colormaps.)14.965 E F2(pr)72
255.3 Q(operty)-.495 E F1(Speci\214es the property name.)34.611 E 36
250.95 36 261.95 DL 36 248.95 36 259.95 DL 41.5 260.2 36 260.2 DL 43.5
260.2 38 260.2 DL 49 260.2 43.5 260.2 DL(The)72 285.2 Q F0
(XGetRGBColormaps)3.666 E F1(function returns the RGB colormap de\214ni\
tions stored in the speci\214ed)3.666 E(property on the named windo)72
298.2 Q 4.18 -.715(w. I)-.275 H 2.75(ft).715 G(he property e)-2.75 E
(xists, is of type RGB_COLOR_MAP)-.165 E 2.75(,i)-1.221 G 2.75(so)-2.75
G 2.75(ff)-2.75 G(or)-2.75 E(-)-.22 E
(mat 32, and is long enough to contain a colormap de\214nition,)72 311.2
Q F0(XGetRGBColormaps)3.666 E F1(allocates and)3.666 E(\214lls in space\
 for the returned colormaps and returns a nonzero status.)72 324.2 Q
(If the visualid is not)5.5 E(present,)72 337.2 Q F0(XGetRGBColormaps)
3.666 E F1(assumes the def)3.666 E
(ault visual for the screen on which the windo)-.11 E 2.75(wi)-.275 G(s)
-2.75 E(located; if the killid is not present,)72 350.2 Q F0(None)3.666
E F1(is assumed, which indicates that the resources cannot be)3.666 E
2.75(released. Otherwise,)72 363.2 R(none of the \214elds are set, and)
2.75 E F0(XGetRGBColormaps)3.666 E F1(returns a zero status.)3.666 E
(Note that it is the caller')72 376.2 Q 2.75(sr)-.605 G
(esponsibility to honor the ICCCM restriction that only)-2.75 E(RGB_DEF)
72 389.2 Q -.605(AU)-.814 G -1.012(LT).605 G
(_MAP contain more than one de\214nition.)1.012 E F0(XGetRGBColormaps)
72.916 406.1 Q F1(can generate)3.666 E F0(BadAtom)3.666 E F1(and)3.666 E
F0(BadW)3.666 E(indo)-.198 E(w)-.11 E F1(errors.)3.666 E F0(381)279.75
769 Q 0 Cg EP
%%Page: 382 387
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E/F1 12/Times-Bold@0 SF(Chapter 15)
259.17 111 Q(Resour)212.784 137 Q(ce Manager Functions)-.216 E/F2 11
/Times-Roman@0 SF 2.75(Ap)72 179.9 S(rogram often needs a v)-2.75 E
(ariety of options in the X en)-.275 E(vironment \(for e)-.44 E
(xample, fonts, colors,)-.165 E(icons, and cursors\).)72 192.9 Q
(Specifying all of these options on the command line is a)5.5 E(wkw)
-.165 E(ard because)-.11 E(users may w)72 205.9 Q(ant to customize man)
-.11 E 2.75(ya)-.165 G(spects of the program and need a con)-2.75 E
-.165(ve)-.44 G(nient w).165 E(ay to establish)-.11 E
(these customizations as the def)72 218.9 Q(ault settings.)-.11 E
(The resource manager is pro)5.5 E(vided for this purpose.)-.165 E(Reso\
urce speci\214cations are usually stored in human-readable \214les and \
in serv)72 231.9 Q(er properties.)-.165 E
(The resource manager is a database manager with a twist.)72 248.8 Q
(In most database systems, you perform)5.5 E 2.75(aq)72 261.8 S(uery us\
ing an imprecise speci\214cation, and you get back a set of records.)
-2.75 E(The resource man-)5.5 E(ager)72 274.8 Q 2.75(,h)-.44 G -.275(ow)
-2.75 G -2.365 -.275(ev e).275 H .88 -.44(r, a).275 H(llo).44 E
(ws you to specify a lar)-.275 E(ge set of v)-.198 E
(alues with an imprecise speci\214cation, to query)-.275 E(the database\
 with a precise speci\214cation, and to get back only a single v)72
287.8 Q 2.75(alue. This)-.275 F(should be used)2.75 E
(by applications that need to kno)72 300.8 Q 2.75(ww)-.275 G
(hat the user prefers for colors, fonts, and other resources.)-2.75 E
(It is)5.5 E(this use as a database for dealing with X resources that i\
nspired the name `)72 313.8 Q(`Resource Manager)-.814 E -.77(,')-.44 G
(')-.044 E(although the resource manager can be and is used in other w)
72 326.8 Q(ays.)-.11 E -.165(Fo)72 343.7 S 2.75(re).165 G
(xample, a user of your application may w)-2.915 E
(ant to specify that all windo)-.11 E(ws should ha)-.275 E .33 -.165
(ve a b)-.22 H(lue).165 E(background b)72 356.7 Q
(ut that all mail-reading windo)-.22 E(ws should ha)-.275 E .33 -.165
(ve a r)-.22 H(ed background.).165 E -.44(Wi)5.5 G(th well-engi-).44 E(\
neered and coordinated applications, a user can de\214ne this informati\
on using only tw)72 369.7 Q 2.75(ol)-.11 G(ines of)-2.75 E
(speci\214cations.)72 382.7 Q(As an e)72 399.6 Q(xample of ho)-.165 E
2.75(wt)-.275 G(he resource manager w)-2.75 E
(orks, consider a mail-reading application called)-.11 E 2.75
(xmh. Assume)72 412.6 R(that it is designed so that it uses a comple)
2.75 E 2.75(xw)-.165 G(indo)-2.75 E 2.75(wh)-.275 G(ierarch)-2.75 E 2.75
(ya)-.055 G(ll the w)-2.75 E(ay do)-.11 E(wn to)-.275 E(indi)72 425.6 Q
(vidual command b)-.275 E(uttons, which may be actual small subwindo)
-.22 E(ws in some toolkits.)-.275 E(These are)5.5 E
(often called objects or widgets.)72 438.6 Q
(In such toolkit systems, each user interf)5.5 E(ace object can be com-)
-.11 E(posed of other objects and can be assigned a name and a class.)72
451.6 Q(Fully quali\214ed names or classes)5.5 E(can ha)72 464.6 Q .33
-.165(ve a)-.22 H(rbitrary numbers of component names, b).165 E
(ut a fully quali\214ed name al)-.22 E -.11(wa)-.11 G(ys has the same)
.11 E(number of component names as a fully quali\214ed class.)72 477.6 Q
(This generally re\215ects the structure of the)5.5 E(application as co\
mposed of these objects, starting with the application itself.)72 490.6
Q -.165(Fo)72 507.5 S 2.75(re).165 G
(xample, the xmh mail program has a name `)-2.915 E(`xmh')-.814 E 2.75
('a)-.814 G(nd is one of a class of `)-2.75 E(`Mail')-.814 E 2.75('p)
-.814 G(ro-)-2.75 E 2.75(grams. By)72 520.5 R(con)2.75 E -.165(ve)-.44 G
(ntion, the \214rst character of class components is capitalized, and t\
he \214rst letter of).165 E(name components is in lo)72 533.5 Q 2.75
(wercase. Each)-.275 F(name and class \214nally has an attrib)2.75 E
(ute \(for e)-.22 E(xample,)-.165 E -.814(``)72 546.5 S(fore).814 E
(ground')-.165 E 2.75('o)-.814 G 2.75(r`)-2.75 G(`font')-3.564 E 2.75
('\). If)-.814 F(each windo)2.75 E 2.75(wi)-.275 G 2.75(sp)-2.75 G
(roperly assigned a name and class, it is easy for the)-2.75 E
(user to specify attrib)72 559.5 Q(utes of an)-.22 E 2.75(yp)-.165 G
(ortion of the application.)-2.75 E(At the top le)72 576.4 Q -.165(ve)
-.275 G(l, the application might consist of a paned windo).165 E 2.75
(w\()-.275 G(that is, a windo)-2.75 E 2.75(wd)-.275 G -.275(iv)-2.75 G
(ided into).275 E(se)72 589.4 Q -.165(ve)-.275 G(ral sections\) named `)
.165 E(`toc')-.814 E 2.75('. One)-.814 F(pane of the paned windo)2.75 E
2.75(wi)-.275 G 2.75(sab)-2.75 G(utton box windo)-2.97 E 2.75(wn)-.275 G
(amed)-2.75 E -.814(``)72 602.4 S -.22(bu).814 G(ttons').22 E 2.75('a)
-.814 G(nd is \214lled with command b)-2.75 E 2.75(uttons. One)-.22 F
(of these command b)2.75 E(uttons is used to incorpo-)-.22 E(rate ne)72
615.4 Q 2.75(wm)-.275 G(ail and has the name `)-2.75 E(`incorporate')
-.814 E 2.75('. This)-.814 F(windo)2.75 E 2.75(wh)-.275 G
(as a fully quali\214ed name,)-2.75 E -.814(``)72 628.4 S(xmh.toc.b).814
E(uttons.incorporate')-.22 E(', and a fully quali\214ed class, `)-.814 E
(`Xmh.P)-.814 E(aned.Box.Command')-.165 E 2.75('. Its)-.814 F
(fully quali\214ed name is the name of its parent, `)72 641.4 Q
(`xmh.toc.b)-.814 E(uttons')-.22 E(', follo)-.814 E(wed by its name, `)
-.275 E(`incor)-.814 E(-)-.22 E(porate')72 654.4 Q 2.75('. Its)-.814 F
(class is the class of its parent, `)2.75 E(`Xmh.P)-.814 E(aned.Box')
-.165 E(', follo)-.814 E(wed by its particular class,)-.275 E -.814(``)
72 667.4 S(Command').814 E 2.75('. The)-.814 F
(fully quali\214ed name of a resource is the attrib)2.75 E(ute')-.22 E
2.75(sn)-.605 G(ame appended to the)-2.75 E(object')72 680.4 Q 2.75(sf)
-.605 G(ully quali\214ed name, and the fully quali\214ed class is its c\
lass appended to the object')-2.75 E(s)-.605 E(class.)72 693.4 Q
(The incorporate b)72 710.3 Q(utton might need the follo)-.22 E
(wing resources: T)-.275 E(itle string, F)-.385 E(ont, F)-.165 E(ore)
-.165 E(ground color)-.165 E(for its inacti)72 723.3 Q .33 -.165(ve s)
-.275 H(tate, Background color for its inacti).165 E .33 -.165(ve s)
-.275 H(tate, F).165 E(ore)-.165 E(ground color for its acti)-.165 E .33
-.165(ve s)-.275 H(tate,).165 E F0(382)279.75 769 Q 0 Cg EP
%%Page: 383 388
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E/F1 11/Times-Roman@0 SF
(and Background color for its acti)72 85 Q .33 -.165(ve s)-.275 H 2.75
(tate. Each).165 F(resource is considered to be an attrib)2.75 E
(ute of the)-.22 E -.22(bu)72 98 S
(tton and, as such, has a name and a class.).22 E -.165(Fo)5.5 G 2.75
(re).165 G(xample, the fore)-2.915 E(ground color for the b)-.165 E
(utton in)-.22 E(its acti)72 111 Q .33 -.165(ve s)-.275 H
(tate might be named `).165 E(`acti)-.814 E -.165(ve)-.275 G -.165(Fo)
.165 G(re).165 E(ground')-.165 E(', and its class might be `)-.814 E(`F)
-.814 E(ore)-.165 E(ground')-.165 E('.)-.814 E
(When an application looks up a resource \(for e)72 127.9 Q
(xample, a color\), it passes the complete name and)-.165 E
(complete class of the resource to a look-up routine.)72 140.9 Q
(The resource manager compares this com-)5.5 E(plete speci\214cation ag)
72 153.9 Q(ainst the incomplete speci\214cations of entries in the reso\
urce database, \214nds)-.055 E
(the best match, and returns the corresponding v)72 166.9 Q
(alue for that entry)-.275 E(.)-.715 E
(The de\214nitions for the resource manager are contained in <)72 183.8
Q F0(X11/Xr)A(esour)-.198 E(ce.h)-.198 E F1(>.)A F0 2.75(15.1. Resour)72
209.8 R(ce File Syntax)-.198 E F1(The syntax of a resource \214le is a \
sequence of resource lines terminated by ne)72 226.7 Q
(wline characters or)-.275 E(the end of the \214le.)72 239.7 Q
(The syntax of an indi)5.5 E(vidual resource line is:)-.275 E 44.156
(ResourceLine =)72 263.1 R
(Comment | IncludeFile | ResourceSpec | <empty line>)11.796 E 61.855
(Comment =)72 276.1 R("!" {<an)11.796 E 2.75(yc)-.165 G(haracter e)-2.75
E(xcept null or ne)-.165 E(wline>})-.275 E 55.145(IncludeFile =)72 289.1
R("#" WhiteSpace "include" WhiteSpace FileName WhiteSpace)11.796 E
61.866(FileName =)72 302.1 R(<v)11.796 E
(alid \214lename for operating system>)-.275 E 42.935(ResourceSpec =)72
315.1 R(WhiteSpace ResourceName WhiteSpace ":" WhiteSpace V)11.796 E
(alue)-1.221 E 38.051(ResourceName =)72 328.1 R
([Binding] {Component Binding} ComponentName)11.796 E 69.797(Binding =)
72 341.1 R("." | "*")11.796 E 52.098(WhiteSpace =)72 354.1 R
({<space> | <horizontal tab>})11.796 E 53.913(Component =)72 367.1 R
("?" | ComponentName)11.796 E 27.645(ComponentName =)72 380.1 R
(NameChar {NameChar})11.796 E 57.598(NameChar =)72 393.1 R
("a"\255"z" | "A"\255"Z" | "0"\255"9" | "_" | "-")11.796 E -1.221(Va)72
406.1 S 80.203(lue =)1.221 F({<an)11.796 E 2.75(yc)-.165 G(haracter e)
-2.75 E(xcept null or unescaped ne)-.165 E(wline>})-.275 E
(Elements separated by v)72 429.5 Q(ertical bar \(|\) are alternati)
-.165 E -.165(ve)-.275 G 2.75(s. Curly).165 F
(braces \({...}\) indicate zero or more)2.75 E
(repetitions of the enclosed elements.)72 442.5 Q(Square brack)5.5 E
(ets \([...]\) indicate that the enclosed element is)-.11 E 2.75
(optional. Quotes)72 455.5 R
(\("..."\) are used around literal characters.)2.75 E(IncludeFile lines\
 are interpreted by replacing the line with the contents of the speci\
\214ed \214le.)72 472.4 Q(The)5.5 E -.11(wo)72 485.4 S(rd `).11 E
(`include')-.814 E 2.75('m)-.814 G(ust be in lo)-2.75 E 2.75
(wercase. The)-.275 F(\214le name is interpreted relati)2.75 E .33 -.165
(ve t)-.275 H 2.75(ot).165 G(he directory of the)-2.75 E
(\214le in which the line occurs \(for e)72 498.4 Q
(xample, if the \214le name contains no directory or contains a rela-)
-.165 E(ti)72 511.4 Q .33 -.165(ve d)-.275 H
(irectory speci\214cation\).).165 E
(If a ResourceName contains a contiguous sequence of tw)72 528.3 Q 2.75
(oo)-.11 G 2.75(rm)-2.75 G(ore Binding characters, the)-2.75 E
(sequence will be replaced with a single `)72 541.3 Q(`.)-.814 E 1.628
-.814('' c)-.77 H(haracter if the sequence contains only `).814 E(`.)
-.814 E 1.628 -.814('' c)-.77 H(haracters;).814 E
(otherwise, the sequence will be replaced with a single `)72 554.3 Q
(`*')-.814 E 2.75('c)-.814 G(haracter)-2.75 E(.)-.605 E 2.75(Ar)72 571.2
S(esource database ne)-2.75 E -.165(ve)-.275 G 2.75(rc).165 G
(ontains more than one entry for a gi)-2.75 E -.165(ve)-.275 G 2.75(nR)
.165 G 2.75(esourceName. If)-2.75 F 2.75(ar)2.75 G(esource)-2.75 E(\214\
le contains multiple lines with the same ResourceName, the last line in\
 the \214le is used.)72 584.2 Q(An)72 601.1 Q 2.75(yw)-.165 G(hite spac\
e characters before or after the name or colon in a ResourceSpec are ig\
nored.)-2.75 E -.88(To)5.5 G(allo)72 614.1 Q 2.75(waV)-.275 G
(alue to be)-3.971 E(gin with white space, the tw)-.165 E
(o-character sequence `)-.11 E .916(`\\)-.814 G/F2 11/Times-Italic@0 SF
(space)A F1 1.628 -.814('' \()D(backslash fol-).814 E(lo)72 627.1 Q
(wed by space\) is recognized and replaced by a space character)-.275 E
2.75(,a)-.44 G(nd the tw)-2.75 E(o-character sequence)-.11 E -.206 -.814
(`` \\)72 640.1 T F2(tab)1.73 E F1 1.628 -.814('' \()D(backslash follo)
.814 E
(wed by horizontal tab\) is recognized and replaced by a horizontal tab)
-.275 E(character)72 653.1 Q 5.5(.T)-.605 G 2.75(oa)-6.38 G(llo)-2.75 E
2.75(waV)-.275 G(alue to contain embedded ne)-3.971 E
(wline characters, the tw)-.275 E(o-character sequence)-.11 E -.206
-.814(`` \\ n)72 666.1 T 1.628 -.814('' i).814 H 2.75(sr).814 G
(ecognized and replaced by a ne)-2.75 E(wline character)-.275 E 5.5(.T)
-.605 G 2.75(oa)-6.38 G(llo)-2.75 E 2.75(waV)-.275 G(alue to be brok)
-3.971 E(en across)-.11 E(multiple lines in a te)72 679.1 Q
(xt \214le, the tw)-.165 E(o-character sequence `)-.11 E .916(`\\)-.814
G F2(ne)A(wline)-.165 E F1 1.628 -.814('' \()D(backslash follo).814 E
(wed by ne)-.275 E(w-)-.275 E(line\) is recognized and remo)72 692.1 Q
-.165(ve)-.165 G 2.75(df).165 G(rom the v)-2.75 E 2.75(alue. T)-.275 F
2.75(oa)-.88 G(llo)-2.75 E 2.75(waV)-.275 G
(alue to contain arbitrary character)-3.971 E(codes, the four)72 705.1 Q
(-character sequence `)-.22 E .916(`\\)-.814 G F2(nnn)A F1 -.814('')C
2.75(,w).814 G(here each)-2.75 E F2(n)2.75 E F1
(is a digit character in the range of)2.75 E -.814(``)72 718.1 S(0').814
E .916<27ad>-.814 G -.814(``)-.916 G(7').814 E(', is recognized and rep\
laced with a single byte that contains the octal v)-.814 E
(alue speci\214ed by)-.275 E(the sequence.)72 731.1 Q(Finally)5.5 E 2.75
(,t)-.715 G(he tw)-2.75 E(o-character sequence `)-.11 E .916(`\\)-.814 G
(\\')-.916 E 2.75('i)-.814 G 2.75(sr)-2.75 G
(ecognized and replaced with a single)-2.75 E F0(383)279.75 769 Q 0 Cg
EP
%%Page: 384 389
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E/F1 11/Times-Roman@0 SF(backslash.)72
85 Q(As an e)72 101.9 Q(xample of these sequences, the follo)-.165 E
(wing resource line contains a v)-.275 E(alue consisting of four)-.275 E
(characters: a backslash, a null, a `)72 114.9 Q(`z')-.814 E
(', and a ne)-.814 E(wline:)-.275 E(magic.v)108 134.4 Q(alues: \\\\\\)
-.275 E -1.834(000 \\).916 F -1.834(z\\ n)108 147.4 R F0 2.75
(15.2. Resour)72 179.9 R(ce Manager Matching Rules)-.198 E F1(The algor\
ithm for determining which resource database entry matches a gi)72 196.8
Q -.165(ve)-.275 G 2.75(nq).165 G(uery is the heart)-2.75 E
(of the resource manager)72 209.8 Q 5.5(.A)-.605 G
(ll queries must fully specify the name and class of the desired)-5.5 E
(resource \(use of the characters `)72 222.8 Q(`*')-.814 E 2.75('a)-.814
G(nd `)-2.75 E(`?')-.814 E 2.75('i)-.814 G 2.75(sn)-2.75 G
(ot permitted\).)-2.75 E(The library supports up to 100)5.5 E
(components in a full name or class.)72 235.8 Q
(Resources are stored in the database with only partially spec-)5.5 E
(i\214ed names and classes, using pattern matching constructs.)72 248.8
Q(An asterisk \(*\) is a loose binding and)5.5 E
(is used to represent an)72 261.8 Q 2.75(yn)-.165 G(umber of interv)
-2.75 E(ening components, including none.)-.165 E 2.75(Ap)5.5 G
(eriod \(.\) is a tight)-2.75 E
(binding and is used to separate immediately adjacent components.)72
274.8 Q 2.75(Aq)5.5 G(uestion mark \(?\) is used to)-2.75 E(match an)72
287.8 Q 2.75(ys)-.165 G(ingle component name or class.)-2.75 E 2.75(Ad)
5.5 G(atabase entry cannot end in a loose binding; the)-2.75 E
(\214nal component \(which cannot be the character `)72 300.8 Q(`?')
-.814 E('\) must be speci\214ed.)-.814 E(The lookup algorithm)5.5 E(sea\
rches the database for the entry that most closely matches \(is most sp\
eci\214c for\) the full name)72 313.8 Q(and class being queried.)72
326.8 Q
(When more than one database entry matches the full name and class,)5.5
E(precedence rules are used to select just one.)72 339.8 Q(The full nam\
e and class are scanned from left to right \(from highest le)72 356.7 Q
-.165(ve)-.275 G 2.75(li).165 G 2.75(nt)-2.75 G(he hierarch)-2.75 E 2.75
(yt)-.055 G 2.75(ol)-2.75 G -.275(ow)-2.75 G(-).275 E
(est\), one component at a time.)72 369.7 Q(At each le)5.5 E -.165(ve)
-.275 G(l, the corresponding component and/or binding of).165 E(each ma\
tching entry is determined, and these matching components and bindings \
are compared)72 382.7 Q(according to precedence rules.)72 395.7 Q
(Each of the rules is applied at each le)5.5 E -.165(ve)-.275 G 2.75(lb)
.165 G(efore mo)-2.75 E(ving to the)-.165 E(ne)72 408.7 Q(xt le)-.165 E
-.165(ve)-.275 G(l, until a rule selects a single entry o).165 E -.165
(ve)-.165 G 2.75(ra).165 G(ll others.)-2.75 E
(The rules, in order of precedence, are:)5.5 E 16.5(1. An)72 425.6 R(en\
try that contains a matching component \(whether name, class, or the ch\
aracter `)2.75 E(`?')-.814 E('\))-.814 E(tak)99.5 438.6 Q
(es precedence o)-.11 E -.165(ve)-.165 G 2.75(re).165 G
(ntries that elide the le)-2.75 E -.165(ve)-.275 G 2.75(l\().165 G
(that is, entries that match the le)-2.75 E -.165(ve)-.275 G 2.75(li)
.165 G 2.75(na)-2.75 G(loose binding\).)99.5 451.6 Q 16.5(2. An)72 468.5
R(entry with a matching name tak)2.75 E(es precedence o)-.11 E -.165(ve)
-.165 G 2.75(rb).165 G(oth entries with a matching class)-2.75 E
(and entries that match using the character `)99.5 481.5 Q(`?')-.814 E
2.75('. An)-.814 F(entry with a matching class tak)2.75 E(es prece-)-.11
E(dence o)99.5 494.5 Q -.165(ve)-.165 G 2.75(re).165 G
(ntries that match using the character `)-2.75 E(`?')-.814 E('.)-.814 E
16.5(3. An)72 511.4 R(entry preceded by a tight binding tak)2.75 E
(es precedence o)-.11 E -.165(ve)-.165 G 2.75(re).165 G
(ntries preceded by a loose)-2.75 E(binding.)99.5 524.4 Q 1.76 -.88
(To i)72 541.3 T(llustrate these rules, consider the follo).88 E
(wing resource database entries:)-.275 E(xmh*P)108 560.8 Q(aned*acti)
-.165 E -.165(ve)-.275 G -.165(Fo).165 G(re).165 E 40.091(ground: red)
-.165 F/F2 11/Times-Italic@0 SF(\(entry A\))57.953 E F1(*incorporate.F)
108 573.8 Q(ore)-.165 E 64.852(ground: blue)-.165 F F2(\(entry B\))
53.058 E F1(xmh.toc*Command*acti)108 586.8 Q -.165(ve)-.275 G -.165(Fo)
.165 G(re).165 E 4.781(ground: green)-.165 F F2(\(entry C\))47.569 E F1
(xmh.toc*?.F)108 599.8 Q(ore)-.165 E 74.312(ground: white)-.165 F F2
(\(entry D\))47.558 E F1(xmh.toc*Command.acti)108 612.8 Q -.165(ve)-.275
G -.165(Fo).165 G(re).165 E 7.531(ground: black)-.165 F F2(\(entry E\))
48.174 E F1(Consider a query for the resource:)72 636.2 Q
(xmh.toc.messagefunctions.incorporate.acti)108 659.6 Q -.165(ve)-.275 G
-.165(Fo).165 G(re).165 E(ground)-.165 E F2(\(name\))2.872 E F1(Xmh.P)
108 672.6 Q(aned.Box.Command.F)-.165 E(ore)-.165 E(ground)-.165 E F2
(\(class\))77.111 E F1(At the \214rst le)72 696 Q -.165(ve)-.275 G 2.75
(l\().165 G(xmh, Xmh\), rule 1 eliminates entry B.)-2.75 E
(At the second le)5.5 E -.165(ve)-.275 G 2.75(l\().165 G(toc, P)-2.75 E
(aned\), rule 2)-.165 E(eliminates entry A.)72 709 Q(At the third le)5.5
E -.165(ve)-.275 G 2.75(l\().165 G
(messagefunctions, Box\), no entries are eliminated.)-2.75 E(At the)5.5
E(fourth le)72 722 Q -.165(ve)-.275 G 2.75(l\().165 G
(incorporate, Command\), rule 2 eliminates entry D.)-2.75 E
(At the \214fth le)5.5 E -.165(ve)-.275 G(l).165 E F0(384)279.75 769 Q 0
Cg EP
%%Page: 385 390
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E/F1 11/Times-Roman@0 SF(\(acti)72 85 Q
-.165(ve)-.275 G -.165(Fo).165 G(re).165 E(ground, F)-.165 E(ore)-.165 E
(ground\), rule 3 eliminates entry C.)-.165 E F0 2.75(15.3. Quarks)72
111 R F1(Most uses of the resource manager in)72 127.9 Q -.22(vo)-.44 G
(lv).22 E 2.75(ed)-.165 G
(e\214ning names, classes, and representation types as)-2.75 E
(string constants.)72 140.9 Q(Ho)5.5 E(we)-.275 E -.165(ve)-.275 G .88
-.44(r, a).165 H -.11(lwa).44 G
(ys referring to strings in the resource manager can be slo).11 E -.715
(w,)-.275 G(because it is so hea)72 153.9 Q(vily used in some toolkits.)
-.22 E 1.76 -.88(To s)5.5 H(olv).88 E 2.75(et)-.165 G
(his problem, a shorthand for a string is)-2.75 E
(used in place of the string in man)72 166.9 Q 2.75(yo)-.165 G 2.75(ft)
-2.75 G(he resource manager functions.)-2.75 E(Simple comparisons can)
5.5 E(be performed rather than string comparisons.)72 179.9 Q
(The shorthand name for a string is called a quark)5.5 E
(and is the type)72 192.9 Q F0(XrmQuark)3.666 E F1 5.5(.O).916 G 2.75
(ns)-5.5 G(ome occasions, you may w)-2.75 E
(ant to allocate a quark that has no)-.11 E(string equi)72 205.9 Q -.275
(va)-.275 G(lent.).275 E 2.75(Aq)72 222.8 S
(uark is to a string what an atom is to a string in the serv)-2.75 E(er)
-.165 E 2.75(,b)-.44 G(ut its use is entirely local to your)-2.97 E
(application.)72 235.8 Q 1.76 -.88(To a)72 265.7 T(llocate a ne).88 E
2.75(wq)-.275 G(uark, use)-2.75 E F0(XrmUniqueQuark)3.666 E F1(.).916 E
.44 LW 36 283.45 36 294.45 DL 36 281.45 36 292.45 DL 41.5 279.7 36 279.7
DL 43.5 279.7 38 279.7 DL 49 279.7 43.5 279.7 DL
(XrmQuark XrmUniqueQuark)72 295.6 Q 1.833(\(\)).916 G 36 295.15 36
306.15 DL 36 293.15 36 304.15 DL 41.5 304.4 36 304.4 DL 43.5 304.4 38
304.4 DL 49 304.4 43.5 304.4 DL(The)72 329.4 Q F0(XrmUniqueQuark)3.666 E
F1(function allocates a quark that is guaranteed not to represent an)
3.666 E 2.75(ys)-.165 G(tring)-2.75 E(that is kno)72 342.4 Q
(wn to the resource manager)-.275 E(.)-.605 E
(Each name, class, and representation type is typedef)72 372.3 Q 1.1
-.55('d a).605 H 2.75(sa).55 G(n)-2.75 E F0(XrmQuark)3.666 E F1(.).916 E
36 393.95 36 404.95 DL 36 391.95 36 402.95 DL 41.5 390.2 36 390.2 DL
43.5 390.2 38 390.2 DL 49 390.2 43.5 390.2 DL
(typedef int XrmQuark, *XrmQuarkList;)72 408.7 Q
(typedef XrmQuark XrmName;)72 421.7 Q(typedef XrmQuark XrmClass;)72
434.7 Q(typedef XrmQuark XrmRepresentation;)72 447.7 Q(#de\214ne NULLQ)
72 460.7 Q -.44(UA)-.11 G(RK \(\(XrmQuark\) 0\)).44 E 36 462.85 36
473.85 DL 36 460.85 36 471.85 DL 41.5 472.1 36 472.1 DL 43.5 472.1 38
472.1 DL 49 472.1 43.5 472.1 DL
(Lists are represented as null-terminated arrays of quarks.)72 497.1 Q
(The size of the array must be lar)5.5 E(ge)-.198 E
(enough for the number of components used.)72 510.1 Q 36 531.75 36
542.75 DL 36 529.75 36 540.75 DL 41.5 528 36 528 DL 43.5 528 38 528 DL
49 528 43.5 528 DL(typedef XrmQuarkList XrmNameList;)72 546.5 Q
(typedef XrmQuarkList XrmClassList;)72 559.5 Q 36 561.65 36 572.65 DL 36
559.65 36 570.65 DL 41.5 570.9 36 570.9 DL 43.5 570.9 38 570.9 DL 49
570.9 43.5 570.9 DL 1.76 -.88(To c)72 608.9 T(on).88 E -.165(ve)-.44 G
(rt a string to a quark, use).165 E F0(XrmStringT)3.666 E(oQuark)-1.012
E F1(or)3.666 E F0(XrmP)3.666 E(ermStringT)-.22 E(oQuark)-1.012 E F1(.)
.916 E F0(385)279.75 769 Q 0 Cg EP
%%Page: 386 391
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E .44 LW 36 76.75 36 87.75 DL 36 74.75
36 85.75 DL 41.5 73 36 73 DL 43.5 73 38 73 DL 49 73 43.5 73 DL/F1 11
/Times-Roman@0 SF(#de\214ne XrmStringT)72 88.9 Q
(oName\(string\) XrmStringT)-.88 E(oQuark\(string\))-.88 E
(#de\214ne XrmStringT)72 101.9 Q(oClass\(string\) XrmStringT)-.88 E
(oQuark\(string\))-.88 E(#de\214ne XrmStringT)72 114.9 Q
(oRepresentation\(string\) XrmStringT)-.88 E(oQuark\(string\))-.88 E
(XrmQuark XrmStringT)72 140.9 Q -1.834(oQuark \()-.88 F/F2 11
/Times-Italic@0 SF(string).916 E F1(\)).916 E(char *)85.75 153.9 Q F2
(string)A F1(;).916 E(XrmQuark XrmPermStringT)72 179.9 Q -1.834
(oQuark \()-.88 F F2(string).916 E F1(\)).916 E(char *)85.75 192.9 Q F2
(string)A F1(;).916 E F2(string)72 213.7 Q F1
(Speci\214es the string for which a quark is to be allocated.)46.326 E
36 209.35 36 220.35 DL 36 207.35 36 218.35 DL 41.5 218.6 36 218.6 DL
43.5 218.6 38 218.6 DL 49 218.6 43.5 218.6 DL
(These functions can be used to con)72 243.6 Q -.165(ve)-.44 G
(rt from string to quark representation.).165 E(If the string is not in)
5.5 E(the Host Portable Character Encoding, the con)72 256.6 Q -.165(ve)
-.44 G(rsion is implementation-dependent.).165 E(The string)5.5 E(ar)72
269.6 Q(gument to)-.198 E F0(XrmStringT)3.666 E(oQuark)-1.012 E F1
(need not be permanently allocated storage.)3.666 E F0(XrmP)6.416 E
(ermString-)-.22 E -1.012(To)72 282.6 S(Quark)1.012 E F1(is just lik)
3.666 E(e)-.11 E F0(XrmStringT)3.666 E(oQuark)-1.012 E F1 2.75(,e).916 G
(xcept that Xlib is permitted to assume the string)-2.915 E(ar)72 295.6
Q(gument is permanently allocated, and, hence, that it can be used as t\
he v)-.198 E(alue to be returned by)-.275 E F0(XrmQuarkT)72.916 308.6 Q
(oString)-1.012 E F1(.).916 E -.165(Fo)72 325.5 S 2.75(ra).165 G .33
-.165(ny g)-2.75 H -2.365 -.275(iv e).165 H 2.75(nq).275 G(uark, if)
-2.75 E F0(XrmStringT)3.666 E(oQuark)-1.012 E F1(returns a non-NULL v)
3.666 E(alue, all future calls will)-.275 E(return the same v)72 338.5 Q
(alue \(identical address\).)-.275 E 1.76 -.88(To c)72 368.4 T(on).88 E
-.165(ve)-.44 G(rt a quark to a string, use).165 E F0(XrmQuarkT)3.666 E
(oString)-1.012 E F1(.).916 E 36 386.15 36 397.15 DL 36 384.15 36 395.15
DL 41.5 382.4 36 382.4 DL 43.5 382.4 38 382.4 DL 49 382.4 43.5 382.4 DL
(#de\214ne XrmNameT)72 398.3 Q(oString\(name\) XrmQuarkT)-.88 E
(oString\(name\))-.88 E(#de\214ne XrmClassT)72 411.3 Q
(oString\(class\) XrmQuarkT)-.88 E(oString\(class\))-.88 E
(#de\214ne XrmRepresentationT)72 424.3 Q(oString\(type\) XrmQuarkT)-.88
E(oString\(type\))-.88 E(char *XrmQuarkT)72 450.3 Q -1.834(oString \()
-.88 F F2(quark).916 E F1(\)).916 E(XrmQuark)85.75 463.3 Q F2(quark)2.75
E F1(;).916 E F2(quark)72 484.1 Q F1
(Speci\214es the quark for which the equi)46.337 E -.275(va)-.275 G
(lent string is desired.).275 E 36 479.75 36 490.75 DL 36 477.75 36
488.75 DL 41.5 489 36 489 DL 43.5 489 38 489 DL 49 489 43.5 489 DL
(These functions can be used to con)72 514 Q -.165(ve)-.44 G
(rt from quark representation to string.).165 E(The string pointed to)
5.5 E(by the return v)72 527 Q(alue must not be modi\214ed or freed.)
-.275 E(The returned string is byte-for)5.5 E(-byte equal to)-.22 E
(the original string passed to one of the string-to-quark routines.)72
540 Q(If no string e)5.5 E(xists for that quark,)-.165 E F0(XrmQuarkT)
72.916 553 Q(oString)-1.012 E F1(returns NULL.)3.666 E -.165(Fo)5.5 G
2.75(ra).165 G .33 -.165(ny g)-2.75 H -2.365 -.275(iv e).165 H 2.75(nq)
.275 G(uark, if)-2.75 E F0(XrmQuarkT)3.666 E(oString)-1.012 E F1
(returns a)3.666 E(non-NULL v)72 566 Q
(alue, all future calls will return the same v)-.275 E
(alue \(identical address\).)-.275 E 1.76 -.88(To c)72 595.9 T(on).88 E
-.165(ve)-.44 G
(rt a string with one or more components to a quark list, use).165 E F0
(XrmStringT)3.666 E(oQuarkList)-1.012 E F1(.).916 E F0(386)279.75 769 Q
0 Cg EP
%%Page: 387 392
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E .44 LW 36 76.75 36 87.75 DL 36 74.75
36 85.75 DL 41.5 73 36 73 DL 43.5 73 38 73 DL 49 73 43.5 73 DL/F1 11
/Times-Roman@0 SF(#de\214ne XrmStringT)72 88.9 Q(oNameList\(str)-.88 E
2.75(,n)-.44 G 2.75(ame\) XrmStringT)-2.75 F
(oQuarkList\(\(str\), \(name\)\))-.88 E(#de\214ne XrmStringT)72 101.9 Q
(oClassList\(str)-.88 E 2.75(,c)-.44 G(lass\) XrmStringT)-2.75 E
(oQuarkList\(\(str\), \(class\)\))-.88 E -.22(vo)72 127.9 S
(id XrmStringT).22 E -1.834(oQuarkList \()-.88 F/F2 11/Times-Italic@0 SF
(string).916 E F1(,)A F2(quarks_r)2.75 E(eturn)-.407 E F1(\)).916 E
(char *)85.75 140.9 Q F2(string)A F1(;).916 E(XrmQuarkList)85.75 153.9 Q
F2(quarks_r)2.75 E(eturn)-.407 E F1(;).916 E F2(string)72 174.7 Q F1
(Speci\214es the string for which a quark list is to be allocated.)
46.326 E F2(quarks_r)72 191.6 Q(eturn)-.407 E F1
(Returns the list of quarks.)9.465 E(The caller must allocate suf)5.5 E
(\214cient space for the quarks)-.275 E(list before calling)144 204.6 Q
F0(XrmStringT)3.666 E(oQuarkList)-1.012 E F1(.).916 E 36 200.25 36
211.25 DL 36 198.25 36 209.25 DL 41.5 209.5 36 209.5 DL 43.5 209.5 38
209.5 DL 49 209.5 43.5 209.5 DL(The)72 234.5 Q F0(XrmStringT)3.666 E
(oQuarkList)-1.012 E F1(function con)3.666 E -.165(ve)-.44 G
(rts the null-terminated string \(generally a fully qual-).165 E
(i\214ed name\) to a list of quarks.)72 247.5 Q
(Note that the string must be in the v)5.5 E(alid ResourceName format)
-.275 E(\(see section 15.1\).)72 260.5 Q
(If the string is not in the Host Portable Character Encoding, the con)
5.5 E -.165(ve)-.44 G(rsion is).165 E(implementation-dependent.)72 273.5
Q 2.75(Ab)72 290.4 S(inding list is a list of type)-2.75 E F0
(XrmBindingList)3.666 E F1
(and indicates if components of name or class lists)3.666 E(are bound t\
ightly or loosely \(that is, if wildcarding of intermediate components \
is speci\214ed\).)72 303.4 Q(typedef enum {XrmBindT)72 326.8 Q(ightly)
-.385 E 2.75(,X)-.715 G(rmBindLoosely} XrmBinding, *XrmBindingList;)
-2.75 E F0(XrmBindT)72.916 350.2 Q(ightly)-.198 E F1
(indicates that a period separates the components, and)3.666 E F0
(XrmBindLoosely)3.666 E F1(indi-)3.666 E
(cates that an asterisk separates the components.)72 363.2 Q 1.76 -.88
(To c)72 393.1 T(on).88 E -.165(ve)-.44 G(rt a string with one or more \
components to a binding list and a quark list, use).165 E F0(Xrm-)3.666
E(StringT)72 406.1 Q(oBindingQuarkList)-1.012 E F1(.).916 E 36 423.85 36
434.85 DL 36 421.85 36 432.85 DL 41.5 420.1 36 420.1 DL 43.5 420.1 38
420.1 DL 49 420.1 43.5 420.1 DL(XrmStringT)72 436 Q -1.834
(oBindingQuarkList \()-.88 F F2(string).916 E F1(,)A F2(bindings_r)2.75
E(eturn)-.407 E F1(,)A F2(quarks_r)2.75 E(eturn)-.407 E F1(\)).916 E
(char *)85.75 449 Q F2(string)A F1(;).916 E(XrmBindingList)85.75 462 Q
F2(bindings_r)2.75 E(eturn)-.407 E F1(;).916 E(XrmQuarkList)85.75 475 Q
F2(quarks_r)2.75 E(eturn)-.407 E F1(;).916 E F2(string)72 495.8 Q F1
(Speci\214es the string for which a quark list is to be allocated.)
46.326 E F2(bindings_r)72 512.7 Q(eturn)-.407 E F1
(Returns the binding list.)144 525.7 Q(The caller must allocate suf)5.5
E(\214cient space for the binding)-.275 E(list before calling)144 538.7
Q F0(XrmStringT)3.666 E(oBindingQuarkList)-1.012 E F1(.).916 E F2
(quarks_r)72 555.6 Q(eturn)-.407 E F1(Returns the list of quarks.)9.465
E(The caller must allocate suf)5.5 E(\214cient space for the quarks)
-.275 E(list before calling)144 568.6 Q F0(XrmStringT)3.666 E
(oBindingQuarkList)-1.012 E F1(.).916 E 36 564.25 36 575.25 DL 36 562.25
36 573.25 DL 41.5 573.5 36 573.5 DL 43.5 573.5 38 573.5 DL 49 573.5 43.5
573.5 DL(Component names in the list are separated by a period or an as\
terisk character)72 598.5 Q 5.5(.T)-.605 G(he string must)-5.5 E
(be in the format of a v)72 611.5 Q
(alid ResourceName \(see section 15.1\).)-.275 E
(If the string does not start with a)5.5 E
(period or an asterisk, a tight binding is assumed.)72 624.5 Q -.165(Fo)
5.5 G 2.75(re).165 G(xample, the string `)-2.915 E(`*a.b*c')-.814 E 2.75
('b)-.814 G(ecomes:)-2.75 E 18.866(quarks: a)72 647.9 R 48.5(bc)49.116 G
10.297(bindings: loose)72 660.9 R 31.076(tight loose)30.779 F F0 2.75
(15.4. Cr)72 693.4 R(eating and Storing Databases)-.198 E F1 2.75(Ar)72
710.3 S(esource database is an opaque type,)-2.75 E F0(XrmDatabase)3.666
E F1 5.5(.E).916 G(ach database v)-5.5 E(alue is stored in an)-.275 E F0
(Xrm-)3.666 E -1.012(Va)72 723.3 S(lue)1.012 E F1 2.75(structure. This)
3.666 F
(structure consists of a size, an address, and a representation type.)
2.75 E(The size)5.5 E F0(387)279.75 769 Q 0 Cg EP
%%Page: 388 393
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E/F1 11/Times-Roman@0 SF
(is speci\214ed in bytes.)72 85 Q(The representation type is a w)5.5 E
(ay for you to store data tagged by some appli-)-.11 E
(cation-de\214ned type \(for e)72 98 Q(xample, the strings `)-.165 E
(`font')-.814 E 2.75('o)-.814 G 2.75(r`)-2.75 G(`color')-3.564 E 2.75
('\). It)-.814 F(has nothing to do with the C)2.75 E
(data type or with its class.)72 111 Q(The)5.5 E F0(XrmV)3.666 E(alue)
-1.012 E F1(structure is de\214ned as:)3.666 E .44 LW 36 132.65 36
143.65 DL 36 130.65 36 141.65 DL 41.5 128.9 36 128.9 DL 43.5 128.9 38
128.9 DL 49 128.9 43.5 128.9 DL(typedef struct {)72 147.4 Q
(unsigned int size;)108 160.4 Q(XPointer addr;)108 173.4 Q 2.75(}X)72
186.4 S(rmV)-2.75 E(alue, *XrmV)-1.221 E(aluePtr;)-1.221 E 36 188.55 36
199.55 DL 36 186.55 36 197.55 DL 41.5 197.8 36 197.8 DL 43.5 197.8 38
197.8 DL 49 197.8 43.5 197.8 DL 1.76 -.88(To i)72 235.8 T
(nitialize the resource manager).88 E 2.75(,u)-.44 G(se)-2.75 E F0
(XrmInitialize)3.666 E F1(.).916 E 36 253.55 36 264.55 DL 36 251.55 36
262.55 DL 41.5 249.8 36 249.8 DL 43.5 249.8 38 249.8 DL 49 249.8 43.5
249.8 DL -.22(vo)72 265.7 S(id XrmInitialize).22 E 1.833(\(\)).916 G(;)
-1.833 E 36 265.25 36 276.25 DL 36 263.25 36 274.25 DL 41.5 274.5 36
274.5 DL 43.5 274.5 38 274.5 DL 49 274.5 43.5 274.5 DL 1.76 -.88(To r)72
299.5 T(etrie).88 E .33 -.165(ve a d)-.275 H(atabase from disk, use).165
E F0(XrmGetFileDatabase)3.666 E F1(.).916 E 36 317.25 36 328.25 DL 36
315.25 36 326.25 DL 41.5 313.5 36 313.5 DL 43.5 313.5 38 313.5 DL 49
313.5 43.5 313.5 DL(XrmDatabase XrmGetFileDatabase)72 329.4 Q(\().916 E
/F2 11/Times-Italic@0 SF(\214lename).916 E F1(\)).916 E(char *)85.75
342.4 Q F2(\214lename)A F1(;).916 E F2(\214lename)72 363.2 Q F1
(Speci\214es the resource database \214le name.)34.732 E 36 358.85 36
369.85 DL 36 356.85 36 367.85 DL 41.5 368.1 36 368.1 DL 43.5 368.1 38
368.1 DL 49 368.1 43.5 368.1 DL(The)72 393.1 Q F0(XrmGetFileDatabase)
3.666 E F1(function opens the speci\214ed \214le, creates a ne)3.666 E
2.75(wr)-.275 G(esource database, and)-2.75 E(loads it with the speci\
\214cations read in from the speci\214ed \214le.)72 406.1 Q
(The speci\214ed \214le should contain a)5.5 E(sequence of entries in v)
72 419.1 Q(alid ResourceLine format \(see section 15.1\); the database \
that results from)-.275 E
(reading a \214le with incorrect syntax is implementation-dependent.)72
432.1 Q(The \214le is parsed in the current)5.5 E
(locale, and the database is created in the current locale.)72 445.1 Q
(If it cannot open the speci\214ed \214le,)5.5 E F0(XrmGetFileDatabase)
72.916 458.1 Q F1(returns NULL.)3.666 E 1.76 -.88(To s)72 488 T
(tore a cop).88 E 2.75(yo)-.11 G 2.75(fad)-2.75 G(atabase to disk, use)
-2.75 E F0(XrmPutFileDatabase)3.666 E F1(.).916 E 36 505.75 36 516.75 DL
36 503.75 36 514.75 DL 41.5 502 36 502 DL 43.5 502 38 502 DL 49 502 43.5
502 DL -.22(vo)72 517.9 S(id XrmPutFileDatabase).22 E(\().916 E F2
(database).916 E F1(,)A F2(stor)2.75 E(ed_db)-.407 E F1(\)).916 E
(XrmDatabase)85.75 530.9 Q F2(database)2.75 E F1(;).916 E(char *)85.75
543.9 Q F2(stor)A(ed_db)-.407 E F1(;).916 E F2(database)72 564.7 Q F1
(Speci\214es the database that is to be used.)32.279 E F2(stor)72 581.6
Q(ed_db)-.407 E F1(Speci\214es the \214le name for the stored database.)
28.407 E 36 577.25 36 588.25 DL 36 575.25 36 586.25 DL 41.5 586.5 36
586.5 DL 43.5 586.5 38 586.5 DL 49 586.5 43.5 586.5 DL(The)72 611.5 Q F0
(XrmPutFileDatabase)3.666 E F1(function stores a cop)3.666 E 2.75(yo)
-.11 G 2.75(ft)-2.75 G
(he speci\214ed database in the speci\214ed \214le.)-2.75 E -1.375 -.77
(Te x)72 624.5 T 2.75(ti).77 G 2.75(sw)-2.75 G
(ritten to the \214le as a sequence of entries in v)-2.75 E
(alid ResourceLine format \(see section 15.1\).)-.275 E
(The \214le is written in the locale of the database.)72 637.5 Q
(Entries containing resource names that are not in)5.5 E
(the Host Portable Character Encoding or containing v)72 650.5 Q
(alues that are not in the encoding of the)-.275 E
(database locale, are written in an implementation-dependent manner)72
663.5 Q 5.5(.T)-.605 G(he order in which entries)-5.5 E
(are written is implementation-dependent.)72 676.5 Q
(Entries with representation types other than `)5.5 E(`String')-.814 E
(')-.814 E(are ignored.)72 689.5 Q 1.76 -.88(To o)72 719.4 T
(btain a pointer to the screen-independent resources of a display).88 E
2.75(,u)-.715 G(se)-2.75 E F0(XResour)3.666 E(ceManager)-.198 E(-)-.407
E(String)72 732.4 Q F1(.).916 E F0(388)279.75 769 Q 0 Cg EP
%%Page: 389 394
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E .44 LW 36 76.75 36 87.75 DL 36 74.75
36 85.75 DL 41.5 73 36 73 DL 43.5 73 38 73 DL 49 73 43.5 73 DL/F1 11
/Times-Roman@0 SF(char *XResourceManagerString)72 88.9 Q(\().916 E/F2 11
/Times-Italic@0 SF(display).916 E F1(\)).916 E(Display *)88.5 101.9 Q F2
(display)A F1(;).916 E F2(display)72 122.7 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
36 118.35 36 129.35 DL 36 116.35 36 127.35 DL 41.5 127.6 36 127.6 DL
43.5 127.6 38 127.6 DL 49 127.6 43.5 127.6 DL(The)72 152.6 Q F0(XResour)
3.666 E(ceManagerString)-.198 E F1(function returns the RESOURCE_MAN)
3.666 E -.44(AG)-.385 G(ER property from).44 E(the serv)72 165.6 Q(er')
-.165 E 2.75(sr)-.605 G(oot windo)-2.75 E 2.75(wo)-.275 G 2.75(fs)-2.75
G(creen zero, which w)-2.75 E(as returned when the connection w)-.11 E
(as opened)-.11 E(using)72 178.6 Q F0(XOpenDisplay)3.666 E F1 5.5(.T)
.916 G(he property is con)-5.5 E -.165(ve)-.44 G
(rted from type STRING to the current locale.).165 E(The)5.5 E(con)72
191.6 Q -.165(ve)-.44 G(rsion is identical to that produced by).165 E F0
(XmbT)3.666 E(extPr)-1.012 E(opertyT)-.198 E(oT)-1.012 E(extList)-1.012
E F1(for a single element)3.666 E(STRING property)72 204.6 Q 5.5(.T)
-.715 G(he returned string is o)-5.5 E
(wned by Xlib and should not be freed by the client.)-.275 E
(The property v)72 217.6 Q
(alue must be in a format that is acceptable to)-.275 E F0
(XrmGetStringDatabase)3.666 E F1 5.5(.I).916 G 2.75(fn)-5.5 G(o)-2.75 E
(property e)72 230.6 Q(xists, NULL is returned.)-.165 E 1.76 -.88(To o)
72 260.5 T
(btain a pointer to the screen-speci\214c resources of a screen, use).88
E F0(XScr)3.666 E(eenResour)-.198 E(ceString)-.198 E F1(.).916 E 36
278.25 36 289.25 DL 36 276.25 36 287.25 DL 41.5 274.5 36 274.5 DL 43.5
274.5 38 274.5 DL 49 274.5 43.5 274.5 DL(char *XScreenResourceString)72
290.4 Q(\().916 E F2(scr).916 E(een)-.407 E F1(\)).916 E(Screen *)88.5
303.4 Q F2(scr)A(een)-.407 E F1(;).916 E F2(scr)72 324.2 Q(een)-.407 E
F1(Speci\214es the screen.)43.697 E 36 319.85 36 330.85 DL 36 317.85 36
328.85 DL 41.5 329.1 36 329.1 DL 43.5 329.1 38 329.1 DL 49 329.1 43.5
329.1 DL(The)72 354.1 Q F0(XScr)3.666 E(eenResour)-.198 E(ceString)-.198
E F1(function returns the SCREEN_RESOURCES property from the)3.666 E
(root windo)72 367.1 Q 2.75(wo)-.275 G 2.75(ft)-2.75 G
(he speci\214ed screen.)-2.75 E(The property is con)5.5 E -.165(ve)-.44
G(rted from type STRING to the current).165 E 2.75(locale. The)72 380.1
R(con)2.75 E -.165(ve)-.44 G(rsion is identical to that produced by).165
E F0(XmbT)3.666 E(extPr)-1.012 E(opertyT)-.198 E(oT)-1.012 E(extList)
-1.012 E F1(for a sin-)3.666 E(gle element STRING property)72 393.1 Q
5.5(.T)-.715 G(he property v)-5.5 E
(alue must be in a format that is acceptable to)-.275 E F0
(XrmGetStringDatabase)72.916 406.1 Q F1 5.5(.I).916 G 2.75(fn)-5.5 G
2.75(op)-2.75 G(roperty e)-2.75 E(xists, NULL is returned.)-.165 E
(The caller is responsible for)5.5 E
(freeing the returned string by using)72 419.1 Q F0(XFr)3.666 E(ee)-.198
E F1(.).916 E 1.76 -.88(To c)72 449 T
(reate a database from a string, use).88 E F0(XrmGetStringDatabase)3.666
E F1(.).916 E 36 466.75 36 477.75 DL 36 464.75 36 475.75 DL 41.5 463 36
463 DL 43.5 463 38 463 DL 49 463 43.5 463 DL
(XrmDatabase XrmGetStringDatabase)72 478.9 Q(\().916 E F2(data).916 E F1
(\)).916 E(char *)85.75 491.9 Q F2(data)A F1(;).916 E F2(data)72 512.7 Q
F1(Speci\214es the database contents using a string.)52.442 E 36 508.35
36 519.35 DL 36 506.35 36 517.35 DL 41.5 517.6 36 517.6 DL 43.5 517.6 38
517.6 DL 49 517.6 43.5 517.6 DL(The)72 542.6 Q F0(XrmGetStringDatabase)
3.666 E F1(function creates a ne)3.666 E 2.75(wd)-.275 G
(atabase and stores the resources speci\214ed)-2.75 E
(in the speci\214ed null-terminated string.)72 555.6 Q F0
(XrmGetStringDatabase)6.416 E F1(is similar to)3.666 E F0(XrmGetFile-)
3.666 E(Database)72 568.6 Q F1 -.165(ex)3.666 G(cept that it reads the \
information out of a string instead of out of a \214le.).165 E
(The string)5.5 E(should contain a sequence of entries in v)72 581.6 Q
(alid ResourceLine format \(see section 15.1\) terminated)-.275 E(by a \
null character; the database that results from using a string with inco\
rrect syntax is imple-)72 594.6 Q 2.75(mentation-dependent. The)72 607.6
R(string is parsed in the current locale, and the database is created i\
n the)2.75 E(current locale.)72 620.6 Q 1.76 -.88(To o)72 650.5 T
(btain the locale name of a database, use).88 E F0(XrmLocaleOfDatabase)
3.666 E F1(.).916 E F0(389)279.75 769 Q 0 Cg EP
%%Page: 390 395
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E .44 LW 36 76.75 36 87.75 DL 36 74.75
36 85.75 DL 41.5 73 36 73 DL 43.5 73 38 73 DL 49 73 43.5 73 DL/F1 11
/Times-Roman@0 SF(char *XrmLocaleOfDatabase)72 88.9 Q(\().916 E/F2 11
/Times-Italic@0 SF(database).916 E F1(\)).916 E(XrmDatabase)88.5 101.9 Q
F2(database)2.75 E F1(;).916 E F2(database)72 122.7 Q F1
(Speci\214es the resource database.)32.279 E 36 118.35 36 129.35 DL 36
116.35 36 127.35 DL 41.5 127.6 36 127.6 DL 43.5 127.6 38 127.6 DL 49
127.6 43.5 127.6 DL(The)72 152.6 Q F0(XrmLocaleOfDatabase)3.666 E F1
(function returns the name of the locale bound to the speci\214ed data-)
3.666 E(base, as a null-terminated string.)72 165.6 Q
(The returned locale name string is o)5.5 E(wned by Xlib and should)
-.275 E(not be modi\214ed or freed by the client.)72 178.6 Q
(Xlib is not permitted to free the string until the database is)5.5 E
(destro)72 191.6 Q 2.75(yed. Until)-.11 F
(the string is freed, it will not be modi\214ed by Xlib)2.75 E(.)-.44 E
1.76 -.88(To d)72 221.5 T(estro).88 E 2.75(yar)-.11 G
(esource database and free its allocated memory)-2.75 E 2.75(,u)-.715 G
(se)-2.75 E F0(XrmDestr)3.666 E(oyDatabase)-.198 E F1(.).916 E 36 239.25
36 250.25 DL 36 237.25 36 248.25 DL 41.5 235.5 36 235.5 DL 43.5 235.5 38
235.5 DL 49 235.5 43.5 235.5 DL -.22(vo)72 251.4 S(id XrmDestro).22 E
-1.834(yDatabase \()-.11 F F2(database).916 E F1(\)).916 E(XrmDatabase)
88.5 264.4 Q F2(database)2.75 E F1(;).916 E F2(database)72 285.2 Q F1
(Speci\214es the resource database.)32.279 E 36 280.85 36 291.85 DL 36
278.85 36 289.85 DL 41.5 290.1 36 290.1 DL 43.5 290.1 38 290.1 DL 49
290.1 43.5 290.1 DL(If database is NULL,)72 315.1 Q F0(XrmDestr)3.666 E
(oyDatabase)-.198 E F1(returns immediately)3.666 E(.)-.715 E 1.76 -.88
(To a)72 345 T(ssociate a resource database with a display).88 E 2.75
(,u)-.715 G(se)-2.75 E F0(XrmSetDatabase)3.666 E F1(.).916 E 36 362.75
36 373.75 DL 36 360.75 36 371.75 DL 41.5 359 36 359 DL 43.5 359 38 359
DL 49 359 43.5 359 DL -.22(vo)72 374.9 S(id XrmSetDatabase).22 E(\().916
E F2(display).916 E F1(,).916 E F2(database)2.75 E F1(\)).916 E
(Display *)88.5 387.9 Q F2(display)A F1(;).916 E(XrmDatabase)88.5 400.9
Q F2(database)2.75 E F1(;).916 E F2(display)72 421.7 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2(database)72 438.6 Q F1(Speci\214es the resource database.)32.279 E 36
434.25 36 445.25 DL 36 432.25 36 443.25 DL 41.5 443.5 36 443.5 DL 43.5
443.5 38 443.5 DL 49 443.5 43.5 443.5 DL(The)72 468.5 Q F0
(XrmSetDatabase)3.666 E F1(function associates the speci\214ed resource\
 database \(or NULL\) with the)3.666 E(speci\214ed display)72 481.5 Q
5.5(.T)-.715 G(he database pre)-5.5 E
(viously associated with the display \(if an)-.275 E(y\) is not destro)
-.165 E(yed.)-.11 E 2.75(Ac)72 494.5 S
(lient or toolkit may \214nd this function con)-2.75 E -.165(ve)-.44 G
(nient for retaining a database once it is con-).165 E(structed.)72
507.5 Q 1.76 -.88(To g)72 537.4 T
(et the resource database associated with a display).88 E 2.75(,u)-.715
G(se)-2.75 E F0(XrmGetDatabase)3.666 E F1(.).916 E 36 555.15 36 566.15
DL 36 553.15 36 564.15 DL 41.5 551.4 36 551.4 DL 43.5 551.4 38 551.4 DL
49 551.4 43.5 551.4 DL(XrmDatabase XrmGetDatabase)72 567.3 Q(\().916 E
F2(display).916 E F1(\)).916 E(Display *)88.5 580.3 Q F2(display)A F1(;)
.916 E F2(display)72 601.1 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
36 596.75 36 607.75 DL 36 594.75 36 605.75 DL 41.5 606 36 606 DL 43.5
606 38 606 DL 49 606 43.5 606 DL(The)72 631 Q F0(XrmGetDatabase)3.666 E
F1
(function returns the database associated with the speci\214ed display)
3.666 E 5.5(.I)-.715 G(t)-5.5 E
(returns NULL if a database has not yet been set.)72 644 Q F0 2.75
(15.5. Mer)72 670 R(ging Resour)-.11 E(ce Databases)-.198 E F1 1.76 -.88
(To m)72 686.9 T(er).88 E
(ge the contents of a resource \214le into a database, use)-.198 E F0
(XrmCombineFileDatabase)3.666 E F1(.).916 E F0(390)279.75 769 Q 0 Cg EP
%%Page: 391 396
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E .44 LW 36 76.75 36 87.75 DL 36 74.75
36 85.75 DL 41.5 73 36 73 DL 43.5 73 38 73 DL 49 73 43.5 73 DL/F1 11
/Times-Roman@0 SF(Status XrmCombineFileDatabase\()72 88.9 Q/F2 11
/Times-Italic@0 SF(\214lename).916 E F1(,)A F2(tar)2.75 E -.11(ge)-.407
G(t_db).11 E F1(,)A F2 -.11(ov)2.75 G(erride).11 E F1(\)).916 E(char *)
88.5 101.9 Q F2(\214lename)A F1(;)A(XrmDatabase *)88.5 114.9 Q F2(tar)A
-.11(ge)-.407 G(t_db).11 E F1(;).916 E(Bool)88.5 127.9 Q F2 -.11(ov)2.75
G(erride).11 E F1(;)A F2(\214lename)72 148.7 Q F1
(Speci\214es the resource database \214le name.)34.732 E F2(tar)72 165.6
Q -.11(ge)-.407 G(t_db).11 E F1(Speci\214es the resource database into \
which the source database is to be mer)29.738 E(ged.)-.198 E F2 -.11(ov)
72 182.5 S(erride).11 E F1(Speci\214es whether source entries o)34.842 E
-.165(ve)-.165 G(rride tar).165 E(get ones.)-.198 E 36 178.15 36 189.15
DL 36 176.15 36 187.15 DL 41.5 187.4 36 187.4 DL 43.5 187.4 38 187.4 DL
49 187.4 43.5 187.4 DL(The)72 212.4 Q F0(XrmCombineFileDatabase)3.666 E
F1(function mer)3.666 E
(ges the contents of a resource \214le into a database.)-.198 E(If the \
same speci\214er is used for an entry in both the \214le and the databa\
se, the entry in the \214le will)72 225.4 Q
(replace the entry in the database if o)72 238.4 Q -.165(ve)-.165 G
(rride is).165 E F0 -.814(Tr)3.666 G(ue).814 E F1 2.75(;o).916 G
(therwise, the entry in the \214le is discarded.)-2.75 E
(The \214le is parsed in the current locale.)72 251.4 Q
(If the \214le cannot be read, a zero status is returned; other)5.5 E(-)
-.22 E(wise, a nonzero status is returned.)72 264.4 Q(If tar)5.5 E
(get_db contains NULL,)-.198 E F0(XrmCombineFileDatabase)3.666 E F1
(cre-)3.666 E(ates and returns a ne)72 277.4 Q 2.75(wd)-.275 G
(atabase to it.)-2.75 E(Otherwise, the database pointed to by tar)5.5 E
(get_db is not)-.198 E(destro)72 290.4 Q(yed by the mer)-.11 E 2.75
(ge. The)-.198 F(database entries are mer)2.75 E(ged without changing v)
-.198 E(alues or types,)-.275 E(re)72 303.4 Q -.055(ga)-.165 G
(rdless of the locale of the database.).055 E(The locale of the tar)5.5
E(get database is not modi\214ed.)-.198 E 1.76 -.88(To m)72 333.3 T(er)
.88 E(ge the contents of one database into another database, use)-.198 E
F0(XrmCombineDatabase)3.666 E F1(.).916 E 36 351.05 36 362.05 DL 36
349.05 36 360.05 DL 41.5 347.3 36 347.3 DL 43.5 347.3 38 347.3 DL 49
347.3 43.5 347.3 DL -.22(vo)72 363.2 S(id XrmCombineDatabase\().22 E F2
(sour).916 E(ce_db)-.407 E F1(,)A F2(tar)2.75 E -.11(ge)-.407 G(t_db).11
E F1(,)A F2 -.11(ov)2.75 G(erride).11 E F1(\)).916 E(XrmDatabase)88.5
376.2 Q F2(sour)2.75 E(ce_db)-.407 E F1 2.75(,*)C F2(tar)-2.75 E -.11
(ge)-.407 G(t_db).11 E F1(;).916 E(Bool)88.5 389.2 Q F2 -.11(ov)2.75 G
(erride).11 E F1(;)A F2(sour)72 410 Q(ce_db)-.407 E F1
(Speci\214es the resource database that is to be mer)26.581 E
(ged into the tar)-.198 E(get database.)-.198 E F2(tar)72 426.9 Q -.11
(ge)-.407 G(t_db).11 E F1(Speci\214es the resource database into which \
the source database is to be mer)29.738 E(ged.)-.198 E F2 -.11(ov)72
443.8 S(erride).11 E F1(Speci\214es whether source entries o)34.842 E
-.165(ve)-.165 G(rride tar).165 E(get ones.)-.198 E 36 439.45 36 450.45
DL 36 437.45 36 448.45 DL 41.5 448.7 36 448.7 DL 43.5 448.7 38 448.7 DL
49 448.7 43.5 448.7 DL(The)72 473.7 Q F0(XrmCombineDatabase)3.666 E F1
(function mer)3.666 E(ges the contents of one database into another)
-.198 E 5.5(.I)-.605 G 2.75(ft)-5.5 G(he)-2.75 E(same speci\214er is us\
ed for an entry in both databases, the entry in the source_db will repl\
ace the)72 486.7 Q(entry in the tar)72 499.7 Q(get_db if o)-.198 E -.165
(ve)-.165 G(rride is).165 E F0 -.814(Tr)3.666 G(ue).814 E F1 2.75(;o)
.916 G(therwise, the entry in source_db is discarded.)-2.75 E(If tar)5.5
E(-)-.22 E(get_db contains NULL,)72 512.7 Q F0(XrmCombineDatabase)3.666
E F1(simply stores source_db in it.)3.666 E(Otherwise,)5.5 E
(source_db is destro)72 525.7 Q(yed by the mer)-.11 E(ge, b)-.198 E
(ut the database pointed to by tar)-.22 E(get_db is not destro)-.198 E
(yed.)-.11 E(The database entries are mer)72 538.7 Q
(ged without changing v)-.198 E(alues or types, re)-.275 E -.055(ga)
-.165 G(rdless of the locales of the).055 E 2.75(databases. The)72 551.7
R(locale of the tar)2.75 E(get database is not modi\214ed.)-.198 E 1.76
-.88(To m)72 581.6 T(er).88 E
(ge the contents of one database into another database with o)-.198 E
-.165(ve)-.165 G(rride semantics, use).165 E F0(Xrm-)3.666 E(Mer)72
594.6 Q(geDatabases)-.11 E F1(.).916 E 36 612.35 36 623.35 DL 36 610.35
36 621.35 DL 41.5 608.6 36 608.6 DL 43.5 608.6 38 608.6 DL 49 608.6 43.5
608.6 DL -.22(vo)72 624.5 S(id XrmMer).22 E(geDatabases\()-.198 E F2
(sour).916 E(ce_db)-.407 E F1(,)A F2(tar)2.75 E -.11(ge)-.407 G(t_db).11
E F1(\)).916 E(XrmDatabase)88.5 637.5 Q F2(sour)2.75 E(ce_db)-.407 E F1
2.75(,*)C F2(tar)-2.75 E -.11(ge)-.407 G(t_db).11 E F1(;).916 E F2(sour)
72 658.3 Q(ce_db)-.407 E F1
(Speci\214es the resource database that is to be mer)26.581 E
(ged into the tar)-.198 E(get database.)-.198 E F2(tar)72 675.2 Q -.11
(ge)-.407 G(t_db).11 E F1(Speci\214es the resource database into which \
the source database is to be mer)29.738 E(ged.)-.198 E 36 670.85 36
681.85 DL 36 668.85 36 679.85 DL 41.5 680.1 36 680.1 DL 43.5 680.1 38
680.1 DL 49 680.1 43.5 680.1 DL(Calling the)72 705.1 Q F0(XrmMer)3.666 E
(geDatabases)-.11 E F1(function is equi)3.666 E -.275(va)-.275 G
(lent to calling the).275 E F0(XrmCombineDatabase)3.666 E F1
(function with an o)72 718.1 Q -.165(ve)-.165 G(rride ar).165 E
(gument of)-.198 E F0 -.814(Tr)3.666 G(ue).814 E F1(.).916 E F0(391)
279.75 769 Q 0 Cg EP
%%Page: 392 397
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E 2.75(15.6. Looking)72 85 R(Up Resour)
2.75 E(ces)-.198 E/F1 11/Times-Roman@0 SF 1.76 -.88(To r)72 101.9 T
(etrie).88 E .33 -.165(ve a r)-.275 H
(esource from a resource database, use).165 E F0(XrmGetResour)3.666 E
(ce)-.198 E F1(,).916 E F0(XrmQGetResour)3.666 E(ce)-.198 E F1 2.75(,o)
.916 G(r)-2.75 E F0(XrmQGetSear)72.916 114.9 Q(chResour)-.198 E(ce)-.198
E F1(.).916 E .44 LW 36 149.55 36 160.55 DL 36 147.55 36 158.55 DL 41.5
145.8 36 145.8 DL 43.5 145.8 38 145.8 DL 49 145.8 43.5 145.8 DL
(Bool XrmGetResource)72 161.7 Q(\().916 E/F2 11/Times-Italic@0 SF
(database).916 E F1(,)A F2(str_name)2.75 E F1(,)A F2(str_class)2.75 E F1
(,)A F2(str_type_r)2.75 E(eturn)-.407 E F1(,)A F2(value_r)2.75 E(eturn)
-.407 E F1(\)).916 E(XrmDatabase)85.75 174.7 Q F2(database)2.75 E F1(;)
.916 E(char *)85.75 187.7 Q F2(str_name)A F1(;).916 E(char *)85.75 200.7
Q F2(str_class)A F1(;).916 E(char **)85.75 213.7 Q F2(str_type_r)A
(eturn)-.407 E F1(;).916 E(XrmV)85.75 226.7 Q(alue *)-1.221 E F2
(value_r)A(eturn)-.407 E F1(;).916 E F2(database)72 247.5 Q F1
(Speci\214es the database that is to be used.)32.279 E F2(str_name)72
264.4 Q F1(Speci\214es the fully quali\214ed name of the v)31.058 E
(alue being retrie)-.275 E -.165(ve)-.275 G 2.75(d\().165 G
(as a string\).)-2.75 E F2(str_class)72 281.3 Q F1
(Speci\214es the fully quali\214ed class of the v)32.884 E
(alue being retrie)-.275 E -.165(ve)-.275 G 2.75(d\().165 G
(as a string\).)-2.75 E F2(str_type_r)72 298.2 Q(eturn)-.407 E F1
(Returns the representation type of the destination \(as a string\).)144
311.2 Q F2(value_r)72 328.1 Q(eturn)-.407 E F1(Returns the v)15.581 E
(alue in the database.)-.275 E 36 323.75 36 334.75 DL 36 321.75 36
332.75 DL 41.5 333 36 333 DL 43.5 333 38 333 DL 49 333 43.5 333 DL 36
375.75 36 386.75 DL 36 373.75 36 384.75 DL 41.5 372 36 372 DL 43.5 372
38 372 DL 49 372 43.5 372 DL(Bool XrmQGetResource)72 387.9 Q(\().916 E
F2(database).916 E F1(,)A F2(quark_name)2.75 E F1(,)A F2(quark_class)
2.75 E F1(,)A F2(quark_type_r)2.75 E(eturn)-.407 E F1(,)A F2(value_r)
2.75 E(eturn)-.407 E F1(\)).916 E(XrmDatabase)85.75 400.9 Q F2(database)
2.75 E F1(;).916 E(XrmNameList)85.75 413.9 Q F2(quark_name)2.75 E F1(;)
.916 E(XrmClassList)85.75 426.9 Q F2(quark_class)2.75 E F1(;).916 E
(XrmRepresentation *)85.75 439.9 Q F2(quark_type_r)A(eturn)-.407 E F1(;)
.916 E(XrmV)85.75 452.9 Q(alue *)-1.221 E F2(value_r)A(eturn)-.407 E F1
(;).916 E F2(database)72 473.7 Q F1
(Speci\214es the database that is to be used.)32.279 E F2(quark_name)72
490.6 Q F1(Speci\214es the fully quali\214ed name of the v)17.011 E
(alue being retrie)-.275 E -.165(ve)-.275 G 2.75(d\().165 G
(as a quark\).)-2.75 E F2(quark_class)72 507.5 Q F1
(Speci\214es the fully quali\214ed class of the v)18.837 E
(alue being retrie)-.275 E -.165(ve)-.275 G 2.75(d\().165 G
(as a quark\).)-2.75 E F2(quark_type_r)72 524.4 Q(eturn)-.407 E F1
(Returns the representation type of the destination \(as a quark\).)144
537.4 Q F2(value_r)72 554.3 Q(eturn)-.407 E F1(Returns the v)15.581 E
(alue in the database.)-.275 E 36 549.95 36 560.95 DL 36 547.95 36
558.95 DL 41.5 559.2 36 559.2 DL 43.5 559.2 38 559.2 DL 49 559.2 43.5
559.2 DL(The)72 584.2 Q F0(XrmGetResour)3.666 E(ce)-.198 E F1(and)3.666
E F0(XrmQGetResour)3.666 E(ce)-.198 E F1(functions retrie)3.666 E .33
-.165(ve a r)-.275 H(esource from the speci\214ed).165 E 2.75
(database. Both)72 597.2 R(tak)2.75 E 2.75(eaf)-.11 G
(ully quali\214ed name/class pair)-2.75 E 2.75(,ad)-.44 G
(estination resource representation, and)-2.75 E(the address of a v)72
610.2 Q(alue \(size/address pair\).)-.275 E(The v)5.5 E
(alue and returned type point into database mem-)-.275 E
(ory; therefore, you must not modify the data.)72 623.2 Q
(The database only frees or o)72 640.1 Q -.165(ve)-.165 G
(rwrites entries on).165 E F0(XrmPutResour)3.666 E(ce)-.198 E F1(,).916
E F0(XrmQPutResour)3.666 E(ce)-.198 E F1 2.75(,o).916 G(r)-2.75 E F0
(XrmMer)72.916 653.1 Q(geDatabases)-.11 E F1 5.5(.A).916 G
(client that is not storing ne)-2.75 E 2.75(wv)-.275 G
(alues into the database or is not mer)-3.025 E(ging)-.198 E
(the database should be safe using the address passed back at an)72
666.1 Q 2.75(yt)-.165 G(ime until it e)-2.75 E 2.75(xits. If)-.165 F
2.75(ar)2.75 G(esource)-2.75 E -.11(wa)72 679.1 S 2.75(sf).11 G
(ound, both)-2.75 E F0(XrmGetResour)3.666 E(ce)-.198 E F1(and)3.666 E F0
(XrmQGetResour)3.666 E(ce)-.198 E F1(return)3.666 E F0 -.814(Tr)3.666 G
(ue).814 E F1 2.75(;o).916 G(therwise, the)-2.75 E 2.75(yr)-.165 G
(eturn)-2.75 E F0 -.275(Fa)72.916 692.1 S(lse).275 E F1(.).916 E F0(392)
279.75 769 Q 0 Cg EP
%%Page: 393 398
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E/F1 11/Times-Roman@0 SF
(Most applications and toolkits do not mak)72 85 Q 2.75(er)-.11 G
(andom probes into a resource database to fetch)-2.75 E 2.75
(resources. The)72 98 R 2.75(Xt)2.75 G
(oolkit access pattern for a resource database is quite stylized.)-2.75
E 2.75(As)5.5 G(eries of from)-2.75 E 2.75(1t)72 111 S 2.75(o2)-2.75 G
2.75(0p)-2.75 G(robes is made with only the last name/class dif)-2.75 E
(fering in each probe.)-.275 E(The)5.5 E F0(XrmGetRe-)3.666 E(sour)72
124 Q(ce)-.198 E F1(function is at w)3.666 E(orst a 2)-.11 E/F2 7.7
/Times-Italic@0 SF(n).277 -4.62 M F1(algorithm, where)3.485 4.62 M/F3 11
/Times-Italic@0 SF(n)2.75 E F1(is the length of the name/class list.)
2.75 E(This can)5.5 E(be impro)72 137 Q -.165(ve)-.165 G 2.75(du).165 G
(pon by the application programmer by prefetching a list of database le)
-2.75 E -.165(ve)-.275 G(ls that).165 E
(might match the \214rst part of a name/class list.)72 150 Q 1.76 -.88
(To o)72 179.9 T(btain a list of database le).88 E -.165(ve)-.275 G
(ls, use).165 E F0(XrmQGetSear)3.666 E(chList)-.198 E F1(.).916 E .44 LW
36 197.65 36 208.65 DL 36 195.65 36 206.65 DL 41.5 193.9 36 193.9 DL
43.5 193.9 38 193.9 DL 49 193.9 43.5 193.9 DL(typedef XrmHashT)72 209.8
Q(able *XrmSearchList;)-.88 E(Bool XrmQGetSearchList)72 235.8 Q(\().916
E F3(database).916 E F1(,)A F3(names)2.75 E F1(,)A F3(classes)2.75 E F1
(,)A F3(list_r)2.75 E(eturn)-.407 E F1(,)A F3(list_length)2.75 E F1(\))
.916 E(XrmDatabase)85.75 248.8 Q F3(database)2.75 E F1(;).916 E
(XrmNameList)85.75 261.8 Q F3(names)2.75 E F1(;).916 E(XrmClassList)
85.75 274.8 Q F3(classes)2.75 E F1(;).916 E(XrmSearchList)85.75 287.8 Q
F3(list_r)2.75 E(eturn)-.407 E F1(;).916 E(int)85.75 300.8 Q F3
(list_length)2.75 E F1(;).916 E F3(database)72 321.6 Q F1
(Speci\214es the database that is to be used.)32.279 E F3(names)72 338.5
Q F1(Speci\214es a list of resource names.)43.895 E F3(classes)72 355.4
Q F1(Speci\214es a list of resource classes.)40.837 E F3(list_r)72 372.3
Q(eturn)-.407 E F1(Returns a search list for further use.)25.954 E
(The caller must allocate suf)5.5 E(\214cient space for)-.275 E
(the list before calling)144 385.3 Q F0(XrmQGetSear)3.666 E(chList)-.198
E F1(.).916 E F3(list_length)72 402.2 Q F1(Speci\214es the number of en\
tries \(not the byte size\) allocated for list_return.)25.547 E 36
397.85 36 408.85 DL 36 395.85 36 406.85 DL 41.5 407.1 36 407.1 DL 43.5
407.1 38 407.1 DL 49 407.1 43.5 407.1 DL(The)72 432.1 Q F0(XrmQGetSear)
3.666 E(chList)-.198 E F1(function tak)3.666 E
(es a list of names and classes and returns a list of database)-.11 E
(le)72 445.1 Q -.165(ve)-.275 G(ls where a match might occur).165 E 5.5
(.T)-.605 G(he returned list is in best-to-w)-5.5 E
(orst order and uses the same)-.11 E(algorithm as)72 458.1 Q F0
(XrmGetResour)3.666 E(ce)-.198 E F1(for determining precedence.)3.666 E
(If list_return w)5.5 E(as lar)-.11 E(ge enough for)-.198 E
(the search list,)72 471.1 Q F0(XrmQGetSear)3.666 E(chList)-.198 E F1
(returns)3.666 E F0 -.814(Tr)3.666 G(ue).814 E F1 2.75(;o).916 G
(therwise, it returns)-2.75 E F0 -.275(Fa)3.666 G(lse).275 E F1(.).916 E
(The size of the search list that the caller must allocate is dependent\
 upon the number of le)72 488 Q -.165(ve)-.275 G(ls and).165 E(wildcard\
s in the resource speci\214ers that are stored in the database.)72 501 Q
(The w)5.5 E(orst case length is 3)-.11 E F2(n).277 -4.62 M F1(,).735
4.62 M(where)72 514 Q F3(n)2.75 E F1
(is the number of name or class components in names or classes.)2.75 E
(When using)72 530.9 Q F0(XrmQGetSear)3.666 E(chList)-.198 E F1(follo)
3.666 E(wed by multiple probes for resources with a common)-.275 E(name\
 and class pre\214x, only the common pre\214x should be speci\214ed in \
the name and class list to)72 543.9 Q F0(XrmQGetSear)72.916 556.9 Q
(chList)-.198 E F1(.).916 E 1.76 -.88(To s)72 586.8 T
(earch resource database le).88 E -.165(ve)-.275 G(ls for a gi).165 E
-.165(ve)-.275 G 2.75(nr).165 G(esource, use)-2.75 E F0(XrmQGetSear)
3.666 E(chResour)-.198 E(ce)-.198 E F1(.).916 E F0(393)279.75 769 Q 0 Cg
EP
%%Page: 394 399
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E .44 LW 36 76.75 36 87.75 DL 36 74.75
36 85.75 DL 41.5 73 36 73 DL 43.5 73 38 73 DL 49 73 43.5 73 DL/F1 11
/Times-Roman@0 SF(Bool XrmQGetSearchResource)72 88.9 Q(\().916 E/F2 11
/Times-Italic@0 SF(list).916 E F1(,)A F2(name)2.75 E F1(,)A F2(class)
2.75 E F1(,)A F2(type_r)2.75 E(eturn)-.407 E F1(,)A F2(value_r)2.75 E
(eturn)-.407 E F1(\)).916 E(XrmSearchList)85.75 101.9 Q F2(list)2.75 E
F1(;).916 E(XrmName)85.75 114.9 Q F2(name)2.75 E F1(;).916 E(XrmClass)
85.75 127.9 Q F2(class)2.75 E F1(;).916 E(XrmRepresentation *)85.75
140.9 Q F2(type_r)A(eturn)-.407 E F1(;).916 E(XrmV)85.75 153.9 Q(alue *)
-1.221 E F2(value_r)A(eturn)-.407 E F1(;).916 E F2(list)72 174.7 Q F1
(Speci\214es the search list returned by)58.547 E F0(XrmQGetSear)3.666 E
(chList)-.198 E F1(.).916 E F2(name)72 191.6 Q F1
(Speci\214es the resource name.)48.174 E F2(class)72 208.5 Q F1
(Speci\214es the resource class.)50 E F2(type_r)72 225.4 Q(eturn)-.407 E
F1(Returns data representation type.)21.081 E F2(value_r)72 242.3 Q
(eturn)-.407 E F1(Returns the v)15.581 E(alue in the database.)-.275 E
36 237.95 36 248.95 DL 36 235.95 36 246.95 DL 41.5 247.2 36 247.2 DL
43.5 247.2 38 247.2 DL 49 247.2 43.5 247.2 DL(The)72 272.2 Q F0
(XrmQGetSear)3.666 E(chResour)-.198 E(ce)-.198 E F1
(function searches the speci\214ed database le)3.666 E -.165(ve)-.275 G
(ls for the resource).165 E
(that is fully identi\214ed by the speci\214ed name and class.)72 285.2
Q(The search stops with the \214rst match.)5.5 E F0(XrmQGetSear)72.916
298.2 Q(chResour)-.198 E(ce)-.198 E F1(returns)3.666 E F0 -.814(Tr)3.666
G(ue).814 E F1(if the resource w)3.666 E
(as found; otherwise, it returns)-.11 E F0 -.275(Fa)3.666 G(lse).275 E
F1(.).916 E 2.75(Ac)72 315.1 S(all to)-2.75 E F0(XrmQGetSear)3.666 E
(chList)-.198 E F1(with a name and class list containing all b)3.666 E
(ut the last component)-.22 E(of a resource name follo)72 328.1 Q
(wed by a call to)-.275 E F0(XrmQGetSear)3.666 E(chResour)-.198 E(ce)
-.198 E F1(with the last component)3.666 E
(name and class returns the same database entry as)72 341.1 Q F0
(XrmGetResour)3.666 E(ce)-.198 E F1(and)3.666 E F0(XrmQGetResour)3.666 E
(ce)-.198 E F1(with the fully quali\214ed name and class.)72 354.1 Q F0
2.75(15.7. Storing)72 380.1 R(into a Resour)2.75 E(ce Database)-.198 E
F1 1.76 -.88(To s)72 397 T(tore resources into the database, use).88 E
F0(XrmPutResour)3.666 E(ce)-.198 E F1(or)3.666 E F0(XrmQPutResour)3.666
E(ce)-.198 E F1 5.5(.B).916 G(oth func-)-5.5 E(tions tak)72 410 Q 2.75
(eap)-.11 G
(artial resource speci\214cation, a representation type, and a v)-2.75 E
2.75(alue. This)-.275 F -.275(va)2.75 G(lue is copied).275 E
(into the speci\214ed database.)72 423 Q 36 457.65 36 468.65 DL 36
455.65 36 466.65 DL 41.5 453.9 36 453.9 DL 43.5 453.9 38 453.9 DL 49
453.9 43.5 453.9 DL -.22(vo)72 469.8 S(id XrmPutResource).22 E(\().916 E
F2(database).916 E F1(,)A F2(speci\214er)2.75 E F1(,)A F2(type)2.75 E F1
(,)A F2(value)2.75 E F1(\)).916 E(XrmDatabase *)85.75 482.8 Q F2
(database)A F1(;).916 E(char *)85.75 495.8 Q F2(speci\214er)A F1(;).916
E(char *)85.75 508.8 Q F2(type)A F1(;).916 E(XrmV)85.75 521.8 Q(alue *)
-1.221 E F2(value)A F1(;).916 E F2(database)72 542.6 Q F1
(Speci\214es the resource database.)32.279 E F2(speci\214er)72 559.5 Q
F1(Speci\214es a complete or partial speci\214cation of the resource.)
34.732 E F2(type)72 576.4 Q F1(Speci\214es the type of the resource.)
53.674 E F2(value)72 593.3 Q F1(Speci\214es the v)48.174 E
(alue of the resource, which is speci\214ed as a string.)-.275 E 36
588.95 36 599.95 DL 36 586.95 36 597.95 DL 41.5 598.2 36 598.2 DL 43.5
598.2 38 598.2 DL 49 598.2 43.5 598.2 DL(If database contains NULL,)72
623.2 Q F0(XrmPutResour)3.666 E(ce)-.198 E F1(creates a ne)3.666 E 2.75
(wd)-.275 G(atabase and returns a pointer to it.)-2.75 E F0
(XrmPutResour)72.916 636.2 Q(ce)-.198 E F1(is a con)3.666 E -.165(ve)
-.44 G(nience function that calls).165 E F0(XrmStringT)3.666 E
(oBindingQuarkList)-1.012 E F1(fol-)3.666 E(lo)72 649.2 Q(wed by:)-.275
E(XrmQPutResource\(database, bindings, quarks, XrmStringT)108 672.6 Q
(oQuark\(type\), v)-.88 E(alue\))-.275 E(If the speci\214er and type ar\
e not in the Host Portable Character Encoding, the result is implemen-)
72 692.1 Q 2.75(tation-dependent. The)72 705.1 R -.275(va)2.75 G
(lue is stored in the database without modi\214cation.).275 E F0(394)
279.75 769 Q 0 Cg EP
%%Page: 395 400
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E .44 LW 36 76.75 36 87.75 DL 36 74.75
36 85.75 DL 41.5 73 36 73 DL 43.5 73 38 73 DL 49 73 43.5 73 DL/F1 11
/Times-Roman@0 SF -.22(vo)72 88.9 S(id XrmQPutResource).22 E(\().916 E
/F2 11/Times-Italic@0 SF(database).916 E F1(,)A F2(bindings)2.75 E F1(,)
A F2(quarks)2.75 E F1(,)A F2(type)2.75 E F1(,)A F2(value)2.75 E F1(\))
.916 E(XrmDatabase *)85.75 101.9 Q F2(database)A F1(;).916 E
(XrmBindingList)85.75 114.9 Q F2(bindings)2.75 E F1(;).916 E
(XrmQuarkList)85.75 127.9 Q F2(quarks)2.75 E F1(;).916 E
(XrmRepresentation)85.75 140.9 Q F2(type)2.75 E F1(;).916 E(XrmV)85.75
153.9 Q(alue *)-1.221 E F2(value)A F1(;).916 E F2(database)72 174.7 Q F1
(Speci\214es the resource database.)32.279 E F2(bindings)72 191.6 Q F1
(Speci\214es a list of bindings.)34.105 E F2(quarks)72 208.5 Q F1(Speci\
\214es the complete or partial name or the class list of the resource.)
42.058 E F2(type)72 225.4 Q F1(Speci\214es the type of the resource.)
53.674 E F2(value)72 242.3 Q F1(Speci\214es the v)48.174 E
(alue of the resource, which is speci\214ed as a string.)-.275 E 36
237.95 36 248.95 DL 36 235.95 36 246.95 DL 41.5 247.2 36 247.2 DL 43.5
247.2 38 247.2 DL 49 247.2 43.5 247.2 DL(If database contains NULL,)72
272.2 Q F0(XrmQPutResour)3.666 E(ce)-.198 E F1(creates a ne)3.666 E 2.75
(wd)-.275 G(atabase and returns a pointer to)-2.75 E 2.75(it. If)72
285.2 R 2.75(ar)2.75 G
(esource entry with the identical bindings and quarks already e)-2.75 E
(xists in the database, the)-.165 E(pre)72 298.2 Q(vious type and v)
-.275 E(alue are replaced by the ne)-.275 E 2.75(ws)-.275 G
(peci\214ed type and v)-2.75 E 2.75(alue. The)-.275 F -.275(va)2.75 G
(lue is stored in).275 E(the database without modi\214cation.)72 311.2 Q
1.76 -.88(To a)72 341.1 T
(dd a resource that is speci\214ed as a string, use).88 E F0
(XrmPutStringResour)3.666 E(ce)-.198 E F1(.).916 E 36 358.85 36 369.85
DL 36 356.85 36 367.85 DL 41.5 355.1 36 355.1 DL 43.5 355.1 38 355.1 DL
49 355.1 43.5 355.1 DL -.22(vo)72 371 S(id XrmPutStringResource).22 E
(\().916 E F2(database).916 E F1(,)A F2(speci\214er)2.75 E F1(,)A F2
(value)2.75 E F1(\)).916 E(XrmDatabase *)85.75 384 Q F2(database)A F1(;)
.916 E(char *)85.75 397 Q F2(speci\214er)A F1(;).916 E(char *)85.75 410
Q F2(value)A F1(;).916 E F2(database)72 430.8 Q F1
(Speci\214es the resource database.)32.279 E F2(speci\214er)72 447.7 Q
F1(Speci\214es a complete or partial speci\214cation of the resource.)
34.732 E F2(value)72 464.6 Q F1(Speci\214es the v)48.174 E
(alue of the resource, which is speci\214ed as a string.)-.275 E 36
460.25 36 471.25 DL 36 458.25 36 469.25 DL 41.5 469.5 36 469.5 DL 43.5
469.5 38 469.5 DL 49 469.5 43.5 469.5 DL(If database contains NULL,)72
494.5 Q F0(XrmPutStringResour)3.666 E(ce)-.198 E F1(creates a ne)3.666 E
2.75(wd)-.275 G(atabase and returns a)-2.75 E(pointer to it.)72 507.5 Q
F0(XrmPutStringResour)6.416 E(ce)-.198 E F1
(adds a resource with the speci\214ed v)3.666 E(alue to the speci\214ed)
-.275 E(database.)72 520.5 Q F0(XrmPutStringResour)6.416 E(ce)-.198 E F1
(is a con)3.666 E -.165(ve)-.44 G(nience function that \214rst calls)
.165 E F0(XrmStringT)3.666 E(oBind-)-1.012 E(ingQuarkList)72 533.5 Q F1
(on the speci\214er and then calls)3.666 E F0(XrmQPutResour)3.666 E(ce)
-.198 E F1 2.75(,u).916 G(sing a `)-2.75 E(`String')-.814 E 2.75('r)
-.814 G(epresenta-)-2.75 E(tion type.)72 546.5 Q(If the speci\214er is \
not in the Host Portable Character Encoding, the result is implemen-)5.5
E 2.75(tation-dependent. The)72 559.5 R -.275(va)2.75 G
(lue is stored in the database without modi\214cation.).275 E 1.76 -.88
(To a)72 589.4 T
(dd a string resource using quarks as a speci\214cation, use).88 E F0
(XrmQPutStringResour)3.666 E(ce)-.198 E F1(.).916 E F0(395)279.75 769 Q
0 Cg EP
%%Page: 396 401
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E .44 LW 36 76.75 36 87.75 DL 36 74.75
36 85.75 DL 41.5 73 36 73 DL 43.5 73 38 73 DL 49 73 43.5 73 DL/F1 11
/Times-Roman@0 SF -.22(vo)72 88.9 S(id XrmQPutStringResource).22 E(\()
.916 E/F2 11/Times-Italic@0 SF(database).916 E F1(,)A F2(bindings)2.75 E
F1(,)A F2(quarks)2.75 E F1(,)A F2(value)2.75 E F1(\)).916 E
(XrmDatabase *)85.75 101.9 Q F2(database)A F1(;).916 E(XrmBindingList)
85.75 114.9 Q F2(bindings)2.75 E F1(;).916 E(XrmQuarkList)85.75 127.9 Q
F2(quarks)2.75 E F1(;).916 E(char *)85.75 140.9 Q F2(value)A F1(;).916 E
F2(database)72 161.7 Q F1(Speci\214es the resource database.)32.279 E F2
(bindings)72 178.6 Q F1(Speci\214es a list of bindings.)34.105 E F2
(quarks)72 195.5 Q F1(Speci\214es the complete or partial name or the c\
lass list of the resource.)42.058 E F2(value)72 212.4 Q F1
(Speci\214es the v)48.174 E
(alue of the resource, which is speci\214ed as a string.)-.275 E 36
208.05 36 219.05 DL 36 206.05 36 217.05 DL 41.5 217.3 36 217.3 DL 43.5
217.3 38 217.3 DL 49 217.3 43.5 217.3 DL(If database contains NULL,)72
242.3 Q F0(XrmQPutStringResour)3.666 E(ce)-.198 E F1(creates a ne)3.666
E 2.75(wd)-.275 G(atabase and returns a)-2.75 E(pointer to it.)72 255.3
Q F0(XrmQPutStringResour)6.416 E(ce)-.198 E F1(is a con)3.666 E -.165
(ve)-.44 G(nience routine that constructs an).165 E F0(XrmV)3.666 E
(alue)-1.012 E F1(for the v)72 268.3 Q(alue string \(by calling)-.275 E
F0(strlen)3.666 E F1(to compute the size\) and then calls)3.666 E F0
(XrmQPutResour)3.666 E(ce)-.198 E F1(,).916 E(using a `)72 281.3 Q
(`String')-.814 E 2.75('r)-.814 G(epresentation type.)-2.75 E(The v)5.5
E(alue is stored in the database without modi\214cation.)-.275 E 1.76
-.88(To a)72 311.2 T(dd a single resource entry that is speci\214ed as \
a string that contains both a name and a v).88 E(alue,)-.275 E(use)72
324.2 Q F0(XrmPutLineResour)3.666 E(ce)-.198 E F1(.).916 E 36 341.95 36
352.95 DL 36 339.95 36 350.95 DL 41.5 338.2 36 338.2 DL 43.5 338.2 38
338.2 DL 49 338.2 43.5 338.2 DL -.22(vo)72 354.1 S
(id XrmPutLineResource).22 E(\().916 E F2(database).916 E F1(,)A F2
(line)2.75 E F1(\)).916 E(XrmDatabase *)85.75 367.1 Q F2(database)A F1
(;).916 E(char *)85.75 380.1 Q F2(line)A F1(;).916 E F2(database)72
400.9 Q F1(Speci\214es the resource database.)32.279 E F2(line)72 417.8
Q F1(Speci\214es the resource name and v)55.5 E
(alue pair as a single string.)-.275 E 36 413.45 36 424.45 DL 36 411.45
36 422.45 DL 41.5 422.7 36 422.7 DL 43.5 422.7 38 422.7 DL 49 422.7 43.5
422.7 DL(If database contains NULL,)72 447.7 Q F0(XrmPutLineResour)3.666
E(ce)-.198 E F1(creates a ne)3.666 E 2.75(wd)-.275 G
(atabase and returns a pointer)-2.75 E(to it.)72 460.7 Q F0
(XrmPutLineResour)6.416 E(ce)-.198 E F1
(adds a single resource entry to the speci\214ed database.)3.666 E
(The line)5.5 E(should be in v)72 473.7 Q
(alid ResourceLine format \(see section 15.1\) terminated by a ne)-.275
E(wline or null charac-)-.275 E(ter; the database that results from usi\
ng a string with incorrect syntax is implementation-depen-)72 486.7 Q
2.75(dent. The)72 499.7 R
(string is parsed in the locale of the database.)2.75 E(If the)5.5 E F0
(Resour)3.666 E(ceName)-.198 E F1(is not in the Host)3.666 E
(Portable Character Encoding, the result is implementation-dependent.)72
512.7 Q(Note that comment lines)5.5 E(are not stored.)72 525.7 Q F0 2.75
(15.8. Enumerating)72 551.7 R(Database Entries)2.75 E F1 1.76 -.88(To e)
72 568.6 T(numerate the entries of a database, use).88 E F0
(XrmEnumerateDatabase)3.666 E F1(.).916 E F0(396)279.75 769 Q 0 Cg EP
%%Page: 397 402
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E .44 LW 36 76.75 36 87.75 DL 36 74.75
36 85.75 DL 41.5 73 36 73 DL 43.5 73 38 73 DL 49 73 43.5 73 DL/F1 11
/Times-Roman@0 SF(#de\214ne)72 91.5 Q F0(XrmEnumAllLe)125.416 91.5 Q
-.11(ve)-.165 G(ls).11 E F1(0)285 91.5 Q(#de\214ne)72 104.5 Q F0
(XrmEnumOneLe)125.416 104.5 Q -.11(ve)-.165 G(l).11 E F1(1)285 104.5 Q
(Bool XrmEnumerateDatabase)72 127.9 Q(\().916 E/F2 11/Times-Italic@0 SF
(database).916 E F1(,)A F2(name_pr)2.75 E(e\214x)-.407 E F1(,)A F2
(class_pr)2.75 E(e\214x)-.407 E F1(,)A F2(mode)2.75 E F1(,)A F2(pr)2.75
E(oc)-.495 E F1(,)A F2(ar)2.75 E(g)-.407 E F1(\)).916 E(XrmDatabase)88.5
140.9 Q F2(database)2.75 E F1(;).916 E(XrmNameList)88.5 153.9 Q F2
(name_pr)2.75 E(e\214x)-.407 E F1(;).916 E(XrmClassList)88.5 166.9 Q F2
(class_pr)2.75 E(e\214x)-.407 E F1(;).916 E(int)88.5 179.9 Q F2(mode)
2.75 E F1(;).916 E(Bool \()88.5 192.9 Q(*).916 E F2(pr)A(oc)-.495 E F1
.916(\)\(\);).916 G(XPointer)88.5 205.9 Q F2(ar)2.75 E(g)-.407 E F1(;)
.916 E F2(database)72 226.7 Q F1(Speci\214es the resource database.)
32.279 E F2(name_pr)72 243.6 Q(e\214x)-.407 E F1
(Speci\214es the resource name pre\214x.)18.034 E F2(class_pr)72 260.5 Q
(e\214x)-.407 E F1(Speci\214es the resource class pre\214x.)19.86 E F2
(mode)72 277.4 Q F1(Speci\214es the number of le)48.174 E -.165(ve)-.275
G(ls to enumerate.).165 E F2(pr)72 294.3 Q(oc)-.495 E F1
(Speci\214es the procedure that is to be called for each matching entry)
52.332 E(.)-.715 E F2(ar)72 311.2 Q(g)-.407 E F1(Speci\214es the user)
57.128 E(-supplied ar)-.22 E
(gument that will be passed to the procedure.)-.198 E 36 306.85 36
317.85 DL 36 304.85 36 315.85 DL 41.5 316.1 36 316.1 DL 43.5 316.1 38
316.1 DL 49 316.1 43.5 316.1 DL(The)72 341.1 Q F0(XrmEnumerateDatabase)
3.666 E F1
(function calls the speci\214ed procedure for each resource in the)3.666
E(database that w)72 354.1 Q(ould match some completion of the gi)-.11 E
-.165(ve)-.275 G 2.75(nn).165 G(ame/class resource pre\214x.)-2.75 E
(The order)5.5 E
(in which resources are found is implementation-dependent.)72 367.1 Q
(If mode is)5.5 E F0(XrmEnumOneLe)3.666 E -.11(ve)-.165 G(l).11 E F1
2.75(,a).916 G(resource must match the gi)72 380.1 Q -.165(ve)-.275 G
2.75(nn).165 G
(ame/class pre\214x with just a single name and class appended.)-2.75 E
(If)5.5 E(mode is)72 393.1 Q F0(XrmEnumAllLe)3.666 E -.11(ve)-.165 G(ls)
.11 E F1 2.75(,t).916 G(he resource must match the gi)-2.75 E -.165(ve)
-.275 G 2.75(nn).165 G(ame/class pre\214x with one or)-2.75 E
(more names and classes appended.)72 406.1 Q(If the procedure returns)
5.5 E F0 -.814(Tr)3.666 G(ue).814 E F1 2.75(,t).916 G
(he enumeration terminates)-2.75 E(and the function returns)72 419.1 Q
F0 -.814(Tr)3.666 G(ue).814 E F1 5.5(.I).916 G 2.75(ft)-5.5 G
(he procedure al)-2.75 E -.11(wa)-.11 G(ys returns).11 E F0 -.275(Fa)
3.666 G(lse).275 E F1 2.75(,a).916 G(ll matching resources are)-2.75 E
(enumerated and the function returns)72 432.1 Q F0 -.275(Fa)3.666 G(lse)
.275 E F1(.).916 E(The procedure is called with the follo)72 449 Q
(wing ar)-.275 E(guments:)-.198 E(\(*)72 472.4 Q F2(pr)A(oc)-.495 E F1
(\)\().916 E F2(database).916 E F1(,)A F2(bindings)2.75 E F1(,)A F2
(quarks)2.75 E F1(,)A F2(type)2.75 E F1(,)A F2(value)2.75 E F1(,)A F2
(ar)2.75 E(g)-.407 E F1(\)).916 E(XrmDatabase *)108 485.4 Q F2(database)
A F1(;).916 E(XrmBindingList)108 498.4 Q F2(bindings)2.75 E F1(;).916 E
(XrmQuarkList)108 511.4 Q F2(quarks)2.75 E F1(;).916 E
(XrmRepresentation *)108 524.4 Q F2(type)A F1(;).916 E(XrmV)108 537.4 Q
(alue *)-1.221 E F2(value)A F1(;).916 E(XPointer)108 550.4 Q F2(ar)2.75
E(g)-.407 E F1(;).916 E(The bindings and quarks lists are terminated by)
72 573.8 Q F0(NULLQ)3.666 E -.66(UA)-.11 G(RK).66 E F1 5.5(.N).916 G
(ote that pointers to the data-)-5.5 E(base and type are passed, b)72
586.8 Q(ut these v)-.22 E(alues should not be modi\214ed.)-.275 E
(The procedure must not modify the database.)72 603.7 Q
(If Xlib has been initialized for threads, the proce-)5.5 E
(dure is called with the database lock)72 616.7 Q
(ed and the result of a call by the procedure to an)-.11 E 2.75(yX)-.165
G(lib func-)-2.75 E(tion using the same database is not de\214ned.)72
629.7 Q F0 2.75(15.9. P)72 655.7 R(arsing Command Line Options)-.11 E F1
(The)72 672.6 Q F0(XrmP)3.666 E(arseCommand)-.11 E F1
(function can be used to parse the command line ar)3.666 E
(guments to a pro-)-.198 E(gram and modify a resource database with sel\
ected entries from the command line.)72 685.6 Q F0(397)279.75 769 Q 0 Cg
EP
%%Page: 398 403
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E .44 LW 36 76.75 36 87.75 DL 36 74.75
36 85.75 DL 41.5 73 36 73 DL 43.5 73 38 73 DL 49 73 43.5 73 DL/F1 11
/Times-Roman@0 SF(typedef enum {)72 91.5 Q(XrmoptionNoAr)108 104.5 Q
59.872(g, /*)-.198 F -1.221(Va)2.75 G
(lue is speci\214ed in XrmOptionDescRec.v)1.221 E(alue */)-.275 E
(XrmoptionIsAr)108 117.5 Q 65.372(g, /*)-.198 F -1.221(Va)2.75 G
(lue is the option string itself */)1.221 E(XrmoptionStick)108 130.5 Q
(yAr)-.165 E 45.363(g, /*)-.198 F -1.221(Va)2.75 G
(lue is characters immediately follo)1.221 E(wing option */)-.275 E
(XrmoptionSepAr)108 143.5 Q 56.814(g, /*)-.198 F -1.221(Va)2.75 G
(lue is ne)1.221 E(xt ar)-.165 E(gument in ar)-.198 E(gv */)-.198 E
(XrmoptionResAr)108 156.5 Q 56.814(g, /*)-.198 F(Resource and v)2.75 E
(alue in ne)-.275 E(xt ar)-.165 E(gument in ar)-.198 E(gv */)-.198 E
(XrmoptionSkipAr)108 169.5 Q 53.14(g, /*)-.198 F
(Ignore this option and the ne)2.75 E(xt ar)-.165 E(gument in ar)-.198 E
(gv */)-.198 E 49.884(XrmoptionSkipLine, /*)108 182.5 R
(Ignore this option and the rest of ar)2.75 E(gv */)-.198 E
(XrmoptionSkipN)108 195.5 Q(Ar)-.385 E 44.054(gs /*)-.198 F
(Ignore this option and the ne)2.75 E(xt)-.165 E(XrmOptionDescRec.v)
260.25 208.5 Q(alue ar)-.275 E(guments in ar)-.198 E(gv */)-.198 E 2.75
(}X)72 221.5 S(rmOptionKind;)-2.75 E 36 223.65 36 234.65 DL 36 221.65 36
232.65 DL 41.5 232.9 36 232.9 DL 43.5 232.9 38 232.9 DL 49 232.9 43.5
232.9 DL(Note that)72 257.9 Q F0(XrmoptionSkipAr)3.666 E(g)-.11 E F1
(is equi)3.666 E -.275(va)-.275 G(lent to).275 E F0(XrmoptionSkipN)3.666
E(Ar)-.22 E(gs)-.11 E F1(with the)3.666 E F0(XrmOptionDe-)3.666 E
(scRec.v)72 270.9 Q(alue)-.11 E F1(\214eld containing the v)3.666 E
(alue one.)-.275 E(Note also that the v)5.5 E(alue zero for)-.275 E F0
(XrmoptionSkip-)3.666 E -.22(NA)72 283.9 S -.11(rg).22 G(s).11 E F1
(indicates that only the option itself is to be skipped.)3.666 E 36
305.55 36 316.55 DL 36 303.55 36 314.55 DL 41.5 301.8 36 301.8 DL 43.5
301.8 38 301.8 DL 49 301.8 43.5 301.8 DL(typedef struct {)72 320.3 Q
(char *option;)108 333.3 Q(/* Option speci\214cation string in ar)85.645
E 8.25(gv */)-.198 F(char *speci\214er;)108 346.3 Q
(/* Binding and resource name \(sans application name\))76.493 E(*/)11 E
(XrmOptionKind ar)108 359.3 Q 26.872(gKind; /*)-.198 F
(Which style of option it is)2.75 E(*/)11 E(XPointer v)108 372.3 Q 72.17
(alue; /*)-.275 F -1.221(Va)2.75 G(lue to pro)1.221 E
(vide if XrmoptionNoAr)-.165 E 2.75(go)-.198 G(r)-2.75 E(XrmoptionSkipN)
260.25 385.3 Q(Ar)-.385 E 5.5(gs */)-.198 F 2.75(}X)72 398.3 S
(rmOptionDescRec, *XrmOptionDescList;)-2.75 E 36 400.45 36 411.45 DL 36
398.45 36 409.45 DL 41.5 409.7 36 409.7 DL 43.5 409.7 38 409.7 DL 49
409.7 43.5 409.7 DL 1.76 -.88(To l)72 447.7 T
(oad a resource database from a C command line, use).88 E F0(XrmP)3.666
E(arseCommand)-.11 E F1(.).916 E 36 465.45 36 476.45 DL 36 463.45 36
474.45 DL 41.5 461.7 36 461.7 DL 43.5 461.7 38 461.7 DL 49 461.7 43.5
461.7 DL -.22(vo)72 477.6 S(id XrmP).22 E -1.834(arseCommand \()-.165 F
/F2 11/Times-Italic@0 SF(database).916 E F1(,).916 E F2(table)3.666 E F1
(,).916 E F2(table_count)3.666 E F1(,).916 E F2(name)3.666 E F1(,).916 E
F2(ar)3.666 E(gc_in_out)-.407 E F1(,).916 E F2(ar)3.666 E(gv_in_out)
-.407 E F1(\)).916 E(XrmDatabase *)88.5 490.6 Q F2(database)A F1(;).916
E(XrmOptionDescList)88.5 503.6 Q F2(table)2.75 E F1(;).916 E(int)88.5
516.6 Q F2(table_count)2.75 E F1(;).916 E(char *)88.5 529.6 Q F2(name)A
F1(;).916 E(int *)88.5 542.6 Q F2(ar)A(gc_in_out)-.407 E F1(;).916 E
(char **)88.5 555.6 Q F2(ar)A(gv_in_out)-.407 E F1(;).916 E F2(database)
72 576.4 Q F1(Speci\214es the resource database.)32.279 E F2(table)72
593.3 Q F1(Speci\214es the table of command line ar)50 E
(guments to be parsed.)-.198 E F2(table_count)72 610.2 Q F1
(Speci\214es the number of entries in the table.)20.058 E F2(name)72
627.1 Q F1(Speci\214es the application name.)48.174 E F2(ar)72 644 Q
(gc_in_out)-.407 E F1(Speci\214es the number of ar)18.628 E
(guments and returns the number of remaining ar)-.198 E(gu-)-.198 E
(ments.)144 657 Q F2(ar)72 673.9 Q(gv_in_out)-.407 E F1
(Speci\214es the command line ar)18.628 E
(guments and returns the remaining ar)-.198 E(guments.)-.198 E 36 669.55
36 680.55 DL 36 667.55 36 678.55 DL 41.5 678.8 36 678.8 DL 43.5 678.8 38
678.8 DL 49 678.8 43.5 678.8 DL(The)72 703.8 Q F0(XrmP)3.666 E
(arseCommand)-.11 E F1(function parses an \(ar)3.666 E(gc, ar)-.198 E
(gv\) pair according to the speci\214ed option)-.198 E(table, loads rec\
ognized options into the speci\214ed database with type `)72 716.8 Q
(`String,)-.814 E 1.628 -.814('' a)-.77 H(nd modi\214es the).814 E(\(ar)
72 729.8 Q(gc, ar)-.198 E(gv\) pair to remo)-.198 E .33 -.165(ve a)-.165
H(ll recognized options.).165 E(If database contains NULL,)5.5 E F0(398)
279.75 769 Q 0 Cg EP
%%Page: 399 404
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E(XrmP)72.916 85 Q(arseCommand)-.11 E/F1
11/Times-Roman@0 SF(creates a ne)3.666 E 2.75(wd)-.275 G
(atabase and returns a pointer to it.)-2.75 E(Otherwise, entries are)5.5
E(added to the database speci\214ed.)72 98 Q
(If a database is created, it is created in the current locale.)5.5 E
(The speci\214ed table is used to parse the command line.)72 114.9 Q
(Recognized options in the table are)5.5 E(remo)72 127.9 Q -.165(ve)
-.165 G 2.75(df).165 G(rom ar)-2.75 E(gv)-.198 E 2.75(,a)-.715 G(nd ent\
ries are added to the speci\214ed resource database in the order the)
-2.75 E(y)-.165 E(occur in ar)72 140.9 Q(gv)-.198 E 5.5(.T)-.715 G(he t\
able entries contain information on the option string, the option name,\
 the)-5.5 E(style of option, and a v)72 153.9 Q(alue to pro)-.275 E
(vide if the option kind is)-.165 E F0(XrmoptionNoAr)3.666 E(g)-.11 E F1
5.5(.T).916 G(he option names)-5.5 E(are compared byte-for)72 166.9 Q
(-byte to ar)-.22 E(guments in ar)-.198 E(gv)-.198 E 2.75(,i)-.715 G
(ndependent of an)-2.75 E 2.75(yl)-.165 G 2.75(ocale. The)-2.75 F
(resource v)2.75 E(alues)-.275 E(gi)72 179.9 Q -.165(ve)-.275 G 2.75(ni)
.165 G 2.75(nt)-2.75 G
(he table are stored in the resource database without modi\214cation.)
-2.75 E(All resource database)5.5 E(entries are created using a `)72
192.9 Q(`String')-.814 E 2.75('r)-.814 G(epresentation type.)-2.75 E
(The ar)5.5 E(gc ar)-.198 E(gument speci\214es the number)-.198 E(of ar)
72 205.9 Q(guments in ar)-.198 E
(gv and is set on return to the remaining number of ar)-.198 E
(guments that were not)-.198 E 2.75(parsed. The)72 218.9 R(name ar)2.75
E(gument should be the name of your application for use in b)-.198 E
(uilding the data-)-.22 E(base entry)72 231.9 Q 5.5(.T)-.715 G
(he name ar)-5.5 E(gument is pre\214x)-.198 E
(ed to the resourceName in the option table before storing)-.165 E 2.75
(ad)72 244.9 S(atabase entry)-2.75 E 5.5(.T)-.715 G(he name ar)-5.5 E
(gument is treated as a single component, e)-.198 E -.165(ve)-.275 G
2.75(ni).165 G 2.75(fi)-2.75 G 2.75(th)-2.75 G(as embedded)-2.75 E 2.75
(periods. No)72 257.9 R(separating \(binding\) character is inserted, s\
o the table must contain either a period \(.\))2.75 E(or an asterisk \(\
*\) as the \214rst character in each resourceName entry)72 270.9 Q 5.5
(.T)-.715 G 2.75(os)-6.38 G(pecify a more completely)-2.75 E(quali\214e\
d resource name, the resourceName entry can contain multiple components\
.)72 283.9 Q(If the name)5.5 E(ar)72 296.9 Q(gument and the resourceNam\
es are not in the Host Portable Character Encoding, the result is)-.198
E(implementation-dependent.)72 309.9 Q(The follo)72 326.8 Q(wing pro)
-.275 E(vides a sample option table:)-.165 E
(static XrmOptionDescRec opT)72 350.2 Q(able[] = {)-.88 E 12.109
({"\255background", "*background",)72 363.2 R(XrmoptionSepAr)74.843 E
20.814(g, \(XPointer\))-.198 F(NULL},)2.75 E 53.04
({"\255bd", "*borderColor",)72 376.2 R(XrmoptionSepAr)73.006 E 20.814
(g, \(XPointer\))-.198 F(NULL},)2.75 E 53.04({"\255bg", "*background",)
72 389.2 R(XrmoptionSepAr)74.843 E 20.814(g, \(XPointer\))-.198 F
(NULL},)2.75 E 10.272({"\255borderwidth", "*T)72 402.2 R(opLe)-.88 E
-.165(ve)-.275 G(lShell.borderW).165 E 1.44(idth", XrmoptionSepAr)-.44 F
20.814(g, \(XPointer\))-.198 F(NULL},)2.75 E 12.725
({"\255bordercolor", "*borderColor",)72 415.2 R(XrmoptionSepAr)73.006 E
20.814(g, \(XPointer\))-.198 F(NULL},)2.75 E 50.598({"\255bw", "*T)72
428.2 R(opLe)-.88 E -.165(ve)-.275 G(lShell.borderW).165 E 1.44
(idth", XrmoptionSepAr)-.44 F 20.814(g, \(XPointer\))-.198 F(NULL},)2.75
E 32.261({"\255display", ".display",)72 441.2 R(XrmoptionSepAr)97.745 E
20.814(g, \(XPointer\))-.198 F(NULL},)2.75 E 54.877({"\255fg", "*fore)72
454.2 R 75.316(ground", XrmoptionSepAr)-.165 F 20.814(g, \(XPointer\))
-.198 F(NULL},)2.75 E 54.877({"\255fn", "*font",)72 467.2 R
(XrmoptionSepAr)109.053 E 20.814(g, \(XPointer\))-.198 F(NULL},)2.75 E
46.319({"\255font", "*font",)72 480.2 R(XrmoptionSepAr)109.053 E 20.814
(g, \(XPointer\))-.198 F(NULL},)2.75 E({"\255fore)72 493.2 Q 15.332
(ground", "*fore)-.165 F 75.316(ground", XrmoptionSepAr)-.165 F 20.814
(g, \(XPointer\))-.198 F(NULL},)2.75 E 22.493({"\255geometry", ".T)72
506.2 R(opLe)-.88 E -.165(ve)-.275 G 18.413
(lShell.geometry", XrmoptionSepAr).165 F 20.814(g, \(XPointer\))-.198 F
(NULL},)2.75 E 37.156({"\255iconic", ".T)72 519.2 R(opLe)-.88 E -.165
(ve)-.275 G 33.076(lShell.iconic", XrmoptionNoAr).165 F 23.872
(g, \(XPointer\))-.198 F("on"},)2.75 E 40.214({"\255name", ".name",)72
532.2 R(XrmoptionSepAr)105.698 E 20.814(g, \(XPointer\))-.198 F(NULL},)
2.75 E({"\255re)72 545.2 Q -.165(ve)-.275 G 32.723(rse", "*re).165 F
-.165(ve)-.275 G(rseV).165 E 66.483(ideo", XrmoptionNoAr)-.66 F 23.872
(g, \(XPointer\))-.198 F("on"},)2.75 E 54.877({"\255rv", "*re)72 558.2 R
-.165(ve)-.275 G(rseV).165 E 66.483(ideo", XrmoptionNoAr)-.66 F 23.872
(g, \(XPointer\))-.198 F("on"},)2.75 E 8.435
({"\255synchronous", "*synchronous",)72 571.2 R(XrmoptionNoAr)71.169 E
23.872(g, \(XPointer\))-.198 F("on"},)2.75 E 46.924({"\255title", ".T)72
584.2 R(opLe)-.88 E -.165(ve)-.275 G 42.844
(lShell.title", XrmoptionSepAr).165 F 20.814(g, \(XPointer\))-.198 F
(NULL},)2.75 E 46.319({"\255xrm", NULL,)72 597.2 R(XrmoptionResAr)
111.924 E 20.814(g, \(XPointer\))-.198 F(NULL},)2.75 E(};)72 610.2 Q(In\
 this table, if the \255background \(or \255bg\) option is used to set \
background colors, the stored)72 633.6 Q
(resource speci\214er matches all resources of attrib)72 646.6 Q
(ute background.)-.22 E(If the \255borderwidth option is)5.5 E(used, th\
e stored resource speci\214er applies only to border width attrib)72
659.6 Q(utes of class T)-.22 E(opLe)-.88 E -.165(ve)-.275 G(lShell).165
E(\(that is, outer)72 672.6 Q(-most windo)-.22 E
(ws, including pop-up windo)-.275 E 2.75(ws\). If)-.275 F
(the \255title option is used to set a win-)2.75 E(do)72 685.6 Q 2.75
(wn)-.275 G(ame, only the topmost application windo)-2.75 E(ws recei)
-.275 E .33 -.165(ve t)-.275 H(he resource.).165 E
(When parsing the command line, an)72 702.5 Q 2.75(yu)-.165 G
(nique unambiguous abbre)-2.75 E(viation for an option name in the)-.275
E(table is considered a match for the option.)72 715.5 Q
(Note that uppercase and lo)5.5 E(wercase matter)-.275 E(.)-.605 E F0
(399)279.75 769 Q 0 Cg EP
%%Page: 400 405
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E/F1 12/Times-Bold@0 SF(Chapter 16)
259.17 111 Q -.3(Ap)213.474 137 S(plication Utility Functions).3 E/F2 11
/Times-Roman@0 SF(Once you ha)72 179.9 Q .33 -.165(ve i)-.22 H
(nitialized the X system, you can use the Xlib utility functions to:)
.165 E 23.65<8355>72 196.8 S(se k)-23.65 E -.165(ey)-.11 G
(board utility functions).165 E 23.65<8355>72 213.7 S(se Latin-1 k)
-23.65 E -.165(ey)-.11 G(board e).165 E -.165(ve)-.275 G(nt functions)
.165 E 23.65<8341>72 230.6 S(llocate permanent storage)-23.65 E 23.65
<8350>72 247.5 S(arse the windo)-23.815 E 2.75(wg)-.275 G(eometry)-2.75
E 23.65<834d>72 264.4 S(anipulate re)-23.65 E(gions)-.165 E 23.65<8355>
72 281.3 S(se cut b)-23.65 E(uf)-.22 E(fers)-.275 E 23.65<8344>72 298.2
S(etermine the appropriate visual type)-23.65 E 23.65<834d>72 315.1 S
(anipulate images)-23.65 E 23.65<834d>72 332 S(anipulate bitmaps)-23.65
E 23.65<8355>72 348.9 S(se the conte)-23.65 E(xt manager)-.165 E
(As a group, the functions discussed in this chapter pro)72 365.8 Q
(vide the functionality that is frequently)-.165 E
(needed and that spans toolkits.)72 378.8 Q(Man)5.5 E 2.75(yo)-.165 G
2.75(ft)-2.75 G(hese functions do not generate actual protocol requests)
-2.75 E(to the serv)72 391.8 Q(er)-.165 E(.)-.605 E F0 2.75(16.1. Using)
72 417.8 R -.275(Ke)2.75 G(yboard Utility Functions).275 E F2
(This section discusses mapping between K)72 434.7 Q -.165(ey)-.275 G
(Codes and K).165 E -.165(ey)-.275 G(Syms, classifying K).165 E -.165
(ey)-.275 G(Syms, and).165 E(mapping between K)72 447.7 Q -.165(ey)-.275
G(Syms and string names.).165 E
(The \214rst three functions in this section operate on)5.5 E 2.75(ac)72
460.7 S(ached cop)-2.75 E 2.75(yo)-.11 G 2.75(ft)-2.75 G(he serv)-2.75 E
(er k)-.165 E -.165(ey)-.11 G(board mapping.).165 E(The \214rst four K)
5.5 E -.165(ey)-.275 G(Syms for each K).165 E -.165(ey)-.275 G(Code are)
.165 E(modi\214ed according to the rules gi)72 473.7 Q -.165(ve)-.275 G
2.75(ni).165 G 2.75(ns)-2.75 G(ection 12.7.)-2.75 E 1.76 -.88(To o)5.5 H
(btain the untransformed K).88 E -.165(ey)-.275 G(Syms).165 E
(de\214ned for a k)72 486.7 Q -.165(ey)-.11 G 2.75(,u)-.55 G
(se the functions described in section 12.7.)-2.75 E 1.76 -.88(To o)72
516.6 T(btain a K).88 E -.165(ey)-.275 G(Sym for the K).165 E -.165(ey)
-.275 G(Code of an e).165 E -.165(ve)-.275 G(nt, use).165 E F0(XLookupK)
3.666 E(eysym)-.275 E F2(.).916 E .44 LW 36 534.35 36 545.35 DL 36
532.35 36 543.35 DL 41.5 530.6 36 530.6 DL 43.5 530.6 38 530.6 DL 49
530.6 43.5 530.6 DL -2.365 -.275(Ke y)72 546.5 T(Sym XLookupK).275 E
-.165(ey)-.275 G(sym\().165 E/F3 11/Times-Italic@0 SF -.11(ke).916 G
(y_e)-.22 E(vent)-.165 E F2(,)A F3(inde)2.75 E(x)-.22 E F2(\)).916 E(XK)
88.5 559.5 Q -.165(ey)-.275 G(Ev).165 E(ent *)-.165 E F3 -.11(ke)C(y_e)
-.22 E(vent)-.165 E F2(;).916 E(int)88.5 572.5 Q F3(inde)2.75 E(x)-.22 E
F2(;).916 E F3 -.11(ke)72 593.3 S(y_e)-.22 E(vent)-.165 E F2
(Speci\214es the)29.243 E F0 -.275(Ke)3.666 G(yPr).275 E(ess)-.198 E F2
(or)3.666 E F0 -.275(Ke)3.666 G(yRelease).275 E F2 -2.365 -.275(ev e)
3.666 H(nt.).275 E F3(inde)72 610.2 Q(x)-.22 E F2(Speci\214es the inde)
48.394 E 2.75(xi)-.165 G(nto the K)-2.75 E -.165(ey)-.275 G
(Syms list for the e).165 E -.165(ve)-.275 G(nt').165 E 2.75(sK)-.605 G
-.165(ey)-3.025 G(Code.).165 E 36 605.85 36 616.85 DL 36 603.85 36
614.85 DL 41.5 615.1 36 615.1 DL 43.5 615.1 38 615.1 DL 49 615.1 43.5
615.1 DL(The)72 640.1 Q F0(XLookupK)3.666 E(eysym)-.275 E F2
(function uses a gi)3.666 E -.165(ve)-.275 G 2.75(nk).165 G -.165(ey)
-2.86 G(board e).165 E -.165(ve)-.275 G(nt and the inde).165 E 2.75(xy)
-.165 G(ou speci\214ed to)-2.75 E(return the K)72 653.1 Q -.165(ey)-.275
G(Sym from the list that corresponds to the K).165 E -.165(ey)-.275 G
(Code member in the).165 E F0(XK)3.666 E(eyPr)-.275 E(essedE-)-.198 E
-.11(ve)72 666.1 S(nt).11 E F2(or)3.666 E F0(XK)3.666 E(eyReleasedEv)
-.275 E(ent)-.11 E F2 2.75(structure. If)3.666 F(no K)2.75 E -.165(ey)
-.275 G(Sym is de\214ned for the K).165 E -.165(ey)-.275 G
(Code of the e).165 E -.165(ve)-.275 G(nt,).165 E F0(XLookupK)72.916
679.1 Q(eysym)-.275 E F2(returns)3.666 E F0(NoSymbol)3.666 E F2(.).916 E
1.76 -.88(To o)72 709 T(btain a K).88 E -.165(ey)-.275 G
(Sym for a speci\214c K).165 E -.165(ey)-.275 G(Code, use).165 E F0(XK)
3.666 E(eycodeT)-.275 E(oK)-1.012 E(eysym)-.275 E F2(.).916 E F0(400)
279.75 769 Q 0 Cg EP
%%Page: 401 406
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E .44 LW 36 76.75 36 87.75 DL 36 74.75
36 85.75 DL 41.5 73 36 73 DL 43.5 73 38 73 DL 49 73 43.5 73 DL/F1 11
/Times-Roman@0 SF -2.365 -.275(Ke y)72 88.9 T(Sym XK).275 E -.165(ey)
-.275 G(codeT).165 E(oK)-.88 E -.165(ey)-.275 G -1.834(sym \().165 F/F2
11/Times-Italic@0 SF(display).916 E F1(,)A F2 -.11(ke)2.75 G(ycode)-.22
E F1(,)A F2(inde)2.75 E(x)-.22 E F1(\)).916 E(Display *)88.5 101.9 Q F2
(display)A F1(;).916 E -2.365 -.275(Ke y)88.5 114.9 T(Code).275 E F2
-.11(ke)2.75 G(ycode)-.22 E F1(;).916 E(int)88.5 127.9 Q F2(inde)2.75 E
(x)-.22 E F1(;).916 E F2(display)72 148.7 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2 -.11(ke)72 165.6 S(ycode)-.22 E F1(Speci\214es the K)37.02 E -.165
(ey)-.275 G(Code.).165 E F2(inde)72 182.5 Q(x)-.22 E F1
(Speci\214es the element of K)48.394 E -.165(ey)-.275 G(Code v).165 E
(ector)-.165 E(.)-.605 E 36 178.15 36 189.15 DL 36 176.15 36 187.15 DL
41.5 187.4 36 187.4 DL 43.5 187.4 38 187.4 DL 49 187.4 43.5 187.4 DL
(The)72 212.4 Q F0(XK)3.666 E(eycodeT)-.275 E(oK)-1.012 E(eysym)-.275 E
F1(function uses internal Xlib tables and returns the K)3.666 E -.165
(ey)-.275 G(Sym de\214ned for).165 E(the speci\214ed K)72 225.4 Q -.165
(ey)-.275 G(Code and the element of the K).165 E -.165(ey)-.275 G
(Code v).165 E(ector)-.165 E 5.5(.I)-.605 G 2.75(fn)-5.5 G 2.75(os)-2.75
G(ymbol is de\214ned,)-2.75 E F0(XK)3.666 E(ey-)-.275 E(codeT)72 238.4 Q
(oK)-1.012 E(eysym)-.275 E F1(returns)3.666 E F0(NoSymbol)3.666 E F1(.)
.916 E 1.76 -.88(To o)72 268.3 T(btain a K).88 E -.165(ey)-.275 G
(Code for a k).165 E .33 -.165(ey h)-.11 H -.22(av).165 G
(ing a speci\214c K).22 E -.165(ey)-.275 G(Sym, use).165 E F0(XK)3.666 E
(eysymT)-.275 E(oK)-1.012 E(eycode)-.275 E F1(.).916 E 36 286.05 36
297.05 DL 36 284.05 36 295.05 DL 41.5 282.3 36 282.3 DL 43.5 282.3 38
282.3 DL 49 282.3 43.5 282.3 DL -2.365 -.275(Ke y)72 298.2 T(Code XK)
.275 E -.165(ey)-.275 G(symT).165 E(oK)-.88 E -.165(ey)-.275 G -1.834
(code \().165 F F2(display).916 E F1(,)A F2 -.11(ke)2.75 G(ysym)-.22 E
F1(\)).916 E(Display *)88.5 311.2 Q F2(display)A F1(;).916 E -2.365
-.275(Ke y)88.5 324.2 T(Sym).275 E F2 -.11(ke)2.75 G(ysym)-.22 E F1(;)
.916 E F2(display)72 345 Q F1(Speci\214es the connection to the X serv)
40.221 E(er)-.165 E(.)-.605 E F2 -.11(ke)72 361.9 S(ysym)-.22 E F1
(Speci\214es the K)40.683 E -.165(ey)-.275 G
(Sym that is to be searched for).165 E(.)-.605 E 36 357.55 36 368.55 DL
36 355.55 36 366.55 DL 41.5 366.8 36 366.8 DL 43.5 366.8 38 366.8 DL 49
366.8 43.5 366.8 DL(If the speci\214ed K)72 391.8 Q -.165(ey)-.275 G
(Sym is not de\214ned for an).165 E 2.75(yK)-.165 G -.165(ey)-3.025 G
(Code,).165 E F0(XK)3.666 E(eysymT)-.275 E(oK)-1.012 E(eycode)-.275 E F1
(returns zero.)3.666 E(The mapping between K)72 421.7 Q -.165(ey)-.275 G
(Codes and K).165 E -.165(ey)-.275 G(Syms is cached internal to Xlib)
.165 E 5.5(.W)-.44 G(hen this information)-5.5 E(is changed at the serv)
72 434.7 Q(er)-.165 E 2.75(,a)-.44 G 2.75(nX)-2.75 G
(lib function must be called to refresh the cache.)-2.75 E 1.76 -.88
(To r)5.5 H(efresh the).88 E(stored modi\214er and k)72 447.7 Q -.165
(ey)-.11 G(map information, use).165 E F0(XRefr)3.666 E(eshK)-.198 E
(eyboardMapping)-.275 E F1(.).916 E 36 465.45 36 476.45 DL 36 463.45 36
474.45 DL 41.5 461.7 36 461.7 DL 43.5 461.7 38 461.7 DL 49 461.7 43.5
461.7 DL(XRefreshK)72 477.6 Q -.165(ey)-.275 G(boardMapping\().165 E F2
-.165(ev).916 G(ent_map).165 E F1(\)).916 E(XMappingEv)88.5 490.6 Q
(ent *)-.165 E F2 -.165(ev)C(ent_map).165 E F1(;).916 E F2 -.165(ev)72
511.4 S(ent_map).165 E F1(Speci\214es the mapping e)24.513 E -.165(ve)
-.275 G(nt that is to be used.).165 E 36 507.05 36 518.05 DL 36 505.05
36 516.05 DL 41.5 516.3 36 516.3 DL 43.5 516.3 38 516.3 DL 49 516.3 43.5
516.3 DL(The)72 541.3 Q F0(XRefr)3.666 E(eshK)-.198 E(eyboardMapping)
-.275 E F1(function refreshes the stored modi\214er and k)3.666 E -.165
(ey)-.11 G(map informa-).165 E 2.75(tion. Y)72 554.3 R
(ou usually call this function when a)-1.21 E F0(MappingNotify)3.666 E
F1 -2.365 -.275(ev e)3.666 H(nt with a request member of).275 E F0
(MappingK)72.916 567.3 Q(eyboard)-.275 E F1(or)3.666 E F0
(MappingModi\214er)3.666 E F1 2.75(occurs. The)3.666 F
(result is to update Xlib')2.75 E 2.75(sk)-.605 G(no)-2.75 E(wledge of)
-.275 E(the k)72 580.3 Q -.165(ey)-.11 G(board.).165 E 1.76 -.88(To o)72
610.2 T(btain the uppercase and lo).88 E(wercase forms of a K)-.275 E
-.165(ey)-.275 G(Sym, use).165 E F0(XCon)3.666 E -.11(ve)-.44 G(rtCase)
.11 E F1(.).916 E F0(401)279.75 769 Q 0 Cg EP
%%Page: 402 407
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E .44 LW 36 76.75 36 87.75 DL 36 74.75
36 85.75 DL 41.5 73 36 73 DL 43.5 73 38 73 DL 49 73 43.5 73 DL/F1 11
/Times-Roman@0 SF -.22(vo)72 88.9 S(id XCon).22 E -.165(ve)-.44 G
(rtCase\().165 E/F2 11/Times-Italic@0 SF -.11(ke).916 G(ysym)-.22 E F1
(,)A F2(lower_r)2.75 E(eturn)-.407 E F1(,)A F2(upper_r)2.75 E(eturn)
-.407 E F1(\)).916 E -2.365 -.275(Ke y)88.5 101.9 T(Sym).275 E F2 -.11
(ke)2.75 G(ysym)-.22 E F1(;).916 E -2.365 -.275(Ke y)88.5 114.9 T(Sym *)
.275 E F2(lower_r)A(eturn)-.407 E F1(;).916 E -2.365 -.275(Ke y)88.5
127.9 T(Sym *).275 E F2(upper_r)A(eturn)-.407 E F1(;).916 E F2 -.11(ke)
72 148.7 S(ysym)-.22 E F1(Speci\214es the K)40.683 E -.165(ey)-.275 G
(Sym that is to be con).165 E -.165(ve)-.44 G(rted.).165 E F2(lower_r)72
165.6 Q(eturn)-.407 E F1(Returns the lo)14.349 E(wercase form of k)-.275
E -.165(ey)-.11 G(sym, or k).165 E -.165(ey)-.11 G(sym.).165 E F2
(upper_r)72 182.5 Q(eturn)-.407 E F1(Returns the uppercase form of k)
13.744 E -.165(ey)-.11 G(sym, or k).165 E -.165(ey)-.11 G(sym.).165 E 36
178.15 36 189.15 DL 36 176.15 36 187.15 DL 41.5 187.4 36 187.4 DL 43.5
187.4 38 187.4 DL 49 187.4 43.5 187.4 DL(The)72 212.4 Q F0(XCon)3.666 E
-.11(ve)-.44 G(rtCase).11 E F1(function returns the uppercase and lo)
3.666 E(wercase forms of the speci\214ed K)-.275 E -.165(ey)-.275 G
(sym,).165 E(if the K)72 225.4 Q -.165(ey)-.275 G
(Sym is subject to case con).165 E -.165(ve)-.44 G
(rsion; otherwise, the speci\214ed K).165 E -.165(ey)-.275 G
(Sym is returned to both).165 E(lo)72 238.4 Q
(wer_return and upper_return.)-.275 E(Support for con)5.5 E -.165(ve)
-.44 G(rsion of other than Latin and Cyrillic K).165 E -.165(ey)-.275 G
(Syms).165 E(is implementation-dependent.)72 251.4 Q -2.365 -.275(Ke y)
72 281.3 T(Syms ha).275 E .33 -.165(ve s)-.22 H
(tring names as well as numeric codes.).165 E 1.76 -.88(To c)5.5 H(on)
.88 E -.165(ve)-.44 G(rt the name of the K).165 E -.165(ey)-.275 G
(Sym to the).165 E -2.365 -.275(Ke y)72 294.3 T(Sym code, use).275 E F0
(XStringT)3.666 E(oK)-1.012 E(eysym)-.275 E F1(.).916 E 36 312.05 36
323.05 DL 36 310.05 36 321.05 DL 41.5 308.3 36 308.3 DL 43.5 308.3 38
308.3 DL 49 308.3 43.5 308.3 DL -2.365 -.275(Ke y)72 324.2 T
(Sym XStringT).275 E(oK)-.88 E -.165(ey)-.275 G -1.834(sym \().165 F F2
(string).916 E F1(\)).916 E(char *)88.5 337.2 Q F2(string)A F1(;).916 E
F2(string)72 358 Q F1(Speci\214es the name of the K)46.326 E -.165(ey)
-.275 G(Sym that is to be con).165 E -.165(ve)-.44 G(rted.).165 E 36
353.65 36 364.65 DL 36 351.65 36 362.65 DL 41.5 362.9 36 362.9 DL 43.5
362.9 38 362.9 DL 49 362.9 43.5 362.9 DL(Standard K)72 387.9 Q -.165(ey)
-.275 G(Sym names are obtained from <).165 E F0(X11/k)A(eysymdef)-.11 E
(.h)-.165 E F1 2.75(>b)C 2.75(yr)-2.75 G(emo)-2.75 E
(ving the XK_ pre\214x)-.165 E(from each name.)72 400.9 Q -2.365 -.275
(Ke y)5.5 H(Syms that are not part of the Xlib standard also may be obt\
ained with this).275 E 2.75(function. The)72 413.9 R(set of K)2.75 E
-.165(ey)-.275 G(Syms that are a).165 E -.275(va)-.22 G
(ilable in this manner and the mechanisms by which).275 E
(Xlib obtains them is implementation-dependent.)72 426.9 Q(If the K)72
443.8 Q -.165(ey)-.275 G(Sym name is not in the Host Portable Character\
 Encoding, the result is implementation-).165 E 2.75(dependent. If)72
456.8 R(the speci\214ed string does not match a v)2.75 E(alid K)-.275 E
-.165(ey)-.275 G(Sym,).165 E F0(XStringT)3.666 E(oK)-1.012 E(eysym)-.275
E F1(returns)3.666 E F0(NoSymbol)72.916 469.8 Q F1(.).916 E 1.76 -.88
(To c)72 499.7 T(on).88 E -.165(ve)-.44 G(rt a K).165 E -.165(ey)-.275 G
(Sym code to the name of the K).165 E -.165(ey)-.275 G(Sym, use).165 E
F0(XK)3.666 E(eysymT)-.275 E(oString)-1.012 E F1(.).916 E 36 517.45 36
528.45 DL 36 515.45 36 526.45 DL 41.5 513.7 36 513.7 DL 43.5 513.7 38
513.7 DL 49 513.7 43.5 513.7 DL(char *XK)72 529.6 Q -.165(ey)-.275 G
(symT).165 E -1.834(oString \()-.88 F F2 -.11(ke).916 G(ysym)-.22 E F1
(\)).916 E -2.365 -.275(Ke y)88.5 542.6 T(Sym).275 E F2 -.11(ke)2.75 G
(ysym)-.22 E F1(;).916 E F2 -.11(ke)72 563.4 S(ysym)-.22 E F1
(Speci\214es the K)40.683 E -.165(ey)-.275 G(Sym that is to be con).165
E -.165(ve)-.44 G(rted.).165 E 36 559.05 36 570.05 DL 36 557.05 36
568.05 DL 41.5 568.3 36 568.3 DL 43.5 568.3 38 568.3 DL 49 568.3 43.5
568.3 DL
(The returned string is in a static area and must not be modi\214ed.)72
593.3 Q(The returned string is in the Host)5.5 E
(Portable Character Encoding.)72 606.3 Q(If the speci\214ed K)5.5 E
-.165(ey)-.275 G(Sym is not de\214ned,).165 E F0(XK)3.666 E(eysymT)-.275
E(oString)-1.012 E F1(returns)3.666 E 2.75(aN)72 619.3 S(ULL.)-2.75 E F0
2.75(16.1.1. K)72 645.3 R(eySym Classi\214cation Macr)-.275 E(os)-.198 E
F1 -1.21(Yo)72 662.2 S 2.75(um)1.21 G(ay w)-2.75 E(ant to test if a K)
-.11 E -.165(ey)-.275 G(Sym is, for e).165 E(xample, on the k)-.165 E
-.165(ey)-.11 G(pad or on one of the function k).165 E -.165(ey)-.11 G
(s.).165 E -1.21(Yo)72 675.2 S 2.75(uc)1.21 G(an use K)-2.75 E -.165(ey)
-.275 G(Sym macros to perform the follo).165 E(wing tests.)-.275 E F0
(402)279.75 769 Q 0 Cg EP
%%Page: 403 408
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E .44 LW 36 76.75 36 87.75 DL 36 74.75
36 85.75 DL 41.5 73 36 73 DL 43.5 73 38 73 DL 49 73 43.5 73 DL/F1 11
/Times-Roman@0 SF(IsCursorK)72 88.9 Q -1.504 -.165(ey \()-.275 H/F2 11
/Times-Italic@0 SF -.11(ke)1.081 G(ysym)-.22 E F1(\)).916 E F2 -.11(ke)
72 109.7 S(ysym)-.22 E F1(Speci\214es the K)40.683 E -.165(ey)-.275 G
(Sym that is to be tested.).165 E 36 105.35 36 116.35 DL 36 103.35 36
114.35 DL 41.5 114.6 36 114.6 DL 43.5 114.6 38 114.6 DL 49 114.6 43.5
114.6 DL(Returns)72 139.6 Q F0 -.814(Tr)3.666 G(ue).814 E F1
(if the speci\214ed K)3.666 E -.165(ey)-.275 G(Sym is a cursor k).165 E
-.165(ey)-.11 G(.)-.55 E 36 174.25 36 185.25 DL 36 172.25 36 183.25 DL
41.5 170.5 36 170.5 DL 43.5 170.5 38 170.5 DL 49 170.5 43.5 170.5 DL
(IsFunctionK)72 186.4 Q -1.504 -.165(ey \()-.275 H F2 -.11(ke)1.081 G
(ysym)-.22 E F1(\)).916 E F2 -.11(ke)72 207.2 S(ysym)-.22 E F1
(Speci\214es the K)40.683 E -.165(ey)-.275 G(Sym that is to be tested.)
.165 E 36 202.85 36 213.85 DL 36 200.85 36 211.85 DL 41.5 212.1 36 212.1
DL 43.5 212.1 38 212.1 DL 49 212.1 43.5 212.1 DL(Returns)72 237.1 Q F0
-.814(Tr)3.666 G(ue).814 E F1(if the speci\214ed K)3.666 E -.165(ey)
-.275 G(Sym is a function k).165 E -.165(ey)-.11 G(.)-.55 E 36 271.75 36
282.75 DL 36 269.75 36 280.75 DL 41.5 268 36 268 DL 43.5 268 38 268 DL
49 268 43.5 268 DL(IsK)72 283.9 Q -.165(ey)-.275 G(padK).165 E -1.504
-.165(ey \()-.275 H F2 -.11(ke)1.081 G(ysym)-.22 E F1(\)).916 E F2 -.11
(ke)72 304.7 S(ysym)-.22 E F1(Speci\214es the K)40.683 E -.165(ey)-.275
G(Sym that is to be tested.).165 E 36 300.35 36 311.35 DL 36 298.35 36
309.35 DL 41.5 309.6 36 309.6 DL 43.5 309.6 38 309.6 DL 49 309.6 43.5
309.6 DL(Returns)72 334.6 Q F0 -.814(Tr)3.666 G(ue).814 E F1
(if the speci\214ed K)3.666 E -.165(ey)-.275 G(Sym is a standard k).165
E -.165(ey)-.11 G(pad k).165 E -.165(ey)-.11 G(.)-.55 E 36 369.25 36
380.25 DL 36 367.25 36 378.25 DL 41.5 365.5 36 365.5 DL 43.5 365.5 38
365.5 DL 49 365.5 43.5 365.5 DL(IsPri)72 381.4 Q -.275(va)-.275 G(teK)
.275 E -.165(ey)-.275 G(padK).165 E -1.504 -.165(ey \()-.275 H F2 -.11
(ke)1.081 G(ysym)-.22 E F1(\)).916 E F2 -.11(ke)72 402.2 S(ysym)-.22 E
F1(Speci\214es the K)40.683 E -.165(ey)-.275 G
(Sym that is to be tested.).165 E 36 397.85 36 408.85 DL 36 395.85 36
406.85 DL 41.5 407.1 36 407.1 DL 43.5 407.1 38 407.1 DL 49 407.1 43.5
407.1 DL(Returns)72 432.1 Q F0 -.814(Tr)3.666 G(ue).814 E F1
(if the speci\214ed K)3.666 E -.165(ey)-.275 G(Sym is a v).165 E(endor)
-.165 E(-pri)-.22 E -.275(va)-.275 G(te k).275 E -.165(ey)-.11 G(pad k)
.165 E -.165(ey)-.11 G(.)-.55 E 36 466.75 36 477.75 DL 36 464.75 36
475.75 DL 41.5 463 36 463 DL 43.5 463 38 463 DL 49 463 43.5 463 DL
(IsMiscFunctionK)72 478.9 Q -1.504 -.165(ey \()-.275 H F2 -.11(ke)1.081
G(ysym)-.22 E F1(\)).916 E F2 -.11(ke)72 499.7 S(ysym)-.22 E F1
(Speci\214es the K)40.683 E -.165(ey)-.275 G(Sym that is to be tested.)
.165 E 36 495.35 36 506.35 DL 36 493.35 36 504.35 DL 41.5 504.6 36 504.6
DL 43.5 504.6 38 504.6 DL 49 504.6 43.5 504.6 DL(Returns)72 529.6 Q F0
-.814(Tr)3.666 G(ue).814 E F1(if the speci\214ed K)3.666 E -.165(ey)
-.275 G(Sym is a miscellaneous function k).165 E -.165(ey)-.11 G(.)-.55
E 36 564.25 36 575.25 DL 36 562.25 36 573.25 DL 41.5 560.5 36 560.5 DL
43.5 560.5 38 560.5 DL 49 560.5 43.5 560.5 DL(IsModi\214erK)72 576.4 Q
-1.504 -.165(ey \()-.275 H F2 -.11(ke)1.081 G(ysym)-.22 E F1(\)).916 E
F2 -.11(ke)72 597.2 S(ysym)-.22 E F1(Speci\214es the K)40.683 E -.165
(ey)-.275 G(Sym that is to be tested.).165 E 36 592.85 36 603.85 DL 36
590.85 36 601.85 DL 41.5 602.1 36 602.1 DL 43.5 602.1 38 602.1 DL 49
602.1 43.5 602.1 DL(Returns)72 627.1 Q F0 -.814(Tr)3.666 G(ue).814 E F1
(if the speci\214ed K)3.666 E -.165(ey)-.275 G(Sym is a modi\214er k)
.165 E -.165(ey)-.11 G(.)-.55 E 36 661.75 36 672.75 DL 36 659.75 36
670.75 DL 41.5 658 36 658 DL 43.5 658 38 658 DL 49 658 43.5 658 DL
(IsPFK)72 673.9 Q -1.504 -.165(ey \()-.275 H F2 -.11(ke)1.081 G(ysym)
-.22 E F1(\)).916 E F2 -.11(ke)72 694.7 S(ysym)-.22 E F1
(Speci\214es the K)40.683 E -.165(ey)-.275 G(Sym that is to be tested.)
.165 E 36 690.35 36 701.35 DL 36 688.35 36 699.35 DL 41.5 699.6 36 699.6
DL 43.5 699.6 38 699.6 DL 49 699.6 43.5 699.6 DL(Returns)72 724.6 Q F0
-.814(Tr)3.666 G(ue).814 E F1(if the speci\214ed K)3.666 E -.165(ey)
-.275 G(Sym is a PF k).165 E -.165(ey)-.11 G(.)-.55 E F0(403)279.75 769
Q 0 Cg EP
%%Page: 404 409
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E 2.75(16.2. Using)72 85 R(Latin-1 K)
2.75 E(eyboard Ev)-.275 E(ent Functions)-.11 E/F1 11/Times-Roman@0 SF
(Chapter 13 describes internationalized te)72 101.9 Q(xt input f)-.165 E
(acilities, b)-.11 E(ut sometimes it is e)-.22 E(xpedient to write)-.165
E(an application that only deals with Latin-1 characters and ASCII cont\
rols, so Xlib pro)72 114.9 Q(vides a sim-)-.165 E
(ple function for that purpose.)72 127.9 Q F0(XLookupString)6.416 E F1
(handles the standard modi\214er semantics)3.666 E
(described in section 12.7.)72 140.9 Q(This function does not use an)5.5
E 2.75(yo)-.165 G 2.75(ft)-2.75 G(he input method f)-2.75 E
(acilities described)-.11 E
(in chapter 13 and does not depend on the current locale.)72 153.9 Q
1.76 -.88(To m)72 183.8 T(ap a k).88 E .33 -.165(ey e)-.11 H -.165(ve)
-.11 G(nt to an ISO Latin-1 string, use).165 E F0(XLookupString)3.666 E
F1(.).916 E .44 LW 36 201.55 36 212.55 DL 36 199.55 36 210.55 DL 41.5
197.8 36 197.8 DL 43.5 197.8 38 197.8 DL 49 197.8 43.5 197.8 DL
(int XLookupString\()72 213.7 Q/F2 11/Times-Italic@0 SF -.165(ev).916 G
(ent_struct).165 E F1(,)A F2 -.22(bu)2.75 G -.198(ff).22 G(er_r).198 E
(eturn)-.407 E F1(,)A F2(bytes_b)2.75 E(uf)-.22 E(fer)-.198 E F1(,)A F2
-.11(ke)2.75 G(ysym_r)-.22 E(eturn)-.407 E F1(,)A F2(status_in_out)2.75
E F1(\)).916 E(XK)88.5 226.7 Q -.165(ey)-.275 G(Ev).165 E(ent *)-.165 E
F2 -.165(ev)C(ent_struct).165 E F1(;).916 E(char *)88.5 239.7 Q F2 -.22
(bu)C -.198(ff).22 G(er_r).198 E(eturn)-.407 E F1(;).916 E(int)88.5
252.7 Q F2(bytes_b)2.75 E(uf)-.22 E(fer)-.198 E F1(;).916 E -2.365 -.275
(Ke y)88.5 265.7 T(Sym *).275 E F2 -.11(ke)C(ysym_r)-.22 E(eturn)-.407 E
F1(;).916 E(XComposeStatus *)88.5 278.7 Q F2(status_in_out)A F1(;).916 E
F2 -.165(ev)72 299.5 S(ent_struct).165 E F1(Speci\214es the k)18.397 E
.33 -.165(ey e)-.11 H -.165(ve)-.11 G(nt structure to be used.).165 E
-1.21(Yo)5.5 G 2.75(uc)1.21 G(an pass)-2.75 E F0(XK)3.666 E(eyPr)-.275 E
(essedEv)-.198 E(ent)-.11 E F1(or)144 312.5 Q F0(XK)3.666 E
(eyReleasedEv)-.275 E(ent)-.11 E F1(.).916 E F2 -.22(bu)72 329.4 S -.198
(ff).22 G(er_r).198 E(eturn)-.407 E F1
(Returns the translated characters.)13.546 E F2(bytes_b)72 346.3 Q(uf)
-.22 E(fer)-.198 E F1(Speci\214es the length of the b)18.034 E(uf)-.22 E
(fer)-.275 E 5.5(.N)-.605 G 2.75(om)-5.5 G(ore than bytes_b)-2.75 E(uf)
-.22 E(fer of translation are)-.275 E(returned.)144 359.3 Q F2 -.11(ke)
72 376.2 S(ysym_r)-.22 E(eturn)-.407 E F1(Returns the K)8.09 E -.165(ey)
-.275 G(Sym computed from the e).165 E -.165(ve)-.275 G(nt if this ar)
.165 E(gument is not NULL.)-.198 E F2(status_in_out)72 393.1 Q F1
(Speci\214es or returns the)12.71 E F0(XComposeStatus)3.666 E F1
(structure or NULL.)3.666 E 36 388.75 36 399.75 DL 36 386.75 36 397.75
DL 41.5 398 36 398 DL 43.5 398 38 398 DL 49 398 43.5 398 DL(The)72 423 Q
F0(XLookupString)3.666 E F1(function translates a k)3.666 E .33 -.165
(ey e)-.11 H -.165(ve)-.11 G(nt to a K).165 E -.165(ey)-.275 G
(Sym and a string.).165 E(The K)5.5 E -.165(ey)-.275 G(Sym is).165 E
(obtained by using the standard interpretation of the)72 436 Q F0(Shift)
3.666 E F1(,).916 E F0(Lock)3.666 E F1 2.75(,g).916 G
(roup, and numlock modi\214ers)-2.75 E
(as de\214ned in the X Protocol speci\214cation.)72 449 Q(If the K)5.5 E
-.165(ey)-.275 G(Sym has been rebound \(see).165 E F0(XRebind-)3.666 E
-.275(Ke)72 462 S(ysym).275 E F1
(\), the bound string will be stored in the b).916 E(uf)-.22 E(fer)-.275
E 5.5(.O)-.605 G(therwise, the K)-5.5 E -.165(ey)-.275 G
(Sym is mapped, if).165 E(possible, to an ISO Latin-1 character or \(if\
 the Control modi\214er is on\) to an ASCII control charac-)72 475 Q
(ter)72 488 Q 2.75(,a)-.44 G(nd that character is stored in the b)-2.75
E(uf)-.22 E(fer)-.275 E(.)-.605 E F0(XLookupString)6.416 E F1
(returns the number of characters)3.666 E(that are stored in the b)72
501 Q(uf)-.22 E(fer)-.275 E(.)-.605 E(If present \(non-NULL\), the)72
517.9 Q F0(XComposeStatus)3.666 E F1
(structure records the state, which is pri)3.666 E -.275(va)-.275 G
(te to).275 E(Xlib, that needs preserv)72 530.9 Q(ation across calls to)
-.275 E F0(XLookupString)3.666 E F1(to implement compose processing.)
3.666 E(The creation of)72 543.9 Q F0(XComposeStatus)3.666 E F1
(structures is implementation-dependent; a portable program)3.666 E
(must pass NULL for this ar)72 556.9 Q(gument.)-.198 E F0(XLookupString)
72.916 573.8 Q F1(depends on the cached k)3.666 E -.165(ey)-.11 G
(board information mentioned in the pre).165 E(vious section,)-.275 E
(so it is necessary to use)72 586.8 Q F0(XRefr)3.666 E(eshK)-.198 E
(eyboardMapping)-.275 E F1(to k)3.666 E
(eep this information up-to-date.)-.11 E 1.76 -.88(To r)72 616.7 T
(ebind the meaning of a K).88 E -.165(ey)-.275 G(Sym for).165 E F0
(XLookupString)3.666 E F1 2.75(,u).916 G(se)-2.75 E F0(XRebindK)3.666 E
(eysym)-.275 E F1(.).916 E F0(404)279.75 769 Q 0 Cg EP
%%Page: 405 410
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E .44 LW 36 76.75 36 87.75 DL 36 74.75
36 85.75 DL 41.5 73 36 73 DL 43.5 73 38 73 DL 49 73 43.5 73 DL/F1 11
/Times-Roman@0 SF(XRebindK)72 88.9 Q -.165(ey)-.275 G(sym\().165 E/F2 11
/Times-Italic@0 SF(display).916 E F1(,)A F2 -.11(ke)2.75 G(ysym)-.22 E
F1(,)A F2(list)2.75 E F1(,)A F2(mod_count)2.75 E F1(,)A F2(string)2.75 E
F1(,)A F2(num_bytes)2.75 E F1(\)).916 E(Display *)88.5 101.9 Q F2
(display)A F1(;).916 E -2.365 -.275(Ke y)88.5 114.9 T(Sym).275 E F2 -.11
(ke)2.75 G(ysym)-.22 E F1(;).916 E -2.365 -.275(Ke y)88.5 127.9 T(Sym)
.275 E F2(list)2.75 E F1 .916([];).916 G(int)88.5 140.9 Q F2(mod_count)
2.75 E F1(;).916 E(unsigned char *)88.5 153.9 Q F2(string)A F1(;).916 E
(int)88.5 166.9 Q F2(num_bytes)2.75 E F1(;).916 E F2(display)72 187.7 Q
F1(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605
E F2 -.11(ke)72 204.6 S(ysym)-.22 E F1(Speci\214es the K)40.683 E -.165
(ey)-.275 G(Sym that is to be rebound.).165 E F2(list)72 221.5 Q F1
(Speci\214es the K)58.547 E -.165(ey)-.275 G
(Syms to be used as modi\214ers.).165 E F2(mod_count)72 238.4 Q F1
(Speci\214es the number of modi\214ers in the modi\214er list.)23.116 E
F2(string)72 255.3 Q F1
(Speci\214es the string that is copied and will be returned by)46.326 E
F0(XLookupString)3.666 E F1(.).916 E F2(num_bytes)72 272.2 Q F1
(Speci\214es the number of bytes in the string ar)24.953 E(gument.)-.198
E 36 267.85 36 278.85 DL 36 265.85 36 276.85 DL 41.5 277.1 36 277.1 DL
43.5 277.1 38 277.1 DL 49 277.1 43.5 277.1 DL(The)72 302.1 Q F0
(XRebindK)3.666 E(eysym)-.275 E F1
(function can be used to rebind the meaning of a K)3.666 E -.165(ey)
-.275 G(Sym for the client.).165 E(It)5.5 E(does not rede\214ne an)72
315.1 Q 2.75(yk)-.165 G .33 -.165(ey i)-2.86 H 2.75(nt).165 G(he X serv)
-2.75 E(er b)-.165 E(ut merely pro)-.22 E(vides an easy w)-.165 E
(ay for long strings to be)-.11 E(attached to k)72 328.1 Q -.165(ey)-.11
G(s.).165 E F0(XLookupString)6.416 E F1
(returns this string when the appropriate set of modi\214er k)3.666 E
-.165(ey)-.11 G(s).165 E(are pressed and when the K)72 341.1 Q -.165(ey)
-.275 G(Sym w).165 E(ould ha)-.11 E .33 -.165(ve b)-.22 H
(een used for the translation.).165 E(No te)5.5 E(xt con)-.165 E -.165
(ve)-.44 G(rsions).165 E(are performed; the client is responsible for s\
upplying appropriately encoded strings.)72 354.1 Q(Note that)5.5 E
(you can rebind a K)72 367.1 Q -.165(ey)-.275 G(Sym that may not e).165
E(xist.)-.165 E F0 2.75(16.3. Allocating)72 393.1 R -.22(Pe)2.75 G
(rmanent Storage).22 E F1 1.76 -.88(To a)72 410 T
(llocate some memory you will ne).88 E -.165(ve)-.275 G 2.75(rg).165 G
-2.365 -.275(iv e)-2.75 H(back, use)3.025 E F0(Xpermalloc)3.666 E F1(.)
.916 E 36 427.75 36 438.75 DL 36 425.75 36 436.75 DL 41.5 424 36 424 DL
43.5 424 38 424 DL 49 424 43.5 424 DL(char *Xpermalloc)72 439.9 Q(\()
.916 E F2(size).916 E F1(\)).916 E(unsigned int)85.75 452.9 Q F2(size)
2.75 E F1(;).916 E 36 452.45 36 463.45 DL 36 450.45 36 461.45 DL 41.5
461.7 36 461.7 DL 43.5 461.7 38 461.7 DL 49 461.7 43.5 461.7 DL(The)72
486.7 Q F0(Xpermalloc)3.666 E F1(function allocates storage that can ne)
3.666 E -.165(ve)-.275 G 2.75(rb).165 G 2.75(ef)-2.75 G
(reed for the life of the program.)-2.75 E
(The memory is allocated with alignment for the C type double.)72 499.7
Q(This function may pro)5.5 E(vide some)-.165 E
(performance and space sa)72 512.7 Q(vings o)-.22 E -.165(ve)-.165 G
2.75(rt).165 G(he standard operating system memory allocator)-2.75 E(.)
-.605 E F0 2.75(16.4. P)72 538.7 R(arsing the W)-.11 E(indo)-.198 E 2.75
(wG)-.11 G(eometry)-2.75 E F1 1.76 -.88(To p)72 555.6 T
(arse standard windo).88 E 2.75(wg)-.275 G(eometry strings, use)-2.75 E
F0(XP)3.666 E(arseGeometry)-.11 E F1(.).916 E F0(405)279.75 769 Q 0 Cg
EP
%%Page: 406 411
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E .44 LW 36 76.75 36 87.75 DL 36 74.75
36 85.75 DL 41.5 73 36 73 DL 43.5 73 38 73 DL 49 73 43.5 73 DL/F1 11
/Times-Roman@0 SF(int XP)72 88.9 Q -1.834(arseGeometry \()-.165 F/F2 11
/Times-Italic@0 SF(par).916 E(sestring)-.11 E F1(,).916 E F2(x_r)2.75 E
(eturn)-.407 E F1(,).916 E F2(y_r)2.75 E(eturn)-.407 E F1(,).916 E F2
(width_r)2.75 E(eturn)-.407 E F1(,).916 E F2(height_r)2.75 E(eturn)-.407
E F1(\)).916 E(char *)88.5 101.9 Q F2(par)A(sestring)-.11 E F1(;).916 E
(int *)88.5 114.9 Q F2(x_r)A(eturn)-.407 E F1 2.75(,*).916 G F2(y_r)
-2.75 E(eturn)-.407 E F1(;).916 E(unsigned int *)88.5 127.9 Q F2
(width_r)A(eturn)-.407 E F1 2.75(,*).916 G F2(height_r)-2.75 E(eturn)
-.407 E F1(;).916 E F2(par)72 148.7 Q(sestring)-.11 E F1
(Speci\214es the string you w)21.994 E(ant to parse.)-.11 E F2(x_r)72
165.6 Q(eturn)-.407 E(y_r)72 178.6 Q(eturn)-.407 E F1
(Return the x and y of)34.523 E(fsets.)-.275 E F2(width_r)72 195.5 Q
(eturn)-.407 E(height_r)72 208.5 Q(eturn)-.407 E F1
(Return the width and height determined.)11.907 E 36 204.15 36 215.15 DL
36 202.15 36 213.15 DL 41.5 213.4 36 213.4 DL 43.5 213.4 38 213.4 DL 49
213.4 43.5 213.4 DL(By con)72 238.4 Q -.165(ve)-.44 G
(ntion, X applications use a standard string to indicate windo).165 E
2.75(ws)-.275 G(ize and placement.)-2.75 E F0(XP)72.916 251.4 Q
(arseGeometry)-.11 E F1(mak)3.666 E
(es it easier to conform to this standard because it allo)-.11 E
(ws you to parse the)-.275 E(standard windo)72 264.4 Q 2.75(wg)-.275 G
(eometry)-2.75 E 5.5(.S)-.715 G(peci\214cally)-5.5 E 2.75(,t)-.715 G
(his function lets you parse strings of the form:)-2.75 E([=][<)108
287.8 Q F2(width)A F1(>{xX}<)A F2(height)A F1(>][{+-}<)A F2(xof)A(fset)
-.198 E F1(>{+-}<)A F2(yof)A(fset)-.198 E F1(>])A
(The \214elds map into the ar)72 311.2 Q
(guments associated with this function.)-.198 E(\(Items enclosed in <)
5.5 E 2.75(>a).916 G(re inte-)-2.75 E(gers, items in [)72 324.2 Q 2.75
(]a).916 G(re optional, and items enclosed in {)-2.75 E 2.75(}i).916 G
(ndicate `)-2.75 E(`choose one of.)-.814 E 4.378 -.814('' N)-.77 H
(ote that the).814 E(brack)72 337.2 Q
(ets should not appear in the actual string.\))-.11 E
(If the string is not in the Host Portable Character)5.5 E
(Encoding, the result is implementation-dependent.)72 350.2 Q(The)72
367.1 Q F0(XP)3.666 E(arseGeometry)-.11 E F1
(function returns a bitmask that indicates which of the four v)3.666 E
(alues \(width,)-.275 E(height, xof)72 380.1 Q(fset, and yof)-.275 E
(fset\) were actually found in the string and whether the x and y v)
-.275 E(alues are)-.275 E(ne)72 393.1 Q -.055(ga)-.165 G(ti).055 E -.165
(ve)-.275 G 5.5(.B).165 G 2.75(yc)-5.5 G(on)-2.75 E -.165(ve)-.44 G(nti\
on, \2550 is not equal to +0, because the user needs to be able to say \
`).165 E(`position)-.814 E(the windo)72 406.1 Q 2.75(wr)-.275 G(elati)
-2.75 E .33 -.165(ve t)-.275 H 2.75(ot).165 G(he right or bottom edge.)
-2.75 E 4.378 -.814('' F)-.77 H(or each v).649 E
(alue found, the corresponding ar)-.275 E(gu-)-.198 E(ment is updated.)
72 419.1 Q -.165(Fo)5.5 G 2.75(re).165 G(ach v)-2.75 E
(alue not found, the ar)-.275 E(gument is left unchanged.)-.198 E
(The bits are repre-)5.5 E(sented by)72 432.1 Q F0(XV)3.666 E(alue)
-1.012 E F1(,).916 E F0(YV)3.666 E(alue)-1.012 E F1(,).916 E F0 -.198
(Wi)3.666 G(dthV).198 E(alue)-1.012 E F1(,).916 E F0(HeightV)3.666 E
(alue)-1.012 E F1(,).916 E F0(XNegati)3.666 E -.11(ve)-.11 G F1 2.75(,o)
1.026 G(r)-2.75 E F0(YNegati)3.666 E -.11(ve)-.11 G F1(and are)3.776 E
(de\214ned in <)72 445.1 Q F0(X11/Xutil.h)A F1 2.75(>. The)B 2.75(yw)
-.165 G(ill be set whene)-2.75 E -.165(ve)-.275 G 2.75(ro).165 G
(ne of the v)-2.75 E(alues is de\214ned or one of the)-.275 E
(signs is set.)72 458.1 Q(If the function returns either the)72 475 Q F0
(XV)3.666 E(alue)-1.012 E F1(or)3.666 E F0(YV)3.666 E(alue)-1.012 E F1
(\215ag, you should place the windo)3.666 E 2.75(wa)-.275 G 2.75(tt)
-2.75 G(he)-2.75 E(requested position.)72 488 Q 1.76 -.88(To c)72 517.9
T(onstruct a windo).88 E(w')-.275 E 2.75(sg)-.605 G
(eometry information, use)-2.75 E F0(XWMGeometry)3.666 E F1(.).916 E F0
(406)279.75 769 Q 0 Cg EP
%%Page: 407 412
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E .44 LW 36 76.75 36 87.75 DL 36 74.75
36 85.75 DL 41.5 73 36 73 DL 43.5 73 38 73 DL 49 73 43.5 73 DL/F1 11
/Times-Roman@0 SF(int XWMGeometry)72 88.9 Q(\().916 E/F2 11
/Times-Italic@0 SF(display).916 E F1(,)A F2(scr)2.75 E(een)-.407 E F1(,)
A F2(user_g)2.75 E(eom)-.11 E F1(,)A F2(def_g)2.75 E(eom)-.11 E F1(,)A
F2(bwidth)2.75 E F1(,)A F2(hints)2.75 E F1(,)A F2(x_r)2.75 E(eturn)-.407
E F1(,)A F2(y_r)2.75 E(eturn)-.407 E F1(,)A F2(width_r)116 101.9 Q
(eturn)-.407 E F1(,)A F2(height_r)2.75 E(eturn)-.407 E F1(,)A F2(gr)2.75
E(avity_r)-.165 E(eturn)-.407 E F1(\)).916 E(Display *)88.5 114.9 Q F2
(display)A F1(;).916 E(int)88.5 127.9 Q F2(scr)2.75 E(een)-.407 E F1(;)
.916 E(char *)88.5 140.9 Q F2(user_g)A(eom)-.11 E F1(;).916 E(char *)
88.5 153.9 Q F2(def_g)A(eom)-.11 E F1(;).916 E(unsigned int)88.5 166.9 Q
F2(bwidth)2.75 E F1(;).916 E(XSizeHints *)88.5 179.9 Q F2(hints)A F1(;)
.916 E(int *)88.5 192.9 Q F2(x_r)A(eturn)-.407 E F1 2.75(,*)C F2(y_r)
-2.75 E(eturn)-.407 E F1(;).916 E(int *)88.5 205.9 Q F2(width_r)A(eturn)
-.407 E F1(;).916 E(int *)88.5 218.9 Q F2(height_r)A(eturn)-.407 E F1(;)
.916 E(int *)88.5 231.9 Q F2(gr)A(avity_r)-.165 E(eturn)-.407 E F1(;)
.916 E F2(display)72 252.7 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2(scr)72 269.6 Q(een)-.407 E F1(Speci\214es the screen.)43.697 E F2
(user_g)72 286.5 Q(eom)-.11 E F1(Speci\214es the user)23.842 E
(-speci\214ed geometry or NULL.)-.22 E F2(def_g)72 303.4 Q(eom)-.11 E F1
(Speci\214es the application')29.342 E 2.75(sd)-.605 G(ef)-2.75 E
(ault geometry or NULL.)-.11 E F2(bwidth)72 320.3 Q F1
(Speci\214es the border width.)42.047 E F2(hints)72 337.2 Q F1
(Speci\214es the size hints for the windo)50.605 E 2.75(wi)-.275 G 2.75
(ni)-2.75 G(ts normal state.)-2.75 E F2(x_r)72 354.1 Q(eturn)-.407 E
(y_r)72 367.1 Q(eturn)-.407 E F1(Return the x and y of)34.523 E(fsets.)
-.275 E F2(width_r)72 384 Q(eturn)-.407 E(height_r)72 397 Q(eturn)-.407
E F1(Return the width and height determined.)11.907 E F2(gr)72 413.9 Q
(avity_r)-.165 E(eturn)-.407 E F1(Returns the windo)8.409 E 2.75(wg)
-.275 G(ra)-2.75 E(vity)-.22 E(.)-.715 E 36 409.55 36 420.55 DL 36
407.55 36 418.55 DL 41.5 418.8 36 418.8 DL 43.5 418.8 38 418.8 DL 49
418.8 43.5 418.8 DL(The)72 443.8 Q F0(XWMGeometry)3.666 E F1
(function combines an)3.666 E 2.75(yg)-.165 G(eometry information \(gi)
-2.75 E -.165(ve)-.275 G 2.75(ni).165 G 2.75(nt)-2.75 G
(he format used by)-2.75 E F0(XP)72.916 456.8 Q(arseGeometry)-.11 E F1
2.75(\)s).916 G(peci\214ed by the user and by the calling program with \
size hints \(usually the)-2.75 E(ones to be stored in WM_NORMAL_HINTS\)\
 and returns the position, size, and gra)72 469.8 Q(vity \()-.22 E F0
(North-).916 E -.715(We)72 482.8 S(stGra).715 E(vity)-.275 E F1(,).916 E
F0(NorthEastGra)3.666 E(vity)-.275 E F1(,).916 E F0(SouthEastGra)3.666 E
(vity)-.275 E F1 2.75(,o).916 G(r)-2.75 E F0(SouthW)3.666 E(estGra)-.715
E(vity)-.275 E F1 2.75(\)t).916 G(hat describe the)-2.75 E(windo)72
495.8 Q 4.18 -.715(w. I)-.275 H 2.75(ft).715 G
(he base size is not set in the)-2.75 E F0(XSizeHints)3.666 E F1
(structure, the minimum size is used if set.)3.666 E
(Otherwise, a base size of zero is assumed.)72 508.8 Q
(If no minimum size is set in the hints structure, the)5.5 E
(base size is used.)72 521.8 Q 2.75(Am)5.5 G
(ask \(in the form returned by)-2.75 E F0(XP)3.666 E(arseGeometry)-.11 E
F1 2.75(\)t).916 G(hat describes which v)-2.75 E(al-)-.275 E(ues came f\
rom the user speci\214cation and whether or not the position coordinate\
s are relati)72 534.8 Q .33 -.165(ve t)-.275 H(o).165 E
(the right and bottom edges is returned.)72 547.8 Q
(Note that these coordinates will ha)5.5 E .33 -.165(ve a)-.22 H
(lready been).165 E(accounted for in the x_return and y_return v)72
560.8 Q(alues.)-.275 E(Note that in)72 577.7 Q -.275(va)-.44 G(lid geom\
etry speci\214cations can cause a width or height of zero to be returne\
d.).275 E(The)5.5 E(caller may pass the address of the hints win_gra)72
590.7 Q(vity \214eld as gra)-.22 E(vity_return to update the hints)-.22
E(directly)72 603.7 Q(.)-.715 E F0 2.75(16.5. Manipulating)72 629.7 R
(Regions)2.75 E F1(Re)72 646.6 Q(gions are arbitrary sets of pix)-.165 E
(el locations.)-.165 E(Xlib pro)5.5 E
(vides functions for manipulating re)-.165 E(gions.)-.165 E
(The opaque type)72 659.6 Q F0(Region)3.666 E F1(is de\214ned in <)3.666
E F0(X11/Xutil.h)A F1 2.75(>. Xlib)B(pro)2.75 E
(vides functions that you can use)-.165 E(to manipulate re)72 672.6 Q
2.75(gions. This)-.165 F(section discusses ho)2.75 E 2.75(wt)-.275 G(o:)
-2.75 E 23.65<8343>72 689.5 S(reate, cop)-23.65 E 1.43 -.715(y, o)-.11 H
2.75(rd).715 G(estro)-2.75 E 2.75(yr)-.11 G -.165(eg)-2.75 G(ions).165 E
23.65<834d>72 706.4 S .33 -.165(ove o)-23.65 H 2.75(rs).165 G(hrink re)
-2.75 E(gions)-.165 E F0(407)279.75 769 Q 0 Cg EP
%%Page: 408 413
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E/F1 11/Times-Roman@0 SF 23.65<8343>72
85 S(ompute with re)-23.65 E(gions)-.165 E 23.65<8344>72 101.9 S
(etermine if re)-23.65 E(gions are empty or equal)-.165 E 23.65<834c>72
118.8 S(ocate a point or rectangle in a re)-23.65 E(gion)-.165 E F0 2.75
(16.5.1. Cr)72 144.8 R(eating, Copying, or Destr)-.198 E(oying Regions)
-.198 E F1 1.76 -.88(To c)72 161.7 T(reate a ne).88 E 2.75(we)-.275 G
(mpty re)-2.75 E(gion, use)-.165 E F0(XCr)3.666 E(eateRegion)-.198 E F1
(.).916 E .44 LW 36 179.45 36 190.45 DL 36 177.45 36 188.45 DL 41.5
175.7 36 175.7 DL 43.5 175.7 38 175.7 DL 49 175.7 43.5 175.7 DL(Re)72
191.6 Q(gion XCreateRe)-.165 E -1.834(gion \(\))-.165 F 36 191.15 36
202.15 DL 36 189.15 36 200.15 DL 41.5 200.4 36 200.4 DL 43.5 200.4 38
200.4 DL 49 200.4 43.5 200.4 DL 1.76 -.88(To g)72 238.4 T(enerate a re)
.88 E(gion from a polygon, use)-.165 E F0(XP)3.666 E(olygonRegion)-.22 E
F1(.).916 E 36 256.15 36 267.15 DL 36 254.15 36 265.15 DL 41.5 252.4 36
252.4 DL 43.5 252.4 38 252.4 DL 49 252.4 43.5 252.4 DL(Re)72 268.3 Q
(gion XPolygonRe)-.165 E -1.834(gion \()-.165 F/F2 11/Times-Italic@0 SF
(points).916 E F1(,).916 E F2(n)2.75 E F1(,).916 E F2(\214ll_rule)2.75 E
F1(\)).916 E(XPoint)88.5 281.3 Q F2(points[])2.75 E F1(;).916 E(int)88.5
294.3 Q F2(n)2.75 E F1(;).916 E(int)88.5 307.3 Q F2(\214ll_rule)2.75 E
F1(;).916 E F2(points)72 328.1 Q F1(Speci\214es an array of points.)
45.105 E F2(n)72 345 Q F1
(Speci\214es the number of points in the polygon.)66.5 E F2(\214ll_rule)
72 361.9 Q F1(Speci\214es the \214ll-rule you w)37.163 E
(ant to set for the speci\214ed GC.)-.11 E -1.21(Yo)5.5 G 2.75(uc)1.21 G
(an pass)-2.75 E F0(Ev)3.666 E(en-)-.11 E(OddRule)144 374.9 Q F1(or)
3.666 E F0 -.198(Wi)3.666 G(ndingRule).198 E F1(.).916 E 36 370.55 36
381.55 DL 36 368.55 36 379.55 DL 41.5 379.8 36 379.8 DL 43.5 379.8 38
379.8 DL 49 379.8 43.5 379.8 DL(The)72 404.8 Q F0(XP)3.666 E
(olygonRegion)-.22 E F1(function returns a re)3.666 E
(gion for the polygon de\214ned by the points array)-.165 E 5.5(.F)-.715
G(or)-5.665 E(an e)72 417.8 Q(xplanation of \214ll_rule, see)-.165 E F0
(XCr)3.666 E(eateGC)-.198 E F1(.).916 E 1.76 -.88(To s)72 447.7 T
(et the clip-mask of a GC to a re).88 E(gion, use)-.165 E F0(XSetRegion)
3.666 E F1(.).916 E 36 465.45 36 476.45 DL 36 463.45 36 474.45 DL 41.5
461.7 36 461.7 DL 43.5 461.7 38 461.7 DL 49 461.7 43.5 461.7 DL(XSetRe)
72 477.6 Q -1.834(gion \()-.165 F F2(display).916 E F1(,)A F2(gc)2.75 E
F1(,).916 E F2(r)2.75 E F1(\)).916 E(Display *)88.5 490.6 Q F2(display)A
F1(;).916 E(GC)88.5 503.6 Q F2(gc)2.75 E F1(;).916 E(Re)88.5 516.6 Q
(gion)-.165 E F2(r)2.75 E F1(;).916 E F2(display)72 537.4 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2(gc)72 554.3 Q F1(Speci\214es the GC.)61.616 E F2(r)72 571.2 Q F1
(Speci\214es the re)67.721 E(gion.)-.165 E 36 566.85 36 577.85 DL 36
564.85 36 575.85 DL 41.5 576.1 36 576.1 DL 43.5 576.1 38 576.1 DL 49
576.1 43.5 576.1 DL(The)72 601.1 Q F0(XSetRegion)3.666 E F1
(function sets the clip-mask in the GC to the speci\214ed re)3.666 E
2.75(gion. The)-.165 F(re)2.75 E(gion is)-.165 E(speci\214ed relati)72
614.1 Q .33 -.165(ve t)-.275 H 2.75(ot).165 G(he dra)-2.75 E -.11(wa)
-.165 G(ble').11 E 2.75(so)-.605 G 2.75(rigin. The)-2.75 F
(resulting GC clip origin is implementation-depen-)2.75 E 2.75
(dent. Once)72 627.1 R(it is set in the GC, the re)2.75 E
(gion can be destro)-.165 E(yed.)-.11 E 1.76 -.88(To d)72 657 T
(eallocate the storage associated with a speci\214ed re).88 E(gion, use)
-.165 E F0(XDestr)3.666 E(oyRegion)-.198 E F1(.).916 E F0(408)279.75 769
Q 0 Cg EP
%%Page: 409 414
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E .44 LW 36 76.75 36 87.75 DL 36 74.75
36 85.75 DL 41.5 73 36 73 DL 43.5 73 38 73 DL 49 73 43.5 73 DL/F1 11
/Times-Roman@0 SF(XDestro)72 88.9 Q(yRe)-.11 E -1.834(gion \()-.165 F/F2
11/Times-Italic@0 SF(r).916 E F1(\)).916 E(Re)88.5 101.9 Q(gion)-.165 E
F2(r)2.75 E F1(;).916 E F2(r)72 122.7 Q F1(Speci\214es the re)67.721 E
(gion.)-.165 E 36 118.35 36 129.35 DL 36 116.35 36 127.35 DL 41.5 127.6
36 127.6 DL 43.5 127.6 38 127.6 DL 49 127.6 43.5 127.6 DL F0 2.75
(16.5.2. Mo)72 165.6 R(ving or Shrinking Regions)-.11 E F1 1.76 -.88
(To m)72 182.5 T .33 -.165(ove a r).88 H -.165(eg).165 G
(ion by a speci\214ed amount, use).165 E F0(XOffsetRegion)3.666 E F1(.)
.916 E 36 200.25 36 211.25 DL 36 198.25 36 209.25 DL 41.5 196.5 36 196.5
DL 43.5 196.5 38 196.5 DL 49 196.5 43.5 196.5 DL(XOf)72 212.4 Q(fsetRe)
-.275 E -1.834(gion \()-.165 F F2(r).916 E F1(,).916 E F2(dx)2.75 E F1
(,).916 E F2(dy)2.75 E F1(\)).916 E(Re)88.5 225.4 Q(gion)-.165 E F2(r)
2.75 E F1(;).916 E(int)88.5 238.4 Q F2(dx)2.75 E F1(,).916 E F2(dy)2.75
E F1(;).916 E F2(r)72 259.2 Q F1(Speci\214es the re)67.721 E(gion.)-.165
E F2(dx)72 276.1 Q(dy)72 289.1 Q F1
(Specify the x and y coordinates, which de\214ne the amount you w)61.616
E(ant to mo)-.11 E .33 -.165(ve t)-.165 H(he).165 E(speci\214ed re)144
302.1 Q(gion.)-.165 E 36 297.75 36 308.75 DL 36 295.75 36 306.75 DL 41.5
307 36 307 DL 43.5 307 38 307 DL 49 307 43.5 307 DL 1.76 -.88(To r)72
345 T(educe a re).88 E(gion by a speci\214ed amount, use)-.165 E F0
(XShrinkRegion)3.666 E F1(.).916 E 36 362.75 36 373.75 DL 36 360.75 36
371.75 DL 41.5 359 36 359 DL 43.5 359 38 359 DL 49 359 43.5 359 DL
(XShrinkRe)72 374.9 Q -1.834(gion \()-.165 F F2(r).916 E F1(,).916 E F2
(dx)2.75 E F1(,).916 E F2(dy)2.75 E F1(\)).916 E(Re)88.5 387.9 Q(gion)
-.165 E F2(r)2.75 E F1(;).916 E(int)88.5 400.9 Q F2(dx)2.75 E F1(,).916
E F2(dy)2.75 E F1(;).916 E F2(r)72 421.7 Q F1(Speci\214es the re)67.721
E(gion.)-.165 E F2(dx)72 438.6 Q(dy)72 451.6 Q F1
(Specify the x and y coordinates, which de\214ne the amount you w)61.616
E(ant to shrink the)-.11 E(speci\214ed re)144 464.6 Q(gion.)-.165 E 36
460.25 36 471.25 DL 36 458.25 36 469.25 DL 41.5 469.5 36 469.5 DL 43.5
469.5 38 469.5 DL 49 469.5 43.5 469.5 DL(Positi)72 494.5 Q .33 -.165
(ve v)-.275 H(alues shrink the size of the re)-.11 E(gion, and ne)-.165
E -.055(ga)-.165 G(ti).055 E .33 -.165(ve v)-.275 H(alues e)-.11 E
(xpand the re)-.165 E(gion.)-.165 E F0 2.75(16.5.3. Computing)72 520.5 R
(with Regions)2.75 E F1 1.76 -.88(To g)72 550.4 T
(enerate the smallest rectangle enclosing a re).88 E(gion, use)-.165 E
F0(XClipBox)3.666 E F1(.).916 E 36 568.15 36 579.15 DL 36 566.15 36
577.15 DL 41.5 564.4 36 564.4 DL 43.5 564.4 38 564.4 DL 49 564.4 43.5
564.4 DL -1.834(XClipBox \()72 580.3 R F2(r).916 E F1(,).916 E F2 -.407
(re)2.75 G(ct_r).407 E(eturn)-.407 E F1(\)).916 E(Re)88.5 593.3 Q(gion)
-.165 E F2(r)2.75 E F1(;).916 E(XRectangle *)88.5 606.3 Q F2 -.407(re)C
(ct_r).407 E(eturn)-.407 E F1(;).916 E F2(r)72 627.1 Q F1
(Speci\214es the re)67.721 E(gion.)-.165 E F2 -.407(re)72 644 S(ct_r)
.407 E(eturn)-.407 E F1(Returns the smallest enclosing rectangle.)22.709
E 36 639.65 36 650.65 DL 36 637.65 36 648.65 DL 41.5 648.9 36 648.9 DL
43.5 648.9 38 648.9 DL 49 648.9 43.5 648.9 DL(The)72 673.9 Q F0
(XClipBox)3.666 E F1
(function returns the smallest rectangle enclosing the speci\214ed re)
3.666 E(gion.)-.165 E 1.76 -.88(To c)72 703.8 T
(ompute the intersection of tw).88 E 2.75(or)-.11 G -.165(eg)-2.75 G
(ions, use).165 E F0(XIntersectRegion)3.666 E F1(.).916 E F0(409)279.75
769 Q 0 Cg EP
%%Page: 410 415
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E .44 LW 36 76.75 36 87.75 DL 36 74.75
36 85.75 DL 41.5 73 36 73 DL 43.5 73 38 73 DL 49 73 43.5 73 DL/F1 11
/Times-Roman@0 SF(XIntersectRe)72 88.9 Q -1.834(gion \()-.165 F/F2 11
/Times-Italic@0 SF(sr).916 E(a)-.165 E F1(,).916 E F2(srb)2.75 E F1(,)
.916 E F2(dr_r)2.75 E(eturn)-.407 E F1(\)).916 E(Re)88.5 101.9 Q(gion)
-.165 E F2(sr)2.75 E(a)-.165 E F1(,).916 E F2(srb)2.75 E F1(,).916 E F2
(dr_r)2.75 E(eturn)-.407 E F1(;).916 E F2(sr)72 122.7 Q(a)-.165 E(srb)72
135.7 Q F1(Specify the tw)57.942 E 2.75(or)-.11 G -.165(eg)-2.75 G
(ions with which you w).165 E(ant to perform the computation.)-.11 E F2
(dr_r)72 152.6 Q(eturn)-.407 E F1
(Returns the result of the computation.)29.628 E 36 148.25 36 159.25 DL
36 146.25 36 157.25 DL 41.5 157.5 36 157.5 DL 43.5 157.5 38 157.5 DL 49
157.5 43.5 157.5 DL 1.76 -.88(To c)72 195.5 T(ompute the union of tw).88
E 2.75(or)-.11 G -.165(eg)-2.75 G(ions, use).165 E F0(XUnionRegion)3.666
E F1(.).916 E 36 213.25 36 224.25 DL 36 211.25 36 222.25 DL 41.5 209.5
36 209.5 DL 43.5 209.5 38 209.5 DL 49 209.5 43.5 209.5 DL(XUnionRe)72
225.4 Q -1.834(gion \()-.165 F F2(sr).916 E(a)-.165 E F1(,).916 E F2
(srb)2.75 E F1(,).916 E F2(dr_r)2.75 E(eturn)-.407 E F1(\)).916 E(Re)
88.5 238.4 Q(gion)-.165 E F2(sr)2.75 E(a)-.165 E F1(,).916 E F2(srb)2.75
E F1(,).916 E F2(dr_r)2.75 E(eturn)-.407 E F1(;).916 E F2(sr)72 259.2 Q
(a)-.165 E(srb)72 272.2 Q F1(Specify the tw)57.942 E 2.75(or)-.11 G
-.165(eg)-2.75 G(ions with which you w).165 E
(ant to perform the computation.)-.11 E F2(dr_r)72 289.1 Q(eturn)-.407 E
F1(Returns the result of the computation.)29.628 E 36 284.75 36 295.75
DL 36 282.75 36 293.75 DL 41.5 294 36 294 DL 43.5 294 38 294 DL 49 294
43.5 294 DL 1.76 -.88(To c)72 332 T(reate a union of a source re).88 E
(gion and a rectangle, use)-.165 E F0(XUnionRectW)3.666 E(ithRegion)
-.198 E F1(.).916 E 36 349.75 36 360.75 DL 36 347.75 36 358.75 DL 41.5
346 36 346 DL 43.5 346 38 346 DL 49 346 43.5 346 DL(XUnionRectW)72 361.9
Q(ithRe)-.44 E -1.834(gion \()-.165 F F2 -.407(re).916 G(ctangle).407 E
F1(,)A F2(sr)2.75 E(c_r)-.407 E -.44(eg)-.407 G(ion).44 E F1(,)A F2
(dest_r)2.75 E -.44(eg)-.407 G(ion_r).44 E(eturn)-.407 E F1(\)).916 E
(XRectangle *)85.75 374.9 Q F2 -.407(re)C(ctangle).407 E F1(;).916 E(Re)
85.75 387.9 Q(gion)-.165 E F2(sr)2.75 E(c_r)-.407 E -.44(eg)-.407 G(ion)
.44 E F1(;).916 E(Re)85.75 400.9 Q(gion)-.165 E F2(dest_r)2.75 E -.44
(eg)-.407 G(ion_r).44 E(eturn)-.407 E F1(;).916 E F2 -.407(re)72 421.7 S
(ctangle).407 E F1(Speci\214es the rectangle.)30.86 E F2(sr)72 438.6 Q
(c_r)-.407 E -.44(eg)-.407 G(ion).44 E F1(Speci\214es the source re)
25.591 E(gion to be used.)-.165 E F2(dest_r)72 455.5 Q -.44(eg)-.407 G
(ion_r).44 E(eturn)-.407 E F1(Returns the destination re)144 468.5 Q
(gion.)-.165 E 36 464.15 36 475.15 DL 36 462.15 36 473.15 DL 41.5 473.4
36 473.4 DL 43.5 473.4 38 473.4 DL 49 473.4 43.5 473.4 DL(The)72 498.4 Q
F0(XUnionRectW)3.666 E(ithRegion)-.198 E F1
(function updates the destination re)3.666 E
(gion from a union of the speci-)-.165 E
(\214ed rectangle and the speci\214ed source re)72 511.4 Q(gion.)-.165 E
1.76 -.88(To s)72 541.3 T(ubtract tw).88 E 2.75(or)-.11 G -.165(eg)-2.75
G(ions, use).165 E F0(XSubtractRegion)3.666 E F1(.).916 E 36 559.05 36
570.05 DL 36 557.05 36 568.05 DL 41.5 555.3 36 555.3 DL 43.5 555.3 38
555.3 DL 49 555.3 43.5 555.3 DL(XSubtractRe)72 571.2 Q -1.834(gion \()
-.165 F F2(sr).916 E(a)-.165 E F1(,).916 E F2(srb)2.75 E F1(,).916 E F2
(dr_r)2.75 E(eturn)-.407 E F1(\)).916 E(Re)88.5 584.2 Q(gion)-.165 E F2
(sr)2.75 E(a)-.165 E F1(,).916 E F2(srb)2.75 E F1(,).916 E F2(dr_r)2.75
E(eturn)-.407 E F1(;).916 E F2(sr)72 605 Q(a)-.165 E(srb)72 618 Q F1
(Specify the tw)57.942 E 2.75(or)-.11 G -.165(eg)-2.75 G
(ions with which you w).165 E(ant to perform the computation.)-.11 E F2
(dr_r)72 634.9 Q(eturn)-.407 E F1
(Returns the result of the computation.)29.628 E 36 630.55 36 641.55 DL
36 628.55 36 639.55 DL 41.5 639.8 36 639.8 DL 43.5 639.8 38 639.8 DL 49
639.8 43.5 639.8 DL(The)72 664.8 Q F0(XSubtractRegion)3.666 E F1
(function subtracts srb from sra and stores the results in dr_return.)
3.666 E 1.76 -.88(To c)72 694.7 T(alculate the dif).88 E
(ference between the union and intersection of tw)-.275 E 2.75(or)-.11 G
-.165(eg)-2.75 G(ions, use).165 E F0(XXorRegion)3.666 E F1(.).916 E F0
(410)279.75 769 Q 0 Cg EP
%%Page: 411 416
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E .44 LW 36 76.75 36 87.75 DL 36 74.75
36 85.75 DL 41.5 73 36 73 DL 43.5 73 38 73 DL 49 73 43.5 73 DL/F1 11
/Times-Roman@0 SF(XXorRe)72 88.9 Q -1.834(gion \()-.165 F/F2 11
/Times-Italic@0 SF(sr).916 E(a)-.165 E F1(,).916 E F2(srb)2.75 E F1(,)
.916 E F2(dr_r)2.75 E(eturn)-.407 E F1(\)).916 E(Re)88.5 101.9 Q(gion)
-.165 E F2(sr)2.75 E(a)-.165 E F1(,).916 E F2(srb)2.75 E F1(,).916 E F2
(dr_r)2.75 E(eturn)-.407 E F1(;).916 E F2(sr)72 122.7 Q(a)-.165 E(srb)72
135.7 Q F1(Specify the tw)57.942 E 2.75(or)-.11 G -.165(eg)-2.75 G
(ions with which you w).165 E(ant to perform the computation.)-.11 E F2
(dr_r)72 152.6 Q(eturn)-.407 E F1
(Returns the result of the computation.)29.628 E 36 148.25 36 159.25 DL
36 146.25 36 157.25 DL 41.5 157.5 36 157.5 DL 43.5 157.5 38 157.5 DL 49
157.5 43.5 157.5 DL F0 2.75(16.5.4. Determining)72 195.5 R
(if Regions Ar)2.75 E 2.75(eE)-.198 G(mpty or Equal)-2.75 E F1 1.76 -.88
(To d)72 212.4 T(etermine if the speci\214ed re).88 E(gion is empty)
-.165 E 2.75(,u)-.715 G(se)-2.75 E F0(XEmptyRegion)3.666 E F1(.).916 E
36 230.15 36 241.15 DL 36 228.15 36 239.15 DL 41.5 226.4 36 226.4 DL
43.5 226.4 38 226.4 DL 49 226.4 43.5 226.4 DL(Bool XEmptyRe)72 242.3 Q
-1.834(gion \()-.165 F F2(r).916 E F1(\)).916 E(Re)88.5 255.3 Q(gion)
-.165 E F2(r)2.75 E F1(;).916 E F2(r)72 276.1 Q F1(Speci\214es the re)
67.721 E(gion.)-.165 E 36 271.75 36 282.75 DL 36 269.75 36 280.75 DL
41.5 281 36 281 DL 43.5 281 38 281 DL 49 281 43.5 281 DL(The)72 306 Q F0
(XEmptyRegion)3.666 E F1(function returns)3.666 E F0 -.814(Tr)3.666 G
(ue).814 E F1(if the re)3.666 E(gion is empty)-.165 E(.)-.715 E 1.76
-.88(To d)72 335.9 T(etermine if tw).88 E 2.75(or)-.11 G -.165(eg)-2.75
G(ions ha).165 E .33 -.165(ve t)-.22 H(he same of).165 E
(fset, size, and shape, use)-.275 E F0(XEqualRegion)3.666 E F1(.).916 E
36 353.65 36 364.65 DL 36 351.65 36 362.65 DL 41.5 349.9 36 349.9 DL
43.5 349.9 38 349.9 DL 49 349.9 43.5 349.9 DL(Bool XEqualRe)72 365.8 Q
-1.834(gion \()-.165 F F2(r1).916 E F1(,).916 E F2(r2)2.75 E F1(\)).916
E(Re)88.5 378.8 Q(gion)-.165 E F2(r1)2.75 E F1(,).916 E F2(r2)2.75 E F1
(;).916 E F2(r1)72 399.6 Q(r2)72 412.6 Q F1(Specify the tw)62.221 E 2.75
(or)-.11 G -.165(eg)-2.75 G(ions.).165 E 36 408.25 36 419.25 DL 36
406.25 36 417.25 DL 41.5 417.5 36 417.5 DL 43.5 417.5 38 417.5 DL 49
417.5 43.5 417.5 DL(The)72 442.5 Q F0(XEqualRegion)3.666 E F1
(function returns)3.666 E F0 -.814(Tr)3.666 G(ue).814 E F1(if the tw)
3.666 E 2.75(or)-.11 G -.165(eg)-2.75 G(ions ha).165 E .33 -.165(ve t)
-.22 H(he same of).165 E(fset, size, and)-.275 E(shape.)72 455.5 Q F0
2.75(16.5.5. Locating)72 481.5 R 2.75(aP)2.75 G
(oint or a Rectangle in a Region)-2.97 E F1 1.76 -.88(To d)72 498.4 T
(etermine if a speci\214ed point resides in a speci\214ed re).88 E
(gion, use)-.165 E F0(XP)3.666 E(ointInRegion)-.22 E F1(.).916 E 36
516.15 36 527.15 DL 36 514.15 36 525.15 DL 41.5 512.4 36 512.4 DL 43.5
512.4 38 512.4 DL 49 512.4 43.5 512.4 DL(Bool XPointInRe)72 528.3 Q
-1.834(gion \()-.165 F F2(r).916 E F1(,).916 E F2(x)2.75 E F1(,).916 E
F2(y)2.75 E F1(\)).916 E(Re)88.5 541.3 Q(gion)-.165 E F2(r)2.75 E F1(;)
.916 E(int)88.5 554.3 Q F2(x)2.75 E F1(,).916 E F2(y)2.75 E F1(;).916 E
F2(r)72 575.1 Q F1(Speci\214es the re)67.721 E(gion.)-.165 E F2(x)72 592
Q(y)72 605 Q F1
(Specify the x and y coordinates, which de\214ne the point.)67.116 E 36
600.65 36 611.65 DL 36 598.65 36 609.65 DL 41.5 609.9 36 609.9 DL 43.5
609.9 38 609.9 DL 49 609.9 43.5 609.9 DL(The)72 634.9 Q F0(XP)3.666 E
(ointInRegion)-.22 E F1(function returns)3.666 E F0 -.814(Tr)3.666 G(ue)
.814 E F1(if the point \(x, y\) is contained in the re)3.666 E(gion r)
-.165 E(.)-.605 E 1.76 -.88(To d)72 664.8 T
(etermine if a speci\214ed rectangle is inside a re).88 E(gion, use)
-.165 E F0(XRectInRegion)3.666 E F1(.).916 E F0(411)279.75 769 Q 0 Cg EP
%%Page: 412 417
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E .44 LW 36 76.75 36 87.75 DL 36 74.75
36 85.75 DL 41.5 73 36 73 DL 43.5 73 38 73 DL 49 73 43.5 73 DL/F1 11
/Times-Roman@0 SF(int XRectInRe)72 88.9 Q -1.834(gion \()-.165 F/F2 11
/Times-Italic@0 SF(r).916 E F1(,).916 E F2(x)2.75 E F1(,).916 E F2(y)
2.75 E F1(,).916 E F2(width)2.75 E F1(,).916 E F2(height)2.75 E F1(\))
.916 E(Re)88.5 101.9 Q(gion)-.165 E F2(r)2.75 E F1(;).916 E(int)88.5
114.9 Q F2(x)2.75 E F1(,).916 E F2(y)2.75 E F1(;).916 E(unsigned int)
88.5 127.9 Q F2(width)2.75 E F1(,).916 E F2(height)2.75 E F1(;).916 E F2
(r)72 148.7 Q F1(Speci\214es the re)67.721 E(gion.)-.165 E F2(x)72 165.6
Q(y)72 178.6 Q F1(Specify the x and y coordinates, which de\214ne the c\
oordinates of the upper)67.116 E(-left)-.22 E(corner of the rectangle.)
144 191.6 Q F2(width)72 208.5 Q(height)72 221.5 Q F1
(Specify the width and height, which de\214ne the rectangle.)44.5 E 36
217.15 36 228.15 DL 36 215.15 36 226.15 DL 41.5 226.4 36 226.4 DL 43.5
226.4 38 226.4 DL 49 226.4 43.5 226.4 DL(The)72 251.4 Q F0
(XRectInRegion)3.666 E F1(function returns)3.666 E F0(RectangleIn)3.666
E F1(if the rectangle is entirely in the speci\214ed)3.666 E(re)72 264.4
Q(gion,)-.165 E F0(RectangleOut)3.666 E F1
(if the rectangle is entirely out of the speci\214ed re)3.666 E
(gion, and)-.165 E F0(RectangleP)3.666 E(art)-.11 E F1
(if the rectangle is partially in the speci\214ed re)72 277.4 Q(gion.)
-.165 E F0 2.75(16.6. Using)72 303.4 R(Cut Buffers)2.75 E F1(Xlib pro)72
320.3 Q(vides functions to manipulate cut b)-.165 E(uf)-.22 E(fers, a v)
-.275 E(ery simple form of cut-and-paste inter)-.165 E(-client)-.22 E
2.75(communication. Selections)72 333.3 R(are a much more po)2.75 E
(werful and useful mechanism for interchanging)-.275 E(data between cli\
ents \(see section 4.5\) and generally should be used instead of cut b)
72 346.3 Q(uf)-.22 E(fers.)-.275 E(Cut b)72 363.2 Q(uf)-.22 E
(fers are implemented as properties on the \214rst root windo)-.275 E
2.75(wo)-.275 G 2.75(ft)-2.75 G(he display)-2.75 E 5.5(.T)-.715 G(he b)
-5.5 E(uf)-.22 E(fers can)-.275 E(only contain te)72 376.2 Q
(xt, in the STRING encoding.)-.165 E(The te)5.5 E
(xt encoding is not changed by Xlib when)-.165 E(fetching or storing.)72
389.2 Q(Eight b)5.5 E(uf)-.22 E(fers are pro)-.275 E
(vided and can be accessed as a ring or as e)-.165 E(xplicit b)-.165 E
(uf)-.22 E(fers)-.275 E(\(numbered 0 through 7\).)72 402.2 Q 1.76 -.88
(To s)72 432.1 T(tore data in cut b).88 E(uf)-.22 E(fer 0, use)-.275 E
F0(XStor)3.666 E(eBytes)-.198 E F1(.).916 E 36 449.85 36 460.85 DL 36
447.85 36 458.85 DL 41.5 446.1 36 446.1 DL 43.5 446.1 38 446.1 DL 49
446.1 43.5 446.1 DL -1.834(XStoreBytes \()72 462 R F2(display).916 E F1
(,)A F2(bytes)2.75 E F1(,).916 E F2(nbytes)2.75 E F1(\)).916 E
(Display *)88.5 475 Q F2(display)A F1(;).916 E(char *)88.5 488 Q F2
(bytes)A F1(;).916 E(int)88.5 501 Q F2(nbytes)3.666 E F1(;).916 E F2
(display)72 521.8 Q F1(Speci\214es the connection to the X serv)40.221 E
(er)-.165 E(.)-.605 E F2(bytes)72 538.7 Q F1(Speci\214es the bytes, whi\
ch are not necessarily ASCII or null-terminated.)49.395 E F2(nbytes)72
555.6 Q F1(Speci\214es the number of bytes to be stored.)43.895 E 36
551.25 36 562.25 DL 36 549.25 36 560.25 DL 41.5 560.5 36 560.5 DL 43.5
560.5 38 560.5 DL 49 560.5 43.5 560.5 DL(The data can ha)72 585.5 Q .33
-.165(ve e)-.22 H
(mbedded null characters and need not be null-terminated.).165 E
(The cut b)5.5 E(uf)-.22 E(fer')-.275 E(s)-.605 E
(contents can be retrie)72 598.5 Q -.165(ve)-.275 G 2.75(dl).165 G
(ater by an)-2.75 E 2.75(yc)-.165 G(lient calling)-2.75 E F0(XF)3.666 E
(etchBytes)-.275 E F1(.).916 E F0(XStor)72.916 615.4 Q(eBytes)-.198 E F1
(can generate a)3.666 E F0(BadAlloc)3.666 E F1(error)3.666 E(.)-.605 E
1.76 -.88(To s)72 645.3 T(tore data in a speci\214ed cut b).88 E(uf)-.22
E(fer)-.275 E 2.75(,u)-.44 G(se)-2.75 E F0(XStor)3.666 E(eBuffer)-.198 E
F1(.).916 E F0(412)279.75 769 Q 0 Cg EP
%%Page: 413 418
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E .44 LW 36 76.75 36 87.75 DL 36 74.75
36 85.75 DL 41.5 73 36 73 DL 43.5 73 38 73 DL 49 73 43.5 73 DL/F1 11
/Times-Roman@0 SF(XStoreBuf)72 88.9 Q -1.834(fer \()-.275 F/F2 11
/Times-Italic@0 SF(display).916 E F1(,)A F2(bytes)2.75 E F1(,).916 E F2
(nbytes)2.75 E F1(,).916 E F2 -.22(bu)2.75 G -.198(ff).22 G(er).198 E F1
(\)).916 E(Display *)88.5 101.9 Q F2(display)A F1(;).916 E(char *)88.5
114.9 Q F2(bytes)A F1(;).916 E(int)88.5 127.9 Q F2(nbytes)3.666 E F1(;)
.916 E(int)88.5 140.9 Q F2 -.22(bu)2.75 G -.198(ff).22 G(er).198 E F1(;)
.916 E F2(display)72 161.7 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2(bytes)72 178.6 Q F1(Speci\214es the bytes, which are not necessarily\
 ASCII or null-terminated.)49.395 E F2(nbytes)72 195.5 Q F1
(Speci\214es the number of bytes to be stored.)43.895 E F2 -.22(bu)72
212.4 S -.198(ff).22 G(er).198 E F1(Speci\214es the b)46.139 E(uf)-.22 E
(fer in which you w)-.275 E(ant to store the bytes.)-.11 E 36 208.05 36
219.05 DL 36 206.05 36 217.05 DL 41.5 217.3 36 217.3 DL 43.5 217.3 38
217.3 DL 49 217.3 43.5 217.3 DL(If an in)72 242.3 Q -.275(va)-.44 G
(lid b).275 E(uf)-.22 E(fer is speci\214ed, the call has no ef)-.275 E
2.75(fect. The)-.275 F(data can ha)2.75 E .33 -.165(ve e)-.22 H
(mbedded null charac-).165 E(ters and need not be null-terminated.)72
255.3 Q F0(XStor)72.916 272.2 Q(eBuffer)-.198 E F1(can generate a)3.666
E F0(BadAlloc)3.666 E F1(error)3.666 E(.)-.605 E 1.76 -.88(To r)72 302.1
T(eturn data from cut b).88 E(uf)-.22 E(fer 0, use)-.275 E F0(XF)3.666 E
(etchBytes)-.275 E F1(.).916 E 36 319.85 36 330.85 DL 36 317.85 36
328.85 DL 41.5 316.1 36 316.1 DL 43.5 316.1 38 316.1 DL 49 316.1 43.5
316.1 DL(char *XFetchBytes)72 332 Q(\().916 E F2(display).916 E F1(,)A
F2(nbytes_r)2.75 E(eturn)-.407 E F1(\)).916 E(Display *)88.5 345 Q F2
(display)A F1(;).916 E(int *)88.5 358 Q F2(nbytes_r)A(eturn)-.407 E F1
(;).916 E F2(display)72 378.8 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2(nbytes_r)72 395.7 Q(eturn)-.407 E F1
(Returns the number of bytes in the b)11.302 E(uf)-.22 E(fer)-.275 E(.)
-.605 E 36 391.35 36 402.35 DL 36 389.35 36 400.35 DL 41.5 400.6 36
400.6 DL 43.5 400.6 38 400.6 DL 49 400.6 43.5 400.6 DL(The)72 425.6 Q F0
(XF)3.666 E(etchBytes)-.275 E F1
(function returns the number of bytes in the nbytes_return ar)3.666 E
(gument, if the)-.198 E -.22(bu)72 438.6 S -.275(ff).22 G
(er contains data.).275 E
(Otherwise, the function returns NULL and sets nbytes to 0.)5.5 E
(The appropriate)5.5 E
(amount of storage is allocated and the pointer returned.)72 451.6 Q
(The client must free this storage when)5.5 E
(\214nished with it by calling)72 464.6 Q F0(XFr)3.666 E(ee)-.198 E F1
(.).916 E 1.76 -.88(To r)72 494.5 T(eturn data from a speci\214ed cut b)
.88 E(uf)-.22 E(fer)-.275 E 2.75(,u)-.44 G(se)-2.75 E F0(XF)3.666 E
(etchBuffer)-.275 E F1(.).916 E 36 512.25 36 523.25 DL 36 510.25 36
521.25 DL 41.5 508.5 36 508.5 DL 43.5 508.5 38 508.5 DL 49 508.5 43.5
508.5 DL(char *XFetchBuf)72 524.4 Q -1.834(fer \()-.275 F F2(display)
.916 E F1(,)A F2(nbytes_r)2.75 E(eturn)-.407 E F1(,).916 E F2 -.22(bu)
2.75 G -.198(ff).22 G(er).198 E F1(\)).916 E(Display *)88.5 537.4 Q F2
(display)A F1(;).916 E(int *)88.5 550.4 Q F2(nbytes_r)A(eturn)-.407 E F1
(;).916 E(int)88.5 563.4 Q F2 -.22(bu)2.75 G -.198(ff).22 G(er).198 E F1
(;).916 E F2(display)72 584.2 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2(nbytes_r)72 601.1 Q(eturn)-.407 E F1
(Returns the number of bytes in the b)11.302 E(uf)-.22 E(fer)-.275 E(.)
-.605 E F2 -.22(bu)72 618 S -.198(ff).22 G(er).198 E F1
(Speci\214es the b)46.139 E(uf)-.22 E(fer from which you w)-.275 E
(ant the stored data returned.)-.11 E 36 613.65 36 624.65 DL 36 611.65
36 622.65 DL 41.5 622.9 36 622.9 DL 43.5 622.9 38 622.9 DL 49 622.9 43.5
622.9 DL(The)72 647.9 Q F0(XF)3.666 E(etchBuffer)-.275 E F1
(function returns zero to the nbytes_return ar)3.666 E
(gument if there is no data in the)-.198 E -.22(bu)72 660.9 S -.275(ff)
.22 G(er or if an in).275 E -.275(va)-.44 G(lid b).275 E(uf)-.22 E
(fer is speci\214ed.)-.275 E 1.76 -.88(To r)72 690.8 T(otate the cut b)
.88 E(uf)-.22 E(fers, use)-.275 E F0(XRotateBuffers)3.666 E F1(.).916 E
F0(413)279.75 769 Q 0 Cg EP
%%Page: 414 419
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E .44 LW 36 76.75 36 87.75 DL 36 74.75
36 85.75 DL 41.5 73 36 73 DL 43.5 73 38 73 DL 49 73 43.5 73 DL/F1 11
/Times-Roman@0 SF(XRotateBuf)72 88.9 Q -1.834(fers \()-.275 F/F2 11
/Times-Italic@0 SF(display).916 E F1(,)A F2 -.495(ro)2.75 G(tate).495 E
F1(\)).916 E(Display *)88.5 101.9 Q F2(display)A F1(;).916 E(int)88.5
114.9 Q F2 -.495(ro)2.75 G(tate).495 E F1(;).916 E F2(display)72 135.7 Q
F1(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605
E F2 -.495(ro)72 152.6 S(tate).495 E F1(Speci\214es ho)46.216 E 2.75(wm)
-.275 G(uch to rotate the cut b)-2.75 E(uf)-.22 E(fers.)-.275 E 36
148.25 36 159.25 DL 36 146.25 36 157.25 DL 41.5 157.5 36 157.5 DL 43.5
157.5 38 157.5 DL 49 157.5 43.5 157.5 DL(The)72 182.5 Q F0
(XRotateBuffers)3.666 E F1(function rotates the cut b)3.666 E(uf)-.22 E
(fers, such that b)-.275 E(uf)-.22 E(fer 0 becomes b)-.275 E(uf)-.22 E
(fer n, b)-.275 E(uf)-.22 E(fer)-.275 E 2.75(1b)72 195.5 S
(ecomes n + 1 mod 8, and so on.)-2.75 E(This cut b)5.5 E(uf)-.22 E
(fer numbering is global to the display)-.275 E 5.5(.N)-.715 G(ote that)
-5.5 E F0(XRotateBuffers)72.916 208.5 Q F1(generates)3.666 E F0
(BadMatch)3.666 E F1(errors if an)3.666 E 2.75(yo)-.165 G 2.75(ft)-2.75
G(he eight b)-2.75 E(uf)-.22 E(fers ha)-.275 E .33 -.165(ve n)-.22 H
(ot been created.).165 E F0 2.75(16.7. Determining)72 234.5 R(the A)2.75
E(ppr)-.275 E(opriate V)-.198 E(isual T)-.407 E(ype)-.814 E F1 2.75(As)
72 251.4 S(ingle display can support multiple screens.)-2.75 E
(Each screen can ha)5.5 E .33 -.165(ve s)-.22 H -2.365 -.275(ev e).165 H
(ral dif).275 E(ferent visual types)-.275 E(supported at dif)72 264.4 Q
(ferent depths.)-.275 E -1.21(Yo)5.5 G 2.75(uc)1.21 G
(an use the functions described in this section to determine)-2.75 E
(which visual to use for your application.)72 277.4 Q
(The functions in this section use the visual information masks and the)
72 294.3 Q F0(XV)3.666 E(isualInf)-.407 E(o)-.275 E F1(structure,)3.666
E(which is de\214ned in <)72 307.3 Q F0(X11/Xutil.h)A F1 2.75(>a)C
(nd contains:)-2.75 E 36 325.05 36 336.05 DL 36 323.05 36 334.05 DL 41.5
321.3 36 321.3 DL 43.5 321.3 38 321.3 DL 49 321.3 43.5 321.3 DL(/* V)72
337.2 Q(isual information mask bits */)-.66 E(#de\214ne)72 356.7 Q F0
-.407(Vi)125.416 356.7 S(sualNoMask).407 E F1(0x0)321 356.7 Q(#de\214ne)
72 369.7 Q F0 -.407(Vi)125.416 369.7 S(sualIDMask).407 E F1(0x1)321
369.7 Q(#de\214ne)72 382.7 Q F0 -.407(Vi)125.416 382.7 S(sualScr).407 E
(eenMask)-.198 E F1(0x2)321 382.7 Q(#de\214ne)72 395.7 Q F0 -.407(Vi)
125.416 395.7 S(sualDepthMask).407 E F1(0x4)321 395.7 Q(#de\214ne)72
408.7 Q F0 -.407(Vi)125.416 408.7 S(sualClassMask).407 E F1(0x8)321
408.7 Q(#de\214ne)72 421.7 Q F0 -.407(Vi)125.416 421.7 S
(sualRedMaskMask).407 E F1(0x10)321 421.7 Q(#de\214ne)72 434.7 Q F0
-.407(Vi)125.416 434.7 S(sualGr).407 E(eenMaskMask)-.198 E F1(0x20)321
434.7 Q(#de\214ne)72 447.7 Q F0 -.407(Vi)125.416 447.7 S
(sualBlueMaskMask).407 E F1(0x40)321 447.7 Q(#de\214ne)72 460.7 Q F0
-.407(Vi)125.416 460.7 S(sualColormapSizeMask).407 E F1(0x80)321 460.7 Q
(#de\214ne)72 473.7 Q F0 -.407(Vi)125.416 473.7 S(sualBitsP).407 E
(erRGBMask)-.22 E F1(0x100)321 473.7 Q(#de\214ne)72 486.7 Q F0 -.407(Vi)
125.416 486.7 S(sualAllMask).407 E F1(0x1FF)321 486.7 Q(/* V)72 512.7 Q
(alues */)-1.221 E(typedef struct {)72 538.7 Q -.66(Vi)108 551.7 S
(sual *visual;).66 E -.66(Vi)108 564.7 S(sualID visualid;).66 E
(int screen;)108 577.7 Q(unsigned int depth;)108 590.7 Q(int class;)108
603.7 Q(unsigned long red_mask;)108 616.7 Q(unsigned long green_mask;)
108 629.7 Q(unsigned long blue_mask;)108 642.7 Q(int colormap_size;)108
655.7 Q(int bits_per_r)108 668.7 Q(gb;)-.198 E 2.75(}X)72 681.7 S -.66
(Vi)-2.75 G(sualInfo;).66 E 36 683.85 36 694.85 DL 36 681.85 36 692.85
DL 41.5 693.1 36 693.1 DL 43.5 693.1 38 693.1 DL 49 693.1 43.5 693.1 DL
1.76 -.88(To o)72 718.1 T(btain a list of visual information structures\
 that match a speci\214ed template, use).88 E F0(XGetV)3.666 E(isual-)
-.407 E(Inf)72 731.1 Q(o)-.275 E F1(.).916 E F0(414)279.75 769 Q 0 Cg EP
%%Page: 415 420
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E .44 LW 36 76.75 36 87.75 DL 36 74.75
36 85.75 DL 41.5 73 36 73 DL 43.5 73 38 73 DL 49 73 43.5 73 DL/F1 11
/Times-Roman@0 SF(XV)72 88.9 Q(isualInfo *XGetV)-.66 E -1.834
(isualInfo \()-.66 F/F2 11/Times-Italic@0 SF(display).916 E F1(,)A F2
(vinfo_mask)2.75 E F1(,)A F2(vinfo_template)2.75 E F1(,)A F2(nitems_r)
2.75 E(eturn)-.407 E F1(\)).916 E(Display *)88.5 101.9 Q F2(display)A F1
(;).916 E(long)88.5 114.9 Q F2(vinfo_mask)2.75 E F1(;).916 E(XV)88.5
127.9 Q(isualInfo *)-.66 E F2(vinfo_template)A F1(;).916 E(int *)88.5
140.9 Q F2(nitems_r)A(eturn)-.407 E F1(;).916 E F2(display)72 161.7 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2(vinfo_mask)72 178.6 Q F1(Speci\214es the visual mask v)21.895 E
(alue.)-.275 E F2(vinfo_template)72 195.5 Q F1
(Speci\214es the visual attrib)6.616 E
(utes that are to be used in matching the visual structures.)-.22 E F2
(nitems_r)72 212.4 Q(eturn)-.407 E F1
(Returns the number of matching visual structures.)10.686 E 36 208.05 36
219.05 DL 36 206.05 36 217.05 DL 41.5 217.3 36 217.3 DL 43.5 217.3 38
217.3 DL 49 217.3 43.5 217.3 DL(The)72 242.3 Q F0(XGetV)3.666 E
(isualInf)-.407 E(o)-.275 E F1
(function returns a list of visual structures that ha)3.666 E .33 -.165
(ve a)-.22 H(ttrib).165 E(utes equal to the)-.22 E(attrib)72 255.3 Q
(utes speci\214ed by vinfo_template.)-.22 E
(If no visual structures match the template using the speci-)5.5 E
(\214ed vinfo_mask,)72 268.3 Q F0(XGetV)3.666 E(isualInf)-.407 E(o)-.275
E F1(returns a NULL.)3.666 E 1.76 -.88(To f)5.5 H
(ree the data returned by this function,).88 E(use)72 281.3 Q F0(XFr)
3.666 E(ee)-.198 E F1(.).916 E 1.76 -.88(To o)72 311.2 T(btain the visu\
al information that matches the speci\214ed depth and class of the scre\
en, use).88 E F0(XMatchV)72.916 324.2 Q(isualInf)-.407 E(o)-.275 E F1(.)
.916 E 36 341.95 36 352.95 DL 36 339.95 36 350.95 DL 41.5 338.2 36 338.2
DL 43.5 338.2 38 338.2 DL 49 338.2 43.5 338.2 DL(Status XMatchV)72 354.1
Q -1.834(isualInfo \()-.66 F F2(display).916 E F1(,)A F2(scr)2.75 E(een)
-.407 E F1(,)A F2(depth)2.75 E F1(,)A F2(class)2.75 E F1(,)A F2(vinfo_r)
2.75 E(eturn)-.407 E F1(\)).916 E(Display *)88.5 367.1 Q F2(display)A F1
(;).916 E(int)88.5 380.1 Q F2(scr)2.75 E(een)-.407 E F1(;).916 E(int)
88.5 393.1 Q F2(depth)2.75 E F1(;).916 E(int)88.5 406.1 Q F2(class)2.75
E F1(;).916 E(XV)88.5 419.1 Q(isualInfo *)-.66 E F2(vinfo_r)A(eturn)
-.407 E F1(;).916 E F2(display)72 439.9 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2(scr)72 456.8 Q(een)-.407 E F1(Speci\214es the screen.)43.697 E F2
(depth)72 473.7 Q F1(Speci\214es the depth of the screen.)47.558 E F2
(class)72 490.6 Q F1(Speci\214es the class of the screen.)50 E F2
(vinfo_r)72 507.5 Q(eturn)-.407 E F1
(Returns the matched visual information.)17.407 E 36 503.15 36 514.15 DL
36 501.15 36 512.15 DL 41.5 512.4 36 512.4 DL 43.5 512.4 38 512.4 DL 49
512.4 43.5 512.4 DL(The)72 537.4 Q F0(XMatchV)3.666 E(isualInf)-.407 E
(o)-.275 E F1
(function returns the visual information for a visual that matches the)
3.666 E(speci\214ed depth and class for a screen.)72 550.4 Q
(Because multiple visuals that match the speci\214ed depth)5.5 E
(and class can e)72 563.4 Q(xist, the e)-.165 E
(xact visual chosen is unde\214ned.)-.165 E(If a visual is found,)5.5 E
F0(XMatchV)3.666 E(isualInf)-.407 E(o)-.275 E F1
(returns nonzero and the information on the visual to vinfo_return.)72
576.4 Q(Otherwise, when a visual is)5.5 E(not found,)72 589.4 Q F0
(XMatchV)3.666 E(isualInf)-.407 E(o)-.275 E F1(returns zero.)3.666 E F0
2.75(16.8. Manipulating)72 615.4 R(Images)2.75 E F1(Xlib pro)72 632.3 Q
(vides se)-.165 E -.165(ve)-.275 G
(ral functions that perform basic operations on images.).165 E
(All operations on)5.5 E(images are de\214ned using an)72 645.3 Q F0
(XImage)3.666 E F1(structure, as de\214ned in <)3.666 E F0(X11/Xlib)A
(.h)-.44 E F1 2.75(>. Because)B(the number)2.75 E(of dif)72 658.3 Q
(ferent types of image formats can be v)-.275 E(ery lar)-.165 E
(ge, this hides details of image storage properly)-.198 E
(from applications.)72 671.3 Q
(This section describes the functions for generic operations on images.)
72 688.2 Q(Manuf)5.5 E(acturers can pro)-.11 E(vide)-.165 E -.165(ve)72
701.2 S(ry f).165 E(ast implementations of these for the formats freque\
ntly encountered on their hardw)-.11 E(are.)-.11 E
(These functions are neither suf)72 714.2 Q
(\214cient nor desirable to use for general image processing.)-.275 E
(Rather)5.5 E(,)-.44 E(the)72 727.2 Q 2.75(ya)-.165 G(re here to pro)
-2.75 E(vide minimal functions on screen format images.)-.165 E
(The basic operations for)5.5 E F0(415)279.75 769 Q 0 Cg EP
%%Page: 416 421
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E/F1 11/Times-Roman@0 SF
(getting and putting images are)72 85 Q F0(XGetImage)3.666 E F1(and)
3.666 E F0(XPutImage)3.666 E F1(.).916 E(Note that no functions ha)72
101.9 Q .33 -.165(ve b)-.22 H(een de\214ned, as yet, to read and write \
images to and from disk \214les.).165 E(The)72 118.8 Q F0(XImage)3.666 E
F1(structure describes an image as it e)3.666 E(xists in the client')
-.165 E 2.75(sm)-.605 G(emory)-2.75 E 5.5(.T)-.715 G(he user can)-5.5 E
(request that some of the members such as height, width, and xof)72
131.8 Q(fset be changed when the image)-.275 E(is sent to the serv)72
144.8 Q(er)-.165 E 5.5(.N)-.605 G
(ote that bytes_per_line in concert with of)-5.5 E
(fset can be used to e)-.275 E(xtract a sub-)-.165 E(set of the image.)
72 157.8 Q(Other members \(for e)5.5 E(xample, byte order)-.165 E 2.75
(,b)-.44 G(itmap_unit, and so forth\) are charac-)-2.75 E
(teristics of both the image and the serv)72 170.8 Q(er)-.165 E 5.5(.I)
-.605 G 2.75(ft)-5.5 G(hese members dif)-2.75 E
(fer between the image and the)-.275 E(serv)72 183.8 Q(er)-.165 E(,)-.44
E F0(XPutImage)3.666 E F1(mak)3.666 E(es the appropriate con)-.11 E
-.165(ve)-.44 G 2.75(rsions. The).165 F
(\214rst byte of the \214rst line of plane n)2.75 E(must be located at \
the address \(data + \(n * height * bytes_per_line\)\).)72 196.8 Q -.165
(Fo)5.5 G 2.75(rad).165 G(escription of the)-2.75 E F0(XImage)72.916
209.8 Q F1(structure, see section 8.7.)3.666 E 1.76 -.88(To a)72 239.7 T
(llocate an).88 E F0(XImage)3.666 E F1
(structure and initialize it with image format v)3.666 E
(alues from a display)-.275 E 2.75(,u)-.715 G(se)-2.75 E F0(XCr)72.916
252.7 Q(eateImage)-.198 E F1(.).916 E .44 LW 36 270.45 36 281.45 DL 36
268.45 36 279.45 DL 41.5 266.7 36 266.7 DL 43.5 266.7 38 266.7 DL 49
266.7 43.5 266.7 DL(XImage *XCreateImage)72 282.6 Q(\().916 E/F2 11
/Times-Italic@0 SF(display).916 E F1(,)A F2(visual)2.75 E F1(,)A F2
(depth)2.75 E F1(,)A F2(format)2.75 E F1(,)A F2(of)2.75 E(fset)-.198 E
F1(,)A F2(data)2.75 E F1(,)A F2(width)2.75 E F1(,)A F2(height)2.75 E F1
(,).916 E F2(bitmap_pad)2.75 E F1(,)A F2(bytes_per_line)138 295.6 Q F1
(\)).916 E(Display *)88.5 308.6 Q F2(display)A F1(;).916 E -.66(Vi)88.5
321.6 S(sual *).66 E F2(visual)A F1(;).916 E(unsigned int)88.5 334.6 Q
F2(depth)2.75 E F1(;).916 E(int)88.5 347.6 Q F2(format)2.75 E F1(;).916
E(int)88.5 360.6 Q F2(of)2.75 E(fset)-.198 E F1(;).916 E(char *)88.5
373.6 Q F2(data)A F1(;).916 E(unsigned int)88.5 386.6 Q F2(width)2.75 E
F1(;).916 E(unsigned int)88.5 399.6 Q F2(height)2.75 E F1(;).916 E(int)
88.5 412.6 Q F2(bitmap_pad)2.75 E F1(;).916 E(int)88.5 425.6 Q F2
(bytes_per_line)2.75 E F1(;).916 E F2(display)72 446.4 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2(visual)72 463.3 Q F1(Speci\214es the)45.721 E F0 -.407(Vi)3.666 G
(sual).407 E F1(structure.)3.666 E F2(depth)72 480.2 Q F1
(Speci\214es the depth of the image.)47.558 E F2(format)72 497.1 Q F1
(Speci\214es the format for the image.)42.663 E -1.21(Yo)5.5 G 2.75(uc)
1.21 G(an pass)-2.75 E F0(XYBitmap)3.666 E F1(,).916 E F0(XYPixmap)3.666
E F1 2.75(,o).916 G(r)-2.75 E F0(ZPixmap)144.916 510.1 Q F1(.).916 E F2
(of)72 527 Q(fset)-.198 E F1(Speci\214es the number of pix)48.361 E
(els to ignore at the be)-.165 E(ginning of the scanline.)-.165 E F2
(data)72 543.9 Q F1(Speci\214es the image data.)52.442 E F2(width)72
560.8 Q F1(Speci\214es the width of the image, in pix)47.547 E(els.)
-.165 E F2(height)72 577.7 Q F1
(Speci\214es the height of the image, in pix)44.5 E(els.)-.165 E F2
(bitmap_pad)72 594.6 Q F1
(Speci\214es the quantum of a scanline \(8, 16, or 32\).)19.442 E
(In other w)5.5 E(ords, the start of one)-.11 E
(scanline is separated in client memory from the start of the ne)144
607.6 Q(xt scanline by an)-.165 E(inte)144 620.6 Q
(ger multiple of this man)-.165 E 2.75(yb)-.165 G(its.)-2.75 E F2
(bytes_per_line)72 637.5 Q F1(Speci\214es the number of bytes in the cl\
ient image between the start of one scan-)7.232 E
(line and the start of the ne)144 650.5 Q(xt.)-.165 E 36 646.15 36
657.15 DL 36 644.15 36 655.15 DL 41.5 655.4 36 655.4 DL 43.5 655.4 38
655.4 DL 49 655.4 43.5 655.4 DL(The)72 680.4 Q F0(XCr)3.666 E(eateImage)
-.198 E F1(function allocates the memory needed for an)3.666 E F0
(XImage)3.666 E F1(structure for the spec-)3.666 E(i\214ed display b)72
693.4 Q(ut does not allocate space for the image itself.)-.22 E(Rather)
5.5 E 2.75(,i)-.44 G 2.75(ti)-2.75 G(nitializes the structure)-2.75 E
(byte-order)72 706.4 Q 2.75(,b)-.44 G(it-order)-2.75 E 2.75(,a)-.44 G
(nd bitmap-unit v)-2.75 E
(alues from the display and returns a pointer to the)-.275 E F0(XIm-)
3.666 E(age)72 719.4 Q F1 2.75(structure. The)3.666 F
(red, green, and blue mask v)2.75 E
(alues are de\214ned for Z format images only and are)-.275 E(deri)72
732.4 Q -.165(ve)-.275 G 2.75(df).165 G(rom the)-2.75 E F0 -.407(Vi)
3.666 G(sual).407 E F1(structure passed in.)3.666 E(Other v)5.5 E
(alues also are passed in.)-.275 E(The of)5.5 E(fset permits)-.275 E F0
(416)279.75 769 Q 0 Cg EP
%%Page: 417 422
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E/F1 11/Times-Roman@0 SF(the rapid disp\
laying of the image without requiring each scanline to be shifted into \
position.)72 85 Q(If)5.5 E(you pass a zero v)72 98 Q(alue in bytes_per_\
line, Xlib assumes that the scanlines are contiguous in mem-)-.275 E
(ory and calculates the v)72 111 Q(alue of bytes_per_line itself.)-.275
E(Note that when the image is created using)72 127.9 Q F0(XCr)3.666 E
(eateImage)-.198 E F1(,).916 E F0(XGetImage)3.666 E F1 2.75(,o).916 G(r)
-2.75 E F0(XSubImage)3.666 E F1 2.75(,t).916 G(he)-2.75 E(destro)72
140.9 Q 2.75(yp)-.11 G(rocedure that the)-2.75 E F0(XDestr)3.666 E
(oyImage)-.198 E F1
(function calls frees both the image structure and the)3.666 E
(data pointed to by the image structure.)72 153.9 Q
(The basic functions used to get a pix)72 170.8 Q(el, set a pix)-.165 E
(el, create a subimage, and add a constant v)-.165 E(alue to)-.275 E
(an image are de\214ned in the image object.)72 183.8 Q
(The functions in this section are really macro in)5.5 E -.22(vo)-.44 G
(ca-).22 E
(tions of the functions in the image object and are de\214ned in <)72
196.8 Q F0(X11/Xutil.h)A F1(>.)A 1.76 -.88(To o)72 226.7 T(btain a pix)
.88 E(el v)-.165 E(alue in an image, use)-.275 E F0(XGetPixel)3.666 E F1
(.).916 E .44 LW 36 244.45 36 255.45 DL 36 242.45 36 253.45 DL 41.5
240.7 36 240.7 DL 43.5 240.7 38 240.7 DL 49 240.7 43.5 240.7 DL
(unsigned long XGetPix)72 256.6 Q -1.834(el \()-.165 F/F2 11
/Times-Italic@0 SF(xima).916 E -.11(ge)-.11 G F1(,).11 E F2(x)2.75 E F1
(,)A F2(y)2.75 E F1(\)).916 E(XImage *)88.5 269.6 Q F2(xima)A -.11(ge)
-.11 G F1(;)1.026 E(int)88.5 282.6 Q F2(x)2.75 E F1(;).916 E(int)88.5
295.6 Q F2(y)2.75 E F1(;).916 E F2(xima)72 316.4 Q -.11(ge)-.11 G F1
(Speci\214es the image.)40.562 E F2(x)72 333.3 Q(y)72 346.3 Q F1
(Specify the x and y coordinates.)67.116 E 36 341.95 36 352.95 DL 36
339.95 36 350.95 DL 41.5 351.2 36 351.2 DL 43.5 351.2 38 351.2 DL 49
351.2 43.5 351.2 DL(The)72 376.2 Q F0(XGetPixel)3.666 E F1
(function returns the speci\214ed pix)3.666 E(el from the named image.)
-.165 E(The pix)5.5 E(el v)-.165 E(alue is)-.275 E(returned in normaliz\
ed format \(that is, the least signi\214cant byte of the long is the le\
ast signi\214cant)72 389.2 Q(byte of the pix)72 402.2 Q 2.75(el\). The)
-.165 F(image must contain the x and y coordinates.)2.75 E 1.76 -.88
(To s)72 432.1 T(et a pix).88 E(el v)-.165 E(alue in an image, use)-.275
E F0(XPutPixel)3.666 E F1(.).916 E 36 449.85 36 460.85 DL 36 447.85 36
458.85 DL 41.5 446.1 36 446.1 DL 43.5 446.1 38 446.1 DL 49 446.1 43.5
446.1 DL(XPutPix)72 462 Q -1.834(el \()-.165 F F2(xima).916 E -.11(ge)
-.11 G F1(,).11 E F2(x)2.75 E F1(,)A F2(y)2.75 E F1(,)A F2(pixel)2.75 E
F1(\)).916 E(XImage *)88.5 475 Q F2(xima)A -.11(ge)-.11 G F1(;)1.026 E
(int)88.5 488 Q F2(x)2.75 E F1(;).916 E(int)88.5 501 Q F2(y)2.75 E F1(;)
.916 E(unsigned long)88.5 514 Q F2(pixel)2.75 E F1(;).916 E F2(xima)72
534.8 Q -.11(ge)-.11 G F1(Speci\214es the image.)40.562 E F2(x)72 551.7
Q(y)72 564.7 Q F1(Specify the x and y coordinates.)67.116 E F2(pixel)72
581.6 Q F1(Speci\214es the ne)50.616 E 2.75(wp)-.275 G(ix)-2.75 E(el v)
-.165 E(alue.)-.275 E 36 577.25 36 588.25 DL 36 575.25 36 586.25 DL 41.5
586.5 36 586.5 DL 43.5 586.5 38 586.5 DL 49 586.5 43.5 586.5 DL(The)72
611.5 Q F0(XPutPixel)3.666 E F1(function o)3.666 E -.165(ve)-.165 G
(rwrites the pix).165 E(el in the named image with the speci\214ed pix)
-.165 E(el v)-.165 E(alue.)-.275 E(The input pix)72 624.5 Q(el v)-.165 E
(alue must be in normalized format \(that is, the least signi\214cant b\
yte of the long is)-.275 E(the least signi\214cant byte of the pix)72
637.5 Q 2.75(el\). The)-.165 F
(image must contain the x and y coordinates.)2.75 E 1.76 -.88(To c)72
667.4 T(reate a subimage, use).88 E F0(XSubImage)3.666 E F1(.).916 E F0
(417)279.75 769 Q 0 Cg EP
%%Page: 418 423
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E .44 LW 36 76.75 36 87.75 DL 36 74.75
36 85.75 DL 41.5 73 36 73 DL 43.5 73 38 73 DL 49 73 43.5 73 DL/F1 11
/Times-Roman@0 SF(XImage *XSubImage)72 88.9 Q(\().916 E/F2 11
/Times-Italic@0 SF(xima).916 E -.11(ge)-.11 G F1(,).11 E F2(x)2.75 E F1
(,)A F2(y)2.75 E F1(,)A F2(subima)2.75 E -.11(ge)-.11 G(_width).11 E F1
(,)A F2(subima)2.75 E -.11(ge)-.11 G(_height).11 E F1(\)).916 E
(XImage *)88.5 101.9 Q F2(xima)A -.11(ge)-.11 G F1(;)1.026 E(int)88.5
114.9 Q F2(x)2.75 E F1(;).916 E(int)88.5 127.9 Q F2(y)2.75 E F1(;).916 E
(unsigned int)88.5 140.9 Q F2(subima)2.75 E -.11(ge)-.11 G(_width).11 E
F1(;).916 E(unsigned int)88.5 153.9 Q F2(subima)2.75 E -.11(ge)-.11 G
(_height).11 E F1(;).916 E F2(xima)72 174.7 Q -.11(ge)-.11 G F1
(Speci\214es the image.)40.562 E F2(x)72 191.6 Q(y)72 204.6 Q F1
(Specify the x and y coordinates.)67.116 E F2(subima)72 221.5 Q -.11(ge)
-.11 G(_width).11 E F1(Speci\214es the width of the ne)144 234.5 Q 2.75
(ws)-.275 G(ubimage, in pix)-2.75 E(els.)-.165 E F2(subima)72 251.4 Q
-.11(ge)-.11 G(_height).11 E F1(Speci\214es the height of the ne)144
264.4 Q 2.75(ws)-.275 G(ubimage, in pix)-2.75 E(els.)-.165 E 36 260.05
36 271.05 DL 36 258.05 36 269.05 DL 41.5 269.3 36 269.3 DL 43.5 269.3 38
269.3 DL 49 269.3 43.5 269.3 DL(The)72 294.3 Q F0(XSubImage)3.666 E F1
(function creates a ne)3.666 E 2.75(wi)-.275 G
(mage that is a subsection of an e)-2.75 E(xisting one.)-.165 E
(It allocates)5.5 E(the memory necessary for the ne)72 307.3 Q(w)-.275 E
F0(XImage)3.666 E F1(structure and returns a pointer to the ne)3.666 E
2.75(wi)-.275 G 2.75(mage. The)-2.75 F(data is copied from the source i\
mage, and the image must contain the rectangle de\214ned by x, y)72
320.3 Q(,)-.715 E(subimage_width, and subimage_height.)72 333.3 Q 1.76
-.88(To i)72 363.2 T(ncrement each pix).88 E
(el in an image by a constant v)-.165 E(alue, use)-.275 E F0(XAddPixel)
3.666 E F1(.).916 E 36 380.95 36 391.95 DL 36 378.95 36 389.95 DL 41.5
377.2 36 377.2 DL 43.5 377.2 38 377.2 DL 49 377.2 43.5 377.2 DL(XAddPix)
72 393.1 Q -1.834(el \()-.165 F F2(xima).916 E -.11(ge)-.11 G F1(,).11 E
F2(value)2.75 E F1(\)).916 E(XImage *)88.5 406.1 Q F2(xima)A -.11(ge)
-.11 G F1(;)1.026 E(long)88.5 419.1 Q F2(value)2.75 E F1(;).916 E F2
(xima)72 439.9 Q -.11(ge)-.11 G F1(Speci\214es the image.)40.562 E F2
(value)72 456.8 Q F1(Speci\214es the constant v)48.174 E
(alue that is to be added.)-.275 E 36 452.45 36 463.45 DL 36 450.45 36
461.45 DL 41.5 461.7 36 461.7 DL 43.5 461.7 38 461.7 DL 49 461.7 43.5
461.7 DL(The)72 486.7 Q F0(XAddPixel)3.666 E F1
(function adds a constant v)3.666 E(alue to e)-.275 E -.165(ve)-.275 G
(ry pix).165 E(el in an image.)-.165 E(It is useful when you)5.5 E(ha)72
499.7 Q .33 -.165(ve a b)-.22 H(ase pix).165 E(el v)-.165 E(alue from a\
llocating color resources and need to manipulate the image to that)-.275
E(form.)72 512.7 Q 1.76 -.88(To d)72 542.6 T
(eallocate the memory allocated in a pre).88 E(vious call to)-.275 E F0
(XCr)3.666 E(eateImage)-.198 E F1 2.75(,u).916 G(se)-2.75 E F0(XDestr)
3.666 E(oyImage)-.198 E F1(.).916 E 36 560.35 36 571.35 DL 36 558.35 36
569.35 DL 41.5 556.6 36 556.6 DL 43.5 556.6 38 556.6 DL 49 556.6 43.5
556.6 DL(XDestro)72 572.5 Q -1.834(yImage \()-.11 F F2(xima).916 E -.11
(ge)-.11 G F1(\))1.026 E(XImage *)94 585.5 Q F2(xima).916 E -.11(ge)-.11
G F1(;)1.026 E F2(xima)72 606.3 Q -.11(ge)-.11 G F1
(Speci\214es the image.)40.562 E 36 601.95 36 612.95 DL 36 599.95 36
610.95 DL 41.5 611.2 36 611.2 DL 43.5 611.2 38 611.2 DL 49 611.2 43.5
611.2 DL(The)72 636.2 Q F0(XDestr)3.666 E(oyImage)-.198 E F1
(function deallocates the memory associated with the)3.666 E F0(XImage)
3.666 E F1(structure.)3.666 E(Note that when the image is created using)
72 653.1 Q F0(XCr)3.666 E(eateImage)-.198 E F1(,).916 E F0(XGetImage)
3.666 E F1 2.75(,o).916 G(r)-2.75 E F0(XSubImage)3.666 E F1 2.75(,t).916
G(he)-2.75 E(destro)72 666.1 Q 2.75(yp)-.11 G(rocedure that this macro \
calls frees both the image structure and the data pointed to by)-2.75 E
(the image structure.)72 679.1 Q F0(418)279.75 769 Q 0 Cg EP
%%Page: 419 424
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E 2.75(16.9. Manipulating)72 85 R
(Bitmaps)2.75 E/F1 11/Times-Roman@0 SF(Xlib pro)72 101.9 Q
(vides functions that you can use to read a bitmap from a \214le, sa)
-.165 E .33 -.165(ve a b)-.22 H(itmap to a \214le, or).165 E
(create a bitmap.)72 114.9 Q(This section describes those functions tha\
t transfer bitmaps to and from the)5.5 E(client')72 127.9 Q 2.75<738c>
-.605 G(le system, thus allo)-2.75 E
(wing their reuse in a later connection \(for e)-.275 E
(xample, from an entirely)-.165 E(dif)72 140.9 Q
(ferent client or to a dif)-.275 E(ferent display or serv)-.275 E(er\).)
-.165 E(The X v)72 157.8 Q(ersion 11 bitmap \214le format is:)-.165 E
.44 LW 36 179.45 36 190.45 DL 36 177.45 36 188.45 DL 41.5 175.7 36 175.7
DL 43.5 175.7 38 175.7 DL 49 175.7 43.5 175.7 DL(#de\214ne)72 194.2 Q/F2
11/Times-Italic@0 SF(name)2.75 E F1(_width)A F2(width)2.75 E F1
(#de\214ne)72 207.2 Q F2(name)2.75 E F1(_height)A F2(height)2.75 E F1
(#de\214ne)72 220.2 Q F2(name)2.75 E F1(_x_hot)A F2(x)2.75 E F1
(#de\214ne)72 233.2 Q F2(name)2.75 E F1(_y_hot)A F2(y)2.75 E F1
(static unsigned char)72 246.2 Q F2(name)2.75 E F1(_bits[] = { 0x)A F2
(NN)A F1(,... })A 36 248.35 36 259.35 DL 36 246.35 36 257.35 DL 41.5
257.6 36 257.6 DL 43.5 257.6 38 257.6 DL 49 257.6 43.5 257.6 DL
(The lines for the v)72 282.6 Q
(ariables ending with _x_hot and _y_hot suf)-.275 E<8c78>-.275 E
(es are optional because the)-.165 E 2.75(ya)-.165 G(re)-2.75 E
(present only if a hotspot has been de\214ned for this bitmap.)72 295.6
Q(The lines for the other v)5.5 E(ariables are)-.275 E 2.75
(required. The)72 308.6 R -.11(wo)2.75 G(rd `).11 E(`unsigned')-.814 E
2.75('i)-.814 G 2.75(so)-2.75 G
(ptional; that is, the type of the _bits array can be `)-2.75 E(`char')
-.814 E 2.75('o)-.814 G(r)-2.75 E -.814(``)72 321.6 S(unsigned char')
.814 E 2.75('. The)-.814 F(_bits array must be lar)2.75 E
(ge enough to contain the size bitmap.)-.198 E(The bitmap)5.5 E
(unit is 8.)72 334.6 Q 1.76 -.88(To r)72 364.5 T
(ead a bitmap from a \214le and store it in a pixmap, use).88 E F0
(XReadBitmapFile)3.666 E F1(.).916 E 36 382.25 36 393.25 DL 36 380.25 36
391.25 DL 41.5 378.5 36 378.5 DL 43.5 378.5 38 378.5 DL 49 378.5 43.5
378.5 DL(int XReadBitmapFile\()72 394.4 Q F2(display).916 E F1(,)A F2(d)
2.75 E F1(,)A F2(\214lename)2.75 E F1(,)A F2(width_r)2.75 E(eturn)-.407
E F1(,)A F2(height_r)2.75 E(eturn)-.407 E F1(,)A F2(bitmap_r)2.75 E
(eturn)-.407 E F1(,)A F2(x_hot_r)2.75 E(eturn)-.407 E F1(,)A F2(y_hot_r)
135.25 407.4 Q(eturn)-.407 E F1(\)).916 E(Display *)88.5 420.4 Q F2
(display)A F1(;).916 E(Dra)88.5 433.4 Q -.11(wa)-.165 G(ble).11 E F2(d)
2.75 E F1(;).916 E(char *)88.5 446.4 Q F2(\214lename)A F1(;).916 E
(unsigned int *)88.5 459.4 Q F2(width_r)A(eturn)-.407 E F1 2.75(,*)C F2
(height_r)-2.75 E(eturn)-.407 E F1(;).916 E(Pixmap *)88.5 472.4 Q F2
(bitmap_r)A(eturn)-.407 E F1(;).916 E(int *)88.5 485.4 Q F2(x_hot_r)A
(eturn)-.407 E F1 2.75(,*)C F2(y_hot_r)-2.75 E(eturn)-.407 E F1(;).916 E
F2(display)72 506.2 Q F1(Speci\214es the connection to the X serv)40.221
E(er)-.165 E(.)-.605 E F2(d)72 523.1 Q F1(Speci\214es the dra)66.5 E
-.11(wa)-.165 G(ble that indicates the screen.).11 E F2(\214lename)72
540 Q F1(Speci\214es the \214le name to use.)34.732 E
(The format of the \214le name is operating-system)5.5 E(dependent.)144
553 Q F2(width_r)72 569.9 Q(eturn)-.407 E(height_r)72 582.9 Q(eturn)
-.407 E F1(Return the width and height v)11.907 E
(alues of the read in bitmap \214le.)-.275 E F2(bitmap_r)72 599.8 Q
(eturn)-.407 E F1(Returns the bitmap that is created.)8.849 E F2
(x_hot_r)72 616.7 Q(eturn)-.407 E(y_hot_r)72 629.7 Q(eturn)-.407 E F1
(Return the hotspot coordinates.)14.965 E 36 625.35 36 636.35 DL 36
623.35 36 634.35 DL 41.5 634.6 36 634.6 DL 43.5 634.6 38 634.6 DL 49
634.6 43.5 634.6 DL(The)72 659.6 Q F0(XReadBitmapFile)3.666 E F1
(function reads in a \214le containing a bitmap.)3.666 E
(The \214le is parsed in the)5.5 E(encoding of the current locale.)72
672.6 Q
(The ability to read other than the standard format is implementa-)5.5 E
2.75(tion-dependent. If)72 685.6 R(the \214le cannot be opened,)2.75 E
F0(XReadBitmapFile)3.666 E F1(returns)3.666 E F0(BitmapOpenF)3.666 E
(ailed)-.275 E F1 5.5(.I).916 G(f)-5.5 E(the \214le can be opened b)72
698.6 Q(ut does not contain v)-.22 E(alid bitmap data, it returns)-.275
E F0(BitmapFileIn)3.666 E -.11(va)-.44 G(lid).11 E F1 5.5(.I).916 G(f)
-5.5 E(insuf)72 711.6 Q(\214cient w)-.275 E
(orking storage is allocated, it returns)-.11 E F0(BitmapNoMemory)3.666
E F1 5.5(.I).916 G 2.75(ft)-5.5 G(he \214le is readable and)-2.75 E
-.275(va)72 724.6 S(lid, it returns).275 E F0(BitmapSuccess)3.666 E F1
(.).916 E F0(419)279.75 769 Q 0 Cg EP
%%Page: 420 425
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E(XReadBitmapFile)72.916 85 Q/F1 11
/Times-Roman@0 SF(returns the bitmap')3.666 E 2.75(sh)-.605 G
(eight and width, as read from the \214le, to width_return)-2.75 E
(and height_return.)72 98 Q(It then creates a pixmap of the appropriate\
 size, reads the bitmap data from the)5.5 E
(\214le into the pixmap, and assigns the pixmap to the caller')72 111 Q
2.75(sv)-.605 G(ariable bitmap.)-3.025 E(The caller must free)5.5 E
(the bitmap using)72 124 Q F0(XFr)3.666 E(eePixmap)-.198 E F1
(when \214nished.)3.666 E(If)5.5 E/F2 11/Times-Italic@0 SF(name)2.75 E
F1(_x_hot and)A F2(name)2.75 E F1(_y_hot e)A(xist,)-.165 E F0(XRead-)
3.666 E(BitmapFile)72 137 Q F1(returns them to x_hot_return and y_hot_r\
eturn; otherwise, it returns \2551,\2551.)3.666 E F0(XReadBitmapFile)
72.916 153.9 Q F1(can generate)3.666 E F0(BadAlloc)3.666 E F1(,).916 E
F0(BadDrawable)3.666 E F1 2.75(,a).916 G(nd)-2.75 E F0(BadGC)3.666 E F1
(errors.)3.666 E 1.76 -.88(To r)72 183.8 T
(ead a bitmap from a \214le and return it as data, use).88 E F0
(XReadBitmapFileData)3.666 E F1(.).916 E .44 LW 36 201.55 36 212.55 DL
36 199.55 36 210.55 DL 41.5 197.8 36 197.8 DL 43.5 197.8 38 197.8 DL 49
197.8 43.5 197.8 DL(int XReadBitmapFileData\()72 213.7 Q F2(\214lename)
.916 E F1(,)A F2(width_r)2.75 E(eturn)-.407 E F1(,)A F2(height_r)2.75 E
(eturn)-.407 E F1(,)A F2(data_r)2.75 E(eturn)-.407 E F1(,)A F2(x_hot_r)
2.75 E(eturn)-.407 E F1(,)A F2(y_hot_r)2.75 E(eturn)-.407 E F1(\)).916 E
(char *)88.5 226.7 Q F2(\214lename)A F1(;).916 E(unsigned int *)88.5
239.7 Q F2(width_r)A(eturn)-.407 E F1 2.75(,*)C F2(height_r)-2.75 E
(eturn)-.407 E F1(;).916 E(unsigned char *)88.5 252.7 Q F2(data_r)A
(eturn)-.407 E F1(;).916 E(int *)88.5 265.7 Q F2(x_hot_r)A(eturn)-.407 E
F1 2.75(,*)C F2(y_hot_r)-2.75 E(eturn)-.407 E F1(;).916 E F2(\214lename)
72 286.5 Q F1(Speci\214es the \214le name to use.)34.732 E
(The format of the \214le name is operating-system)5.5 E(dependent.)144
299.5 Q F2(width_r)72 316.4 Q(eturn)-.407 E(height_r)72 329.4 Q(eturn)
-.407 E F1(Return the width and height v)11.907 E
(alues of the read in bitmap \214le.)-.275 E F2(data_r)72 346.3 Q(eturn)
-.407 E F1(Returns the bitmap data.)19.849 E F2(x_hot_r)72 363.2 Q
(eturn)-.407 E(y_hot_r)72 376.2 Q(eturn)-.407 E F1
(Return the hotspot coordinates.)14.965 E 36 371.85 36 382.85 DL 36
369.85 36 380.85 DL 41.5 381.1 36 381.1 DL 43.5 381.1 38 381.1 DL 49
381.1 43.5 381.1 DL(The)72 406.1 Q F0(XReadBitmapFileData)3.666 E F1
(function reads in a \214le containing a bitmap, in the same manner as)
3.666 E F0(XReadBitmapFile)72.916 419.1 Q F1 2.75(,b).916 G
(ut returns the data directly rather than creating a pixmap in the serv)
-2.97 E(er)-.165 E 5.5(.T)-.605 G(he)-5.5 E(bitmap data is returned in \
data_return; the client must free this storage when \214nished with it \
by)72 432.1 Q(calling)72 445.1 Q F0(XFr)3.666 E(ee)-.198 E F1 5.5(.T)
.916 G(he status and other return v)-5.5 E(alues are the same as for)
-.275 E F0(XReadBitmapFile)3.666 E F1(.).916 E 1.76 -.88(To w)72 475 T
(rite out a bitmap from a pixmap to a \214le, use).88 E F0
(XWriteBitmapFile)3.666 E F1(.).916 E F0(420)279.75 769 Q 0 Cg EP
%%Page: 421 426
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E .44 LW 36 76.75 36 87.75 DL 36 74.75
36 85.75 DL 41.5 73 36 73 DL 43.5 73 38 73 DL 49 73 43.5 73 DL/F1 11
/Times-Roman@0 SF(int XWriteBitmapFile\()72 88.9 Q/F2 11/Times-Italic@0
SF(display).916 E F1(,)A F2(\214lename)2.75 E F1(,)A F2(bitmap)2.75 E F1
(,)A F2(width)2.75 E F1(,)A F2(height)2.75 E F1(,)A F2(x_hot)2.75 E F1
(,)A F2(y_hot)2.75 E F1(\)).916 E(Display *)88.5 101.9 Q F2(display)A F1
(;).916 E(char *)88.5 114.9 Q F2(\214lename)A F1(;).916 E(Pixmap)88.5
127.9 Q F2(bitmap)2.75 E F1(;).916 E(unsigned int)88.5 140.9 Q F2(width)
2.75 E F1(,)A F2(height)2.75 E F1(;).916 E(int)88.5 153.9 Q F2(x_hot)
2.75 E F1(,)A F2(y_hot)2.75 E F1(;).916 E F2(display)72 174.7 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2(\214lename)72 191.6 Q F1(Speci\214es the \214le name to use.)34.732 E
(The format of the \214le name is operating-system)5.5 E(dependent.)144
204.6 Q F2(bitmap)72 221.5 Q F1(Speci\214es the bitmap.)41.442 E F2
(width)72 238.4 Q(height)72 251.4 Q F1(Specify the width and height.)
44.5 E F2(x_hot)72 268.3 Q(y_hot)72 281.3 Q F1(Specify where to place t\
he hotspot coordinates \(or \2551,\2551 if none are present\) in)47.558
E(the \214le.)144 294.3 Q 36 289.95 36 300.95 DL 36 287.95 36 298.95 DL
41.5 299.2 36 299.2 DL 43.5 299.2 38 299.2 DL 49 299.2 43.5 299.2 DL
(The)72 324.2 Q F0(XWriteBitmapFile)3.666 E F1
(function writes a bitmap out to a \214le in the X V)3.666 E
(ersion 11 format.)-1.221 E(The)5.5 E
(name used in the output \214le is deri)72 337.2 Q -.165(ve)-.275 G 2.75
(df).165 G(rom the \214le name by deleting the directory pre\214x.)-2.75
E(The)5.5 E(\214le is written in the encoding of the current locale.)72
350.2 Q(If the \214le cannot be opened for writing, it)5.5 E(returns)72
363.2 Q F0(BitmapOpenF)3.666 E(ailed)-.275 E F1 5.5(.I).916 G 2.75(fi)
-5.5 G(nsuf)-2.75 E(\214cient memory is allocated,)-.275 E F0
(XWriteBitmapFile)3.666 E F1(returns)3.666 E F0(BitmapNoMemory)72.916
376.2 Q F1 2.75(;o).916 G(therwise, on no error)-2.75 E 2.75(,i)-.44 G
2.75(tr)-2.75 G(eturns)-2.75 E F0(BitmapSuccess)3.666 E F1 5.5(.I).916 G
2.75(fx)-5.5 G(_hot and y_hot are)-2.75 E(not \2551, \2551,)72 389.2 Q
F0(XWriteBitmapFile)3.666 E F1
(writes them out as the hotspot coordinates for the bitmap.)3.666 E F0
(XWriteBitmapFile)72.916 406.1 Q F1(can generate)3.666 E F0(BadDrawable)
3.666 E F1(and)3.666 E F0(BadMatch)3.666 E F1(errors.)3.666 E 1.76 -.88
(To c)72 436 T
(reate a pixmap and then store bitmap-format data into it, use).88 E F0
(XCr)3.666 E(eatePixmapFr)-.198 E(omBitmap-)-.198 E(Data)72 449 Q F1(.)
.916 E 36 466.75 36 477.75 DL 36 464.75 36 475.75 DL 41.5 463 36 463 DL
43.5 463 38 463 DL 49 463 43.5 463 DL
(Pixmap XCreatePixmapFromBitmapData)72 478.9 Q(\().916 E F2(display).916
E F1(,)A F2(d)2.75 E F1(,)A F2(data)2.75 E F1(,)A F2(width)2.75 E F1(,)A
F2(height)2.75 E F1(,)A F2(fg)2.75 E F1(,)A F2(bg)2.75 E F1(,)A F2
(depth)2.75 E F1(\)).916 E(Display *)85.75 491.9 Q F2(display)A F1(;)
.916 E(Dra)85.75 504.9 Q -.11(wa)-.165 G(ble).11 E F2(d)2.75 E F1(;).916
E(char *)85.75 517.9 Q F2(data)A F1(;).916 E(unsigned int)85.75 530.9 Q
F2(width)2.75 E F1(,)A F2(height)2.75 E F1(;).916 E(unsigned long)85.75
543.9 Q F2(fg)2.75 E F1(,)A F2(bg)2.75 E F1(;).916 E(unsigned int)85.75
556.9 Q F2(depth)2.75 E F1(;).916 E F2(display)72 577.7 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2(d)72 594.6 Q F1(Speci\214es the dra)66.5 E -.11(wa)-.165 G
(ble that indicates the screen.).11 E F2(data)72 611.5 Q F1
(Speci\214es the data in bitmap format.)52.442 E F2(width)72 628.4 Q
(height)72 641.4 Q F1(Specify the width and height.)44.5 E F2(fg)72
658.3 Q(bg)72 671.3 Q F1(Specify the fore)61 E
(ground and background pix)-.165 E(el v)-.165 E(alues to use.)-.275 E F2
(depth)72 688.2 Q F1(Speci\214es the depth of the pixmap.)47.558 E 36
683.85 36 694.85 DL 36 681.85 36 692.85 DL 41.5 693.1 36 693.1 DL 43.5
693.1 38 693.1 DL 49 693.1 43.5 693.1 DL(The)72 718.1 Q F0(XCr)3.666 E
(eatePixmapFr)-.198 E(omBitmapData)-.198 E F1
(function creates a pixmap of the gi)3.666 E -.165(ve)-.275 G 2.75(nd)
.165 G(epth and then)-2.75 E(does a bitmap-format)72 731.1 Q F0
(XPutImage)3.666 E F1(of the data into it.)3.666 E
(The depth must be supported by the screen)5.5 E F0(421)279.75 769 Q 0
Cg EP
%%Page: 422 427
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E/F1 11/Times-Roman@0 SF
(of the speci\214ed dra)72 85 Q -.11(wa)-.165 G(ble, or a).11 E F0
(BadMatch)3.666 E F1(error results.)3.666 E F0(XCr)72.916 101.9 Q
(eatePixmapFr)-.198 E(omBitmapData)-.198 E F1(can generate)3.666 E F0
(BadAlloc)3.666 E F1(,).916 E F0(BadDrawable)3.666 E F1(,).916 E F0
(BadGC)3.666 E F1 2.75(,a).916 G(nd)-2.75 E F0(Bad-)3.666 E -1.012(Va)72
114.9 S(lue)1.012 E F1(errors.)3.666 E 1.76 -.88(To i)72 144.8 T
(nclude a bitmap written out by).88 E F0(XWriteBitmapFile)3.666 E F1
(in a program directly)3.666 E 2.75(,a)-.715 G 2.75(so)-2.75 G
(pposed to read-)-2.75 E(ing it in e)72 157.8 Q -.165(ve)-.275 G
(ry time at run time, use).165 E F0(XCr)3.666 E(eateBitmapFr)-.198 E
(omData)-.198 E F1(.).916 E .44 LW 36 175.55 36 186.55 DL 36 173.55 36
184.55 DL 41.5 171.8 36 171.8 DL 43.5 171.8 38 171.8 DL 49 171.8 43.5
171.8 DL(Pixmap XCreateBitmapFromData\()72 187.7 Q/F2 11/Times-Italic@0
SF(display).916 E F1(,)A F2(d)2.75 E F1(,)A F2(data)2.75 E F1(,)A F2
(width)2.75 E F1(,)A F2(height)2.75 E F1(\)).916 E(Display *)88.5 200.7
Q F2(display)A F1(;).916 E(Dra)88.5 213.7 Q -.11(wa)-.165 G(ble).11 E F2
(d)2.75 E F1(;).916 E(char *)88.5 226.7 Q F2(data)A F1(;).916 E
(unsigned int)88.5 239.7 Q F2(width)2.75 E F1(,)A F2(height)2.75 E F1(;)
.916 E F2(display)72 260.5 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2(d)72 277.4 Q F1(Speci\214es the dra)66.5 E -.11(wa)-.165 G
(ble that indicates the screen.).11 E F2(data)72 294.3 Q F1
(Speci\214es the location of the bitmap data.)52.442 E F2(width)72 311.2
Q(height)72 324.2 Q F1(Specify the width and height.)44.5 E 36 319.85 36
330.85 DL 36 317.85 36 328.85 DL 41.5 329.1 36 329.1 DL 43.5 329.1 38
329.1 DL 49 329.1 43.5 329.1 DL(The)72 354.1 Q F0(XCr)3.666 E
(eateBitmapFr)-.198 E(omData)-.198 E F1(function allo)3.666 E
(ws you to include in your C program \(using)-.275 E F0(#include)72.916
367.1 Q F1 2.75(\)ab).916 G(itmap \214le that w)-2.75 E
(as written out by)-.11 E F0(XWriteBitmapFile)3.666 E F1(\(X v)3.666 E
(ersion 11 format only\))-.165 E(without reading in the bitmap \214le.)
72 380.1 Q(The follo)5.5 E(wing e)-.275 E(xample creates a gray bitmap:)
-.165 E(#include "gray)72 403.5 Q(.bitmap")-.715 E(Pixmap bitmap;)72
422.5 Q(bitmap = XCreateBitmapFromData\(display)72 435.5 Q 2.75(,w)-.715
G(indo)-2.75 E 1.43 -.715(w, g)-.275 H
(ray_bits, gray_width, gray_height\);).715 E(If insuf)72 458.9 Q
(\214cient w)-.275 E(orking storage w)-.11 E(as allocated,)-.11 E F0
(XCr)3.666 E(eateBitmapFr)-.198 E(omData)-.198 E F1(returns)3.666 E F0
(None)3.666 E F1 5.5(.I).916 G 2.75(ti)-5.5 G(s)-2.75 E
(your responsibility to free the bitmap using)72 471.9 Q F0(XFr)3.666 E
(eePixmap)-.198 E F1(when \214nished.)3.666 E F0(XCr)72.916 488.8 Q
(eateBitmapFr)-.198 E(omData)-.198 E F1(can generate)3.666 E F0
(BadAlloc)3.666 E F1(and)3.666 E F0(BadGC)3.666 E F1(errors.)3.666 E F0
2.75(16.10. Using)72 514.8 R(the Context Manager)2.75 E F1(The conte)72
531.7 Q(xt manager pro)-.165 E(vides a w)-.165 E
(ay of associating data with an X resource ID \(mostly typically)-.11 E
2.75(aw)72 544.7 S(indo)-2.75 E(w\) in your program.)-.275 E
(Note that this is local to your program; the data is not stored in the)
5.5 E(serv)72 557.7 Q(er on a property list.)-.165 E(An)5.5 E 2.75(ya)
-.165 G(mount of data in an)-2.75 E 2.75(yn)-.165 G
(umber of pieces can be associated with a)-2.75 E
(resource ID, and each piece of data has a type associated with it.)72
570.7 Q(The conte)5.5 E(xt manager requires)-.165 E(kno)72 583.7 Q
(wledge of the resource ID and type to store or retrie)-.275 E .33 -.165
(ve d)-.275 H(ata.).165 E(Essentially)72 600.6 Q 2.75(,t)-.715 G
(he conte)-2.75 E(xt manager can be vie)-.165 E(wed as a tw)-.275 E
(o-dimensional, sparse array:)-.11 E(one dimen-)5.5 E
(sion is subscripted by the X resource ID and the other by a conte)72
613.6 Q(xt type \214eld.)-.165 E(Each entry in the)5.5 E
(array contains a pointer to the data.)72 626.6 Q(Xlib pro)5.5 E
(vides conte)-.165 E(xt management functions with which you)-.165 E
(can sa)72 639.6 Q .33 -.165(ve d)-.22 H(ata v).165 E(alues, get data v)
-.275 E(alues, delete entries, and create a unique conte)-.275 E
(xt type.)-.165 E(The sym-)5.5 E(bols used are in <)72 652.6 Q F0
(X11/Xutil.h)A F1(>.)A 1.76 -.88(To s)72 682.5 T -2.475 -.22(av e).88 H
2.75(ad)2.97 G(ata v)-2.75 E
(alue that corresponds to a resource ID and conte)-.275 E(xt type, use)
-.165 E F0(XSa)3.666 E -.11(ve)-.275 G(Context).11 E F1(.).916 E F0(422)
279.75 769 Q 0 Cg EP
%%Page: 423 428
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E .44 LW 36 76.75 36 87.75 DL 36 74.75
36 85.75 DL 41.5 73 36 73 DL 43.5 73 38 73 DL 49 73 43.5 73 DL/F1 11
/Times-Roman@0 SF(int XSa)72 88.9 Q -.165(ve)-.22 G(Conte).165 E(xt\()
-.165 E/F2 11/Times-Italic@0 SF(display).916 E F1(,)A F2(rid)2.75 E F1
(,)A F2(conte)2.75 E(xt)-.22 E F1(,)A F2(data)2.75 E F1(\)).916 E
(Display *)88.5 101.9 Q F2(display)A F1(;).916 E(XID)88.5 114.9 Q F2
(rid)2.75 E F1(;).916 E(XConte)88.5 127.9 Q(xt)-.165 E F2(conte)2.75 E
(xt)-.22 E F1(;).916 E(XPointer)88.5 140.9 Q F2(data)2.75 E F1(;).916 E
F2(display)72 161.7 Q F1(Speci\214es the connection to the X serv)40.221
E(er)-.165 E(.)-.605 E F2(rid)72 178.6 Q F1
(Speci\214es the resource ID with which the data is associated.)59.163 E
F2(conte)72 195.5 Q(xt)-.22 E F1(Speci\214es the conte)40.452 E
(xt type to which the data belongs.)-.165 E F2(data)72 212.4 Q F1
(Speci\214es the data to be associated with the windo)52.442 E 2.75(wa)
-.275 G(nd type.)-2.75 E 36 208.05 36 219.05 DL 36 206.05 36 217.05 DL
41.5 217.3 36 217.3 DL 43.5 217.3 38 217.3 DL 49 217.3 43.5 217.3 DL
(If an entry with the speci\214ed resource ID and type already e)72
242.3 Q(xists,)-.165 E F0(XSa)3.666 E -.11(ve)-.275 G(Context).11 E F1
-.165(ove)3.666 G(rrides it).165 E(with the speci\214ed conte)72 255.3 Q
2.75(xt. The)-.165 F F0(XSa)3.666 E -.11(ve)-.275 G(Context).11 E F1
(function returns a nonzero error code if an error)3.666 E
(has occurred and zero otherwise.)72 268.3 Q(Possible errors are)5.5 E
F0(XCNOMEM)3.666 E F1(\(out of memory\).)3.666 E 1.76 -.88(To g)72 298.2
T(et the data associated with a resource ID and type, use).88 E F0
(XFindContext)3.666 E F1(.).916 E 36 315.95 36 326.95 DL 36 313.95 36
324.95 DL 41.5 312.2 36 312.2 DL 43.5 312.2 38 312.2 DL 49 312.2 43.5
312.2 DL(int XFindConte)72 328.1 Q(xt\()-.165 E F2(display).916 E F1(,)A
F2(rid)2.75 E F1(,)A F2(conte)2.75 E(xt)-.22 E F1(,)A F2(data_r)2.75 E
(eturn)-.407 E F1(\)).916 E(Display *)88.5 341.1 Q F2(display)A F1(;)
.916 E(XID)88.5 354.1 Q F2(rid)2.75 E F1(;).916 E(XConte)88.5 367.1 Q
(xt)-.165 E F2(conte)2.75 E(xt)-.22 E F1(;).916 E(XPointer *)88.5 380.1
Q F2(data_r)A(eturn)-.407 E F1(;).916 E F2(display)72 400.9 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2(rid)72 417.8 Q F1
(Speci\214es the resource ID with which the data is associated.)59.163 E
F2(conte)72 434.7 Q(xt)-.22 E F1(Speci\214es the conte)40.452 E
(xt type to which the data belongs.)-.165 E F2(data_r)72 451.6 Q(eturn)
-.407 E F1(Returns the data.)19.849 E 36 447.25 36 458.25 DL 36 445.25
36 456.25 DL 41.5 456.5 36 456.5 DL 43.5 456.5 38 456.5 DL 49 456.5 43.5
456.5 DL(Because it is a return v)72 481.5 Q
(alue, the data is a pointer)-.275 E 5.5(.T)-.605 G(he)-5.5 E F0
(XFindContext)3.666 E F1(function returns a nonzero)3.666 E
(error code if an error has occurred and zero otherwise.)72 494.5 Q
(Possible errors are)5.5 E F0(XCNOENT)3.666 E F1(\(conte)3.666 E(xt-)
-.165 E(not-found\).)72 507.5 Q 1.76 -.88(To d)72 537.4 T
(elete an entry for a gi).88 E -.165(ve)-.275 G 2.75(nr).165 G
(esource ID and type, use)-2.75 E F0(XDeleteContext)3.666 E F1(.).916 E
36 555.15 36 566.15 DL 36 553.15 36 564.15 DL 41.5 551.4 36 551.4 DL
43.5 551.4 38 551.4 DL 49 551.4 43.5 551.4 DL(int XDeleteConte)72 567.3
Q(xt\()-.165 E F2(display).916 E F1(,)A F2(rid)2.75 E F1(,)A F2(conte)
2.75 E(xt)-.22 E F1(\)).916 E(Display *)88.5 580.3 Q F2(display)A F1(;)
.916 E(XID)88.5 593.3 Q F2(rid)2.75 E F1(;)A(XConte)88.5 606.3 Q(xt)
-.165 E F2(conte)2.75 E(xt)-.22 E F1(;)A F2(display)72 627.1 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2(rid)72 644 Q F1
(Speci\214es the resource ID with which the data is associated.)59.163 E
F2(conte)72 660.9 Q(xt)-.22 E F1(Speci\214es the conte)40.452 E
(xt type to which the data belongs.)-.165 E 36 656.55 36 667.55 DL 36
654.55 36 665.55 DL 41.5 665.8 36 665.8 DL 43.5 665.8 38 665.8 DL 49
665.8 43.5 665.8 DL(The)72 690.8 Q F0(XDeleteContext)3.666 E F1
(function deletes the entry for the gi)3.666 E -.165(ve)-.275 G 2.75(nr)
.165 G(esource ID and type from the data)-2.75 E 2.75(structure. This)72
703.8 R(function returns the same error codes that)2.75 E F0
(XFindContext)3.666 E F1(returns if called with)3.666 E(the same ar)72
716.8 Q(guments.)-.198 E F0(XDeleteContext)6.416 E F1
(does not free the data whose address w)3.666 E(as sa)-.11 E -.165(ve)
-.22 G(d.).165 E F0(423)279.75 769 Q 0 Cg EP
%%Page: 424 429
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E/F1 11/Times-Roman@0 SF 1.76 -.88(To c)
72 85 T(reate a unique conte).88 E
(xt type that may be used in subsequent calls to)-.165 E F0(XSa)3.666 E
-.11(ve)-.275 G(Context).11 E F1(and)3.666 E F0(XFindContext)72.916 98 Q
F1 2.75(,u).916 G(se)-2.75 E F0(XUniqueContext)3.666 E F1(.).916 E .44
LW 36 115.75 36 126.75 DL 36 113.75 36 124.75 DL 41.5 112 36 112 DL 43.5
112 38 112 DL 49 112 43.5 112 DL(XConte)72 127.9 Q(xt XUniqueConte)-.165
E -1.834(xt\( \))-.165 F 36 127.45 36 138.45 DL 36 125.45 36 136.45 DL
41.5 136.7 36 136.7 DL 43.5 136.7 38 136.7 DL 49 136.7 43.5 136.7 DL F0
(424)279.75 769 Q 0 Cg EP
%%Page: 425 430
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E/F1 12/Times-Bold@0 SF -.3(Ap)257.31
111 S(pendix A).3 E(Xlib Functions and Pr)191.436 137 Q(otocol Requests)
-.216 E/F2 11/Times-Roman@0 SF(This appendix pro)72 179.9 Q(vides tw)
-.165 E 2.75(ot)-.11 G
(ables that relate to Xlib functions and the X protocol.)-2.75 E
(The follo)5.5 E(wing)-.275 E(table lists each Xlib function \(in alpha\
betical order\) and the corresponding protocol request that it)72 192.9
Q(generates.)72 205.9 Q .44 LW 448.5 221.05 72 221.05 DL F0
(Xlib Function)72 237.3 Q(Pr)131.402 E(otocol Request)-.198 E 448.5
248.05 72 248.05 DL F2(XActi)72 264.3 Q -.275(va)-.275 G(teScreenSa).275
E -.165(ve)-.22 G 97.247(rF).165 G(orceScreenSa)-97.412 E -.165(ve)-.22
G(r).165 E 146.087(XAddHost ChangeHosts)72 277.3 R 141.808
(XAddHosts ChangeHosts)72 290.3 R(XAddT)72 303.3 Q(oSa)-.88 E -.165(ve)
-.22 G 120.468(Set ChangeSa).165 F -.165(ve)-.22 G(Set).165 E 136.308
(XAllocColor AllocColor)72 316.3 R 113.692
(XAllocColorCells AllocColorCells)72 329.3 R 107.587
(XAllocColorPlanes AllocColorPlanes)72 342.3 R 104.54
(XAllocNamedColor AllocNamedColor)72 355.3 R(XAllo)72 368.3 Q(wEv)-.275
E 128.806(ents Allo)-.165 F(wEv)-.275 E(ents)-.165 E(XAutoRepeatOf)72
381.3 Q 121.018(fC)-.275 G(hangeK)-121.018 E -.165(ey)-.275 G
(boardControl).165 E 119.819(XAutoRepeatOn ChangeK)72 394.3 R -.165(ey)
-.275 G(boardControl).165 E 167.471(XBell Bell)72 407.3 R(XChangeActi)72
420.3 Q -.165(ve)-.275 G 69.549(PointerGrab ChangeActi).165 F -.165(ve)
-.275 G(PointerGrab).165 E 136.924(XChangeGC ChangeGC)72 433.3 R
(XChangeK)72 446.3 Q -.165(ey)-.275 G 75.654(boardControl ChangeK).165 F
-.165(ey)-.275 G(boardControl).165 E(XChangeK)72 459.3 Q -.165(ey)-.275
G 69.549(boardMapping ChangeK).165 F -.165(ey)-.275 G(boardMapping).165
E 86.808(XChangePointerControl ChangePointerControl)72 472.3 R 114.319
(XChangeProperty ChangeProperty)72 485.3 R(XChangeSa)72 498.3 Q -.165
(ve)-.22 G 117.146(Set ChangeSa).165 F -.165(ve)-.22 G(Set).165 E
(XChangeW)72 511.3 Q(indo)-.44 E(wAttrib)-.275 E 71.254(utes ChangeW)
-.22 F(indo)-.44 E(wAttrib)-.275 E(utes)-.22 E(XCirculateSubwindo)72
524.3 Q 88.92(ws CirculateW)-.275 F(indo)-.44 E(w)-.275 E
(XCirculateSubwindo)72 537.3 Q(wsDo)-.275 E 62.311(wn CirculateW)-.275 F
(indo)-.44 E(w)-.275 E(XCirculateSubwindo)72 550.3 Q 75.478
(wsUp CirculateW)-.275 F(indo)-.44 E(w)-.275 E 140.609
(XClearArea ClearArea)72 563.3 R(XClearW)72 576.3 Q(indo)-.44 E 127.563
(wC)-.275 G(learArea)-127.563 E(XCon\214gureW)72 589.3 Q(indo)-.44 E
107.389(wC)-.275 G(on\214gureW)-107.389 E(indo)-.44 E(w)-.275 E(XCon)72
602.3 Q -.165(ve)-.44 G 110.029(rtSelection Con).165 F -.165(ve)-.44 G
(rtSelection).165 E(XCop)72 615.3 Q 140.708(yArea Cop)-.11 F(yArea)-.11
E(XCop)72 628.3 Q 79.592(yColormapAndFree Cop)-.11 F(yColormapAndFree)
-.11 E(XCop)72 641.3 Q 146.802(yGC Cop)-.11 F(yGC)-.11 E(XCop)72 654.3 Q
137.639(yPlane Cop)-.11 F(yPlane)-.11 E 80.098
(XCreateBitmapFromData CreateGC)72 667.3 R(CreatePixmap)268.5 680.3 Q
(FreeGC)268.5 693.3 Q(PutImage)268.5 706.3 Q 113.098
(XCreateColormap CreateColormap)72 719.3 R F0(425)279.75 769 Q 0 Cg EP
%%Page: 426 431
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E .44 LW 448.5 76.75 72 76.75 DL
(Xlib Function)72 93 Q(Pr)131.402 E(otocol Request)-.198 E 448.5 103.75
72 103.75 DL/F1 11/Times-Roman@0 SF(XCreateF)72 120 Q 107.147
(ontCursor CreateGlyphCursor)-.165 F 141.819(XCreateGC CreateGC)72 133 R
99.656(XCreateGlyphCursor CreateGlyphCursor)72 146 R 123.482
(XCreatePixmap CreatePixmap)72 159 R 93.54
(XCreatePixmapCursor CreateCursor)72 172 R 78.877
(XCreatePixmapFromData CreateGC)72 185 R(CreatePixmap)268.5 198 Q
(FreeGC)268.5 211 Q(PutImage)268.5 224 Q(XCreateSimpleW)72 237 Q(indo)
-.44 E 91.505(wC)-.275 G(reateW)-91.505 E(indo)-.44 E(w)-.275 E
(XCreateW)72 250 Q(indo)-.44 E 122.679(wC)-.275 G(reateW)-122.679 E
(indo)-.44 E(w)-.275 E 126.54(XDe\214neCursor ChangeW)72 263 R(indo)-.44
E(wAttrib)-.275 E(utes)-.22 E 119.214(XDeleteProperty DeleteProperty)72
276 R(XDestro)72 289 Q(ySubwindo)-.11 E 94.53(ws Destro)-.275 F
(ySubwindo)-.11 E(ws)-.275 E(XDestro)72 302 Q(yW)-.11 E(indo)-.44 E
116.673(wD)-.275 G(estro)-116.673 E(yW)-.11 E(indo)-.44 E(w)-.275 E
87.435(XDisableAccessControl SetAccessControl)72 315 R(XDra)72 328 Q
145.053(wArc PolyArc)-.165 F(XDra)72 341 Q 140.774(wArcs PolyArc)-.165 F
(XDra)72 354 Q 107.158(wImageString ImageT)-.165 F -.165(ex)-.77 G(t8)
.165 E(XDra)72 367 Q 96.158(wImageString16 ImageT)-.165 F -.165(ex)-.77
G(t16).165 E(XDra)72 380 Q 141.379(wLine PolySe)-.165 F(gment)-.165 E
(XDra)72 393 Q 137.1(wLines PolyLine)-.165 F(XDra)72 406 Q 138.31
(wPoint PolyPoint)-.165 F(XDra)72 419 Q 134.031(wPoints PolyPoint)-.165
F(XDra)72 432 Q 117.553(wRectangle PolyRectangle)-.165 F(XDra)72 445 Q
113.274(wRectangles PolyRectangle)-.165 F(XDra)72 458 Q(wSe)-.165 E
118.928(gments PolySe)-.165 F(gment)-.165 E(XDra)72 471 Q 134.647
(wString PolyT)-.165 F -.165(ex)-.77 G(t8).165 E(XDra)72 484 Q 123.647
(wString16 PolyT)-.165 F -.165(ex)-.77 G(t16).165 E(XDra)72 497 Q(wT)
-.165 E -.165(ex)-.77 G 145.064(tP).165 G(olyT)-145.064 E -.165(ex)-.77
G(t8).165 E(XDra)72 510 Q(wT)-.165 E -.165(ex)-.77 G 131.314(t16 PolyT)
.165 F -.165(ex)-.77 G(t16).165 E 90.493
(XEnableAccessControl SetAccessControl)72 523 R 136.308
(XFetchBytes GetProperty)72 536 R 135.098(XFetchName GetProperty)72 549
R 154.029(XFillArc PolyFillArc)72 562 R 149.75(XFillArcs PolyFillArc)72
575 R 133.844(XFillPolygon FillPoly)72 588 R 126.529
(XFillRectangle PolyFillRectangle)72 601 R 122.25
(XFillRectangles PolyFillRectangle)72 614 R(XF)72 627 Q(orceScreenSa)
-.165 E -.165(ve)-.22 G 109.083(rF).165 G(orceScreenSa)-109.248 E -.165
(ve)-.22 G(r).165 E 122.261(XFreeColormap FreeColormap)72 640 R 136.924
(XFreeColors FreeColors)72 653 R 136.319(XFreeCursor FreeCursor)72 666 R
(XFreeF)72 679 Q 146.252(ont CloseF)-.165 F(ont)-.165 E 150.982
(XFreeGC FreeGC)72 692 R 132.645(XFreePixmap FreePixmap)72 705 R 118.598
(XGetAtomName GetAtomName)72 718 R F0(426)279.75 769 Q 0 Cg EP
%%Page: 427 432
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E .44 LW 448.5 76.75 72 76.75 DL
(Xlib Function)72 93 Q(Pr)131.402 E(otocol Request)-.198 E 448.5 103.75
72 103.75 DL/F1 11/Times-Roman@0 SF 126.529(XGetClassHint GetProperty)72
120 R(XGetF)72 133 Q(ontP)-.165 E 130.522(ath GetF)-.165 F(ontP)-.165 E
(ath)-.165 E 125.935(XGetGeometry GetGeometry)72 146 R 124.109
(XGetIconName GetProperty)72 159 R 127.156(XGetIconSizes GetProperty)72
172 R 142.435(XGetImage GetImage)72 185 R(XGetInputF)72 198 Q 120.589
(ocus GetInputF)-.165 F(ocus)-.165 E(XGetK)72 211 Q -.165(ey)-.275 G
93.375(boardControl GetK).165 F -.165(ey)-.275 G(boardControl).165 E
(XGetK)72 224 Q -.165(ey)-.275 G 87.27(boardMapping GetK).165 F -.165
(ey)-.275 G(boardMapping).165 E 91.703
(XGetModi\214erMapping GetModi\214erMapping)72 237 R(XGetMotionEv)72 250
Q 107.752(ents GetMotionEv)-.165 F(ents)-.165 E 112.482
(XGetNormalHints GetProperty)72 263 R 104.529
(XGetPointerControl GetPointerControl)72 276 R 98.424
(XGetPointerMapping GetPointerMapping)72 289 R 99.029
(XGetRGBColormaps GetProperty)72 302 R(XGetScreenSa)72 315 Q -.165(ve)
-.22 G 118.081(rG).165 G(etScreenSa)-118.081 E -.165(ve)-.22 G(r).165 E
99.051(XGetSelectionOwner GetSelectionOwner)72 328 R 127.145
(XGetSizeHints GetProperty)72 341 R(XGetT)72 354 Q -.165(ex)-.77 G
112.812(tProperty GetProperty).165 F(XGetT)72 367 Q(ransientF)-.385 E
94.09(orHint GetProperty)-.165 F 84.377(XGetWMClientMachine GetProperty)
72 380 R(XGetWMColormapW)72 393 Q(indo)-.44 E 64.313(ws GetProperty)
-.275 F(InternAtom)268.5 406 Q 125.924(XGetWMHints GetProperty)72 419 R
103.946(XGetWMIconName GetProperty)72 432 R 123.493
(XGetWMName GetProperty)72 445 R 92.319(XGetWMNormalHints GetProperty)72
458 R 108.203(XGetWMProtocols GetProperty)72 471 R(InternAtom)268.5 484
Q 106.982(XGetWMSizeHints GetProperty)72 497 R(XGetW)72 510 Q(indo)-.44
E(wAttrib)-.275 E 88.975(utes GetW)-.22 F(indo)-.44 E(wAttrib)-.275 E
(utes)-.22 E(GetGeometry)268.5 523 Q(XGetW)72 536 Q(indo)-.44 E 94.871
(wProperty GetProperty)-.275 F 119.808(XGetZoomHints GetProperty)72 549
R 133.866(XGrabButton GrabButton)72 562 R(XGrabK)72 575 Q 146.263 -.165
(ey G)-.275 H(rabK).165 E -.165(ey)-.275 G(XGrabK)72 588 Q -.165(ey)
-.275 G 120.886(board GrabK).165 F -.165(ey)-.275 G(board).165 E 132.04
(XGrabPointer GrabPointer)72 601 R(XGrabServ)72 614 Q 135.274
(er GrabServ)-.165 F(er)-.165 E(XIconifyW)72 627 Q(indo)-.44 E 119.621
(wI)-.275 G(nternAtom)-119.621 E(SendEv)268.5 640 Q(ent)-.165 E 126.529
(XInitExtension QueryExtension)72 653 R 114.308
(XInstallColormap InstallColormap)72 666 R 134.482
(XInternAtom InternAtom)72 679 R 141.797(XKillClient KillClient)72 692 R
120.413(XListExtensions ListExtensions)72 705 R(XListF)72 718 Q 144.404
(onts ListF)-.165 F(onts)-.165 E F0(427)279.75 769 Q 0 Cg EP
%%Page: 428 433
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E .44 LW 448.5 76.75 72 76.75 DL
(Xlib Function)72 93 Q(Pr)131.402 E(otocol Request)-.198 E 448.5 103.75
72 103.75 DL/F1 11/Times-Roman@0 SF(XListF)72 120 Q(ontsW)-.165 E
104.518(ithInfo ListF)-.44 F(ontsW)-.165 E(ithInfo)-.44 E 143.634
(XListHosts ListHosts)72 133 R 82.529
(XListInstalledColormaps ListInstalledColormaps)72 146 R 124.087
(XListProperties ListProperties)72 159 R(XLoadF)72 172 Q 143.194
(ont OpenF)-.165 F(ont)-.165 E(XLoadQueryF)72 185 Q 115.705(ont OpenF)
-.165 F(ont)-.165 E(QueryF)268.5 198 Q(ont)-.165 E 126.529
(XLookupColor LookupColor)72 211 R(XLo)72 224 Q(werW)-.275 E(indo)-.44 E
122.954(wC)-.275 G(on\214gureW)-122.954 E(indo)-.44 E(w)-.275 E 135.703
(XMapRaised Con\214gureW)72 237 R(indo)-.44 E(w)-.275 E(MapW)268.5 250 Q
(indo)-.44 E(w)-.275 E(XMapSubwindo)72 263 Q 109.083(ws MapSubwindo)
-.275 F(ws)-.275 E(XMapW)72 276 Q(indo)-.44 E 131.226(wM)-.275 G(apW)
-131.226 E(indo)-.44 E(w)-.275 E(XMo)72 289 Q -.165(ve)-.165 G(ResizeW)
.165 E(indo)-.44 E 96.73(wC)-.275 G(on\214gureW)-96.73 E(indo)-.44 E(w)
-.275 E(XMo)72 302 Q -.165(ve)-.165 G -.44(Wi).165 G(ndo).44 E 126.056
(wC)-.275 G(on\214gureW)-126.056 E(indo)-.44 E(w)-.275 E 158.924
(XNoOp NoOperation)72 315 R 127.761(XOpenDisplay CreateGC)72 328 R(XP)72
341 Q 137.089(arseColor LookupColor)-.165 F 143.645(XPutImage PutImage)
72 354 R 108.819(XQueryBestCursor QueryBestSize)72 367 R 119.819
(XQueryBestSize QueryBestSize)72 380 R 107.587
(XQueryBestStipple QueryBestSize)72 393 R(XQueryBestT)72 406 Q 121.425
(ile QueryBestSize)-.385 F 133.261(XQueryColor QueryColors)72 419 R
128.982(XQueryColors QueryColors)72 432 R 114.319
(XQueryExtension QueryExtension)72 445 R(XQueryF)72 458 Q 138.31
(ont QueryF)-.165 F(ont)-.165 E(XQueryK)72 471 Q -.165(ey)-.275 G
121.491(map QueryK).165 F -.165(ey)-.275 G(map).165 E 126.54
(XQueryPointer QueryPointer)72 484 R(XQueryT)72 497 Q -.165(ex)-.77 G
106.091(tExtents QueryT).165 F -.165(ex)-.77 G(tExtents).165 E(XQueryT)
72 510 Q -.165(ex)-.77 G 95.091(tExtents16 QueryT).165 F -.165(ex)-.77 G
(tExtents).165 E(XQueryT)72 523 Q 138.552(ree QueryT)-.385 F(ree)-.385 E
(XRaiseW)72 536 Q(indo)-.44 E 126.947(wC)-.275 G(on\214gureW)-126.947 E
(indo)-.44 E(w)-.275 E 113.692(XReadBitmapFile CreateGC)72 549 R
(CreatePixmap)268.5 562 Q(FreeGC)268.5 575 Q(PutImage)268.5 588 Q 121.04
(XRecolorCursor RecolorCursor)72 601 R(XRecon\214gureWMW)72 614 Q(indo)
-.44 E 77.458(wC)-.275 G(on\214gureW)-77.458 E(indo)-.44 E(w)-.275 E
(SendEv)268.5 627 Q(ent)-.165 E(XRemo)72 640 Q -.165(ve)-.165 G(FromSa)
.165 E -.165(ve)-.22 G 90.581(Set ChangeSa).165 F -.165(ve)-.22 G(Set)
.165 E(XRemo)72 653 Q -.165(ve)-.165 G 128.696(Host ChangeHosts).165 F
(XRemo)72 666 Q -.165(ve)-.165 G 124.417(Hosts ChangeHosts).165 F
(XReparentW)72 679 Q(indo)-.44 E 111.679(wR)-.275 G(eparentW)-111.679 E
(indo)-.44 E(w)-.275 E(XResetScreenSa)72 692 Q -.165(ve)-.22 G 109.523
(rF).165 G(orceScreenSa)-109.688 E -.165(ve)-.22 G(r).165 E(XResizeW)72
705 Q(indo)-.44 E 122.063(wC)-.275 G(on\214gureW)-122.063 E(indo)-.44 E
(w)-.275 E(XRestackW)72 718 Q(indo)-.44 E 109.534(ws Con\214gureW)-.275
F(indo)-.44 E(w)-.275 E F0(428)279.75 769 Q 0 Cg EP
%%Page: 429 434
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E .44 LW 448.5 76.75 72 76.75 DL
(Xlib Function)72 93 Q(Pr)131.402 E(otocol Request)-.198 E 448.5 103.75
72 103.75 DL/F1 11/Times-Roman@0 SF(XRotateBuf)72 120 Q 124.373
(fers RotateProperties)-.275 F(XRotateW)72 133 Q(indo)-.44 E 75.313
(wProperties RotateProperties)-.275 F 135.703(XSelectInput ChangeW)72
146 R(indo)-.44 E(wAttrib)-.275 E(utes)-.22 E(XSendEv)72 159 Q 138.31
(ent SendEv)-.165 F(ent)-.165 E 106.982
(XSetAccessControl SetAccessControl)72 172 R 129.598
(XSetArcMode ChangeGC)72 185 R 117.982(XSetBackground ChangeGC)72 198 R
128.355(XSetClassHint ChangeProperty)72 211 R 128.355
(XSetClipMask ChangeGC)72 224 R 124.076(XSetClipOrigin ChangeGC)72 237 R
104.529(XSetClipRectangles SetClipRectangles)72 250 R(XSetCloseDo)72 263
Q 94.42(wnMode SetCloseDo)-.275 F(wnMode)-.275 E 125.913
(XSetCommand ChangeProperty)72 276 R 139.982(XSetDashes SetDashes)72 289
R 135.681(XSetFillRule ChangeGC)72 302 R 133.844(XSetFillStyle ChangeGC)
72 315 R(XSetF)72 328 Q 151.741(ont ChangeGC)-.165 F(XSetF)72 341 Q
(ontP)-.165 E 132.348(ath SetF)-.165 F(ontP)-.165 E(ath)-.165 E(XSetF)72
354 Q(ore)-.165 E 120.754(ground ChangeGC)-.165 F 132.634
(XSetFunction ChangeGC)72 367 R 86.214(XSetGraphicsExposures ChangeGC)72
380 R 125.935(XSetIconName ChangeProperty)72 393 R 128.982
(XSetIconSizes ChangeProperty)72 406 R(XSetInputF)72 419 Q 122.415
(ocus SetInputF)-.165 F(ocus)-.165 E(XSetLineAttrib)72 432 Q 107.807
(utes ChangeGC)-.22 F 93.529(XSetModi\214erMapping SetModi\214erMapping)
72 445 R 114.308(XSetNormalHints ChangeProperty)72 458 R 122.866
(XSetPlaneMask ChangeGC)72 471 R 100.25
(XSetPointerMapping SetPointerMapping)72 484 R 100.855
(XSetRGBColormaps ChangeProperty)72 497 R(XSetScreenSa)72 510 Q -.165
(ve)-.22 G 119.907(rS).165 G(etScreenSa)-119.907 E -.165(ve)-.22 G(r)
.165 E 100.877(XSetSelectionOwner SetSelectionOwner)72 523 R 128.971
(XSetSizeHints ChangeProperty)72 536 R 88.04
(XSetStandardProperties ChangeProperty)72 549 R 149.75
(XSetState ChangeGC)72 562 R 140.576(XSetStipple ChangeGC)72 575 R
(XSetSubwindo)72 588 Q 93.804(wMode ChangeGC)-.275 F(XSetT)72 601 Q
-.165(ex)-.77 G 114.638(tProperty ChangeProperty).165 F(XSetT)72 614 Q
154.414(ile ChangeGC)-.385 F(XSetT)72 627 Q(ransientF)-.385 E 95.916
(orHint ChangeProperty)-.165 F 130.192(XSetTSOrigin ChangeGC)72 640 R
86.203(XSetWMClientMachine ChangeProperty)72 653 R(XSetWMColormapW)72
666 Q(indo)-.44 E 66.139(ws ChangeProperty)-.275 F(InternAtom)268.5 679
Q 127.75(XSetWMHints ChangeProperty)72 692 R 105.772
(XSetWMIconName ChangeProperty)72 705 R 125.319
(XSetWMName ChangeProperty)72 718 R F0(429)279.75 769 Q 0 Cg EP
%%Page: 430 435
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E .44 LW 448.5 76.75 72 76.75 DL
(Xlib Function)72 93 Q(Pr)131.402 E(otocol Request)-.198 E 448.5 103.75
72 103.75 DL/F1 11/Times-Roman@0 SF 94.145
(XSetWMNormalHints ChangeProperty)72 120 R 106.982
(XSetWMProperties ChangeProperty)72 133 R 110.029
(XSetWMProtocols ChangeProperty)72 146 R(InternAtom)268.5 159 Q 108.808
(XSetWMSizeHints ChangeProperty)72 172 R(XSetW)72 185 Q(indo)-.44 E
80.813(wBackground ChangeW)-.275 F(indo)-.44 E(wAttrib)-.275 E(utes)-.22
E(XSetW)72 198 Q(indo)-.44 E 47.197(wBackgroundPixmap ChangeW)-.275 F
(indo)-.44 E(wAttrib)-.275 E(utes)-.22 E(XSetW)72 211 Q(indo)-.44 E
104.034(wBorder ChangeW)-.275 F(indo)-.44 E(wAttrib)-.275 E(utes)-.22 E
(XSetW)72 224 Q(indo)-.44 E 70.418(wBorderPixmap ChangeW)-.275 F(indo)
-.44 E(wAttrib)-.275 E(utes)-.22 E(XSetW)72 237 Q(indo)-.44 E(wBorderW)
-.275 E 76.974(idth Con\214gureW)-.44 F(indo)-.44 E(w)-.275 E(XSetW)72
250 Q(indo)-.44 E 90.581(wColormap ChangeW)-.275 F(indo)-.44 E(wAttrib)
-.275 E(utes)-.22 E 121.634(XSetZoomHints ChangeProperty)72 263 R
(XStoreBuf)72 276 Q 134.152(fer ChangeProperty)-.275 F 137.529
(XStoreBytes ChangeProperty)72 289 R 137.529(XStoreColor StoreColors)72
302 R 133.25(XStoreColors StoreColors)72 315 R 136.319
(XStoreName ChangeProperty)72 328 R 105.761
(XStoreNamedColor StoreNamedColor)72 341 R 163.808(XSync GetInputF)72
354 R(ocus)-.165 E 130.819(XSynchronize GetInputF)72 367 R(ocus)-.165 E
(XT)72 380 Q 92.099(ranslateCoordinates T)-.385 F(ranslateCoordinates)
-.385 E 115.54(XUnde\214neCursor ChangeW)72 393 R(indo)-.44 E(wAttrib)
-.275 E(utes)-.22 E 122.866(XUngrabButton UngrabButton)72 406 R
(XUngrabK)72 419 Q 135.263 -.165(ey U)-.275 H(ngrabK).165 E -.165(ey)
-.275 G(XUngrabK)72 432 Q -.165(ey)-.275 G 109.886(board UngrabK).165 F
-.165(ey)-.275 G(board).165 E 121.04(XUngrabPointer UngrabPointer)72 445
R(XUngrabServ)72 458 Q 124.274(er UngrabServ)-.165 F(er)-.165 E 101.471
(XUninstallColormap UninstallColormap)72 471 R(XUnloadF)72 484 Q 133.415
(ont CloseF)-.165 F(ont)-.165 E(XUnmapSubwindo)72 497 Q 96.862
(ws UnmapSubwindo)-.275 F(ws)-.275 E(XUnmapW)72 510 Q(indo)-.44 E
119.005(wU)-.275 G(nmapW)-119.005 E(indo)-.44 E(w)-.275 E(XW)72 523 Q
130.478(arpPointer W)-.88 F(arpPointer)-.88 E(XW)72 536 Q(ithdra)-.44 E
(wW)-.165 E(indo)-.44 E 108.005(wS)-.275 G(endEv)-108.005 E(ent)-.165 E
(UnmapW)268.5 549 Q(indo)-.44 E(w)-.275 E F0(430)279.75 769 Q 0 Cg EP
%%Page: 431 436
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E/F1 11/Times-Roman@0 SF(The follo)72 85
Q(wing table lists each X protocol request \(in alphabetical order\) an\
d the Xlib functions)-.275 E(that reference it.)72 98 Q .44 LW 448.5
109.25 72 109.25 DL F0(Pr)72 125.5 Q(otocol Request)-.198 E
(Xlib Function)116.354 E 448.5 136.25 72 136.25 DL F1 144.25
(AllocColor XAllocColor)72 152.5 R 121.634
(AllocColorCells XAllocColorCells)72 165.5 R 115.529
(AllocColorPlanes XAllocColorPlanes)72 178.5 R 112.482
(AllocNamedColor XAllocNamedColor)72 191.5 R(Allo)72 204.5 Q(wEv)-.275 E
136.748(ents XAllo)-.165 F(wEv)-.275 E(ents)-.165 E 175.413(Bell XBell)
72 217.5 R(ChangeActi)72 230.5 Q -.165(ve)-.275 G 77.491
(PointerGrab XChangeActi).165 F -.165(ve)-.275 G(PointerGrab).165 E
144.866(ChangeGC XChangeGC)72 243.5 R(XSetArcMode)268.5 256.5 Q
(XSetBackground)268.5 269.5 Q(XSetClipMask)268.5 282.5 Q(XSetClipOrigin)
268.5 295.5 Q(XSetFillRule)268.5 308.5 Q(XSetFillStyle)268.5 321.5 Q
(XSetF)268.5 334.5 Q(ont)-.165 E(XSetF)268.5 347.5 Q(ore)-.165 E(ground)
-.165 E(XSetFunction)268.5 360.5 Q(XSetGraphicsExposures)268.5 373.5 Q
(XSetLineAttrib)268.5 386.5 Q(utes)-.22 E(XSetPlaneMask)268.5 399.5 Q
(XSetState)268.5 412.5 Q(XSetStipple)268.5 425.5 Q(XSetSubwindo)268.5
438.5 Q(wMode)-.275 E(XSetT)268.5 451.5 Q(ile)-.385 E(XSetTSOrigin)268.5
464.5 Q 135.087(ChangeHosts XAddHost)72 477.5 R(XAddHosts)268.5 490.5 Q
(XRemo)268.5 503.5 Q -.165(ve)-.165 G(Host).165 E(XRemo)268.5 516.5 Q
-.165(ve)-.165 G(Hosts).165 E(ChangeK)72 529.5 Q -.165(ey)-.275 G 83.596
(boardControl XAutoRepeatOf).165 F(f)-.275 E(XAutoRepeatOn)268.5 542.5 Q
(XChangeK)268.5 555.5 Q -.165(ey)-.275 G(boardControl).165 E(ChangeK)72
568.5 Q -.165(ey)-.275 G 77.491(boardMapping XChangeK).165 F -.165(ey)
-.275 G(boardMapping).165 E 94.75
(ChangePointerControl XChangePointerControl)72 581.5 R 122.261
(ChangeProperty XChangeProperty)72 594.5 R(XSetClassHint)268.5 607.5 Q
(XSetCommand)268.5 620.5 Q(XSetIconName)268.5 633.5 Q(XSetIconSizes)
268.5 646.5 Q(XSetNormalHints)268.5 659.5 Q(XSetRGBColormaps)268.5 672.5
Q(XSetSizeHints)268.5 685.5 Q(XSetStandardProperties)268.5 698.5 Q
(XSetT)268.5 711.5 Q -.165(ex)-.77 G(tProperty).165 E F0(431)279.75 769
Q 0 Cg EP
%%Page: 432 437
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E .44 LW 448.5 76.75 72 76.75 DL(Pr)72
93 Q(otocol Request)-.198 E(Xlib Function)116.354 E 448.5 103.75 72
103.75 DL/F1 11/Times-Roman@0 SF(XSetT)268.5 120 Q(ransientF)-.385 E
(orHint)-.165 E(XSetWMClientMachine)268.5 133 Q(XSetWMColormapW)268.5
146 Q(indo)-.44 E(ws)-.275 E(XSetWMHints)268.5 159 Q(XSetWMIconName)
268.5 172 Q(XSetWMName)268.5 185 Q(XSetWMNormalHints)268.5 198 Q
(XSetWMProperties)268.5 211 Q(XSetWMProtocols)268.5 224 Q
(XSetWMSizeHints)268.5 237 Q(XSetZoomHints)268.5 250 Q(XStoreBuf)268.5
263 Q(fer)-.275 E(XStoreBytes)268.5 276 Q(XStoreName)268.5 289 Q
(ChangeSa)72 302 Q -.165(ve)-.22 G 125.088(Set XAddT).165 F(oSa)-.88 E
-.165(ve)-.22 G(Set).165 E(XChangeSa)268.5 315 Q -.165(ve)-.22 G(Set)
.165 E(XRemo)268.5 328 Q -.165(ve)-.165 G(FromSa).165 E -.165(ve)-.22 G
(Set).165 E(ChangeW)72 341 Q(indo)-.44 E(wAttrib)-.275 E 79.196
(utes XChangeW)-.22 F(indo)-.44 E(wAttrib)-.275 E(utes)-.22 E
(XDe\214neCursor)268.5 354 Q(XSelectInput)268.5 367 Q(XSetW)268.5 380 Q
(indo)-.44 E(wBackground)-.275 E(XSetW)268.5 393 Q(indo)-.44 E
(wBackgroundPixmap)-.275 E(XSetW)268.5 406 Q(indo)-.44 E(wBorder)-.275 E
(XSetW)268.5 419 Q(indo)-.44 E(wBorderPixmap)-.275 E(XSetW)268.5 432 Q
(indo)-.44 E(wColormap)-.275 E(XUnde\214neCursor)268.5 445 Q(CirculateW)
72 458 Q(indo)-.44 E 119.005(wX)-.275 G(CirculateSubwindo)-119.005 E
(wsDo)-.275 E(wn)-.275 E(XCirculateSubwindo)268.5 471 Q(wsUp)-.275 E
(XCirculateSubwindo)268.5 484 Q(ws)-.275 E 148.551(ClearArea XClearArea)
72 497 R(XClearW)268.5 510 Q(indo)-.44 E(w)-.275 E(CloseF)72 523 Q
148.683(ont XFreeF)-.165 F(ont)-.165 E(XUnloadF)268.5 536 Q(ont)-.165 E
(Con\214gureW)72 549 Q(indo)-.44 E 115.331(wX)-.275 G(Con\214gureW)
-115.331 E(indo)-.44 E(w)-.275 E(XLo)268.5 562 Q(werW)-.275 E(indo)-.44
E(w)-.275 E(XMapRaised)268.5 575 Q(XMo)268.5 588 Q -.165(ve)-.165 G
(ResizeW).165 E(indo)-.44 E(w)-.275 E(XMo)268.5 601 Q -.165(ve)-.165 G
-.44(Wi).165 G(ndo).44 E(w)-.275 E(XRaiseW)268.5 614 Q(indo)-.44 E(w)
-.275 E(XRecon\214gureWMW)268.5 627 Q(indo)-.44 E(w)-.275 E(XResizeW)
268.5 640 Q(indo)-.44 E(w)-.275 E(XRestackW)268.5 653 Q(indo)-.44 E(ws)
-.275 E(XSetW)268.5 666 Q(indo)-.44 E(wBorderW)-.275 E(idth)-.44 E(Con)
72 679 Q -.165(ve)-.44 G 117.971(rtSelection XCon).165 F -.165(ve)-.44 G
(rtSelection).165 E(Cop)72 692 Q 148.65(yArea XCop)-.11 F(yArea)-.11 E
(Cop)72 705 Q 87.534(yColormapAndFree XCop)-.11 F(yColormapAndFree)-.11
E(Cop)72 718 Q 154.744(yGC XCop)-.11 F(yGC)-.11 E F0(432)279.75 769 Q 0
Cg EP
%%Page: 433 438
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E .44 LW 448.5 76.75 72 76.75 DL(Pr)72
93 Q(otocol Request)-.198 E(Xlib Function)116.354 E 448.5 103.75 72
103.75 DL/F1 11/Times-Roman@0 SF(Cop)72 120 Q 145.581(yPlane XCop)-.11 F
(yPlane)-.11 E 121.04(CreateColormap XCreateColormap)72 133 R 135.098
(CreateCursor XCreatePixmapCursor)72 146 R 149.761(CreateGC XCreateGC)72
159 R(XCreateBitmapFromData)268.5 172 Q(XCreatePixmapFromData)268.5 185
Q(XOpenDisplay)268.5 198 Q(XReadBitmapFile)268.5 211 Q 107.598
(CreateGlyphCursor XCreateF)72 224 R(ontCursor)-.165 E
(XCreateGlyphCursor)268.5 237 Q 131.424(CreatePixmap XCreatePixmap)72
250 R(XCreateBitmapFromData)268.5 263 Q(XCreatePixmapFromData)268.5 276
Q(XReadBitmapFile)268.5 289 Q(CreateW)72 302 Q(indo)-.44 E 130.621(wX)
-.275 G(CreateSimpleW)-130.621 E(indo)-.44 E(w)-.275 E(XCreateW)268.5
315 Q(indo)-.44 E(w)-.275 E 127.156(DeleteProperty XDeleteProperty)72
328 R(Destro)72 341 Q(ySubwindo)-.11 E 102.472(ws XDestro)-.275 F
(ySubwindo)-.11 E(ws)-.275 E(Destro)72 354 Q(yW)-.11 E(indo)-.44 E
124.615(wX)-.275 G(Destro)-124.615 E(yW)-.11 E(indo)-.44 E(w)-.275 E
158.286(FillPoly XFillPolygon)72 367 R -.165(Fo)72 380 S(rceScreenSa)
.165 E -.165(ve)-.22 G 117.025(rX).165 G(Acti)-117.025 E -.275(va)-.275
G(teScreenSa).275 E -.165(ve)-.22 G(r).165 E(XF)268.5 393 Q
(orceScreenSa)-.165 E -.165(ve)-.22 G(r).165 E(XResetScreenSa)268.5 406
Q -.165(ve)-.22 G(r).165 E 130.203(FreeColormap XFreeColormap)72 419 R
144.866(FreeColors XFreeColors)72 432 R 144.261(FreeCursor XFreeCursor)
72 445 R 158.924(FreeGC XFreeGC)72 458 R(XCreateBitmapFromData)268.5 471
Q(XCreatePixmapFromData)268.5 484 Q(XReadBitmapFile)268.5 497 Q 140.587
(FreePixmap XFreePixmap)72 510 R 126.54(GetAtomName XGetAtomName)72 523
R(GetF)72 536 Q(ontP)-.165 E 138.464(ath XGetF)-.165 F(ontP)-.165 E(ath)
-.165 E 133.877(GetGeometry XGetGeometry)72 549 R(XGetW)268.5 562 Q
(indo)-.44 E(wAttrib)-.275 E(utes)-.22 E 150.377(GetImage XGetImage)72
575 R(GetInputF)72 588 Q 128.531(ocus XGetInputF)-.165 F(ocus)-.165 E
(XSync)268.5 601 Q(XSynchronize)268.5 614 Q(GetK)72 627 Q -.165(ey)-.275
G 101.317(boardControl XGetK).165 F -.165(ey)-.275 G(boardControl).165 E
(GetK)72 640 Q -.165(ey)-.275 G 95.212(boardMapping XGetK).165 F -.165
(ey)-.275 G(boardMapping).165 E 99.645
(GetModi\214erMapping XGetModi\214erMapping)72 653 R(GetMotionEv)72 666
Q 115.694(ents XGetMotionEv)-.165 F(ents)-.165 E 112.471
(GetPointerControl XGetPointerControl)72 679 R 106.366
(GetPointerMapping XGetPointerMapping)72 692 R 139.982
(GetProperty XFetchBytes)72 705 R(XFetchName)268.5 718 Q F0(433)279.75
769 Q 0 Cg EP
%%Page: 434 439
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E .44 LW 448.5 76.75 72 76.75 DL(Pr)72
93 Q(otocol Request)-.198 E(Xlib Function)116.354 E 448.5 103.75 72
103.75 DL/F1 11/Times-Roman@0 SF(XGetClassHint)268.5 120 Q(XGetIconName)
268.5 133 Q(XGetIconSizes)268.5 146 Q(XGetNormalHints)268.5 159 Q
(XGetRGBColormaps)268.5 172 Q(XGetSizeHints)268.5 185 Q(XGetT)268.5 198
Q -.165(ex)-.77 G(tProperty).165 E(XGetT)268.5 211 Q(ransientF)-.385 E
(orHint)-.165 E(XGetWMClientMachine)268.5 224 Q(XGetWMColormapW)268.5
237 Q(indo)-.44 E(ws)-.275 E(XGetWMHints)268.5 250 Q(XGetWMIconName)
268.5 263 Q(XGetWMName)268.5 276 Q(XGetWMNormalHints)268.5 289 Q
(XGetWMProtocols)268.5 302 Q(XGetWMSizeHints)268.5 315 Q(XGetW)268.5 328
Q(indo)-.44 E(wProperty)-.275 E(XGetZoomHints)268.5 341 Q 106.993
(GetSelectionOwner XGetSelectionOwner)72 354 R(GetW)72 367 Q(indo)-.44 E
(wAttrib)-.275 E 96.917(utes XGetW)-.22 F(indo)-.44 E(wAttrib)-.275 E
(utes)-.22 E 141.808(GrabButton XGrabButton)72 380 R(GrabK)72 393 Q
154.205 -.165(ey X)-.275 H(GrabK).165 E -.165(ey)-.275 G(GrabK)72 406 Q
-.165(ey)-.275 G 128.828(board XGrabK).165 F -.165(ey)-.275 G(board).165
E 139.982(GrabPointer XGrabPointer)72 419 R(GrabServ)72 432 Q 143.216
(er XGrabServ)-.165 F(er)-.165 E(ImageT)72 445 Q -.165(ex)-.77 G 141.533
(t8 XDra).165 F(wImageString)-.165 E(ImageT)72 458 Q -.165(ex)-.77 G
136.033(t16 XDra).165 F(wImageString16)-.165 E 122.25
(InstallColormap XInstallColormap)72 471 R 142.424
(InternAtom XGetWMColormapW)72 484 R(indo)-.44 E(ws)-.275 E
(XGetWMProtocols)268.5 497 Q(XIconifyW)268.5 510 Q(indo)-.44 E(w)-.275 E
(XInternAtom)268.5 523 Q(XSetWMColormapW)268.5 536 Q(indo)-.44 E(ws)
-.275 E(XSetWMProtocols)268.5 549 Q 149.739(KillClient XKillClient)72
562 R 128.355(ListExtensions XListExtensions)72 575 R(ListF)72 588 Q
152.346(onts XListF)-.165 F(onts)-.165 E(ListF)72 601 Q(ontsW)-.165 E
112.46(ithInfo XListF)-.44 F(ontsW)-.165 E(ithInfo)-.44 E 151.576
(ListHosts XListHosts)72 614 R 90.471
(ListInstalledColormaps XListInstalledColormaps)72 627 R 132.029
(ListProperties XListProperties)72 640 R 134.471
(LookupColor XLookupColor)72 653 R(XP)268.5 666 Q(arseColor)-.165 E
(MapSubwindo)72 679 Q 117.025(ws XMapSubwindo)-.275 F(ws)-.275 E(MapW)72
692 Q(indo)-.44 E 139.168(wX)-.275 G(MapRaised)-139.168 E(XMapW)268.5
705 Q(indo)-.44 E(w)-.275 E 136.319(NoOperation XNoOp)72 718 R F0(434)
279.75 769 Q 0 Cg EP
%%Page: 435 440
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E .44 LW 448.5 76.75 72 76.75 DL(Pr)72
93 Q(otocol Request)-.198 E(Xlib Function)116.354 E 448.5 103.75 72
103.75 DL/F1 11/Times-Roman@0 SF(OpenF)72 120 Q 149.915(ont XLoadF)-.165
F(ont)-.165 E(XLoadQueryF)268.5 133 Q(ont)-.165 E 157.087(PolyArc XDra)
72 146 R(wArc)-.165 E(XDra)268.5 159 Q(wArcs)-.165 E 141.797
(PolyFillArc XFillArc)72 172 R(XFillArcs)268.5 185 Q 114.297
(PolyFillRectangle XFillRectangle)72 198 R(XFillRectangles)268.5 211 Q
153.413(PolyLine XDra)72 224 R(wLines)-.165 E 150.344(PolyPoint XDra)72
237 R(wPoint)-.165 E(XDra)268.5 250 Q(wPoints)-.165 E 129.587
(PolyRectangle XDra)72 263 R(wRectangle)-.165 E(XDra)268.5 276 Q
(wRectangles)-.165 E(PolySe)72 289 Q 135.241(gment XDra)-.165 F(wLine)
-.165 E(XDra)268.5 302 Q(wSe)-.165 E(gments)-.165 E(PolyT)72 315 Q -.165
(ex)-.77 G 148.848(t8 XDra).165 F(wString)-.165 E(XDra)268.5 328 Q(wT)
-.165 E -.165(ex)-.77 G(t).165 E(PolyT)72 341 Q -.165(ex)-.77 G 143.348
(t16 XDra).165 F(wString16)-.165 E(XDra)268.5 354 Q(wT)-.165 E -.165(ex)
-.77 G(t16).165 E 151.587(PutImage XPutImage)72 367 R
(XCreateBitmapFromData)268.5 380 Q(XCreatePixmapFromData)268.5 393 Q
(XReadBitmapFile)268.5 406 Q 127.761(QueryBestSize XQueryBestCursor)72
419 R(XQueryBestSize)268.5 432 Q(XQueryBestStipple)268.5 445 Q
(XQueryBestT)268.5 458 Q(ile)-.385 E 136.924(QueryColors XQueryColor)72
471 R(XQueryColors)268.5 484 Q 122.261(QueryExtension XInitExtension)72
497 R(XQueryExtension)268.5 510 Q(QueryF)72 523 Q 146.252
(ont XLoadQueryF)-.165 F(ont)-.165 E(XQueryF)268.5 536 Q(ont)-.165 E
(QueryK)72 549 Q -.165(ey)-.275 G 129.433(map XQueryK).165 F -.165(ey)
-.275 G(map).165 E 134.482(QueryPointer XQueryPointer)72 562 R(QueryT)72
575 Q -.165(ex)-.77 G 114.033(tExtents XQueryT).165 F -.165(ex)-.77 G
(tExtents).165 E(XQueryT)268.5 588 Q -.165(ex)-.77 G(tExtents16).165 E
(QueryT)72 601 Q 146.494(ree XQueryT)-.385 F(ree)-.385 E 128.982
(RecolorCursor XRecolorCursor)72 614 R(ReparentW)72 627 Q(indo)-.44 E
119.621(wX)-.275 G(ReparentW)-119.621 E(indo)-.44 E(w)-.275 E 120.424
(RotateProperties XRotateBuf)72 640 R(fers)-.275 E(XRotateW)268.5 653 Q
(indo)-.44 E(wProperties)-.275 E(SendEv)72 666 Q 146.252(ent XIconifyW)
-.165 F(indo)-.44 E(w)-.275 E(XRecon\214gureWMW)268.5 679 Q(indo)-.44 E
(w)-.275 E(XSendEv)268.5 692 Q(ent)-.165 E(XW)268.5 705 Q(ithdra)-.44 E
(wW)-.165 E(indo)-.44 E(w)-.275 E 114.924
(SetAccessControl XDisableAccessControl)72 718 R F0(435)279.75 769 Q 0
Cg EP
%%Page: 436 441
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E .44 LW 448.5 76.75 72 76.75 DL(Pr)72
93 Q(otocol Request)-.198 E(Xlib Function)116.354 E 448.5 103.75 72
103.75 DL/F1 11/Times-Roman@0 SF(XEnableAccessControl)268.5 120 Q
(XSetAccessControl)268.5 133 Q 112.471
(SetClipRectangles XSetClipRectangles)72 146 R(SetCloseDo)72 159 Q
102.362(wnMode XSetCloseDo)-.275 F(wnMode)-.275 E 147.924
(SetDashes XSetDashes)72 172 R(SetF)72 185 Q(ontP)-.165 E 140.29
(ath XSetF)-.165 F(ontP)-.165 E(ath)-.165 E(SetInputF)72 198 Q 130.357
(ocus XSetInputF)-.165 F(ocus)-.165 E 101.471
(SetModi\214erMapping XSetModi\214erMapping)72 211 R 108.192
(SetPointerMapping XSetPointerMapping)72 224 R(SetScreenSa)72 237 Q
-.165(ve)-.22 G 127.849(rX).165 G(GetScreenSa)-127.849 E -.165(ve)-.22 G
(r).165 E(XSetScreenSa)268.5 250 Q -.165(ve)-.22 G(r).165 E 108.819
(SetSelectionOwner XSetSelectionOwner)72 263 R 141.192
(StoreColors XStoreColor)72 276 R(XStoreColors)268.5 289 Q 113.703
(StoreNamedColor XStoreNamedColor)72 302 R -.385(Tr)72 315 S 100.041
(anslateCoordinates XT).385 F(ranslateCoordinates)-.385 E 130.808
(UngrabButton XUngrabButton)72 328 R(UngrabK)72 341 Q 143.205 -.165
(ey X)-.275 H(UngrabK).165 E -.165(ey)-.275 G(UngrabK)72 354 Q -.165(ey)
-.275 G 117.828(board XUngrabK).165 F -.165(ey)-.275 G(board).165 E
128.982(UngrabPointer XUngrabPointer)72 367 R(UngrabServ)72 380 Q
132.216(er XUngrabServ)-.165 F(er)-.165 E 109.413
(UninstallColormap XUninstallColormap)72 393 R(UnmapSubwindo)72 406 Q
104.804(ws XUnmapSubW)-.275 F(indo)-.44 E(ws)-.275 E(UnmapW)72 419 Q
(indo)-.44 E 126.947(wX)-.275 G(UnmapW)-126.947 E(indo)-.44 E(w)-.275 E
(XW)268.5 432 Q(ithdra)-.44 E(wW)-.165 E(indo)-.44 E(w)-.275 E -.88(Wa)
72 445 S 138.42(rpPointer XW).88 F(arpPointer)-.88 E F0(436)279.75 769 Q
0 Cg EP
%%Page: 437 442
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E/F1 12/Times-Bold@0 SF -.3(Ap)257.64
111 S(pendix B).3 E 3(XF)248.154 137 S(ont Cursors)-3.3 E/F2 11
/Times-Roman@0 SF(The follo)72 179.9 Q(wing are the a)-.275 E -.275(va)
-.22 G(ilable cursors that can be used with).275 E F0(XCr)3.666 E(eateF)
-.198 E(ontCursor)-.275 E F2(.).916 E(#de\214ne XC_X_cursor 0)72 203.3 Q
(#de\214ne XC_ll_angle 76)110.906 E(#de\214ne XC_arro)72 216.3 Q 118.21
2.75(w2 #)-.275 H(de\214ne XC_lr_angle 78)-2.75 E
(#de\214ne XC_based_arro)72 229.3 Q(w_do)-.275 E(wn 4)-.275 E
(#de\214ne XC_man 80)66.246 E(#de\214ne XC_based_arro)72 242.3 Q(w_up 6)
-.275 E(#de\214ne XC_middleb)79.413 E(utton 82)-.22 E
(#de\214ne XC_boat 8)72 255.3 Q(#de\214ne XC_mouse 84)132.895 E
(#de\214ne XC_bogosity 10)72 268.3 Q(#de\214ne XC_pencil 86)108.442 E
(#de\214ne XC_bottom_left_corner 12)72 281.3 Q(#de\214ne XC_pirate 88)
61.406 E(#de\214ne XC_bottom_right_corner 14)72 294.3 Q
(#de\214ne XC_plus 90)55.29 E(#de\214ne XC_bottom_side 16)72 307.3 Q
(#de\214ne XC_question_arro)91.942 E 2.75(w9)-.275 G(2)-2.75 E
(#de\214ne XC_bottom_tee 18)72 320.3 Q(#de\214ne XC_right_ptr 94)96.837
E(#de\214ne XC_box_spiral 20)72 333.3 Q(#de\214ne XC_right_side 96)
99.895 E(#de\214ne XC_center_ptr 22)72 346.3 Q
(#de\214ne XC_right_tee 98)101.743 E(#de\214ne XC_circle 24)72 359.3 Q
(#de\214ne XC_rightb)121.906 E(utton 100)-.22 E(#de\214ne XC_clock 26)72
372.3 Q(#de\214ne XC_rtl_logo 102)122.511 E(#de\214ne XC_cof)72 385.3 Q
(fee_mug 28)-.275 E(#de\214ne XC_sailboat 104)94.076 E
(#de\214ne XC_cross 30)72 398.3 Q(#de\214ne XC_sb_do)123.732 E(wn_arro)
-.275 E 2.75(w1)-.275 G(06)-2.75 E(#de\214ne XC_cross_re)72 411.3 Q
-.165(ve)-.275 G(rse 32).165 E(#de\214ne XC_sb_h_double_arro)86.915 E
2.75(w1)-.275 G(08)-2.75 E(#de\214ne XC_crosshair 34)72 424.3 Q
(#de\214ne XC_sb_left_arro)106.627 E 2.75(w1)-.275 G(10)-2.75 E
(#de\214ne XC_diamond_cross 36)72 437.3 Q(#de\214ne XC_sb_right_arro)
79.732 E 2.75(w1)-.275 G(12)-2.75 E(#de\214ne XC_dot 38)72 450.3 Q
(#de\214ne XC_sb_up_arro)132.279 E 2.75(w1)-.275 G(14)-2.75 E
(#de\214ne XC_dot_box_mask 40)72 463.3 Q(#de\214ne XC_sb_v_double_arro)
81.558 E 2.75(w1)-.275 G(16)-2.75 E(#de\214ne XC_double_arro)72 476.3 Q
2.75(w4)-.275 G 85.518(2#)-2.75 G(de\214ne XC_shuttle 118)-85.518 E
(#de\214ne XC_draft_lar)72 489.3 Q(ge 44)-.198 E
(#de\214ne XC_sizing 120)98.278 E(#de\214ne XC_draft_small 46)72 502.3 Q
(#de\214ne XC_spider 122)96.232 E(#de\214ne XC_draped_box 48)72 515.3 Q
(#de\214ne XC_spraycan 124)94.406 E(#de\214ne XC_e)72 528.3 Q
(xchange 50)-.165 E(#de\214ne XC_star 126)104.966 E
(#de\214ne XC_\215eur 52)72 541.3 Q(#de\214ne XC_tar)126.174 E(get 128)
-.198 E(#de\214ne XC_gobbler 54)72 554.3 Q(#de\214ne XC_tcross 130)
112.732 E(#de\214ne XC_gumby 56)72 567.3 Q(#de\214ne XC_top_left_arro)
115.779 E 2.75(w1)-.275 G(32)-2.75 E(#de\214ne XC_hand1 58)72 580.3 Q
(#de\214ne XC_top_left_corner 134)119.453 E(#de\214ne XC_hand2 60)72
593.3 Q(#de\214ne XC_top_right_corner 136)119.453 E
(#de\214ne XC_heart 62)72 606.3 Q(#de\214ne XC_top_side 138)124.348 E
(#de\214ne XC_icon 64)72 619.3 Q(#de\214ne XC_top_tee 140)127.395 E
(#de\214ne XC_iron_cross 66)72 632.3 Q(#de\214ne XC_trek 142)100.511 E
(#de\214ne XC_left_ptr 68)72 645.3 Q(#de\214ne XC_ul_angle 144)113.953 E
(#de\214ne XC_left_side 70)72 658.3 Q(#de\214ne XC_umbrella 146)108.453
E(#de\214ne XC_left_tee 72)72 671.3 Q(#de\214ne XC_ur_angle 148)113.348
E(#de\214ne XC_leftb)72 684.3 Q(utton 74)-.22 E(#de\214ne XC_w)103.778 E
(atch 150)-.11 E(#de\214ne XC_xterm 152)288 697.3 Q F0(437)279.75 769 Q
0 Cg EP
%%Page: 438 443
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E/F1 12/Times-Bold@0 SF -.3(Ap)257.31
111 S(pendix C).3 E(Extensions)260.328 137 Q/F2 11/Times-Roman@0 SF
(Because X can e)72 179.9 Q -.22(vo)-.275 G(lv).22 E 2.75(eb)-.165 G
2.75(ye)-2.75 G(xtensions to the core protocol, it is important that e)
-2.915 E(xtensions not be)-.165 E(percei)72 192.9 Q -.165(ve)-.275 G
2.75(da).165 G 2.75(ss)-2.75 G(econd-class citizens.)-2.75 E
(At some point, your f)5.5 E -.22(avo)-.11 G(rite e).22 E
(xtensions may be adopted as)-.165 E
(additional parts of the X Standard.)72 205.9 Q
(Therefore, there should be little to distinguish the use of an e)72
222.8 Q(xtension from that of the core proto-)-.165 E 2.75(col. T)72
235.8 R 2.75(oa)-.88 G -.22(vo)-2.97 G(id ha).22 E(ving to initialize e)
-.22 E(xtensions e)-.165 E
(xplicitly in application programs, it is also impor)-.165 E(-)-.22 E
(tant that e)72 248.8 Q(xtensions perform lazy e)-.165 E -.275(va)-.275
G(luations, automatically initializing themselv).275 E(es when called)
-.165 E(for the \214rst time.)72 261.8 Q
(This appendix describes techniques for writing e)72 278.7 Q
(xtensions to Xlib that will run at essentially the)-.165 E
(same performance as the core protocol requests.)72 291.7 Q(Note)277.308
314.7 Q(It is e)99.5 332.7 Q(xpected that a gi)-.165 E -.165(ve)-.275 G
2.75(ne).165 G(xtension to X consists of multiple requests.)-2.915 E
(De\214ning 10)5.5 E(ne)99.5 345.7 Q 2.75(wf)-.275 G
(eatures as 10 separate e)-2.75 E(xtensions is a bad practice.)-.165 E
(Rather)5.5 E 2.75(,t)-.44 G(he)-2.75 E 2.75(ys)-.165 G(hould be pack-)
-2.75 E(aged into a single e)99.5 358.7 Q
(xtension and should use minor opcodes to distinguish the)-.165 E
(requests.)99.5 371.7 Q
(The symbols and macros used for writing stubs to Xlib are listed in <)
72 398.6 Q F0(X11/Xlibint.h)A F2(>.)A F0(Basic Pr)72 424.6 Q
(otocol Support Routines)-.198 E F2(The basic protocol requests for e)72
441.5 Q(xtensions are)-.165 E F0(XQueryExtension)3.666 E F2(and)3.666 E
F0(XListExtensions)3.666 E F2(.).916 E .44 LW 36 459.25 36 470.25 DL 36
457.25 36 468.25 DL 41.5 455.5 36 455.5 DL 43.5 455.5 38 455.5 DL 49
455.5 43.5 455.5 DL(Bool XQueryExtension\()72 471.4 Q/F3 11
/Times-Italic@0 SF(display).916 E F2(,)A F3(name)2.75 E F2(,)A F3
(major_opcode_r)2.75 E(eturn)-.407 E F2(,)A F3<8c72>2.75 E(st_e)-.11 E
(vent_r)-.165 E(eturn)-.407 E F2(,)A F3<8c72>2.75 E(st_err)-.11 E(or_r)
-.495 E(eturn)-.407 E F2(\)).916 E(Display *)88.5 484.4 Q F3(display)A
F2(;).916 E(char *)88.5 497.4 Q F3(name;)A F2(int *)88.5 510.4 Q F3
(major_opcode_r)A(eturn)-.407 E F2(;).916 E(int *)88.5 523.4 Q F3<8c72>A
(st_e)-.11 E(vent_r)-.165 E(eturn)-.407 E F2(;).916 E(int *)88.5 536.4 Q
F3<8c72>A(st_err)-.11 E(or_r)-.495 E(eturn)-.407 E F2(;).916 E F3
(display)72 557.2 Q F2(Speci\214es the connection to the X serv)40.221 E
(er)-.165 E(.)-.605 E F3(name)72 574.1 Q F2(Speci\214es the e)48.174 E
(xtension name.)-.165 E F3(major_opcode_r)72 591 Q(eturn)-.407 E F2
(Returns the major opcode.)144 604 Q F3<8c72>72 620.9 Q(st_e)-.11 E
(vent_r)-.165 E(eturn)-.407 E F2(Returns the \214rst e)144 633.9 Q -.165
(ve)-.275 G(nt code, if an).165 E -.715(y.)-.165 G F3<8c72>72 650.8 Q
(st_err)-.11 E(or_r)-.495 E(eturn)-.407 E F2
(Returns the \214rst error code, if an)144 663.8 Q -.715(y.)-.165 G 36
659.45 36 670.45 DL 36 657.45 36 668.45 DL 41.5 668.7 36 668.7 DL 43.5
668.7 38 668.7 DL 49 668.7 43.5 668.7 DL(The)72 693.7 Q F0
(XQueryExtension)3.666 E F2(function determines if the named e)3.666 E
(xtension is present.)-.165 E(If the e)5.5 E(xtension is)-.165 E
(not present,)72 706.7 Q F0(XQueryExtension)3.666 E F2(returns)3.666 E
F0 -.275(Fa)3.666 G(lse).275 E F2 2.75(;o).916 G(therwise, it returns)
-2.75 E F0 -.814(Tr)3.666 G(ue).814 E F2 5.5(.I).916 G 2.75(ft)-5.5 G
(he e)-2.75 E(xtension is)-.165 E(present,)72 719.7 Q F0
(XQueryExtension)3.666 E F2(returns the major opcode for the e)3.666 E
(xtension to major_opcode_return;)-.165 E(otherwise, it returns zero.)72
732.7 Q(An)5.5 E 2.75(ym)-.165 G
(inor opcode and the request formats are speci\214c to the)-2.75 E F0
(438)279.75 769 Q 0 Cg EP
%%Page: 439 444
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E/F1 11/Times-Roman@0 SF -.165(ex)72 85
S 2.75(tension. If).165 F(the e)2.75 E(xtension in)-.165 E -.22(vo)-.44
G(lv).22 E(es additional e)-.165 E -.165(ve)-.275 G(nt types,).165 E F0
(XQueryExtension)3.666 E F1(returns the base)3.666 E -2.365 -.275(ev e)
72 98 T(nt type code to \214rst_e).275 E -.165(ve)-.275 G
(nt_return; otherwise, it returns zero.).165 E(The format of the e)5.5 E
-.165(ve)-.275 G(nts is spe-).165 E(ci\214c to the e)72 111 Q 2.75
(xtension. If)-.165 F(the e)2.75 E(xtension in)-.165 E -.22(vo)-.44 G
(lv).22 E(es additional error codes,)-.165 E F0(XQueryExtension)3.666 E
F1(returns)3.666 E(the base error code to \214rst_error_return; otherwi\
se, it returns zero.)72 124 Q(The format of additional data)5.5 E
(in the errors is speci\214c to the e)72 137 Q(xtension.)-.165 E
(If the e)72 153.9 Q(xtension name is not in the Host Portable Characte\
r Encoding the result is implementation-)-.165 E 2.75
(dependent. Uppercase)72 166.9 R(and lo)2.75 E
(wercase matter; the strings `)-.275 E(`thing')-.814 E(', `)-.814 E
(`Thing')-.814 E(', and `)-.814 E(`thinG')-.814 E 2.75('a)-.814 G
(re all)-2.75 E(considered dif)72 179.9 Q(ferent names.)-.275 E .44 LW
36 197.65 36 208.65 DL 36 195.65 36 206.65 DL 41.5 193.9 36 193.9 DL
43.5 193.9 38 193.9 DL 49 193.9 43.5 193.9 DL(char **XListExtensions\()
72 209.8 Q/F2 11/Times-Italic@0 SF(display).916 E F1(,)A F2(ne)2.75 E
(xtensions_r)-.22 E(eturn)-.407 E F1(\)).916 E(Display *)88.5 222.8 Q F2
(display)A F1(;).916 E(int *)88.5 235.8 Q F2(ne)A(xtensions_r)-.22 E
(eturn)-.407 E F1(;).916 E F2(display)72 256.6 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2(ne)72 273.5 Q(xtensions_r)-.22 E(eturn)-.407 E F1
(Returns the number of e)144 286.5 Q(xtensions listed.)-.165 E 36 282.15
36 293.15 DL 36 280.15 36 291.15 DL 41.5 291.4 36 291.4 DL 43.5 291.4 38
291.4 DL 49 291.4 43.5 291.4 DL(The)72 316.4 Q F0(XListExtensions)3.666
E F1(function returns a list of all e)3.666 E
(xtensions supported by the serv)-.165 E(er)-.165 E 5.5(.I)-.605 G 2.75
(ft)-5.5 G(he data)-2.75 E(returned by the serv)72 329.4 Q(er is in the\
 Latin Portable Character Encoding, then the returned strings are in)
-.165 E(the Host Portable Character Encoding.)72 342.4 Q
(Otherwise, the result is implementation-dependent.)5.5 E 36 360.15 36
371.15 DL 36 358.15 36 369.15 DL 41.5 356.4 36 356.4 DL 43.5 356.4 38
356.4 DL 49 356.4 43.5 356.4 DL(XFreeExtensionList\()72 372.3 Q F2(list)
.916 E F1(\)).916 E(char **)88.5 385.3 Q F2(list)A F1(;).916 E F2(list)
72 406.1 Q F1(Speci\214es the list of e)58.547 E(xtension names.)-.165 E
36 401.75 36 412.75 DL 36 399.75 36 410.75 DL 41.5 411 36 411 DL 43.5
411 38 411 DL 49 411 43.5 411 DL(The)72 436 Q F0(XFr)3.666 E
(eeExtensionList)-.198 E F1(function frees the memory allocated by)3.666
E F0(XListExtensions)3.666 E F1(.).916 E F0(Hooking into Xlib)72 462 Q
F1(These functions allo)72 478.9 Q 2.75(wy)-.275 G
(ou to hook into the library)-2.75 E 5.5(.T)-.715 G(he)-5.5 E 2.75(ya)
-.165 G(re not normally used by application)-2.75 E(programmers b)72
491.9 Q(ut are used by people who need to e)-.22 E
(xtend the core X protocol and the X library)-.165 E(interf)72 504.9 Q
2.75(ace. The)-.11 F(functions, which generate protocol requests for X,\
 are typically called stubs.)2.75 E(In e)72 521.8 Q
(xtensions, stubs \214rst should check to see if the)-.165 E 2.75(yh)
-.165 G -2.475 -.22(av e)-2.75 H(initialized themselv)2.97 E
(es on a connection.)-.165 E(If the)72 534.8 Q 2.75(yh)-.165 G -2.475
-.22(av e)-2.75 H(not, the)2.97 E 2.75(yt)-.165 G(hen should call)-2.75
E F0(XInitExtension)3.666 E F1(to attempt to initialize themselv)3.666 E
(es on the)-.165 E(connection.)72 547.8 Q(If the e)72 564.7 Q(xtension \
needs to be informed of GC/font allocation or deallocation or if the e)
-.165 E(xtension)-.165 E(de\214nes ne)72 577.7 Q 2.75(we)-.275 G -.165
(ve)-3.025 G(nt types, the functions described here allo).165 E 2.75(wt)
-.275 G(he e)-2.75 E(xtension to be called when these)-.165 E -2.365
-.275(ev e)72 590.7 T(nts occur).275 E(.)-.605 E(The)72 607.6 Q F0
(XExtCodes)3.666 E F1(structure returns the information from)3.666 E F0
(XInitExtension)3.666 E F1(and is de\214ned in)3.666 E(<)72 620.6 Q F0
(X11/Xlib)A(.h)-.44 E F1(>:)A F0(439)279.75 769 Q 0 Cg EP
%%Page: 440 445
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E .44 LW 36 76.75 36 87.75 DL 36 74.75
36 85.75 DL 41.5 73 36 73 DL 43.5 73 38 73 DL 49 73 43.5 73 DL/F1 11
/Times-Roman@0 SF(typedef struct _XExtCodes {)72 91.5 Q(/* public to e)
88.818 E(xtension, cannot be changed */)-.165 E(int e)108 104.5 Q
117.828(xtension; /*)-.165 F -.165(ex)2.75 G(tension number */).165 E
(int major_opcode;)108 117.5 Q(/* major op-code assigned by serv)99.645
E(er */)-.165 E(int \214rst_e)108 130.5 Q -.165(ve)-.275 G 113.824
(nt; /*).165 F(\214rst e)2.75 E -.165(ve)-.275 G(nt number for the e)
.165 E(xtension */)-.165 E(int \214rst_error;)108 143.5 Q
(/* \214rst error number for the e)118.587 E(xtension */)-.165 E 2.75
(}X)72 156.5 S(ExtCodes;)-2.75 E 36 158.65 36 169.65 DL 36 156.65 36
167.65 DL 41.5 167.9 36 167.9 DL 43.5 167.9 38 167.9 DL 49 167.9 43.5
167.9 DL 36 197.65 36 208.65 DL 36 195.65 36 206.65 DL 41.5 193.9 36
193.9 DL 43.5 193.9 38 193.9 DL 49 193.9 43.5 193.9 DL
(XExtCodes *XInitExtension\()72 209.8 Q/F2 11/Times-Italic@0 SF(display)
.916 E F1(,)A F2(name)2.75 E F1(\)).916 E(Display *)88.5 222.8 Q F2
(display)A F1(;).916 E(char *)88.5 235.8 Q F2(name)A F1(;).916 E F2
(display)72 256.6 Q F1(Speci\214es the connection to the X serv)40.221 E
(er)-.165 E(.)-.605 E F2(name)72 273.5 Q F1(Speci\214es the e)48.174 E
(xtension name.)-.165 E 36 269.15 36 280.15 DL 36 267.15 36 278.15 DL
41.5 278.4 36 278.4 DL 43.5 278.4 38 278.4 DL 49 278.4 43.5 278.4 DL
(The)72 303.4 Q F0(XInitExtension)3.666 E F1
(function determines if the named e)3.666 E(xtension e)-.165 E 2.75
(xists. Then,)-.165 F(it allocates storage)2.75 E
(for maintaining the information about the e)72 316.4 Q
(xtension on the connection, chains this onto the e)-.165 E(xten-)-.165
E(sion list for the connection, and returns the information the stub im\
plementor will need to access)72 329.4 Q(the e)72 342.4 Q 2.75
(xtension. If)-.165 F(the e)2.75 E(xtension does not e)-.165 E(xist,)
-.165 E F0(XInitExtension)3.666 E F1(returns NULL.)3.666 E(If the e)72
359.3 Q(xtension name is not in the Host Portable Character Encoding, t\
he result is implementa-)-.165 E 2.75(tion-dependent. Uppercase)72 372.3
R(and lo)2.75 E(wercase matter; the strings `)-.275 E(`thing')-.814 E
(', `)-.814 E(`Thing')-.814 E(', and `)-.814 E(`thinG')-.814 E 2.75('a)
-.814 G(re)-2.75 E(all considered dif)72 385.3 Q(ferent names.)-.275 E
(The e)72 402.2 Q(xtension number in the)-.165 E F0(XExtCodes)3.666 E F1
(structure is needed in the other calls that follo)3.666 E 4.18 -.715
(w. T)-.275 H(his).715 E -.165(ex)72 415.2 S
(tension number is unique only to a single connection.).165 E 36 436.85
36 447.85 DL 36 434.85 36 445.85 DL 41.5 433.1 36 433.1 DL 43.5 433.1 38
433.1 DL 49 433.1 43.5 433.1 DL(XExtCodes *XAddExtension)72 449 Q(\()
.916 E F2(display).916 E F1(\)).916 E(Display *)94 462 Q F2(display)A F1
(;).916 E F2(display)72 482.8 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
36 478.45 36 489.45 DL 36 476.45 36 487.45 DL 41.5 487.7 36 487.7 DL
43.5 487.7 38 487.7 DL 49 487.7 43.5 487.7 DL -.165(Fo)72 512.7 S 2.75
(rl).165 G(ocal Xlib e)-2.75 E(xtensions, the)-.165 E F0(XAddExtension)
3.666 E F1(function allocates the)3.666 E F0(XExtCodes)3.666 E F1
(structure,)3.666 E -.22(bu)72 525.7 S(mps the e).22 E
(xtension number count, and chains the e)-.165 E(xtension onto the e)
-.165 E(xtension list.)-.165 E(\(This per)5.5 E(-)-.22 E(mits e)72 538.7
Q(xtensions to Xlib without requiring serv)-.165 E(er e)-.165 E
(xtensions.\))-.165 E F0(Hooks into the Library)72 564.7 Q F1
(These functions allo)72 581.6 Q 2.75(wy)-.275 G
(ou to de\214ne procedures that are to be called when v)-2.75 E
(arious circumstances)-.275 E(occur)72 594.6 Q 5.5(.T)-.605 G
(he procedures include the creation of a ne)-5.5 E 2.75(wG)-.275 G 2.75
(Cf)-2.75 G(or a connection, the cop)-2.75 E(ying of a GC,)-.11 E
(the freeing of a GC, the creating and freeing of fonts, the con)72
607.6 Q -.165(ve)-.44 G(rsion of e).165 E -.165(ve)-.275 G
(nts de\214ned by e).165 E(xten-)-.165 E
(sions to and from wire format, and the handling of errors.)72 620.6 Q
(All of these functions return the pre)72 637.5 Q
(vious procedure de\214ned for this e)-.275 E(xtension.)-.165 E F0(440)
279.75 769 Q 0 Cg EP
%%Page: 441 446
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E .44 LW 36 76.75 36 87.75 DL 36 74.75
36 85.75 DL 41.5 73 36 73 DL 43.5 73 38 73 DL 49 73 43.5 73 DL/F1 11
/Times-Roman@0 SF(int \(*XESetCloseDisplay\()72 88.9 Q/F2 11
/Times-Italic@0 SF(display).916 E F1(,)A F2 -.22(ex)2.75 G(tension).22 E
F1(,)A F2(pr)2.75 E(oc)-.495 E F1 -1.834(\)\)\( \)).916 F(Display *)88.5
101.9 Q F2(display)A F1(;).916 E(int)88.5 114.9 Q F2 -.22(ex)2.75 G
(tension).22 E F1(;).916 E(int \()88.5 127.9 Q(*).916 E F2(pr)A(oc)-.495
E F1 -1.834(\)\( \);).916 F F2(display)72 148.7 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2 -.22(ex)72 165.6 S(tension).22 E F1(Speci\214es the e)30.673 E
(xtension number)-.165 E(.)-.605 E F2(pr)72 182.5 Q(oc)-.495 E F1
(Speci\214es the procedure to call when the display is closed.)52.332 E
36 178.15 36 189.15 DL 36 176.15 36 187.15 DL 41.5 187.4 36 187.4 DL
43.5 187.4 38 187.4 DL 49 187.4 43.5 187.4 DL(The)72 212.4 Q F0
(XESetCloseDisplay)3.666 E F1
(function de\214nes a procedure to be called whene)3.666 E -.165(ve)
-.275 G(r).165 E F0(XCloseDisplay)3.666 E F1(is)3.666 E 2.75(called. It)
72 225.4 R(returns an)2.75 E 2.75(yp)-.165 G(re)-2.75 E
(viously de\214ned procedure, usually NULL.)-.275 E(When)72 242.3 Q F0
(XCloseDisplay)3.666 E F1
(is called, your procedure is called with these ar)3.666 E(guments:)
-.198 E 36 263.95 36 274.95 DL 36 261.95 36 272.95 DL 41.5 260.2 36
260.2 DL 43.5 260.2 38 260.2 DL 49 260.2 43.5 260.2 DL(\(*)72 278.7 Q F2
(pr)A(oc)-.495 E F1(\)\().916 E F2(display).916 E F1(,)A F2(codes)2.75 E
F1(\)).916 E(Display *)108 291.7 Q F2(display)A F1(;).916 E(XExtCodes *)
108 304.7 Q F2(codes)A F1(;).916 E 36 306.85 36 317.85 DL 36 304.85 36
315.85 DL 41.5 316.1 36 316.1 DL 43.5 316.1 38 316.1 DL 49 316.1 43.5
316.1 DL 36 345.85 36 356.85 DL 36 343.85 36 354.85 DL 41.5 342.1 36
342.1 DL 43.5 342.1 38 342.1 DL 49 342.1 43.5 342.1 DL
(int \(*XESetCreateGC\()72 358 Q F2(display).916 E F1(,)A F2 -.22(ex)
2.75 G(tension).22 E F1(,)A F2(pr)2.75 E(oc)-.495 E F1 -1.834(\)\)\( \))
.916 F(Display *)88.5 371 Q F2(display)A F1(;).916 E(int)88.5 384 Q F2
-.22(ex)2.75 G(tension).22 E F1(;).916 E(int \()88.5 397 Q(*).916 E F2
(pr)A(oc)-.495 E F1 -1.834(\)\( \);).916 F F2(display)72 417.8 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2 -.22(ex)72 434.7 S(tension).22 E F1(Speci\214es the e)30.673 E
(xtension number)-.165 E(.)-.605 E F2(pr)72 451.6 Q(oc)-.495 E F1
(Speci\214es the procedure to call when a GC is closed.)52.332 E 36
447.25 36 458.25 DL 36 445.25 36 456.25 DL 41.5 456.5 36 456.5 DL 43.5
456.5 38 456.5 DL 49 456.5 43.5 456.5 DL(The)72 481.5 Q F0(XESetCr)3.666
E(eateGC)-.198 E F1(function de\214nes a procedure to be called whene)
3.666 E -.165(ve)-.275 G 2.75(ran).165 G .55 -.275(ew G)-2.75 H 2.75(Ci)
.275 G 2.75(sc)-2.75 G 2.75(reated. It)-2.75 F(returns an)72 494.5 Q
2.75(yp)-.165 G(re)-2.75 E(viously de\214ned procedure, usually NULL.)
-.275 E(When a GC is created, your procedure is called with these ar)72
511.4 Q(guments:)-.198 E 36 533.05 36 544.05 DL 36 531.05 36 542.05 DL
41.5 529.3 36 529.3 DL 43.5 529.3 38 529.3 DL 49 529.3 43.5 529.3 DL
(\(*)72 547.8 Q F2(pr)A(oc)-.495 E F1(\)\().916 E F2(display).916 E F1
(,)A F2(gc)2.75 E F1(,)A F2(codes)2.75 E F1(\)).916 E(Display *)108
560.8 Q F2(display)A F1(;).916 E(GC)108 573.8 Q F2(gc)2.75 E F1(;).916 E
(XExtCodes *)108 586.8 Q F2(codes)A F1(;).916 E 36 588.95 36 599.95 DL
36 586.95 36 597.95 DL 41.5 598.2 36 598.2 DL 43.5 598.2 38 598.2 DL 49
598.2 43.5 598.2 DL F0(441)279.75 769 Q 0 Cg EP
%%Page: 442 447
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E .44 LW 36 76.75 36 87.75 DL 36 74.75
36 85.75 DL 41.5 73 36 73 DL 43.5 73 38 73 DL 49 73 43.5 73 DL/F1 11
/Times-Roman@0 SF(int \(*XESetCop)72 88.9 Q(yGC\()-.11 E/F2 11
/Times-Italic@0 SF(display).916 E F1(,)A F2 -.22(ex)2.75 G(tension).22 E
F1(,)A F2(pr)2.75 E(oc)-.495 E F1 -1.834(\)\)\( \)).916 F(Display *)88.5
101.9 Q F2(display)A F1(;).916 E(int)88.5 114.9 Q F2 -.22(ex)2.75 G
(tension).22 E F1(;).916 E(int \()88.5 127.9 Q(*).916 E F2(pr)A(oc)-.495
E F1 -1.834(\)\( \);).916 F F2(display)72 148.7 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2 -.22(ex)72 165.6 S(tension).22 E F1(Speci\214es the e)30.673 E
(xtension number)-.165 E(.)-.605 E F2(pr)72 182.5 Q(oc)-.495 E F1
(Speci\214es the procedure to call when GC components are copied.)52.332
E 36 178.15 36 189.15 DL 36 176.15 36 187.15 DL 41.5 187.4 36 187.4 DL
43.5 187.4 38 187.4 DL 49 187.4 43.5 187.4 DL(The)72 212.4 Q F0
(XESetCopyGC)3.666 E F1
(function de\214nes a procedure to be called whene)3.666 E -.165(ve)
-.275 G 2.75(raG).165 G 2.75(Ci)-2.75 G 2.75(sc)-2.75 G 2.75(opied. It)
-2.75 F(returns an)72 225.4 Q 2.75(yp)-.165 G(re)-2.75 E
(viously de\214ned procedure, usually NULL.)-.275 E
(When a GC is copied, your procedure is called with these ar)72 242.3 Q
(guments:)-.198 E 36 263.95 36 274.95 DL 36 261.95 36 272.95 DL 41.5
260.2 36 260.2 DL 43.5 260.2 38 260.2 DL 49 260.2 43.5 260.2 DL(\(*)72
278.7 Q F2(pr)A(oc)-.495 E F1(\)\().916 E F2(display).916 E F1(,)A F2
(gc)2.75 E F1(,)A F2(codes)2.75 E F1(\)).916 E(Display *)108 291.7 Q F2
(display)A F1(;).916 E(GC)108 304.7 Q F2(gc)2.75 E F1(;).916 E
(XExtCodes *)108 317.7 Q F2(codes)A F1(;).916 E 36 319.85 36 330.85 DL
36 317.85 36 328.85 DL 41.5 329.1 36 329.1 DL 43.5 329.1 38 329.1 DL 49
329.1 43.5 329.1 DL 36 358.85 36 369.85 DL 36 356.85 36 367.85 DL 41.5
355.1 36 355.1 DL 43.5 355.1 38 355.1 DL 49 355.1 43.5 355.1 DL
(int \(*XESetFreeGC\()72 371 Q F2(display).916 E F1(,)A F2 -.22(ex)2.75
G(tension).22 E F1(,)A F2(pr)2.75 E(oc\))-.495 E F1 -1.834(\)\( \)).916
F(Display *)88.5 384 Q F2(display)A F1(;).916 E(int)88.5 397 Q F2 -.22
(ex)2.75 G(tension).22 E F1(;).916 E(int \()88.5 410 Q(*).916 E F2(pr)A
(oc)-.495 E F1 -1.834(\)\( \);).916 F F2(display)72 430.8 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2 -.22(ex)72 447.7 S(tension).22 E F1(Speci\214es the e)30.673 E
(xtension number)-.165 E(.)-.605 E F2(pr)72 464.6 Q(oc)-.495 E F1
(Speci\214es the procedure to call when a GC is freed.)52.332 E 36
460.25 36 471.25 DL 36 458.25 36 469.25 DL 41.5 469.5 36 469.5 DL 43.5
469.5 38 469.5 DL 49 469.5 43.5 469.5 DL(The)72 494.5 Q F0(XESetFr)3.666
E(eeGC)-.198 E F1(function de\214nes a procedure to be called whene)
3.666 E -.165(ve)-.275 G 2.75(raG).165 G 2.75(Ci)-2.75 G 2.75(sf)-2.75 G
2.75(reed. It)-2.75 F(returns)2.75 E(an)72 507.5 Q 2.75(yp)-.165 G(re)
-2.75 E(viously de\214ned procedure, usually NULL.)-.275 E
(When a GC is freed, your procedure is called with these ar)72 524.4 Q
(guments:)-.198 E 36 546.05 36 557.05 DL 36 544.05 36 555.05 DL 41.5
542.3 36 542.3 DL 43.5 542.3 38 542.3 DL 49 542.3 43.5 542.3 DL(\(*)72
560.8 Q F2(pr)A(oc)-.495 E F1(\)\().916 E F2(display).916 E F1(,)A F2
(gc)2.75 E F1(,)A F2(codes)2.75 E F1(\)).916 E(Display *)108 573.8 Q F2
(display)A F1(;).916 E(GC)108 586.8 Q F2(gc)2.75 E F1(;).916 E
(XExtCodes *)108 599.8 Q F2(codes)A F1(;).916 E 36 601.95 36 612.95 DL
36 599.95 36 610.95 DL 41.5 611.2 36 611.2 DL 43.5 611.2 38 611.2 DL 49
611.2 43.5 611.2 DL F0(442)279.75 769 Q 0 Cg EP
%%Page: 443 448
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E .44 LW 36 76.75 36 87.75 DL 36 74.75
36 85.75 DL 41.5 73 36 73 DL 43.5 73 38 73 DL 49 73 43.5 73 DL/F1 11
/Times-Roman@0 SF(int \(*XESetCreateF)72 88.9 Q(ont\()-.165 E/F2 11
/Times-Italic@0 SF(display).916 E F1(,)A F2 -.22(ex)2.75 G(tension).22 E
F1(,)A F2(pr)2.75 E(oc)-.495 E F1 -1.834(\)\)\( \))B(Display *)88.5
101.9 Q F2(display)A F1(;).916 E(int)88.5 114.9 Q F2 -.22(ex)2.75 G
(tension).22 E F1(;).916 E(int \()88.5 127.9 Q(*).916 E F2(pr)A(oc)-.495
E F1 -1.834(\)\( \);).916 F F2(display)72 148.7 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2 -.22(ex)72 165.6 S(tension).22 E F1(Speci\214es the e)30.673 E
(xtension number)-.165 E(.)-.605 E F2(pr)72 182.5 Q(oc)-.495 E F1
(Speci\214es the procedure to call when a font is created.)52.332 E 36
178.15 36 189.15 DL 36 176.15 36 187.15 DL 41.5 187.4 36 187.4 DL 43.5
187.4 38 187.4 DL 49 187.4 43.5 187.4 DL(The)72 212.4 Q F0(XESetCr)3.666
E(eateF)-.198 E(ont)-.275 E F1
(function de\214nes a procedure to be called whene)3.666 E -.165(ve)
-.275 G(r).165 E F0(XLoadQueryF)3.666 E(ont)-.275 E F1(and)72 225.4 Q F0
(XQueryF)3.666 E(ont)-.275 E F1(are called.)3.666 E(It returns an)5.5 E
2.75(yp)-.165 G(re)-2.75 E(viously de\214ned procedure, usually NULL.)
-.275 E(When)72 242.3 Q F0(XLoadQueryF)3.666 E(ont)-.275 E F1(or)3.666 E
F0(XQueryF)3.666 E(ont)-.275 E F1
(is called, your procedure is called with these ar)3.666 E(gu-)-.198 E
(ments:)72 255.3 Q 36 276.95 36 287.95 DL 36 274.95 36 285.95 DL 41.5
273.2 36 273.2 DL 43.5 273.2 38 273.2 DL 49 273.2 43.5 273.2 DL(\(*)72
291.7 Q F2(pr)A(oc)-.495 E F1(\)\().916 E F2(display).916 E F1(,)A F2
(fs)2.75 E F1(,)A F2(codes)2.75 E F1(\)).916 E(Display *)108 304.7 Q F2
(display)A F1(;).916 E(XF)108 317.7 Q(ontStruct *)-.165 E F2(fs)A F1(;)
.916 E(XExtCodes *)108 330.7 Q F2(codes)A F1(;).916 E 36 332.85 36
343.85 DL 36 330.85 36 341.85 DL 41.5 342.1 36 342.1 DL 43.5 342.1 38
342.1 DL 49 342.1 43.5 342.1 DL 36 371.85 36 382.85 DL 36 369.85 36
380.85 DL 41.5 368.1 36 368.1 DL 43.5 368.1 38 368.1 DL 49 368.1 43.5
368.1 DL(int \(*XESetFreeF)72 384 Q(ont\()-.165 E F2(display).916 E F1
(,)A F2 -.22(ex)2.75 G(tension).22 E F1(,)A F2(pr)2.75 E(oc)-.495 E F1
-1.834(\)\)\( \)).916 F(Display *)88.5 397 Q F2(display)A F1(;).916 E
(int)88.5 410 Q F2 -.22(ex)2.75 G(tension).22 E F1(;).916 E(int \()88.5
423 Q(*).916 E F2(pr)A(oc)-.495 E F1 -1.834(\)\( \);)B F2(display)72
443.8 Q F1(Speci\214es the connection to the X serv)40.221 E(er)-.165 E
(.)-.605 E F2 -.22(ex)72 460.7 S(tension).22 E F1(Speci\214es the e)
30.673 E(xtension number)-.165 E(.)-.605 E F2(pr)72 477.6 Q(oc)-.495 E
F1(Speci\214es the procedure to call when a font is freed.)52.332 E 36
473.25 36 484.25 DL 36 471.25 36 482.25 DL 41.5 482.5 36 482.5 DL 43.5
482.5 38 482.5 DL 49 482.5 43.5 482.5 DL(The)72 507.5 Q F0(XESetFr)3.666
E(eeF)-.198 E(ont)-.275 E F1
(function de\214nes a procedure to be called whene)3.666 E -.165(ve)
-.275 G(r).165 E F0(XFr)3.666 E(eeF)-.198 E(ont)-.275 E F1(is called.)
3.666 E(It)5.5 E(returns an)72 520.5 Q 2.75(yp)-.165 G(re)-2.75 E
(viously de\214ned procedure, usually NULL.)-.275 E(When)72 537.4 Q F0
(XFr)3.666 E(eeF)-.198 E(ont)-.275 E F1
(is called, your procedure is called with these ar)3.666 E(guments:)
-.198 E 36 559.05 36 570.05 DL 36 557.05 36 568.05 DL 41.5 555.3 36
555.3 DL 43.5 555.3 38 555.3 DL 49 555.3 43.5 555.3 DL(\(*)72 573.8 Q F2
(pr)A(oc)-.495 E F1(\)\().916 E F2(display).916 E F1(,)A F2(fs)2.75 E F1
(,)A F2(codes)2.75 E F1(\)).916 E(Display *)108 586.8 Q F2(display)A F1
(;).916 E(XF)108 599.8 Q(ontStruct *)-.165 E F2(fs)A F1(;).916 E
(XExtCodes *)108 612.8 Q F2(codes)A F1(;).916 E 36 614.95 36 625.95 DL
36 612.95 36 623.95 DL 41.5 624.2 36 624.2 DL 43.5 624.2 38 624.2 DL 49
624.2 43.5 624.2 DL(The)72 649.2 Q F0(XESetW)3.666 E(ir)-.198 E(eT)-.198
E(oEv)-1.012 E(ent)-.11 E F1(and)3.666 E F0(XESetEv)3.666 E(entT)-.11 E
(oW)-1.012 E(ir)-.198 E(e)-.198 E F1(functions allo)3.666 E 2.75(wy)
-.275 G(ou to de\214ne ne)-2.75 E 2.75(we)-.275 G -.165(ve)-3.025 G
(nts to).165 E(the library)72 662.2 Q 5.5(.A)-.715 G(n)-5.5 E F0(XEv)
3.666 E(ent)-.11 E F1(structure al)3.666 E -.11(wa)-.11 G
(ys has a type code \(type).11 E F0(int)3.666 E F1 2.75(\)a).916 G 2.75
(st)-2.75 G(he \214rst component.)-2.75 E(This)5.5 E
(uniquely identi\214es what kind of e)72 675.2 Q -.165(ve)-.275 G
(nt it is.).165 E(The second component is al)5.5 E -.11(wa)-.11 G
(ys the serial number).11 E(\(type)72 688.2 Q F0 1.832(unsigned long)
3.666 F F1 2.75(\)o).916 G 2.75(ft)-2.75 G
(he last request processed by the serv)-2.75 E(er)-.165 E 5.5(.T)-.605 G
(he third component is al)-5.5 E -.11(wa)-.11 G(ys).11 E 2.75(aB)72
701.2 S(oolean \(type)-2.75 E F0(Bool)3.666 E F1 2.75(\)i).916 G
(ndicating whether the e)-2.75 E -.165(ve)-.275 G(nt came from a).165 E
F0(SendEv)3.666 E(ent)-.11 E F1(protocol request.)3.666 E
(The fourth component is al)72 714.2 Q -.11(wa)-.11 G
(ys a pointer to the display the e).11 E -.165(ve)-.275 G(nt w).165 E
(as read from.)-.11 E(The \214fth com-)5.5 E(ponent is al)72 727.2 Q
-.11(wa)-.11 G(ys a resource ID of one kind or another).11 E 2.75(,u)
-.44 G(sually a windo)-2.75 E 1.43 -.715(w, c)-.275 H
(arefully selected to be).715 E F0(443)279.75 769 Q 0 Cg EP
%%Page: 444 449
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E/F1 11/Times-Roman@0 SF
(useful to toolkit dispatchers.)72 85 Q(The \214fth component should al)
5.5 E -.11(wa)-.11 G(ys e).11 E(xist, e)-.165 E -.165(ve)-.275 G 2.75
(ni).165 G 2.75(ft)-2.75 G(he e)-2.75 E -.165(ve)-.275 G(nt does not)
.165 E(ha)72 98 Q .33 -.165(ve a n)-.22 H
(atural destination; if there is no v).165 E
(alue from the protocol to put in this component, initial-)-.275 E
(ize it to zero.)72 111 Q(Note)277.308 134 Q
(There is an implementation limit such that your host e)99.5 152 Q -.165
(ve)-.275 G(nt structure size cannot be).165 E
(bigger than the size of the)99.5 165 Q F0(XEv)3.666 E(ent)-.11 E F1
(union of structures.)3.666 E(There also is no w)5.5 E(ay to guar)-.11 E
(-)-.22 E(antee that more than 24 elements or 96 characters in the stru\
cture will be fully porta-)99.5 178 Q(ble between machines.)99.5 191 Q
.44 LW 36 218.75 36 229.75 DL 36 216.75 36 227.75 DL 41.5 215 36 215 DL
43.5 215 38 215 DL 49 215 43.5 215 DL(int \(*XESetW)72 230.9 Q(ireT)-.44
E(oEv)-.88 E(ent\()-.165 E/F2 11/Times-Italic@0 SF(display).916 E F1(,)A
F2 -.165(ev)2.75 G(ent_number).165 E F1(,)A F2(pr)2.75 E(oc)-.495 E F1
-1.834(\)\)\( \)).916 F(Display *)88.5 243.9 Q F2(display)A F1(;).916 E
(int)88.5 256.9 Q F2 -.165(ev)2.75 G(ent_number).165 E F1(;).916 E
(Status \()88.5 269.9 Q(*).916 E F2(pr)A(oc)-.495 E F1 -1.834(\)\( \);)
.916 F F2(display)72 290.7 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2 -.165(ev)72 307.6 S(ent_number).165 E F1(Speci\214es the e)9.85 E
-.165(ve)-.275 G(nt code.).165 E F2(pr)72 324.5 Q(oc)-.495 E F1
(Speci\214es the procedure to call when con)52.332 E -.165(ve)-.44 G
(rting an e).165 E -.165(ve)-.275 G(nt.).165 E 36 320.15 36 331.15 DL 36
318.15 36 329.15 DL 41.5 329.4 36 329.4 DL 43.5 329.4 38 329.4 DL 49
329.4 43.5 329.4 DL(The)72 354.4 Q F0(XESetW)3.666 E(ir)-.198 E(eT)-.198
E(oEv)-1.012 E(ent)-.11 E F1
(function de\214nes a procedure to be called when an e)3.666 E -.165(ve)
-.275 G(nt needs to be).165 E(con)72 367.4 Q -.165(ve)-.44 G
(rted from wire format \().165 E F0(xEv).916 E(ent)-.11 E F1 2.75(\)t)
.916 G 2.75(oh)-2.75 G(ost format \()-2.75 E F0(XEv).916 E(ent)-.11 E F1
2.75(\). The).916 F -2.365 -.275(ev e)2.75 H(nt number de\214nes which)
.275 E(protocol e)72 380.4 Q -.165(ve)-.275 G
(nt number to install a con).165 E -.165(ve)-.44 G(rsion procedure for)
.165 E(.)-.605 E F0(XESetW)6.416 E(ir)-.198 E(eT)-.198 E(oEv)-1.012 E
(ent)-.11 E F1(returns an)3.666 E(y)-.165 E(pre)72 393.4 Q
(viously de\214ned procedure.)-.275 E(Note)277.308 416.4 Q -1.21(Yo)99.5
434.4 S 2.75(uc)1.21 G(an replace a core e)-2.75 E -.165(ve)-.275 G
(nt con).165 E -.165(ve)-.44 G(rsion function with one of your o).165 E
(wn, although this)-.275 E(is not encouraged.)99.5 447.4 Q(It w)5.5 E
(ould, ho)-.11 E(we)-.275 E -.165(ve)-.275 G .88 -.44(r, a).165 H(llo)
.44 E 2.75(wy)-.275 G(ou to intercept a core e)-2.75 E -.165(ve)-.275 G
(nt and modify).165 E
(it before being placed in the queue or otherwise e)99.5 460.4 Q
(xamined.)-.165 E(When Xlib needs to con)72 483.4 Q -.165(ve)-.44 G
(rt an e).165 E -.165(ve)-.275 G
(nt from wire format to host format, your procedure is called).165 E
(with these ar)72 496.4 Q(guments:)-.198 E 36 518.05 36 529.05 DL 36
516.05 36 527.05 DL 41.5 514.3 36 514.3 DL 43.5 514.3 38 514.3 DL 49
514.3 43.5 514.3 DL(Status \(*)72 532.8 Q F2(pr)A(oc)-.495 E F1(\)\()
.916 E F2(display).916 E F1(,)A F2 -.407(re)2.75 G F1(,).407 E F2 -.165
(ev)2.75 G(ent).165 E F1(\)).916 E(Display *)108 545.8 Q F2(display)A F1
(;).916 E(XEv)108 558.8 Q(ent *)-.165 E F2 -.407(re)C F1(;)1.323 E(xEv)
108 571.8 Q(ent *)-.165 E F2 -.165(ev)C(ent).165 E F1(;).916 E 36 573.95
36 584.95 DL 36 571.95 36 582.95 DL 41.5 583.2 36 583.2 DL 43.5 583.2 38
583.2 DL 49 583.2 43.5 583.2 DL -1.21(Yo)72 608.2 S
(ur procedure must return status to indicate if the con)1.21 E -.165(ve)
-.44 G(rsion succeeded.).165 E(The re ar)5.5 E(gument is a)-.198 E
(pointer to where the host format e)72 621.2 Q -.165(ve)-.275 G
(nt should be stored, and the e).165 E -.165(ve)-.275 G(nt ar).165 E
(gument is the 32-byte)-.198 E(wire e)72 634.2 Q -.165(ve)-.275 G
(nt structure.).165 E(In the)5.5 E F0(XEv)3.666 E(ent)-.11 E F1
(structure you are creating, you must \214ll in the \214v)3.666 E 2.75
(er)-.165 G(equired)-2.75 E(members of the e)72 647.2 Q -.165(ve)-.275 G
(nt structure.).165 E -1.21(Yo)5.5 G 2.75(us)1.21 G
(hould \214ll in the type member with the type speci\214ed for the)-2.75
E F0(xEv)72.916 660.2 Q(ent)-.11 E F1 2.75(structure. Y)3.666 F
(ou should cop)-1.21 E 2.75(ya)-.11 G(ll other members from the)-2.75 E
F0(xEv)3.666 E(ent)-.11 E F1(structure \(wire format\))3.666 E(to the)72
673.2 Q F0(XEv)3.666 E(ent)-.11 E F1(structure \(host format\).)3.666 E
-1.21(Yo)5.5 G(ur con)1.21 E -.165(ve)-.44 G
(rsion procedure should return).165 E F0 -.814(Tr)3.666 G(ue).814 E F1
(if the)3.666 E -2.365 -.275(ev e)72 686.2 T
(nt should be placed in the queue or).275 E F0 -.275(Fa)3.666 G(lse).275
E F1(if it should not be placed in the queue.)3.666 E 1.76 -.88(To i)72
703.1 T(nitialize the serial number component of the e).88 E -.165(ve)
-.275 G(nt, call).165 E F0(_XSetLastRequestRead)3.666 E F1(with the)
3.666 E -2.365 -.275(ev e)72 716.1 T(nt and use the return v).275 E
(alue.)-.275 E F0(444)279.75 769 Q 0 Cg EP
%%Page: 445 450
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E .44 LW 36 76.75 36 87.75 DL 36 74.75
36 85.75 DL 41.5 73 36 73 DL 43.5 73 38 73 DL 49 73 43.5 73 DL/F1 11
/Times-Roman@0 SF(unsigned long _XSetLastRequestRead\()72 88.9 Q/F2 11
/Times-Italic@0 SF(display).916 E F1(,)A F2 -.407(re)2.75 G(p).407 E F1
(\)).916 E(Display *)88.5 101.9 Q F2(display)A F1(;).916 E
(xGenericReply *)88.5 114.9 Q F2 -.407(re)C(p).407 E F1(;).916 E F2
(display)72 135.7 Q F1(Speci\214es the connection to the X serv)40.221 E
(er)-.165 E(.)-.605 E F2 -.407(re)72 152.6 S(p).407 E F1
(Speci\214es the wire e)57.744 E -.165(ve)-.275 G(nt structure.).165 E
36 148.25 36 159.25 DL 36 146.25 36 157.25 DL 41.5 157.5 36 157.5 DL
43.5 157.5 38 157.5 DL 49 157.5 43.5 157.5 DL(The)72 182.5 Q F0
(_XSetLastRequestRead)3.666 E F1
(function computes and returns a complete serial number from the)3.666 E
(partial serial number in the e)72 195.5 Q -.165(ve)-.275 G(nt.).165 E
36 230.15 36 241.15 DL 36 228.15 36 239.15 DL 41.5 226.4 36 226.4 DL
43.5 226.4 38 226.4 DL 49 226.4 43.5 226.4 DL(Status \(*XESetEv)72 242.3
Q(entT)-.165 E(oW)-.88 E(ire\()-.44 E F2(display).916 E F1(,)A F2 -.165
(ev)2.75 G(ent_number).165 E F1(,)A F2(pr)2.75 E(oc)-.495 E F1 -1.834
(\)\)\( \)).916 F(Display *)88.5 255.3 Q F2(display)A F1(;).916 E(int)
88.5 268.3 Q F2 -.165(ev)2.75 G(ent_number).165 E F1(;).916 E(int \()
88.5 281.3 Q(*).916 E F2(pr)A(oc)-.495 E F1 -1.834(\)\( \);).916 F F2
(display)72 302.1 Q F1(Speci\214es the connection to the X serv)40.221 E
(er)-.165 E(.)-.605 E F2 -.165(ev)72 319 S(ent_number).165 E F1
(Speci\214es the e)9.85 E -.165(ve)-.275 G(nt code.).165 E F2(pr)72
335.9 Q(oc)-.495 E F1(Speci\214es the procedure to call when con)52.332
E -.165(ve)-.44 G(rting an e).165 E -.165(ve)-.275 G(nt.).165 E 36
331.55 36 342.55 DL 36 329.55 36 340.55 DL 41.5 340.8 36 340.8 DL 43.5
340.8 38 340.8 DL 49 340.8 43.5 340.8 DL(The)72 365.8 Q F0(XESetEv)3.666
E(entT)-.11 E(oW)-1.012 E(ir)-.198 E(e)-.198 E F1
(function de\214nes a procedure to be called when an e)3.666 E -.165(ve)
-.275 G(nt needs to be).165 E(con)72 378.8 Q -.165(ve)-.44 G
(rted from host format \().165 E F0(XEv).916 E(ent)-.11 E F1 2.75(\)t)
.916 G 2.75(ow)-2.75 G(ire format \()-2.75 E F0(xEv).916 E(ent)-.11 E F1
2.75(\)f).916 G 2.75(orm. The)-2.75 F -2.365 -.275(ev e)2.75 H
(nt number de\214nes).275 E(which protocol e)72 391.8 Q -.165(ve)-.275 G
(nt number to install a con).165 E -.165(ve)-.44 G(rsion procedure for)
.165 E(.)-.605 E F0(XESetEv)6.416 E(entT)-.11 E(oW)-1.012 E(ir)-.198 E
(e)-.198 E F1(returns)3.666 E(an)72 404.8 Q 2.75(yp)-.165 G(re)-2.75 E
(viously de\214ned procedure.)-.275 E(It returns zero if the con)5.5 E
-.165(ve)-.44 G(rsion f).165 E(ails or nonzero otherwise.)-.11 E(Note)
277.308 427.8 Q -1.21(Yo)99.5 445.8 S 2.75(uc)1.21 G
(an replace a core e)-2.75 E -.165(ve)-.275 G(nt con).165 E -.165(ve)
-.44 G(rsion function with one of your o).165 E(wn, although this)-.275
E(is not encouraged.)99.5 458.8 Q(It w)5.5 E(ould, ho)-.11 E(we)-.275 E
-.165(ve)-.275 G .88 -.44(r, a).165 H(llo).44 E 2.75(wy)-.275 G
(ou to intercept a core e)-2.75 E -.165(ve)-.275 G(nt and modify).165 E
(it before being sent to another client.)99.5 471.8 Q
(When Xlib needs to con)72 494.8 Q -.165(ve)-.44 G(rt an e).165 E -.165
(ve)-.275 G
(nt from host format to wire format, your procedure is called).165 E
(with these ar)72 507.8 Q(guments:)-.198 E 36 529.45 36 540.45 DL 36
527.45 36 538.45 DL 41.5 525.7 36 525.7 DL 43.5 525.7 38 525.7 DL 49
525.7 43.5 525.7 DL(\(*)72 544.2 Q F2(pr)A(oc)-.495 E F1(\)\().916 E F2
(display).916 E F1(,)A F2 -.407(re)2.75 G F1(,).407 E F2 -.165(ev)2.75 G
(ent).165 E F1(\)).916 E(Display *)108 557.2 Q F2(display)A F1(;).916 E
(XEv)108 570.2 Q(ent *)-.165 E F2 -.407(re)C F1(;)1.323 E(xEv)108 583.2
Q(ent *)-.165 E F2 -.165(ev)C(ent).165 E F1(;).916 E 36 585.35 36 596.35
DL 36 583.35 36 594.35 DL 41.5 594.6 36 594.6 DL 43.5 594.6 38 594.6 DL
49 594.6 43.5 594.6 DL(The re ar)72 619.6 Q
(gument is a pointer to the host format e)-.198 E -.165(ve)-.275 G
(nt, and the e).165 E -.165(ve)-.275 G(nt ar).165 E
(gument is a pointer to where)-.198 E(the 32-byte wire e)72 632.6 Q
-.165(ve)-.275 G(nt structure should be stored.).165 E -1.21(Yo)5.5 G
2.75(us)1.21 G(hould \214ll in the type with the type from)-2.75 E(the)
72 645.6 Q F0(XEv)3.666 E(ent)-.11 E F1 2.75(structure. All)3.666 F
(other members then should be copied from the host format to the)2.75 E
F0(xEv)72.916 658.6 Q(ent)-.11 E F1(structure.)3.666 E F0(445)279.75 769
Q 0 Cg EP
%%Page: 446 451
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E .44 LW 36 76.75 36 87.75 DL 36 74.75
36 85.75 DL 41.5 73 36 73 DL 43.5 73 38 73 DL 49 73 43.5 73 DL/F1 11
/Times-Roman@0 SF(Bool \(*XESetW)72 88.9 Q(ireT)-.44 E(oError\()-.88 E
/F2 11/Times-Italic@0 SF(display).916 E F1(,)A F2(err)2.75 E(or_number)
-.495 E F1(,)A F2(pr)2.75 E(oc)-.495 E F1 -1.834(\)\( \)).916 F
(Display *)88.5 101.9 Q F2(display)A F1(;).916 E(int)88.5 114.9 Q F2
(err)2.75 E(or_number)-.495 E F1(;).916 E(Bool \()88.5 127.9 Q(*).916 E
F2(pr)A(oc)-.495 E F1 -1.834(\)\( \);).916 F F2(display)72 148.7 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2(err)72 165.6 Q(or_number)-.495 E F1(Speci\214es the error code.)
10.169 E F2(pr)72 182.5 Q(oc)-.495 E F1
(Speci\214es the procedure to call when an error is recei)52.332 E -.165
(ve)-.275 G(d.).165 E 36 178.15 36 189.15 DL 36 176.15 36 187.15 DL 41.5
187.4 36 187.4 DL 43.5 187.4 38 187.4 DL 49 187.4 43.5 187.4 DL(The)72
212.4 Q F0(XESetW)3.666 E(ir)-.198 E(eT)-.198 E(oErr)-1.012 E(or)-.198 E
F1(function de\214nes a procedure to be called when an e)3.666 E
(xtension error needs)-.165 E(to be con)72 225.4 Q -.165(ve)-.44 G
(rted from wire format to host format.).165 E
(The error number de\214nes which protocol error)5.5 E
(code to install the con)72 238.4 Q -.165(ve)-.44 G(rsion procedure for)
.165 E(.)-.605 E F0(XESetW)6.416 E(ir)-.198 E(eT)-.198 E(oErr)-1.012 E
(or)-.198 E F1(returns an)3.666 E 2.75(yp)-.165 G(re)-2.75 E
(viously de\214ned)-.275 E(procedure.)72 251.4 Q
(Use this function for e)72 268.3 Q
(xtension errors that contain additional error v)-.165 E(alues be)-.275
E(yond those in a core X)-.165 E(error)72 281.3 Q 2.75(,w)-.44 G
(hen multiple wire errors must be combined into a single Xlib error)
-2.75 E 2.75(,o)-.44 G 2.75(rw)-2.75 G(hen it is neces-)-2.75 E
(sary to intercept an X error before it is otherwise e)72 294.3 Q
(xamined.)-.165 E(When Xlib needs to con)72 311.2 Q -.165(ve)-.44 G(rt \
an error from wire format to host format, the procedure is called with)
.165 E(these ar)72 324.2 Q(guments:)-.198 E 36 345.85 36 356.85 DL 36
343.85 36 354.85 DL 41.5 342.1 36 342.1 DL 43.5 342.1 38 342.1 DL 49
342.1 43.5 342.1 DL(Bool \(*)72 360.6 Q F2(pr)A(oc)-.495 E F1(\)\().916
E F2(display).916 E F1(,)A F2(he)2.75 E F1(,)A F2(we)2.75 E F1(\)).916 E
(Display *)108 373.6 Q F2(display)A F1(;).916 E(XErrorEv)108 386.6 Q
(ent *)-.165 E F2(he)A F1(;).916 E(xError *)108 399.6 Q F2(we)A F1(;)
.916 E 36 401.75 36 412.75 DL 36 399.75 36 410.75 DL 41.5 411 36 411 DL
43.5 411 38 411 DL 49 411 43.5 411 DL(The he ar)72 436 Q
(gument is a pointer to where the host format error should be stored.)
-.198 E(The structure)5.5 E(pointed at by he is guaranteed to be as lar)
72 449 Q(ge as an)-.198 E F0(XEv)3.666 E(ent)-.11 E F1
(structure and so can be cast to a type)3.666 E(lar)72 462 Q
(ger than an)-.198 E F0(XErr)3.666 E(orEv)-.198 E(ent)-.11 E F1
(to store additional v)3.666 E 2.75(alues. If)-.275 F
(the error is to be completely ignored)2.75 E(by Xlib \(for e)72 475 Q
(xample, se)-.165 E -.165(ve)-.275 G(ral protocol error structures will\
 be combined into one Xlib error\), then).165 E
(the function should return)72 488 Q F0 -.275(Fa)3.666 G(lse).275 E F1
2.75(;o).916 G(therwise, it should return)-2.75 E F0 -.814(Tr)3.666 G
(ue).814 E F1(.).916 E 36 505.75 36 516.75 DL 36 503.75 36 514.75 DL
41.5 502 36 502 DL 43.5 502 38 502 DL 49 502 43.5 502 DL
(int \(*XESetError\()72 517.9 Q F2(display).916 E F1(,)A F2 -.22(ex)2.75
G(tension).22 E F1(,)A F2(pr)2.75 E(oc)-.495 E F1 -1.834(\)\)\( \)).916
F(Display *)88.5 530.9 Q F2(display)A F1(;).916 E(int)88.5 543.9 Q F2
-.22(ex)2.75 G(tension).22 E F1(;).916 E(int \()88.5 556.9 Q(*).916 E F2
(pr)A(oc)-.495 E F1 -1.834(\)\( \);).916 F F2(display)72 577.7 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2 -.22(ex)72 594.6 S(tension).22 E F1(Speci\214es the e)30.673 E
(xtension number)-.165 E(.)-.605 E F2(pr)72 611.5 Q(oc)-.495 E F1
(Speci\214es the procedure to call when an error is recei)52.332 E -.165
(ve)-.275 G(d.).165 E 36 607.15 36 618.15 DL 36 605.15 36 616.15 DL 41.5
616.4 36 616.4 DL 43.5 616.4 38 616.4 DL 49 616.4 43.5 616.4 DL
(Inside Xlib, there are times that you may w)72 641.4 Q
(ant to suppress the calling of the e)-.11 E(xternal error han-)-.165 E
(dling when an error occurs.)72 654.4 Q(This allo)5.5 E
(ws status to be returned on a call at the cost of the call being)-.275
E(synchronous \(though most such functions are query operations, in an)
72 667.4 Q 2.75(yc)-.165 G(ase, and are typically pro-)-2.75 E
(grammed to be synchronous\).)72 680.4 Q
(When Xlib detects a protocol error in)72 697.3 Q F0(_XReply)3.666 E F1
2.75(,i).916 G 2.75(tc)-2.75 G(alls your procedure with these ar)-2.75 E
(guments:)-.198 E F0(446)279.75 769 Q 0 Cg EP
%%Page: 447 452
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E .44 LW 36 76.75 36 87.75 DL 36 74.75
36 85.75 DL 41.5 73 36 73 DL 43.5 73 38 73 DL 49 73 43.5 73 DL/F1 11
/Times-Roman@0 SF(int \(*)72 91.5 Q/F2 11/Times-Italic@0 SF(pr)A(oc)
-.495 E F1(\)\().916 E F2(display)A F1(,)A F2(err)2.75 E F1(,)A F2
(codes)2.75 E F1(,)A F2 -.407(re)2.75 G(t_code).407 E F1(\)).916 E
(Display *)108 104.5 Q F2(display)A F1(;).916 E(xError *)108 117.5 Q F2
(err)A F1(;).916 E(XExtCodes *)108 130.5 Q F2(codes)A F1(;).916 E(int *)
108 143.5 Q F2 -.407(re)C(t_code).407 E F1(;).916 E 36 145.65 36 156.65
DL 36 143.65 36 154.65 DL 41.5 154.9 36 154.9 DL 43.5 154.9 38 154.9 DL
49 154.9 43.5 154.9 DL(The err ar)72 179.9 Q
(gument is a pointer to the 32-byte wire format error)-.198 E 5.5(.T)
-.605 G(he codes ar)-5.5 E(gument is a pointer to)-.198 E(the e)72 192.9
Q(xtension codes structure.)-.165 E(The ret_code ar)5.5 E
(gument is the return code you may w)-.198 E(ant)-.11 E F0(_XReply)3.666
E F1(returned to.)72 205.9 Q(If your procedure returns a zero v)72 222.8
Q(alue, the error is not suppressed, and the client')-.275 E 2.75(se)
-.605 G(rror handler is)-2.75 E 2.75(called. \(F)72 235.8 R
(or further information, see section 11.8.2.\))-.165 E
(If your procedure returns nonzero, the error)5.5 E(is suppressed, and)
72 248.8 Q F0(_XReply)3.666 E F1(returns the v)3.666 E
(alue of ret_code.)-.275 E 36 266.55 36 277.55 DL 36 264.55 36 275.55 DL
41.5 262.8 36 262.8 DL 43.5 262.8 38 262.8 DL 49 262.8 43.5 262.8 DL
2.75(char *\(*XESetErrorString\()72 278.7 R F2(display).916 E F1(,)A F2
-.22(ex)2.75 G(tension).22 E F1(,)A F2(pr)2.75 E(oc)-.495 E F1 -1.834
(\)\)\( \)).916 F(Display *)88.5 291.7 Q F2(display)A F1(;).916 E(int)
88.5 304.7 Q F2 -.22(ex)2.75 G(tension).22 E F1(;).916 E(char *\()88.5
317.7 Q(*).916 E F2(pr)A(oc)-.495 E F1 -1.834(\)\( \);).916 F F2
(display)72 338.5 Q F1(Speci\214es the connection to the X serv)40.221 E
(er)-.165 E(.)-.605 E F2 -.22(ex)72 355.4 S(tension).22 E F1
(Speci\214es the e)30.673 E(xtension number)-.165 E(.)-.605 E F2(pr)72
372.3 Q(oc)-.495 E F1
(Speci\214es the procedure to call to obtain an error string.)52.332 E
36 367.95 36 378.95 DL 36 365.95 36 376.95 DL 41.5 377.2 36 377.2 DL
43.5 377.2 38 377.2 DL 49 377.2 43.5 377.2 DL(The)72 402.2 Q F0(XGetErr)
3.666 E(orT)-.198 E(ext)-1.012 E F1
(function returns a string to the user for an error)3.666 E(.)-.605 E F0
(XESetErr)6.416 E(orString)-.198 E F1(allo)3.666 E(ws)-.275 E(you to de\
\214ne a procedure to be called that should return a pointer to the err\
or message.)72 415.2 Q(The fol-)5.5 E(lo)72 428.2 Q(wing is an e)-.275 E
(xample.)-.165 E 36 449.85 36 460.85 DL 36 447.85 36 458.85 DL 41.5
446.1 36 446.1 DL 43.5 446.1 38 446.1 DL 49 446.1 43.5 446.1 DL(\(*)72
464.6 Q F2(pr)A(oc)-.495 E F1(\)\().916 E F2(display).916 E F1(,)A F2
(code)2.75 E F1(,)A F2(codes)2.75 E F1(,)A F2 -.22(bu)2.75 G -.198(ff)
.22 G(er).198 E F1(,)A F2(nbytes)2.75 E F1(\)).916 E(Display *)108 477.6
Q F2(display)A F1(;).916 E(int)108 490.6 Q F2(code)2.75 E F1(;).916 E
(XExtCodes *)108 503.6 Q F2(codes)A F1(;).916 E(char *)108 516.6 Q F2
-.22(bu)C -.198(ff).22 G(er).198 E F1(;).916 E(int)108 529.6 Q F2
(nbytes)2.75 E F1(;).916 E 36 531.75 36 542.75 DL 36 529.75 36 540.75 DL
41.5 541 36 541 DL 43.5 541 38 541 DL 49 541 43.5 541 DL -1.21(Yo)72 566
S(ur procedure is called with the error code for e)1.21 E -.165(ve)-.275
G(ry error detected.).165 E -1.21(Yo)5.5 G 2.75(us)1.21 G(hould cop)
-2.75 E 2.75(yn)-.11 G(bytes of)-2.75 E 2.75(an)72 579 S
(ull-terminated string containing the error message into b)-2.75 E(uf)
-.22 E(fer)-.275 E(.)-.605 E 36 596.75 36 607.75 DL 36 594.75 36 605.75
DL 41.5 593 36 593 DL 43.5 593 38 593 DL 49 593 43.5 593 DL -.22(vo)72
608.9 S(id \(*XESetPrintErrorV).22 E(alues\()-1.221 E F2(display).916 E
F1(,)A F2 -.22(ex)2.75 G(tension).22 E F1(,)A F2(pr)2.75 E(oc)-.495 E F1
-1.834(\)\)\( \)).916 F(Display *)88.5 621.9 Q F2(display)A F1(;).916 E
(int)88.5 634.9 Q F2 -.22(ex)2.75 G(tension).22 E F1(;).916 E -.22(vo)
88.5 647.9 S(id \().22 E(*).916 E F2(pr)A(oc)-.495 E F1 -1.834(\)\( \);)
.916 F F2(display)72 668.7 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2 -.22(ex)72 685.6 S(tension).22 E F1(Speci\214es the e)30.673 E
(xtension number)-.165 E(.)-.605 E F2(pr)72 702.5 Q(oc)-.495 E F1
(Speci\214es the procedure to call when an error is printed.)52.332 E 36
698.15 36 709.15 DL 36 696.15 36 707.15 DL 41.5 707.4 36 707.4 DL 43.5
707.4 38 707.4 DL 49 707.4 43.5 707.4 DL(The)72 732.4 Q F0
(XESetPrintErr)3.666 E(orV)-.198 E(alues)-1.012 E F1
(function de\214nes a procedure to be called when an e)3.666 E
(xtension error)-.165 E F0(447)279.75 769 Q 0 Cg EP
%%Page: 448 453
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E/F1 11/Times-Roman@0 SF
(is printed, to print the error v)72 85 Q 2.75(alues. Use)-.275 F
(this function for e)2.75 E(xtension errors that contain additional)
-.165 E(error v)72 98 Q(alues be)-.275 E(yond those in a core X error)
-.165 E 5.5(.I)-.605 G 2.75(tr)-5.5 G(eturns an)-2.75 E 2.75(yp)-.165 G
(re)-2.75 E(viously de\214ned procedure.)-.275 E
(When Xlib needs to print an error)72 114.9 Q 2.75(,t)-.44 G
(he procedure is called with these ar)-2.75 E(guments:)-.198 E .44 LW 36
136.55 36 147.55 DL 36 134.55 36 145.55 DL 41.5 132.8 36 132.8 DL 43.5
132.8 38 132.8 DL 49 132.8 43.5 132.8 DL -.22(vo)72 151.3 S(id \(*).22 E
/F2 11/Times-Italic@0 SF(pr)A(oc)-.495 E F1(\)\().916 E F2(display).916
E F1(,)A F2 -.165(ev)2.75 G F1(,).165 E F2(fp)2.75 E F1(\)).916 E
(Display *)108 164.3 Q F2(display)A F1(;).916 E(XErrorEv)108 177.3 Q
(ent *)-.165 E F2 -.165(ev)C F1(;)1.081 E -.22(vo)108 190.3 S(id *).22 E
F2(fp)A F1(;).916 E 36 192.45 36 203.45 DL 36 190.45 36 201.45 DL 41.5
201.7 36 201.7 DL 43.5 201.7 38 201.7 DL 49 201.7 43.5 201.7 DL
(The structure pointed at by e)72 226.7 Q 2.75(vi)-.275 G 2.75(sg)-2.75
G(uaranteed to be as lar)-2.75 E(ge as an)-.198 E F0(XEv)3.666 E(ent)
-.11 E F1(structure and so can be)3.666 E(cast to a type lar)72 239.7 Q
(ger than an)-.198 E F0(XErr)3.666 E(orEv)-.198 E(ent)-.11 E F1
(to obtain additional v)3.666 E(alues set by using)-.275 E F0(XESetW)
3.666 E(ir)-.198 E(e-)-.198 E -1.012(To)72 252.7 S(Err)1.012 E(or)-.198
E F1 5.5(.T).916 G(he underlying type of the fp ar)-5.5 E
(gument is system dependent; on a POSIX-compliant)-.198 E
(system, fp should be cast to type FILE*.)72 265.7 Q 36 283.45 36 294.45
DL 36 281.45 36 292.45 DL 41.5 279.7 36 279.7 DL 43.5 279.7 38 279.7 DL
49 279.7 43.5 279.7 DL(int \(*XESetFlushGC\()72 295.6 Q F2(display).916
E F1(,)A F2 -.22(ex)2.75 G(tension).22 E F1(,)A F2(pr)2.75 E(oc)-.495 E
F1 -1.834(\)\)\( \)).916 F(Display *)88.5 308.6 Q F2(display)A F1(;).916
E(int)88.5 321.6 Q F2 -.22(ex)2.75 G(tension).22 E F1(;).916 E(int *\()
88.5 334.6 Q(*).916 E F2(pr)A(oc)-.495 E F1 -1.834(\)\( \);).916 F F2
(display)72 355.4 Q F1(Speci\214es the connection to the X serv)40.221 E
(er)-.165 E(.)-.605 E F2 -.22(ex)72 372.3 S(tension).22 E F1
(Speci\214es the e)30.673 E(xtension number)-.165 E(.)-.605 E F2(pr)72
389.2 Q(oc)-.495 E F1
(Speci\214es the procedure to call when a GC is \215ushed.)52.332 E 36
384.85 36 395.85 DL 36 382.85 36 393.85 DL 41.5 394.1 36 394.1 DL 43.5
394.1 38 394.1 DL 49 394.1 43.5 394.1 DL(The procedure set by the)72
419.1 Q F0(XESetFlushGC)3.666 E F1(function has the same interf)3.666 E
(ace as the procedure set by)-.11 E(the)72 432.1 Q F0(XESetCopyGC)3.666
E F1(function, b)3.666 E
(ut is called when a GC cache needs to be updated in the serv)-.22 E(er)
-.165 E(.)-.605 E 36 449.85 36 460.85 DL 36 447.85 36 458.85 DL 41.5
446.1 36 446.1 DL 43.5 446.1 38 446.1 DL 49 446.1 43.5 446.1 DL
(int \(*XESetBeforeFlush\()72 462 Q F2(display).916 E F1(,)A F2 -.22(ex)
2.75 G(tension).22 E F1(,)A F2(pr)2.75 E(oc)-.495 E F1 -1.834(\)\)\( \))
.916 F(Display *)88.5 475 Q F2(display)A F1(;).916 E(int)88.5 488 Q F2
-.22(ex)2.75 G(tension).22 E F1(;).916 E(int *\()88.5 501 Q(*).916 E F2
(pr)A(oc)-.495 E F1 -1.834(\)\( \);).916 F F2(display)72 521.8 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2 -.22(ex)72 538.7 S(tension).22 E F1(Speci\214es the e)30.673 E
(xtension number)-.165 E(.)-.605 E F2(pr)72 555.6 Q(oc)-.495 E F1
(Speci\214es the procedure to call when a b)52.332 E(uf)-.22 E
(fer is \215ushed.)-.275 E 36 551.25 36 562.25 DL 36 549.25 36 560.25 DL
41.5 560.5 36 560.5 DL 43.5 560.5 38 560.5 DL 49 560.5 43.5 560.5 DL
(The)72 585.5 Q F0(XESetBef)3.666 E(or)-.275 E(eFlush)-.198 E F1(functi\
on de\214nes a procedure to be called when data is about to be sent to)
3.666 E(the serv)72 598.5 Q(er)-.165 E 5.5(.W)-.605 G(hen data is about\
 to be sent, your procedure is called one or more times with these)-5.5
E(ar)72 611.5 Q(guments:)-.198 E F0(448)279.75 769 Q 0 Cg EP
%%Page: 449 454
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E .44 LW 36 76.75 36 87.75 DL 36 74.75
36 85.75 DL 41.5 73 36 73 DL 43.5 73 38 73 DL 49 73 43.5 73 DL/F1 11
/Times-Roman@0 SF -.22(vo)72 91.5 S(id \(*).22 E/F2 11/Times-Italic@0 SF
(pr)A(oc)-.495 E F1(\)\().916 E F2(display).916 E F1(,)A F2(codes)2.75 E
F1(,)A F2(data)2.75 E F1(,)A F2(len)2.75 E F1(\)).916 E(Display *)108
104.5 Q F2(display)A F1(;).916 E(XExtCodes *)108 117.5 Q F2(codes)A F1
(;).916 E(char *)108 130.5 Q F2(data)A F1(;).916 E(long)108 143.5 Q F2
(len)2.75 E F1(;).916 E 36 145.65 36 156.65 DL 36 143.65 36 154.65 DL
41.5 154.9 36 154.9 DL 43.5 154.9 38 154.9 DL 49 154.9 43.5 154.9 DL
(The data ar)72 179.9 Q
(gument speci\214es a portion of the outgoing data b)-.198 E(uf)-.22 E
(fer)-.275 E 2.75(,a)-.44 G(nd its length in bytes is speci-)-2.75 E
(\214ed by the len ar)72 192.9 Q 2.75(gument. Y)-.198 F
(our procedure must not alter the contents of the data and must not do)
-1.21 E(additional protocol requests to the same display)72 205.9 Q(.)
-.715 E F0(Hooks onto Xlib Data Structur)72 231.9 Q(es)-.198 E F1 -1.221
(Va)72 248.8 S(rious Xlib data structures ha)1.221 E .33 -.165(ve p)-.22
H(ro).165 E(visions for e)-.165 E(xtension procedures to chain e)-.165 E
(xtension supplied)-.165 E(data onto a list.)72 261.8 Q
(These structures are)5.5 E F0(GC)3.666 E F1(,).916 E F0 -.407(Vi)3.666
G(sual).407 E F1(,).916 E F0(Scr)3.666 E(een)-.198 E F1(,).916 E F0(Scr)
3.666 E(eenF)-.198 E(ormat)-.275 E F1(,).916 E F0(Display)3.666 E F1
2.75(,a).916 G(nd)-2.75 E F0(XF)72.916 274.8 Q(ontStruct)-.275 E F1 5.5
(.B).916 G(ecause the list pointer is al)-5.5 E -.11(wa)-.11 G
(ys the \214rst member in the structure, a single set of).11 E
(procedures can be used to manipulate the data on these lists.)72 287.8
Q(The follo)72 304.7 Q(wing structure is used in the functions in this \
section and is de\214ned in <)-.275 E F0(X11/Xlib)A(.h)-.44 E F1(>:)A 36
326.35 36 337.35 DL 36 324.35 36 335.35 DL 41.5 322.6 36 322.6 DL 43.5
322.6 38 322.6 DL 49 322.6 43.5 322.6 DL(typedef struct _XExtData {)72
341.1 Q(int number;)108 354.1 Q(/* number returned by XInitExtension */)
128.971 E(struct _XExtData *ne)108 367.1 Q 70.484(xt; /*)-.165 F(ne)2.75
E(xt item on list of data for structure */)-.165 E(int \(*free_pri)108
380.1 Q -.275(va)-.275 G 87.083(te\)\(\); /*).275 F(if de\214ned,)2.75 E
(called to free pri)5.5 E -.275(va)-.275 G(te */).275 E(XPointer pri)108
393.1 Q -.275(va)-.275 G 77.898(te_data; /*).275 F(data pri)2.75 E -.275
(va)-.275 G(te to this e).275 E(xtension. */)-.165 E 2.75(}X)72 406.1 S
(ExtData;)-2.75 E 36 408.25 36 419.25 DL 36 406.25 36 417.25 DL 41.5
417.5 36 417.5 DL 43.5 417.5 38 417.5 DL 49 417.5 43.5 417.5 DL(When an)
72 442.5 Q 2.75(yo)-.165 G 2.75(ft)-2.75 G
(he data structures listed abo)-2.75 E .33 -.165(ve a)-.165 H
(re freed, the list is w).165 E(alk)-.11 E(ed, and the structure')-.11 E
2.75(sf)-.605 G(ree)-2.75 E(procedure \(if an)72 455.5 Q(y\) is called.)
-.165 E(If free is NULL, then the library frees both the data pointed t\
o by the)5.5 E(pri)72 468.5 Q -.275(va)-.275 G
(te_data member and the structure itself.).275 E 36 490.15 36 501.15 DL
36 488.15 36 499.15 DL 41.5 486.4 36 486.4 DL 43.5 486.4 38 486.4 DL 49
486.4 43.5 486.4 DL(union {)72 504.9 Q(Display *display;)2.912 E(GC gc;)
108 517.9 Q -.66(Vi)108 530.9 S(sual *visual;).66 E(Screen *screen;)108
543.9 Q(ScreenF)108 556.9 Q(ormat *pixmap_format;)-.165 E(XF)108 569.9 Q
(ontStruct *font } XEDataObject;)-.165 E 36 572.05 36 583.05 DL 36
570.05 36 581.05 DL 41.5 581.3 36 581.3 DL 43.5 581.3 38 581.3 DL 49
581.3 43.5 581.3 DL 36 611.05 36 622.05 DL 36 609.05 36 620.05 DL 41.5
607.3 36 607.3 DL 43.5 607.3 38 607.3 DL 49 607.3 43.5 607.3 DL
(XExtData **XEHeadOfExtensionList\()72 623.2 Q F2(object).916 E F1(\))
.916 E(XEDataObject)108 636.2 Q F2(object)2.75 E F1(;).916 E F2(object)
72 657 Q F1(Speci\214es the object.)45.116 E 36 652.65 36 663.65 DL 36
650.65 36 661.65 DL 41.5 661.9 36 661.9 DL 43.5 661.9 38 661.9 DL 49
661.9 43.5 661.9 DL(The)72 686.9 Q F0(XEHeadOfExtensionList)3.666 E F1
(function returns a pointer to the list of e)3.666 E
(xtension structures)-.165 E(attached to the speci\214ed object.)72
699.9 Q(In concert with)5.5 E F0(XAddT)3.666 E(oExtensionList)-1.012 E
F1(,).916 E F0(XEHeadOfExtension-)3.666 E(List)72 712.9 Q F1(allo)3.666
E(ws an e)-.275 E(xtension to attach arbitrary data to an)-.165 E 2.75
(yo)-.165 G 2.75(ft)-2.75 G(he structures of types contained in)-2.75 E
F0(XEDataObject)72.916 725.9 Q F1(.).916 E F0(449)279.75 769 Q 0 Cg EP
%%Page: 450 455
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E .44 LW 36 76.75 36 87.75 DL 36 74.75
36 85.75 DL 41.5 73 36 73 DL 43.5 73 38 73 DL 49 73 43.5 73 DL/F1 11
/Times-Roman@0 SF(XAddT)72 88.9 Q(oExtensionList\()-.88 E/F2 11
/Times-Italic@0 SF(structur).916 E(e)-.407 E F1(,)A F2 -.22(ex)2.75 G
(t_data).22 E F1(\)).916 E(XExtData **)88.5 101.9 Q F2(structur)A(e)
-.407 E F1(;).916 E(XExtData *)88.5 114.9 Q F2 -.22(ex)C(t_data).22 E F1
(;).916 E F2(structur)72 135.7 Q(e)-.407 E F1(Speci\214es the e)32.686 E
(xtension list.)-.165 E F2 -.22(ex)72 152.6 S(t_data).22 E F1
(Speci\214es the e)34.336 E(xtension data structure to add.)-.165 E 36
148.25 36 159.25 DL 36 146.25 36 157.25 DL 41.5 157.5 36 157.5 DL 43.5
157.5 38 157.5 DL 49 157.5 43.5 157.5 DL(The structure ar)72 182.5 Q
(gument is a pointer to one of the data structures enumerated abo)-.198
E -.165(ve)-.165 G 5.5(.Y).165 G(ou must ini-)-6.71 E(tialize e)72 195.5
Q(xt_data->number with the e)-.165 E
(xtension number before calling this function.)-.165 E 36 213.25 36
224.25 DL 36 211.25 36 222.25 DL 41.5 209.5 36 209.5 DL 43.5 209.5 38
209.5 DL 49 209.5 43.5 209.5 DL(XExtData *XFindOnExtensionList\()72
225.4 Q F2(structur).916 E(e)-.407 E F1(,)A F2(number)2.75 E F1(\)).916
E(struct _XExtData **)88.5 238.4 Q F2(structur)A(e)-.407 E F1(;).916 E
(int)88.5 251.4 Q F2(number)2.75 E F1(;).916 E F2(structur)72 272.2 Q(e)
-.407 E F1(Speci\214es the e)32.686 E(xtension list.)-.165 E F2(number)
72 289.1 Q F1(Speci\214es the e)38.395 E(xtension number from)-.165 E F0
(XInitExtension)3.666 E F1(.).916 E 36 284.75 36 295.75 DL 36 282.75 36
293.75 DL 41.5 294 36 294 DL 43.5 294 38 294 DL 49 294 43.5 294 DL(The)
72 319 Q F0(XFindOnExtensionList)3.666 E F1
(function returns the \214rst e)3.666 E
(xtension data structure for the e)-.165 E(xtension)-.165 E
(numbered number)72 332 Q 5.5(.I)-.605 G 2.75(ti)-5.5 G 2.75(se)-2.75 G
(xpected that an e)-2.915 E(xtension will add at most one e)-.165 E
(xtension data structure)-.165 E(to an)72 345 Q 2.75(ys)-.165 G
(ingle data structure')-2.75 E 2.75(se)-.605 G(xtension data list.)
-2.915 E(There is no w)5.5 E(ay to \214nd additional structures.)-.11 E
(The)72 361.9 Q F0(XAllocID)3.666 E F1
(macro, which allocates and returns a resource ID, is de\214ned in <)
3.666 E F0(X11/Xlib)A(.h)-.44 E F1(>.)A 36 379.65 36 390.65 DL 36 377.65
36 388.65 DL 41.5 375.9 36 375.9 DL 43.5 375.9 38 375.9 DL 49 375.9 43.5
375.9 DL -1.834(XAllocID \()72 391.8 R F2(display)A F1(\)).916 E
(Display *)85.75 404.8 Q F2(display)A F1(;).916 E F2(display)72 425.6 Q
F1(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605
E 36 421.25 36 432.25 DL 36 419.25 36 430.25 DL 41.5 430.5 36 430.5 DL
43.5 430.5 38 430.5 DL 49 430.5 43.5 430.5 DL
(This macro is a call through the)72 455.5 Q F0(Display)3.666 E F1
(structure to an internal resource ID allocator)3.666 E 5.5(.I)-.605 G
2.75(tr)-5.5 G(eturns)-2.75 E 2.75(ar)72 468.5 S
(esource ID that you can use when creating ne)-2.75 E 2.75(wr)-.275 G
(esources.)-2.75 E(The)72 485.4 Q F0(XAllocIDs)3.666 E F1
(macro allocates and returns an array of resource ID.)3.666 E 36 503.15
36 514.15 DL 36 501.15 36 512.15 DL 41.5 499.4 36 499.4 DL 43.5 499.4 38
499.4 DL 49 499.4 43.5 499.4 DL -1.834(XAllocIDs \()72 515.3 R F2
(display)A F1(,)A F2(ids_r)2.75 E(eturn)-.407 E F1(,)A F2(count)2.75 E
F1(\)).916 E(Display *)85.75 528.3 Q F2(display)A F1(;).916 E(XID *)
85.75 541.3 Q F2(ids_r)A(eturn)-.407 E F1(;).916 E(int)85.75 554.3 Q F2
(count)2.75 E F1(;).916 E F2(display)72 575.1 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2(ids_r)72 592 Q(eturn)-.407 E F1(Returns the resource IDs.)26.57 E F2
-.407(re)72 608.9 S(p).407 E F1
(Speci\214es the number of resource IDs requested.)57.744 E 36 604.55 36
615.55 DL 36 602.55 36 613.55 DL 41.5 613.8 36 613.8 DL 43.5 613.8 38
613.8 DL 49 613.8 43.5 613.8 DL(This macro is a call through the)72
638.8 Q F0(Display)3.666 E F1
(structure to an internal resource ID allocator)3.666 E 5.5(.I)-.605 G
2.75(tr)-5.5 G(eturns)-2.75 E
(resource IDs to the array supplied by the caller)72 651.8 Q 5.5(.T)
-.605 G 2.75(oc)-6.38 G(orrectly handle automatic reuse of resource)
-2.75 E(IDs, you must call)72 664.8 Q F0(XAllocIDs)3.666 E F1
(when requesting multiple resource IDs.)3.666 E
(This call might generate)5.5 E(protocol requests.)72 677.8 Q F0(450)
279.75 769 Q 0 Cg EP
%%Page: 451 456
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E(GC Caching)72 85 Q/F1 11/Times-Roman@0
SF(GCs are cached by the library to allo)72 101.9 Q 2.75(wm)-.275 G(er)
-2.75 E(ging of independent change requests to the same GC)-.198 E
(into single protocol requests.)72 114.9 Q
(This is typically called a write-back cache.)5.5 E(An)5.5 E 2.75(ye)
-.165 G(xtension proce-)-2.915 E(dure whose beha)72 127.9 Q
(vior depends on the contents of a GC must \215ush the GC cache to mak)
-.22 E 2.75(es)-.11 G(ure the)-2.75 E(serv)72 140.9 Q
(er has up-to-date contents in its GC.)-.165 E(The)72 157.8 Q F0
(FlushGC)3.666 E F1(macro checks the dirty bits in the library')3.666 E
2.75(sG)-.605 G 2.75(Cs)-2.75 G(tructure and calls)-2.75 E F0
(_XFlushGC-)3.666 E(Cache)72 170.8 Q F1(if an)3.666 E 2.75(ye)-.165 G
(lements ha)-2.75 E .33 -.165(ve c)-.22 H 2.75(hanged. The).165 F F0
(FlushGC)3.666 E F1(macro is de\214ned as follo)3.666 E(ws:)-.275 E .44
LW 36 188.55 36 199.55 DL 36 186.55 36 197.55 DL 41.5 184.8 36 184.8 DL
43.5 184.8 38 184.8 DL 49 184.8 43.5 184.8 DL -1.834(FlushGC \()72 200.7
R/F2 11/Times-Italic@0 SF(display).916 E F1(,).916 E F2(gc)2.75 E F1(\))
.916 E(Display *)88.5 213.7 Q F2(display).916 E F1(;).916 E(GC)88.5
226.7 Q F2(gc)2.75 E F1(;).916 E F2(display)72 247.5 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2(gc)72 264.4 Q F1(Speci\214es the GC.)61.616 E 36 260.05 36 271.05 DL
36 258.05 36 269.05 DL 41.5 269.3 36 269.3 DL 43.5 269.3 38 269.3 DL 49
269.3 43.5 269.3 DL(Note that if you e)72 294.3 Q(xtend the GC to add a\
dditional resource ID components, you should ensure that)-.165 E
(the library stub sends the change request immediately)72 307.3 Q 5.5
(.T)-.715 G(his is because a client can free a resource)-5.5 E
(immediately after using it, so if you only stored the v)72 320.3 Q
(alue in the cache without forcing a protocol)-.275 E
(request, the resource might be destro)72 333.3 Q
(yed before being set into the GC.)-.11 E -1.21(Yo)5.5 G 2.75(uc)1.21 G
(an use the)-2.75 E F0(_XFlushGCCache)72.916 346.3 Q F1
(procedure to force the cache to be \215ushed.)3.666 E(The)5.5 E F0
(_XFlushGCCache)3.666 E F1(proce-)3.666 E(dure is de\214ned as follo)72
359.3 Q(ws:)-.275 E 36 377.05 36 388.05 DL 36 375.05 36 386.05 DL 41.5
373.3 36 373.3 DL 43.5 373.3 38 373.3 DL 49 373.3 43.5 373.3 DL -1.834
(_XFlushGCCache \()72 389.2 R F2(display).916 E F1(,).916 E F2(gc)2.75 E
F1(\)).916 E(Display *)88.5 402.2 Q F2(display).916 E F1(;).916 E(GC)
88.5 415.2 Q F2(gc)2.75 E F1(;).916 E F2(display)72 436 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2(gc)72 452.9 Q F1(Speci\214es the GC.)61.616 E 36 448.55 36 459.55 DL
36 446.55 36 457.55 DL 41.5 457.8 36 457.8 DL 43.5 457.8 38 457.8 DL 49
457.8 43.5 457.8 DL F0(Graphics Batching)72 495.8 Q F1(If you e)72 512.7
Q(xtend X to add more poly graphics primiti)-.165 E -.165(ve)-.275 G
(s, you may be able to tak).165 E 2.75(ea)-.11 G(dv)-2.75 E(antage of f)
-.275 E(acili-)-.11 E(ties in the library to allo)72 525.7 Q 2.75(wb)
-.275 G(ack-to-back single calls to be transformed into poly requests.)
-2.75 E(This)5.5 E(may dramatically impro)72 538.7 Q .33 -.165(ve p)
-.165 H
(erformance of programs that are not written using poly requests.).165 E
(A)5.5 E(pointer to an)72 551.7 Q F0(xReq)3.666 E F1 2.75(,c).916 G(all\
ed last_req in the display structure, is the last request being process\
ed.)-2.75 E(By checking that the last request type, dra)72 564.7 Q -.11
(wa)-.165 G(ble, gc, and other options are the same as the ne).11 E(w)
-.275 E(one and that there is enough space left in the b)72 577.7 Q(uf)
-.22 E(fer)-.275 E 2.75(,y)-.44 G(ou may be able to just e)-2.75 E
(xtend the pre)-.165 E(vious)-.275 E(graphics request by e)72 590.7 Q(x\
tending the length \214eld of the request and appending the data to the\
 b)-.165 E(uf)-.22 E(fer)-.275 E(.)-.605 E(This can impro)72 603.7 Q .33
-.165(ve p)-.165 H(erformance by \214v).165 E 2.75(et)-.165 G
(imes or more in nai)-2.75 E .33 -.165(ve p)-.275 H 2.75(rograms. F).165
F(or e)-.165 E(xample, here is the)-.165 E(source for the)72 616.7 Q F0
(XDrawP)3.666 E(oint)-.22 E F1(stub)3.666 E 5.5(.\()-.44 G(Writing e)
-5.5 E(xtension stubs is discussed in the ne)-.165 E(xt section.\))-.165
E F0(451)279.75 769 Q 0 Cg EP
%%Page: 452 457
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E .44 LW 63.5 76.75 63.5 87.75 DL 63.5
74.75 63.5 85.75 DL 69 73 63.5 73 DL 71 73 65.5 73 DL 76.5 73 71 73 DL
/F1 11/Times-Roman@0 SF(#include <X11/Xlibint.h>)99.5 98 Q
(/* precompute the maximum size of batching request allo)99.5 124 Q
(wed */)-.275 E(static int size = sizeof\(xPolyPointReq\) + EPERB)99.5
150 Q -1.221(AT)-.385 G(CH * sizeof\(xPoint\);)1.221 E(XDra)99.5 176 Q
(wPoint\(dp)-.165 E 1.43 -.715(y, d)-.11 H 2.75(,g).715 G(c, x, y\))
-2.75 E(re)110.5 189 Q(gister Display *dp)-.165 E(y;)-.11 E(Dra)110.5
202 Q -.11(wa)-.165 G(ble d;).11 E(GC gc;)110.5 215 Q
(int x, y; /* INT16 */)110.5 228 Q({)99.5 241 Q(xPoint *point;)110.5 254
Q(LockDisplay\(dp)110.5 267 Q(y\);)-.11 E(FlushGC\(dp)110.5 280 Q 1.43
-.715(y, g)-.11 H(c\);).715 E({)110.5 293 Q(re)110.5 306 Q
(gister xPolyPointReq *req = \(xPolyPointReq *\) dp)-.165 E
(y->last_req;)-.11 E(/* if same as pre)110.5 319 Q
(vious request, with same dra)-.275 E -.11(wa)-.165 G
(ble, batch requests */).11 E(if \()110.5 332 Q(\(req->reqT)127 345 Q
(ype == X_PolyPoint\))-.88 E(&& \(req->dra)118.75 358 Q -.11(wa)-.165 G
(ble == d\)).11 E(&& \(req->gc == gc->gid\))118.75 371 Q
(&& \(req->coordMode == CoordModeOrigin\))118.75 384 Q(&& \(\(dp)118.75
397 Q(y->b)-.11 E(ufptr + sizeof \(xPoint\)\) <= dp)-.22 E(y->b)-.11 E
(ufmax\))-.22 E(&& \(\(\(char *\)dp)118.75 410 Q(y->b)-.11 E
(ufptr - \(char *\)req\) < size\) \) {)-.22 E(point = \(xPoint *\) dp)
124.25 423 Q(y->b)-.11 E(ufptr;)-.22 E
(req->length += sizeof \(xPoint\) >> 2;)124.25 436 Q(dp)124.25 449 Q
(y->b)-.11 E(ufptr += sizeof \(xPoint\);)-.22 E(})124.25 462 Q(else {)
110.5 488 Q(GetReqExtra\(PolyPoint, 4, req\); /* 1 point = 4 bytes */)
121.5 501 Q(req->dra)121.5 514 Q -.11(wa)-.165 G(ble = d;).11 E
(req->gc = gc->gid;)121.5 527 Q(req->coordMode = CoordModeOrigin;)121.5
540 Q(point = \(xPoint *\) \(req + 1\);)121.5 553 Q(})121.5 566 Q
(point->x = x;)110.5 579 Q(point->y = y;)110.5 592 Q(})110.5 605 Q
(UnlockDisplay\(dp)110.5 618 Q(y\);)-.11 E(SyncHandle\(\);)110.5 631 Q
(})99.5 644 Q 36 639.65 36 650.65 DL 36 637.65 36 648.65 DL 41.5 648.9
36 648.9 DL 43.5 648.9 38 648.9 DL 49 648.9 43.5 648.9 DL 1.76 -.88
(To k)72 673.9 T(eep clients from generating v).77 E
(ery long requests that may monopolize the serv)-.165 E(er)-.165 E 2.75
(,t)-.44 G(here is a)-2.75 E(symbol de\214ned in <)72 686.9 Q F0
(X11/Xlibint.h)A F1 2.75(>o)C 2.75(fE)-2.75 G(PERB)-2.75 E -1.221(AT)
-.385 G(CH on the number of requests batched.)1.221 E(Most of)5.5 E
(the performance bene\214t occurs in the \214rst fe)72 699.9 Q 2.75(wm)
-.275 G(er)-2.75 E(ged requests.)-.198 E(Note that)5.5 E F0(FlushGC)
3.666 E F1(is called)3.666 E/F2 11/Times-Italic@0 SF(befor)72 712.9 Q(e)
-.407 E F1(picking up the v)2.75 E
(alue of last_req, because it may modify this \214eld.)-.275 E F0(452)
279.75 769 Q 0 Cg EP
%%Page: 453 458
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E(Writing Extension Stubs)72 85 Q/F1 11
/Times-Roman@0 SF(All X requests al)72 101.9 Q -.11(wa)-.11 G
(ys contain the length of the request, e).11 E
(xpressed as a 16-bit quantity of 32 bits.)-.165 E(This means that a si\
ngle request can be no more than 256K bytes in length.)72 114.9 Q
(Some serv)5.5 E(ers may)-.165 E
(not support single requests of such a length.)72 127.9 Q(The v)5.5 E
(alue of dp)-.275 E(y->max_request_size contains the)-.11 E
(maximum length as de\214ned by the serv)72 140.9 Q(er implementation.)
-.165 E -.165(Fo)5.5 G 2.75(rf).165 G(urther information, see `)-2.75 E
(`X W)-.814 E(in-)-.44 E(do)72 153.9 Q 2.75(wS)-.275 G(ystem Protocol.)
-2.75 E -.814('')-.77 G F0(Requests, Replies, and Xpr)72 179.9 Q(oto.h)
-.198 E F1(The <)72 196.8 Q F0(X11/Xpr)A(oto.h)-.198 E F1 2.75<3e8c>C(l\
e contains three sets of de\214nitions that are of interest to the stub\
 imple-)-2.75 E
(mentor: request names, request structures, and reply structures.)72
209.8 Q -1.21(Yo)72 226.7 S 2.75(un)1.21 G
(eed to generate a \214le equi)-2.75 E -.275(va)-.275 G(lent to <).275 E
F0(X11/Xpr)A(oto.h)-.198 E F1 2.75(>f)C(or your e)-2.75 E
(xtension and need to include)-.165 E(it in your stub procedure.)72
239.7 Q(Each stub procedure also must include <)5.5 E F0(X11/Xlibint.h)A
F1(>.)A(The identi\214ers are deliberately chosen in such a w)72 256.6 Q
(ay that, if the request is called X_DoSome-)-.11 E(thing, then its req\
uest structure is xDoSomethingReq, and its reply is xDoSomethingReply)72
269.6 Q 5.5(.T)-.715 G(he)-5.5 E(GetReq f)72 282.6 Q
(amily of macros, de\214ned in <)-.11 E F0(X11/Xlibint.h)A F1(>, tak)A
(es adv)-.11 E(antage of this naming scheme.)-.275 E -.165(Fo)72 299.5 S
2.75(re).165 G(ach X request, there is a de\214nition in <)-2.75 E F0
(X11/Xpr)A(oto.h)-.198 E F1 2.75(>t)C(hat looks similar to this:)-2.75 E
(#de\214ne X_DoSomething)108 322.9 Q(42)8.25 E(In your e)72 342.4 Q(xte\
nsion header \214le, this will be a minor opcode, instead of a major op\
code.)-.165 E F0(Request F)72 368.4 Q(ormat)-.275 E F1(Ev)72 385.3 Q(er\
y request contains an 8-bit major opcode and a 16-bit length \214eld e)
-.165 E(xpressed in units of 4)-.165 E 2.75(bytes. Ev)72 398.3 R(ery re\
quest consists of 4 bytes of header \(containing the major opcode, the \
length \214eld,)-.165 E(and a data byte\) follo)72 411.3 Q
(wed by zero or more additional bytes of data.)-.275 E
(The length \214eld de\214nes the)5.5 E
(total length of the request, including the header)72 424.3 Q 5.5(.T)
-.605 G(he length \214eld in a request must equal the min-)-5.5 E
(imum length required to contain the request.)72 437.3 Q
(If the speci\214ed length is smaller or lar)5.5 E(ger than the)-.198 E
(required length, the serv)72 450.3 Q(er should generate a)-.165 E F0
(BadLength)3.666 E F1(error)3.666 E 5.5(.U)-.605 G
(nused bytes in a request are not)-5.5 E(required to be zero.)72 463.3 Q
(Extensions should be designed in such a w)5.5 E
(ay that long protocol requests can)-.11 E
(be split up into smaller requests, if it is possible to e)72 476.3 Q
(xceed the maximum request size of the serv)-.165 E(er)-.165 E(.)-.605 E
(The protocol guarantees the maximum request size to be no smaller than\
 4096 units \(16384)72 489.3 Q(bytes\).)72 502.3 Q
(Major opcodes 128 through 255 are reserv)72 519.2 Q(ed for e)-.165 E
2.75(xtensions. Extensions)-.165 F(are intended to contain)2.75 E
(multiple requests, so e)72 532.2 Q(xtension requests typically ha)-.165
E .33 -.165(ve a)-.22 H 2.75(na).165 G
(dditional minor opcode encoded in the)-2.75 E
(second data byte in the request header)72 545.2 Q 2.75(,b)-.44 G
(ut the placement and interpretation of this minor opcode)-2.97 E
(as well as all other \214elds in e)72 558.2 Q
(xtension requests are not de\214ned by the core protocol.)-.165 E(Ev)
5.5 E(ery request)-.165 E(is implicitly assigned a sequence number \(st\
arting with one\) used in replies, errors, and e)72 571.2 Q -.165(ve)
-.275 G(nts.).165 E 1.76 -.88(To h)72 588.1 T(elp b).88 E
(ut not cure portability problems to certain machines, the)-.22 E F0
(B16)3.666 E F1(and)3.666 E F0(B32)3.666 E F1(macros ha)3.666 E -.165
(ve)-.22 G(been de\214ned so that the)72 601.1 Q 2.75(yc)-.165 G
(an become bit\214eld speci\214cations on some machines.)-2.75 E -.165
(Fo)5.5 G 2.75(re).165 G(xample, on)-2.915 E 2.75(aC)72 614.1 S(ray)
-2.75 E 2.75(,t)-.715 G(hese should be used for all 16-bit and 32-bit q\
uantities, as discussed belo)-2.75 E -.715(w.)-.275 G
(Most protocol requests ha)72 631 Q .33 -.165(ve a c)-.22 H
(orresponding structure typedef in <).165 E F0(X11/Xpr)A(oto.h)-.198 E
F1(>, which looks)A(lik)72 644 Q(e:)-.11 E F0(453)279.75 769 Q 0 Cg EP
%%Page: 454 459
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E .44 LW 36 76.75 36 87.75 DL 36 74.75
36 85.75 DL 41.5 73 36 73 DL 43.5 73 38 73 DL 49 73 43.5 73 DL/F1 11
/Times-Roman@0 SF(typedef struct _DoSomethingReq {)72 91.5 Q(CARD8 reqT)
108 104.5 Q 99.612(ype; /*)-.88 F(X_DoSomething */)2.75 E
(CARD8 someDatum;)108 117.5 Q(/* used dif)84.971 E(ferently in dif)-.275
E(ferent requests */)-.275 E(CARD16 length B16;)108 130.5 Q
(/* total # of bytes in request, di)84.047 E(vided by 4 */)-.275 E(...)
108 143.5 Q(/* request-speci\214c data */)108 156.5 Q(...)108 169.5 Q
2.75(}x)72 182.5 S(DoSomethingReq;)-2.75 E 36 184.65 36 195.65 DL 36
182.65 36 193.65 DL 41.5 193.9 36 193.9 DL 43.5 193.9 38 193.9 DL 49
193.9 43.5 193.9 DL(If a core protocol request has a single 32-bit ar)72
218.9 Q(gument, you need not declare a request structure in)-.198 E
(your e)72 231.9 Q(xtension header \214le.)-.165 E
(Instead, such requests use the)5.5 E F0(xResour)3.666 E(ceReq)-.198 E
F1(structure in)3.666 E(<)72 244.9 Q F0(X11/Xpr)A(oto.h)-.198 E F1 2.75
(>. This)B(structure is used for an)2.75 E 2.75(yr)-.165 G
(equest whose single ar)-2.75 E(gument is a)-.198 E F0 -.198(Wi)3.666 G
(ndo).198 E(w)-.11 E F1(,).916 E F0(Pixmap)72.916 257.9 Q F1(,).916 E F0
(Drawable)3.666 E F1(,).916 E F0(GContext)3.666 E F1(,).916 E F0 -.275
(Fo)3.666 G(nt).275 E F1(,).916 E F0(Cursor)3.666 E F1(,).916 E F0
(Colormap)3.666 E F1(,).916 E F0(Atom)3.666 E F1 2.75(,o).916 G(r)-2.75
E F0 -.407(Vi)3.666 G(sualID).407 E F1(.).916 E 36 279.55 36 290.55 DL
36 277.55 36 288.55 DL 41.5 275.8 36 275.8 DL 43.5 275.8 38 275.8 DL 49
275.8 43.5 275.8 DL(typedef struct _ResourceReq {)72 294.3 Q(CARD8 reqT)
108 307.3 Q 99.612(ype; /*)-.88 F
(the request type, e.g. X_DoSomething */)2.75 E(BYTE pad;)108 320.3 Q
(/* not used */)129.587 E(CARD16 length B16;)108 333.3 Q
(/* 2 \(= total # of bytes in request, di)84.047 E(vided by 4\) */)-.275
E(CARD32 id B32;)108 346.3 Q(/* the W)102.989 E(indo)-.44 E 1.43 -.715
(w, D)-.275 H(ra).715 E -.11(wa)-.165 G(ble, F).11 E(ont, GConte)-.165 E
(xt, etc. */)-.165 E 2.75(}x)72 359.3 S(ResourceReq;)-2.75 E 36 361.45
36 372.45 DL 36 359.45 36 370.45 DL 41.5 370.7 36 370.7 DL 43.5 370.7 38
370.7 DL 49 370.7 43.5 370.7 DL(If con)72 395.7 Q -.165(ve)-.44 G
(nient, you can do something similar in your e).165 E
(xtension header \214le.)-.165 E(In both of these structures, the reqT)
72 412.6 Q(ype \214eld identi\214es the type of the request \(for e)-.88
E(xample,)-.165 E(X_MapW)72 425.6 Q(indo)-.44 E 2.75(wo)-.275 G 2.75(rX)
-2.75 G 2.75(_CreatePixmap\). The)-2.75 F(length \214eld tells ho)2.75 E
2.75(wl)-.275 G(ong the request is in units of)-2.75 E(4-byte longw)72
438.6 Q 2.75(ords. This)-.11 F
(length includes both the request structure itself and an)2.75 E 2.75
(yv)-.165 G(ariable-length)-3.025 E
(data, such as strings or lists, that follo)72 451.6 Q 2.75(wt)-.275 G
(he request structure.)-2.75 E(Request structures come in dif)5.5 E(fer)
-.275 E(-)-.22 E(ent sizes, b)72 464.6 Q
(ut all requests are padded to be multiples of four bytes long.)-.22 E
2.75(Af)72 481.5 S .55 -.275(ew p)-2.75 H(rotocol requests tak).275 E
2.75(en)-.11 G 2.75(oa)-2.75 G -.198(rg)-2.75 G(uments at all.).198 E
(Instead, the)5.5 E 2.75(yu)-.165 G(se the)-2.75 E F0(xReq)3.666 E F1
(structure in)3.666 E(<)72 494.5 Q F0(X11/Xpr)A(oto.h)-.198 E F1
(>, which contains only a reqT)A(ype and a length \(and a pad byte\).)
-.88 E(If the protocol request requires a reply)72 511.4 Q 2.75(,t)-.715
G(hen <)-2.75 E F0(X11/Xpr)A(oto.h)-.198 E F1 2.75(>a)C
(lso contains a reply structure type-)-2.75 E(def:)72 524.4 Q 36 546.05
36 557.05 DL 36 544.05 36 555.05 DL 41.5 542.3 36 542.3 DL 43.5 542.3 38
542.3 DL 49 542.3 43.5 542.3 DL(typedef struct _DoSomethingReply {)72
560.8 Q(BYTE type;)108 573.8 Q(/* al)126.529 E -.11(wa)-.11 G
(ys X_Reply */).11 E(BYTE someDatum;)108 586.8 Q(/* used dif)92.308 E
(ferently in dif)-.275 E(ferent requests */)-.275 E
(CARD16 sequenceNumber B16;)108 599.8 Q(/* # of requests sent so f)
35.185 E(ar */)-.11 E(CARD32 length B32;)108 612.8 Q
(/* # of additional bytes, di)84.047 E(vided by 4 */)-.275 E(...)108
625.8 Q(/* request-speci\214c data */)108 638.8 Q(...)108 651.8 Q 2.75
(}x)72 664.8 S(DoSomethingReply;)-2.75 E 36 666.95 36 677.95 DL 36
664.95 36 675.95 DL 41.5 676.2 36 676.2 DL 43.5 676.2 38 676.2 DL 49
676.2 43.5 676.2 DL(Most of these reply structures are 32 bytes long.)72
701.2 Q(If there are not that man)5.5 E 2.75(yr)-.165 G(eply v)-2.75 E
(alues, then the)-.275 E(y)-.165 E(contain a suf)72 714.2 Q
(\214cient number of pad \214elds to bring them up to 32 bytes.)-.275 E
(The length \214eld is the total)5.5 E
(number of bytes in the request minus 32, di)72 727.2 Q(vided by 4.)
-.275 E(This length will be nonzero only if:)5.5 E F0(454)279.75 769 Q 0
Cg EP
%%Page: 455 460
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E/F1 11/Times-Roman@0 SF 23.65<8354>72
85 S(he reply structure is follo)-23.65 E(wed by v)-.275 E
(ariable-length data, such as a list or string.)-.275 E 23.65<8354>72
101.9 S(he reply structure is longer than 32 bytes.)-23.65 E(Only)72
118.8 Q F0(GetW)3.666 E(indo)-.198 E(wAttrib)-.11 E(utes)-.22 E F1(,)
.916 E F0(QueryF)3.666 E(ont)-.275 E F1(,).916 E F0(QueryK)3.666 E
(eymap)-.275 E F1 2.75(,a).916 G(nd)-2.75 E F0(GetK)3.666 E
(eyboardContr)-.275 E(ol)-.198 E F1(ha)3.666 E -.165(ve)-.22 G
(reply structures longer than 32 bytes in the core protocol.)72 131.8 Q
2.75(Af)72 148.7 S .55 -.275(ew p)-2.75 H
(rotocol requests return replies that contain no data.).275 E(<)5.5 E F0
(X11/Xpr)A(oto.h)-.198 E F1 2.75(>d)C(oes not de\214ne)-2.75 E
(reply structures for these.)72 161.7 Q(Instead, the)5.5 E 2.75(yu)-.165
G(se the)-2.75 E F0(xGenericReply)3.666 E F1
(structure, which contains only a)3.666 E
(type, length, and sequence number \(and suf)72 174.7 Q
(\214cient padding to mak)-.275 E 2.75(ei)-.11 G 2.75(t3)-2.75 G 2.75
(2b)-2.75 G(ytes long\).)-2.75 E F0(Starting to Write a Stub Pr)72 200.7
Q(ocedur)-.198 E(e)-.198 E F1(An Xlib stub procedure should start lik)72
217.6 Q 2.75(et)-.11 G(his:)-2.75 E(#include "<X11/Xlibint.h>)108 241 Q
(XDoSomething \(ar)108 267 Q(guments, ... \))-.198 E(/* ar)108 280 Q
(gument declarations */)-.198 E({)108 293 Q(re)108 319 Q
(gister XDoSomethingReq *req;)-.165 E(...)108.916 332 Q
(If the protocol request has a reply)72 351.5 Q 2.75(,t)-.715 G
(hen the v)-2.75 E
(ariable declarations should include the reply structure)-.275 E
(for the request.)72 364.5 Q(The follo)5.5 E(wing is an e)-.275 E
(xample:)-.165 E(xDoSomethingReply rep;)108 387.9 Q F0
(Locking Data Structur)72 420.4 Q(es)-.198 E F1 1.76 -.88(To l)72 437.3
T(ock the display structure for systems that w).88 E
(ant to support multithreaded access to a single dis-)-.11 E
(play connection, each stub will need to lock its critical section.)72
450.3 Q(Generally)5.5 E 2.75(,t)-.715 G(his section is the point)-2.75 E
(from just before the appropriate GetReq call until all ar)72 463.3 Q
(guments to the call ha)-.198 E .33 -.165(ve b)-.22 H(een stored into)
.165 E(the b)72 476.3 Q(uf)-.22 E(fer)-.275 E 5.5(.T)-.605 G(he precise\
 instructions needed for this locking depend upon the machine architec-)
-5.5 E 2.75(ture. T)72 489.3 R .22 -.11(wo c)-.88 H
(alls, which are generally implemented as macros, ha).11 E .33 -.165
(ve b)-.22 H(een pro).165 E(vided.)-.165 E .44 LW 36 507.05 36 518.05 DL
36 505.05 36 516.05 DL 41.5 503.3 36 503.3 DL 43.5 503.3 38 503.3 DL 49
503.3 43.5 503.3 DL(LockDisplay\()72 519.2 Q/F2 11/Times-Italic@0 SF
(display).916 E F1(\)).916 E(Display *)88.5 532.2 Q F2(display)A F1(;)
.916 E(UnlockDisplay\()72 556.9 Q F2(display).916 E F1(\)).916 E
(Display *)88.5 569.9 Q F2(display)A F1(;).916 E F2(display)72 590.7 Q
F1(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605
E 36 586.35 36 597.35 DL 36 584.35 36 595.35 DL 41.5 595.6 36 595.6 DL
43.5 595.6 38 595.6 DL 49 595.6 43.5 595.6 DL F0(Sending the Pr)72 633.6
Q(otocol Request and Ar)-.198 E(guments)-.11 E F1(After the v)72 650.5 Q
(ariable declarations, a stub procedure should call one of four macros \
de\214ned in)-.275 E(<)72 663.5 Q F0(X11/Xlibint.h)A F1(>:)A F0(GetReq)
3.666 E F1(,).916 E F0(GetReqExtra)3.666 E F1(,).916 E F0(GetResReq)
3.666 E F1 2.75(,o).916 G(r)-2.75 E F0(GetEmptyReq)3.666 E F1 5.5(.A)
.916 G(ll of these macros)-5.5 E(tak)72 676.5 Q(e, as their \214rst ar)
-.11 E(gument, the name of the protocol request as declared in <)-.198 E
F0(X11/Xpr)A(oto.h)-.198 E F1(>)A -.165(ex)72 689.5 S(cept with X_ remo)
.165 E -.165(ve)-.165 G 2.75(d. Each).165 F(one declares a)2.75 E F0
(Display)3.666 E F1(structure pointer)3.666 E 2.75(,c)-.44 G(alled dp)
-2.75 E 1.43 -.715(y, a)-.11 H(nd a pointer).715 E
(to a request structure, called req, which is of the appropriate type.)
72 702.5 Q(The macro then appends the)5.5 E
(request structure to the output b)72 715.5 Q(uf)-.22 E(fer)-.275 E 2.75
<2c8c>-.44 G
(lls in its type and length \214eld, and sets req to point to it.)-2.75
E F0(455)279.75 769 Q 0 Cg EP
%%Page: 456 461
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E/F1 11/Times-Roman@0 SF
(If the protocol request has no ar)72 85 Q
(guments \(for instance, X_GrabServ)-.198 E(er\), then use)-.165 E F0
(GetEmptyReq)3.666 E F1(.).916 E(GetEmptyReq \(DoSomething, req\);)108
108.4 Q(If the protocol request has a single 32-bit ar)72 127.9 Q
(gument \(such as a)-.198 E F0(Pixmap)3.666 E F1(,).916 E F0 -.198(Wi)
3.666 G(ndo).198 E(w)-.11 E F1(,).916 E F0(Drawable)3.666 E F1(,).916 E
F0(Atom)72.916 140.9 Q F1 2.75(,a).916 G(nd so on\), then use)-2.75 E F0
(GetResReq)3.666 E F1 5.5(.T).916 G(he second ar)-5.5 E
(gument to the macro is the 32-bit object.)-.198 E F0(X_MapW)72.916
153.9 Q(indo)-.198 E(w)-.11 E F1(is a good e)3.666 E(xample.)-.165 E
(GetResReq \(DoSomething, rid, req\);)108 177.3 Q(The rid ar)72 196.8 Q
(gument is the)-.198 E F0(Pixmap)3.666 E F1(,).916 E F0 -.198(Wi)3.666 G
(ndo).198 E(w)-.11 E F1 2.75(,o).916 G 2.75(ro)-2.75 G
(ther resource ID.)-2.75 E(If the protocol request tak)72 213.7 Q(es an)
-.11 E 2.75(yo)-.165 G(ther ar)-2.75 E(gument list, then call)-.198 E F0
(GetReq)3.666 E F1 5.5(.A).916 G(fter the)-5.5 E F0(GetReq)3.666 E F1
2.75(,y).916 G(ou)-2.75 E(need to set all the other \214elds in the req\
uest structure, usually from ar)72 226.7 Q(guments to the stub proce-)
-.198 E(dure.)72 239.7 Q(GetReq \(DoSomething, req\);)108 263.1 Q
(/* \214ll in ar)108 276.1 Q(guments here */)-.198 E(req->ar)108 289.1 Q
(g1 = ar)-.198 E(g1;)-.198 E(req->ar)108 302.1 Q(g2 = ar)-.198 E(g2;)
-.198 E(...)108.916 315.1 Q 2.75(Af)72 334.6 S .55 -.275(ew s)-2.75 H
(tub procedures \(such as).275 E F0(XCr)3.666 E(eateGC)-.198 E F1(and)
3.666 E F0(XCr)3.666 E(eatePixmap)-.198 E F1 2.75(\)r).916 G
(eturn a resource ID to the)-2.75 E(caller b)72 347.6 Q
(ut pass a resource ID as an ar)-.22 E(gument to the protocol request.)
-.198 E(Such procedures use the)5.5 E(macro)72 360.6 Q F0(XAllocID)3.666
E F1(to allocate a resource ID from the range of IDs that were assigned\
 to this client)3.666 E(when it opened the connection.)72 373.6 Q
(rid = req->rid = XAllocID\(\);)108 397 Q(...)108.916 410 Q
(return \(rid\);)108 423 Q(Finally)72 442.5 Q 2.75(,s)-.715 G
(ome stub procedures transmit a \214x)-2.75 E(ed amount of v)-.165 E
(ariable-length data after the request.)-.275 E -.88(Ty)72 455.5 S
(pically).88 E 2.75(,t)-.715 G(hese procedures \(such as)-2.75 E F0(XMo)
3.666 E -.11(ve)-.11 G -.198(Wi).11 G(ndo).198 E(w)-.11 E F1(and)3.666 E
F0(XSetBackgr)3.666 E(ound)-.198 E F1 2.75(\)a).916 G
(re special cases of)-2.75 E(more general functions lik)72 468.5 Q(e)
-.11 E F0(XMo)3.666 E -.11(ve)-.11 G(ResizeW).11 E(indo)-.198 E(w)-.11 E
F1(and)3.666 E F0(XChangeGC)3.666 E F1 5.5(.T).916 G
(hese procedures use)-5.5 E F0(GetReqExtra)72.916 481.5 Q F1 2.75(,w)
.916 G(hich is the same as)-2.75 E F0(GetReq)3.666 E F1 -.165(ex)3.666 G
(cept that it tak).165 E(es an additional ar)-.11 E(gument \(the)-.198 E
(number of e)72 494.5 Q(xtra bytes to allocate in the output b)-.165 E
(uf)-.22 E(fer after the request structure\).)-.275 E(This number)5.5 E
(should al)72 507.5 Q -.11(wa)-.11 G(ys be a multiple of four).11 E(.)
-.605 E F0 -1.012(Va)72 533.5 S(riable Length Ar)1.012 E(guments)-.11 E
F1(Some protocol requests tak)72 550.4 Q 2.75(ea)-.11 G(dditional v)
-2.75 E(ariable-length data that follo)-.275 E 2.75(wt)-.275 G(he)-2.75
E F0(xDoSomethingReq)3.666 E F1 2.75(structure. The)72 563.4 R
(format of this data v)2.75 E(aries from request to request.)-.275 E
(Some requests require a)5.5 E(sequence of 8-bit bytes, others a sequen\
ce of 16-bit or 32-bit entities, and still others a sequence)72 576.4 Q
(of structures.)72 589.4 Q(It is necessary to add the length of an)72
606.3 Q 2.75(yv)-.165 G
(ariable-length data to the length \214eld of the request struc-)-3.025
E 2.75(ture. That)72 619.3 R(length \214eld is in units of 32-bit longw)
2.75 E 2.75(ords. If)-.11 F(the data is a string or other sequence of)
2.75 E(8-bit bytes, then you must round the length up and shift it befo\
re adding:)72 632.3 Q(req->length += \(nbytes+3\)>>2;)108 655.7 Q 1.76
-.88(To t)72 675.2 T(ransmit v).88 E(ariable-length data, use the)-.275
E F0(Data)3.666 E F1 2.75(macros. If)3.666 F
(the data \214ts into the output b)2.75 E(uf)-.22 E(fer)-.275 E 2.75(,t)
-.44 G(hen)-2.75 E(this macro copies it to the b)72 688.2 Q(uf)-.22 E
(fer)-.275 E 5.5(.I)-.605 G 2.75(fi)-5.5 G 2.75(td)-2.75 G
(oes not \214t, ho)-2.75 E(we)-.275 E -.165(ve)-.275 G .88 -.44(r, t)
.165 H(he).44 E F0(Data)3.666 E F1(macro calls)3.666 E F0(_XSend)3.666 E
F1(,).916 E(which transmits \214rst the contents of the b)72 701.2 Q(uf)
-.22 E(fer and then your data.)-.275 E(The)5.5 E F0(Data)3.666 E F1
(macros tak)3.666 E 2.75(et)-.11 G(hree)-2.75 E(ar)72 714.2 Q
(guments: the display)-.198 E 2.75(,ap)-.715 G(ointer to the be)-2.75 E
(ginning of the data, and the number of bytes to be sent.)-.165 E F0
(456)279.75 769 Q 0 Cg EP
%%Page: 457 462
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E .44 LW 36 76.75 36 87.75 DL 36 74.75
36 85.75 DL 41.5 73 36 73 DL 43.5 73 38 73 DL 49 73 43.5 73 DL/F1 11
/Times-Roman@0 SF(Data\()72 88.9 Q/F2 11/Times-Italic@0 SF(display).916
E F1 2.75(,\()C(char *\))-2.75 E F2(data)2.75 E F1(,)A F2(nbytes)2.75 E
F1(\);).916 E(Data16\()72 114.9 Q F2(display).916 E F1 2.75(,\()C
(short *\))-2.75 E F2(data)2.75 E F1(,)A F2(nbytes)2.75 E F1(\);).916 E
(Data32\()72 140.9 Q F2(display).916 E F1 2.75(,\()C(long *\))-2.75 E F2
(data)2.75 E F1(,)A F2(nbytes)2.75 E F1(\);).916 E 36 140.45 36 151.45
DL 36 138.45 36 149.45 DL 41.5 149.7 36 149.7 DL 43.5 149.7 38 149.7 DL
49 149.7 43.5 149.7 DL F0(Data)72.916 174.7 Q F1(,).916 E F0(Data16)
3.666 E F1 2.75(,a).916 G(nd)-2.75 E F0(Data32)3.666 E F1
(are macros that may use their last ar)3.666 E
(gument more than once, so that)-.198 E(ar)72 187.7 Q
(gument should be a v)-.198 E(ariable rather than an e)-.275 E
(xpression such as `)-.165 E(`nitems*sizeof\(item\)')-.814 E 2.75('. Y)
-.814 F(ou)-1.21 E(should do that kind of computation in a separate sta\
tement before calling them.)72 200.7 Q(Use the appropri-)5.5 E
(ate macro when sending byte, short, or long data.)72 213.7 Q
(If the protocol request requires a reply)72 230.6 Q 2.75(,t)-.715 G
(hen call the procedure)-2.75 E F0(_XSend)3.666 E F1(instead of the)
3.666 E F0(Data)3.666 E F1(macro.)72 243.6 Q F0(_XSend)6.416 E F1(tak)
3.666 E(es the same ar)-.11 E(guments, b)-.198 E
(ut because it sends your data immediately instead of)-.22 E(cop)72
256.6 Q(ying it into the output b)-.11 E(uf)-.22 E(fer \(which w)-.275 E
(ould later be \215ushed an)-.11 E(yw)-.165 E(ay by the follo)-.11 E
(wing call on)-.275 E F0(_XReply)72.916 269.6 Q F1(\), it is f).916 E
(aster)-.11 E(.)-.605 E F0(Replies)72 295.6 Q F1
(If the protocol request has a reply)72 312.5 Q 2.75(,t)-.715 G
(hen call)-2.75 E F0(_XReply)3.666 E F1(after you ha)3.666 E .33 -.165
(ve \214)-.22 H(nished dealing with all the).165 E<8c78>72 325.5 Q
(ed-length and v)-.165 E(ariable-length ar)-.275 E(guments.)-.198 E F0
(_XReply)6.416 E F1(\215ushes the output b)3.666 E(uf)-.22 E(fer and w)
-.275 E(aits for an)-.11 E F0(xReply)72.916 338.5 Q F1(pack)3.666 E
(et to arri)-.11 E -.165(ve)-.275 G 5.5(.I).165 G 2.75(fa)-5.5 G .33
-.165(ny e)-2.75 H -.165(ve)-.11 G(nts arri).165 E .33 -.165(ve i)-.275
H 2.75(nt).165 G(he meantime,)-2.75 E F0(_XReply)3.666 E F1
(places them in the queue)3.666 E(for later use.)72 351.5 Q 36 369.25 36
380.25 DL 36 367.25 36 378.25 DL 41.5 365.5 36 365.5 DL 43.5 365.5 38
365.5 DL 49 365.5 43.5 365.5 DL(Status _XReply\()72 381.4 Q F2(display)
.916 E F1(,)A F2 -.407(re)2.75 G(p).407 E F1(,)A F2 -.22(ex)2.75 G(tr)
.22 E(a)-.165 E F1(,)A F2(discar)2.75 E(d)-.407 E F1(\)).916 E
(Display *)88.5 394.4 Q F2(display)A F1(;).916 E(xReply *)88.5 407.4 Q
F2 -.407(re)C(p).407 E F1(;).916 E(int)88.5 420.4 Q F2 -.22(ex)2.75 G
(tr).22 E(a)-.165 E F1(;).916 E(Bool)88.5 433.4 Q F2(discar)2.75 E(d)
-.407 E F1(;).916 E F2(display)72 454.2 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2 -.407(re)72 471.1 S(p).407 E F1(Speci\214es the reply structure.)
57.744 E F2 -.22(ex)72 488 S(tr).22 E(a)-.165 E F1
(Speci\214es the number of 32-bit w)49.78 E(ords e)-.11 E
(xpected after the replay)-.165 E(.)-.715 E F2(discar)72 504.9 Q(d)-.407
E F1(Speci\214es if an)39.407 E 2.75(yd)-.165 G(ata be)-2.75 E
(yond that speci\214ed in the e)-.165 E(xtra ar)-.165 E
(gument should be dis-)-.198 E(carded.)144 517.9 Q 36 513.55 36 524.55
DL 36 511.55 36 522.55 DL 41.5 522.8 36 522.8 DL 43.5 522.8 38 522.8 DL
49 522.8 43.5 522.8 DL(The)72 547.8 Q F0(_XReply)3.666 E F1(function w)
3.666 E(aits for a reply pack)-.11 E
(et and copies its contents into the speci\214ed rep.)-.11 E F0(_XReply)
72.916 560.8 Q F1(handles error and e)3.666 E -.165(ve)-.275 G(nt pack)
.165 E(ets that occur before the reply is recei)-.11 E -.165(ve)-.275 G
(d.).165 E F0(_XReply)6.416 E F1(tak)3.666 E(es)-.11 E(four ar)72 573.8
Q(guments:)-.198 E 23.65<8341>72 590.7 S F0(Display)-19.984 E F1 2.75
(*s)3.666 G(tructure)-2.75 E 23.65<8341>72 607.6 S
(pointer to a reply structure \(which must be cast to an)-20.9 E F0
(xReply)3.666 E F1(*\))3.666 E 23.65<8354>72 624.5 S
(he number of additional 32-bit w)-23.65 E(ords \(be)-.11 E
(yond sizeof\()-.165 E F0(xReply).916 E F1 2.75(\)=3).916 G 2.75(2b)
-2.75 G(ytes\) in the reply)-2.75 E(structure)99.5 637.5 Q 23.65<8341>72
654.4 S(Boolean that indicates whether)-20.9 E F0(_XReply)3.666 E F1
(is to discard an)3.666 E 2.75(ya)-.165 G(dditional bytes be)-2.75 E
(yond those)-.165 E(it w)99.5 667.4 Q(as told to read)-.11 E
(Because most reply structures are 32 bytes long, the third ar)72 684.3
Q(gument is usually 0.)-.198 E(The only core)5.5 E(protocol e)72 697.3 Q
(xceptions are the replies to)-.165 E F0(GetW)3.666 E(indo)-.198 E
(wAttrib)-.11 E(utes)-.22 E F1(,).916 E F0(QueryF)3.666 E(ont)-.275 E F1
(,).916 E F0(QueryK)3.666 E(eymap)-.275 E F1 2.75(,a).916 G(nd)-2.75 E
F0(GetK)72.916 710.3 Q(eyboardContr)-.275 E(ol)-.198 E F1 2.75(,w).916 G
(hich ha)-2.75 E .33 -.165(ve l)-.22 H(onger replies.).165 E F0(457)
279.75 769 Q 0 Cg EP
%%Page: 458 463
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E/F1 11/Times-Roman@0 SF(The last ar)72
85 Q(gument should be)-.198 E F0 -.275(Fa)3.666 G(lse).275 E F1
(if the reply structure is follo)3.666 E(wed by additional v)-.275 E
(ariable-length)-.275 E(data \(such as a list or string\).)72 98 Q
(It should be)5.5 E F0 -.814(Tr)3.666 G(ue).814 E F1(if there is not an)
3.666 E 2.75(yv)-.165 G(ariable-length data.)-3.025 E(Note)277.308 121 Q
(This last ar)99.5 139 Q(gument is pro)-.198 E(vided for upw)-.165 E
(ard-compatibility reasons to allo)-.11 E 2.75(wac)-.275 G(lient to)
-2.75 E(communicate properly with a h)99.5 152 Q(ypothetical later v)
-.055 E(ersion of the serv)-.165 E(er that sends more)-.165 E
(data than the client e)99.5 165 Q 2.75(xpected. F)-.165 F(or e)-.165 E
(xample, some later v)-.165 E(ersion of)-.165 E F0(GetW)3.666 E(indo)
-.198 E(wAt-)-.11 E(trib)99.5 178 Q(utes)-.22 E F1(might use a lar)3.666
E(ger)-.198 E 2.75(,b)-.44 G(ut compatible,)-2.97 E F0(xGetW)3.666 E
(indo)-.198 E(wAttrib)-.11 E(utesReply)-.22 E F1(that con-)3.666 E
(tains additional attrib)99.5 191 Q(ute data at the end.)-.22 E F0
(_XReply)72.916 214 Q F1(returns)3.666 E F0 -.814(Tr)3.666 G(ue).814 E
F1(if it recei)3.666 E -.165(ve)-.275 G 2.75(dar).165 G
(eply successfully or)-2.75 E F0 -.275(Fa)3.666 G(lse).275 E F1
(if it recei)3.666 E -.165(ve)-.275 G 2.75(da).165 G .33 -.165(ny s)
-2.75 H(ort of error).165 E(.)-.605 E -.165(Fo)72 230.9 S 2.75(rar).165
G(equest with a reply that is not follo)-2.75 E(wed by v)-.275 E
(ariable-length data, you write something lik)-.275 E(e:)-.11 E
(_XReply\(display)108 254.3 Q 2.75(,\()-.715 G(xReply *\)&rep, 0, T)
-2.75 E(rue\);)-.385 E(*ret1 = rep.ret1;)108 267.3 Q(*ret2 = rep.ret2;)
108 280.3 Q(*ret3 = rep.ret3;)108 293.3 Q(...)108.916 306.3 Q
(UnlockDisplay\(dp)108 319.3 Q(y\);)-.11 E(SyncHandle\(\);)108 332.3 Q
(return \(rep.ret4\);)108 345.3 Q(})108 358.3 Q(If there is v)72 377.8 Q
(ariable-length data after the reply)-.275 E 2.75(,c)-.715 G(hange the)
-2.75 E F0 -.814(Tr)3.666 G(ue).814 E F1(to)3.666 E F0 -.275(Fa)3.666 G
(lse).275 E F1 2.75(,a).916 G(nd use the appropriate)-2.75 E F0(_XRead)
72.916 390.8 Q F1(function to read the v)3.666 E(ariable-length data.)
-.275 E .44 LW 36 412.45 36 423.45 DL 36 410.45 36 421.45 DL 41.5 408.7
36 408.7 DL 43.5 408.7 38 408.7 DL 49 408.7 43.5 408.7 DL(_XRead\()72
424.6 Q/F2 11/Times-Italic@0 SF(display).916 E F1(,)A F2(data_r)2.75 E
(eturn)-.407 E F1(,)A F2(nbytes)2.75 E F1(\)).916 E(Display *)91.25
437.6 Q F2(display)A F1(;).916 E(char *)91.25 450.6 Q F2(data_r)A(eturn)
-.407 E F1(;).916 E(long)91.25 463.6 Q F2(nbytes)2.75 E F1(;).916 E F2
(display)72 484.4 Q F1(Speci\214es the connection to the X serv)40.221 E
(er)-.165 E(.)-.605 E F2(data_r)72 501.3 Q(eturn)-.407 E F1
(Speci\214es the b)19.849 E(uf)-.22 E(fer)-.275 E(.)-.605 E F2(nbytes)72
518.2 Q F1(Speci\214es the number of bytes required.)43.895 E 36 513.85
36 524.85 DL 36 511.85 36 522.85 DL 41.5 523.1 36 523.1 DL 43.5 523.1 38
523.1 DL 49 523.1 43.5 523.1 DL(The)72 548.1 Q F0(_XRead)3.666 E F1
(function reads the speci\214ed number of bytes into data_return.)3.666
E 36 569.75 36 580.75 DL 36 567.75 36 578.75 DL 41.5 566 36 566 DL 43.5
566 38 566 DL 49 566 43.5 566 DL(_XRead16\()72 581.9 Q F2(display).916 E
F1(,)A F2(data_r)2.75 E(eturn)-.407 E F1(,)A F2(nbytes)2.75 E F1(\)).916
E(Display *)91.25 594.9 Q F2(display)A F1(;).916 E(short *)91.25 607.9 Q
F2(data_r)A(eturn)-.407 E F1(;).916 E(long)91.25 620.9 Q F2(nbytes)2.75
E F1(;).916 E F2(display)72 641.7 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2(data_r)72 658.6 Q(eturn)-.407 E F1(Speci\214es the b)19.849 E(uf)-.22
E(fer)-.275 E(.)-.605 E F2(nbytes)72 675.5 Q F1
(Speci\214es the number of bytes required.)43.895 E 36 671.15 36 682.15
DL 36 669.15 36 680.15 DL 41.5 680.4 36 680.4 DL 43.5 680.4 38 680.4 DL
49 680.4 43.5 680.4 DL(The)72 705.4 Q F0(_XRead16)3.666 E F1(function r\
eads the speci\214ed number of bytes, unpacking them as 16-bit quanti-)
3.666 E(ties, into the speci\214ed array as shorts.)72 718.4 Q F0(458)
279.75 769 Q 0 Cg EP
%%Page: 459 464
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E .44 LW 36 76.75 36 87.75 DL 36 74.75
36 85.75 DL 41.5 73 36 73 DL 43.5 73 38 73 DL 49 73 43.5 73 DL/F1 11
/Times-Roman@0 SF(_XRead32\()72 88.9 Q/F2 11/Times-Italic@0 SF(display)
.916 E F1(,)A F2(data_r)2.75 E(eturn)-.407 E F1(,)A F2(nbytes)2.75 E F1
(\)).916 E(Display *)91.25 101.9 Q F2(display)A F1(;).916 E(long *)91.25
114.9 Q F2(data_r)A(eturn)-.407 E F1(;).916 E(long)91.25 127.9 Q F2
(nbytes)2.75 E F1(;).916 E F2(display)72 148.7 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2(data_r)72 165.6 Q(eturn)-.407 E F1(Speci\214es the b)19.849 E(uf)-.22
E(fer)-.275 E(.)-.605 E F2(nbytes)72 182.5 Q F1
(Speci\214es the number of bytes required.)43.895 E 36 178.15 36 189.15
DL 36 176.15 36 187.15 DL 41.5 187.4 36 187.4 DL 43.5 187.4 38 187.4 DL
49 187.4 43.5 187.4 DL(The)72 212.4 Q F0(_XRead32)3.666 E F1(function r\
eads the speci\214ed number of bytes, unpacking them as 32-bit quanti-)
3.666 E(ties, into the speci\214ed array as longs.)72 225.4 Q 36 247.05
36 258.05 DL 36 245.05 36 256.05 DL 41.5 243.3 36 243.3 DL 43.5 243.3 38
243.3 DL 49 243.3 43.5 243.3 DL(_XRead16P)72 259.2 Q(ad\()-.165 E F2
(display).916 E F1(,)A F2(data_r)2.75 E(eturn)-.407 E F1(,)A F2(nbytes)
2.75 E F1(\)).916 E(Display *)91.25 272.2 Q F2(display)A F1(;).916 E
(short *)91.25 285.2 Q F2(data_r)A(eturn)-.407 E F1(;).916 E(long)91.25
298.2 Q F2(nbytes)2.75 E F1(;).916 E F2(display)72 319 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2(data_r)72 335.9 Q(eturn)-.407 E F1(Speci\214es the b)19.849 E(uf)-.22
E(fer)-.275 E(.)-.605 E F2(nbytes)72 352.8 Q F1
(Speci\214es the number of bytes required.)43.895 E 36 348.45 36 359.45
DL 36 346.45 36 357.45 DL 41.5 357.7 36 357.7 DL 43.5 357.7 38 357.7 DL
49 357.7 43.5 357.7 DL(The)72 382.7 Q F0(_XRead16P)3.666 E(ad)-.11 E F1
(function reads the speci\214ed number of bytes, unpacking them as 16-b\
it quan-)3.666 E(tities, into the speci\214ed array as shorts.)72 395.7
Q(If the number of bytes is not a multiple of four)5.5 E(,)-.44 E F0
(_XRead16P)72.916 408.7 Q(ad)-.11 E F1(reads and discards up to tw)3.666
E 2.75(oa)-.11 G(dditional pad bytes.)-2.75 E 36 430.35 36 441.35 DL 36
428.35 36 439.35 DL 41.5 426.6 36 426.6 DL 43.5 426.6 38 426.6 DL 49
426.6 43.5 426.6 DL(_XReadP)72 442.5 Q(ad\()-.165 E F2(display).916 E F1
(,)A F2(data_r)2.75 E(eturn)-.407 E F1(,)A F2(nbytes)2.75 E F1(\)).916 E
(Display *)91.25 455.5 Q F2(display)A F1(;).916 E(char *)91.25 468.5 Q
F2(data_r)A(eturn)-.407 E F1(;).916 E(long)91.25 481.5 Q F2(nbytes)2.75
E F1(;).916 E F2(display)72 502.3 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2(data_r)72 519.2 Q(eturn)-.407 E F1(Speci\214es the b)19.849 E(uf)-.22
E(fer)-.275 E(.)-.605 E F2(nbytes)72 536.1 Q F1
(Speci\214es the number of bytes required.)43.895 E 36 531.75 36 542.75
DL 36 529.75 36 540.75 DL 41.5 541 36 541 DL 43.5 541 38 541 DL 49 541
43.5 541 DL(The)72 566 Q F0(_XReadP)3.666 E(ad)-.11 E F1
(function reads the speci\214ed number of bytes into data_return.)3.666
E(If the number of)5.5 E(bytes is not a multiple of four)72 579 Q(,)-.44
E F0(_XReadP)3.666 E(ad)-.11 E F1
(reads and discards up to three additional pad bytes.)3.666 E
(Each protocol request is a little dif)72 595.9 Q 2.75(ferent. F)-.275 F
(or further information, see the Xlib sources for e)-.165 E(xam-)-.165 E
(ples.)72 608.9 Q F0(Synchr)72 634.9 Q(onous Calling)-.198 E F1
(Each procedure should ha)72 651.8 Q .33 -.165(ve a c)-.22 H
(all, just before returning to the user).165 E 2.75(,t)-.44 G 2.75(oam)
-2.75 G(acro called)-2.75 E F0(SyncHan-)3.666 E(dle)72 664.8 Q F1 5.5
(.I).916 G 2.75(fs)-5.5 G(ynchronous mode is enabled \(see)-2.75 E F0
(XSynchr)3.666 E(onize)-.198 E F1(\), the request is sent immediately)
.916 E 5.5(.T)-.715 G(he)-5.5 E(library)72 677.8 Q 2.75(,h)-.715 G -.275
(ow)-2.75 G -2.365 -.275(ev e).275 H .88 -.44(r, w).275 H(aits until an)
.33 E 2.75(ye)-.165 G(rror the procedure could generate at the serv)
-2.75 E(er has been han-)-.165 E(dled.)72 690.8 Q F0(459)279.75 769 Q 0
Cg EP
%%Page: 460 465
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E(Allocating and Deallocating Memory)72
85 Q/F1 11/Times-Roman@0 SF 1.76 -.88(To s)72 101.9 T
(upport the possible reentry of these procedures, you must observ).88 E
2.75(es)-.165 G -2.365 -.275(ev e)-2.75 H(ral con).275 E -.165(ve)-.44 G
(ntions when).165 E(allocating and deallocating memory)72 114.9 Q 2.75
(,m)-.715 G(ost often done when returning data to the user from the)
-2.75 E(windo)72 127.9 Q 2.75(ws)-.275 G
(ystem of a size the caller could not kno)-2.75 E 2.75(wi)-.275 G 2.75
(na)-2.75 G(dv)-2.75 E(ance \(for e)-.275 E
(xample, a list of fonts or a list)-.165 E(of e)72 140.9 Q 2.75
(xtensions\). The)-.165 F(standard C library functions on man)2.75 E
2.75(ys)-.165 G(ystems are not protected ag)-2.75 E(ainst sig-)-.055 E
(nals or other multithreaded uses.)72 153.9 Q(The follo)5.5 E
(wing analogies to standard I/O library functions ha)-.275 E -.165(ve)
-.22 G(been de\214ned:)72 166.9 Q F0(Xmalloc)72.916 186.4 Q F1(\(\)).916
E(Replaces)136.763 186.4 Q F0(malloc)3.666 E F1(\(\)).916 E F0(XFr)
72.916 199.4 Q(ee)-.198 E F1(\(\)).916 E(Replaces)136.763 199.4 Q F0(fr)
3.666 E(ee)-.198 E F1(\(\)).916 E F0(Xcalloc)72.916 212.4 Q F1(\(\)).916
E(Replaces)136.763 212.4 Q F0(calloc)3.666 E F1(\(\)).916 E
(These should be used in place of an)72 235.8 Q 2.75(yc)-.165 G
(alls you w)-2.75 E(ould mak)-.11 E 2.75(et)-.11 G 2.75(ot)-2.75 G
(he normal C library functions.)-2.75 E(If you need a single scratch b)
72 252.7 Q(uf)-.22 E(fer inside a critical section \(for e)-.275 E
(xample, to pack and unpack data)-.165 E(to and from the wire protocol\
\), the general memory allocators may be too e)72 265.7 Q(xpensi)-.165 E
.33 -.165(ve t)-.275 H 2.75(ou).165 G(se \(par)-2.75 E(-)-.22 E
(ticularly in output functions, which are performance critical\).)72
278.7 Q(The follo)5.5 E(wing function returns a)-.275 E(scratch b)72
291.7 Q(uf)-.22 E(fer for use within a critical section:)-.275 E .44 LW
36 309.45 36 320.45 DL 36 307.45 36 318.45 DL 41.5 305.7 36 305.7 DL
43.5 305.7 38 305.7 DL 49 305.7 43.5 305.7 DL(char *_XAllocScratch\()72
321.6 Q/F2 11/Times-Italic@0 SF(display).916 E F1(,)A F2(nbytes)2.75 E
F1(\)).916 E(Display *)88.5 334.6 Q F2(display)A F1(;).916 E
(unsigned long)88.5 347.6 Q F2(nbytes)2.75 E F1(;).916 E F2(display)72
368.4 Q F1(Speci\214es the connection to the X serv)40.221 E(er)-.165 E
(.)-.605 E F2(nbytes)72 385.3 Q F1
(Speci\214es the number of bytes required.)43.895 E 36 380.95 36 391.95
DL 36 378.95 36 389.95 DL 41.5 390.2 36 390.2 DL 43.5 390.2 38 390.2 DL
49 390.2 43.5 390.2 DL(This storage must only be used inside of a criti\
cal section of your stub)72 415.2 Q 5.5(.T)-.44 G
(he returned pointer can-)-5.5 E(not be assumed v)72 428.2 Q
(alid after an)-.275 E 2.75(yc)-.165 G
(all that might permit another thread to e)-2.75 E -.165(xe)-.165 G
(cute inside Xlib).165 E 5.5(.F)-.44 G(or)-5.665 E -.165(ex)72 441.2 S
(ample, the pointer cannot be assumed v).165 E(alid after an)-.275 E
2.75(yu)-.165 G(se of the)-2.75 E F0(GetReq)3.666 E F1(or)3.666 E F0
(Data)3.666 E F1 -.11(fa)3.666 G(milies of).11 E(macros, after an)72
454.2 Q 2.75(yu)-.165 G(se of)-2.75 E F0(_XReply)3.666 E F1 2.75(,o).916
G 2.75(ra)-2.75 G(fter an)-2.75 E 2.75(yu)-.165 G(se of the)-2.75 E F0
(_XSend)3.666 E F1(or)3.666 E F0(_XRead)3.666 E F1 -.11(fa)3.666 G
(milies of func-).11 E(tions.)72 467.2 Q(The follo)72 497.1 Q
(wing function returns a scratch b)-.275 E(uf)-.22 E
(fer for use across critical sections:)-.275 E 36 514.85 36 525.85 DL 36
512.85 36 523.85 DL 41.5 511.1 36 511.1 DL 43.5 511.1 38 511.1 DL 49
511.1 43.5 511.1 DL(char *_XAllocT)72 527 Q(emp\()-.77 E F2(display).916
E F1(,)A F2(nbytes)2.75 E F1(\)).916 E(Display *)88.5 540 Q F2(display)A
F1(;).916 E(unsigned long)88.5 553 Q F2(nbytes)2.75 E F1(;).916 E F2
(display)72 573.8 Q F1(Speci\214es the connection to the X serv)40.221 E
(er)-.165 E(.)-.605 E F2(nbytes)72 590.7 Q F1
(Speci\214es the number of bytes required.)43.895 E 36 586.35 36 597.35
DL 36 584.35 36 595.35 DL 41.5 595.6 36 595.6 DL 43.5 595.6 38 595.6 DL
49 595.6 43.5 595.6 DL(This storage can be used across calls that might\
 permit another thread to e)72 620.6 Q -.165(xe)-.165 G
(cute inside Xlib).165 E 5.5(.T)-.44 G(he)-5.5 E(storage must be e)72
633.6 Q(xplicitly returned to Xlib)-.165 E 5.5(.T)-.44 G(he follo)-5.5 E
(wing function returns the storage:)-.275 E F0(460)279.75 769 Q 0 Cg EP
%%Page: 461 466
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E .44 LW 36 76.75 36 87.75 DL 36 74.75
36 85.75 DL 41.5 73 36 73 DL 43.5 73 38 73 DL 49 73 43.5 73 DL/F1 11
/Times-Roman@0 SF -.22(vo)72 88.9 S(id _XFreeT).22 E(emp\()-.77 E/F2 11
/Times-Italic@0 SF(display).916 E F1(,)A F2 -.22(bu)2.75 G(f).22 E F1(,)
A F2(nbytes)2.75 E F1(\)).916 E(Display *)88.5 101.9 Q F2(display)A F1
(;).916 E(char *)88.5 114.9 Q F2 -.22(bu)C(f).22 E F1(;).916 E
(unsigned long)88.5 127.9 Q F2(nbytes)2.75 E F1(;).916 E F2(display)72
148.7 Q F1(Speci\214es the connection to the X serv)40.221 E(er)-.165 E
(.)-.605 E F2 -.22(bu)72 165.6 S(f).22 E F1(Speci\214es the b)58.162 E
(uf)-.22 E(fer to return.)-.275 E F2(nbytes)72 182.5 Q F1
(Speci\214es the size of the b)43.895 E(uf)-.22 E(fer)-.275 E(.)-.605 E
36 178.15 36 189.15 DL 36 176.15 36 187.15 DL 41.5 187.4 36 187.4 DL
43.5 187.4 38 187.4 DL 49 187.4 43.5 187.4 DL -1.21(Yo)72 212.4 S 2.75
(um)1.21 G
(ust pass back the same pointer and size that were returned by)-2.75 E
F0(_XAllocT)3.666 E(emp)-1.012 E F1(.).916 E F0 -.22(Po)72 238.4 S
(rtability Considerations).22 E F1(Man)72 255.3 Q 2.75(ym)-.165 G
(achine architectures, including man)-2.75 E 2.75(yo)-.165 G 2.75(ft)
-2.75 G(he more recent RISC architectures, do not cor)-2.75 E(-)-.22 E(\
rectly access data at unaligned locations; their compilers pad out stru\
ctures to preserv)72 268.3 Q 2.75(et)-.165 G(his char)-2.75 E(-)-.22 E
2.75(acteristic. Man)72 281.3 R 2.75(yo)-.165 G(ther machines capable o\
f unaligned references pad inside of structures as well)-2.75 E
(to preserv)72 294.3 Q 2.75(ea)-.165 G
(lignment, because accessing aligned data is usually much f)-2.75 E
(aster)-.11 E 5.5(.B)-.605 G(ecause the library)-5.5 E(and the serv)72
307.3 Q(er use structures to access data at arbitrary points in a byte \
stream, all data in request)-.165 E(and reply pack)72 320.3 Q(ets)-.11 E
F2(must)2.75 E F1(be naturally aligned; that is, 16-bit data starts on \
16-bit boundaries in the)2.75 E
(request and 32-bit data on 32-bit boundaries.)72 333.3 Q(All requests)
5.5 E F2(must)2.75 E F1(be a multiple of 32 bits in length)2.75 E
(to preserv)72 346.3 Q 2.75(et)-.165 G
(he natural alignment in the data stream.)-2.75 E -1.21(Yo)5.5 G 2.75
(um)1.21 G(ust pad structures out to 32-bit bound-)-2.75 E 2.75
(aries. P)72 359.3 R(ad information does not ha)-.165 E .33 -.165(ve t)
-.22 H 2.75(ob).165 G 2.75(ez)-2.75 G(eroed unless you w)-2.75 E
(ant to preserv)-.11 E 2.75(es)-.165 G(uch \214elds for)-2.75 E
(future use in your protocol requests.)72 372.3 Q(Floating point v)5.5 E
(aries radically between machines and should)-.275 E(be a)72 385.3 Q
-.22(vo)-.22 G(ided completely if at all possible.).22 E
(This code may run on machines with 16-bit ints.)72 402.2 Q(So, if an)
5.5 E 2.75(yi)-.165 G(nte)-2.75 E(ger ar)-.165 E(gument, v)-.198 E
(ariable, or return)-.275 E -.275(va)72 415.2 S(lue either can tak).275
E 2.75(eo)-.11 G(nly nonne)-2.75 E -.055(ga)-.165 G(ti).055 E .33 -.165
(ve v)-.275 H(alues or is declared as a)-.11 E F0(CARD16)3.666 E F1
(in the protocol, be sure)3.666 E(to declare it as)72 428.2 Q F0 1.832
(unsigned int)3.666 F F1(and not as)3.666 E F0(int)3.666 E F1 5.5(.\()
.916 G(This, of course, does not apply to Booleans or enu-)-5.5 E
(merations.\))72 441.2 Q(Similarly)72 458.1 Q 2.75(,i)-.715 G 2.75(fa)
-2.75 G .33 -.165(ny i)-2.75 H(nte).165 E(ger ar)-.165 E
(gument or return v)-.198 E(alue is declared)-.275 E F0(CARD32)3.666 E
F1(in the protocol, declare it)3.666 E(as an)72 471.1 Q F0 1.832
(unsigned long)3.666 F F1(and not as)3.666 E F0(int)3.666 E F1(or)3.666
E F0(long)3.666 E F1 5.5(.T).916 G(his also goes for an)-5.5 E 2.75(yi)
-.165 G(nternal v)-2.75 E(ariables that may)-.275 E(tak)72 484.1 Q 2.75
(eo)-.11 G 2.75(nv)-2.75 G(alues lar)-3.025 E
(ger than the maximum 16-bit)-.198 E F0 1.832(unsigned int)3.666 F F1(.)
.916 E(The library currently assumes that a)72 501 Q F0(char)3.666 E F1
(is 8 bits, a)3.666 E F0(short)3.666 E F1(is 16 bits, an)3.666 E F0(int)
3.666 E F1(is 16 or 32 bits, and)3.666 E(a)72 514 Q F0(long)3.666 E F1
(is 32 bits.)3.666 E(The)5.5 E F0 -.11(Pa)3.666 G(ckData).11 E F1
(macro is a half-hearted attempt to deal with the possibility of)3.666 E
(32 bit shorts.)72 527 Q(Ho)5.5 E(we)-.275 E -.165(ve)-.275 G .88 -.44
(r, m).165 H(uch more w).44 E(ork is needed to mak)-.11 E 2.75(et)-.11 G
(his w)-2.75 E(ork properly)-.11 E(.)-.715 E F0(Deri)72 553 Q
(ving the Corr)-.11 E(ect Extension Opcode)-.198 E F1
(The remaining problem a writer of an e)72 569.9 Q
(xtension stub procedure f)-.165 E(aces that the core protocol does)-.11
E(not f)72 582.9 Q
(ace is to map from the call to the proper major and minor opcodes.)-.11
E(While there are a number)5.5 E(of strate)72 595.9 Q
(gies, the simplest and f)-.165 E(astest is outlined belo)-.11 E -.715
(w.)-.275 G 16.5(1. Declare)72 612.8 R
(an array of pointers, _NFILE long \(this is normally found in <)2.75 E
F0(stdio.h)A F1 2.75(>a)C(nd is the)-2.75 E
(number of \214le descriptors supported on the system\) of type)99.5
625.8 Q F0(XExtCodes)3.666 E F1 5.5(.M).916 G(ak)-5.5 E 2.75(es)-.11 G
(ure these)-2.75 E(are all initialized to NULL.)99.5 638.8 Q 16.5
(2. When)72 655.7 R(your stub is entered, your initialization test is j\
ust to use the display pointer passed in)2.75 E
(to access the \214le descriptor and an inde)99.5 668.7 Q 2.75(xi)-.165
G(nto the array)-2.75 E 5.5(.I)-.715 G 2.75(ft)-5.5 G
(he entry is NULL, then this is)-2.75 E
(the \214rst time you are entering the procedure for this display)99.5
681.7 Q 5.5(.C)-.715 G(all your initialization proce-)-5.5 E
(dure and pass to it the display pointer)99.5 694.7 Q(.)-.605 E 16.5
(3. Once)72 711.6 R(in your initialization procedure, call)2.75 E F0
(XInitExtension)3.666 E F1 2.75(;i).916 G 2.75(fi)-2.75 G 2.75(ts)-2.75
G(ucceeds, store the pointer)-2.75 E(returned into this array)99.5 724.6
Q 5.5(.M)-.715 G(ak)-5.5 E 2.75(es)-.11 G
(ure to establish a close display handler to allo)-2.75 E 2.75(wy)-.275
G(ou to zero)-2.75 E F0(461)279.75 769 Q 0 Cg EP
%%Page: 462 467
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E/F1 11/Times-Roman@0 SF(the entry)99.5
85 Q 5.5(.D)-.715 G 2.75(ow)-5.5 G(hate)-2.75 E -.165(ve)-.275 G 2.75
(ro).165 G(ther initialization your e)-2.75 E(xtension requires.)-.165 E
(\(F)5.5 E(or e)-.165 E(xample, install)-.165 E -2.365 -.275(ev e)99.5
98 T(nt handlers and so on.\)).275 E -1.21(Yo)5.5 G
(ur initialization procedure w)1.21 E(ould normally return a pointer to)
-.11 E(the)99.5 111 Q F0(XExtCodes)3.666 E F1(structure for this e)3.666
E(xtension, which is what w)-.165 E(ould normally be found in)-.11 E
(your array of pointers.)99.5 124 Q 16.5(4. After)72 140.9 R
(returning from your initialization procedure, the stub can no)2.75 E
2.75(wc)-.275 G(ontinue normally)-2.75 E(,)-.715 E
(because it has its major opcode safely in its hand in the)99.5 153.9 Q
F0(XExtCodes)3.666 E F1(structure.)3.666 E F0(462)279.75 769 Q 0 Cg EP
%%Page: 463 468
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E/F1 12/Times-Bold@0 SF -.3(Ap)271.06
111 S(pendix D).3 E(Compatibility Functions)239.242 137 Q/F2 11
/Times-Roman@0 SF(The X V)72 183.8 Q(ersion 11 and X V)-1.221 E
(ersion 10 functions discussed in this appendix are obsolete, ha)-1.221
E .33 -.165(ve b)-.22 H(een).165 E(superseded by ne)72 196.8 Q(wer X V)
-.275 E
(ersion 11 functions, and are maintained for compatibility reasons only)
-1.221 E(.)-.715 E F0 2.75(XV)72 222.8 S
(ersion 11 Compatibility Functions)-3.85 E F2 -1.21(Yo)72 239.7 S 2.75
(uc)1.21 G(an use the X V)-2.75 E(ersion 11 compatibility functions to:)
-1.221 E 23.65<8353>72 256.6 S(et standard properties)-23.65 E 23.65
<8353>72 273.5 S(et and get windo)-23.65 E 2.75(ws)-.275 G(izing hints)
-2.75 E 23.65<8353>72 290.4 S(et and get an)-23.65 E F0
(XStandardColormap)3.666 E F2(structure)3.666 E 23.65<8350>72 307.3 S
(arse windo)-23.815 E 2.75(wg)-.275 G(eometry)-2.75 E 23.65<8347>72
324.2 S(et X en)-23.65 E(vironment def)-.44 E(aults)-.11 E F0
(Setting Standard Pr)72 350.2 Q(operties)-.198 E F2 1.76 -.88(To s)72
367.1 T(pecify a minimum set of properties describing the simplest appl\
ication, use).88 E F0(XSetStandard-)3.666 E(Pr)72 380.1 Q(operties)-.198
E F2 5.5(.T).916 G(his function has been superseded by)-5.5 E F0
(XSetWMPr)3.666 E(operties)-.198 E F2(and sets all or portions)3.666 E
(of the WM_N)72 393.1 Q(AME, WM_ICON_N)-.385 E
(AME, WM_HINTS, WM_COMMAND, and)-.385 E(WM_NORMAL_HINTS properties.)72
406.1 Q .44 LW 36 423.85 36 434.85 DL 36 421.85 36 432.85 DL 41.5 420.1
36 420.1 DL 43.5 420.1 38 420.1 DL 49 420.1 43.5 420.1 DL -1.834
(XSetStandardProperties \()72 436 R/F3 11/Times-Italic@0 SF(display).916
E F2(,)A F3(w)2.75 E F2(,)A F3(window_name)2.75 E F2(,)A F3(icon_name)
2.75 E F2(,)A F3(icon_pixmap)2.75 E F2(,)A F3(ar)2.75 E(gv)-.407 E F2(,)
A F3(ar)2.75 E(gc)-.407 E F2(,)A F3(hints)2.75 E F2(\)).916 E(Display *)
88.5 449 Q F3(display)A F2(;).916 E -.44(Wi)88.5 462 S(ndo).44 E(w)-.275
E F3(w)2.75 E F2(;).916 E(char *)88.5 475 Q F3(window_name)A F2(;).916 E
(char *)88.5 488 Q F3(icon_name)A F2(;).916 E(Pixmap)88.5 501 Q F3
(icon_pixmap)2.75 E F2(;).916 E(char **)88.5 514 Q F3(ar)A(gv)-.407 E F2
(;).916 E(int)88.5 527 Q F3(ar)2.75 E(gc)-.407 E F2(;).916 E
(XSizeHints *)88.5 540 Q F3(hints)A F2(;).916 E F3(display)72 560.8 Q F2
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F3(w)72 577.7 Q F2(Speci\214es the windo)64.663 E -.715(w.)-.275 G F3
(window_name)72 594.6 Q F2(Speci\214es the windo)8.442 E 2.75(wn)-.275 G
(ame, which should be a null-terminated string.)-2.75 E F3(icon_name)72
611.5 Q F2
(Speci\214es the icon name, which should be a null-terminated string.)
23.732 E F3(icon_pixmap)72 628.4 Q F2
(Speci\214es the bitmap that is to be used for the icon or)15.174 E F0
(None)3.666 E F2(.).916 E F3(ar)72 645.3 Q(gv)-.407 E F2
(Speci\214es the application')52.244 E 2.75(sa)-.605 G -.198(rg)-2.75 G
(ument list.).198 E F3(ar)72 662.2 Q(gc)-.407 E F2
(Speci\214es the number of ar)52.244 E(guments.)-.198 E F3(hints)72
679.1 Q F2(Speci\214es a pointer to the size hints for the windo)50.605
E 2.75(wi)-.275 G 2.75(ni)-2.75 G(ts normal state.)-2.75 E 36 674.75 36
685.75 DL 36 672.75 36 683.75 DL 41.5 684 36 684 DL 43.5 684 38 684 DL
49 684 43.5 684 DL(The)72 709 Q F0(XSetStandardPr)3.666 E(operties)-.198
E F2(function pro)3.666 E
(vides a means by which simple applications set the)-.165 E
(most essential properties with a single call.)72 722 Q F0
(XSetStandardPr)6.416 E(operties)-.198 E F2(should be used to gi)3.666 E
.33 -.165(ve a)-.275 H F0(463)279.75 769 Q 0 Cg EP
%%Page: 464 469
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E/F1 11/Times-Roman@0 SF(windo)72 85 Q
2.75(wm)-.275 G(anager some information about your program')-2.75 E 2.75
(sp)-.605 G 2.75(references. It)-2.75 F(should not be used by)2.75 E(ap\
plications that need to communicate more information than is possible w\
ith)72 98 Q F0(XSetStandard-)3.666 E(Pr)72 111 Q(operties)-.198 E F1 5.5
(.\().916 G -.88(Ty)-5.5 G(pically).88 E 2.75(,a)-.715 G -.198(rg)-2.75
G 2.75(vi).198 G 2.75(st)-2.75 G(he ar)-2.75 E
(gv array of your main program.\))-.198 E(If the strings are not in the)
5.5 E(Host Portable Character Encoding, the result is implementation-de\
pendent.)72 124 Q F0(XSetStandardPr)72.916 140.9 Q(operties)-.198 E F1
(can generate)3.666 E F0(BadAlloc)3.666 E F1(and)3.666 E F0(BadW)3.666 E
(indo)-.198 E(w)-.11 E F1(errors.)3.666 E F0(Setting and Getting W)72
166.9 Q(indo)-.198 E 2.75(wS)-.11 G(izing Hints)-2.75 E F1(Xlib pro)72
183.8 Q(vides functions that you can use to set or get windo)-.165 E
2.75(ws)-.275 G(izing hints.)-2.75 E(The functions dis-)5.5 E
(cussed in this section use the \215ags and the)72 196.8 Q F0
(XSizeHints)3.666 E F1(structure, as de\214ned in the <)3.666 E F0
(X11/Xutil.h)A F1(>)A
(header \214le and use the WM_NORMAL_HINTS property)72 209.8 Q(.)-.715 E
1.76 -.88(To s)72 239.7 T(et the size hints for a gi).88 E -.165(ve)
-.275 G 2.75(nw).165 G(indo)-2.75 E 2.75(wi)-.275 G 2.75(ni)-2.75 G
(ts normal state, use)-2.75 E F0(XSetNormalHints)3.666 E F1 5.5(.T).916
G(his function)-5.5 E(has been superseded by)72 252.7 Q F0
(XSetWMNormalHints)3.666 E F1(.).916 E .44 LW 36 270.45 36 281.45 DL 36
268.45 36 279.45 DL 41.5 266.7 36 266.7 DL 43.5 266.7 38 266.7 DL 49
266.7 43.5 266.7 DL -1.834(XSetNormalHints \()72 282.6 R/F2 11
/Times-Italic@0 SF(display).916 E F1(,)A F2(w)2.75 E F1(,)A F2(hints)
2.75 E F1(\)).916 E(Display *)88.5 295.6 Q F2(display)A F1(;).916 E -.44
(Wi)88.5 308.6 S(ndo).44 E(w)-.275 E F2(w)2.75 E F1(;).916 E
(XSizeHints *)88.5 321.6 Q F2(hints)A F1(;).916 E F2(display)72 342.4 Q
F1(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605
E F2(w)72 359.3 Q F1(Speci\214es the windo)64.663 E -.715(w.)-.275 G F2
(hints)72 376.2 Q F1
(Speci\214es a pointer to the size hints for the windo)50.605 E 2.75(wi)
-.275 G 2.75(ni)-2.75 G(ts normal state.)-2.75 E 36 371.85 36 382.85 DL
36 369.85 36 380.85 DL 41.5 381.1 36 381.1 DL 43.5 381.1 38 381.1 DL 49
381.1 43.5 381.1 DL(The)72 406.1 Q F0(XSetNormalHints)3.666 E F1
(function sets the size hints structure for the speci\214ed windo)3.666
E 4.18 -.715(w. A)-.275 H(pplica-).715 E(tions use)72 419.1 Q F0
(XSetNormalHints)3.666 E F1(to inform the windo)3.666 E 2.75(wm)-.275 G
(anager of the size or position desirable for)-2.75 E(that windo)72
432.1 Q 4.18 -.715(w. I)-.275 H 2.75(na).715 G
(ddition, an application that w)-2.75 E(ants to mo)-.11 E .33 -.165
(ve o)-.165 H 2.75(rr).165 G(esize itself should call)-2.75 E F0
(XSetNor)3.666 E(-)-.407 E(malHints)72 445.1 Q F1(and specify its ne)
3.666 E 2.75(wd)-.275 G
(esired location and size as well as making direct Xlib calls to)-2.75 E
(mo)72 458.1 Q .33 -.165(ve o)-.165 H 2.75(rr).165 G 2.75(esize. This)
-2.75 F(is because windo)2.75 E 2.75(wm)-.275 G
(anagers may ignore redirected con\214gure requests, b)-2.75 E(ut)-.22 E
(the)72 471.1 Q 2.75(yp)-.165 G(ay attention to property changes.)-2.75
E 1.76 -.88(To s)72 488 T
(et size hints, an application not only must assign v).88 E
(alues to the appropriate members in the)-.275 E(hints structure b)72
501 Q(ut also must set the \215ags member of the structure to indicate \
which information is)-.22 E(present and where it came from.)72 514 Q
2.75(Ac)5.5 G(all to)-2.75 E F0(XSetNormalHints)3.666 E F1
(is meaningless, unless the \215ags)3.666 E
(member is set to indicate which members of the structure ha)72 527 Q
.33 -.165(ve b)-.22 H(een assigned v).165 E(alues.)-.275 E F0
(XSetNormalHints)72.916 543.9 Q F1(can generate)3.666 E F0(BadAlloc)
3.666 E F1(and)3.666 E F0(BadW)3.666 E(indo)-.198 E(w)-.11 E F1(errors.)
3.666 E 1.76 -.88(To r)72 573.8 T(eturn the size hints for a windo).88 E
2.75(wi)-.275 G 2.75(ni)-2.75 G(ts normal state, use)-2.75 E F0
(XGetNormalHints)3.666 E F1 5.5(.T).916 G(his function)-5.5 E
(has been superseded by)72 586.8 Q F0(XGetWMNormalHints)3.666 E F1(.)
.916 E F0(464)279.75 769 Q 0 Cg EP
%%Page: 465 470
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E .44 LW 36 76.75 36 87.75 DL 36 74.75
36 85.75 DL 41.5 73 36 73 DL 43.5 73 38 73 DL 49 73 43.5 73 DL/F1 11
/Times-Roman@0 SF(Status XGetNormalHints)72 88.9 Q(\().916 E/F2 11
/Times-Italic@0 SF(display).916 E F1(,)A F2(w)2.75 E F1(,)A F2(hints_r)
2.75 E(eturn)-.407 E F1(\)).916 E(Display *)88.5 101.9 Q F2(display)A F1
(;).916 E -.44(Wi)88.5 114.9 S(ndo).44 E(w)-.275 E F2(w)2.75 E F1(;).916
E(XSizeHints *)88.5 127.9 Q F2(hints_r)A(eturn)-.407 E F1(;).916 E F2
(display)72 148.7 Q F1(Speci\214es the connection to the X serv)40.221 E
(er)-.165 E(.)-.605 E F2(w)72 165.6 Q F1(Speci\214es the windo)64.663 E
-.715(w.)-.275 G F2(hints_r)72 182.5 Q(eturn)-.407 E F1
(Returns the size hints for the windo)18.012 E 2.75(wi)-.275 G 2.75(ni)
-2.75 G(ts normal state.)-2.75 E 36 178.15 36 189.15 DL 36 176.15 36
187.15 DL 41.5 187.4 36 187.4 DL 43.5 187.4 38 187.4 DL 49 187.4 43.5
187.4 DL(The)72 212.4 Q F0(XGetNormalHints)3.666 E F1
(function returns the size hints for a windo)3.666 E 2.75(wi)-.275 G
2.75(ni)-2.75 G(ts normal state.)-2.75 E(It)5.5 E(returns a nonzero sta\
tus if it succeeds or zero if the application speci\214ed no normal siz\
e hints for)72 225.4 Q(this windo)72 238.4 Q -.715(w.)-.275 G F0
(XGetNormalHints)72.916 255.3 Q F1(can generate a)3.666 E F0(BadW)3.666
E(indo)-.198 E(w)-.11 E F1(error)3.666 E(.)-.605 E(The ne)72 285.2 Q
(xt tw)-.165 E 2.75(of)-.11 G
(unctions set and read the WM_ZOOM_HINTS property)-2.75 E(.)-.715 E 1.76
-.88(To s)72 302.1 T(et the zoom hints for a windo).88 E 1.43 -.715
(w, u)-.275 H(se).715 E F0(XSetZoomHints)3.666 E F1 5.5(.T).916 G
(his function is no longer supported)-5.5 E(by the)72 315.1 Q F2(Inter)
2.75 E(-Client Communication Con)-.22 E(ventions Manual)-.44 E F1(.)A 36
332.85 36 343.85 DL 36 330.85 36 341.85 DL 41.5 329.1 36 329.1 DL 43.5
329.1 38 329.1 DL 49 329.1 43.5 329.1 DL -1.834(XSetZoomHints \()72 345
R F2(display).916 E F1(,)A F2(w)2.75 E F1(,)A F2(zhints)2.75 E F1(\))
.916 E(Display *)88.5 358 Q F2(display)A F1(;).916 E -.44(Wi)88.5 371 S
(ndo).44 E(w)-.275 E F2(w)2.75 E F1(;).916 E(XSizeHints *)88.5 384 Q F2
(zhints)A F1(;).916 E F2(display)72 404.8 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2(w)72 421.7 Q F1(Speci\214es the windo)64.663 E -.715(w.)-.275 G F2
(zhints)72 438.6 Q F1(Speci\214es a pointer to the zoom hints.)46.326 E
36 434.25 36 445.25 DL 36 432.25 36 443.25 DL 41.5 443.5 36 443.5 DL
43.5 443.5 38 443.5 DL 49 443.5 43.5 443.5 DL(Man)72 468.5 Q 2.75(yw)
-.165 G(indo)-2.75 E 2.75(wm)-.275 G(anagers think of windo)-2.75 E
(ws in one of three states: iconic, normal, or zoomed.)-.275 E(The)5.5 E
F0(XSetZoomHints)72.916 481.5 Q F1(function pro)3.666 E(vides the windo)
-.165 E 2.75(wm)-.275 G(anager with information for the windo)-2.75 E
2.75(wi)-.275 G 2.75(nt)-2.75 G(he)-2.75 E(zoomed state.)72 494.5 Q F0
(XSetZoomHints)72.916 511.4 Q F1(can generate)3.666 E F0(BadAlloc)3.666
E F1(and)3.666 E F0(BadW)3.666 E(indo)-.198 E(w)-.11 E F1(errors.)3.666
E 1.76 -.88(To r)72 541.3 T(ead the zoom hints for a windo).88 E 1.43
-.715(w, u)-.275 H(se).715 E F0(XGetZoomHints)3.666 E F1 5.5(.T).916 G
(his function is no longer supported)-5.5 E(by the)72 554.3 Q F2(Inter)
2.75 E(-Client Communication Con)-.22 E(ventions Manual)-.44 E F1(.)A 36
572.05 36 583.05 DL 36 570.05 36 581.05 DL 41.5 568.3 36 568.3 DL 43.5
568.3 38 568.3 DL 49 568.3 43.5 568.3 DL(Status XGetZoomHints)72 584.2 Q
(\().916 E F2(display).916 E F1(,)A F2(w)2.75 E F1(,)A F2(zhints_r)2.75
E(eturn)-.407 E F1(\)).916 E(Display *)88.5 597.2 Q F2(display)A F1(;)
.916 E -.44(Wi)88.5 610.2 S(ndo).44 E(w)-.275 E F2(w)2.75 E F1(;).916 E
(XSizeHints *)88.5 623.2 Q F2(zhints_r)A(eturn)-.407 E F1(;).916 E F2
(display)72 644 Q F1(Speci\214es the connection to the X serv)40.221 E
(er)-.165 E(.)-.605 E F2(w)72 660.9 Q F1(Speci\214es the windo)64.663 E
-.715(w.)-.275 G F2(zhints_r)72 677.8 Q(eturn)-.407 E F1
(Returns the zoom hints.)13.733 E 36 673.45 36 684.45 DL 36 671.45 36
682.45 DL 41.5 682.7 36 682.7 DL 43.5 682.7 38 682.7 DL 49 682.7 43.5
682.7 DL(The)72 707.7 Q F0(XGetZoomHints)3.666 E F1
(function returns the size hints for a windo)3.666 E 2.75(wi)-.275 G
2.75(ni)-2.75 G(ts zoomed state.)-2.75 E(It returns)5.5 E 2.75(an)72
720.7 S(onzero status if it succeeds or zero if the application speci\
\214ed no zoom size hints for this)-2.75 E F0(465)279.75 769 Q 0 Cg EP
%%Page: 466 471
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E/F1 11/Times-Roman@0 SF(windo)72 85 Q
-.715(w.)-.275 G F0(XGetZoomHints)72.916 101.9 Q F1(can generate a)3.666
E F0(BadW)3.666 E(indo)-.198 E(w)-.11 E F1(error)3.666 E(.)-.605 E 1.76
-.88(To s)72 131.8 T(et the v).88 E(alue of an)-.275 E 2.75(yp)-.165 G
(roperty of type WM_SIZE_HINTS, use)-2.75 E F0(XSetSizeHints)3.666 E F1
5.5(.T).916 G(his function)-5.5 E(has been superseded by)72 144.8 Q F0
(XSetWMSizeHints)3.666 E F1(.).916 E .44 LW 36 162.55 36 173.55 DL 36
160.55 36 171.55 DL 41.5 158.8 36 158.8 DL 43.5 158.8 38 158.8 DL 49
158.8 43.5 158.8 DL -1.834(XSetSizeHints \()72 174.7 R/F2 11
/Times-Italic@0 SF(display).916 E F1(,)A F2(w)2.75 E F1(,)A F2(hints)
2.75 E F1(,)A F2(pr)2.75 E(operty)-.495 E F1(\)).916 E(Display *)88.5
187.7 Q F2(display)A F1(;).916 E -.44(Wi)88.5 200.7 S(ndo).44 E(w)-.275
E F2(w)2.75 E F1(;).916 E(XSizeHints *)88.5 213.7 Q F2(hints)A F1(;).916
E(Atom)88.5 226.7 Q F2(pr)2.75 E(operty)-.495 E F1(;).916 E F2(display)
72 247.5 Q F1(Speci\214es the connection to the X serv)40.221 E(er)-.165
E(.)-.605 E F2(w)72 264.4 Q F1(Speci\214es the windo)64.663 E -.715(w.)
-.275 G F2(hints)72 281.3 Q F1(Speci\214es a pointer to the size hints.)
50.605 E F2(pr)72 298.2 Q(operty)-.495 E F1
(Speci\214es the property name.)34.611 E 36 293.85 36 304.85 DL 36
291.85 36 302.85 DL 41.5 303.1 36 303.1 DL 43.5 303.1 38 303.1 DL 49
303.1 43.5 303.1 DL(The)72 328.1 Q F0(XSetSizeHints)3.666 E F1
(function sets the)3.666 E F0(XSizeHints)3.666 E F1
(structure for the named property and the speci-)3.666 E(\214ed windo)72
341.1 Q 4.18 -.715(w. T)-.275 H(his is used by).715 E F0
(XSetNormalHints)3.666 E F1(and)3.666 E F0(XSetZoomHints)3.666 E F1
(and can be used to set the)3.666 E -.275(va)72 354.1 S(lue of an).275 E
2.75(yp)-.165 G(roperty of type WM_SIZE_HINTS.)-2.75 E
(Thus, it may be useful if other properties of)5.5 E
(that type get de\214ned.)72 367.1 Q F0(XSetSizeHints)72.916 384 Q F1
(can generate)3.666 E F0(BadAlloc)3.666 E F1(,).916 E F0(BadAtom)3.666 E
F1 2.75(,a).916 G(nd)-2.75 E F0(BadW)3.666 E(indo)-.198 E(w)-.11 E F1
(errors.)3.666 E 1.76 -.88(To r)72 413.9 T(ead the v).88 E(alue of an)
-.275 E 2.75(yp)-.165 G(roperty of type WM_SIZE_HINTS, use)-2.75 E F0
(XGetSizeHints)3.666 E F1 5.5(.T).916 G(his function)-5.5 E
(has been superseded by)72 426.9 Q F0(XGetWMSizeHints)3.666 E F1(.).916
E 36 444.65 36 455.65 DL 36 442.65 36 453.65 DL 41.5 440.9 36 440.9 DL
43.5 440.9 38 440.9 DL 49 440.9 43.5 440.9 DL(Status XGetSizeHints)72
456.8 Q(\().916 E F2(display).916 E F1(,)A F2(w)2.75 E F1(,)A F2
(hints_r)2.75 E(eturn)-.407 E F1(,)A F2(pr)2.75 E(operty)-.495 E F1(\))
.916 E(Display *)88.5 469.8 Q F2(display)A F1(;).916 E -.44(Wi)88.5
482.8 S(ndo).44 E(w)-.275 E F2(w)2.75 E F1(;).916 E(XSizeHints *)88.5
495.8 Q F2(hints_r)A(eturn)-.407 E F1(;).916 E(Atom)88.5 508.8 Q F2(pr)
2.75 E(operty)-.495 E F1(;).916 E F2(display)72 529.6 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2(w)72 546.5 Q F1(Speci\214es the windo)64.663 E -.715(w.)-.275 G F2
(hints_r)72 563.4 Q(eturn)-.407 E F1(Returns the size hints.)18.012 E F2
(pr)72 580.3 Q(operty)-.495 E F1(Speci\214es the property name.)34.611 E
36 575.95 36 586.95 DL 36 573.95 36 584.95 DL 41.5 585.2 36 585.2 DL
43.5 585.2 38 585.2 DL 49 585.2 43.5 585.2 DL(The)72 610.2 Q F0
(XGetSizeHints)3.666 E F1(function returns the)3.666 E F0(XSizeHints)
3.666 E F1(structure for the named property and the)3.666 E
(speci\214ed windo)72 623.2 Q 4.18 -.715(w. T)-.275 H(his is used by)
.715 E F0(XGetNormalHints)3.666 E F1(and)3.666 E F0(XGetZoomHints)3.666
E F1 5.5(.I).916 G 2.75(ta)-5.5 G(lso can be)-2.75 E(used to retrie)72
636.2 Q .33 -.165(ve t)-.275 H(he v).165 E(alue of an)-.275 E 2.75(yp)
-.165 G(roperty of type WM_SIZE_HINTS.)-2.75 E
(Thus, it may be useful if)5.5 E
(other properties of that type get de\214ned.)72 649.2 Q F0
(XGetSizeHints)6.416 E F1(returns a nonzero status if a size hint)3.666
E -.11(wa)72 662.2 S 2.75(sd).11 G(e\214ned or zero otherwise.)-2.75 E
F0(XGetSizeHints)72.916 679.1 Q F1(can generate)3.666 E F0(BadAtom)3.666
E F1(and)3.666 E F0(BadW)3.666 E(indo)-.198 E(w)-.11 E F1(errors.)3.666
E F0(466)279.75 769 Q 0 Cg EP
%%Page: 467 472
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E
(Getting and Setting an XStandardColormap Structur)72 85 Q(e)-.198 E/F1
11/Times-Roman@0 SF 1.76 -.88(To g)72 101.9 T(et the).88 E F0
(XStandardColormap)3.666 E F1
(structure associated with one of the described atoms, use)3.666 E F0
(XGetStandardColormap)72.916 114.9 Q F1 5.5(.T).916 G
(his function has been superseded by)-5.5 E F0(XGetRGBColormap)3.666 E
F1(.).916 E .44 LW 36 132.65 36 143.65 DL 36 130.65 36 141.65 DL 41.5
128.9 36 128.9 DL 43.5 128.9 38 128.9 DL 49 128.9 43.5 128.9 DL
(Status XGetStandardColormap\()72 144.8 Q/F2 11/Times-Italic@0 SF
(display).916 E F1(,)A F2(w)2.75 E F1(,)A F2(colormap_r)2.75 E(eturn)
-.407 E F1(,)A F2(pr)2.75 E(operty)-.495 E F1(\)).916 E(Display *)88.5
157.8 Q F2(display)A F1(;).916 E -.44(Wi)88.5 170.8 S(ndo).44 E(w)-.275
E F2(w)2.75 E F1(;).916 E(XStandardColormap *)88.5 183.8 Q F2
(colormap_r)A(eturn)-.407 E F1(;).916 E(Atom)88.5 196.8 Q F2(pr)2.75 E
(operty)-.495 E F1 130.329(;/).916 G 2.75(*R)-130.329 G(GB_BEST_MAP)
-2.75 E 2.75(,e)-1.221 G(tc. */)-2.75 E F2(display)72 217.6 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2(w)72 234.5 Q F1(Speci\214es the windo)64.663 E -.715(w.)-.275 G F2
(colormap_r)72 251.4 Q(eturn)-.407 E F1
(Returns the colormap associated with the speci\214ed atom.)144 264.4 Q
F2(pr)72 281.3 Q(operty)-.495 E F1(Speci\214es the property name.)34.611
E 36 276.95 36 287.95 DL 36 274.95 36 285.95 DL 41.5 286.2 36 286.2 DL
43.5 286.2 38 286.2 DL 49 286.2 43.5 286.2 DL(The)72 311.2 Q F0
(XGetStandardColormap)3.666 E F1
(function returns the colormap de\214nition associated with the atom)
3.666 E(supplied as the property ar)72 324.2 Q(gument.)-.198 E F0
(XGetStandardColormap)6.416 E F1(returns a nonzero status if suc-)3.666
E(cessful and zero otherwise.)72 337.2 Q -.165(Fo)5.5 G 2.75(re).165 G
(xample, to fetch the standard)-2.915 E F0(GrayScale)3.666 E F1
(colormap for a dis-)3.666 E(play)72 350.2 Q 2.75(,y)-.715 G(ou use)
-2.75 E F0(XGetStandardColormap)3.666 E F1(with the follo)3.666 E
(wing syntax:)-.275 E 36 371.85 36 382.85 DL 36 369.85 36 380.85 DL 41.5
368.1 36 368.1 DL 43.5 368.1 38 368.1 DL 49 368.1 43.5 368.1 DL
(XGetStandardColormap\(dp)72 386.6 Q 1.43 -.715(y, D)-.11 H(ef).715 E
(aultRootW)-.11 E(indo)-.44 E(w\(dp)-.275 E(y\), &cmap, XA_RGB_GRA)-.11
E(Y_MAP\);)-1.155 E 36 388.75 36 399.75 DL 36 386.75 36 397.75 DL 41.5
398 36 398 DL 43.5 398 38 398 DL 49 398 43.5 398 DL
(See section 14.3 for the semantics of standard colormaps.)72 423 Q F0
(XGetStandardColormap)72.916 439.9 Q F1(can generate)3.666 E F0(BadAtom)
3.666 E F1(and)3.666 E F0(BadW)3.666 E(indo)-.198 E(w)-.11 E F1(errors.)
3.666 E 1.76 -.88(To s)72 469.8 T(et a standard colormap, use).88 E F0
(XSetStandardColormap)3.666 E F1 5.5(.T).916 G
(his function has been superseded by)-5.5 E F0(XSetRGBColormap)72.916
482.8 Q F1(.).916 E 36 500.55 36 511.55 DL 36 498.55 36 509.55 DL 41.5
496.8 36 496.8 DL 43.5 496.8 38 496.8 DL 49 496.8 43.5 496.8 DL
(XSetStandardColormap\()72 512.7 Q F2(display).916 E F1(,)A F2(w)2.75 E
F1(,)A F2(colormap)2.75 E F1(,)A F2(pr)2.75 E(operty)-.495 E F1(\)).916
E(Display *)88.5 525.7 Q F2(display)A F1(;).916 E -.44(Wi)88.5 538.7 S
(ndo).44 E(w)-.275 E F2(w)2.75 E F1(;).916 E(XStandardColormap *)88.5
551.7 Q F2(colormap)A F1(;).916 E(Atom)88.5 564.7 Q F2(pr)2.75 E(operty)
-.495 E F1 130.329(;/).916 G 2.75(*R)-130.329 G(GB_BEST_MAP)-2.75 E 2.75
(,e)-1.221 G(tc. */)-2.75 E F2(display)72 585.5 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2(w)72 602.4 Q F1(Speci\214es the windo)64.663 E -.715(w.)-.275 G F2
(colormap)72 619.3 Q F1(Speci\214es the colormap.)29.837 E F2(pr)72
636.2 Q(operty)-.495 E F1(Speci\214es the property name.)34.611 E 36
631.85 36 642.85 DL 36 629.85 36 640.85 DL 41.5 641.1 36 641.1 DL 43.5
641.1 38 641.1 DL 49 641.1 43.5 641.1 DL(The)72 666.1 Q F0
(XSetStandardColormap)3.666 E F1(function usually is only used by windo)
3.666 E 2.75(wo)-.275 G 2.75(rs)-2.75 G(ession managers.)-2.75 E F0
(XSetStandardColormap)72.916 683 Q F1(can generate)3.666 E F0(BadAlloc)
3.666 E F1(,).916 E F0(BadAtom)3.666 E F1(,).916 E F0(BadDrawable)3.666
E F1 2.75(,a).916 G(nd)-2.75 E F0(BadW)3.666 E(indo)-.198 E(w)-.11 E F1
(errors.)72 696 Q F0(467)279.75 769 Q 0 Cg EP
%%Page: 468 473
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E -.11(Pa)72 85 S(rsing W).11 E(indo)
-.198 E 2.75(wG)-.11 G(eometry)-2.75 E/F1 11/Times-Roman@0 SF 1.76 -.88
(To p)72 101.9 T(arse windo).88 E 2.75(wg)-.275 G(eometry gi)-2.75 E
-.165(ve)-.275 G 2.75(nau).165 G(ser)-2.75 E
(-speci\214ed position and a def)-.22 E(ault position, use)-.11 E F0
(XGeome-)3.666 E(try)72 114.9 Q F1 5.5(.T).916 G
(his function has been superseded by)-5.5 E F0(XWMGeometry)3.666 E F1(.)
.916 E .44 LW 36 132.65 36 143.65 DL 36 130.65 36 141.65 DL 41.5 128.9
36 128.9 DL 43.5 128.9 38 128.9 DL 49 128.9 43.5 128.9 DL(int XGeometry)
72 144.8 Q(\().916 E/F2 11/Times-Italic@0 SF(display).916 E F1(,)A F2
(scr)2.75 E(een)-.407 E F1(,)A F2(position)2.75 E F1(,).916 E F2
(default_position)2.75 E F1(,).916 E F2(bwidth)2.75 E F1(,).916 E F2
(fwidth)2.75 E F1(,).916 E F2(fheight)2.75 E F1(,).916 E F2(xadder)2.75
E F1(,).916 E F2(yadder)121.5 157.8 Q F1(,).916 E F2(x_r)2.75 E(eturn)
-.407 E F1(,).916 E F2(y_r)2.75 E(eturn)-.407 E F1(,).916 E F2(width_r)
2.75 E(eturn)-.407 E F1(,).916 E F2(height_r)2.75 E(eturn)-.407 E F1(\))
.916 E(Display *)88.5 170.8 Q F2(display)A F1(;).916 E(int)88.5 183.8 Q
F2(scr)2.75 E(een)-.407 E F1(;).916 E(char *)88.5 196.8 Q F2(position)A
F1 2.75(,*).916 G F2(default_position)-2.75 E F1(;).916 E(unsigned int)
88.5 209.8 Q F2(bwidth)2.75 E F1(;).916 E(unsigned int)88.5 222.8 Q F2
(fwidth)2.75 E F1(,).916 E F2(fheight)2.75 E F1(;).916 E(int)88.5 235.8
Q F2(xadder)2.75 E F1(,).916 E F2(yadder)2.75 E F1(;).916 E(int *)88.5
248.8 Q F2(x_r)A(eturn)-.407 E F1 2.75(,*).916 G F2(y_r)-2.75 E(eturn)
-.407 E F1(;).916 E(int *)88.5 261.8 Q F2(width_r)A(eturn)-.407 E F1
2.75(,*).916 G F2(height_r)-2.75 E(eturn)-.407 E F1(;).916 E F2(display)
72 282.6 Q F1(Speci\214es the connection to the X serv)40.221 E(er)-.165
E(.)-.605 E F2(scr)72 299.5 Q(een)-.407 E F1(Speci\214es the screen.)
43.697 E F2(position)72 316.4 Q(default_position)72 329.4 Q F1
(Specify the geometry speci\214cations.)144 342.4 Q F2(bwidth)72 359.3 Q
F1(Speci\214es the border width.)42.047 E F2(fheight)72 376.2 Q(fwidth)
72 389.2 Q F1(Specify the font height and width in pix)44.489 E
(els \(increment size\).)-.165 E F2(xadder)72 406.1 Q(yadder)72 419.1 Q
F1(Specify additional interior padding needed in the windo)41.453 E
-.715(w.)-.275 G F2(x_r)72 436 Q(eturn)-.407 E(y_r)72 449 Q(eturn)-.407
E F1(Return the x and y of)34.523 E(fsets.)-.275 E F2(width_r)72 465.9 Q
(eturn)-.407 E(height_r)72 478.9 Q(eturn)-.407 E F1
(Return the width and height determined.)11.907 E 36 474.55 36 485.55 DL
36 472.55 36 483.55 DL 41.5 483.8 36 483.8 DL 43.5 483.8 38 483.8 DL 49
483.8 43.5 483.8 DL -1.21(Yo)72 508.8 S 2.75(up)1.21 G(ass in the borde\
r width \(bwidth\), size of the increments fwidth and fheight \(typical\
ly font)-2.75 E(width and height\), and an)72 521.8 Q 2.75(ya)-.165 G
(dditional interior space \(xadder and yadder\) to mak)-2.75 E 2.75(ei)
-.11 G 2.75(te)-2.75 G(asy to com-)-2.75 E(pute the resulting size.)72
534.8 Q(The)5.5 E F0(XGeometry)3.666 E F1
(function returns the position the windo)3.666 E 2.75(ws)-.275 G
(hould be)-2.75 E(placed gi)72 547.8 Q -.165(ve)-.275 G 2.75(nap).165 G
(osition and a def)-2.75 E(ault position.)-.11 E F0(XGeometry)6.416 E F1
(determines the placement of a win-)3.666 E(do)72 560.8 Q 2.75(wu)-.275
G(sing a geometry speci\214cation as speci\214ed by)-2.75 E F0(XP)3.666
E(arseGeometry)-.11 E F1(and the additional informa-)3.666 E
(tion about the windo)72 573.8 Q 4.18 -.715(w. G)-.275 H -2.365 -.275
(iv e).715 H 2.75(naf).275 G(ully quali\214ed def)-2.75 E
(ault geometry speci\214cation and an incomplete)-.11 E
(geometry speci\214cation,)72 586.8 Q F0(XP)3.666 E(arseGeometry)-.11 E
F1(returns a bitmask v)3.666 E(alue as de\214ned abo)-.275 E .33 -.165
(ve i)-.165 H 2.75(nt).165 G(he)-2.75 E F0(XP)72.916 599.8 Q
(arseGeometry)-.11 E F1(call, by using the position ar)3.666 E(gument.)
-.198 E(The returned width and height will be the width and height spec\
i\214ed by def)72 616.7 Q(ault_position as o)-.11 E -.165(ve)-.165 G
-.22(r-).165 G(ridden by an)72 629.7 Q 2.75(yu)-.165 G(ser)-2.75 E
(-speci\214ed position.)-.22 E(The)5.5 E 2.75(ya)-.165 G(re not af)-2.75
E(fected by fwidth, fheight, xadder)-.275 E 2.75(,o)-.44 G 2.75(ry)-2.75
G(adder)-2.75 E(.)-.605 E(The x and y coordinates are computed by using\
 the border width, the screen width and height,)72 642.7 Q
(padding as speci\214ed by xadder and yadder)72 655.7 Q 2.75(,a)-.44 G
(nd the fheight and fwidth times the width and height)-2.75 E
(from the geometry speci\214cations.)72 668.7 Q F0(Getting the X En)72
694.7 Q(vir)-.44 E(onment Defaults)-.198 E F1(The)72 711.6 Q F0
(XGetDefault)3.666 E F1(function pro)3.666 E(vides a primiti)-.165 E .33
-.165(ve i)-.275 H(nterf).165 E(ace to the resource manager f)-.11 E
(acilities dis-)-.11 E(cussed in chapter 15.)72 724.6 Q
(It is only useful in v)5.5 E(ery simple applications.)-.165 E F0(468)
279.75 769 Q 0 Cg EP
%%Page: 469 474
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E .44 LW 36 76.75 36 87.75 DL 36 74.75
36 85.75 DL 41.5 73 36 73 DL 43.5 73 38 73 DL 49 73 43.5 73 DL/F1 11
/Times-Roman@0 SF(char *XGetDef)72 88.9 Q -1.834(ault \()-.11 F/F2 11
/Times-Italic@0 SF(display).916 E F1(,)A F2(pr)2.75 E -.11(og)-.495 G
-.165(ra).11 G(m).165 E F1(,).916 E F2(option)2.75 E F1(\)).916 E
(Display *)88.5 101.9 Q F2(display)A F1(;).916 E(char *)88.5 114.9 Q F2
(pr)A -.11(og)-.495 G -.165(ra).11 G(m).165 E F1(;).916 E(char *)88.5
127.9 Q F2(option)A F1(;).916 E F2(display)72 148.7 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2(pr)72 165.6 Q -.11(og)-.495 G -.165(ra).11 G(m).165 E F1
(Speci\214es the program name for the Xlib def)34.27 E
(aults \(usually ar)-.11 E(gv[0] of the main)-.198 E(program\).)144
178.6 Q F2(option)72 195.5 Q F1(Speci\214es the option name.)43.884 E 36
191.15 36 202.15 DL 36 189.15 36 200.15 DL 41.5 200.4 36 200.4 DL 43.5
200.4 38 200.4 DL 49 200.4 43.5 200.4 DL(The)72 225.4 Q F0(XGetDefault)
3.666 E F1(function returns the v)3.666 E(alue of the resource)-.275 E
F2(pr)2.75 E -.11(og)-.495 G F1(.).11 E F2(option)A F1 2.75(,w)C(here)
-2.75 E F2(pr)2.75 E -.11(og)-.495 G F1(is the pro-)2.86 E(gram ar)72
238.4 Q(gument with the directory pre\214x remo)-.198 E -.165(ve)-.165 G
2.75(da).165 G(nd)-2.75 E F2(option)2.75 E F1
(must be a single component.)2.75 E(Note)5.5 E(that multile)72 251.4 Q
-.165(ve)-.275 G 2.75(lr).165 G(esources cannot be used with)-2.75 E F0
(XGetDefault)3.666 E F1 5.5(.T).916 G(he class "Program.Name" is)-5.5 E
(al)72 264.4 Q -.11(wa)-.11 G(ys used for the resource lookup.).11 E
(If the speci\214ed option name does not e)5.5 E(xist for this program,)
-.165 E F0(XGetDefault)72.916 277.4 Q F1(returns NULL.)3.666 E
(The strings returned by)5.5 E F0(XGetDefault)3.666 E F1(are o)3.666 E
(wned by Xlib and)-.275 E
(should not be modi\214ed or freed by the client.)72 290.4 Q
(If a database has been set with)72 307.3 Q F0(XrmSetDatabase)3.666 E F1
2.75(,t).916 G(hat database is used for the lookup.)-2.75 E(Other)5.5 E
(-)-.22 E(wise, a database is created and is set in the display \(as if\
 by calling)72 320.3 Q F0(XrmSetDatabase)3.666 E F1 2.75(\). The).916 F
(data-)2.75 E(base is created in the current locale.)72 333.3 Q 1.76
-.88(To c)5.5 H(reate a database,).88 E F0(XGetDefault)3.666 E F1
(uses resources from the)3.666 E(RESOURCE_MAN)72 346.3 Q -.44(AG)-.385 G
(ER property on the root windo).44 E 2.75(wo)-.275 G 2.75(fs)-2.75 G
(creen zero.)-2.75 E(If no such property)5.5 E -.165(ex)72 359.3 S
(ists, a resource \214le in the user').165 E 2.75(sh)-.605 G
(ome directory is used.)-2.75 E(On a POSIX-conformant system, this)5.5 E
(\214le is)72 372.3 Q F0($HOME/.Xdefaults)3.666 E F1 5.5(.A).916 G
(fter loading these def)-5.5 E(aults,)-.11 E F0(XGetDefault)3.666 E F1
(mer)3.666 E(ges additional)-.198 E(def)72 385.3 Q
(aults speci\214ed by the XENVIR)-.11 E(ONMENT en)-.44 E(vironment v)
-.44 E 2.75(ariable. If)-.275 F(XENVIR)2.75 E(ONMENT is)-.44 E(de\214ne\
d, it contains a full path name for the additional resource \214le.)72
398.3 Q(If XENVIR)5.5 E(ONMENT is not)-.44 E(de\214ned,)72 411.3 Q F0
(XGetDefault)3.666 E F1(looks for)3.666 E F0($HOME/.Xdefaults-)3.666 E
F2(name)A F1 2.75(,w).916 G(here)-2.75 E F2(name)2.75 E F1
(speci\214es the name of)2.75 E
(the machine on which the application is running.)72 424.3 Q F0 2.75(XV)
72 450.3 S(ersion 10 Compatibility Functions)-3.85 E F1 -1.21(Yo)72
467.2 S 2.75(uc)1.21 G(an use the X V)-2.75 E
(ersion 10 compatibility functions to:)-1.221 E 23.65<8344>72 484.1 S
(ra)-23.65 E 2.75(wa)-.165 G(nd \214ll polygons and curv)-2.75 E(es)
-.165 E 23.65<8341>72 501 S(ssociate user data with a v)-23.65 E(alue)
-.275 E F0(Drawing and Filling P)72 527 Q(olygons and Cur)-.22 E -.11
(ve)-.11 G(s).11 E F1(Xlib pro)72 543.9 Q
(vides functions that you can use to dra)-.165 E 2.75(wo)-.165 G 2.75
<728c>-2.75 G(ll arbitrary polygons or curv)-2.75 E 2.75(es. These)-.165
F(func-)2.75 E(tions are pro)72 556.9 Q
(vided mainly for compatibility with X V)-.165 E(ersion 10 and ha)-1.221
E .33 -.165(ve n)-.22 H 2.75(os).165 G(erv)-2.75 E(er support.)-.165 E
(That)5.5 E(is, the)72 569.9 Q 2.75(yc)-.165 G
(all other Xlib functions, not the serv)-2.75 E(er directly)-.165 E 5.5
(.T)-.715 G(hus, if you just ha)-5.5 E .33 -.165(ve s)-.22 H
(traight lines to).165 E(dra)72 582.9 Q 1.43 -.715(w, u)-.165 H(sing)
.715 E F0(XDrawLines)3.666 E F1(or)3.666 E F0(XDrawSegments)3.666 E F1
(is much f)3.666 E(aster)-.11 E(.)-.605 E
(The functions discussed here pro)72 599.8 Q
(vide all the functionality of the X V)-.165 E(ersion 10 functions)
-1.221 E F0(XDraw)3.666 E F1(,).916 E F0(XDrawFilled)72.916 612.8 Q F1
(,).916 E F0(XDrawP)3.666 E(atter)-.11 E(ned)-.165 E F1(,).916 E F0
(XDrawDashed)3.666 E F1 2.75(,a).916 G(nd)-2.75 E F0(XDrawT)3.666 E
(iled)-.198 E F1 5.5(.T).916 G(he)-5.5 E 2.75(ya)-.165 G
(re as compatible)-2.75 E(as possible gi)72 625.8 Q -.165(ve)-.275 G
2.75(nXV).165 G(ersion 11')-3.971 E 2.75(sn)-.605 G .55 -.275(ew l)-2.75
H(ine-dra).275 E(wing functions.)-.165 E(One thing to note, ho)5.5 E(we)
-.275 E -.165(ve)-.275 G .88 -.44(r, i).165 H 2.75(st).44 G(hat)-2.75 E
F0 -1.1(Ve)72.916 638.8 S(rtexDrawLastP)1.1 E(oint)-.22 E F1
(is no longer supported.)3.666 E
(Also, the error status returned is the opposite of)5.5 E(what it w)72
651.8 Q(as under X V)-.11 E(ersion 10 \(this is the X V)-1.221 E
(ersion 11 standard error status\).)-1.221 E F0(XA)6.416 E(ppendV)-.275
E(ertex)-1.1 E F1(and)72 664.8 Q F0(XClearV)3.666 E(ertexFlag)-1.1 E F1
(from X V)3.666 E(ersion 10 also are not supported.)-1.221 E(Just ho)72
681.7 Q 2.75(wt)-.275 G(he graphics conte)-2.75 E(xt you use is set up \
actually determines whether you get dashes or not,)-.165 E(and so on.)72
694.7 Q(Lines are properly joined if the)5.5 E 2.75(yc)-.165 G
(onnect and include the closing of a closed \214gure)-2.75 E(\(see)72
707.7 Q F0(XDrawLines)3.666 E F1 2.75(\). The).916 F
(functions discussed here f)2.75 E(ail \(return zero\) only if the)-.11
E 2.75(yr)-.165 G(un out of mem-)-2.75 E(ory or are passed a)72 720.7 Q
F0 -1.1(Ve)3.666 G(rtex)1.1 E F1(list that has a)3.666 E F0 -1.1(Ve)
3.666 G(rtex)1.1 E F1(with)3.666 E F0 -1.1(Ve)3.666 G(rtexStartClosed)
1.1 E F1(set that is not follo)3.666 E(wed)-.275 E F0(469)279.75 769 Q 0
Cg EP
%%Page: 470 475
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E/F1 11/Times-Roman@0 SF(by a)72 85 Q F0
-1.1(Ve)3.666 G(rtex)1.1 E F1(with)3.666 E F0 -1.1(Ve)3.666 G
(rtexEndClosed)1.1 E F1(set.)3.666 E 1.76 -.88(To a)72 114.9 T(chie).88
E .33 -.165(ve t)-.275 H(he ef).165 E(fects of the X V)-.275 E
(ersion 10)-1.221 E F0(XDraw)3.666 E F1(,).916 E F0(XDrawDashed)3.666 E
F1 2.75(,a).916 G(nd)-2.75 E F0(XDrawP)3.666 E(atter)-.11 E(ned)-.165 E
F1 2.75(,u).916 G(se)-2.75 E F0(XDraw)72.916 127.9 Q F1(.).916 E .44 LW
36 145.65 36 156.65 DL 36 143.65 36 154.65 DL 41.5 141.9 36 141.9 DL
43.5 141.9 38 141.9 DL 49 141.9 43.5 141.9 DL(#include <X11/X10.h>)72
157.8 Q(Status XDra)72 183.8 Q(w\()-.165 E/F2 11/Times-Italic@0 SF
(display).916 E F1(,)A F2(d)2.75 E F1(,)A F2(gc)2.75 E F1(,)A F2(vlist)
2.75 E F1(,)A F2(vcount)2.75 E F1(\)).916 E(Display *)108 196.8 Q F2
(display)A F1(;).916 E(Dra)108 209.8 Q -.11(wa)-.165 G(ble).11 E F2(d)
2.75 E F1(;).916 E(GC)108 222.8 Q F2(gc)2.75 E F1(;).916 E -1.221(Ve)108
235.8 S(rte)1.221 E 2.75(x*)-.165 G F2(vlist)-2.75 E F1(;).916 E(int)108
248.8 Q F2(vcount)2.75 E F1(;).916 E F2(display)72 269.6 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2(d)72 286.5 Q F1(Speci\214es the dra)66.5 E -.11(wa)-.165 G(ble.).11 E
F2(gc)72 303.4 Q F1(Speci\214es the GC.)61.616 E F2(vlist)72 320.3 Q F1
(Speci\214es a pointer to the list of v)53.663 E
(ertices that indicate what to dra)-.165 E -.715(w.)-.165 G F2(vcount)72
337.2 Q F1(Speci\214es ho)42.674 E 2.75(wm)-.275 G(an)-2.75 E 2.75(yv)
-.165 G(ertices are in vlist.)-2.915 E 36 332.85 36 343.85 DL 36 330.85
36 341.85 DL 41.5 342.1 36 342.1 DL 43.5 342.1 38 342.1 DL 49 342.1 43.5
342.1 DL(The)72 367.1 Q F0(XDraw)3.666 E F1(function dra)3.666 E
(ws an arbitrary polygon or curv)-.165 E 2.75(e. The)-.165 F
(\214gure dra)2.75 E(wn is de\214ned by the)-.165 E
(speci\214ed list of v)72 380.1 Q(ertices \(vlist\).)-.165 E
(The points are connected by lines as speci\214ed in the \215ags in the)
5.5 E -.165(ve)72 393.1 S(rte).165 E 2.75(xs)-.165 G(tructure.)-2.75 E
(Each V)72 410 Q(erte)-1.221 E(x, as de\214ned in <)-.165 E F0
(X11/X10.h)A F1(>, is a structure with the follo)A(wing members:)-.275 E
36 431.65 36 442.65 DL 36 429.65 36 440.65 DL 41.5 427.9 36 427.9 DL
43.5 427.9 38 427.9 DL 49 427.9 43.5 427.9 DL(typedef struct _V)72 446.4
Q(erte)-1.221 E 2.75(x{)-.165 G(short x,y;)108 459.4 Q
(unsigned short \215ags;)108 472.4 Q 2.75(}V)72 485.4 S(erte)-3.971 E
(x;)-.165 E 36 487.55 36 498.55 DL 36 485.55 36 496.55 DL 41.5 496.8 36
496.8 DL 43.5 496.8 38 496.8 DL 49 496.8 43.5 496.8 DL
(The x and y members are the coordinates of the v)72 521.8 Q(erte)-.165
E 2.75(xt)-.165 G(hat are relati)-2.75 E .33 -.165(ve t)-.275 H 2.75(oe)
.165 G(ither the upper left)-2.75 E(inside corner of the dra)72 534.8 Q
-.11(wa)-.165 G(ble \(if).11 E F0 -1.1(Ve)3.666 G(rtexRelati)1.1 E -.11
(ve)-.11 G F1(is zero\) or the pre)3.776 E(vious v)-.275 E(erte)-.165 E
2.75(x\()-.165 G(if)-2.75 E F0 -1.1(Ve)3.666 G(rtexRela-)1.1 E(ti)72
547.8 Q -.11(ve)-.11 G F1(is one\).)3.776 E
(The \215ags, as de\214ned in <)72 564.7 Q F0(X11/X10.h)A F1
(>, are as follo)A(ws:)-.275 E 36 582.45 36 593.45 DL 36 580.45 36
591.45 DL 41.5 578.7 36 578.7 DL 43.5 578.7 38 578.7 DL 49 578.7 43.5
578.7 DL F0 -1.1(Ve)72.916 597.2 S(rtexRelati)1.1 E -.11(ve)-.11 G F1
(0x0001)176.594 597.2 Q(/* else absolute */)226.094 597.2 Q F0 -1.1(Ve)
72.916 610.2 S(rtexDontDraw)1.1 E F1(0x0002)176.594 610.2 Q(/* else dra)
226.094 610.2 Q 2.75(w*)-.165 G(/)-2.75 E F0 -1.1(Ve)72.916 623.2 S
(rtexCur)1.1 E -.11(ve)-.11 G(d).11 E F1(0x0004)176.594 623.2 Q
(/* else straight */)226.094 623.2 Q F0 -1.1(Ve)72.916 636.2 S
(rtexStartClosed)1.1 E F1(0x0008)176.594 636.2 Q(/* else not */)226.094
636.2 Q F0 -1.1(Ve)72.916 649.2 S(rtexEndClosed)1.1 E F1(0x0010)176.594
649.2 Q(/* else not */)226.094 649.2 Q 36 651.35 36 662.35 DL 36 649.35
36 660.35 DL 41.5 660.6 36 660.6 DL 43.5 660.6 38 660.6 DL 49 660.6 43.5
660.6 DL 23.65<8349>72 689.5 S(f)-23.65 E F0 -1.1(Ve)3.666 G(rtexRelati)
1.1 E -.11(ve)-.11 G F1
(is not set, the coordinates are absolute \(that is, relati)3.776 E .33
-.165(ve t)-.275 H 2.75(ot).165 G(he dra)-2.75 E -.11(wa)-.165 G(ble')
.11 E(s)-.605 E 2.75(origin\). The)99.5 702.5 R(\214rst v)2.75 E(erte)
-.165 E 2.75(xm)-.165 G(ust be an absolute v)-2.75 E(erte)-.165 E(x.)
-.165 E 23.65<8349>72 719.4 S(f)-23.65 E F0 -1.1(Ve)3.666 G
(rtexDontDraw)1.1 E F1(is one, no line or curv)3.666 E 2.75(ei)-.165 G
2.75(sd)-2.75 G(ra)-2.75 E(wn from the pre)-.165 E(vious v)-.275 E(erte)
-.165 E 2.75(xt)-.165 G 2.75(ot)-2.75 G(his one.)-2.75 E
(This is analogous to picking up the pen and mo)99.5 732.4 Q
(ving to another place before dra)-.165 E(wing)-.165 E F0(470)279.75 769
Q 0 Cg EP
%%Page: 471 476
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E/F1 11/Times-Roman@0 SF(another line.)
99.5 85 Q 23.65<8349>72 101.9 S(f)-23.65 E F0 -1.1(Ve)3.666 G(rtexCur)
1.1 E -.11(ve)-.11 G(d).11 E F1
(is one, a spline algorithm is used to dra)3.666 E 2.75(was)-.165 G
(mooth curv)-2.75 E 2.75(ef)-.165 G(rom the pre)-2.75 E(vi-)-.275 E
(ous v)99.5 114.9 Q(erte)-.165 E 2.75(xt)-.165 G
(hrough this one to the ne)-2.75 E(xt v)-.165 E(erte)-.165 E 2.75
(x. Otherwise,)-.165 F 2.75(as)2.75 G(traight line is dra)-2.75 E
(wn from the)-.165 E(pre)99.5 127.9 Q(vious v)-.275 E(erte)-.165 E 2.75
(xt)-.165 G 2.75(ot)-2.75 G(his one.)-2.75 E(It mak)5.5 E
(es sense to set)-.11 E F0 -1.1(Ve)3.666 G(rtexCur)1.1 E -.11(ve)-.11 G
(d).11 E F1(to one only if a pre)3.666 E(vious)-.275 E(and ne)99.5 140.9
Q(xt v)-.165 E(erte)-.165 E 2.75(xa)-.165 G
(re both de\214ned \(either e)-2.75 E
(xplicitly in the array or through the de\214nition of a)-.165 E
(closed curv)99.5 153.9 Q(e\).)-.165 E 23.65<8349>72 170.8 S 2.75(ti)
-23.65 G 2.75(sp)-2.75 G(ermissible for)-2.75 E F0 -1.1(Ve)3.666 G
(rtexDontDraw)1.1 E F1(bits and)3.666 E F0 -1.1(Ve)3.666 G(rtexCur)1.1 E
-.11(ve)-.11 G(d).11 E F1(bits both to be one.)3.666 E(This is)5.5 E
(useful if you w)99.5 183.8 Q(ant to de\214ne the pre)-.11 E
(vious point for the smooth curv)-.275 E 2.75(eb)-.165 G(ut do not w)
-2.97 E(ant an)-.11 E(actual curv)99.5 196.8 Q 2.75(ed)-.165 G(ra)-2.75
E(wing to start until this point.)-.165 E 23.65<8349>72 213.7 S(f)-23.65
E F0 -1.1(Ve)3.666 G(rtexStartClosed)1.1 E F1
(is one, then this point marks the be)3.666 E(ginning of a closed curv)
-.165 E 2.75(e. This)-.165 F -.165(ve)99.5 226.7 S(rte).165 E 2.75(xm)
-.165 G(ust be follo)-2.75 E(wed later in the array by another v)-.275 E
(erte)-.165 E 2.75(xw)-.165 G(hose ef)-2.75 E(fecti)-.275 E .33 -.165
(ve c)-.275 H(oordinates are).165 E(identical and that has a)99.5 239.7
Q F0 -1.1(Ve)3.666 G(rtexEndClosed)1.1 E F1(bit of one.)3.666 E
(The points in between form a c)5.5 E(ycle)-.165 E
(to determine predecessor and successor v)99.5 252.7 Q
(ertices for the spline algorithm.)-.165 E(This function uses these GC \
components: function, plane-mask, line-width, line-style, cap-style,)72
269.6 Q(join-style, \214ll-style, subwindo)72 282.6 Q
(w-mode, clip-x-origin, clip-y-origin, and clip-mask.)-.275 E
(It also uses)5.5 E(these GC mode-dependent components: fore)72 295.6 Q
(ground, background, tile, stipple, tile-stipple-x-ori-)-.165 E
(gin, tile-stipple-y-origin, dash-of)72 308.6 Q(fset, and dash-list.)
-.275 E 1.76 -.88(To a)72 338.5 T(chie).88 E .33 -.165(ve t)-.275 H
(he ef).165 E(fects of the X V)-.275 E(ersion 10)-1.221 E F0(XDrawT)
3.666 E(iled)-.198 E F1(and)3.666 E F0(XDrawFilled)3.666 E F1 2.75(,u)
.916 G(se)-2.75 E F0(XDrawFilled)3.666 E F1(.).916 E .44 LW 36 356.25 36
367.25 DL 36 354.25 36 365.25 DL 41.5 352.5 36 352.5 DL 43.5 352.5 38
352.5 DL 49 352.5 43.5 352.5 DL(#include <X11/X10.h>)72 368.4 Q
(Status XDra)72 394.4 Q(wFilled\()-.165 E/F2 11/Times-Italic@0 SF
(display).916 E F1(,)A F2(d)2.75 E F1(,)A F2(gc)2.75 E F1(,)A F2(vlist)
2.75 E F1(,)A F2(vcount)2.75 E F1(\)).916 E(Display *)108 407.4 Q F2
(display)A F1(;).916 E(Dra)108 420.4 Q -.11(wa)-.165 G(ble).11 E F2(d)
2.75 E F1(;).916 E(GC)108 433.4 Q F2(gc)2.75 E F1(;).916 E -1.221(Ve)108
446.4 S(rte)1.221 E 2.75(x*)-.165 G F2(vlist)-2.75 E F1(;).916 E(int)108
459.4 Q F2(vcount)2.75 E F1(;).916 E F2(display)72 480.2 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2(d)72 497.1 Q F1(Speci\214es the dra)66.5 E -.11(wa)-.165 G(ble.).11 E
F2(gc)72 514 Q F1(Speci\214es the GC.)61.616 E F2(vlist)72 530.9 Q F1
(Speci\214es a pointer to the list of v)53.663 E
(ertices that indicate what to dra)-.165 E -.715(w.)-.165 G F2(vcount)72
547.8 Q F1(Speci\214es ho)42.674 E 2.75(wm)-.275 G(an)-2.75 E 2.75(yv)
-.165 G(ertices are in vlist.)-2.915 E 36 543.45 36 554.45 DL 36 541.45
36 552.45 DL 41.5 552.7 36 552.7 DL 43.5 552.7 38 552.7 DL 49 552.7 43.5
552.7 DL(The)72 577.7 Q F0(XDrawFilled)3.666 E F1(function dra)3.666 E
(ws arbitrary polygons or curv)-.165 E(es and then \214lls them.)-.165 E
(This function uses these GC components: function, plane-mask, line-wid\
th, line-style, cap-style,)72 594.6 Q
(join-style, \214ll-style, subwindo)72 607.6 Q
(w-mode, clip-x-origin, clip-y-origin, and clip-mask.)-.275 E
(It also uses)5.5 E(these GC mode-dependent components: fore)72 620.6 Q
(ground, background, tile, stipple, tile-stipple-x-ori-)-.165 E
(gin, tile-stipple-y-origin, dash-of)72 633.6 Q
(fset, dash-list, \214ll-style, and \214ll-rule.)-.275 E F0
(Associating User Data with a V)72 659.6 Q(alue)-1.012 E F1
(These functions ha)72 676.5 Q .33 -.165(ve b)-.22 H
(een superseded by the conte).165 E
(xt management functions \(see section 16.10\).)-.165 E(It is often nec\
essary to associate arbitrary information with resource IDs.)72 689.5 Q
(Xlib pro)5.5 E(vides the)-.165 E F0(XAs-)3.666 E(socT)72 702.5 Q(able)
-1.012 E F1(functions that you can use to mak)3.666 E 2.75(es)-.11 G
(uch an association.)-2.75 E(Application programs often)5.5 E
(need to be able to easily refer to their o)72 715.5 Q
(wn data structures when an e)-.275 E -.165(ve)-.275 G(nt arri).165 E
-.165(ve)-.275 G 2.75(s. The).165 F F0(XAs-)3.666 E(socT)72 728.5 Q
(able)-1.012 E F1(system pro)3.666 E
(vides users of the X library with a method for associating their o)
-.165 E(wn data)-.275 E F0(471)279.75 769 Q 0 Cg EP
%%Page: 472 477
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E/F1 11/Times-Roman@0 SF
(structures with X resources \()72 85 Q F0(Pixmaps).916 E F1(,).916 E F0
-.275(Fo)3.666 G(nts).275 E F1(,).916 E F0 -.198(Wi)3.666 G(ndo).198 E
(ws)-.11 E F1 2.75(,a).916 G(nd so on\).)-2.75 E(An)72 101.9 Q F0
(XAssocT)3.666 E(able)-1.012 E F1(can be used to type X resources.)3.666
E -.165(Fo)5.5 G 2.75(re).165 G(xample, the user may w)-2.915 E
(ant to ha)-.11 E .33 -.165(ve t)-.22 H(hree).165 E
(or four types of windo)72 114.9 Q(ws, each with dif)-.275 E
(ferent properties.)-.275 E(This can be accomplished by associat-)5.5 E
(ing each X windo)72 127.9 Q 2.75(wI)-.275 G 2.75(Dw)-2.75 G
(ith a pointer to a windo)-2.75 E 2.75(wp)-.275 G
(roperty data structure)-2.75 E 2.75(de\214ned by the)5.5 F(user)2.75 E
(.)-.605 E 2.75(Ag)72 140.9 S
(eneric type has been de\214ned in the X library for resource IDs.)-2.75
E(It is called an XID.)5.5 E(There are a fe)72 157.8 Q 5.5(wg)-.275 G
2.75(uidelines that should)-5.5 F(be observ)2.75 E(ed when using an)
-.165 E F0(XAssocT)3.666 E(able)-1.012 E F1(:).916 E 23.65<8341>72 174.7
S 2.75(ll XIDs are relati)-23.65 F 3.08 -.165(ve t)-.275 H 5.5(ot).165 G
2.75(he speci\214ed)-5.5 F(display)2.75 E(.)-.715 E 23.65<8342>72 191.6
S 2.75(ecause of the hashing scheme used by the association)-23.65 F
(mechanism, the follo)2.75 E(wing)-.275 E
(rules for determining the size of a)99.5 204.6 Q F0(XAssocT)3.666 E
(able)-1.012 E F1(should be follo)3.666 E 2.75(wed. Associations)-.275 F
(will be)2.75 E 2.75(made and look)99.5 217.6 R 2.75(ed up more)-.11 F
(ef)2.75 E 2.75(\214ciently if the table size \(number of b)-.275 F(uck)
-.22 E(ets in the hash-)-.11 E(ing system\) is a po)99.5 230.6 Q
(wer of tw)-.275 E 2.75(oa)-.11 G(nd if there are not more than 8 XIDs)
-2.75 E(per b)5.5 E(uck)-.22 E(et.)-.11 E 1.76 -.88(To r)72 260.5 T
(eturn a pointer to a ne).88 E(w)-.275 E F0(XAssocT)3.666 E(able)-1.012
E F1 2.75(,u).916 G(se)-2.75 E F0(XCr)3.666 E(eateAssocT)-.198 E(able)
-1.012 E F1(.).916 E .44 LW 36 278.25 36 289.25 DL 36 276.25 36 287.25
DL 41.5 274.5 36 274.5 DL 43.5 274.5 38 274.5 DL 49 274.5 43.5 274.5 DL
(XAssocT)72 290.4 Q(able *XCreateAssocT)-.88 E -1.834(able \()-.88 F/F2
11/Times-Italic@0 SF(size).916 E F1(\)).916 E(int)88.5 303.4 Q F2(size)
2.75 E F1(;).916 E F2(size)72 324.2 Q F1(Speci\214es the number of b)
55.5 E(uck)-.22 E(ets in the hash system of)-.11 E F0(XAssocT)3.666 E
(able)-1.012 E F1(.).916 E 36 319.85 36 330.85 DL 36 317.85 36 328.85 DL
41.5 329.1 36 329.1 DL 43.5 329.1 38 329.1 DL 49 329.1 43.5 329.1 DL
(The size ar)72 354.1 Q(gument speci\214es the number of b)-.198 E(uck)
-.22 E(ets in the hash system of)-.11 E F0(XAssocT)3.666 E(able)-1.012 E
F1 5.5(.F).916 G 2.75(or rea-)-5.665 F 2.75(sons of ef)72 367.1 R
(\214cienc)-.275 E 5.5(yt)-.165 G(he number of b)-5.5 E(uck)-.22 E
(ets should be a po)-.11 E(wer of tw)-.275 E 2.75(o. Some)-.11 F 2.75
(size suggestions)2.75 F 2.75(might be: use 32)72 380.1 R -.22(bu)2.75 G
(ck).22 E 2.75(ets per 100 objects,)-.11 F
(and a reasonable maximum number of objects per)2.75 E -.22(bu)72 393.1
S(ck).22 E(ets is 8.)-.11 E 2.75(If an error allocating memory for the)
5.5 F F0(XAssocT)3.666 E(able)-1.012 E F1(occurs, a NULL pointer is)
3.666 E(returned.)72 406.1 Q 1.76 -.88(To c)72 436 T
(reate an entry in a gi).88 E -.165(ve)-.275 G(n).165 E F0(XAssocT)3.666
E(able)-1.012 E F1 2.75(,u).916 G(se)-2.75 E F0(XMak)3.666 E(eAssoc)-.11
E F1(.).916 E 36 453.75 36 464.75 DL 36 451.75 36 462.75 DL 41.5 450 36
450 DL 43.5 450 38 450 DL 49 450 43.5 450 DL(XMak)72 465.9 Q -1.834
(eAssoc \()-.11 F F2(display).916 E F1(,)A F2(table)2.75 E F1(,).916 E
F2(x_id)2.75 E F1(,).916 E F2(data)2.75 E F1(\)).916 E(Display *)88.5
478.9 Q F2(display)A F1(;).916 E(XAssocT)88.5 491.9 Q(able *)-.88 E F2
(table)A F1(;).916 E(XID)88.5 504.9 Q F2(x_id)2.75 E F1(;).916 E(char *)
88.5 517.9 Q F2(data)A F1(;).916 E F2(display)72 538.7 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2(table)72 555.6 Q F1(Speci\214es the assoc table.)50 E F2(x_id)72
572.5 Q F1(Speci\214es the X resource ID.)53.058 E F2(data)72 589.4 Q F1
(Speci\214es the data to be associated with the X resource ID.)52.442 E
36 585.05 36 596.05 DL 36 583.05 36 594.05 DL 41.5 594.3 36 594.3 DL
43.5 594.3 38 594.3 DL 49 594.3 43.5 594.3 DL(The)72 619.3 Q F0(XMak)
3.666 E(eAssoc)-.11 E F1(function inserts data into an)3.666 E F0
(XAssocT)3.666 E(able)-1.012 E F1 -.11(ke)3.666 G(yed on an XID.)-.055 E
(Data is inserted)5.5 E(into the table only once.)72 632.3 Q
(Redundant inserts are ignored.)5.5 E(The queue in each association b)
5.5 E(uck)-.22 E(et is)-.11 E(sorted from the lo)72 645.3 Q
(west XID to the highest XID.)-.275 E 1.76 -.88(To o)72 675.2 T
(btain data from a gi).88 E -.165(ve)-.275 G(n).165 E F0(XAssocT)3.666 E
(able)-1.012 E F1 2.75(,u).916 G(se)-2.75 E F0(XLookUpAssoc)3.666 E F1
(.).916 E F0(472)279.75 769 Q 0 Cg EP
%%Page: 473 478
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E .44 LW 36 76.75 36 87.75 DL 36 74.75
36 85.75 DL 41.5 73 36 73 DL 43.5 73 38 73 DL 49 73 43.5 73 DL/F1 11
/Times-Roman@0 SF(char *XLookUpAssoc)72 88.9 Q(\().916 E/F2 11
/Times-Italic@0 SF(display).916 E F1(,)A F2(table)2.75 E F1(,).916 E F2
(x_id)2.75 E F1(\)).916 E(Display *)88.5 101.9 Q F2(display)A F1(;).916
E(XAssocT)88.5 114.9 Q(able *)-.88 E F2(table)A F1(;).916 E(XID)88.5
127.9 Q F2(x_id)2.75 E F1(;).916 E F2(display)72 148.7 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2(table)72 165.6 Q F1(Speci\214es the assoc table.)50 E F2(x_id)72
182.5 Q F1(Speci\214es the X resource ID.)53.058 E 36 178.15 36 189.15
DL 36 176.15 36 187.15 DL 41.5 187.4 36 187.4 DL 43.5 187.4 38 187.4 DL
49 187.4 43.5 187.4 DL(The)72 212.4 Q F0(XLookUpAssoc)3.666 E F1
(function retrie)3.666 E -.165(ve)-.275 G 2.75(st).165 G
(he data stored in an)-2.75 E F0(XAssocT)3.666 E(able)-1.012 E F1
(by its XID.)3.666 E 2.75(If an)5.5 F 2.75(appropriately matching)72
225.4 R(XID can be found in the table,)2.75 E F0(XLookUpAssoc)3.666 E F1
(returns the data associ-)3.666 E(ated with it.)72 238.4 Q
(If the x_id cannot be found in the table, it returns NULL.)5.5 E 1.76
-.88(To d)72 268.3 T(elete an entry from a gi).88 E -.165(ve)-.275 G(n)
.165 E F0(XAssocT)3.666 E(able)-1.012 E F1 2.75(,u).916 G(se)-2.75 E F0
(XDeleteAssoc)3.666 E F1(.).916 E 36 286.05 36 297.05 DL 36 284.05 36
295.05 DL 41.5 282.3 36 282.3 DL 43.5 282.3 38 282.3 DL 49 282.3 43.5
282.3 DL -1.834(XDeleteAssoc \()72 298.2 R F2(display).916 E F1(,)A F2
(table)2.75 E F1(,).916 E F2(x_id)2.75 E F1(\)).916 E(Display *)88.5
311.2 Q F2(display)A F1(;).916 E(XAssocT)88.5 324.2 Q(able *)-.88 E F2
(table)A F1(;).916 E(XID)88.5 337.2 Q F2(x_id)2.75 E F1(;).916 E F2
(display)72 358 Q F1(Speci\214es the connection to the X serv)40.221 E
(er)-.165 E(.)-.605 E F2(table)72 374.9 Q F1
(Speci\214es the assoc table.)50 E F2(x_id)72 391.8 Q F1
(Speci\214es the X resource ID.)53.058 E 36 387.45 36 398.45 DL 36
385.45 36 396.45 DL 41.5 396.7 36 396.7 DL 43.5 396.7 38 396.7 DL 49
396.7 43.5 396.7 DL(The)72 421.7 Q F0(XDeleteAssoc)3.666 E F1
(function deletes an association in an)3.666 E F0(XAssocT)3.666 E(able)
-1.012 E F1 -.11(ke)3.666 G(yed on its XID.)-.055 E(Redun-)5.5 E
(dant deletes \(and deletes of none)72 434.7 Q
(xistent XIDs\) are ignored.)-.165 E(Deleting associations in no w)5.5 E
(ay)-.11 E(impairs the performance of an)72 447.7 Q F0(XAssocT)3.666 E
(able)-1.012 E F1(.).916 E 1.76 -.88(To f)72 477.6 T
(ree the memory associated with a gi).88 E -.165(ve)-.275 G(n).165 E F0
(XAssocT)3.666 E(able)-1.012 E F1 2.75(,u).916 G(se)-2.75 E F0(XDestr)
3.666 E(oyAssocT)-.198 E(able)-1.012 E F1(.).916 E 36 495.35 36 506.35
DL 36 493.35 36 504.35 DL 41.5 491.6 36 491.6 DL 43.5 491.6 38 491.6 DL
49 491.6 43.5 491.6 DL(XDestro)72 507.5 Q(yAssocT)-.11 E -1.834(able \()
-.88 F F2(table).916 E F1(\)).916 E(XAssocT)88.5 520.5 Q(able *)-.88 E
F2(table)A F1(;).916 E F2(table)72 541.3 Q F1
(Speci\214es the assoc table.)50 E 36 536.95 36 547.95 DL 36 534.95 36
545.95 DL 41.5 546.2 36 546.2 DL 43.5 546.2 38 546.2 DL 49 546.2 43.5
546.2 DL F0(473)279.75 769 Q 0 Cg EP
%%Page: 474 479
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E/F1 12/Times-Bold@0 SF(Glossary)265.332
111 Q F0(Access contr)72 153.9 Q(ol list)-.198 E/F2 11/Times-Roman@0 SF
2.75(Xm)99.5 170.8 S
(aintains a list of hosts from which client programs can be run.)-2.75 E
(By def)5.5 E(ault, only pro-)-.11 E(grams on the local host and hosts \
speci\214ed in an initial list read by the serv)99.5 183.8 Q
(er can use the)-.165 E(display)99.5 196.8 Q 5.5(.T)-.715 G
(his access control list can be changed by clients on the local host.)
-5.5 E(Some serv)5.5 E(er)-.165 E(implementations can also implement ot\
her authorization mechanisms in addition to or in)99.5 209.8 Q
(place of this mechanism.)99.5 222.8 Q
(The action of this mechanism can be conditional based on the)5.5 E
(authorization protocol name and data recei)99.5 235.8 Q -.165(ve)-.275
G 2.75(db).165 G 2.75(yt)-2.75 G(he serv)-2.75 E
(er at connection setup.)-.165 E F0(Acti)72 252.7 Q .22 -.11(ve g)-.11 H
(rab).11 E F2 2.75(Ag)99.5 269.6 S(rab is acti)-2.75 E .33 -.165(ve w)
-.275 H(hen the pointer or k).165 E -.165(ey)-.11 G(board is actually o)
.165 E(wned by the single grabbing)-.275 E(client.)99.5 282.6 Q F0
(Ancestors)72 299.5 Q F2
(If W is an inferior of A, then A is an ancestor of W)99.5 316.4 Q(.)
-1.012 E F0(Atom)72 333.3 Q F2
(An atom is a unique ID corresponding to a string name.)99.5 350.2 Q
(Atoms are used to identify proper)5.5 E(-)-.22 E
(ties, types, and selections.)99.5 363.2 Q F0(Backgr)72 380.1 Q(ound)
-.198 E F2(An)99.5 397 Q F0(InputOutput)3.666 E F2(windo)3.666 E 2.75
(wc)-.275 G(an ha)-2.75 E .33 -.165(ve a b)-.22 H
(ackground, which is de\214ned as a pixmap.).165 E(When)5.5 E(re)99.5
410 Q(gions of the windo)-.165 E 2.75(wh)-.275 G -2.475 -.22(av e)-2.75
H(their contents lost or in)2.97 E -.275(va)-.44 G(lidated, the serv)
.275 E(er automatically tiles)-.165 E(those re)99.5 423 Q
(gions with the background.)-.165 E F0(Backing stor)72 439.9 Q(e)-.198 E
F2(When a serv)99.5 456.8 Q(er maintains the contents of a windo)-.165 E
1.43 -.715(w, t)-.275 H(he pix).715 E(els sa)-.165 E -.165(ve)-.22 G
2.75(do).165 G -.275(ff)-2.75 G(-screen are kno).275 E(wn as)-.275 E
2.75(ab)99.5 469.8 S(acking store.)-2.75 E F0(Base f)72 486.7 Q
(ont name)-.275 E F2 2.75(Af)99.5 503.6 S(ont name used to select a f)
-2.75 E(amily of fonts whose members may be encoded in v)-.11 E(arious)
-.275 E 2.75(charsets. The)99.5 516.6 R F0(CharSetRegistry)3.666 E F2
(and)3.666 E F0(CharSetEncoding)3.666 E F2
(\214elds of an XLFD name identify)3.666 E(the charset of the font.)99.5
529.6 Q 2.75(Ab)5.5 G
(ase font name may be a full XLFD name, with all fourteen '-')-2.75 E
(delimiters, or an abbre)99.5 542.6 Q
(viated XLFD name containing only the \214rst 12 \214elds of an XLFD)
-.275 E(name, up to b)99.5 555.6 Q(ut not including)-.22 E F0
(CharSetRegistry)3.666 E F2 2.75(,w).916 G
(ith or without the thirteenth '-', or a)-2.75 E(non-XLFD name.)99.5
568.6 Q(An)5.5 E 2.75(yX)-.165 G(LFD \214elds may contain wild cards.)
-2.75 E(When creating an)99.5 585.5 Q F0(XF)3.666 E(ontSet)-.275 E F2
2.75(,X).916 G
(lib accepts from the client a list of one or more base font)-2.75 E
(names which select one or more font f)99.5 598.5 Q 2.75(amilies. The)
-.11 F 2.75(ya)-.165 G(re combined with charset names)-2.75 E(obtained \
from the encoding of the locale to load the fonts required to render te)
99.5 611.5 Q(xt.)-.165 E F0(Bit gra)72 628.4 Q(vity)-.275 E F2
(When a windo)99.5 645.3 Q 2.75(wi)-.275 G 2.75(sr)-2.75 G
(esized, the contents of the windo)-2.75 E 2.75(wa)-.275 G
(re not necessarily discarded.)-2.75 E(It is)5.5 E
(possible to request that the serv)99.5 658.3 Q(er relocate the pre)
-.165 E(vious contents to some re)-.275 E(gion of the win-)-.165 E(do)
99.5 671.3 Q 2.75(w\()-.275 G(though no guarantees are made\).)-2.75 E
(This attraction of windo)5.5 E 2.75(wc)-.275 G(ontents for some loca-)
-2.75 E(tion of a windo)99.5 684.3 Q 2.75(wi)-.275 G 2.75(sk)-2.75 G(no)
-2.75 E(wn as bit gra)-.275 E(vity)-.22 E(.)-.715 E F0(474)279.75 769 Q
0 Cg EP
%%Page: 475 480
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E(Bit plane)72 85 Q/F1 11/Times-Roman@0
SF(When a pixmap or windo)99.5 101.9 Q 2.75(wi)-.275 G 2.75(st)-2.75 G
(hought of as a stack of bitmaps, each bitmap is called a bit)-2.75 E
(plane or plane.)99.5 114.9 Q F0(Bitmap)72 131.8 Q F1 2.75(Ab)99.5 148.7
S(itmap is a pixmap of depth one.)-2.75 E F0(Border)72 165.6 Q F1(An)
99.5 182.5 Q F0(InputOutput)3.666 E F1(windo)3.666 E 2.75(wc)-.275 G
(an ha)-2.75 E .33 -.165(ve a b)-.22 H
(order of equal thickness on all four sides of the win-).165 E(do)99.5
195.5 Q 4.18 -.715(w. T)-.275 H
(he contents of the border are de\214ned by a pixmap, and the serv).715
E(er automatically)-.165 E(maintains the contents of the border)99.5
208.5 Q 5.5(.E)-.605 G(xposure e)-5.5 E -.165(ve)-.275 G(nts are ne).165
E -.165(ve)-.275 G 2.75(rg).165 G(enerated for border)-2.75 E(re)99.5
221.5 Q(gions.)-.165 E F0(Button grab)72 238.4 Q(bing)-.11 E F1
(Buttons on the pointer can be passi)99.5 255.3 Q -.165(ve)-.275 G
(ly grabbed by a client.).165 E(When the b)5.5 E(utton is pressed,)-.22
E(the pointer is then acti)99.5 268.3 Q -.165(ve)-.275 G
(ly grabbed by the client.).165 E F0(Byte order)72 285.2 Q F1 -.165(Fo)
99.5 302.1 S 2.75(ri).165 G(mage \(pixmap/bitmap\) data, the serv)-2.75
E(er de\214nes the byte order)-.165 E 2.75(,a)-.44 G
(nd clients with dif)-2.75 E(ferent)-.275 E(nati)99.5 315.1 Q .33 -.165
(ve b)-.275 H(yte ordering must sw).165 E(ap bytes as necessary)-.11 E
5.5(.F)-.715 G(or all other parts of the protocol, the)-5.665 E
(client de\214nes the byte order)99.5 328.1 Q 2.75(,a)-.44 G
(nd the serv)-2.75 E(er sw)-.165 E(aps bytes as necessary)-.11 E(.)-.715
E F0(Character)72 345 Q F1 2.75(Am)99.5 361.9 S
(ember of a set of elements used for the or)-2.75 E -.055(ga)-.198 G
(nization, control, or representation of te).055 E(xt)-.165 E
(\(ISO2022, as adapted by XPG3\).)99.5 374.9 Q
(Note that in ISO2022 terms, a character is not bound to a)5.5 E
(coded v)99.5 387.9 Q
(alue until it is identi\214ed as part of a coded character set.)-.275 E
F0(Character glyph)72 404.8 Q F1
(The abstract graphical symbol for a character)99.5 421.7 Q 5.5(.C)-.605
G(haracter glyphs may or may not map one-)-5.5 E
(to-one to font glyphs, and may be conte)99.5 434.7 Q(xt-dependent, v)
-.165 E(arying with the adjacent characters.)-.275 E
(Multiple characters may map to a single character glyph.)99.5 447.7 Q
F0(Character set)72 464.6 Q F1 2.75(Ac)99.5 481.5 S
(ollection of characters.)-2.75 E F0(Charset)72 498.4 Q F1(An encoding \
with a uniform, state-independent mapping from characters to codepoints\
.)99.5 515.3 Q(A)5.5 E(coded character set.)99.5 528.3 Q -.165(Fo)99.5
545.2 S 2.75(rd).165 G(isplay in X, there can be a direct mapping from \
a charset to one font, if the width of)-2.75 E
(all characters in the charset is either one or tw)99.5 558.2 Q 2.75(ob)
-.11 G 2.75(ytes. A)-2.75 F(te)2.75 E(xt string encoded in an encoding)
-.165 E(such as Shift-JIS cannot be passed directly to the X serv)99.5
571.2 Q(er)-.165 E 2.75(,b)-.44 G(ecause the te)-2.75 E(xt imaging)-.165
E(requests accept only single-width charsets \(either 8 or 16 bits\).)
99.5 584.2 Q(Charsets which meet these)5.5 E(restrictions can serv)99.5
597.2 Q 2.75(ea)-.165 G 2.75(s`)-2.75 G(`font charsets')-3.564 E 2.75
('. F)-.814 F(ont charsets strictly speaking map font indices)-.165 E
(to font glyphs, not characters to character glyphs.)99.5 610.2 Q(Note \
that a single font charset is sometimes used as the encoding of a local\
e, for e)99.5 627.1 Q(xample,)-.165 E(ISO8859-1.)99.5 640.1 Q F0(Childr)
72 657 Q(en)-.198 E F1(The children of a windo)99.5 673.9 Q 2.75(wa)
-.275 G(re its \214rst-le)-2.75 E -.165(ve)-.275 G 2.75(ls).165 G
(ubwindo)-2.75 E(ws.)-.275 E F0(475)279.75 769 Q 0 Cg EP
%%Page: 476 481
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E(Class)72 85 Q/F1 11/Times-Roman@0 SF
-.44(Wi)99.5 101.9 S(ndo).44 E(ws can be of dif)-.275 E
(ferent classes or types.)-.275 E(See the entries for)5.5 E F0
(InputOnly)3.666 E F1(and)3.666 E F0(InputOutput)100.416 114.9 Q F1
(windo)3.666 E(ws for further information about v)-.275 E(alid windo)
-.275 E 2.75(wt)-.275 G(ypes.)-2.75 E F0(Client)72 131.8 Q F1
(An application program connects to the windo)99.5 148.7 Q 2.75(ws)-.275
G(ystem serv)-2.75 E(er by some interprocess com-)-.165 E
(munication \(IPC\) path, such as a TCP connection or a shared memory b)
99.5 161.7 Q(uf)-.22 E(fer)-.275 E 5.5(.T)-.605 G(his program)-5.5 E
(is referred to as a client of the windo)99.5 174.7 Q 2.75(ws)-.275 G
(ystem serv)-2.75 E(er)-.165 E 5.5(.M)-.605 G(ore precisely)-5.5 E 2.75
(,t)-.715 G(he client is the IPC)-2.75 E(path itself.)99.5 187.7 Q 2.75
(Ap)5.5 G(rogram with multiple paths open to the serv)-2.75 E(er is vie)
-.165 E(wed as multiple clients)-.275 E(by the protocol.)99.5 200.7 Q(R\
esource lifetimes are controlled by connection lifetimes, not by progra\
m)5.5 E(lifetimes.)99.5 213.7 Q F0(Clipping r)72 230.6 Q(egion)-.198 E
F1(In a graphics conte)99.5 247.5 Q(xt, a bitmap or list of rectangles \
can be speci\214ed to restrict output to a)-.165 E(particular re)99.5
260.5 Q(gion of the windo)-.165 E 4.18 -.715(w. T)-.275 H
(he image de\214ned by the bitmap or rectangles is called a).715 E
(clipping re)99.5 273.5 Q(gion.)-.165 E F0(Coded character)72 290.4 Q F1
2.75(Ac)99.5 307.3 S(haracter bound to a codepoint.)-2.75 E F0
(Coded character set)72 324.2 Q F1 2.75(As)99.5 341.1 S(et of unambiguo\
us rules that establishes a character set and the one-to-one relationsh\
ip)-2.75 E
(between each character of the set and its bit representation.)99.5
354.1 Q(\(ISO2022, as adapted by)5.5 E(XPG3\) A de\214nition of a one-t\
o-one mapping of a set of characters to a set of codepoints.)99.5 367.1
Q F0(Codepoint)72 384 Q F1(The coded representation of a single charact\
er in a coded character set.)99.5 400.9 Q F0(Colormap)72 417.8 Q F1 2.75
(Ac)99.5 434.7 S
(olormap consists of a set of entries de\214ning color v)-2.75 E 2.75
(alues. The)-.275 F(colormap associated with)2.75 E 2.75(aw)99.5 447.7 S
(indo)-2.75 E 2.75(wi)-.275 G 2.75(su)-2.75 G
(sed to display the contents of the windo)-2.75 E(w; each pix)-.275 E
(el v)-.165 E(alue inde)-.275 E -.165(xe)-.165 G 2.75(st).165 G(he col-)
-2.75 E(ormap to produce an RGB v)99.5 460.7 Q(alue that dri)-.275 E
-.165(ve)-.275 G 2.75(st).165 G(he guns of a monitor)-2.75 E 5.5(.D)
-.605 G(epending on hardw)-5.5 E(are)-.11 E(limitations, one or more co\
lormaps can be installed at one time so that windo)99.5 473.7 Q
(ws associated)-.275 E(with those maps display with true colors.)99.5
486.7 Q F0(Connection)72 503.6 Q F1(The IPC path between the serv)99.5
520.5 Q(er and client program is kno)-.165 E(wn as a connection.)-.275 E
2.75(Ac)5.5 G(lient)-2.75 E(program typically \(b)99.5 533.5 Q
(ut not necessarily\) has one connection to the serv)-.22 E(er o)-.165 E
-.165(ve)-.165 G 2.75(rw).165 G(hich)-2.75 E(requests and e)99.5 546.5 Q
-.165(ve)-.275 G(nts are sent.).165 E F0(Containment)72 563.4 Q F1 2.75
(Aw)99.5 580.3 S(indo)-2.75 E 2.75(wc)-.275 G
(ontains the pointer if the windo)-2.75 E 2.75(wi)-.275 G 2.75(sv)-2.75
G(ie)-2.75 E -.11(wa)-.275 G(ble and the hotspot of the cursor is).11 E
(within a visible re)99.5 593.3 Q(gion of the windo)-.165 E 2.75(wo)
-.275 G 2.75(rav)-2.75 G(isible re)-2.75 E
(gion of one of its inferiors.)-.165 E(The border)5.5 E(of the windo)
99.5 606.3 Q 2.75(wi)-.275 G 2.75(si)-2.75 G
(ncluded as part of the windo)-2.75 E 2.75(wf)-.275 G(or containment.)
-2.75 E(The pointer is in a win-)5.5 E(do)99.5 619.3 Q 2.75(wi)-.275 G
2.75(ft)-2.75 G(he windo)-2.75 E 2.75(wc)-.275 G(ontains the pointer b)
-2.75 E(ut no inferior contains the pointer)-.22 E(.)-.605 E F0
(Coordinate system)72 636.2 Q F1
(The coordinate system has X horizontal and Y v)99.5 653.1 Q
(ertical, with the origin [0, 0] at the upper)-.165 E 2.75
(left. Coordinates)99.5 666.1 R(are inte)2.75 E
(gral and coincide with pix)-.165 E(el centers.)-.165 E(Each windo)5.5 E
2.75(wa)-.275 G(nd pixmap)-2.75 E(has its o)99.5 679.1 Q
(wn coordinate system.)-.275 E -.165(Fo)5.5 G 2.75(raw).165 G(indo)-2.75
E 1.43 -.715(w, t)-.275 H(he origin is inside the border at the inside)
.715 E(upper)99.5 692.1 Q(-left corner)-.22 E(.)-.605 E F0(476)279.75
769 Q 0 Cg EP
%%Page: 477 482
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E(Cursor)72 85 Q/F1 11/Times-Roman@0 SF
2.75(Ac)99.5 101.9 S
(ursor is the visible shape of the pointer on a screen.)-2.75 E
(It consists of a hotspot, a source)5.5 E
(bitmap, a shape bitmap, and a pair of colors.)99.5 114.9 Q
(The cursor de\214ned for a windo)5.5 E 2.75(wc)-.275 G(ontrols the)
-2.75 E(visible appearance when the pointer is in that windo)99.5 127.9
Q -.715(w.)-.275 G F0(Depth)72 144.8 Q F1(The depth of a windo)99.5
161.7 Q 2.75(wo)-.275 G 2.75(rp)-2.75 G
(ixmap is the number of bits per pix)-2.75 E(el it has.)-.165 E
(The depth of a)5.5 E(graphics conte)99.5 174.7 Q
(xt is the depth of the dra)-.165 E -.11(wa)-.165 G
(bles it can be used in conjunction with graphics).11 E(output.)99.5
187.7 Q F0(De)72 204.6 Q(vice)-.165 E F1 -2.365 -.275(Ke y)99.5 221.5 T
(boards, mice, tablets, track-balls, b).275 E(utton box)-.22 E
(es, and so on are all collecti)-.165 E -.165(ve)-.275 G(ly kno).165 E
(wn as)-.275 E(input de)99.5 234.5 Q 2.75(vices. Pointers)-.275 F
(can ha)2.75 E .33 -.165(ve o)-.22 H(ne or more b).165 E
(uttons \(the most common number is three\).)-.22 E
(The core protocol only deals with tw)99.5 247.5 Q 2.75(od)-.11 G -.275
(ev)-2.75 G(ices: the k).275 E -.165(ey)-.11 G(board and the pointer)
.165 E(.)-.605 E F0(Dir)72 264.4 Q(ectColor)-.198 E(Dir)100.416 281.3 Q
(ectColor)-.198 E F1(is a class of colormap in which a pix)3.666 E(el v)
-.165 E(alue is decomposed into three sepa-)-.275 E
(rate sub\214elds for inde)99.5 294.3 Q 2.75(xing. The)-.165 F
(\214rst sub\214eld inde)2.75 E -.165(xe)-.165 G 2.75(sa).165 G 2.75(na)
-2.75 G(rray to produce red intensity v)-2.75 E(al-)-.275 E 2.75
(ues. The)99.5 307.3 R(second sub\214eld inde)2.75 E -.165(xe)-.165 G
2.75(sas).165 G(econd array to produce blue intensity v)-2.75 E 2.75
(alues. The)-.275 F(third)2.75 E(sub\214eld inde)99.5 320.3 Q -.165(xe)
-.165 G 2.75(sat).165 G(hird array to produce green intensity v)-2.75 E
2.75(alues. The)-.275 F(RGB \(red, green, and)2.75 E(blue\) v)99.5 333.3
Q(alues in the colormap entry can be changed dynamically)-.275 E(.)-.715
E F0(Display)72 350.2 Q F1 2.75(As)99.5 367.1 S(erv)-2.75 E(er)-.165 E
2.75(,t)-.44 G(ogether with its screens and input de)-2.75 E
(vices, is called a display)-.275 E 5.5(.T)-.715 G(he Xlib)-5.5 E F0
(Display)3.666 E F1(structure contains all information about the partic\
ular display and its screens as well as the)99.5 380.1 Q
(state that Xlib needs to communicate with the display o)99.5 393.1 Q
-.165(ve)-.165 G 2.75(rap).165 G(articular connection.)-2.75 E F0
(Drawable)72 410 Q F1(Both windo)99.5 426.9 Q(ws and pixmaps can be use\
d as sources and destinations in graphics operations.)-.275 E
(These windo)99.5 439.9 Q(ws and pixmaps are collecti)-.275 E -.165(ve)
-.275 G(ly kno).165 E(wn as dra)-.275 E -.11(wa)-.165 G 2.75(bles. Ho)
.11 F(we)-.275 E -.165(ve)-.275 G .88 -.44(r, a).165 H(n).44 E F0(Inpu-)
3.666 E(tOnly)99.5 452.9 Q F1(windo)3.666 E 2.75(wc)-.275 G
(annot be used as a source or destination in a graphics operation.)-2.75
E F0(Encoding)72 469.8 Q F1 2.75(As)99.5 486.7 S(et of unambiguous rule\
s that establishes a character set and a relationship between the)-2.75
E(characters and their representations.)99.5 499.7 Q
(The character set does not ha)5.5 E .33 -.165(ve t)-.22 H 2.75(ob).165
G 2.75<658c>-2.75 G -.165(xe)-2.75 G 2.75(dt).165 G 2.75(oa\214)-2.75 G
(nite)-2.75 E(pre-de\214ned set of characters.)99.5 512.7 Q
(The representations do not ha)5.5 E .33 -.165(ve t)-.22 H 2.75(ob).165
G 2.75(eo)-2.75 G 2.75(fu)-2.75 G(niform length.)-2.75 E(Examples are a\
n ISO2022 graphic set, a state-independent or state-dependent combinati\
on)99.5 525.7 Q
(of graphic sets, possibly including control sets, the X Compound T)99.5
538.7 Q -.165(ex)-.77 G 2.75(te).165 G(ncoding, and the)-2.75 E
(UTF-8 ISO10646/Unicode encoding.)99.5 551.7 Q
(In X, encodings are identi\214ed by a string which appears as: the)99.5
568.6 Q F0(CharSetRegistry)3.666 E F1(and)3.666 E F0(CharSetEncoding)
100.416 581.6 Q F1
(components of an XLFD name; the name of a charset of the locale for)
3.666 E(which a font could not be found; or an atom which identi\214es \
the encoding of a te)99.5 594.6 Q(xt property)-.165 E
(or which names an encoding for a te)99.5 607.6 Q(xt selection tar)-.165
E(get type.)-.198 E(Encoding names should be)5.5 E
(composed of characters from the X Portable Character Set.)99.5 620.6 Q
F0(Escapement)72 637.5 Q F1
(The escapement of a string is the distance in pix)99.5 654.4 Q
(els in the primary dra)-.165 E 2.75(wd)-.165 G(irection from the)-2.75
E(dra)99.5 667.4 Q(wing origin to the origin of the ne)-.165 E
(xt character \(that is, the one follo)-.165 E(wing the gi)-.275 E -.165
(ve)-.275 G 2.75(ns).165 G(tring\))-2.75 E(to be dra)99.5 680.4 Q(wn.)
-.165 E F0(477)279.75 769 Q 0 Cg EP
%%Page: 478 483
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E(Ev)72 85 Q(ent)-.11 E/F1 11
/Times-Roman@0 SF
(Clients are informed of information asynchronously by means of e)99.5
101.9 Q -.165(ve)-.275 G 2.75(nts. These).165 F -2.365 -.275(ev e)2.75 H
(nts can).275 E(be either asynchronously generated from de)99.5 114.9 Q
(vices or generated as side ef)-.275 E(fects of client)-.275 E 2.75
(requests. Ev)99.5 127.9 R(ents are grouped into types.)-.165 E
(The serv)5.5 E(er ne)-.165 E -.165(ve)-.275 G 2.75(rs).165 G(ends an e)
-2.75 E -.165(ve)-.275 G(nt to a client unless).165 E
(the client has speci\214cally ask)99.5 140.9 Q
(ed to be informed of that type of e)-.11 E -.165(ve)-.275 G 2.75
(nt. Ho).165 F(we)-.275 E -.165(ve)-.275 G .88 -.44(r, c).165 H
(lients can).44 E(force e)99.5 153.9 Q -.165(ve)-.275 G
(nts to be sent to other clients.).165 E(Ev)5.5 E
(ents are typically reported relati)-.165 E .33 -.165(ve t)-.275 H 2.75
(oaw).165 G(indo)-2.75 E -.715(w.)-.275 G F0(Ev)72 170.8 Q(ent mask)-.11
E F1(Ev)99.5 187.7 Q(ents are requested relati)-.165 E .33 -.165(ve t)
-.275 H 2.75(oaw).165 G(indo)-2.75 E 4.18 -.715(w. T)-.275 H
(he set of e).715 E -.165(ve)-.275 G(nt types a client requests relati)
.165 E -.165(ve)-.275 G(to a windo)99.5 200.7 Q 2.75(wi)-.275 G 2.75(sd)
-2.75 G(escribed by using an e)-2.75 E -.165(ve)-.275 G(nt mask.).165 E
F0(Ev)72 217.6 Q(ent pr)-.11 E(opagation)-.198 E F1(De)99.5 234.5 Q
(vice-related e)-.275 E -.165(ve)-.275 G(nts propag).165 E
(ate from the source windo)-.055 E 2.75(wt)-.275 G 2.75(oa)-2.75 G
(ncestor windo)-2.75 E(ws until some)-.275 E(client has e)99.5 247.5 Q
(xpressed interest in handling that type of e)-.165 E -.165(ve)-.275 G
(nt or until the e).165 E -.165(ve)-.275 G(nt is discarded).165 E -.165
(ex)99.5 260.5 S(plicitly).165 E(.)-.715 E F0(Ev)72 277.4 Q(ent sour)
-.11 E(ce)-.198 E F1(The deepest vie)99.5 294.3 Q -.11(wa)-.275 G
(ble windo).11 E 2.75(wt)-.275 G
(hat the pointer is in is called the source of a de)-2.75 E
(vice-related)-.275 E -2.365 -.275(ev e)99.5 307.3 T(nt.).275 E F0(Ev)72
324.2 Q(ent synchr)-.11 E(onization)-.198 E F1
(There are certain race conditions possible when demultiple)99.5 341.1 Q
(xing de)-.165 E(vice e)-.275 E -.165(ve)-.275 G(nts to clients \(in)
.165 E(particular)99.5 354.1 Q 2.75(,d)-.44 G
(eciding where pointer and k)-2.75 E -.165(ey)-.11 G(board e).165 E
-.165(ve)-.275 G(nts should be sent when in the middle).165 E(of windo)
99.5 367.1 Q 2.75(wm)-.275 G(anagement operations\).)-2.75 E(The e)5.5 E
-.165(ve)-.275 G(nt synchronization mechanism allo).165 E(ws syn-)-.275
E(chronous processing of de)99.5 380.1 Q(vice e)-.275 E -.165(ve)-.275 G
(nts.).165 E F0(Exposur)72 397 Q 2.75(ee)-.198 G -.11(ve)-2.915 G(nt).11
E F1(Serv)99.5 413.9 Q(ers do not guarantee to preserv)-.165 E 2.75(et)
-.165 G(he contents of windo)-2.75 E(ws when windo)-.275 E
(ws are obscured)-.275 E(or recon\214gured.)99.5 426.9 Q(Exposure e)5.5
E -.165(ve)-.275 G
(nts are sent to clients to inform them when contents of).165 E(re)99.5
439.9 Q(gions of windo)-.165 E(ws ha)-.275 E .33 -.165(ve b)-.22 H
(een lost.).165 E F0(Extension)72 456.8 Q F1(Named e)99.5 473.7 Q
(xtensions to the core protocol can be de\214ned to e)-.165 E
(xtend the system.)-.165 E(Extensions to)5.5 E
(output requests, resources, and e)99.5 486.7 Q -.165(ve)-.275 G
(nt types are all possible and e).165 E(xpected.)-.165 E F0 -.275(Fo)72
503.6 S(nt).275 E F1 2.75(Af)99.5 520.5 S
(ont is an array of glyphs \(typically characters\).)-2.75 E
(The protocol does no translation or)5.5 E
(interpretation of character sets.)99.5 533.5 Q
(The client simply indicates v)5.5 E(alues used to inde)-.275 E 2.75(xt)
-.165 G(he glyph)-2.75 E(array)99.5 546.5 Q 5.5(.A)-.715 G
(font contains additional metric information to determine inter)-2.75 E
(glyph and interline)-.198 E(spacing.)99.5 559.5 Q F0 -.275(Fo)72 576.4
S(nt glyph).275 E F1(The abstract graphical symbol for an inde)99.5
593.3 Q 2.75(xi)-.165 G(nto a font.)-2.75 E F0(Fr)72 610.2 Q(ozen e)
-.198 E -.11(ve)-.165 G(nts).11 E F1(Clients can freeze e)99.5 627.1 Q
-.165(ve)-.275 G(nt processing during k).165 E -.165(ey)-.11 G
(board and pointer grabs.).165 E F0(GC)72 644 Q F1(GC is an abbre)99.5
660.9 Q(viation for graphics conte)-.275 E 2.75(xt. See)-.165 F F0
(Graphics context)2.75 E F1(.)A F0(Glyph)72 677.8 Q F1
(An identi\214ed abstract graphical symbol independent of an)99.5 694.7
Q 2.75(ya)-.165 G(ctual image.)-2.75 E(\(ISO/IEC/DIS)5.5 E
(9541-1\) An abstract visual representation of a graphic character)99.5
707.7 Q 2.75(,n)-.44 G(ot bound to a codepoint.)-2.75 E F0(478)279.75
769 Q 0 Cg EP
%%Page: 479 484
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E(Glyph image)72 85 Q/F1 11
/Times-Roman@0 SF(An image of a glyph, as obtained from a glyph represe\
ntation displayed on a presentation)99.5 101.9 Q(surf)99.5 114.9 Q 2.75
(ace. \(ISO/IEC/DIS)-.11 F(9541-1\))2.75 E F0(Grab)72 131.8 Q F1 -2.365
-.275(Ke y)99.5 148.7 T(board k).275 E -.165(ey)-.11 G(s, the k).165 E
-.165(ey)-.11 G(board, pointer b).165 E(uttons, the pointer)-.22 E 2.75
(,a)-.44 G(nd the serv)-2.75 E(er can be grabbed for)-.165 E -.165(ex)
99.5 161.7 S(clusi).165 E .33 -.165(ve u)-.275 H(se by a client.).165 E
(In general, these f)5.5 E
(acilities are not intended to be used by normal)-.11 E(applications b)
99.5 174.7 Q(ut are intended for v)-.22 E(arious input and windo)-.275 E
2.75(wm)-.275 G(anagers to implement v)-2.75 E(arious)-.275 E
(styles of user interf)99.5 187.7 Q(aces.)-.11 E F0(Graphics context)72
204.6 Q F1 -1.221(Va)99.5 221.5 S
(rious information for graphics output is stored in a graphics conte)
1.221 E(xt \(GC\), such as fore-)-.165 E(ground pix)99.5 234.5 Q
(el, background pix)-.165 E(el, line width, clipping re)-.165 E
(gion, and so on.)-.165 E 2.75(Ag)5.5 G(raphics conte)-2.75 E(xt)-.165 E
(can only be used with dra)99.5 247.5 Q -.11(wa)-.165 G(bles that ha).11
E .33 -.165(ve t)-.22 H(he same root and the same depth as the graphics)
.165 E(conte)99.5 260.5 Q(xt.)-.165 E F0(Gra)72 277.4 Q(vity)-.275 E F1
(The contents of windo)99.5 294.3 Q(ws and windo)-.275 E(ws themselv)
-.275 E(es ha)-.165 E .33 -.165(ve a g)-.22 H(ra).165 E(vity)-.22 E 2.75
(,w)-.715 G(hich determines ho)-2.75 E(w)-.275 E(the contents mo)99.5
307.3 Q .33 -.165(ve w)-.165 H(hen a windo).165 E 2.75(wi)-.275 G 2.75
(sr)-2.75 G 2.75(esized. See)-2.75 F F0(Bit gra)2.75 E(vity)-.275 E F1
(and)2.75 E F0 -.198(Wi)2.75 G(ndo).198 E 2.75(wg)-.11 G(ra)-2.75 E
(vity)-.275 E F1(.)A F0(GrayScale)72 324.2 Q(GrayScale)100.416 341.1 Q
F1(can be vie)3.666 E(wed as a de)-.275 E(generate case of)-.165 E F0
(PseudoColor)3.666 E F1 2.75(,i).916 G 2.75(nw)-2.75 G
(hich the red, green,)-2.75 E(and blue v)99.5 354.1 Q(alues in an)-.275
E 2.75(yg)-.165 G -2.365 -.275(iv e)-2.75 H 2.75(nc).275 G
(olormap entry are equal and thus, produce shades of gray)-2.75 E(.)
-.715 E(The gray v)99.5 367.1 Q(alues can be changed dynamically)-.275 E
(.)-.715 E F0(Host P)72 384 Q(ortable Character Encoding)-.22 E F1
(The encoding of the X Portable Character Set on the host.)99.5 400.9 Q
(The encoding itself is not)5.5 E(de\214ned by this standard, b)99.5
413.9 Q
(ut the encoding must be the same in all locales supported by Xlib)-.22
E(on the host.)99.5 426.9 Q(If a string is said to be in the Host Porta\
ble Character Encoding, then it only)5.5 E(contains characters from the\
 X Portable Character Set, in the host encoding.)99.5 439.9 Q F0
(Hotspot)72 456.8 Q F1 2.75(Ac)99.5 473.7 S(ursor has an associated hot\
spot, which de\214nes the point in the cursor corresponding to)-2.75 E
(the coordinates reported for the pointer)99.5 486.7 Q(.)-.605 E F0
(Identi\214er)72 503.6 Q F1(An identi\214er is a unique v)99.5 520.5 Q
(alue associated with a resource that clients use to name that)-.275 E
2.75(resource. The)99.5 533.5 R(identi\214er can be used o)2.75 E -.165
(ve)-.165 G 2.75(ra).165 G .33 -.165(ny c)-2.75 H
(onnection to name the resource.).165 E F0(Inferiors)72 550.4 Q F1
(The inferiors of a windo)99.5 567.3 Q 2.75(wa)-.275 G
(re all of the subwindo)-2.75 E(ws nested belo)-.275 E 2.75(wi)-.275 G
(t: the children, the chil-)-2.75 E(dren')99.5 580.3 Q 2.75(sc)-.605 G
(hildren, and so on.)-2.75 E F0(Input f)72 597.2 Q(ocus)-.275 E F1
(The input focus is usually a windo)99.5 614.1 Q 2.75(wd)-.275 G
(e\214ning the scope for processing of k)-2.75 E -.165(ey)-.11 G
(board input.).165 E(If)5.5 E 2.75(ag)99.5 627.1 S(enerated k)-2.75 E
-.165(ey)-.11 G(board e).165 E -.165(ve)-.275 G(nt usually w).165 E
(ould be reported to this windo)-.11 E 2.75(wo)-.275 G 2.75(ro)-2.75 G
(ne of its inferiors,)-2.75 E(the e)99.5 640.1 Q -.165(ve)-.275 G
(nt is reported as usual.).165 E(Otherwise, the e)5.5 E -.165(ve)-.275 G
(nt is reported with respect to the focus).165 E(windo)99.5 653.1 Q 4.18
-.715(w. T)-.275 H(he input focus also can be set such that all k).715 E
-.165(ey)-.11 G(board e).165 E -.165(ve)-.275 G(nts are discarded and)
.165 E(such that the focus windo)99.5 666.1 Q 2.75(wi)-.275 G 2.75(sd)
-2.75 G(ynamically tak)-2.75 E(en to be the root windo)-.11 E 2.75(wo)
-.275 G 2.75(fw)-2.75 G(hate)-2.75 E -.165(ve)-.275 G 2.75(rs).165 G
(creen)-2.75 E(the pointer is on at each k)99.5 679.1 Q -.165(ey)-.11 G
(board e).165 E -.165(ve)-.275 G(nt.).165 E F0(479)279.75 769 Q 0 Cg EP
%%Page: 480 485
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E(Input manager)72 85 Q/F1 11
/Times-Roman@0 SF(Control o)99.5 101.9 Q -.165(ve)-.165 G 2.75(rk).165 G
-.165(ey)-2.86 G(board input is typically pro).165 E
(vided by an input manager client, which usually)-.165 E
(is part of a windo)99.5 114.9 Q 2.75(wm)-.275 G(anager)-2.75 E(.)-.605
E F0(InputOnly windo)72 131.8 Q(w)-.11 E F1(An)99.5 148.7 Q F0
(InputOnly)3.666 E F1(windo)3.666 E 2.75(wi)-.275 G 2.75(saw)-2.75 G
(indo)-2.75 E 2.75(wt)-.275 G(hat cannot be used for graphics requests.)
-2.75 E F0(InputOnly)6.416 E F1(windo)99.5 161.7 Q(ws are in)-.275 E
(visible and are used to control such things as cursors, input e)-.44 E
-.165(ve)-.275 G(nt generation,).165 E(and grabbing.)99.5 174.7 Q F0
(InputOnly)6.416 E F1(windo)3.666 E(ws cannot ha)-.275 E -.165(ve)-.22 G
F0(InputOutput)3.831 E F1(windo)3.666 E(ws as inferiors.)-.275 E F0
(InputOutput windo)72 191.6 Q(w)-.11 E F1(An)99.5 208.5 Q F0
(InputOutput)3.666 E F1(windo)3.666 E 2.75(wi)-.275 G 2.75(st)-2.75 G
(he normal kind of windo)-2.75 E 2.75(wt)-.275 G
(hat is used for both input and out-)-2.75 E(put.)99.5 221.5 Q F0
(InputOutput)6.416 E F1(windo)3.666 E(ws can ha)-.275 E .33 -.165(ve b)
-.22 H(oth).165 E F0(InputOutput)3.666 E F1(and)3.666 E F0(InputOnly)
3.666 E F1(windo)3.666 E(ws as)-.275 E(inferiors.)99.5 234.5 Q F0(Inter)
72 251.4 Q(nationalization)-.165 E F1(The process of making softw)99.5
268.3 Q(are adaptable to the requirements of dif)-.11 E(ferent nati)
-.275 E .33 -.165(ve l)-.275 H(an-).165 E
(guages, local customs, and character string encodings.)99.5 281.3 Q
(Making a computer program adapt-)5.5 E(able to dif)99.5 294.3 Q(ferent\
 locales without program source modi\214cations or recompilation.)-.275
E F0(ISO2022)72 311.2 Q F1(ISO standard for code e)99.5 328.1 Q
(xtension techniques for 7-bit and 8-bit coded character sets.)-.165 E
F0 -.275(Ke)72 345 S 2.75(yg).275 G(rab)-2.75 E(bing)-.11 E F1 -2.365
-.275(Ke y)99.5 361.9 T 2.75(so).275 G 2.75(nt)-2.75 G(he k)-2.75 E
-.165(ey)-.11 G(board can be passi).165 E -.165(ve)-.275 G
(ly grabbed by a client.).165 E(When the k)5.5 E .33 -.165(ey i)-.11 H
2.75(sp).165 G(ressed, the)-2.75 E -.11(ke)99.5 374.9 S
(yboard is then acti)-.055 E -.165(ve)-.275 G(ly grabbed by the client.)
.165 E F0 -.275(Ke)72 391.8 S(yboard grab).275 E(bing)-.11 E F1 2.75(Ac)
99.5 408.7 S(lient can acti)-2.75 E -.165(ve)-.275 G
(ly grab control of the k).165 E -.165(ey)-.11 G(board, and k).165 E .33
-.165(ey e)-.11 H -.165(ve)-.11 G(nts will be sent to that client).165 E
(rather than the client the e)99.5 421.7 Q -.165(ve)-.275 G(nts w).165 E
(ould normally ha)-.11 E .33 -.165(ve b)-.22 H(een sent to.).165 E F0
-.275(Ke)72 438.6 S(ysym).275 E F1(An encoding of a symbol on a k)99.5
455.5 Q -.165(ey)-.11 G(cap on a k).165 E -.165(ey)-.11 G(board.).165 E
F0(Latin-1)72 472.4 Q F1
(The coded character set de\214ned by the ISO8859-1 standard.)99.5 489.3
Q F0(Latin P)72 506.2 Q(ortable Character Encoding)-.22 E F1(The encodi\
ng of the X Portable Character Set using the Latin-1 codepoints plus AS\
CII con-)99.5 523.1 Q(trol characters.)99.5 536.1 Q(If a string is said\
 to be in the Latin Portable Character Encoding, then it)5.5 E(only con\
tains characters from the X Portable Character Set, not all of Latin-1.)
99.5 549.1 Q F0(480)279.75 769 Q 0 Cg EP
%%Page: 481 486
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E(Locale)72 85 Q/F1 11/Times-Roman@0 SF
(The international en)99.5 101.9 Q
(vironment of a computer program de\214ning the `)-.44 E(`localized')
-.814 E 2.75('b)-.814 G(eha)-2.75 E(vior of)-.22 E
(that program at run-time.)99.5 114.9 Q
(This information can be established from one or more sets of)5.5 E
(localization data.)99.5 127.9 Q(ANSI C de\214nes locale-speci\214c pro\
cessing by C system library calls.)5.5 E(See)5.5 E(ANSI C and the X/Ope\
n Portability Guide speci\214cations for more details.)99.5 140.9 Q
(In this speci\214ca-)5.5 E
(tion, on implementations that conform to the ANSI C library)99.5 153.9
Q 2.75(,t)-.715 G(he `)-2.75 E(`current locale')-.814 E 2.75('i)-.814 G
2.75(st)-2.75 G(he)-2.75 E(current setting of the LC_CTYPE)99.5 166.9 Q
F0(setlocale)3.666 E F1(cate)3.666 E(gory)-.165 E 5.5(.A)-.715 G
(ssociated with each locale is a te)-5.5 E(xt)-.165 E 2.75
(encoding. When)99.5 179.9 R(te)2.75 E(xt is processed in the conte)
-.165 E(xt of a locale, the te)-.165 E(xt must be in the encod-)-.165 E
(ing of the locale.)99.5 192.9 Q(The current locale af)5.5 E
(fects Xlib in its:)-.275 E 23.65<8345>99.5 209.8 S
(ncoding and processing of input method te)-23.65 E(xt)-.165 E 23.65
<8345>99.5 226.7 S(ncoding of resource \214les and v)-23.65 E(alues)
-.275 E 23.65<8345>99.5 243.6 S(ncoding and imaging of te)-23.65 E
(xt strings)-.165 E 23.65<8345>99.5 260.5 S
(ncoding and decoding for inter)-23.65 E(-client te)-.22 E
(xt communication)-.165 E F0(Locale name)72 277.4 Q F1(The identi\214er\
 used to select the desired locale for the host C library and X library\
 functions.)99.5 294.3 Q
(On ANSI C library compliant systems, the locale ar)99.5 307.3 Q
(gument to the)-.198 E F0(setlocale)3.666 E F1(function.)3.666 E F0
(Localization)72 324.2 Q F1(The process of establishing information wit\
hin a computer system speci\214c to the operation)99.5 341.1 Q
(of particular nati)99.5 354.1 Q .33 -.165(ve l)-.275 H
(anguages, local customs and coded character sets.).165 E(\(XPG3\))5.5 E
F0(Mapped)72 371 Q F1 2.75(Aw)99.5 387.9 S(indo)-2.75 E 2.75(wi)-.275 G
2.75(ss)-2.75 G
(aid to be mapped if a map call has been performed on it.)-2.75 E
(Unmapped win-)5.5 E(do)99.5 400.9 Q(ws and their inferiors are ne)-.275
E -.165(ve)-.275 G 2.75(rv).165 G(ie)-2.75 E -.11(wa)-.275 G
(ble or visible.).11 E F0(Modi\214er k)72 417.8 Q(eys)-.11 E F1
(Shift, Control, Meta, Super)99.5 434.7 Q 2.75(,H)-.44 G(yper)-2.75 E
2.75(,A)-.44 G(lt, Compose, Apple, CapsLock, ShiftLock, and simi-)-2.75
E(lar k)99.5 447.7 Q -.165(ey)-.11 G 2.75(sa).165 G
(re called modi\214er k)-2.75 E -.165(ey)-.11 G(s.).165 E F0(Monochr)72
464.6 Q(ome)-.198 E F1(Monochrome is a special case of)99.5 481.5 Q F0
(StaticGray)3.666 E F1(in which there are only tw)3.666 E 2.75(oc)-.11 G
(olormap entries.)-2.75 E F0(Multibyte)72 498.4 Q F1 2.75(Ac)99.5 515.3
S(haracter whose codepoint is stored in more than one byte; an)-2.75 E
2.75(ye)-.165 G(ncoding which can con-)-2.75 E
(tain multibyte characters; te)99.5 528.3 Q(xt in a multibyte encoding.)
-.165 E(The `)5.5 E(`char *')-.814 E 2.75('n)-.814 G(ull-terminated)
-2.75 E(string datatype in ANSI C.)99.5 541.3 Q
(Note that references in this document to multibyte strings)5.5 E
(imply only that the strings)99.5 554.3 Q/F2 11/Times-Italic@0 SF(may)
2.75 E F1(contain multibyte characters.)2.75 E F0(Obscur)72 571.2 Q(e)
-.198 E F1 2.75(Aw)99.5 588.1 S(indo)-2.75 E 2.75(wi)-.275 G 2.75(so)
-2.75 G(bscured if some other windo)-2.75 E 2.75(wo)-.275 G(bscures it.)
-2.75 E 2.75(Aw)5.5 G(indo)-2.75 E 2.75(wc)-.275 G(an be partially)-2.75
E(obscured and so still ha)99.5 601.1 Q .33 -.165(ve v)-.22 H(isible re)
.165 E 2.75(gions. W)-.165 F(indo)-.44 E 2.75(wAo)-.275 G(bscures windo)
-2.75 E 2.75(wBi)-.275 G 2.75(fb)-2.75 G(oth are vie)-2.75 E(w-)-.275 E
(able)99.5 614.1 Q F0(InputOutput)3.666 E F1(windo)3.666 E
(ws, if A is higher in the global stacking order)-.275 E 2.75(,a)-.44 G
(nd if the rectangle)-2.75 E(de\214ned by the outside edges of A inters\
ects the rectangle de\214ned by the outside edges of B.)99.5 627.1 Q
(Note the distinction between obscures and occludes.)99.5 640.1 Q
(Also note that windo)5.5 E 2.75(wb)-.275 G(orders are)-2.75 E
(included in the calculation.)99.5 653.1 Q F0(481)279.75 769 Q 0 Cg EP
%%Page: 482 487
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E(Occlude)72 85 Q/F1 11/Times-Roman@0 SF
2.75(Aw)99.5 101.9 S(indo)-2.75 E 2.75(wi)-.275 G 2.75(so)-2.75 G
(ccluded if some other windo)-2.75 E 2.75(wo)-.275 G(ccludes it.)-2.75 E
-.44(Wi)5.5 G(ndo).44 E 2.75(wAo)-.275 G(ccludes windo)-2.75 E 2.75(wBi)
-.275 G(f)-2.75 E
(both are mapped, if A is higher in the global stacking order)99.5 114.9
Q 2.75(,a)-.44 G(nd if the rectangle de\214ned by)-2.75 E(the outside e\
dges of A intersects the rectangle de\214ned by the outside edges of B.)
99.5 127.9 Q(Note the)5.5 E(distinction between occludes and obscures.)
99.5 140.9 Q(Also note that windo)5.5 E 2.75(wb)-.275 G
(orders are included in)-2.75 E(the calculation and that)99.5 153.9 Q F0
(InputOnly)3.666 E F1(windo)3.666 E(ws ne)-.275 E -.165(ve)-.275 G 2.75
(ro).165 G(bscure other windo)-2.75 E(ws b)-.275 E(ut can occlude)-.22 E
(other windo)99.5 166.9 Q(ws.)-.275 E F0 -.11(Pa)72 183.8 S(dding).11 E
F1(Some padding bytes are inserted in the data stream to maintain align\
ment of the protocol)99.5 200.7 Q(requests on natural boundaries.)99.5
213.7 Q(This increases ease of portability to some machine archi-)5.5 E
(tectures.)99.5 226.7 Q F0 -.11(Pa)72 243.6 S -.198(re).11 G(nt windo)
.198 E(w)-.11 E F1(If C is a child of P)99.5 260.5 Q 2.75(,t)-1.221 G
(hen P is the parent of C.)-2.75 E F0 -.11(Pa)72 277.4 S(ssi).11 E .22
-.11(ve g)-.11 H(rab).11 E F1(Grabbing a k)99.5 294.3 Q .33 -.165(ey o)
-.11 H 2.75(rb).165 G(utton is a passi)-2.97 E .33 -.165(ve g)-.275 H
(rab).165 E 5.5(.T)-.44 G(he grab acti)-5.5 E -.275(va)-.275 G
(tes when the k).275 E .33 -.165(ey o)-.11 H 2.75(rb).165 G(utton is)
-2.97 E(actually pressed.)99.5 307.3 Q F0(Pixel v)72 324.2 Q(alue)-.11 E
F1 2.75(Ap)99.5 341.1 S(ix)-2.75 E(el is an N-bit v)-.165 E
(alue, where N is the number of bit planes used in a particular windo)
-.275 E(w)-.275 E(or pixmap \(that is, is the depth of the windo)99.5
354.1 Q 2.75(wo)-.275 G 2.75(rp)-2.75 G 2.75(ixmap\). A)-2.75 F(pix)2.75
E(el in a windo)-.165 E 2.75(wi)-.275 G(nde)-2.75 E -.165(xe)-.165 G
2.75(sa).165 G(colormap to deri)99.5 367.1 Q .33 -.165(ve a)-.275 H 2.75
(na).165 G(ctual color to be displayed.)-2.75 E F0(Pixmap)72 384 Q F1
2.75(Ap)99.5 413.9 S(ixmap is a three-dimensional array of bits.)-2.75 E
2.75(Ap)5.5 G(ixmap is normally thought of as a tw)-2.75 E(o-)-.11 E
(dimensional array of pix)99.5 427.198 Q(els, where each pix)-.165 E
(el can be a v)-.165 E(alue from 0 to 2)-.275 E/F2 7.7/Times-Italic@0 SF
(N).539 -4.62 M F1(\2551, and where N)1.397 4.62 M
(is the depth \(z axis\) of the pixmap.)99.5 440.198 Q 2.75(Ap)5.5 G
(ixmap can also be thought of as a stack of N bit-)-2.75 E 2.75(maps. A)
99.5 453.198 R(pixmap can only be used on the screen that it w)2.75 E
(as created in.)-.11 E F0(Plane)72 470.098 Q F1(When a pixmap or windo)
99.5 486.998 Q 2.75(wi)-.275 G 2.75(st)-2.75 G
(hought of as a stack of bitmaps, each bitmap is called a)-2.75 E
(plane or bit plane.)99.5 499.998 Q F0(Plane mask)72 516.898 Q F1
(Graphics operations can be restricted to only af)99.5 533.798 Q
(fect a subset of bit planes of a destination.)-.275 E 2.75(Ap)99.5
546.798 S
(lane mask is a bit mask describing which planes are to be modi\214ed.)
-2.75 E(The plane mask is)5.5 E(stored in a graphics conte)99.5 559.798
Q(xt.)-.165 E F0 -.22(Po)72 576.698 S(inter).22 E F1
(The pointer is the pointing de)99.5 593.598 Q
(vice currently attached to the cursor and track)-.275 E(ed on the)-.11
E(screens.)99.5 606.598 Q F0 -.22(Po)72 623.498 S(inter grab).22 E(bing)
-.11 E F1 2.75(Ac)99.5 640.398 S(lient can acti)-2.75 E -.165(ve)-.275 G
(ly grab control of the pointer).165 E 5.5(.T)-.605 G(hen b)-5.5 E
(utton and motion e)-.22 E -.165(ve)-.275 G(nts will be).165 E
(sent to that client rather than the client the e)99.5 653.398 Q -.165
(ve)-.275 G(nts w).165 E(ould normally ha)-.11 E .33 -.165(ve b)-.22 H
(een sent to.).165 E F0 -.22(Po)72 670.298 S(inting de).22 E(vice)-.165
E F1 2.75(Ap)99.5 687.198 S(ointing de)-2.75 E
(vice is typically a mouse, tablet, or some other de)-.275 E
(vice with ef)-.275 E(fecti)-.275 E .33 -.165(ve d)-.275 H(imen-).165 E
(sional motion.)99.5 700.198 Q
(The core protocol de\214nes only one visible cursor)5.5 E 2.75(,w)-.44
G(hich tracks whate)-2.75 E -.165(ve)-.275 G(r).165 E(pointing de)99.5
713.198 Q(vice is attached as the pointer)-.275 E(.)-.605 E F0(482)
279.75 769 Q 0 Cg EP
%%Page: 483 488
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E(POSIX)72 85 Q/F1 11/Times-Roman@0 SF
(Portable Operating System Interf)99.5 101.9 Q
(ace, ISO/IEC 9945-1 \(IEEE Std 1003.1\).)-.11 E F0(POSIX P)72 118.8 Q
(ortable Filename Character Set)-.22 E F1(The set of 65 characters whic\
h can be used in naming \214les on a POSIX-compliant host that)99.5
135.7 Q(are correctly processed in all locales.)99.5 148.7 Q
(The set is:)5.5 E(a..z A..Z 0..9 ._-)99.5 172.1 Q F0(Pr)72 195.5 Q
(operty)-.198 E F1 -.44(Wi)99.5 212.4 S(ndo).44 E(ws can ha)-.275 E .33
-.165(ve a)-.22 H(ssociated properties that consist of a name, a type, \
a data format, and).165 E(some data.)99.5 225.4 Q
(The protocol places no interpretation on properties.)5.5 E(The)5.5 E
2.75(ya)-.165 G(re intended as a)-2.75 E
(general-purpose naming mechanism for clients.)99.5 238.4 Q -.165(Fo)5.5
G 2.75(re).165 G(xample, clients might use properties)-2.915 E(to share\
 information such as resize hints, program names, and icon formats with\
 a windo)99.5 251.4 Q(w)-.275 E(manager)99.5 264.4 Q(.)-.605 E F0(Pr)72
281.3 Q(operty list)-.198 E F1(The property list of a windo)99.5 298.2 Q
2.75(wi)-.275 G 2.75(st)-2.75 G(he list of properties that ha)-2.75 E
.33 -.165(ve b)-.22 H(een de\214ned for the win-).165 E(do)99.5 311.2 Q
-.715(w.)-.275 G F0(PseudoColor)72 328.1 Q(PseudoColor)100.416 345 Q F1
(is a class of colormap in which a pix)3.666 E(el v)-.165 E(alue inde)
-.275 E -.165(xe)-.165 G 2.75(st).165 G(he colormap entry to)-2.75 E
(produce an independent RGB v)99.5 358 Q
(alue; that is, the colormap is vie)-.275 E(wed as an array of triples)
-.275 E(\(RGB v)99.5 371 Q 2.75(alues\). The)-.275 F(RGB v)2.75 E
(alues can be changed dynamically)-.275 E(.)-.715 E F0(Rectangle)72
387.9 Q F1 2.75(Ar)99.5 404.8 S(ectangle speci\214ed by [x,y)-2.75 E(,w)
-.715 E
(,h] has an in\214nitely thin outline path with corners at [x,y],)-.715
E([x+w)99.5 417.8 Q(,y], [x+w)-.715 E(,y+h], and [x, y+h].)-.715 E
(When a rectangle is \214lled, the lo)5.5 E(wer)-.275 E
(-right edges are not)-.22 E(dra)99.5 430.8 Q 2.75(wn. F)-.165 F(or e)
-.165 E(xample, if w=h=0, nothing w)-.165 E(ould be dra)-.11 E 2.75
(wn. F)-.165 F(or w=h=1, a single pix)-.165 E(el w)-.165 E(ould)-.11 E
(be dra)99.5 443.8 Q(wn.)-.165 E F0(Redir)72 460.7 Q(ecting contr)-.198
E(ol)-.198 E F1 -.44(Wi)99.5 477.6 S(ndo).44 E 2.75(wm)-.275 G
(anagers \(or client programs\) may enforce windo)-2.75 E 2.75(wl)-.275
G(ayout polic)-2.75 E 2.75(yi)-.165 G 2.75(nv)-2.75 G(arious w)-3.025 E
(ays.)-.11 E
(When a client attempts to change the size or position of a windo)99.5
490.6 Q 1.43 -.715(w, t)-.275 H(he operation may be).715 E(redirected t\
o a speci\214ed client rather than the operation actually being perform\
ed.)99.5 503.6 Q F0(Reply)72 520.5 Q F1(Information requested by a clie\
nt program using the X protocol is sent back to the client)99.5 537.4 Q
(with a reply)99.5 550.4 Q 5.5(.B)-.715 G(oth e)-5.5 E -.165(ve)-.275 G
(nts and replies are multiple).165 E -.165(xe)-.165 G 2.75(do).165 G
2.75(nt)-2.75 G(he same connection.)-2.75 E(Most)5.5 E
(requests do not generate replies, b)99.5 563.4 Q
(ut some requests generate multiple replies.)-.22 E F0(Request)72 580.3
Q F1 2.75(Ac)99.5 597.2 S(ommand to the serv)-2.75 E
(er is called a request.)-.165 E(It is a single block of data sent o)5.5
E -.165(ve)-.165 G 2.75(rac).165 G(onnec-)-2.75 E(tion.)99.5 610.2 Q F0
(Resour)72 627.1 Q(ce)-.198 E F1 -.44(Wi)99.5 644 S(ndo).44 E
(ws, pixmaps, cursors, fonts, graphics conte)-.275 E
(xts, and colormaps are kno)-.165 E(wn as)-.275 E 2.75(resources. The)
99.5 657 R 2.75(ya)-.165 G(ll ha)-2.75 E .33 -.165(ve u)-.22 H
(nique identi\214ers associated with them for naming purposes.).165 E
(The)5.5 E(lifetime of a resource usually is bounded by the lifetime of\
 the connection o)99.5 670 Q -.165(ve)-.165 G 2.75(rw).165 G(hich the)
-2.75 E(resource w)99.5 683 Q(as created.)-.11 E F0(483)279.75 769 Q 0
Cg EP
%%Page: 484 489
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E(RGB v)72 85 Q(alues)-.11 E/F1 11
/Times-Roman@0 SF(RGB v)99.5 101.9 Q
(alues are the red, green, and blue intensity v)-.275 E
(alues that are used to de\214ne a color)-.275 E(.)-.605 E(These v)99.5
114.9 Q(alues are al)-.275 E -.11(wa)-.11 G
(ys represented as 16-bit, unsigned numbers, with 0 the minimum).11 E
(intensity and 65535 the maximum intensity)99.5 127.9 Q 5.5(.T)-.715 G
(he X serv)-5.5 E(er scales these v)-.165 E(alues to match the)-.275 E
(display hardw)99.5 140.9 Q(are.)-.11 E F0(Root)72 157.8 Q F1
(The root of a pixmap or graphics conte)99.5 174.7 Q
(xt is the same as the root of whate)-.165 E -.165(ve)-.275 G 2.75(rd)
.165 G(ra)-2.75 E -.11(wa)-.165 G(ble w).11 E(as)-.11 E
(used when the pixmap or GC w)99.5 187.7 Q(as created.)-.11 E
(The root of a windo)5.5 E 2.75(wi)-.275 G 2.75(st)-2.75 G
(he root windo)-2.75 E 2.75(wu)-.275 G(nder)-2.75 E(which the windo)99.5
200.7 Q 2.75(ww)-.275 G(as created.)-2.86 E F0(Root windo)72 217.6 Q(w)
-.11 E F1(Each screen has a root windo)99.5 234.5 Q 2.75(wc)-.275 G
-.165(ove)-2.75 G(ring it.).165 E(The root windo)5.5 E 2.75(wc)-.275 G
(annot be recon\214gured or)-2.75 E(unmapped, b)99.5 247.5 Q
(ut otherwise it acts as a full-\215edged windo)-.22 E 4.18 -.715(w. A)
-.275 H(root windo)3.465 E 2.75(wh)-.275 G(as no parent.)-2.75 E F0(Sa)
72 264.4 Q .22 -.11(ve s)-.275 H(et).11 E F1(The sa)99.5 281.3 Q .33
-.165(ve s)-.22 H(et of a client is a list of other clients' windo).165
E(ws that, if the)-.275 E 2.75(ya)-.165 G(re inferiors of one of)-2.75 E
(the client')99.5 294.3 Q 2.75(sw)-.605 G(indo)-2.75 E
(ws at connection close, should not be destro)-.275 E
(yed and that should be)-.11 E(remapped if currently unmapped.)99.5
307.3 Q(Sa)5.5 E .33 -.165(ve s)-.22 H(ets are typically used by windo)
.165 E 2.75(wm)-.275 G(anagers to)-2.75 E -.22(avo)99.5 320.3 S
(id lost windo).22 E(ws if the manager should terminate abnormally)-.275
E(.)-.715 E F0(Scanline)72 337.2 Q F1 2.75(As)99.5 354.1 S
(canline is a list of pix)-2.75 E(el or bit v)-.165 E(alues vie)-.275 E
(wed as a horizontal ro)-.275 E 2.75(w\()-.275 G(all v)-2.75 E(alues ha)
-.275 E(ving the)-.22 E(same y coordinate\) of an image, with the v)99.5
367.1 Q(alues ordered by increasing the x coordinate.)-.275 E F0
(Scanline order)72 384 Q F1(An image represented in scanline order cont\
ains scanlines ordered by increasing the y coor)99.5 400.9 Q(-)-.22 E
(dinate.)99.5 413.9 Q F0(Scr)72 430.8 Q(een)-.198 E F1 2.75(As)99.5
447.7 S(erv)-2.75 E(er can pro)-.165 E(vide se)-.165 E -.165(ve)-.275 G
(ral independent screens, which typically ha).165 E .33 -.165(ve p)-.22
H -.055(hy).165 G(sically indepen-).055 E(dent monitors.)99.5 460.7 Q
(This w)5.5 E(ould be the e)-.11 E
(xpected con\214guration when there is only a single)-.165 E -.11(ke)
99.5 473.7 S(yboard and pointer shared among the screens.)-.055 E(A)5.5
E F0(Scr)3.666 E(een)-.198 E F1(structure contains the informa-)3.666 E
(tion about that screen and is link)99.5 486.7 Q(ed to the)-.11 E F0
(Display)3.666 E F1(structure.)3.666 E F0(Selection)72 503.6 Q F1 2.75
(As)99.5 520.5 S
(election can be thought of as an indirect property with dynamic type.)
-2.75 E(That is, rather)5.5 E(than ha)99.5 533.5 Q
(ving the property stored in the X serv)-.22 E(er)-.165 E 2.75(,i)-.44 G
2.75(ti)-2.75 G 2.75(sm)-2.75 G(aintained by some client \(the o)-2.75 E
(wner\).)-.275 E 2.75(As)99.5 546.5 S(election is global and is thought\
 of as belonging to the user and being maintained by)-2.75 E
(clients, rather than being pri)99.5 559.5 Q -.275(va)-.275 G
(te to a particular windo).275 E 2.75(ws)-.275 G(ubhierarch)-2.75 E 2.75
(yo)-.055 G 2.75(rap)-2.75 G(articular set of)-2.75 E 2.75
(clients. When)99.5 572.5 R 2.75(ac)2.75 G(lient asks for the contents \
of a selection, it speci\214es a selection tar)-2.75 E(get)-.198 E(type\
, which can be used to control the transmitted representation of the co\
ntents.)99.5 585.5 Q -.165(Fo)5.5 G(r).165 E -.165(ex)99.5 598.5 S
(ample, if the selection is `).165 E(`the last thing the user click)
-.814 E(ed on,)-.11 E 1.628 -.814('' a)-.77 H(nd that is currently an)
.814 E(image, then the tar)99.5 611.5 Q(get type might specify whether \
the contents of the image should be sent)-.198 E
(in XY format or Z format.)99.5 624.5 Q(The tar)99.5 641.4 Q(get type c\
an also be used to control the class of contents transmitted; for e)
-.198 E(xample,)-.165 E(asking for the `)99.5 654.4 Q(`looks')-.814 E
2.75('\()-.814 G
(fonts, line spacing, indentation, and so forth\) of a paragraph selec-)
-2.75 E(tion, rather than the te)99.5 667.4 Q(xt of the paragraph.)-.165
E(The tar)5.5 E(get type can also be used for other pur)-.198 E(-)-.22 E
2.75(poses. The)99.5 680.4 R(protocol does not constrain the semantics.)
2.75 E F0(484)279.75 769 Q 0 Cg EP
%%Page: 485 490
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E(Ser)72 85 Q -.11(ve)-.11 G(r).11 E/F1
11/Times-Roman@0 SF(The serv)99.5 101.9 Q(er)-.165 E 2.75(,w)-.44 G
(hich is also referred to as the X serv)-2.75 E(er)-.165 E 2.75(,p)-.44
G(ro)-2.75 E(vides the basic windo)-.165 E(wing mecha-)-.275 E 2.75
(nism. It)99.5 114.9 R(handles IPC connections from clients, multiple)
2.75 E -.165(xe)-.165 G 2.75(sg).165 G(raphics requests onto the)-2.75 E
(screens, and demultiple)99.5 127.9 Q -.165(xe)-.165 G 2.75(si).165 G
(nput back to the appropriate clients.)-2.75 E F0(Ser)72 144.8 Q -.11
(ve)-.11 G 2.75(rg).11 G(rab)-2.75 E(bing)-.11 E F1(The serv)99.5 161.7
Q(er can be grabbed by a single client for e)-.165 E(xclusi)-.165 E .33
-.165(ve u)-.275 H 2.75(se. This).165 F(pre)2.75 E -.165(ve)-.275 G
(nts processing of).165 E(an)99.5 174.7 Q 2.75(yr)-.165 G
(equests from other client connections until the grab is completed.)
-2.75 E(This is typically)5.5 E
(only a transient state for such things as rubber)99.5 187.7 Q
(-banding, pop-up menus, or e)-.22 E -.165(xe)-.165 G(cuting).165 E
(requests indi)99.5 200.7 Q(visibly)-.275 E(.)-.715 E F0(Shift sequence)
72 217.6 Q F1(ISO2022 de\214nes control characters and escape sequences\
 which temporarily \(single shift\))99.5 234.5 Q
(or permanently \(locking shift\) cause a dif)99.5 247.5 Q
(ferent character set to be in ef)-.275 E(fect \(`)-.275 E(`in)-.814 E
-.22(vo)-.44 G(king').22 E 2.75('a)-.814 G(character set\).)99.5 260.5 Q
F0(Sibling)72 277.4 Q F1(Children of the same parent windo)99.5 294.3 Q
2.75(wa)-.275 G(re kno)-2.75 E(wn as sibling windo)-.275 E(ws.)-.275 E
F0(Stacking order)72 311.2 Q F1(Sibling windo)99.5 328.1 Q(ws, similar \
to sheets of paper on a desk, can stack on top of each other)-.275 E 5.5
(.W)-.605 G(in-)-5.94 E(do)99.5 341.1 Q(ws abo)-.275 E .33 -.165(ve b)
-.165 H(oth obscure and occlude lo).165 E(wer windo)-.275 E 2.75
(ws. The)-.275 F(relationship between sibling)2.75 E(windo)99.5 354.1 Q
(ws is kno)-.275 E(wn as the stacking order)-.275 E(.)-.605 E F0
(State-dependent encoding)72 371 Q F1(An encoding in which an in)99.5
387.9 Q -.22(vo)-.44 G
(cation of a charset can apply to multiple characters in).22 E 2.75
(sequence. A)99.5 400.9 R(state-dependent encoding be)2.75 E
(gins in an `)-.165 E(`initial state')-.814 E 2.75('a)-.814 G
(nd enters other `)-2.75 E(`shift)-.814 E(states')99.5 413.9 Q 2.75('w)
-.814 G(hen speci\214c `)-2.75 E(`shift sequences')-.814 E 2.75('a)-.814
G(re encountered in the byte sequence.)-2.75 E(In ISO2022)5.5 E
(terms, this means use of locking shifts, not single shifts.)99.5 426.9
Q F0(State-independent encoding)72 443.8 Q F1(An)99.5 460.7 Q 2.75(ye)
-.165 G(ncoding in which the in)-2.75 E -.22(vo)-.44 G
(cations of the charsets are \214x).22 E(ed, or span only a single char)
-.165 E(-)-.22 E(acter)99.5 473.7 Q 5.5(.I)-.605 G 2.75(nI)-5.5 G(SO202\
2 terms, this means use of at most single shifts, not locking shifts.)
-2.75 E F0(StaticColor)72 490.6 Q(StaticColor)100.416 507.5 Q F1
(can be vie)3.666 E(wed as a de)-.275 E(generate case of)-.165 E F0
(PseudoColor)3.666 E F1(in which the RGB v)3.666 E(alues)-.275 E
(are prede\214ned and read-only)99.5 520.5 Q(.)-.715 E F0(StaticGray)72
537.4 Q(StaticGray)100.416 554.3 Q F1(can be vie)3.666 E(wed as a de)
-.275 E(generate case of)-.165 E F0(GrayScale)3.666 E F1
(in which the gray v)3.666 E(alues are)-.275 E
(prede\214ned and read-only)99.5 567.3 Q 5.5(.T)-.715 G(he v)-5.5 E
(alues are typically linear or near)-.275 E(-linear increasing ramps.)
-.22 E F0(Status)72 584.2 Q F1(Man)99.5 601.1 Q 2.75(yX)-.165 G
(lib functions return a success status.)-2.75 E
(If the function does not succeed, ho)5.5 E(we)-.275 E -.165(ve)-.275 G
.88 -.44(r, i).165 H(ts).44 E(ar)99.5 614.1 Q
(guments are not disturbed.)-.198 E F0(Stipple)72 631 Q F1 2.75(As)99.5
647.9 S(tipple pattern is a bitmap that is used to tile a re)-2.75 E
(gion to serv)-.165 E 2.75(ea)-.165 G 2.75(sa)-2.75 G 2.75(na)-2.75 G
(dditional clip mask)-2.75 E(for a \214ll operation with the fore)99.5
660.9 Q(ground color)-.165 E(.)-.605 E F0(485)279.75 769 Q 0 Cg EP
%%Page: 486 491
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E(STRING encoding)72 85 Q/F1 11
/Times-Roman@0 SF(Latin-1, plus tab and ne)99.5 101.9 Q(wline.)-.275 E
F0(String Equi)72 118.8 Q -.11(va)-.11 G(lence).11 E F1 -1.1 -.88(Tw o)
99.5 135.7 T(ISO Latin-1 STRING8 v)3.63 E
(alues are considered equal if the)-.275 E 2.75(ya)-.165 G
(re the same length and if)-2.75 E
(corresponding bytes are either equal or are equi)99.5 148.7 Q -.275(va)
-.275 G(lent as follo).275 E 2.75(ws: decimal)-.275 F -.275(va)2.75 G
(lues 65 to 90).275 E(inclusi)99.5 161.7 Q .33 -.165(ve \()-.275 H
(characters `).165 E -.88(`A)-.814 G 1.628 -.814('' t)-.341 H 2.75(o`)
.814 G(`Z')-3.564 E('\) are pairwise equi)-.814 E -.275(va)-.275 G
(lent to decimal v).275 E(alues 97 to 122)-.275 E(inclusi)99.5 174.7 Q
.33 -.165(ve \()-.275 H(characters `).165 E(`a')-.814 E 2.75('t)-.814 G
2.75(o`)-2.75 G(`z')-3.564 E('\), decimal v)-.814 E
(alues 192 to 214 inclusi)-.275 E .33 -.165(ve \()-.275 H(characters `)
.165 E -.88(`A)-.814 G(gra)99.5 187.7 Q -.165(ve)-.22 G 1.628 -.814
('' t).165 H 2.75(o`).814 G(`O diaeresis')-3.564 E
('\) are pairwise equi)-.814 E -.275(va)-.275 G(lent to decimal v).275 E
(alues 224 to 246 inclusi)-.275 E -.165(ve)-.275 G(\(characters `)99.5
200.7 Q(`a gra)-.814 E -.165(ve)-.22 G 1.628 -.814('' t).165 H 2.75(o`)
.814 G(`o diaeresis')-3.564 E('\), and decimal v)-.814 E
(alues 216 to 222 inclusi)-.275 E .33 -.165(ve \()-.275 H(charac-).165 E
(ters `)99.5 213.7 Q(`O oblique')-.814 E 2.75('t)-.814 G 2.75(o`)-2.75 G
(`THORN')-3.564 E('\) are pairwise equi)-.814 E -.275(va)-.275 G
(lent to decimal v).275 E(alues 246 to 254)-.275 E(inclusi)99.5 226.7 Q
.33 -.165(ve \()-.275 H(characters `).165 E(`o oblique')-.814 E 2.75('t)
-.814 G 2.75(o`)-2.75 G(`thorn')-3.564 E('\).)-.814 E F0 -.198(Ti)72
243.6 S(le).198 E F1 2.75(Ap)99.5 260.5 S(ixmap can be replicated in tw)
-2.75 E 2.75(od)-.11 G(imensions to tile a re)-2.75 E 2.75(gion. The)
-.165 F(pixmap itself is also)2.75 E(kno)99.5 273.5 Q(wn as a tile.)
-.275 E F0 -.198(Ti)72 290.4 S(mestamp).198 E F1 2.75(At)99.5 307.3 S
(imestamp is a time v)-2.75 E(alue e)-.275 E(xpressed in milliseconds.)
-.165 E(It is typically the time since the last)5.5 E(serv)99.5 320.3 Q
(er reset.)-.165 E -.385(Ti)5.5 G(mestamp v).385 E
(alues wrap around \(after about 49.7 days\).)-.275 E(The serv)5.5 E(er)
-.165 E 2.75(,g)-.44 G -2.365 -.275(iv e)-2.75 H 2.75(ni).275 G(ts)-2.75
E(current time is represented by timestamp T)99.5 333.3 Q 2.75(,a)-.814
G -.11(lwa)-2.75 G(ys interprets timestamps from clients by).11 E(treat\
ing half of the timestamp space as being earlier in time than T and hal\
f of the time-)99.5 346.3 Q(stamp space as being later in time than T)
99.5 359.3 Q 5.5(.O)-.814 G(ne timestamp v)-5.5 E
(alue, represented by the con-)-.275 E(stant)99.5 372.3 Q F0(Curr)3.666
E(entT)-.198 E(ime)-.198 E F1 2.75(,i).916 G 2.75(sn)-2.75 G -2.365
-.275(ev e)-2.75 H 2.75(rg).275 G(enerated by the serv)-2.75 E(er)-.165
E 5.5(.T)-.605 G(his v)-5.5 E(alue is reserv)-.275 E(ed for use in)-.165
E(requests to represent the current serv)99.5 385.3 Q(er time.)-.165 E
F0 -.814(Tr)72 402.2 S(ueColor).814 E -.814(Tr)100.416 419.1 S(ueColor)
.814 E F1(can be vie)3.666 E(wed as a de)-.275 E(generate case of)-.165
E F0(Dir)3.666 E(ectColor)-.198 E F1(in which the sub\214elds in)3.666 E
(the pix)99.5 432.1 Q(el v)-.165 E
(alue directly encode the corresponding RGB v)-.275 E 2.75(alues. That)
-.275 F(is, the colormap has)2.75 E(prede\214ned read-only RGB v)99.5
445.1 Q 2.75(alues. The)-.275 F -.275(va)2.75 G
(lues are typically linear or near).275 E(-linear increasing)-.22 E
(ramps.)99.5 458.1 Q F0 -.814(Ty)72 475 S(pe).814 E F1 2.75(At)99.5
491.9 S(ype is an arbitrary atom used to identify the interpretation of\
 property data.)-2.75 E -.88(Ty)5.5 G(pes are).88 E
(completely uninterpreted by the serv)99.5 504.9 Q(er)-.165 E 5.5(.T)
-.605 G(he)-5.5 E 2.75(ya)-.165 G
(re solely for the bene\214t of clients.)-2.75 E 2.75(Xp)5.5 G(rede-)
-2.75 E(\214nes type atoms for man)99.5 517.9 Q 2.75(yf)-.165 G
(requently used types, and clients also can de\214ne ne)-2.75 E 2.75(wt)
-.275 G(ypes.)-2.75 E F0 -.407(Vi)72 534.8 S(ewable).407 E F1 2.75(Aw)
99.5 551.7 S(indo)-2.75 E 2.75(wi)-.275 G 2.75(sv)-2.75 G(ie)-2.75 E
-.11(wa)-.275 G(ble if it and all of its ancestors are mapped.).11 E
(This does not imply that)5.5 E(an)99.5 564.7 Q 2.75(yp)-.165 G
(ortion of the windo)-2.75 E 2.75(wi)-.275 G 2.75(sa)-2.75 G
(ctually visible.)-2.75 E(Graphics requests can be performed on a)5.5 E
(windo)99.5 577.7 Q 2.75(ww)-.275 G(hen it is not vie)-2.75 E -.11(wa)
-.275 G(ble, b).11 E(ut output will not be retained unless the serv)-.22
E(er is main-)-.165 E(taining backing store.)99.5 590.7 Q F0 -.407(Vi)72
607.6 S(sible).407 E F1 2.75(Ar)99.5 624.5 S -.165(eg)-2.75 G
(ion of a windo).165 E 2.75(wi)-.275 G 2.75(sv)-2.75 G
(isible if someone looking at the screen can actually see it; that is,)
-2.75 E(the windo)99.5 637.5 Q 2.75(wi)-.275 G 2.75(sv)-2.75 G(ie)-2.75
E -.11(wa)-.275 G(ble and the re).11 E(gion is not occluded by an)-.165
E 2.75(yo)-.165 G(ther windo)-2.75 E -.715(w.)-.275 G F0(Whitespace)72
654.4 Q F1(An)99.5 671.3 Q 2.75(ys)-.165 G(pacing character)-2.75 E 5.5
(.O)-.605 G 2.75(ni)-5.5 G
(mplementations that conform to the ANSI C library)-2.75 E 2.75(,w)-.715
G(hite-)-2.75 E(space is an)99.5 684.3 Q 2.75(yc)-.165 G
(haracter for which)-2.75 E F0(isspace)3.666 E F1(returns true.)3.666 E
F0(486)279.75 769 Q 0 Cg EP
%%Page: 487 492
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E -.198(Wi)72 85 S(ndo).198 E 2.75(wg)
-.11 G(ra)-2.75 E(vity)-.275 E/F1 11/Times-Roman@0 SF(When windo)99.5
101.9 Q(ws are resized, subwindo)-.275 E
(ws may be repositioned automatically relati)-.275 E .33 -.165(ve t)
-.275 H(o).165 E(some position in the windo)99.5 114.9 Q 4.18 -.715
(w. T)-.275 H(his attraction of a subwindo).715 E 2.75(wt)-.275 G 2.75
(os)-2.75 G(ome part of its parent is)-2.75 E(kno)99.5 127.9 Q
(wn as windo)-.275 E 2.75(wg)-.275 G(ra)-2.75 E(vity)-.22 E(.)-.715 E F0
-.198(Wi)72 144.8 S(ndo).198 E 2.75(wm)-.11 G(anager)-2.75 E F1
(Manipulation of windo)99.5 161.7 Q
(ws on the screen and much of the user interf)-.275 E(ace \(polic)-.11 E
(y\) is typically)-.165 E(pro)99.5 174.7 Q(vided by a windo)-.165 E 2.75
(wm)-.275 G(anager client.)-2.75 E F0 2.75(XP)72 191.6 S
(ortable Character Set)-2.97 E F1 2.75(Ab)99.5 208.5 S
(asic set of 97 characters which are assumed to e)-2.75 E
(xist in all locales supported by Xlib)-.165 E(.)-.44 E
(This set contains the follo)99.5 221.5 Q(wing characters:)-.275 E(a..z\
 A..Z 0..9 !"#$%&'\(\)*+,-./:;<=>?@[\\]^_`{|}~ <space>, <tab>, and <ne)
72 257.9 Q(wline>)-.275 E(This is the left/lo)99.5 294.3 Q(wer half \(a\
lso called the G0 set\) of the graphic character set of ISO8859-1)-.275
E(plus <space>, <tab>, and <ne)99.5 307.3 Q 2.75(wline>. It)-.275 F
(is also the set of graphic characters in 7-bit ASCII)2.75 E
(plus the same three control characters.)99.5 320.3 Q
(The actual encoding of these characters on the host)5.5 E
(is system dependent; see the Host Portable Character Encoding.)99.5
333.3 Q F0(XLFD)72 350.2 Q F1(The X Logical F)99.5 367.1 Q
(ont Description Con)-.165 E -.165(ve)-.44 G
(ntions that de\214ne a standard syntax for structured).165 E
(font names.)99.5 380.1 Q F0(XY f)72 397 Q(ormat)-.275 E F1
(The data for a pixmap is said to be in XY format if it is or)99.5 413.9
Q -.055(ga)-.198 G(nized as a set of bitmaps repre-).055 E(senting indi)
99.5 426.9 Q(vidual bit planes with the planes appearing from most-sign\
i\214cant to least-signif-)-.275 E(icant bit order)99.5 439.9 Q(.)-.605
E F0 2.75(Zf)72 456.8 S(ormat)-3.025 E F1
(The data for a pixmap is said to be in Z format if it is or)99.5 473.7
Q -.055(ga)-.198 G(nized as a set of pix).055 E(el v)-.165 E(alues in)
-.275 E(scanline order)99.5 486.7 Q(.)-.605 E F0(Refer)72 503.6 Q(ences)
-.198 E F1
(ANSI Programming Language - C: ANSI X3.159-1989, December 14, 1989.)72
520.5 Q(Draft Proposed Multibyte Extension of ANSI C, Draft 1.1, No)72
537.4 Q -.165(ve)-.165 G(mber 30, 1989, SC22/C).165 E
(WG/SWG IPSJ/ITSCJ Japan.)72 550.4 Q(ISO2022: Information processing - \
ISO 7-bit and 8-bit coded character sets - Code e)72 567.3 Q(xtension)
-.165 E(techniques.)72 580.3 Q(ISO8859-1: Information processing - 8-bi\
t single-byte coded graphic character sets - P)72 597.2 Q(art 1: Latin)
-.165 E(alphabet No. 1.)72 610.2 Q(POSIX: Information T)72 627.1 Q
(echnology - Portable Operating System Interf)-.77 E(ace \(POSIX\) - P)
-.11 E(art 1: System)-.165 E(Application Program Interf)72 640.1 Q
(ace \(API\) [C Language], ISO/IEC 9945-1.)-.11 E -1.375 -.77(Te x)72
657 T 2.75(to).77 G 2.75(fI)-2.75 G
(SO/IEC/DIS 9541-1, Information Processing - F)-2.75 E
(ont Information Interchange - P)-.165 E(art 1:)-.165 E(Architecture.)72
670 Q(X/Open Portability Guide, Issue 3, December 1988 \(XPG3\), X/Open\
 Compan)72 686.9 Q 1.43 -.715(y, L)-.165 H(td, Prentice-).715 E
(Hall, Inc. 1989. ISBN 0-13-685835-8.)72 699.9 Q(\(See especially V)5.5
E(olume 3:)-1.419 E(XSI Supplementary De\214ni-)5.5 E(tions.\))72 712.9
Q F0(487)279.75 769 Q 0 Cg EP
%%Page: 488 493
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF(Xlib \255 C Library)72 49 Q
(X11, Release 6.7 DRAFT)235.078 E(488)279.75 769 Q 0 Cg EP
%%Page: 489 494
%%BeginPageSetup
BP
%%EndPageSetup
/F0 13/Times-Bold@0 SF -1.196(Ta)239.126 124 S(ble of Contents)1.196 E
/F1 11/Times-Roman@0 SF -.88(Ta)72 163 S(ble of Contents).88 E -3.366 11
(........................ i)7.554 H(i)-11 E(Ackno)72 176 Q .536
(wledgments .)-.275 F -6.424 11(....................... i)11 H(ii)-11 E
(Chapter 1: Introduction to Xlib)72 189 Q -2.75 11
(.................... 1)3.616 H(1.1. Ov)72 202 Q(ervie)-.165 E 2.75(wo)
-.275 G 2.75(ft)-2.75 G(he X W)-2.75 E(indo)-.44 E 2.75(wS)-.275 G 2.956
(ystem .)-2.75 F -2.75 11(................ 1)11 H(1.2. Errors)72 215 Q
-2.75 11(.......................... 3)11.261 H
(1.3. Standard Header Files)72 228 Q -2.75 11(..................... 3)
9.743 H(1.4. Generic V)72 241 Q(alues and T)-1.221 E 4.221(ypes .)-.88 F
-2.75 11(................... 4)11 H(1.5. Naming and Ar)72 254 Q
(gument Con)-.198 E -.165(ve)-.44 G(ntions within Xlib).165 E -2.75 11
(............. 4)5.332 H(1.6. Programming Considerations)72 267 Q -2.75
11(................... 5)5.75 H(1.7. Character Sets and Encodings)72 280
Q -2.75 11(................... 6)3.33 H(1.8. F)72 293 Q(ormatting Con)
-.165 E -.165(ve)-.44 G 12.009(ntions .).165 F -2.75 11
(................... 6)11 H(Chapter 2: Display Functions)72 306 Q -2.75
11(.................... 8)11.25 H(2.1. Opening the Display)72 319 Q
-2.75 11(..................... 8)16.453 H
(2.2. Obtaining Information about the Display)72 332 Q 2.75(,I)-.715 G
(mage F)-2.75 E(ormats, or Screens)-.165 E -8.25 11(...... 1)11.558 H(0)
-11 E(2.2.1. Display Macros)72 345 Q -8.25 11(...................... 1)
15.54 H(0)-11 E(2.2.2. Image F)72 358 Q(ormat Functions and Macros)-.165
E -8.25 11(................ 1)5.629 H(8)-11 E
(2.2.3. Screen Information Macros)72 371 Q -8.25 11
(................... 2)5.783 H(1)-11 E
(2.3. Generating a NoOperation Protocol Request)72 384 Q -8.25 11
(.............. 2)8.841 H(5)-11 E(2.4. Freeing Client-Created Data)72
397 Q -8.25 11(................... 2)10.359 H(5)-11 E
(2.5. Closing the Display)72 410 Q -8.25 11(...................... 2)
6.355 H(6)-11 E(2.6. Using X Serv)72 423 Q
(er Connection Close Operations)-.165 E -8.25 11(.............. 2)3.187
H(6)-11 E(2.7. Using Xlib with Threads)72 436 Q -8.25 11
(.................... 2)12.174 H(7)-11 E
(2.8. Using Internal Connections)72 449 Q -8.25 11
(................... 2)14.011 H(8)-11 E(Chapter 3: W)72 462 Q(indo)-.44
E 2.75(wF)-.275 G 5.552(unctions .)-2.75 F -8.25 11
(................... 3)11 H(1)-11 E(3.1. V)72 475 Q(isual T)-.66 E 6.685
(ypes .)-.88 F -8.25 11(....................... 3)11 H(1)-11 E(3.2. W)72
488 Q(indo)-.44 E 2.75(wA)-.275 G(ttrib)-2.75 E 7.301(utes .)-.22 F
-8.25 11(..................... 3)11 H(3)-11 E(3.2.1. Background Attrib)
72 501 Q .481(ute .)-.22 F -8.25 11(.................... 3)11 H(5)-11 E
(3.2.2. Border Attrib)72 514 Q 9.952(ute .)-.22 F -8.25 11
(..................... 3)11 H(6)-11 E(3.2.3. Gra)72 527 Q(vity Attrib)
-.22 E 2.835(utes .)-.22 F -8.25 11(..................... 3)11 H(6)-11 E
(3.2.4. Backing Store Attrib)72 540 Q 5.365(ute .)-.22 F -8.25 11
(................... 3)11 H(7)-11 E(3.2.5. Sa)72 553 Q .33 -.165(ve U)
-.22 H(nder Flag).165 E -8.25 11(...................... 3)11.954 H(8)-11
E(3.2.6. Backing Planes and Backing Pix)72 566 Q(el Attrib)-.165 E 8.588
(utes .)-.22 F -8.25 11(............ 3)11 H(8)-11 E(3.2.7. Ev)72 579 Q
(ent Mask and Do Not Propag)-.165 E(ate Mask Attrib)-.055 E 6.828
(utes .)-.22 F -8.25 11(.......... 3)11 H(8)-11 E(3.2.8. Ov)72 592 Q
(erride Redirect Flag)-.165 E -8.25 11(.................... 3)11.745 H
(8)-11 E(3.2.9. Colormap Attrib)72 605 Q 10.249(ute .)-.22 F -8.25 11
(.................... 3)11 H(8)-11 E(3.2.10. Cursor Attrib)72 618 Q
5.057(ute .)-.22 F -8.25 11(..................... 3)11 H(9)-11 E
(3.3. Creating W)72 631 Q(indo)-.44 E 8.918(ws .)-.275 F -8.25 11
(..................... 3)11 H(9)-11 E(3.4. Destro)72 644 Q(ying W)-.11 E
(indo)-.44 E 11.778(ws .)-.275 F -8.25 11(.................... 4)11 H(2)
-11 E(3.5. Mapping W)72 657 Q(indo)-.44 E 7.081(ws .)-.275 F -8.25 11
(..................... 4)11 H(2)-11 E(3.6. Unmapping W)72 670 Q(indo)
-.44 E 8.61(ws .)-.275 F -8.25 11(.................... 4)11 H(4)-11 E
(3.7. Con\214guring W)72 683 Q(indo)-.44 E 7.378(ws .)-.275 F -8.25 11
(.................... 4)11 H(5)-11 E(3.8. Changing W)72 696 Q(indo)-.44
E 2.75(wS)-.275 G(tacking Order)-2.75 E -8.25 11(................. 5)
10.15 H(0)-11 E(3.9. Changing W)72 709 Q(indo)-.44 E 2.75(wA)-.275 G
(ttrib)-2.75 E 3.022(utes .)-.22 F -8.25 11(.................. 5)11 H(3)
-11 E(Chapter 4: W)72 722 Q(indo)-.44 E 2.75(wI)-.275 G
(nformation Functions)-2.75 E -8.25 11(................ 5)8.005 H(7)-11
E 0 Cg EP
%%Page: 490 495
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Roman@0 SF(4.1. Obtaining W)72 85 Q(indo)-.44 E 2.75(wI)
-.275 G 6.784(nformation .)-2.75 F -8.25 11(................. 5)11 H(7)
-11 E(4.2. T)72 98 Q(ranslating Screen Coordinates)-.385 E -8.25 11
(.................. 6)10.436 H(0)-11 E(4.3. Properties and Atoms)72 111
Q -8.25 11(..................... 6)12.174 H(2)-11 E
(4.4. Obtaining and Changing W)72 124 Q(indo)-.44 E 2.75(wP)-.275 G
5.563(roperties .)-2.75 F -8.25 11(............. 6)11 H(6)-11 E
(4.5. Selections)72 137 Q -8.25 11(......................... 7)7.279 H
(0)-11 E(Chapter 5: Pixmap and Cursor Functions)72 150 Q -8.25 11
(................ 7)15.529 H(3)-11 E(5.1. Creating and Freeing Pixmaps)
72 163 Q -8.25 11(.................. 7)15.232 H(3)-11 E
(5.2. Creating, Recoloring, and Freeing Cursors)72 176 Q -8.25 11
(............... 7)3.022 H(4)-11 E
(Chapter 6: Color Management Functions)72 189 Q -8.25 11
(................ 7)15.232 H(9)-11 E(6.1. Color Structures)72 202 Q
-8.25 11(....................... 8)7.587 H(0)-11 E(6.2. Color Strings)72
215 Q -8.25 11(........................ 8)7.268 H(3)-11 E(6.2.1. RGB De)
72 228 Q(vice String Speci\214cation)-.275 E -8.25 11
(................. 8)8.17 H(4)-11 E
(6.2.2. RGB Intensity String Speci\214cation)72 241 Q -8.25 11
(................ 8)14.297 H(4)-11 E(6.2.3. De)72 254 Q
(vice-Independent String Speci\214cations)-.275 E -8.25 11
(.............. 8)12.471 H(5)-11 E(6.3. Color Con)72 267 Q -.165(ve)-.44
G(rsion Conte).165 E(xts and Gamut Mapping)-.165 E -8.25 11
(............. 8)4.078 H(5)-11 E(6.4. Creating, Cop)72 280 Q
(ying, and Destro)-.11 E(ying Colormaps)-.11 E -8.25 11(............. 8)
12.394 H(6)-11 E(6.5. Mapping Color Names to V)72 293 Q 1.79(alues .)
-1.221 F -8.25 11(................. 8)11 H(7)-11 E
(6.6. Allocating and Freeing Color Cells)72 306 Q -8.25 11
(................. 8)7.895 H(9)-11 E
(6.7. Modifying and Querying Colormap Cells)72 319 Q -8.25 11
(............... 9)7.895 H(5)-11 E(6.8. Color Con)72 332 Q -.165(ve)-.44
G(rsion Conte).165 E(xt Functions)-.165 E 11(................1)14.759 G
(00)-11 E(6.8.1. Getting and Setting the Color Con)72 345 Q -.165(ve)
-.44 G(rsion Conte).165 E(xt of a Colormap)-.165 E 11(.......1)5.607 G
(00)-11 E(6.8.2. Obtaining the Def)72 358 Q(ault Color Con)-.11 E -.165
(ve)-.44 G(rsion Conte).165 E 6.333(xt .)-.165 F 11(...........1)11 G
(01)-11 E(6.8.3. Color Con)72 371 Q -.165(ve)-.44 G(rsion Conte).165 E
(xt Macros)-.165 E 11(.................1)3.165 G(01)-11 E
(6.8.4. Modifying Attrib)72 384 Q(utes of a Color Con)-.22 E -.165(ve)
-.44 G(rsion Conte).165 E 2.769(xt .)-.165 F 11(..........1)11 G(03)-11
E(6.8.5. Creating and Freeing a Color Con)72 397 Q -.165(ve)-.44 G
(rsion Conte).165 E 1.647(xt .)-.165 F 11(...........1)11 G(04)-11 E
(6.9. Con)72 410 Q -.165(ve)-.44 G(rting between Color Spaces).165 E 11
(.................1)13.098 G(06)-11 E(6.10. Callback Functions)72 423 Q
11(......................1)3 G(06)-11 E
(6.10.1. Prototype Gamut Compression Procedure)72 436 Q 11
(..............1)6.377 G(07)-11 E
(6.10.2. Supplied Gamut Compression Procedures)72 449 Q 11
(..............1)5.761 G(08)-11 E
(6.10.3. Prototype White Point Adjustment Procedure)72 462 Q 11
(.............1)3.924 G(09)-11 E
(6.10.4. Supplied White Point Adjustment Procedures)72 475 Q 11
(.............1)3.308 G(10)-11 E(6.11. Gamut Querying Functions)72 488 Q
11(...................1)9.116 G(11)-11 E
(6.11.1. Red, Green, and Blue Queries)72 501 Q 11(..................1)
3.033 G(11)-11 E(6.11.2. CIELab Queries)72 514 Q 11
(......................1)8.214 G(13)-11 E(6.11.3. CIELuv Queries)72 527
Q 11(......................1)7.598 G(15)-11 E(6.11.4. T)72 540 Q
(ekHVC Queries)-.77 E 11(......................1)3.484 G(17)-11 E
(6.12. Color Management Extensions)72 553 Q 11(..................1)6.982
G(20)-11 E(6.12.1. Color Spaces)72 566 Q 11(.......................1)
7.895 G(20)-11 E(6.12.2. Adding De)72 579 Q
(vice-Independent Color Spaces)-.275 E 11(..............1)4.232 G(20)-11
E(6.12.3. Querying Color Space F)72 592 Q(ormat and Pre\214x)-.165 E 11
(..............1)9.6 G(21)-11 E
(6.12.4. Creating Additional Color Spaces)72 605 Q 11(................1)
13.703 G(21)-11 E(6.12.5. P)72 618 Q(arse String Callback)-.165 E 11
(....................1)12.339 G(22)-11 E
(6.12.6. Color Speci\214cation Con)72 631 Q -.165(ve)-.44 G
(rsion Callback).165 E 11(..............1)10.029 G(23)-11 E
(6.12.7. Function Sets)72 644 Q 11(.......................1)6.047 G(24)
-11 E(6.12.8. Adding Function Sets)72 657 Q 11(....................1)
11.547 G(24)-11 E(6.12.9. Creating Additional Function Sets)72 670 Q 11
(................1)11.855 G(25)-11 E(Chapter 7: Graphics Conte)72 683 Q
(xt Functions)-.165 E 11(.................1)9.589 G(27)-11 E
(7.1. Manipulating Graphics Conte)72 696 Q 9.281(xt/State .)-.165 F 11
(...............1)11 G(27)-11 E(7.2. Using Graphics Conte)72 709 Q
(xt Con)-.165 E -.165(ve)-.44 G(nience Routines).165 E 11
(.............1)9.897 G(36)-11 E(7.2.1. Setting the F)72 722 Q(ore)-.165
E(ground, Background, Function, or Plane Mask)-.165 E 11(........1)3.957
G(37)-11 E 0 Cg EP
%%Page: 491 496
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Roman@0 SF(7.2.2. Setting the Line Attrib)72 85 Q
(utes and Dashes)-.22 E 11(...............1)11.789 G(38)-11 E
(7.2.3. Setting the Fill Style and Fill Rule)72 98 Q 11
(.................1)3.275 G(40)-11 E(7.2.4. Setting the Fill T)72 111 Q
(ile and Stipple)-.385 E 11(.................1)16.2 G(40)-11 E
(7.2.5. Setting the Current F)72 124 Q 3.77(ont .)-.165 F 11
(...................1)11 G(43)-11 E(7.2.6. Setting the Clip Re)72 137 Q
6.817(gion .)-.165 F 11(...................1)11 G(43)-11 E
(7.2.7. Setting the Arc Mode, Subwindo)72 150 Q 2.75(wM)-.275 G
(ode, and Graphics Exposure)-2.75 E 11(......1)16.145 G(45)-11 E
(Chapter 8: Graphics Functions)72 163 Q 11(....................1)5.761 G
(47)-11 E(8.1. Clearing Areas)72 176 Q 11(.......................1)
13.714 G(47)-11 E(8.2. Cop)72 189 Q(ying Areas)-.11 E 11
(.......................1)13.813 G(48)-11 E(8.3. Dra)72 202 Q
(wing Points, Lines, Rectangles, and Arcs)-.165 E 11(..............1)
6.553 G(50)-11 E(8.3.1. Dra)72 215 Q(wing Single and Multiple Points)
-.165 E 11(................1)9.27 G(51)-11 E(8.3.2. Dra)72 228 Q
(wing Single and Multiple Lines)-.165 E 11(................1)12.339 G
(52)-11 E(8.3.3. Dra)72 241 Q(wing Single and Multiple Rectangles)-.165
E 11(..............1)16.013 G(54)-11 E(8.3.4. Dra)72 254 Q
(wing Single and Multiple Arcs)-.165 E 11(................1)16.013 G(56)
-11 E(8.4. Filling Areas)72 267 Q 11(........................1)8.5 G(58)
-11 E(8.4.1. Filling Single and Multiple Rectangles)72 280 Q 11
(...............1)11.239 G(58)-11 E(8.4.2. Filling a Single Polygon)72
293 Q 11(....................1)5.728 G(59)-11 E
(8.4.3. Filling Single and Multiple Arcs)72 306 Q 11(.................1)
11.239 G(60)-11 E(8.5. F)72 319 Q(ont Metrics)-.165 E 11
(........................1)9.886 G(61)-11 E
(8.5.1. Loading and Freeing F)72 332 Q 5.31(onts .)-.165 F 11
(..................1)11 G(64)-11 E(8.5.2. Obtaining and Freeing F)72 345
Q(ont Names and Information)-.165 E 11(...........1)7.774 G(67)-11 E
(8.5.3. Computing Character String Sizes)72 358 Q 11(.................1)
3.616 G(69)-11 E(8.5.4. Computing Logical Extents)72 371 Q 11
(...................1)5.134 G(69)-11 E
(8.5.5. Querying Character String Sizes)72 384 Q 11(.................1)
11.58 G(71)-11 E(8.6. Dra)72 397 Q(wing T)-.165 E -.165(ex)-.77 G -3.646
5.948(t. . . . . . . . . . . . . . . . . . . . . . . . 1).165 H(72)
-5.948 E(8.6.1. Dra)72 410 Q(wing Comple)-.165 E 2.75(xT)-.165 G -.165
(ex)-3.52 G -11.302 9.776(t. . . . . . . . . . . . . . . . . . . . 1)
.165 H(73)-9.776 E(8.6.2. Dra)72 423 Q(wing T)-.165 E -.165(ex)-.77 G
2.75(tC).165 G .162(haracters .)-2.75 F 11(...................1)11 G(75)
-11 E(8.6.3. Dra)72 436 Q(wing Image T)-.165 E -.165(ex)-.77 G 2.75(tC)
.165 G 11.173(haracters .)-2.75 F 11(................1)11 G(76)-11 E
(8.7. T)72 449 Q(ransferring Images between Client and Serv)-.385 E
6.663(er .)-.165 F 11(............1)11 G(78)-11 E(Chapter 9: W)72 462 Q
(indo)-.44 E 2.75(wa)-.275 G(nd Session Manager Functions)-2.75 E 11
(.............1)7.708 G(84)-11 E(9.1. Changing the P)72 475 Q
(arent of a W)-.165 E(indo)-.44 E 13.373(w.)-.275 G 11
(................1)-2.373 G(84)-11 E
(9.2. Controlling the Lifetime of a W)72 488 Q(indo)-.44 E -10.202 9.226
(w. . . . . . . . . . . . . . . . 1)-.275 H(85)-9.226 E
(9.3. Managing Installed Colormaps)72 501 Q 11(..................1)
12.482 G(86)-11 E(9.4. Setting and Retrie)72 514 Q(ving the F)-.275 E
(ont Search P)-.165 E 8.5(ath .)-.165 F 11(.............1)11 G(88)-11 E
(9.5. Grabbing the Serv)72 527 Q 1.966(er .)-.165 F 11
(.....................1)11 G(89)-11 E(9.6. Killing Clients)72 540 Q 11
(.......................1)14.902 G(90)-11 E
(9.7. Controlling the Screen Sa)72 553 Q -.165(ve)-.22 G -7.716 7.983
(r. . . . . . . . . . . . . . . . . . . 1).165 H(90)-7.983 E
(9.8. Controlling Host Access)72 566 Q 11(....................1)13.087 G
(92)-11 E(9.8.1. Adding, Getting, or Remo)72 579 Q(ving Hosts)-.165 E 11
(................1)5.607 G(93)-11 E
(9.8.2. Changing, Enabling, or Disabling Access Control)72 592 Q 11
(............1)4.54 G(95)-11 E(Chapter 10: Ev)72 605 Q 12.339(ents .)
-.165 F 11(......................1)11 G(97)-11 E(10.1. Ev)72 618 Q
(ent T)-.165 E 3.748(ypes .)-.88 F 11(.......................1)11 G(97)
-11 E(10.2. Ev)72 631 Q(ent Structures)-.165 E 11
(......................1)15.397 G(98)-11 E(10.3. Ev)72 644 Q(ent Masks)
-.165 E 11(........................1)3.781 G(99)-11 E(10.4. Ev)72 657 Q
(ent Processing Ov)-.165 E(ervie)-.165 E -7.562 7.906
(w. . . . . . . . . . . . . . . . . . . 2)-.275 H(00)-7.906 E(10.5. K)72
670 Q -.165(ey)-.275 G(board and Pointer Ev).165 E 11.877(ents .)-.165 F
11(.................2)11 G(02)-11 E(10.5.1. Pointer Button Ev)72 683 Q
7.741(ents .)-.165 F 11(...................2)11 G(02)-11 E(10.5.2. K)72
696 Q -.165(ey)-.275 G(board and Pointer Ev).165 E 3.627(ents .)-.165 F
11(.................2)11 G(03)-11 E(10.6. W)72 709 Q(indo)-.44 E 2.75
(wE)-.275 G(ntry/Exit Ev)-2.75 E 8.467(ents .)-.165 F 11
(..................2)11 G(07)-11 E(10.6.1. Normal Entry/Exit Ev)72 722 Q
3.781(ents .)-.165 F 11(..................2)11 G(09)-11 E 0 Cg EP
%%Page: 492 497
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Roman@0 SF(10.6.2. Grab and Ungrab Entry/Exit Ev)72 85 Q
2.274(ents .)-.165 F 11(...............2)11 G(10)-11 E(10.7. Input F)72
98 Q(ocus Ev)-.165 E .888(ents .)-.165 F 11(.....................2)11 G
(10)-11 E(10.7.1. Normal F)72 111 Q(ocus Ev)-.165 E(ents and F)-.165 E
(ocus Ev)-.165 E(ents While Grabbed)-.165 E 11(.........2)13.472 G(11)
-11 E(10.7.2. F)72 124 Q(ocus Ev)-.165 E(ents Generated by Grabs)-.165 E
11(................2)13.142 G(14)-11 E(10.8. K)72 137 Q .33 -.165(ey M)
-.275 H(ap State Noti\214cation Ev).165 E .866(ents .)-.165 F 11
(................2)11 G(14)-11 E(10.9. Exposure Ev)72 150 Q 11.426
(ents .)-.165 F 11(.....................2)11 G(15)-11 E
(10.9.1. Expose Ev)72 163 Q 12.339(ents .)-.165 F 11
(.....................2)11 G(15)-11 E
(10.9.2. GraphicsExpose and NoExpose Ev)72 176 Q 1.669(ents .)-.165 F 11
(..............2)11 G(16)-11 E(10.10. W)72 189 Q(indo)-.44 E 2.75(wS)
-.275 G(tate Change Ev)-2.75 E 4.199(ents .)-.165 F 11
(.................2)11 G(17)-11 E(10.10.1. CirculateNotify Ev)72 202 Q
11.426(ents .)-.165 F 11(..................2)11 G(17)-11 E
(10.10.2. Con\214gureNotify Ev)72 215 Q 7.752(ents .)-.165 F 11
(..................2)11 G(18)-11 E(10.10.3. CreateNotify Ev)72 228 Q
9.292(ents .)-.165 F 11(...................2)11 G(19)-11 E
(10.10.4. Destro)72 241 Q(yNotify Ev)-.11 E 3.286(ents .)-.165 F 11
(...................2)11 G(19)-11 E(10.10.5. Gra)72 254 Q(vityNotify Ev)
-.22 E 4.617(ents .)-.165 F 11(...................2)11 G(20)-11 E
(10.10.6. MapNotify Ev)72 267 Q 4.089(ents .)-.165 F 11
(....................2)11 G(20)-11 E(10.10.7. MappingNotify Ev)72 280 Q
12.031(ents .)-.165 F 11(..................2)11 G(21)-11 E
(10.10.8. ReparentNotify Ev)72 293 Q 12.042(ents .)-.165 F 11
(..................2)11 G(22)-11 E(10.10.9. UnmapNotify Ev)72 306 Q
5.618(ents .)-.165 F 11(...................2)11 G(22)-11 E(10.10.10. V)
72 319 Q(isibilityNotify Ev)-.66 E 5.343(ents .)-.165 F 11
(..................2)11 G(23)-11 E(10.11. Structure Control Ev)72 332 Q
12.031(ents .)-.165 F 11(..................2)11 G(24)-11 E
(10.11.1. CirculateRequest Ev)72 345 Q 4.705(ents .)-.165 F 11
(..................2)11 G(24)-11 E(10.11.2. Con\214gureRequest Ev)72 358
Q 1.031(ents .)-.165 F 11(..................2)11 G(25)-11 E
(10.11.3. MapRequest Ev)72 371 Q 11.118(ents .)-.165 F 11
(...................2)11 G(25)-11 E(10.11.4. ResizeRequest Ev)72 384 Q
1.955(ents .)-.165 F 11(...................2)11 G(26)-11 E
(10.12. Colormap State Change Ev)72 397 Q 11.118(ents .)-.165 F 11
(................2)11 G(26)-11 E(10.13. Client Communication Ev)72 410 Q
1.933(ents .)-.165 F 11(.................2)11 G(27)-11 E
(10.13.1. ClientMessage Ev)72 423 Q 1.339(ents .)-.165 F 11
(...................2)11 G(27)-11 E(10.13.2. PropertyNotify Ev)72 436 Q
.118(ents .)-.165 F 11(...................2)11 G(28)-11 E
(10.13.3. SelectionClear Ev)72 449 Q 1.955(ents .)-.165 F 11
(...................2)11 G(29)-11 E(10.13.4. SelectionRequest Ev)72 462
Q 4.089(ents .)-.165 F 11(..................2)11 G(29)-11 E
(10.13.5. SelectionNotify Ev)72 475 Q 10.81(ents .)-.165 F 11
(..................2)11 G(30)-11 E(Chapter 11: Ev)72 488 Q
(ent Handling Functions)-.165 E 11(.................2)12.031 G(31)-11 E
(11.1. Selecting Ev)72 501 Q 12.031(ents .)-.165 F 11
(.....................2)11 G(31)-11 E(11.2. Handling the Output Buf)72
514 Q 5.123(fer .)-.275 F 11(..................2)11 G(32)-11 E(11.3. Ev)
72 527 Q(ent Queue Management)-.165 E 11(...................2)12.361 G
(33)-11 E(11.4. Manipulating the Ev)72 540 Q(ent Queue)-.165 E 11
(..................2)8.071 G(33)-11 E(11.4.1. Returning the Ne)72 553 Q
(xt Ev)-.165 E 6.091(ent .)-.165 F 11(..................2)11 G(33)-11 E
(11.4.2. Selecting Ev)72 566 Q(ents Using a Predicate Procedure)-.165 E
11(............2)16.343 G(34)-11 E(11.4.3. Selecting Ev)72 579 Q
(ents Using a W)-.165 E(indo)-.44 E 2.75(wo)-.275 G 2.75(rE)-2.75 G
-.165(ve)-2.75 G(nt Mask).165 E 11(...........2)13.846 G(36)-11 E
(11.5. Putting an Ev)72 592 Q(ent Back into the Queue)-.165 E 11
(................2)4.705 G(39)-11 E(11.6. Sending Ev)72 605 Q
(ents to Other Applications)-.165 E 11(................2)4.089 G(39)-11
E(11.7. Getting Pointer Motion History)72 618 Q 11(..................2)
4.826 G(41)-11 E(11.8. Handling Protocol Errors)72 631 Q 11
(....................2)4.54 G(42)-11 E
(11.8.1. Enabling or Disabling Synchronization)72 644 Q 11
(...............2)4.232 G(42)-11 E(11.8.2. Using the Def)72 657 Q
(ault Error Handlers)-.11 E 11(................2)15.98 G(42)-11 E
(Chapter 12: Input De)72 670 Q(vice Functions)-.275 E 11
(..................2)10.623 G(48)-11 E(12.1. Pointer Grabbing)72 683 Q
11(......................2)12.174 G(48)-11 E(12.2. K)72 696 Q -.165(ey)
-.275 G(board Grabbing).165 E 11(.....................2)14.77 G(53)-11 E
(12.3. Resuming Ev)72 709 Q(ent Processing)-.165 E 11
(...................2)6.223 G(56)-11 E(12.4. Mo)72 722 Q
(ving the Pointer)-.165 E 11(......................2)2.857 G(58)-11 E 0
Cg EP
%%Page: 493 498
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Roman@0 SF(12.5. Controlling Input F)72 85 Q 7.433(ocus .)
-.165 F 11(...................2)11 G(59)-11 E(12.6. Manipulating the K)
72 98 Q -.165(ey)-.275 G(board and Pointer Settings).165 E 11
(............2)13.23 G(61)-11 E(12.7. Manipulating the K)72 111 Q -.165
(ey)-.275 G(board Encoding).165 E 11(................2)4.683 G(67)-11 E
(Chapter 13: Locales and Internationalized T)72 124 Q -.165(ex)-.77 G
2.75(tF).165 G 8.863(unctions .)-2.75 F 11(..........2)11 G(73)-11 E
(13.1. X Locale Management)72 137 Q 11(....................2)14.946 G
(73)-11 E(13.2. Locale and Modi\214er Dependencies)72 150 Q 11
(................2)16.486 G(75)-11 E(13.3. V)72 163 Q(ariable Ar)-1.221
E(gument Lists)-.198 E 11(....................2)7.796 G(77)-11 E
(13.4. Output Methods)72 176 Q 11(......................2)16.442 G(77)
-11 E(13.4.1. Output Method Ov)72 189 Q(ervie)-.165 E -7.826 8.038
(w. . . . . . . . . . . . . . . . . . . 2)-.275 H(77)-8.038 E
(13.4.2. Output Method Functions)72 202 Q 11(...................2)7.576
G(78)-11 E(13.4.3. X Output Method V)72 215 Q 8.203(alues .)-1.221 F 11
(..................2)11 G(80)-11 E(13.4.3.1. Required Char Set)72 228 Q
11(.....................2)4.232 G(80)-11 E/F1 11/Symbol SF(S)72 241 Q F0
2.75(NQ)C(uery Orientation)-2.75 E 11(......................2)15.452 G
(81)-11 E(13.4.3.3. Directional Dependent Dra)72 254 Q 10.535(wing .)
-.165 F 11(...............2)11 G(81)-11 E(13.4.3.4. Conte)72 267 Q
(xt Dependent Dra)-.165 E 11.602(wing .)-.165 F 11(................2)11
G(82)-11 E(13.4.4. Output Conte)72 280 Q(xt Functions)-.165 E 11
(...................2)7.125 G(82)-11 E(13.4.5. Output Conte)72 293 Q
(xt V)-.165 E 4.694(alues .)-1.221 F 11(...................2)11 G(84)-11
E(13.4.5.1. Base F)72 306 Q(ont Name)-.165 E 11(.....................2)
12.339 G(84)-11 E(13.4.5.2. Missing CharSet)72 319 Q 11
(.....................2)11.855 G(85)-11 E(13.4.5.3. Def)72 332 Q
(ault String)-.11 E 11(......................2)9.226 G(85)-11 E
(13.4.5.4. Orientation)72 345 Q 11(.......................2)7.895 G(85)
-11 E(13.4.5.5. Resource Name and Class)72 358 Q 11(..................2)
11.58 G(86)-11 E(13.4.5.6. F)72 371 Q(ont Info)-.165 E 11
(........................2)3.165 G(86)-11 E(13.4.5.7. OM Automatic)72
384 Q 11(......................2)4.837 G(87)-11 E
(13.4.6. Creating and Freeing a F)72 397 Q(ont Set)-.165 E 11
(.................2)8.676 G(87)-11 E(13.4.7. Obtaining F)72 410 Q
(ont Set Metrics)-.165 E 11(..................2)15.078 G(91)-11 E
(13.4.8. Dra)72 423 Q(wing T)-.165 E -.165(ex)-.77 G 2.75(tU).165 G
(sing F)-2.75 E(ont Sets)-.165 E 11(.................2)15.573 G(97)-11 E
(13.5. Input Methods)72 436 Q 11(.......................3)10.029 G(02)
-11 E(13.5.1. Input Method Ov)72 449 Q(ervie)-.165 E 15.375(w.)-.275 G
11(..................3)-4.375 G(02)-11 E
(13.5.1.1. Input Method Architecture)72 462 Q 11(..................3)
8.83 G(03)-11 E(13.5.1.2. Input Conte)72 475 Q 4.078(xts .)-.165 F 11
(.....................3)11 G(05)-11 E(13.5.1.3. Getting K)72 488 Q -.165
(ey)-.275 G(board Input).165 E 11(...................3)8.346 G(05)-11 E
(13.5.1.4. F)72 501 Q(ocus Management)-.165 E 11(....................3)
12.955 G(05)-11 E(13.5.1.5. Geometry Management)72 514 Q 11
(...................3)8.83 G(06)-11 E(13.5.1.6. Ev)72 527 Q
(ent Filtering)-.165 E 11(......................3)5.607 G(07)-11 E
(13.5.1.7. Callbacks)72 540 Q 11(.......................3)14.616 G(07)
-11 E(13.5.1.8. V)72 553 Q(isible Position Feedback Masks)-.66 E 11
(................3)7.939 G(07)-11 E(13.5.1.9. Preedit String Management)
72 566 Q 11(..................3)5.761 G(08)-11 E
(13.5.2. Input Method Management)72 579 Q 11(..................3)14.627
G(09)-11 E(13.5.2.1. Hot K)72 592 Q -.165(ey)-.275 G 2.58 2.835
(s. . . . . . . . . . . . . . . . . . . . . . . . 3).165 H(10)-2.835 E
(13.5.2.2. Preedit State Operation)72 605 Q 11(...................3)
10.348 G(10)-11 E(13.5.3. Input Method Functions)72 618 Q 11
(...................3)14.913 G(11)-11 E(13.5.4. Input Method V)72 631 Q
12.482(alues .)-1.221 F 11(...................3)11 G(14)-11 E
(13.5.4.1. Query Input Style)72 644 Q 11(.....................3)6.674 G
(15)-11 E(13.5.4.2. Resource Name and Class)72 657 Q 11
(..................3)11.58 G(16)-11 E(13.5.4.3. Destro)72 670 Q 2.75(yC)
-.11 G 6.179(allback .)-2.75 F 11(....................3)11 G(16)-11 E
(13.5.4.4. Query IM/IC V)72 683 Q(alues List)-1.221 E 11
(...................3)3.319 G(17)-11 E(13.5.4.5. V)72 696 Q
(isible Position)-.66 E 11(.....................3)15.562 G(17)-11 E
(13.5.4.6. Preedit Callback Beha)72 709 Q 8.126(vior .)-.22 F 11
(.................3)11 G(17)-11 E(13.5.5. Input Conte)72 722 Q
(xt Functions)-.165 E 11(...................3)14.462 G(18)-11 E 0 Cg EP
%%Page: 494 499
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Roman@0 SF(13.5.6. Input Conte)72 85 Q(xt V)-.165 E 12.031
(alues .)-1.221 F 11(...................3)11 G(21)-11 E
(13.5.6.1. Input Style)72 98 Q 11(.......................3)9.413 G(23)
-11 E(13.5.6.2. Client W)72 111 Q(indo)-.44 E -1.622 4.936
(w. . . . . . . . . . . . . . . . . . . . . . 3)-.275 H(23)-4.936 E
(13.5.6.3. F)72 124 Q(ocus W)-.165 E(indo)-.44 E -3.184 5.717
(w. . . . . . . . . . . . . . . . . . . . . . 3)-.275 H(23)-5.717 E
(13.5.6.4. Resource Name and Class)72 137 Q 11(..................3)11.58
G(23)-11 E(13.5.6.5. Geometry Callback)72 150 Q 11
(....................3)13.406 G(24)-11 E(13.5.6.6. Filter Ev)72 163 Q
12.636(ents .)-.165 F 11(.....................3)11 G(24)-11 E
(13.5.6.7. Destro)72 176 Q 2.75(yC)-.11 G 6.179(allback .)-2.75 F 11
(....................3)11 G(24)-11 E(13.5.6.8. String Con)72 189 Q -.165
(ve)-.44 G(rsion Callback).165 E 11(..................3)5.134 G(24)-11 E
(13.5.6.9. String Con)72 202 Q -.165(ve)-.44 G 2.989(rsion .).165 F 11
(....................3)11 G(24)-11 E(13.5.6.10. Reset State)72 215 Q 11
(.......................3)3.308 G(25)-11 E(13.5.6.11. Hot K)72 228 Q
-.165(ey)-.275 G 11.085(s.).165 G 11(......................3)-.085 G(25)
-11 E(13.5.6.12. Hot K)72 241 Q .33 -.165(ey S)-.275 H 1.614(tate .).165
F 11(.....................3)11 G(26)-11 E
(13.5.6.13. Preedit and Status Attrib)72 254 Q 6.278(utes .)-.22 F 11
(................3)11 G(26)-11 E(13.5.6.13.1. Area)72 267 Q 11
(........................3)9.127 G(27)-11 E(13.5.6.13.2. Area Needed)72
280 Q 11(.....................3)14.033 G(27)-11 E
(13.5.6.13.3. Spot Location)72 293 Q 11(.....................3)9.721 G
(27)-11 E(13.5.6.13.4. Colormap)72 306 Q 11(......................3)14 G
(27)-11 E(13.5.6.13.5. F)72 319 Q(ore)-.165 E(ground and Background)
-.165 E 11(................3)14.352 G(28)-11 E
(13.5.6.13.6. Background Pixmap)72 332 Q 11(...................3)9.116 G
(28)-11 E(13.5.6.13.7. F)72 345 Q(ont Set)-.165 E 11
(.......................3)7.433 G(28)-11 E(13.5.6.13.8. Line Spacing)72
358 Q 11(.....................3)13.395 G(28)-11 E(13.5.6.13.9. Cursor)72
371 Q 11(.......................3)14.308 G(28)-11 E
(13.5.6.13.10. Preedit State)72 384 Q 11(.....................3)10.337 G
(28)-11 E(13.5.6.13.11. Preedit State Notify Callback)72 397 Q 11
(................3)5.761 G(29)-11 E
(13.5.6.13.12. Preedit and Status Callbacks)72 410 Q 11
(................3)9.424 G(29)-11 E
(13.5.7. Input Method Callback Semantics)72 423 Q 11(................3)
12.482 G(30)-11 E(13.5.7.1. Geometry Callback)72 436 Q 11
(....................3)13.406 G(31)-11 E(13.5.7.2. Destro)72 449 Q 2.75
(yC)-.11 G 6.179(allback .)-2.75 F 11(....................3)11 G(31)-11
E(13.5.7.3. String Con)72 462 Q -.165(ve)-.44 G(rsion Callback).165 E 11
(..................3)5.134 G(32)-11 E(13.5.7.4. Preedit State Callbacks)
72 475 Q 11(...................3)10.953 G(33)-11 E
(13.5.7.5. Preedit Dra)72 488 Q 2.75(wC)-.165 G 10.216(allback .)-2.75 F
11(..................3)11 G(34)-11 E(13.5.7.6. Preedit Caret Callback)72
501 Q 11(...................3)13.406 G(37)-11 E
(13.5.7.7. Status Callbacks)72 514 Q 11(.....................3)12.471 G
(38)-11 E(13.5.8. Ev)72 527 Q(ent Filtering)-.165 E 11
(......................3)13.857 G(40)-11 E(13.5.9. Getting K)72 540 Q
-.165(ey)-.275 G(board Input).165 E 11(....................3)2.846 G(41)
-11 E(13.5.10. Input Method Con)72 553 Q -.165(ve)-.44 G 8.797(ntions .)
.165 F 11(.................3)11 G(42)-11 E(13.5.10.1. Client Con)72 566
Q -.165(ve)-.44 G 6.344(ntions .).165 F 11(...................3)11 G(42)
-11 E(13.5.10.2. Synchronization Con)72 579 Q -.165(ve)-.44 G 2.384
(ntions .).165 F 11(................3)11 G(43)-11 E
(13.6. String Constants)72 592 Q 11(......................3)15.21 G(43)
-11 E(Chapter 14: Inter)72 605 Q(-Client Communication Functions)-.22 E
11(.............3)11.47 G(45)-11 E(14.1. Client to W)72 618 Q(indo)-.44
E 2.75(wM)-.275 G(anager Communication)-2.75 E 11(..............3)4.639
G(46)-11 E(14.1.1. Manipulating T)72 631 Q(op-Le)-.88 E -.165(ve)-.275 G
2.75(lW).165 G(indo)-3.19 E 8.412(ws .)-.275 F 11(...............3)11 G
(47)-11 E(14.1.2. Con)72 644 Q -.165(ve)-.44 G(rting String Lists).165 E
11(....................3)4.815 G(48)-11 E(14.1.3. Setting and Reading T)
72 657 Q -.165(ex)-.77 G 2.75(tP).165 G 1.196(roperties .)-2.75 F 11
(...............3)11 G(53)-11 E(14.1.4. Setting and Reading the WM_N)72
670 Q(AME Property)-.385 E 11(............3)11.041 G(55)-11 E
(14.1.5. Setting and Reading the WM_ICON_N)72 683 Q(AME Property)-.385 E
11(..........3)6.157 G(56)-11 E
(14.1.6. Setting and Reading the WM_HINTS Property)72 696 Q 11
(............3)10.656 G(58)-11 E
(14.1.7. Setting and Reading the WM_NORMAL_HINTS Property)72 709 Q 11
(........3)12.493 G(60)-11 E
(14.1.8. Setting and Reading the WM_CLASS Property)72 722 Q 11
(............3)8.808 G(65)-11 E 0 Cg EP
%%Page: 495 500
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Roman@0 SF
(14.1.9. Setting and Reading the WM_TRANSIENT_FOR Property)72 85 Q 11
(........3)10.04 G(66)-11 E(14.1.10. Setting and Reading the WM_PR)72 98
Q -2.068 -.44(OT O)-.44 H(COLS Property).44 E 11(.........3)15.694 G(67)
-11 E(14.1.11. Setting and Reading the WM_COLORMAP_WINDO)72 111 Q
(WS Property)-.385 E 11(.....3)13.186 G(68)-11 E
(14.1.12. Setting and Reading the WM_ICON_SIZE Property)72 124 Q 11
(..........3)9.435 G(70)-11 E(14.1.13. Using W)72 137 Q(indo)-.44 E 2.75
(wM)-.275 G(anager Con)-2.75 E -.165(ve)-.44 G(nience Functions).165 E
11(...........3)11.987 G(71)-11 E
(14.2. Client to Session Manager Communication)72 150 Q 11
(..............3)8.192 G(74)-11 E
(14.2.1. Setting and Reading the WM_COMMAND Property)72 163 Q 11
(..........3)11.877 G(75)-11 E
(14.2.2. Setting and Reading the WM_CLIENT_MA)72 176 Q(CHINE Property)
-.44 E 11(.......3)16.299 G(76)-11 E(14.3. Standard Colormaps)72 189 Q
11(.....................3)11.866 G(76)-11 E
(14.3.1. Standard Colormap Properties and Atoms)72 202 Q 11
(..............3)6.069 G(79)-11 E
(14.3.2. Setting and Obtaining Standard Colormaps)72 215 Q 11
(.............3)14.308 G(80)-11 E
(Chapter 15: Resource Manager Functions)72 228 Q 11(................3)
12.196 G(82)-11 E(15.1. Resource File Syntax)72 241 Q 11
(.....................3)7.895 G(83)-11 E
(15.2. Resource Manager Matching Rules)72 254 Q 11(................3)
15.254 G(84)-11 E(15.3. Quarks)72 267 Q 11(.........................3)
15.232 G(85)-11 E(15.4. Creating and Storing Databases)72 280 Q 11
(..................3)4.243 G(87)-11 E(15.5. Mer)72 293 Q
(ging Resource Databases)-.198 E 11(..................3)14.539 G(90)-11
E(15.6. Looking Up Resources)72 306 Q 11(....................3)14.319 G
(92)-11 E(15.7. Storing into a Resource Database)72 319 Q 11
(.................3)10.359 G(94)-11 E
(15.8. Enumerating Database Entries)72 332 Q 11(..................3)
9.446 G(96)-11 E(15.9. P)72 345 Q(arsing Command Line Options)-.165 E 11
(.................3)15.078 G(97)-11 E
(Chapter 16: Application Utility Functions)72 358 Q 11
(................4)11.547 G(00)-11 E(16.1. Using K)72 371 Q -.165(ey)
-.275 G(board Utility Functions).165 E 11(.................4)7.411 G(00)
-11 E(16.1.1. K)72 384 Q -.165(ey)-.275 G(Sym Classi\214cation Macros)
.165 E 11(.................4)12.306 G(02)-11 E(16.2. Using Latin-1 K)72
397 Q -.165(ey)-.275 G(board Ev).165 E(ent Functions)-.165 E 11
(...............4)3.011 G(04)-11 E(16.3. Allocating Permanent Storage)72
410 Q 11(..................4)10.656 G(05)-11 E(16.4. P)72 423 Q
(arsing the W)-.165 E(indo)-.44 E 2.75(wG)-.275 G 4.815(eometry .)-2.75
F 11(.................4)11 G(05)-11 E(16.5. Manipulating Re)72 436 Q
1.328(gions .)-.165 F 11(....................4)11 G(07)-11 E
(16.5.1. Creating, Cop)72 449 Q(ying, or Destro)-.11 E(ying Re)-.11 E
1.251(gions .)-.165 F 11(.............4)11 G(08)-11 E(16.5.2. Mo)72 462
Q(ving or Shrinking Re)-.165 E .877(gions .)-.165 F 11
(.................4)11 G(09)-11 E(16.5.3. Computing with Re)72 475 Q
8.038(gions .)-.165 F 11(..................4)11 G(09)-11 E
(16.5.4. Determining if Re)72 488 Q(gions Are Empty or Equal)-.165 E 11
(.............4)8.379 G(11)-11 E
(16.5.5. Locating a Point or a Rectangle in a Re)72 501 Q 8.687(gion .)
-.165 F 11(............4)11 G(11)-11 E(16.6. Using Cut Buf)72 514 Q
5.112(fers .)-.275 F 11(.....................4)11 G(12)-11 E
(16.7. Determining the Appropriate V)72 527 Q(isual T)-.66 E 12.515
(ype .)-.88 F 11(.............4)11 G(14)-11 E(16.8. Manipulating Images)
72 540 Q 11(.....................4)8.203 G(15)-11 E
(16.9. Manipulating Bitmaps)72 553 Q 11(.....................4)3.297 G
(19)-11 E(16.10. Using the Conte)72 566 Q(xt Manager)-.165 E 11
(..................4)16.013 G(22)-11 E
(Appendix A: Xlib Functions and Protocol Requests)72 579 Q 11
(.............4)10.029 G(25)-11 E(Appendix B:)72 592 Q 2.75(XF)5.5 G
(ont Cursors)-2.915 E 11(....................4)10.799 G(37)-11 E
(Appendix C: Extensions)72 605 Q 11(......................4)5.442 G(38)
-11 E(Appendix D: Compatibility Functions)72 618 Q 11
(.................4)14.594 G(63)-11 E 2.395(Glossary .)72 631 R 11
(..........................4)11 G(74)-11 E(Inde)72 644 Q -2.986 5.618
(x. . . . . . . . . . . . . . . . . . . . . . . . . . . . 4)-.165 H(89)
-5.618 E 0 Cg EP
%%Trailer
end
%%EOF
