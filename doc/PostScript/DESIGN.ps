%!PS-Adobe-3.0
%%Creator: groff version 1.19.2
%%CreationDate: Sun Dec 28 21:35:15 2008
%%DocumentNeededResources: font Helvetica-Bold
%%+ font Palatino-Roman
%%+ font Palatino-Bold
%%+ font Times-Roman
%%+ font Courier
%%+ font Palatino-Italic
%%DocumentSuppliedResources: procset grops 1.19 2
%%Pages: 107
%%PageOrder: Ascend
%%DocumentMedia: Default 612 792 0 () ()
%%Orientation: Portrait
%%EndComments
%%BeginDefaults
%%PageMedia: Default
%%EndDefaults
%%BeginProlog
%%BeginResource: procset grops 1.19 2
%!PS-Adobe-3.0 Resource-ProcSet
/setpacking where{
pop
currentpacking
true setpacking
}if
/grops 120 dict dup begin
/SC 32 def
/A/show load def
/B{0 SC 3 -1 roll widthshow}bind def
/C{0 exch ashow}bind def
/D{0 exch 0 SC 5 2 roll awidthshow}bind def
/E{0 rmoveto show}bind def
/F{0 rmoveto 0 SC 3 -1 roll widthshow}bind def
/G{0 rmoveto 0 exch ashow}bind def
/H{0 rmoveto 0 exch 0 SC 5 2 roll awidthshow}bind def
/I{0 exch rmoveto show}bind def
/J{0 exch rmoveto 0 SC 3 -1 roll widthshow}bind def
/K{0 exch rmoveto 0 exch ashow}bind def
/L{0 exch rmoveto 0 exch 0 SC 5 2 roll awidthshow}bind def
/M{rmoveto show}bind def
/N{rmoveto 0 SC 3 -1 roll widthshow}bind def
/O{rmoveto 0 exch ashow}bind def
/P{rmoveto 0 exch 0 SC 5 2 roll awidthshow}bind def
/Q{moveto show}bind def
/R{moveto 0 SC 3 -1 roll widthshow}bind def
/S{moveto 0 exch ashow}bind def
/T{moveto 0 exch 0 SC 5 2 roll awidthshow}bind def
/SF{
findfont exch
[exch dup 0 exch 0 exch neg 0 0]makefont
dup setfont
[exch/setfont cvx]cvx bind def
}bind def
/MF{
findfont
[5 2 roll
0 3 1 roll
neg 0 0]makefont
dup setfont
[exch/setfont cvx]cvx bind def
}bind def
/level0 0 def
/RES 0 def
/PL 0 def
/LS 0 def
/MANUAL{
statusdict begin/manualfeed true store end
}bind def
/PLG{
gsave newpath clippath pathbbox grestore
exch pop add exch pop
}bind def
/BP{
/level0 save def
1 setlinecap
1 setlinejoin
72 RES div dup scale
LS{
90 rotate
}{
0 PL translate
}ifelse
1 -1 scale
}bind def
/EP{
level0 restore
showpage
}def
/DA{
newpath arcn stroke
}bind def
/SN{
transform
.25 sub exch .25 sub exch
round .25 add exch round .25 add exch
itransform
}bind def
/DL{
SN
moveto
SN
lineto stroke
}bind def
/DC{
newpath 0 360 arc closepath
}bind def
/TM matrix def
/DE{
TM currentmatrix pop
translate scale newpath 0 0 .5 0 360 arc closepath
TM setmatrix
}bind def
/RC/rcurveto load def
/RL/rlineto load def
/ST/stroke load def
/MT/moveto load def
/CL/closepath load def
/Fr{
setrgbcolor fill
}bind def
/setcmykcolor where{
pop
/Fk{
setcmykcolor fill
}bind def
}if
/Fg{
setgray fill
}bind def
/FL/fill load def
/LW/setlinewidth load def
/Cr/setrgbcolor load def
/setcmykcolor where{
pop
/Ck/setcmykcolor load def
}if
/Cg/setgray load def
/RE{
findfont
dup maxlength 1 index/FontName known not{1 add}if dict begin
{
1 index/FID ne{def}{pop pop}ifelse
}forall
/Encoding exch def
dup/FontName exch def
currentdict end definefont pop
}bind def
/DEFS 0 def
/EBEGIN{
moveto
DEFS begin
}bind def
/EEND/end load def
/CNT 0 def
/level1 0 def
/PBEGIN{
/level1 save def
translate
div 3 1 roll div exch scale
neg exch neg exch translate
0 setgray
0 setlinecap
1 setlinewidth
0 setlinejoin
10 setmiterlimit
[]0 setdash
/setstrokeadjust where{
pop
false setstrokeadjust
}if
/setoverprint where{
pop
false setoverprint
}if
newpath
/CNT countdictstack def
userdict begin
/showpage{}def
/setpagedevice{}def
}bind def
/PEND{
countdictstack CNT sub{end}repeat
level1 restore
}bind def
end def
/setpacking where{
pop
setpacking
}if
%%EndResource
%%EndProlog
%%BeginSetup
%%BeginFeature: *PageSize Default
<< /PageSize [ 612 792 ] /ImagingBBox null >> setpagedevice
%%EndFeature
%%IncludeResource: font Helvetica-Bold
%%IncludeResource: font Palatino-Roman
%%IncludeResource: font Palatino-Bold
%%IncludeResource: font Times-Roman
%%IncludeResource: font Courier
%%IncludeResource: font Palatino-Italic
grops begin/DEFS 1 dict def DEFS begin/u{.001 mul}bind def end/RES 72
def/PL 792 def/LS false def/ENC0[/asciicircum/asciitilde/Scaron/Zcaron
/scaron/zcaron/Ydieresis/trademark/quotesingle/Euro/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/space/exclam/quotedbl/numbersign/dollar/percent
/ampersand/quoteright/parenleft/parenright/asterisk/plus/comma/hyphen
/period/slash/zero/one/two/three/four/five/six/seven/eight/nine/colon
/semicolon/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J/K/L/M/N/O
/P/Q/R/S/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright/circumflex
/underscore/quoteleft/a/b/c/d/e/f/g/h/i/j/k/l/m/n/o/p/q/r/s/t/u/v/w/x/y
/z/braceleft/bar/braceright/tilde/.notdef/quotesinglbase/guillemotleft
/guillemotright/bullet/florin/fraction/perthousand/dagger/daggerdbl
/endash/emdash/ff/fi/fl/ffi/ffl/dotlessi/dotlessj/grave/hungarumlaut
/dotaccent/breve/caron/ring/ogonek/quotedblleft/quotedblright/oe/lslash
/quotedblbase/OE/Lslash/.notdef/exclamdown/cent/sterling/currency/yen
/brokenbar/section/dieresis/copyright/ordfeminine/guilsinglleft
/logicalnot/minus/registered/macron/degree/plusminus/twosuperior
/threesuperior/acute/mu/paragraph/periodcentered/cedilla/onesuperior
/ordmasculine/guilsinglright/onequarter/onehalf/threequarters
/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE
/Ccedilla/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex
/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis
/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn
/germandbls/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash
/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]def
/Palatino-Italic@0 ENC0/Palatino-Italic RE/Courier@0 ENC0/Courier RE
/Times-Roman@0 ENC0/Times-Roman RE/Palatino-Bold@0 ENC0/Palatino-Bold RE
/Palatino-Roman@0 ENC0/Palatino-Roman RE/Helvetica-Bold@0 ENC0
/Helvetica-Bold RE
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
BP
%%EndPageSetup
/F0 18/Helvetica-Bold@0 SF(XFree86\256 ser)148.23 188 Q
(ver 4.x Design \(DRAFT\)).18 E/F1 10/Palatino-Roman@0 SF(The XFr)
252.975 206 Q(ee86 Pr)-.18 E(oject, Inc)-.18 E(13 October 2005)270.855
224 Q/F2 10/Palatino-Bold@0 SF(NOTE)90 272 Q F1 2.954(:T)C .454
(his is a DRAFT document, and the interfaces described her)-2.954 F
2.954(ea)-.18 G .814 -.18(re s)-2.954 H .454(ubject to change with-).18
F(out notice.)90 284 Q/F3 16/Helvetica-Bold@0 SF 4.448(1. Preface)90 314
R F1(The br)90 332 Q(oad design principles ar)-.18 E(e:)-.18 E/F4 8
/Palatino-Roman@0 SF<83>105.152 350 Q F1(keep it r)5 E(easonable)-.18 E
F4<83>130.152 368 Q F1 1.84 -.92(We c)5 H(annot r).92 E
(ewrite the complete server)-.18 E F4<83>130.152 386 Q F1 1.84 -.92
(We d)5 H(on't want to r).92 E(e-invent the wheel)-.18 E F4<83>105.152
404 Q F1(keep it modular)5 E F4<83>130.152 422 Q F1
(As many things as possible should go into modules)5 E F4<83>130.152 440
Q F1(The basic loader binary should be minimal)5 E F4<83>130.152 458 Q
F1 2.5(Ac)5 G(lean design with well de\214ned layering is important)-2.5
E F4<83>130.152 476 Q F1(DDX speci\214c global variables ar)5 E 2.5(ean)
-.18 G(ono)-2.5 E F4<83>130.152 494 Q F1(The str)5 E(uctur)-.08 E 2.5
(es)-.18 G(hould be \215exible enough to allow futur)-2.5 E 2.5(ee)-.18
G(xtensions)-2.5 E F4<83>130.152 512 Q F1(The str)7.5 E(uctur)-.08 E 2.5
(es)-.18 G(hould minimize duplication of common code)-2.5 E F4<83>
105.152 530 Q F1(keep important featur)5 E(es in mind)-.18 E F4<83>
130.152 548 Q F1(multiple scr)5 E
(eens, including multiple instances of drivers)-.18 E F4<83>130.152 566
Q F1 1.125(mixing dif)5 F(fer)-.18 E 1.125
(ent color depths and visuals on dif)-.18 F(fer)-.18 E 1.126
(ent and ideally even on the same)-.18 F(scr)140 578 Q(een)-.18 E F4<83>
130.152 596 Q F1(better contr)5 E(ol of the PCI device used)-.18 E F4
<83>130.152 614 Q F1(better con\214g \214le parser)5 E F4<83>130.152 632
Q F1(get rid of all VGA compatibility assumptions)5 E
(Unless we \214nd major de\214ciencies in the DIX layer)90 650 Q 2.5(,w)
-.74 G 2.5(es)-2.5 G(hould avoid making changes ther)-2.5 E(e.)-.18 E F3
4.448(2. The)90 680 R(XF86Con\214g File)4.448 E F1(The XF86Con\214g \
\214le format is similar to the old format, with the following changes:)
90 698 Q/F5 10/Times-Roman@0 SF(XFree86\256 serv)90 768 Q
(er 4.x Design \(DRAFT\))-.15 E(1)269.86 E 0 Cg EP
%%Page: 2 2
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(XFree86\256 serv)90 48 Q
(er 4.x Design \(DRAFT\))-.15 E(2)269.86 E/F1 14/Helvetica-Bold@0 SF
3.892(2.1 De)90 100 R(vice section)-.21 E/F2 10/Palatino-Roman@0 SF(The)
90 118 Q/F3 10/Palatino-Bold@0 SF(Device)2.838 E F2 .337(sections ar)
2.838 F 2.837(es)-.18 G .337
(imilar to what they used to be, and describe har)-2.837 F(dwar)-.18 E
.337(e-speci\214c informa-)-.18 F(tion for a single video car)90 130 Q
(d.)-.18 E F3(Device)5 E F2(Some new keywor)2.5 E(ds ar)-.18 E 2.5(ea)
-.18 G(dded:)-2.5 E(Driver "drivername")120 148 Q
(Speci\214es the name of the driver to be used for the car)150 160 Q 2.5
(d. This)-.18 F(is mandatory.)2.5 E(BusID "busslot")120 178 Q 1.287
(Speci\214es uniquely the location of the car)150 190 R 3.787(do)-.18 G
3.787(nt)-3.787 G 1.287(he bus.)-3.787 F 1.287
(The purpose is to identify)6.287 F 1.788(particular car)150 202 R 1.788
(ds in a multi-headed con\214guration.)-.18 F 1.787
(The format of the ar)6.787 F 1.787(gument is)-.18 F .567
(intentionally vague, and may be ar)150 214 R(chitectur)-.18 E 3.068(ed)
-.18 G 3.068(ependent. For)-3.068 F 3.068(aP)3.068 G .568
(CI bus, it is some-)-3.068 F(thing like "bus:slot:func".)150 226 Q(A)90
244 Q F3(Device)2.5 E F2(section is consider)2.5 E(ed `)-.18 E
(`active'' if ther)-.37 E 2.5(ei)-.18 G 2.5(sar)-2.5 G(efer)-2.68 E
(ence to it in an active)-.18 E F3(Screen)2.5 E F2(section.)2.5 E F1
3.892(2.2 Screen)90 266 R(section)3.892 E F2(The)90 284 Q F3(Screen)
2.885 E F2 .385(sections ar)2.885 F 2.885(es)-.18 G .385
(imilar to what they used to be.)-2.885 F .384(They no longer have a)
5.385 F F3(Driver)2.884 E F2(keywor)2.884 E(d,)-.18 E .408(but an)90 296
R F3(Identi\214er)2.908 E F2(keywor)2.908 E 2.908(di)-.18 G 2.909(sa)
-2.908 G 2.909(dded. \(The)-2.909 F F3(Driver)2.909 E F2(keywor)2.909 E
2.909(dm)-.18 G .409(ay be accepted in place of the)-2.909 F F3(Iden-)
2.909 E(ti\214er)90 308 Q F2(keywor)2.868 E 2.868(df)-.18 G .367
(or compatibility purposes.\))-2.868 F .367
(The identi\214er can be used to identify which scr)5.367 F .367(een is)
-.18 F .618(to be active when multiple)90 320 R F3(Screen)3.119 E F2
.619(sections ar)3.119 F 3.119(ep)-.18 G -.18(re)-3.119 G 3.119
(sent. It).18 F .619(is possible to specify the active scr)3.119 F(een)
-.18 E(fr)90 332 Q .309(om the command line.)-.18 F 2.808(Ad)5.309 G
.308(efault is chosen in the absence of one being speci\214ed.)-2.808 F
(A)5.308 E F3(Screen)2.808 E F2(sec-)2.808 E .852(tion is consider)90
344 R .852(ed `)-.18 F .852(`active'' if ther)-.37 F 3.352(ei)-.18 G
3.352(sar)-3.352 G(efer)-3.532 E .852(ence to it either fr)-.18 F .853
(om the command line, or fr)-.18 F .853(om an)-.18 F(active)90 356 Q F3
(ServerLayout)2.5 E F2(section.)2.5 E F1 3.892(2.3 InputDe)90 378 R
(vice section)-.21 E F2(The)90 396 Q F3(InputDevice)4.791 E F2 2.291(se\
ction is a new section that describes con\214guration information for i\
nput)4.791 F 3.464(devices. It)90 408 R -.18(re)3.464 G .964
(places the old).18 F F3(Keyboard)3.464 E F2(,)A F3(Pointer)3.464 E F2
(and)3.464 E F3(XInput)3.464 E F2 3.464(sections. Like)3.464 F(the)3.465
E F3(Device)3.465 E F2 .965(section, it)3.465 F 1.263
(has two mandatory keywor)90 420 R(ds:)-.18 E F3(Identi\214er)3.763 E F2
(and)3.763 E F3(Driver)3.763 E F2 6.262(.F)C 1.262
(or compatibility purposes the old)-6.262 F F3(Key-)3.762 E(board)90 432
Q F2(and)2.5 E F3(Pointer)2.5 E F2(sections ar)2.5 E 2.5(ec)-.18 G
(onverted by the parser into)-2.5 E F3(InputDevice)2.5 E F2
(sections as follows:)2.5 E F3(Keyboard)120 450 Q(Identi\214er)150 462 Q
F2("Implicit Cor)2.5 E 2.5(eK)-.18 G(eyboar)-2.5 E(d")-.18 E F3(Driver)
150 486 Q F2("keyboar)2.5 E(d")-.18 E F3(Pointer)120 504 Q(Identi\214er)
150 516 Q F2("Implicit Cor)2.5 E 2.5(eP)-.18 G(ointer")-2.5 E F3(Driver)
150 540 Q F2("mouse")2.5 E(An)90 558 Q F3(InputDevice)2.869 E F2 .369
(section is consider)2.869 F .369(ed active if ther)-.18 F 2.869(ei)-.18
G 2.869(sar)-2.869 G(efer)-3.049 E .37(ence to it in an active)-.18 F F3
(ServerLayout)2.87 E F2 3.828(section. An)90 570 R F3(InputDevice)3.828
E F2 1.328(section may also be r)3.828 F(efer)-.18 E 1.328
(enced implicitly if ther)-.18 F 3.827(ei)-.18 G 3.827(sn)-3.827 G(o)
-3.827 E F3(ServerLayout)3.827 E F2 .322(section, if the)90 582 R/F4 10
/Courier@0 SF(-screen)2.822 E F2 .322
(command line options is used, or if the)2.822 F F3(ServerLayout)2.822 E
F2 .322(section doesn't r)2.822 F(ef-)-.18 E(er)90 594 Q 2.029(ence any)
-.18 F F3(InputDevice)4.529 E F2 4.529(sections. In)4.529 F 2.028
(this case, the \214rst sections with drivers "keyboar)4.529 F 2.028
(d" and)-.18 F("mouse" ar)90 606 Q 2.5(eu)-.18 G(sed as the cor)-2.5 E
2.5(ek)-.18 G(eyboar)-2.5 E 2.5(da)-.18 G(nd pointer r)-2.5 E
(espectively.)-.18 E F1 3.892(2.4 Ser)90 628 R(verLa).14 E -.35(yo)-.28
G(ut section).35 E F2(The)90 646 Q F3(ServerLayout)2.734 E F2 .235
(section is a new section that is used to identify which)2.734 F F3
(Screen)2.735 E F2 .235(sections ar)2.735 F 2.735(et)-.18 G 2.735(ob)
-2.735 G(e)-2.735 E .949
(used in a multi-headed con\214guration, and the r)90 658 R .948
(elative layout of those scr)-.18 F 3.448(eens. It)-.18 F .948
(also identi\214es)3.448 F(which)90 670 Q F3(InputDevice)2.985 E F2 .485
(sections ar)2.985 F 2.985(et)-.18 G 2.985(ob)-2.985 G 2.985(eu)-2.985 G
2.985(sed. Each)-2.985 F F3(ServerLayout)2.985 E F2 .486
(section has an identi\214er)2.985 F 2.986(,al)-.74 G .486(ist of)-2.986
F F3(Screen)90 682 Q F2 .443(section identi\214ers, and a list of)2.943
F F3(InputDevice)2.942 E F2 .442(section identi\214ers.)2.942 F F3
(ServerFlags)5.442 E F2 .442(options may)2.942 F .121
(also be included in a)90 694 R F3(ServerLayout)2.622 E F2 .122
(section, making it possible to override the global values in the)2.622
F F3(ServerFlags)90 706 Q F2(section.)2.5 E(A)90 724 Q F3(ServerLayout)
3.973 E F2 1.473(section can be made active by being r)3.973 F(efer)-.18
E 1.472(enced on the command line.)-.18 F 1.472(In the)6.472 F .729
(absence of this, a default will be chosen \(the \214rst one found\).)90
736 R .73(The scr)5.73 F .73(een names may optionally)-.18 F 0 Cg EP
%%Page: 3 3
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(XFree86\256 serv)90 48 Q
(er 4.x Design \(DRAFT\))-.15 E(3)269.86 E/F1 10/Palatino-Roman@0 SF
.573(be followed by a number specifying the pr)90 96 R(eferr)-.18 E .573
(ed scr)-.18 F .573(een number)-.18 F 3.073(,a)-.74 G .573
(nd optionally by information)-3.073 F 1.103
(specifying the physical positioning of the scr)90 108 R 1.104
(een, either in absolute terms or r)-.18 F 1.104(elative to another)-.18
F(scr)90 120 Q 1.553(een \(or scr)-.18 F 4.052(eens\). When)-.18 F 1.552
(no scr)4.052 F 1.552(een number is speci\214ed, they ar)-.18 F 4.052
(en)-.18 G(umber)-4.052 E 1.552(ed accor)-.18 F 1.552(ding to the)-.18 F
(or)90 132 Q .14(der in which they ar)-.18 F 2.64(el)-.18 G 2.64
(isted. The)-2.64 F .14(old \(now obsolete\) method of pr)2.64 F .14
(oviding the positioning infor)-.18 F(-)-.18 E .841
(mation is to give the names of the four adjacent scr)90 144 R 3.34
(eens. The)-.18 F(or)3.34 E .84(der of these is top, bottom, left,)-.18
F 3.165(right. Her)90 156 R 3.165(ei)-.18 G 3.165(sa)-3.165 G 3.165(ne)
-3.165 G .665(xample of a)-3.165 F/F2 10/Palatino-Bold@0 SF
(ServerLayout)3.165 E F1 .665(section for two scr)3.165 F .665
(eens using the old method, with)-.18 F
(the second located to the right of the \214rst:)90 168 Q/F3 8/Courier@0
SF(Section "ServerLayout")138.8 184 Q(Identifier "Main Layout")148.4 194
Q 19.2(Screen 0)148.4 204 R("Screen 1" "")4.8 E 4.8("" "" "Screen)9.6 F
(2")4.8 E 19.2(Screen 1)148.4 214 R("Screen 2")4.8 E 19.2
(Screen "Screen)148.4 224 R(3")4.8 E(EndSection)138.8 234 Q F1 .21
(The pr)90 262 R(eferr)-.18 E .209
(ed way of specifying the layout is to explicitly specify the scr)-.18 F
.209(een's location in absolute)-.18 F(terms or r)90 274 Q
(elative to another scr)-.18 E(een.)-.18 E .411
(In the absolute case, the upper left corner's coor)90 292 R .411
(dinates ar)-.18 F 2.911(eg)-.18 G .412(iven after the)-2.911 F F2
(Absolute)2.912 E F1(keywor)2.912 E 2.912(d. If)-.18 F 1.013(the coor)90
304 R 1.013(dinates ar)-.18 F 3.512(eo)-.18 G 1.012(mitted, a value of)
-3.512 F/F4 10/Courier@0 SF(\(0,0\))3.512 E F1 1.012(is assumed.)3.512 F
1.012(An example of absolute positioning)6.012 F(follows:)90 316 Q F3
(Section "ServerLayout")138.8 332 Q(Identifier "Main Layout")148.4 342 Q
19.2(Screen 0)148.4 352 R("Screen 1" Absolute 0 0)4.8 E 19.2(Screen 1)
148.4 362 R("Screen 2" Absolute 1024 0)4.8 E 19.2(Screen "Screen)148.4
372 R(3" Absolute 2048 0)4.8 E(EndSection)138.8 382 Q F1 1.062(In the r)
90 410 R 1.063(elative case, the position is speci\214ed by either usin\
g one of the following keywor)-.18 F 1.063(ds fol-)-.18 F
(lowed by the name of the r)90 422 Q(efer)-.18 E(ence scr)-.18 E(een:)
-.18 E F2(RightOf)115 440 Q(LeftOf)115 464 Q(Above)115 488 Q(Below)115
512 Q(Relative)115 536 Q F1 .54(When the)90 554 R F2(Relative)3.04 E F1
(keywor)3.04 E 3.04(di)-.18 G 3.04(su)-3.04 G .54(sed, the r)-3.04 F
(efer)-.18 E .54(ence scr)-.18 F .54(een name is followed by the coor)
-.18 F .54(dinates of)-.18 F 1.38(the new scr)90 566 R 1.38
(een's origin r)-.18 F 1.381(elative to r)-.18 F(efer)-.18 E 1.381
(ence scr)-.18 F 3.881(een. The)-.18 F 1.381
(following example shows how to use)3.881 F(some of the r)90 578 Q
(elative positioning options.)-.18 E F3(Section "ServerLayout")138.8 594
Q(Identifier "Main Layout")148.4 604 Q 19.2(Screen 0)148.4 614 R
("Screen 1")4.8 E 19.2(Screen 1)148.4 624 R
("Screen 2" RightOf "Screen 1")4.8 E 19.2(Screen "Screen)148.4 634 R
(3" Relative "Screen 1" 2048 0)4.8 E(EndSection)138.8 644 Q/F5 14
/Helvetica-Bold@0 SF 3.892(2.5 Options)90 676 R F1 .809(Options ar)90
694 R 3.309(eu)-.18 G .809(sed mor)-3.309 F 3.309(ee)-.18 G 3.309
(xtensively. They)-3.309 F .808(may appear in most sections now.)3.309 F
.808(Options r)5.808 F .808(elated to)-.18 F .685(drivers can be pr)90
706 R .685(esent in the)-.18 F F2(Screen)3.186 E F1(,)A F2(Device)3.186
E F1(and)3.186 E F2(Monitor)3.186 E F1 .686(sections and the)3.186 F F2
(Display)3.186 E F1(subsections.)3.186 E 1.316(The or)90 718 R 1.316
(der of pr)-.18 F 1.316(ecedence is)-.18 F F2(Display)3.816 E F1(,)A F2
(Screen)3.815 E F1(,)A F2(Monitor)3.815 E F1(,)A F2(Device)3.815 E F1
6.315(.O)C 1.315(ptions have been extended to)-6.315 F 1.087(allow an o\
ptional value to be speci\214ed in addition to the option name.)90 730 R
1.087(For mor)6.087 F 3.587(ed)-.18 G 1.087(etails about)-3.587 F
(options, see the)90 742 Q/F6 10/Palatino-Italic@0 SF(Options)2.5 E F1
(\(section 10., page 33\) section for details.)2.5 E 0 Cg EP
%%Page: 4 4
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(XFree86\256 serv)90 48 Q
(er 4.x Design \(DRAFT\))-.15 E(4)269.86 E/F1 16/Helvetica-Bold@0 SF
4.448(3. Driver)90 102 R(Interface)4.448 E/F2 10/Palatino-Roman@0 SF .28
(The driver interface consists of a minimal set of entry points that ar)
90 120 R 2.779(er)-.18 G(equir)-2.959 E .279(ed based on the exter)-.18
F(-)-.18 E .811(nal events that the driver must r)90 132 R .811
(eact to.)-.18 F .811(No non-essential str)5.811 F(uctur)-.08 E 3.311
(ei)-.18 G 3.311(si)-3.311 G .812(mposed on the way they)-3.311 F(ar)90
144 Q 2.5(eu)-.18 G(sed beyond that.)-2.5 E(This is a signi\214cant dif)
5 E(fer)-.18 E(ence compar)-.18 E(ed with the old design.)-.18 E 2.535
(The entry points for drawing operations ar)90 162 R 5.035(ea)-.18 G(lr)
-5.035 E 2.535(eady taken car)-.18 F 5.035(eo)-.18 G 5.035(fb)-5.035 G
5.035(yt)-5.035 G 2.535(he framebuf)-5.035 F 2.535(fer code)-.18 F .003
(\(including, XAA\).)90 174 R .004
(Extensions and enhancements to framebuf)5.003 F .004(fer code ar)-.18 F
2.504(eo)-.18 G .004(utside the scope of this)-2.504 F(document.)90 186
Q .003(This appr)90 204 R .003(oach to the driver interface pr)-.18 F
.003(ovides good \215exibility)-.18 F 2.503(,b)-1.11 G .003
(ut does incr)-2.503 F .002(ease the complexity of)-.18 F 3.176
(drivers. T)90 216 R 3.176(oh)-.92 G .676(elp addr)-3.176 F .676
(ess this, the XFr)-.18 F .676(ee86 common layer pr)-.18 F .676
(ovides a set of `)-.18 F .676(`helper'' functions to)-.37 F 1.823
(take car)90 228 R 4.323(eo)-.18 G 4.323(ft)-4.323 G 1.823
(hings that most drivers need.)-4.323 F 1.822
(These helpers help minimise the amount of code)6.823 F .356
(duplication between drivers.)90 240 R .356
(The use of helper functions by drivers is however optional, though)
5.356 F 3.622(encouraged. The)90 252 R 1.121(basic philosophy behind th\
e helper functions is that they should be useful to)3.622 F 2.789(many \
drivers, that they should balance this against the complexity of their \
interface.)90 264 R 2.79(It is)7.79 F 1.374(inevitable that some driver\
s may \214nd some helpers unsuitable and need to pr)90 276 R 1.374
(ovide their own)-.18 F(code.)90 288 Q(Events that a driver needs to r)
90 306 Q(eact to ar)-.18 E(e:)-.18 E(Scr)120 324 Q(eenInit)-.18 E .578
(An initialisation function is called fr)150 336 R .579
(om the DIX layer for each scr)-.18 F .579(een at the start of)-.18 F
(each server generation.)150 348 Q(Enter VT)120 366 Q
(The server takes contr)150 378 Q(ol of the console.)-.18 E(Leave VT)120
396 Q(The server r)150 408 Q(eleases contr)-.18 E(ol of the console.)
-.18 E(Mode Switch)120 426 Q(Change video mode.)150 438 Q -.55(Vi)120
456 S(ewPort change).55 E(Change the origin of the physical view port.)
150 468 Q(Scr)120 486 Q(eenSaver state change)-.18 E(Scr)150 498 Q
(een saver activation/deactivation.)-.18 E(CloseScr)120 516 Q(een)-.18 E
3.789(Ac)150 528 S 1.289(lose scr)-3.789 F 1.289
(een function is called fr)-.18 F 1.289(om the DIX layer for each scr)
-.18 F 1.288(een at the end of)-.18 F(each server generation.)150 540 Q
(In addition to these events, the following functions ar)90 558 Q 2.5
(er)-.18 G(equir)-2.68 E(ed by the XFr)-.18 E(ee86 common layer:)-.18 E
(Identify)120 576 Q(Print a driver identifying message.)150 588 Q(Pr)120
606 Q(obe)-.18 E .258(This is how a driver identi\214es if ther)150 618
R 2.759(ei)-.18 G 2.759(sa)-2.759 G .259(ny har)-2.759 F(dwar)-.18 E
2.759(ep)-.18 G -.18(re)-2.759 G .259(sent that it knows how to).18 F
(drive.)150 630 Q(Pr)120 648 Q(eInit)-.18 E(Pr)150 660 Q 1.181
(ocess information fr)-.18 F 1.181
(om the XF86Con\214g \214le, determine the full characteristics of)-.18
F(the har)150 672 Q(dwar)-.18 E
(e, and determine if a valid con\214guration is pr)-.18 E(esent.)-.18 E
(The V)90 690 Q(idMode extension also r)-.55 E(equir)-.18 E(es:)-.18 E
-.92(Va)120 708 S(lidMode).92 E .973
(Identify if a new mode is usable with the curr)150 720 R .973
(ent con\214guration.)-.18 F .973(The Pr)5.973 F .974(eInit func-)-.18 F
2.337(tion \(and/or helpers it calls\) may also make use of the V)150
732 R 2.337(alidMode function or)-.92 F 0 Cg EP
%%Page: 5 5
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(XFree86\256 serv)90 48 Q
(er 4.x Design \(DRAFT\))-.15 E(5)269.86 E/F1 10/Palatino-Roman@0 SF
(something similar.)150 96 Q 1.071(Other extensions may r)90 114 R
(equir)-.18 E 3.571(eo)-.18 G 1.071(ther entry points.)-3.571 F 1.072
(The drivers will inform the common layer of)6.071 F
(these in such cases.)90 126 Q/F2 16/Helvetica-Bold@0 SF 4.448
(4. Resour)90 156 R(ce Access Contr)-.32 E(ol Intr)-.32 E(oduction)-.32
E F1 1.875(Graphics devices ar)90 174 R 4.375(ea)-.18 G 1.875
(ccessed thr)-4.375 F 1.875(ough ranges in I/O or memory space.)-.18 F
1.874(While most modern)6.874 F .413(graphics devices allow r)90 186 R
.413(elocation of such ranges many of them still r)-.18 F(equir)-.18 E
2.913(et)-.18 G .413(he use of well estab-)-2.913 F .519(lished interfa\
ces such as VGA memory and IO ranges or 8514/A IO ranges.)90 198 R -.55
(Wi)5.518 G .518(th modern buses).55 F 1.193
(\(like PCI\) it is possible for multiple video devices to shar)90 210 R
3.693(ea)-.18 G 1.193(ccess to these r)-3.693 F(esour)-.18 E 3.694
(ces. The)-.18 F(RAC)3.694 E(\(Resour)90 222 Q(ce Access Contr)-.18 E
(ol\) subsystem pr)-.18 E(ovides a mechanism for this.)-.18 E/F3 14
/Helvetica-Bold@0 SF 3.892(4.1 T)90 244 R(erms and De\214nitions)-.84 E
/F4 12/Helvetica-Bold@0 SF 3.336(4.1.1 Bus)90 264 R F1 -.37(``)90 282 S
.425(Bus'' is ambiguous as it is used for dif).37 F(fer)-.18 E .425
(ent things: it may r)-.18 F .425(efer to physical incompatible exten-)
-.18 F .876(sion connectors in a computer system.)90 294 R .877
(The RAC system knows two such systems: The ISA bus)5.877 F .542
(and the PCI bus.)90 306 R .542(\(On the softwar)5.542 F 3.042(el)-.18 G
.542(evel EISA, MCA and VL buses ar)-3.042 F 3.041(ec)-.18 G(urr)-3.041
E .541(ently tr)-.18 F .541(eated like ISA)-.18 F 3.038(buses\). `)90
318 R .538(`Bus'' may also r)-.37 F .539(efer to logically dif)-.18 F
(fer)-.18 E .539(ent entities on a single bus system which ar)-.18 F
3.039(ec)-.18 G(on-)-3.039 E .63(nected via bridges.)90 330 R 3.13(AP)
5.63 G .629
(CI system may have several distinct PCI buses connecting each other by)
-3.13 F(PCI-PCI bridges or to the host CPU by HOST)90 342 Q
(-PCI bridges.)-.55 E .203(Systems that host mor)90 360 R 2.703(et)-.18
G .203(han one bus system link these together using bridges.)-2.703 F
.203(Bridges ar)5.203 F 2.704(eac)-.18 G(on-)-2.704 E 1.223
(cern to RAC as they might block or pass speci\214c r)90 372 R(esour)
-.18 E 3.723(ces. PCI-PCI)-.18 F 1.223(bridges may be set up to)3.723 F
.408(pass VGA r)90 384 R(esour)-.18 E .408(ces to the secondary bus.)
-.18 F .409(PCI-ISA buses pass any r)5.409 F(esour)-.18 E .409
(ces not decoded on the)-.18 F 1.047(primary PCI bus to the ISA bus.)90
396 R 1.047(This way VGA r)6.047 F(esour)-.18 E 1.047
(ces \(although exclusive on the ISA bus\))-.18 F .085(can be shar)90
408 R .085(ed by ISA and PCI car)-.18 F 2.585(ds. Curr)-.18 F .085
(ently HOST)-.18 F .085(-PCI bridges ar)-.55 F 2.585(en)-.18 G .086
(ot yet handled by RAC as)-2.585 F(they r)90 420 Q(equir)-.18 E 2.5(es)
-.18 G(peci\214c drivers.)-2.5 E F4 3.336(4.1.2 Entity)90 440 R F1 .025
(The smallest independently addr)90 458 R .025
(essable unit on a system bus is r)-.18 F(eferr)-.18 E .025
(ed to as an entity.)-.18 F .024(So far we)5.024 F .148
(know ISA and PCI entities.)90 470 R .148
(PCI entities can be located on the PCI bus by an unique ID consisting)
5.148 F(of the bus, car)90 482 Q 2.5(da)-.18 G(nd function number.)-2.5
E F4 3.336(4.1.3 Resour)90 502 R(ce)-.24 E F1 -.37(``)90 520 S(Resour)
.37 E(ce'' r)-.18 E(efers to a range of memory or I/O addr)-.18 E
(esses an entity can decode.)-.18 E .292
(If a device is capable of disabling this decoding the r)90 538 R(esour)
-.18 E .292(ce is called sharable.)-.18 F .291(For PCI devices a)5.291 F
.987(generic method is pr)90 550 R .987(ovided to contr)-.18 F .987
(ol r)-.18 F(esour)-.18 E .987(ce decoding.)-.18 F .987
(Other devices will have to pr)5.987 F .988(ovide a)-.18 F
(device speci\214c function to contr)90 562 Q(ol decoding.)-.18 E 1.131
(If the entity is capable of decoding this range at a dif)90 580 R(fer)
-.18 E 1.131(ent location this r)-.18 F(esour)-.18 E 1.131
(ce is consider)-.18 F(ed)-.18 E -.18(re)90 592 S(locatable.).18 E
(Resour)90 610 Q .287(ces which start at a speci\214c addr)-.18 F .287
(ess and occupy a single continuous range ar)-.18 F 2.788(ec)-.18 G .288
(alled block)-2.788 F -.18(re)90 622 S(sour).18 E(ces.)-.18 E
(Alternatively r)90 640 Q(esour)-.18 E(ce addr)-.18 E
(esses can be decoded in a way that they satisfy the conditions:)-.18 E
/F5 8/Courier@0 SF(address & mask == base)231 662 Q F1(and)90 708 Q 0 Cg
EP
%%Page: 6 6
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(XFree86\256 serv)90 48 Q
(er 4.x Design \(DRAFT\))-.15 E(6)269.86 E/F1 8/Courier@0 SF
(base & mask == base)245.4 94 Q/F2 10/Palatino-Roman@0 SF(Resour)90 140
Q(ces addr)-.18 E(essed in such a way ar)-.18 E 2.5(ec)-.18 G
(alled sparse r)-2.5 E(esour)-.18 E(ces.)-.18 E/F3 12/Helvetica-Bold@0
SF 3.336(4.1.4 Ser)90 160 R(ver States).12 E F2 1.538(The r)90 178 R
(esour)-.18 E 1.538(ce access contr)-.18 F 1.538
(ol system knows two server states: the SETUP and the OPERA)-.18 F(TING)
-.74 E 2.634(state. The)90 190 R .134(SETUP state is enter)2.634 F .134
(ed whenever a mode change takes place or the server exits or does)-.18
F 1.407(VT switching.)90 202 R 1.406(During this state all entity r)
6.407 F(esour)-.18 E 1.406(ces ar)-.18 F 3.906(eu)-.18 G 1.406(nder r)
-3.906 F(esour)-.18 E 1.406(ce access contr)-.18 F 3.906(ol. During)-.18
F(OPERA)90 214 Q 1.349(TING state only those entities ar)-.74 F 3.849
(ec)-.18 G(ontr)-3.849 E 1.349(olled which actually have shar)-.18 F
1.35(ed r)-.18 F(esour)-.18 E 1.35(ces that)-.18 F
(con\215ict with others.)90 226 Q/F4 16/Helvetica-Bold@0 SF 4.448
(5. Contr)90 256 R(ol Flo)-.32 E 4.448(wi)-.24 G 4.448(nt)-4.448 G
(he Ser)-4.448 E(ver and Mandator).16 E 4.448(yD).16 G(river)-4.448 E
(Functions)90 274 Q F2 .427(At the start of each server generation,)90
292 R/F5 10/Courier@0 SF(main\(\))2.928 E F2(\()2.928 E F5(dix/main.c)A
F2 2.928(\)c)C .428(alls the DDX function)-2.928 F F5(InitOut-)2.928 E
(put\(\))90 304 Q F2 5.278(.T)C .277
(his is the \214rst place that the DDX gets contr)-5.278 F(ol.)-.18 E F5
(InitOutput\(\))5.277 E F2 .277(is expected to \214ll in the)2.777 F
(global)90 316 Q F5(screenInfo)5.083 E F2(str)5.083 E 2.583
(uct, and one)-.08 F F5(screenInfo.screen[])5.083 E F2 2.583
(entry for each scr)5.083 F 2.583(een pr)-.18 F(esent.)-.18 E(Her)90 328
Q 2.5(ei)-.18 G 2.5(sw)-2.5 G(hat)-2.5 E F5(InitOutput\(\))2.5 E F2
(does:)2.5 E/F6 14/Helvetica-Bold@0 SF 3.892(5.1 P)90 350 R(ar)-.42 E
(se the XF86Con\214g \214le)-.21 E F2
(This is done at the start of the \214rst server generation only.)90 368
Q .446(The XF86Con\214g \214le is r)90 386 R .446
(ead in full, and the r)-.18 F .446(esulting information stor)-.18 F
.446(ed in data str)-.18 F(uctur)-.08 E 2.946(es. None)-.18 F .345
(of the parsed information is pr)90 398 R .345(ocessed at this point.)
-.18 F .345(The parser data str)5.345 F(uctur)-.08 E .345(es ar)-.18 F
2.845(eo)-.18 G .345(paque to the)-2.845 F
(video drivers and to most of the common layer code.)90 410 Q(The entir)
90 428 Q 2.5<658c>-.18 G(le is parsed \214rst to r)-2.5 E
(emove any section or)-.18 E(dering r)-.18 E(equir)-.18 E(ements.)-.18 E
F6 3.892(5.2 Initial)90 450 R(pr)3.892 E(ocessing of par)-.28 E(sed inf)
-.21 E(ormation and command line)-.28 E(options)90 466 Q F2
(This is done at the start of the \214rst server generation only.)90 484
Q 1.387(The initial pr)90 502 R 1.388
(ocessing is to determine paths like the)-.18 F/F7 10/Palatino-Bold@0 SF
(ModulePath)3.888 E F2 3.888(,e)C 1.388(tc, and to determine which)
-3.888 F F7(ServerLayout)90 514 Q F2(,)A F7(Screen)2.5 E F2(and)2.5 E F7
(Device)2.5 E F2(sections ar)2.5 E 2.5(ea)-.18 G(ctive.)-2.5 E F6 3.892
(5.3 Enab)90 536 R(le por)-.14 E 3.892(tI).28 G(/O access)-3.892 E F2
2.165(Port I/O access is contr)90 554 R 2.165(olled fr)-.18 F 2.165
(om the XFr)-.18 F 2.164(ee86 common layer)-.18 F 4.664(,a)-.74 G 2.164
(nd is `)-4.664 F 2.164(`all or nothing''.)-.37 F 2.164(It is)7.164 F
.124(enabled prior to calling driver pr)90 566 R .124
(obes, at the start of subsequent server generations, and when VT)-.18 F
1.938(switching back to the Xserver.)90 578 R 1.937
(It is disabled at the end of server generations, and when VT)6.938 F
(switching away fr)90 590 Q(om the Xserver.)-.18 E
(The implementation details of this may vary on dif)90 608 Q(fer)-.18 E
(ent platforms.)-.18 E F6 3.892(5.4 General)90 630 R -.28(bu)3.892 G
3.892(sp).28 G -.28(ro)-3.892 G(be).28 E F2
(This is done at the start of the \214rst server generation only.)90 648
Q .326(In the case of ix86 machines, this will be a general PCI pr)90
666 R 2.826(obe. The)-.18 F .326(full information obtained her)2.826 F
(e)-.18 E .937(will be available to the drivers.)90 678 R .936
(This information persists for the life of the Xserver.)5.937 F .936
(In the PCI)5.936 F 4.241(case, the PCI information for all video car)90
690 R 4.241(ds found is available by calling)-.18 F F5(xf86GetP-)6.741 E
(ciVideoInfo\(\))90 702 Q F2(.)A 0 Cg EP
%%Page: 7 7
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(XFree86\256 serv)90 48 Q
(er 4.x Design \(DRAFT\))-.15 E(7)269.86 E/F1 10/Courier@0 SF
(pciVideoPtr *xf86GetPciVideoInfo\(void\))115 96 Q/F2 10
/Palatino-Roman@0 SF -.18(re)140 120 S 1.464
(turns a pointer to a list of pointers to).18 F F1(pciVideoRec)3.964 E
F2 1.464(entries, of which)3.964 F(ther)140 132 Q 2.786(ei)-.18 G 2.786
(so)-2.786 G .286(ne for each detected PCI video car)-2.786 F 2.787
(d. The)-.18 F .287(list is terminated with a)2.787 F F1(NULL)140 144 Q
F2 4.424(pointer. If)4.424 F 1.923(no PCI video car)4.424 F 1.923
(ds wer)-.18 F 4.423(ed)-.18 G 1.923(etected, the r)-4.423 F 1.923
(eturn value is)-.18 F F1(NULL)140 156 Q F2(.)A(After the bus pr)90 180
Q(obe, the r)-.18 E(esour)-.18 E(ce br)-.18 E(oker is initialised.)-.18
E/F3 14/Helvetica-Bold@0 SF 3.892(5.5 Load)90 202 R
(initial set of modules)3.892 E F2
(This is done at the start of the \214rst server generation only.)90 220
Q .433(The cor)90 238 R 2.933(es)-.18 G .433
(erver contains a list of mandatory modules.)-2.933 F .433(These ar)
5.433 F 2.934(el)-.18 G .434(oaded \214rst.)-2.934 F(Curr)5.434 E .434
(ently the only)-.18 F(module on this list is the bitmap font module.)90
250 Q .591(The next set of modules loaded ar)90 268 R 3.091(et)-.18 G
.591(hose speci\214ed explicitly in the)-3.091 F/F4 10/Palatino-Bold@0
SF(Module)3.09 E F2 .59(section of the con\214g)3.09 F(\214le.)90 280 Q
.142(The \214nal set of initial modules ar)90 298 R 2.642(et)-.18 G .142
(he driver modules r)-2.642 F(efer)-.18 E .142(enced by the active)-.18
F F4(Device)2.642 E F2(and)2.642 E F4(Input-)2.642 E(Device)90 310 Q F2
(sections in the con\214g \214le.)2.5 E
(Each of these modules is loaded exactly once.)5 E F3 3.892
(5.6 Register)90 332 R(Video and Input Driver)3.892 E(s)-.21 E F2
(This is done at the start of the \214rst server generation only.)90 350
Q .113(When a driver module is loaded, the loader calls its)90 368 R F1
(Setup)2.613 E F2 2.613(function. For)2.613 F .113
(video drivers, this func-)2.613 F .889(tion calls)90 380 R F1
(xf86AddDriver\(\))3.389 E F2 .889(to r)3.389 F .889
(egister the driver's)-.18 F F1(DriverRec)3.389 E F2 3.389(,w)C .89
(hich contains a small set of)-3.389 F 2.173
(essential details and driver entry points r)90 392 R(equir)-.18 E 2.172
(ed during the early phase of)-.18 F F1(InitOutput\(\))4.672 E F2(.)A F1
(xf86AddDriver\(\))90 404 Q F2(adds it to the global)2.5 E F1
(xf86DriverList[])2.5 E F2(array.)2.5 E(The)90 422 Q F1(DriverRec)3.912
E F2 1.413(contains the driver canonical name, the)3.912 F F1
(Identify\(\))3.913 E F2(,)A F1(Probe\(\))3.913 E F2(and)3.913 E F1
(Avail-)3.913 E(ableOptions\(\))90 434 Q F2 1.002(function entry points\
 as well as a pointer to the driver's module \(as r)3.503 F(eturned)-.18
E(fr)90 446 Q 1.291(om the loader when the driver was loaded\) and a r)
-.18 F(efer)-.18 E 1.292(ence count which keeps track of how)-.18 F .752
(many scr)90 458 R .752(eens ar)-.18 F 3.252(eu)-.18 G .752
(sing the driver.)-3.252 F .751(The entry driver entry points ar)5.751 F
3.251(et)-.18 G .751(hose r)-3.251 F(equir)-.18 E .751(ed prior to the)
-.18 F(driver allocating and \214lling in its)90 470 Q F1(ScrnInfoRec)
2.5 E F2(.)A .709(For a static server)90 488 R 3.209(,t)-.74 G(he)-3.209
E F1(xf86DriverList[])3.209 E F2 .71
(array is initialised at build time, and the loading of)3.209 F
(modules is not done.)90 500 Q 6.53(As)90 518 S 4.03(imilar pr)-6.53 F
(ocedur)-.18 E 6.53(ei)-.18 G 6.53(su)-6.53 G 4.03
(sed for input drivers.)-6.53 F 4.03(The input driver's)9.03 F F1(Setup)
6.53 E F2 4.03(function calls)6.53 F F1(xf86AddInputDriver\(\))90 530 Q
F2 .48(to r)2.98 F .48(egister the driver's)-.18 F F1(InputDriverRec)
2.98 E F2 2.98(,w)C .48(hich contains a small set)-2.98 F 1.599
(of essential details and driver entry points r)90 542 R(equir)-.18 E
1.598(ed during the early phase of)-.18 F F1(InitInput\(\))4.098 E F2(.)
A F1(xf86AddInputDriver\(\))90 554 Q F2 1.187(adds it to the global)
3.687 F F1(xf86InputDriverList[])3.687 E F2 3.687(array. For)3.687 F
3.687(as)3.687 G(tatic)-3.687 E(server)90 566 Q 2.5(,t)-.74 G(he)-2.5 E
F1(xf86InputDriverList[])2.5 E F2(array is initialised at build time.)
2.5 E 1.256(Both the)90 584 R F1(xf86DriverList[])3.756 E F2(and)3.756 E
F1(xf86InputDriverList[])3.756 E F2 1.255
(arrays have been initialised by)3.756 F(the end of this stage.)90 596 Q
(Once all the drivers ar)90 614 Q 2.5(er)-.18 G(egister)-2.68 E
(ed, their)-.18 E F1(ChipIdentify\(\))2.5 E F2(functions ar)2.5 E 2.5
(ec)-.18 G(alled.)-2.5 E F1(void ChipIdentify\(int flags\))115 632 Q F2
1.887(This is expected to print a message indicating the driver name, a\
 short)140 650 R 1.021(summary of what it supports, and a list of the c\
hipset names that it sup-)140 662 R 2.5(ports. It)140 674 R
(may use the xf86PrintChipsets\(\) helper to do this.)2.5 E 0 Cg EP
%%Page: 8 8
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(XFree86\256 serv)90 48 Q
(er 4.x Design \(DRAFT\))-.15 E(8)269.86 E/F1 10/Courier@0 SF .667
(void xf86PrintChipsets\(const char *drvname, const char *drvmsg,)115 96
R(SymTabPtr chips\))175 120 Q/F2 10/Palatino-Roman@0 SF .472
(This function pr)140 138 R .472
(ovides an easy way for a driver's ChipIdentify function to)-.18 F
(format the identi\214cation message.)140 150 Q/F3 14/Helvetica-Bold@0
SF 3.892(5.7 Initialise)90 178 R(Access Contr)3.892 E(ol)-.28 E F2
(This is done at the start of the \214rst server generation only.)90 196
Q 1.103(The Resour)90 214 R 1.103(ce Access Contr)-.18 F 1.103
(ol \(RAC\) subsystem is initialised befor)-.18 F 3.604(ec)-.18 G 1.104
(alling any driver functions)-3.604 F 2.16(that may access har)90 226 R
(dwar)-.18 E 4.66(e. All)-.18 F 2.16(generic bus information is pr)4.66
F 2.16(obed and saved \(for r)-.18 F(estoration)-.18 E 3.693
(later\). All)90 238 R(\(shar)3.693 E 1.193(ed r)-.18 F(esour)-.18 E
1.193(ce\) video devices ar)-.18 F 3.693(ed)-.18 G 1.193
(isabled at the generic bus level, and a pr)-3.693 F 1.194(obe is)-.18 F
(done to \214nd the `)90 250 Q(`primary'' video device.)-.37 E
(These devices r)5 E(emain disabled for the next step.)-.18 E F3 3.892
(5.8 Video)90 272 R(Driver Pr)3.892 E(obe)-.28 E F2 .84
(This is done at the start of the \214rst server generation only.)90 290
R(The)5.84 E F1(ChipProbe\(\))3.34 E F2 .84(function of each)3.34 F -.18
(re)90 302 S(gister).18 E(ed video driver is called.)-.18 E F1
(Bool ChipProbe\(DriverPtr drv, int flags\))115 326 Q F2 1.126
(The purpose of this is to identify all instances of har)140 350 R(dwar)
-.18 E 3.626(es)-.18 G 1.126(upported by)-3.626 F 3.066(the driver.)140
362 R 3.066(The \215ags value is curr)8.066 F 3.066(ently either 0,)-.18
F F1(PROBE_DEFAULT)5.566 E F2(or)5.566 E F1(PROBE_DETECT)140 374 Q F2(.)
A F1(PROBE_DETECT)5.998 E F2 .999(is used if "-con\214gur)3.498 F .999
(e" or "-pr)-.18 F .999(obe" com-)-.18 F .12(mand line ar)140 386 R .119
(guments ar)-.18 F 2.619(eg)-.18 G .119(iven and indicates to the)-2.619
F F1(Probe\(\))2.619 E F2 .119(function that)2.619 F 1.205
(it should not con\214gur)140 398 R 3.705(et)-.18 G 1.206
(he bus entities and that no XF86Con\214g informa-)-3.705 F
(tion is available.)140 410 Q 1.549(The pr)140 428 R 1.548
(obe must \214nd the active device sections that match the driver by)
-.18 F(calling)140 440 Q F1(xf86MatchDevice\(\))4.113 E F2 6.613(.T)C
1.614(he number of matches found limits the)-6.613 F 1.468
(maximum number of instances for this driver.)140 452 R 1.468
(If no matches ar)6.468 F 3.968(ef)-.18 G(ound,)-3.968 E
(the function should r)140 464 Q(eturn)-.18 E F1(FALSE)2.5 E F2
(immediately.)2.5 E 1.852(Devices that cannot be identi\214ed by using \
device-independent methods)140 482 R .221(should be pr)140 494 R .221
(obed at this stage \(keeping in mind that access to all r)-.18 F(esour)
-.18 E(ces)-.18 E .484
(that can be disabled in a device-independent way ar)140 506 R 2.985(ed)
-.18 G .485(isabled during this)-2.985 F 3.792(phase\). The)140 518 R
(pr)3.792 E 1.292(obe must be a minimal pr)-.18 F 3.792(obe. It)-.18 F
1.291(should just determine if)3.791 F(ther)140 530 Q 4.06(ei)-.18 G
4.06(sac)-4.06 G(ar)-4.06 E 4.06(dp)-.18 G -.18(re)-4.06 G 1.561
(sent that the driver can drive.).18 F 1.561(It should use the least)
6.561 F(intr)140 542 Q 2.362(usive pr)-.08 F 2.362
(obe methods possible.)-.18 F 2.362(It must not do anything that is not)
7.362 F 2.12(essential, like pr)140 554 R 2.12
(obing for other details such as the amount of memory)-.18 F 1.405
(installed, etc.)140 566 R 1.404(It is r)6.405 F 1.404
(ecommended that the)-.18 F F1(xf86MatchPciInstances\(\))3.904 E F2
1.573(helper function be used for identifying matching PCI devices, and\
 simi-)140 578 R .39(larly the)140 590 R F1(xf86MatchIsaInstances\(\))
2.89 E F2 .39(for ISA \(non-PCI\) devices \(see the)2.89 F/F4 10
/Palatino-Italic@0 SF(RAC)140 602 Q F2 1.392
(\(section 9., page 22\) section\).)3.891 F 1.392
(These helpers also checks and claims)6.392 F 1.639(the appr)140 614 R
1.639(opriate entity.)-.18 F 1.638(When not using the helper)6.638 F
4.138(,t)-.74 G 1.638(hat should be done)-4.138 F(with)140 626 Q F1
(xf86CheckPciSlot\(\))2.761 E F2(and)2.761 E F1(xf86ClaimPciSlot\(\))
2.762 E F2 .262(for PCI devices)2.762 F(and)140 638 Q F1
(xf86ClaimIsaSlot\(\))2.781 E F2 .281(for ISA devices \(see the)2.781 F
F4(RAC)2.781 E F2 .281(\(section 9., page)2.781 F(22\) section\).)140
650 Q 1.99(The pr)140 668 R 1.99(obe must r)-.18 F 1.99
(egister all non-r)-.18 F 1.99(elocatable r)-.18 F(esour)-.18 E 1.99
(ces at this stage.)-.18 F 1.99(If a)6.99 F -.18(re)140 680 S(sour).18 E
1.118(ce con\215ict is found between exclusive r)-.18 F(esour)-.18 E
1.118(ces the driver will fail)-.18 F 5.246(immediately. This)140 692 R
2.746(is usually best done with the)5.246 F F1(xf86ConfigPciEn-)5.247 E
(tity\(\))140 704 Q F2 1.169(helper function for PCI and)3.669 F F1
(xf86ConfigIsaEntity\(\))3.669 E F2 1.168(for ISA)3.668 F 1.119
(\(see the)140 716 R F4(RAC)3.619 E F2 1.119
(\(section 9., page 22\) section\).)3.619 F 1.119(It is possible to r)
6.119 F 1.12(egister some)-.18 F 1.139
(entity speci\214c functions with those helpers.)140 728 R 1.139
(When not using the helpers,)6.139 F(the)140 740 Q F1 -1.6
(xf86AddEntityToScreen\(\) xf86ClaimFixedResources\(\))4.4 F F2(and)4.4
E 0 Cg EP
%%Page: 9 9
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(XFree86\256 serv)90 48 Q
(er 4.x Design \(DRAFT\))-.15 E(9)269.86 E/F1 10/Courier@0 SF
(xf86SetEntityFuncs\(\))140 96 Q/F2 10/Palatino-Roman@0 SF 1.498
(should be used instead \(see the)3.998 F/F3 10/Palatino-Italic@0 SF
(RAC)3.997 E F2(\(section)3.997 E(9., page 22\) section\).)140 108 Q
.289(If a chipset is speci\214ed in an active device section which the \
driver consid-)140 126 R 1.161(ers r)140 138 R 1.161(elevant \(ie it ha\
s no driver speci\214ed, or the driver speci\214ed matches)-.18 F 1.552
(the driver doing the pr)140 150 R 1.552(obe\), the Pr)-.18 F 1.553
(obe must r)-.18 F(eturn)-.18 E F1(FALSE)4.053 E F2 1.553
(if the chipset)4.053 F(doesn't match one supported by the driver.)140
162 Q 1.079(If ther)140 180 R 3.579(ea)-.18 G 1.439 -.18(re n)-3.579 H
3.579(oa).18 G 1.078(ctive device sections that the driver considers r)
-3.579 F 1.078(elevant, it)-.18 F(must r)140 192 Q(eturn)-.18 E F1
(FALSE)2.5 E F2(.)A .982(Allocate a)140 210 R F1(ScrnInfoRec)3.482 E F2
.982(for each active instance of the har)3.482 F(dwar)-.18 E 3.482(ef)
-.18 G(ound,)-3.482 E 1.375(and \214ll in the basic information, includ\
ing the other driver entry points.)140 222 R .552
(This is best done with the)140 234 R F1(xf86ConfigIsaEntity\(\))3.052 E
F2 .553(helper function for)3.052 F 3.092(ISA instances or)140 246 R F1
(xf86ConfigPciEntity\(\))5.592 E F2 3.091(for PCI instances.)5.591 F
(These)8.091 E 6.778(functions allocate a)140 258 R F1(ScrnInfoRec)9.278
E F2 6.779(for active entities. Optionally)9.279 F F1
(xf86AllocateScreen\(\))140 270 Q F2 3.76
(function may also be used to allocate the)6.26 F F1(ScrnInfoRec)140 282
Q F2 6.846(.A)C 1.846(ny of these functions take car)-6.846 F 4.346(eo)
-.18 G 4.346(fi)-4.346 G 1.846(nitialising \214elds to)-4.346 F
(de\214ned `)140 294 Q(`unused'' values.)-.37 E .764
(Claim the entities for each instance of the har)140 312 R(dwar)-.18 E
3.263(ef)-.18 G 3.263(ound. This)-3.263 F(pr)3.263 E(events)-.18 E
(other drivers fr)140 324 Q(om claiming the same har)-.18 E(dwar)-.18 E
(e.)-.18 E .51(Must leave har)140 342 R(dwar)-.18 E 3.01(ei)-.18 G 3.01
(nt)-3.01 G .511(he same state it found it in, and must not do any)-3.01
F(har)140 354 Q(dwar)-.18 E 2.5(ei)-.18 G(nitialisation.)-2.5 E 1.037(A\
ll detection can be overridden via the con\214g \214le, and that parsed\
 infor)140 372 R(-)-.18 E
(mation is available to the driver at this stage.)140 384 Q(Returns)140
402 Q F1(TRUE)2.5 E F2(if one or mor)2.5 E 2.5(ei)-.18 G(nstances ar)
-2.5 E 2.5(ef)-.18 G(ound, and)-2.5 E F1(FALSE)2.5 E F2(otherwise.)2.5 E
F1(int xf86MatchDevice\(const char *drivername,)115 420 Q
(GDevPtr **driversectlist\))175 444 Q F2 2.982
(This function takes the name of the driver and r)140 468 R 2.982
(eturns via)-.18 F F1(driver-)5.482 E(sectlist)140 480 Q F2 3.166(al)
3.166 G .666(ist of device sections that match the driver name.)-3.166 F
.665(The func-)5.665 F 2.837(tion r)140 492 R 2.838
(eturn value is the number of matches found.)-.18 F 2.838
(If a fatal err)7.838 F 2.838(or is)-.18 F(encounter)140 504 Q(ed the r)
-.18 E(eturn value is)-.18 E F1(-1)2.5 E F2(.)A 1.033
(The caller should use)140 522 R F1(xfree\(\))3.533 E F2 1.033(to fr)
3.533 F(ee)-.18 E F1(*driversectlist)3.533 E F2 1.032(when it is no)
3.533 F(longer needed.)140 534 Q F1
(ScrnInfoPtr xf86AllocateScreen\(DriverPtr drv, int flags\))115 552 Q F2
3.408(This function allocates a new)140 576 R F1(ScrnInfoRec)5.909 E F2
3.409(in the)5.909 F F1(xf86Screens[])5.909 E F2 3.038(array. This)140
588 R .538(function is normally called by the video driver)3.038 F F1
(ChipProbe\(\))3.038 E F2 3.7(functions. The)140 600 R -.18(re)3.701 G
1.201(turn value is a pointer to the newly allocated).18 F F1(ScrnIn-)
3.701 E(foRec)140 612 Q F2 7.356(.T)C(he)-7.356 E F1(scrnIndex)4.856 E
F2(,)A F1(origIndex)4.856 E F2(,)A F1(module)4.856 E F2(and)4.856 E F1
(drv)4.855 E F2 2.355(\214elds ar)4.855 F 4.855(ei)-.18 G(ni-)-4.855 E
3.681(tialised. The)140 624 R -.18(re)3.681 G(fer).18 E 1.182
(ence count in)-.18 F F1(drv)3.682 E F2 1.182(is incr)3.682 F 3.682
(emented. The)-.18 F 1.182(storage for any)3.682 F(curr)140 636 Q .295
(ently allocated `)-.18 F .294
(`privates'' pointers is also allocated and the)-.37 F F1(privates)2.794
E F2 .928(\214eld initialised \(the privates data is of course not allo\
cated or initialised\).)140 648 R 1.871(This function never r)140 660 R
1.871(eturns on failur)-.18 F 4.371(e. If)-.18 F 1.871
(the allocation fails, the server)4.371 F .923(exits with a fatal err)
140 672 R 3.423(or. The)-.18 F .923(\215ags value is not curr)3.423 F
.923(ently used, and should)-.18 F(be set to zer)140 684 Q(o.)-.18 E
.922(At the completion of this, a list of)90 708 R F1(ScrnInfoRecs)3.421
E F2 .921(have been allocated in the)3.421 F F1(xf86Screens[])3.421 E F2
(array)90 720 Q 2.671(,a)-1.11 G .171
(nd the associated entities and \214xed r)-2.671 F(esour)-.18 E .172
(ces have been claimed.)-.18 F .172(The following)5.172 F F1(ScrnIn-)
2.672 E(foRec)90 732 Q F2(\214elds must be initialised at this point:)
2.5 E 0 Cg EP
%%Page: 10 10
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(XFree86\256 serv)90 48 Q
(er 4.x Design \(DRAFT\))-.15 E(10)264.86 E/F1 8/Courier@0 SF
(driverVersion)183 94 Q(driverName)183 104 Q(scrnIndex\(*\))183 114 Q
(origIndex\(*\))183 124 Q(drv\(*\))183 134 Q(module\(*\))183 144 Q(name)
183 154 Q(Probe)183 164 Q(PreInit)183 174 Q(ScreenInit)183 184 Q
(EnterVT)183 194 Q(LeaveVT)183 204 Q(numEntities)183 214 Q(entityList)
183 224 Q(access)183 234 Q/F2 10/Courier@0 SF(\(*\))90 268 Q/F3 10
/Palatino-Roman@0 SF(These ar)2.5 E 2.5(ei)-.18 G(nitialised when the)
-2.5 E F2(ScrnInfoRec)2.5 E F3
(is allocated, and not explicitly by the driver.)2.5 E(The following)90
286 Q F2(ScrnInfoRec)2.5 E F3
(\214elds must be initialised if the driver is going to use them:)2.5 E
F1(SwitchMode)183 308 Q(AdjustFrame)183 318 Q(FreeScreen)183 328 Q
(ValidMode)183 338 Q/F4 14/Helvetica-Bold@0 SF 3.892(5.9 Matc)90 376 R
(hing Screens)-.14 E F3
(This is done at the start of the \214rst server generation only.)90 394
Q .519(After the Pr)90 412 R .519(obe phase is \214nished, ther)-.18 F
3.019(ew)-.18 G .519(ill be some number of)-3.019 F F2(ScrnInfoRecs)
3.018 E F3 5.518(.T)C .518(hese ar)-5.518 F 3.018(et)-.18 G(hen)-3.018 E
2.343(matched with the active)90 424 R/F5 10/Palatino-Bold@0 SF(Screen)
4.843 E F3 2.344
(sections in the XF86Con\214g, and those not having an active)4.843 F F5
(Screen)90 436 Q F3 3.21(section ar)5.71 F 5.71(ed)-.18 G 5.709
(eleted. If)-5.71 F 3.209(the number of r)5.709 F 3.209(emaining scr)
-.18 F 3.209(eens is 0,)-.18 F F2(InitOutput\(\))5.709 E F3(sets)5.709 E
F2(screenInfo.numScreens)90 448 Q F3(to)2.5 E F2(0)2.5 E F3(and r)2.5 E
(eturns.)-.18 E(At this point the following \214elds of the)90 466 Q F2
(ScrnInfoRecs)2.5 E F3(must be initialised:)2.5 E F1(confScreen)183 488
Q F4 3.892(5.10 Allocate)90 526 R(non-con\215icting resour)3.892 E(ces)
-.28 E F3
(This is done at the start of the \214rst server generation only.)90 544
Q(Befor)90 562 Q 3.32(ec)-.18 G .82(alling the drivers again, the r)
-3.32 F(esour)-.18 E .821(ce information collected fr)-.18 F .821
(om the Pr)-.18 F .821(obe phase is pr)-.18 F(o-)-.18 E 3.085
(cessed. This)90 574 R .584(includes checking the extent of PCI r)3.085
F(esour)-.18 E .584(ces for the pr)-.18 F .584(obed devices, and r)-.18
F(esolving)-.18 E .625(any con\215icts in the r)90 586 R .626
(elocatable PCI r)-.18 F(esour)-.18 E 3.126(ces. It)-.18 F .626(also r)
3.126 F .626(eports con\215icts, checks bus r)-.18 F .626
(outing issues,)-.18 F(and anything else that is needed to enable the e\
ntities for the next phase.)90 598 Q .1(If any drivers r)90 616 R
(egister)-.18 E .1(ed an)-.18 F F2(EntityInit\(\))2.6 E F3 .1
(function during the Pr)2.6 F .1(obe phase, then they ar)-.18 F 2.6(ec)
-.18 G(alled)-2.6 E(her)90 628 Q(e.)-.18 E F4 3.892(5.11 Sor)90 650 R
3.892(tt).28 G(he Screens and pre-c)-3.892 E(hec)-.14 E 3.892(kM)-.28 G
(onitor Inf)-3.892 E(ormation)-.28 E F3
(This is done at the start of the \214rst server generation only.)90 668
Q(The list of scr)90 686 Q(eens is sorted to match the or)-.18 E
(dering r)-.18 E(equested in the con\214g \214le.)-.18 E 1.152(The list\
 of modes for each active monitor is checked against the monitor's para\
meters.)90 704 R(Invalid)6.153 E(modes ar)90 716 Q 2.5(ep)-.18 G -.08
(ru)-2.5 G(ned.).08 E 0 Cg EP
%%Page: 11 11
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(XFree86\256 serv)90 48 Q
(er 4.x Design \(DRAFT\))-.15 E(11)264.86 E/F1 14/Helvetica-Bold@0 SF
3.892(5.12 PreInit)90 100 R/F2 10/Palatino-Roman@0 SF
(This is done at the start of the \214rst server generation only.)90 118
Q .487(For each)90 136 R/F3 10/Courier@0 SF(ScrnInfoRec)2.987 E F2 2.986
(,e)C .486(nable access to the scr)-2.986 F .486
(eens entities and call the)-.18 F F3(ChipPreInit\(\))2.986 E F2(func-)
2.986 E(tion.)90 148 Q F3
(Bool ChipPreInit\(ScrnInfoRec screen, int flags\))115 172 Q F2 .896
(The purpose of this function is to \214nd out all the information r)140
196 R(equir)-.18 E .897(ed to)-.18 F .561(determine if the con\214gurat\
ion is usable, and to initialise those parts of the)140 208 R F3
(ScrnInfoRec)140 220 Q F2 .3
(that can be set once at the beginning of the \214rst server gen-)2.8 F
(eration.)140 232 Q .451(The number of entities r)140 250 R(egister)-.18
E .451(ed for the scr)-.18 F .451(een should be checked against)-.18 F
.854(the expected number \(most drivers expect only one\).)140 262 R
.854(The entity informa-)5.854 F .652(tion for each of them should be r)
140 274 R .652(etrieved \(with)-.18 F F3(xf86GetEntityInfo\(\))3.152 E
F2(\))A 3.41(and checked for the corr)140 286 R 3.41
(ect bus type and that none of the sharable)-.18 F -.18(re)140 298 S
(sour).18 E(ces r)-.18 E(egister)-.18 E(ed during the Pr)-.18 E
(obe phase was r)-.18 E(ejected.)-.18 E .556(Access to r)140 316 R
(esour)-.18 E .556(ces for the entities that can be contr)-.18 F .555
(olled in a device-inde-)-.18 F .419(pendent way ar)140 328 R 2.919(ee)
-.18 G .419(nabled befor)-2.919 F 2.919(et)-.18 G .419
(his function is called.)-2.919 F .42(If the driver needs)5.419 F .539
(to access any r)140 340 R(esour)-.18 E .539
(ces that it has disabled in an)-.18 F F3(EntityInit\(\))3.039 E F2
(function)3.039 E 1.05(that it r)140 352 R(egister)-.18 E 1.05
(ed, then it may enable them her)-.18 F 3.55(ep)-.18 G -.18(ro)-3.55 G
1.05(viding that it disables).18 F(them befor)140 364 Q 2.5(et)-.18 G
(his function r)-2.5 E(eturns.)-.18 E .172(This includes pr)140 382 R
.172(obing for video memory)-.18 F 2.672(,c)-1.11 G .172
(locks, ramdac, and all other HW)-2.672 F 2.027(info that is needed.)140
394 R 2.028(It includes determining the depth/bpp/visual and)7.028 F
-.18(re)140 406 S .124(lated info.).18 F .124
(It includes validating and determining the set of video modes)5.124 F
(that will be used \(and anything that is r)140 418 Q(equir)-.18 E
(ed to determine that\).)-.18 E .313
(This information should be determined in the least intr)140 436 R .313
(usive way possible.)-.08 F 1.03(The state of the HW must r)140 448 R
1.03(emain unchanged by this function.)-.18 F(Although)6.03 E .785
(video memory \(including MMIO\) may be mapped within this function, it)
140 460 R 1.369(must be unmapped befor)140 472 R 3.869(er)-.18 G 3.869
(eturning. Driver)-4.049 F 1.368(speci\214c information should)3.869 F
.287(be stor)140 484 R .288(ed in a str)-.18 F(uctur)-.08 E 2.788(eh)
-.18 G .288(ooked into the)-2.788 F F3(ScrnInfoRec)2.788 E F2('s)A F3
(driverPrivate)2.788 E F2 3.551(\214eld. Any)140 496 R 1.051
(other modules which r)3.551 F(equir)-.18 E 3.551(ep)-.18 G 1.051
(ersistent data \(ie data that per)-3.551 F(-)-.18 E 1.254(sists acr)140
508 R 1.254
(oss server generations\) should be initialised in this function, and)
-.18 F 1.056(they should allocate a `)140 520 R 1.056
(`privates'' index to hook their data into by calling)-.37 F F3
(xf86AllocateScrnInfoPrivateIndex\(\).)140 532 Q F2 4.92(The `)9.92 F
4.92(`privates'' data is)-.37 F(persistent.)140 544 Q .035
(Helper functions for some of these things ar)140 562 R 2.535(ep)-.18 G
-.18(ro)-2.535 G .035(vided at the XFr).18 F .035(ee86 com-)-.18 F
(mon level, and the driver can choose to make use of them.)140 574 Q
2.323(All additional r)140 592 R(esour)-.18 E 2.323(ces that the scr)
-.18 F 2.323(een needs must be r)-.18 F(egister)-.18 E 2.323(ed her)-.18
F(e.)-.18 E 1.258(This should be done with)140 604 R F3
(xf86RegisterResources\(\))3.758 E F2 6.258(.I)C 3.758(fs)-6.258 G 1.257
(ome of the)-3.758 F 3.487(\214xed r)140 616 R(esour)-.18 E 3.487(ces r)
-.18 F(egister)-.18 E 3.487(ed in the Pr)-.18 F 3.487(obe phase ar)-.18
F 5.987(en)-.18 G 3.488(ot needed or not)-5.987 F .51
(decoded by the har)140 628 R(dwar)-.18 E 3.01(ew)-.18 G .51
(hen in the OPERA)-3.01 F .51(TING server state, their sta-)-.74 F
(tus should be updated with)140 640 Q F3(xf86SetOperatingState\(\))2.5 E
F2(.)A .332(Modules may be loaded at any point in this function, and al\
l modules that)140 658 R .342(the driver will need must be loaded befor)
140 670 R 2.841(et)-.18 G .341(he end of this function.)-2.841 F(Either)
5.341 E(the)140 682 Q F3(xf86LoadSubModule\(\))7.18 E F2 2.18(or the)
4.68 F F3(xf86LoadDrvSubModule\(\))4.68 E F2(func-)4.68 E 1.405
(tion should be used to load modules depending on whether a)140 694 R F3
(ScrnIn-)3.904 E(foRec)140 706 Q F2 1.035
(has been set up. A driver may unload a module within this func-)3.534 F
2.565(tion if it was only needed temporarily)140 718 R 5.064(,a)-1.11 G
2.564(nd the)-5.064 F F3(xf86UnloadSubMod-)5.064 E(ule\(\))140 730 Q F2
.822(function should be used to do that.)3.322 F .822(Otherwise ther)
5.822 F 3.323(ei)-.18 G 3.323(sn)-3.323 G 3.323(on)-3.323 G .823(eed to)
-3.323 F .491(explicitly unload modules because the loader takes car)140
742 R 2.991(eo)-.18 G 2.991(fm)-2.991 G .491(odule depen-)-2.991 F 0 Cg
EP
%%Page: 12 12
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(XFree86\256 serv)90 48 Q
(er 4.x Design \(DRAFT\))-.15 E(12)264.86 E/F1 10/Palatino-Roman@0 SF
2.566
(dencies and will unload submodules automatically if/when the driver)140
96 R(module is unloaded.)140 108 Q(The bulk of the)140 126 Q/F2 10
/Courier@0 SF(ScrnInfoRec)2.5 E F1
(\214elds should be \214lled out in this function.)2.5 E F2
(ChipPreInit\(\))140 144 Q F1 -.18(re)4.689 G(turns).18 E F2(FALSE)4.689
E F1 2.189(when the con\214guration is unusable in)4.689 F 1.074
(some way \(unsupported depth, no valid modes, not enough video mem-)140
156 R(ory)140 168 Q 2.5(,e)-1.11 G(tc\), and)-2.5 E F2(TRUE)2.5 E F1
(if it is usable.)2.5 E .63(It is expected that if the)140 186 R F2
(ChipPreInit\(\))3.13 E F1 .63(function r)3.13 F(eturns)-.18 E F2(TRUE)
3.13 E F1 3.13(,t)C .63(hen the)-3.13 F 1.9(only r)140 198 R 1.9
(easons that subsequent stages in the driver might fail ar)-.18 F 4.4
(el)-.18 G 1.9(ack or)-4.4 F -.18(re)140 210 S(sour).18 E .044
(ces \(like xalloc failur)-.18 F 2.544(es\). All)-.18 F .044
(other possible r)2.544 F .044(easons for failur)-.18 F 2.544(es)-.18 G
(hould)-2.544 E(be determined by the)140 222 Q F2(ChipPreInit\(\))2.5 E
F1(function.)2.5 E(The)90 246 Q F2(ScrnInfoRecs)3.374 E F1 .874(for scr)
3.374 F .874(eens wher)-.18 F 3.374(et)-.18 G(he)-3.374 E F2
(ChipPreInit\(\))3.374 E F1 .874(fails ar)3.374 F 3.374(er)-.18 G 3.374
(emoved. If)-3.554 F .875(none r)3.375 F(emain,)-.18 E F2
(InitOutput\(\))90 258 Q F1(sets)2.5 E F2(screenInfo.numScreens)2.5 E F1
(to)2.5 E F2(0)2.5 E F1(and r)2.5 E(eturns.)-.18 E 1.65
(At this point, further \214elds of the)90 276 R F2(ScrnInfoRecs)4.15 E
F1 1.65(would normally be \214lled in.)4.15 F 1.65(Most ar)6.65 F 4.15
(en)-.18 G(ot)-4.15 E .24(strictly mandatory)90 288 R 2.74(,b)-1.11 G
.24(ut many ar)-2.74 F 2.74(er)-.18 G(equir)-2.92 E .24
(ed by other layers and/or helper functions that the driver)-.18 F 1.624
(may choose to use.)90 300 R 1.624(The documentation for those layers a\
nd helper functions indicates which)6.624 F(they r)90 312 Q(equir)-.18 E
(e.)-.18 E(The following \214elds of the)90 330 Q F2(ScrnInfoRecs)2.5 E
F1(should be \214lled in if the driver is going to use them:)2.5 E/F3 8
/Courier@0 SF(monitor)183 352 Q(display)183 362 Q(depth)183 372 Q
(pixmapBPP)183 382 Q(bitsPerPixel)183 392 Q 72(weight \(>8bpp)183 402 R
(only\))4.8 E 81.6(mask \(>8bpp)183 412 R(only\))4.8 E 72
(offset \(>8bpp)183 422 R(only\))4.8 E 67.2(rgbBits \(8bpp)183 432 R
(only\))4.8 E(gamma)183 442 Q(defaultVisual)183 452 Q(maxHValue)183 462
Q(maxVValue)183 472 Q(virtualX)183 482 Q(virtualY)183 492 Q
(displayWidth)183 502 Q(frameX0)183 512 Q(frameY0)183 522 Q(frameX1)183
532 Q(frameY1)183 542 Q(zoomLocked)183 552 Q(modePool)183 562 Q(modes)
183 572 Q(currentMode)183 582 Q 57.6(progClock \(TRUE)183 592 R
(if clock is programmable\))4.8 E(chipset)183 602 Q(ramdac)183 612 Q
(clockchip)183 622 Q 57.6(numClocks \(if)183 632 R(not programmable\))
4.8 E 67.2(clock[] \(if)183 642 R(not programmable\))4.8 E(videoRam)183
652 Q(biosBase)183 662 Q(memBase)183 672 Q(memClk)183 682 Q
(driverPrivate)183 692 Q(chipID)183 702 Q(chipRev)183 712 Q 0 Cg EP
%%Page: 13 13
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(XFree86\256 serv)90 48 Q
(er 4.x Design \(DRAFT\))-.15 E(13)264.86 E/F1 10/Courier@0 SF 1.5
(pointer xf86LoadSubModule\(ScrnInfoPtr pScrn, const char *name\))115 96
R/F2 10/Palatino-Roman@0 SF(:)A(and)115 108 Q F1 7.714
(pointer xf86LoadDrvSubModule\(DriverPtr drv, const char)10.214 F
(*name\))115 120 Q F2(:)A .704(Load a module that a driver depends on.)
140 144 R .704(This function loads the module)5.704 F F1(name)140 156 Q
F2 .318(as a sub module of the driver.)2.818 F .318(The r)5.318 F .318
(eturn value is a handle identify-)-.18 F .89(ing the new module.)140
168 R .891(If the load fails, the r)5.89 F .891(eturn value will be)-.18
F F1(NULL)3.391 E F2 5.891(.I)C 3.391(fa)-5.891 G 1.202
(driver needs to explicitly unload a module it has loaded in this way)
140 180 R 3.701(,t)-1.11 G(he)-3.701 E -.18(re)140 192 S 2.436
(turn value must be saved and passed to).18 F F1
(xf86UnloadSubModule\(\))4.937 E F2(when unloading.)140 204 Q F1
(void xf86UnloadSubModule\(pointer module\))115 222 Q F2 .91
(Unloads the module r)140 246 R(efer)-.18 E .91(enced by)-.18 F F1
(module)3.41 E F2(.)A F1(module)5.91 E F2 .91(should be a pointer)3.41 F
-.18(re)140 258 S 1.83(turned pr).18 F 1.83(eviously by)-.18 F F1
(xf86LoadSubModule\(\))4.33 E F2(or)4.33 E F1(xf86LoadDrvSub-)4.33 E
(Module\(\))140 270 Q F2(.)2.5 E/F3 14/Helvetica-Bold@0 SF 3.892
(5.13 Cleaning)90 298 R(up Un)3.892 E(used Driver)-.14 E(s)-.21 E F2
.071(At this point it is known which scr)90 316 R .07
(eens will be in use, and which drivers ar)-.18 F 2.57(eb)-.18 G .07
(eing used.)-2.57 F(Unr)5.07 E(efer)-.18 E(-)-.18 E
(enced drivers \(and modules they may have loaded\) ar)90 328 Q 2.5(eu)
-.18 G(nloaded her)-2.5 E(e.)-.18 E F3 3.892(5.14 Consistenc)90 350 R
3.892(yC)-.14 G(hec)-3.892 E(ks)-.28 E F2 .77
(The parameters that must be global to the server)90 368 R 3.27(,l)-.74
G .77(ike pixmap formats, bitmap bit or)-3.27 F(der)-.18 E 3.27(,b)-.74
G(itmap)-3.27 E .375(scanline unit and image byte or)90 380 R .375
(der ar)-.18 F 2.875(ec)-.18 G(ompar)-2.875 E .375
(ed for each of the scr)-.18 F 2.874(eens. If)-.18 F 2.874(am)2.874 G
.374(ismatch is found,)-2.874 F(the server exits with an appr)90 392 Q
(opriate message.)-.18 E F3 3.892(5.15 Chec)90 414 R 3.892(ki)-.28 G
3.892(fR)-3.892 G(esour)-3.892 E(ce Contr)-.28 E(ol is Needed)-.28 E F2
.124(Determine if r)90 432 R(esour)-.18 E .124(ce access contr)-.18 F
.124(ol is needed.)-.18 F .124(This is the case if mor)5.124 F 2.625(et)
-.18 G .125(han one scr)-2.625 F .125(een is used.)-.18 F(If)5.125 E
(necessary the RAC wrapper module is loaded.)90 444 Q F3 3.892(5.16 Ad)
90 466 R(dScreen \(ScreenInit\))-.14 E F2 1.554
(At this point, the valid scr)90 484 R 1.553(eens ar)-.18 F 4.053(ek)
-.18 G(nown.)-4.053 E F1(AddScreen\(\))6.553 E F2 1.553
(is called for each of them, passing)4.053 F F1(ChipScreenInit\(\))90
496 Q F2 1.877(as the ar)4.377 F(gument.)-.18 E F1(AddScreen\(\))6.877 E
F2 1.878(is a DIX function that allocates a new)4.377 F F1
(screenInfo.screen[])90 508 Q F2 1.111(entry \(aka)3.611 F F1(pScreen)
3.611 E F2 1.111(\), and does some basic initialisation of it.)B 1.11
(It then)6.11 F 3.101(calls the)90 520 R F1(ChipScreenInit\(\))5.601 E
F2 3.101(function, with)5.601 F F1(pScreen)5.602 E F2 3.102
(as one of its ar)5.602 F 5.602(guments. If)-.18 F F1(Chip-)5.602 E
(ScreenInit\(\))90 532 Q F2 -.18(re)2.956 G(turns).18 E F1(FALSE)2.956 E
F2(,)A F1(AddScreen\(\))2.956 E F2 -.18(re)2.956 G(turns).18 E F1(-1)
2.956 E F2 5.456(.O)C .456(therwise it r)-5.456 F .456
(eturns the index of the)-.18 F(scr)90 544 Q(een.)-.18 E F1
(AddScreen\(\))7.214 E F2 2.214(should only fail because of pr)4.714 F
2.214(ogramming err)-.18 F 2.214(ors or failur)-.18 F 4.715(et)-.18 G
4.715(oa)-4.715 G(llocate)-4.715 E -.18(re)90 556 S(sour).18 E
(ces \(like memory\).)-.18 E(All con\214guration pr)5 E
(oblems should be detected BEFORE this point.)-.18 E 0 Cg EP
%%Page: 14 14
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(XFree86\256 serv)90 48 Q
(er 4.x Design \(DRAFT\))-.15 E(14)264.86 E/F1 10/Courier@0 SF
(Bool ChipScreenInit\(int index, ScreenPtr pScreen,)115 96 Q
(int argc, char **argv\))175 120 Q/F2 10/Palatino-Roman@0 SF
(This is called at the start of each server generation.)140 144 Q 1.58
(Fill in all of)140 162 R F1(pScreen)4.079 E F2 4.079(,p)C 1.579
(ossibly doing some of this by calling Scr)-4.079 F(eenInit)-.18 E .387
(functions fr)140 174 R .387(om other layers like mi, framebuf)-.18 F
.387(fers \(cfb, etc\), and extensions.)-.18 F .742
(Decide which operations need to be placed under r)140 192 R(esour)-.18
E .742(ce access contr)-.18 F(ol.)-.18 E 1.867
(The classes of operations ar)140 204 R 4.367(et)-.18 G 1.867
(he frame buf)-4.367 F 1.867(fer operations \()-.18 F F1(RAC_FB)A F2
1.867(\), the)B 6.029(pointer operations \()140 216 R F1(RAC_CURSOR)A F2
6.028(\), the viewport change operations)B(\()140 228 Q F1(RAC_VIEWPORT)
A F2 5.126(\)a)C 2.627(nd the colormap operations \()-5.126 F F1
(RAC_COLORMAP)A F2 5.127(\). Any)B 1.116(operation that r)140 240 R
(equir)-.18 E 1.116(es r)-.18 F(esour)-.18 E 1.115
(ces which might be disabled during OPER-)-.18 F -.74(AT)140 252 S .053
(ING state should be set to use RAC.).74 F .053
(This can be speci\214ed separately for)5.053 F 1.041(memory and IO r)
140 264 R(esour)-.18 E 1.041(ces \(the)-.18 F F1(racMemFlags)3.541 E F2
(and)3.541 E F1(racIoFlags)3.541 E F2 1.041(\214elds of)3.541 F(the)140
276 Q F1(ScrnInfoRec)2.5 E F2 -.18(re)2.5 G(spectively\).).18 E
(Map any video memory or other memory r)140 294 Q(egions.)-.18 E .453
(Save the video car)140 312 R 2.954(ds)-.18 G 2.954(tate. Enough)-2.954
F .454(state must be saved so that the original)2.954 F
(state can later be r)140 324 Q(estor)-.18 E(ed.)-.18 E .055
(Initialise the initial video mode.)140 342 R(The)5.054 E F1
(ScrnInfoRec)2.554 E F2('s)A F1(vtSema)2.554 E F2 .054(\214eld should)
2.554 F(be set to)140 354 Q F1(TRUE)2.5 E F2
(just prior to changing the video har)2.5 E(dwar)-.18 E(e's state.)-.18
E(The)90 378 Q F1(ChipScreenInit\(\))3.861 E F2 1.361
(function \(or functions fr)3.861 F 1.362
(om other layers that it calls\) should allocate)-.18 F .678
(entries in the)90 390 R F1(ScreenRec)3.178 E F2('s)A F1(devPrivates)
3.178 E F2(ar)3.177 E .677(ea by calling)-.18 F F1
(AllocateScreenPrivateIndex\(\))3.177 E F2 .728(if it needs per)90 402 R
.728(-generation storage.)-.18 F .728(Since the)5.728 F F1(ScreenRec)
3.228 E F2('s)A F1(devPrivates)3.228 E F2 .729(information is clear)
3.228 F(ed)-.18 E(for each server generation, this is the corr)90 414 Q
(ect place to initialise it.)-.18 E(After)90 432 Q F1(AddScreen\(\))
2.715 E F2 .215(has successfully r)2.715 F .215(eturned, the following)
-.18 F F1(ScrnInfoRec)2.715 E F2 .215(\214elds ar)2.715 F 2.715(ei)-.18
G(nitialised:)-2.715 E/F3 8/Courier@0 SF(pScreen)183 454 Q(racMemFlags)
183 464 Q(racIoFlags)183 474 Q F2(The)90 508 Q F1(ChipScreenInit\(\))
3.673 E F2 1.173(function should initialise the)3.673 F F1(CloseScreen)
3.673 E F2(and)3.674 E F1(SaveScreen)3.674 E F2(\214elds)3.674 E(of)90
520 Q F1(pScreen)2.903 E F2 5.403(.T)C .403(he old value of)-5.403 F F1
(pScreen->CloseScreen)2.903 E F2 .403
(should be saved as part of the driver's)2.903 F(per)90 532 Q(-scr)-.18
E .204(een private data, allowing it to be called fr)-.18 F(om)-.18 E F1
(ChipCloseScreen\(\))2.704 E F2 5.204(.T)C .204(his means that the)
-5.204 F(existing)90 544 Q F1(CloseScreen\(\))2.5 E F2
(function is wrapped.)2.5 E/F4 14/Helvetica-Bold@0 SF 3.892
(5.17 Finalising)90 566 R(RA)3.892 E 3.892(CI)-.56 G(nitialisation)
-3.892 E F2 .357(After all the)90 584 R F1(ChipScreenInit\(\))2.856 E F2
.356(functions have been called, each scr)2.856 F .356(een has r)-.18 F
(egister)-.18 E .356(ed its RAC)-.18 F -.18(re)90 596 S(quir).18 E 3.97
(ements. This)-.18 F 1.47(information is used to determine which shar)
3.97 F 1.47(ed r)-.18 F(esour)-.18 E 1.47(ces ar)-.18 F 3.97(er)-.18 G
1.47(equested by)-4.15 F(mor)90 608 Q 2.595(et)-.18 G .095
(han one driver and set the access functions accor)-2.595 F 2.595
(dingly. This)-.18 F .094(is done following these r)2.594 F(ules:)-.08 E
7.5(1. The)102.5 626 R .781(sharable r)3.281 F(esour)-.18 E .781(ces r)
-.18 F(egister)-.18 E .781(ed by each entity ar)-.18 F 3.282(ec)-.18 G
(ompar)-3.282 E 3.282(ed. If)-.18 F 3.282(ar)3.282 G(esour)-3.462 E .782
(ce is r)-.18 F(egister)-.18 E(ed)-.18 E 1.242(by mor)120 638 R 3.742
(et)-.18 G 1.241(han one entity the entity will be marked to indicate t\
hat it needs to shar)-3.742 F 3.741(et)-.18 G(his)-3.741 E -.18(re)120
650 S(sour).18 E(ces type \(IO or MEM\).)-.18 E 7.5(2. A)102.5 668 R
-.18(re)2.5 G(sour).18 E(ce marked `)-.18 E(`disabled'' during OPERA)
-.37 E(TING state will be ignor)-.74 E(ed entir)-.18 E(ely.)-.18 E 7.5
(3. A)102.5 686 R -.18(re)3.406 G(sour).18 E .907(ce marked `)-.18 F
.907(`unused'' will only con\215ict with an overlapping r)-.37 F(esour)
-.18 E .907(ce of an other)-.18 F
(entity if the second is actually in use during OPERA)120 698 Q
(TING state.)-.74 E 7.5(4. If)102.5 716 R 2.421(an `)4.921 F 2.421
(`unused'' r)-.37 F(esour)-.18 E 2.421
(ce was found to con\215ict but the entity does not use any other)-.18 F
-.18(re)120 728 S(sour).18 E(ce of this type the entir)-.18 E 2.5(er)
-.18 G(esour)-2.68 E(ce type will be disabled for that entity.)-.18 E 0
Cg EP
%%Page: 15 15
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(XFree86\256 serv)90 48 Q
(er 4.x Design \(DRAFT\))-.15 E(15)264.86 E/F1 14/Helvetica-Bold@0 SF
3.892(5.18 Finishing)90 100 R(InitOutput\(\))3.892 E/F2 10
/Palatino-Roman@0 SF .221(At this point)90 118 R/F3 10/Courier@0 SF
(InitOutput\(\))2.722 E F2 .222(is \214nished, and all the scr)2.722 F
.222(eens have been setup in their initial video)-.18 F(mode.)90 130 Q
F1 3.892(5.19 Mode)90 152 R(Switc)3.892 E(hing)-.14 E F2
(When a SwitchMode event is r)90 170 Q(eceived,)-.18 E F3
(ChipSwitchMode\(\))2.5 E F2(is called \(when it exists\):)2.5 E F3
(Bool ChipSwitchMode\(int index, DisplayModePtr mode, int flags\))115
194 Q F2 1.188(Initialises the new mode for the scr)140 218 R 1.188
(een identi\214ed by)-.18 F F3(index;)3.688 E F2 6.188(.T)C 1.188
(he view-)-6.188 F(port may need to be adjusted also.)140 230 Q F1 3.892
(5.20 Changing)90 258 R(Vie)3.892 E -3.612(wpor t)-.21 F F2
(When a Change V)90 276 Q(iewport event is r)-.55 E(eceived,)-.18 E F3
(ChipAdjustFrame\(\))2.5 E F2(is called \(when it exists\):)2.5 E F3
(void ChipAdjustFrame\(int index, int x, int y, int flags\))115 300 Q F2
(Changes the viewport for the scr)140 324 Q(een identi\214ed by)-.18 E
F3(index)2.5 E F2(.)A 1.757
(It should be noted that many chipsets impose r)140 342 R 1.758
(estrictions on wher)-.18 F 4.258(et)-.18 G(he)-4.258 E .514
(viewport may be placed in the virtual r)140 354 R .513
(esolution, either for alignment r)-.18 F(ea-)-.18 E .106
(sons, or to pr)140 366 R .106(event the start of the viewport fr)-.18 F
.106(om being positioned within a)-.18 F 1.719
(pixel \(as can happen in a 24bpp mode\).)140 378 R 1.719
(After calculating the value the)6.719 F .005(chipset's panning r)140
390 R .006(egisters need to be set to for non-DGA modes, this func-)-.18
F 1.986(tion should r)140 402 R 1.986(ecalculate the ScrnInfoRec's)-.18
F F3(frameX0)4.486 E F2(,)A F3(frameY0)4.485 E F2(,)A F3(frameX1)4.485 E
F2(and)140 414 Q F3(frameY1)2.547 E F2 .047(\214elds to corr)2.547 F
.048(espond to that value.)-.18 F .048(If this is not done, switch-)
5.048 F 2.142(ing to another mode might cause the position of a har)140
426 R(dwar)-.18 E 4.641(ec)-.18 G 2.141(ursor to)-4.641 F(change.)140
438 Q F1 3.892(5.21 VT)90 466 R(Switc)3.892 E(hing)-.14 E F2 1.351
(When a VT switch event is r)90 484 R(eceived,)-.18 E F3
(xf86VTSwitch\(\))3.852 E F2 1.352(is called.)3.852 F F3
(xf86VTSwitch\(\))6.352 E F2 1.352(does the)3.852 F(following:)90 496 Q
(On ENTER:)120 514 Q/F4 8/Palatino-Roman@0 SF<83>165.152 532 Q F2
(enable port I/O access)5 E F4<83>165.152 550 Q F2
(save and initialise the bus/r)5 E(esour)-.18 E(ce state)-.18 E F4<83>
165.152 568 Q F2(enter the SETUP server state)5 E F4<83>165.152 586 Q F2
(calls)5 E F3(ChipEnterVT\(\))2.5 E F2(for each scr)2.5 E(een)-.18 E F4
<83>165.152 604 Q F2(enter the OPERA)5 E(TING server state)-.74 E F4<83>
165.152 622 Q F2(validate GCs)5 E F4<83>165.152 640 Q F2(Restor)5 E 2.5
(ef)-.18 G 2.5(bf)-2.5 G -.18(ro)-2.5 G 2.5(ms).18 G
(aved pixmap for each scr)-2.5 E(een)-.18 E F4<83>165.152 658 Q F2
(Enable all input devices)5 E(On LEA)120 676 Q(VE:)-1.11 E F4<83>165.152
694 Q F2(Save fb to pixmap for each scr)5 E(een)-.18 E F4<83>165.152 712
Q F2(validate GCs)5 E 0 Cg EP
%%Page: 16 16
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(XFree86\256 serv)90 48 Q
(er 4.x Design \(DRAFT\))-.15 E(16)264.86 E/F1 8/Palatino-Roman@0 SF<83>
165.152 96 Q/F2 10/Palatino-Roman@0 SF(enter the SETUP server state)5 E
F1<83>165.152 114 Q F2(calls)5 E/F3 10/Courier@0 SF(ChipLeaveVT\(\))2.5
E F2(for each scr)2.5 E(een)-.18 E F1<83>165.152 132 Q F2
(disable all input devices)5 E F1<83>165.152 150 Q F2 -.18(re)5 G(stor)
.18 E 2.5(eb)-.18 G(us/r)-2.5 E(esour)-.18 E(ce state)-.18 E F1<83>
165.152 168 Q F2(disables port I/O access)5 E F3
(Bool ChipEnterVT\(int index, int flags\))115 192 Q F2 1.81
(This function should initialise the curr)140 216 R 1.81
(ent video mode and initialise the)-.18 F
(viewport, turn on the HW cursor if appr)140 228 Q(opriate, etc.)-.18 E
(Should it r)140 246 Q(e-save the video state befor)-.18 E 2.5(ei)-.18 G
(nitialising the video mode?)-2.5 E F3
(void ChipLeaveVT\(int index, int flags\))115 264 Q F2 .176
(This function should r)140 288 R(estor)-.18 E 2.676(et)-.18 G .176
(he saved video state.)-2.676 F .177(If appr)5.177 F .177
(opriate it should)-.18 F(also turn of)140 300 Q 2.5(ft)-.18 G
(he HW cursor)-2.5 E 2.5(,a)-.74 G
(nd invalidate any pixmap/font caches.)-2.5 E(Optionally)115 318 Q(,)
-1.11 E F3(ChipLeaveVT\(\))5.595 E F2 3.095(may also unmap memory r)
5.595 F 5.594(egions. If)-.18 F(so,)5.594 E F3(ChipEn-)5.594 E
(terVT\(\))115 330 Q F2 .719(will need to r)3.219 F .719(emap them.)-.18
F(Additionally)5.719 E 3.219(,i)-1.11 G 3.219(fa)-3.219 G 3.219(na)
-3.219 G(pertur)-3.219 E 3.219(eu)-.18 G .72(sed to access video)-3.219
F .442(memory is unmapped and r)115 342 R .442(emapped in this fashion,)
-.18 F F3(ChipEnterVT\(\))2.942 E F2 .441(will also need)2.942 F 2.007
(to notify the framebuf)115 354 R 2.007(fer layers of the apertur)-.18 F
2.008(e's new location in virtual memory.)-.18 F
(This is done with a call to the scr)115 366 Q(een's)-.18 E F3
(ModifyPixmapHeader\(\))2.5 E F2(function, as follows)2.5 E F3
(\(*pScreen->ModifyPixmapHeader\)\(pScrn->ppix,)140 390 Q
(-1, -1, -1, -1, -1,)200 414 Q/F4 10/Palatino-Italic@0 SF(NewApertur)6 E
(eAddr)-.18 E(ess)-.18 E F2(\);)A(wher)165 438 Q 6.155(et)-.18 G(he)
-6.155 E F3(``ppix'')6.155 E F2 3.654
(\214eld in a ScrnInfoRec points to the)6.155 F 1.168
(pixmap used by the scr)165 450 R(een's)-.18 E F3(SaveRestoreImage\(\))
3.669 E F2(function)3.669 E(to hold the scr)165 462 Q
(een's contents while switched out.)-.18 E(Curr)115 486 Q(ently)-.18 E
4.91(,a)-1.11 G(pertur)-4.91 E 4.909(er)-.18 G 2.409
(emapping, as described her)-5.089 F 2.409
(e, should not be attempted if the)-.18 F .334(driver uses the)115 498 R
F3(xf8_16bpp)2.834 E F2(or)2.834 E F3(xf8_32bpp)2.834 E F2(framebuf)
2.834 E .334(fer layers.)-.18 F 2.834(Ap)5.334 G .334(ending r)-2.834 F
(estr)-.18 E(uctur)-.08 E(-)-.18 E(ing of VT switching will addr)115 510
Q(ess this r)-.18 E(estriction in the near futur)-.18 E(e.)-.18 E .159
(Other layers may wrap the)90 528 R F3(ChipEnterVT\(\))2.659 E F2(and)
2.659 E F3(ChipLeaveVT\(\))2.658 E F2 .158
(functions if they need to take)2.658 F
(some action when these events ar)90 540 Q 2.5(er)-.18 G(eceived.)-2.68
E/F5 14/Helvetica-Bold@0 SF 3.892(5.22 End)90 562 R(of ser)3.892 E
(ver g).14 E(eneration).14 E F2
(At the end of each server generation, the DIX layer calls)90 580 Q F3
(ChipCloseScreen\(\))2.5 E F2(for each scr)2.5 E(een:)-.18 E 0 Cg EP
%%Page: 17 17
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(XFree86\256 serv)90 48 Q
(er 4.x Design \(DRAFT\))-.15 E(17)264.86 E/F1 10/Courier@0 SF
(Bool ChipCloseScreen\(int index, ScreenPtr pScreen\))115 96 Q/F2 10
/Palatino-Roman@0 SF .24(This function should r)140 120 R(estor)-.18 E
2.74(et)-.18 G .24(he saved video state and unmap the memory)-2.74 F
-.18(re)140 132 S(gions.).18 E .449(It should also fr)140 150 R .449
(ee per)-.18 F(-scr)-.18 E .449(een data str)-.18 F(uctur)-.08 E .449
(es allocated by the driver.)-.18 F(Note)5.449 E .282
(that the persistent data held in the)140 162 R F1(ScrnInfoRec)2.782 E
F2('s)A F1(driverPrivate)2.783 E F2(\214eld)2.783 E .17
(should not be fr)140 174 R .169(eed her)-.18 F 2.669(eb)-.18 G .169
(ecause it is needed by subsequent server genera-)-2.669 F(tions.)140
186 Q(The)140 198 Q F1(ScrnInfoRec)3.198 E F2('s)A F1(vtSema)3.198 E F2
.698(\214eld should be set to)3.198 F F1(FALSE)3.198 E F2 .699
(once the video)3.198 F(HW state has been r)140 210 Q(estor)-.18 E(ed.)
-.18 E(Befor)140 228 Q 4.044(ef)-.18 G -.18(re)-4.044 G 1.544
(eing the per).18 F(-scr)-.18 E 1.543(een driver data the saved)-.18 F
F1(CloseScreen)4.043 E F2(value)4.043 E .223(should be r)140 240 R
(estor)-.18 E .224(ed to)-.18 F F1(pScreen->CloseScreen)2.724 E F2 2.724
(,a)C .224(nd that function should)-2.724 F(be called after fr)140 252 Q
(eeing the data.)-.18 E/F3 16/Helvetica-Bold@0 SF 4.448(6. Optional)90
288 R(Driver Functions)4.448 E F2 .884(The functions outlined her)90 306
R 3.384(ec)-.18 G .883(an be called fr)-3.384 F .883(om the XFr)-.18 F
.883(ee86 common layer)-.18 F 3.383(,b)-.74 G .883(ut their pr)-3.383 F
.883(esence is)-.18 F(optional.)90 318 Q/F4 14/Helvetica-Bold@0 SF 3.892
(6.1 Mode)90 340 R -.84(Va)3.892 G(lidation).84 E F2 .898
(When a mode validation helper supplied by the XFr)90 358 R .898
(ee86-common layer is being used, it can be)-.18 F(useful to pr)90 370 Q
(ovide a function to check for hw speci\214c mode constraints:)-.18 E F1
(ModeStatus ChipValidMode\(int index, DisplayModePtr mode,)115 394 Q
(Bool verbose, int flags\))175 418 Q F2 .784
(Check the passed mode for hw-speci\214c constraints, and r)140 442 R
.784(eturn the appr)-.18 F(o-)-.18 E(priate status value.)140 454 Q .974
(This function may also modify the ef)90 478 R .974
(fective timings and clock of the passed mode.)-.18 F .974(These have)
5.974 F .135(been stor)90 490 R .135(ed in the mode's)-.18 F F1(Crtc*)
2.635 E F2(and)2.635 E F1(SynthClock)2.635 E F2 .135
(elements, and have alr)2.635 F .135(eady been adjusted for)-.18 F 2.471
(interlacing, doublescanning, multiscanning and clock multipliers and d\
ividers.)90 502 R 2.472(The function)7.471 F .391(should not modify any\
 other mode \214eld, unless it wants to modify the mode timings r)90 514
R .39(eported to)-.18 F(the user by)90 526 Q F1(xf86PrintModes\(\))2.5 E
F2(.)A 1.393(The function is called once for every mode in the XF86Con\
\214g Monitor section assigned to the)90 544 R(scr)90 556 Q .308
(een, with)-.18 F F1(flags)2.808 E F2 .307(set to)2.807 F F1
(MODECHECK_INITIAL)2.807 E F2 5.307(.I)C 2.807(ti)-5.307 G 2.807(ss)
-2.807 G .307(ubsequently called for every mode in the)-2.807 F .13
(XF86Con\214g Display subsection assigned to the scr)90 568 R .13
(een, with)-.18 F F1(flags)2.63 E F2 .13(set to)2.63 F F1
(MODECHECK_FINAL)2.63 E F2 5.13(.I)C(n)-5.13 E .255(the second case, th\
e mode will have successfully passed all other tests.)90 580 R .255
(In addition, the)5.255 F F1(ScrnIn-)2.755 E(foRec)90 592 Q F2('s)A F1
(virtualX)2.554 E F2(,)A F1(virtualY)2.554 E F2(and)2.554 E F1
(displayWidth)2.554 E F2 .055
(\214elds will have been set as if the mode to be)2.554 F(validated wer)
90 604 Q 2.5(et)-.18 G 2.5(ob)-2.5 G 2.5(et)-2.5 G
(he last mode accepted.)-2.5 E .808(In ef)90 622 R .807
(fect, calls with MODECHECK_INITIAL ar)-.18 F 3.307(ei)-.18 G .807
(ntended for checks that do not depend on any)-3.307 F 1.158(mode other\
 than the one being validated, while calls with MODECHECK_FINAL ar)90
634 R 3.659(ei)-.18 G(ntended)-3.659 E(for checks that may involve mor)
90 646 Q 2.5(et)-.18 G(han one mode.)-2.5 E F4 3.892(6.2 Free)90 668 R
(screen data)3.892 E F2 .032(When a scr)90 686 R .031
(een is deleted prior to the completion of the Scr)-.18 F .031
(eenInit phase the)-.18 F F1(ChipFreeScreen\(\))2.531 E F2
(function is called when de\214ned.)90 698 Q 0 Cg EP
%%Page: 18 18
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(XFree86\256 serv)90 48 Q
(er 4.x Design \(DRAFT\))-.15 E(18)264.86 E/F1 10/Courier@0 SF
(void ChipFreeScreen\(int scrnindex, int flags\))115 96 Q/F2 10
/Palatino-Roman@0 SF(Fr)140 120 Q 2.087(ee any driver)-.18 F 2.087
(-allocated data that may have been allocated up to and)-.18 F .303
(including an unsuccessful)140 132 R F1(ChipScreenInit\(\))2.803 E F2
2.803(call. This)2.803 F .302(would pr)2.803 F(edom-)-.18 E 1.562
(inantly be data allocated by)140 144 R F1(ChipPreInit\(\))4.062 E F2
1.562(that persists acr)4.062 F 1.563(oss server)-.18 F 4.084
(generations. It)140 156 R 1.584(would include the)4.084 F F1
(driverPrivate)4.084 E F2 4.084(,a)C 1.583(nd any `)-4.084 F
(`privates'')-.37 E(entries that modules may have allocated.)140 168 Q
/F3 16/Helvetica-Bold@0 SF 4.448(7. Recommended)90 204 R
(driver functions)4.448 E F2 1.206(The functions outlined her)90 222 R
3.706(ea)-.18 G 1.566 -.18(re f)-3.706 H 1.207
(or internal use by the driver only.).18 F 1.207(They ar)6.207 F 3.707
(ee)-.18 G(ntir)-3.707 E 1.207(ely optional,)-.18 F .169(and ar)90 234 R
2.669(en)-.18 G .169(ever accessed dir)-2.669 F .169(ectly fr)-.18 F
.169(om higher layers.)-.18 F .168
(The sample function declarations shown her)5.168 F(e)-.18 E(ar)90 246 Q
2.5(ej)-.18 G(ust examples.)-2.5 E
(The interface \(if any\) used is up to the driver.)5 E/F4 14
/Helvetica-Bold@0 SF 3.892(7.1 Sa)90 268 R(ve)-.21 E F2 1.383
(Save the video state.)90 286 R 1.383(This could be called fr)6.383 F
(om)-.18 E F1(ChipScreenInit\(\))3.884 E F2 1.384(and \(possibly\))3.884
F F1(ChipEn-)3.884 E(terVT\(\))90 298 Q F2(.)A F1
(void ChipSave\(ScrnInfoPtr pScrn\))115 322 Q F2 .493(Saves the curr)140
346 R .493(ent state.)-.18 F .492(This will only be saving pr)5.493 F
.492(e-server states or states)-.18 F(befor)140 358 Q 3.836(er)-.18 G
1.336(eturning to the server.)-4.016 F(Ther)6.337 E 3.837(ei)-.18 G
3.837(so)-3.837 G 1.337(nly one curr)-3.837 F 1.337(ent saved state per)
-.18 F(scr)140 370 Q(een and it is stor)-.18 E
(ed in private storage in the scr)-.18 E(een.)-.18 E F4 3.892
(7.2 Restore)90 398 R F2(Restor)90 416 Q 2.726(et)-.18 G .226
(he original video state.)-2.726 F .225(This could be called fr)5.226 F
.225(om the)-.18 F F1(ChipLeaveVT\(\))2.725 E F2(and)2.725 E F1
(ChipClos-)2.725 E(eScreen\(\))90 428 Q F2(functions.)2.5 E F1
(void ChipRestore\(ScrnInfoPtr pScrn\))115 452 Q F2(Restor)140 476 Q
1.352(es the saved state fr)-.18 F 1.353(om the private storage.)-.18 F
1.353(Usually only used for)6.353 F -.18(re)140 488 S
(storing text modes.).18 E F4 3.892(7.3 Initialise)90 516 R(Mode)3.892 E
F2 2.362(Initialise a video mode.)90 534 R 2.362
(This could be called fr)7.362 F 2.362(om the)-.18 F F1
(ChipScreenInit\(\))4.861 E F2(,)A F1(ChipSwitch-)4.861 E(Mode\(\))90
546 Q F2(and)2.5 E F1(ChipEnterVT\(\))2.5 E F2(functions.)2.5 E F1
(Bool ChipModeInit\(ScrnInfoPtr pScrn, DisplayModePtr mode\))115 570 Q
F2(Pr)140 594 Q(ograms the har)-.18 E(dwar)-.18 E 2.5(ef)-.18 G
(or the given video mode.)-2.5 E F3 4.448(8. Data)90 630 R
(and Data Structures)4.448 E F4 3.892(8.1 Command)90 652 R(line data)
3.892 E F2 1.217(Command line options ar)90 670 R 3.717(et)-.18 G 1.218
(ypically global, and ar)-3.717 F 3.718(es)-.18 G(tor)-3.718 E 1.218
(ed in global variables.)-.18 F 1.218(These variables)6.218 F(ar)90 682
Q 3.494(er)-.18 G .994(ead-only and ar)-3.674 F 3.494(ea)-.18 G .993
(vailable to drivers via a function call interface.)-3.494 F .993
(Most of these command)5.993 F .987(line values ar)90 694 R 3.487(ep)
-.18 G -.18(ro)-3.487 G .987(cessed via helper functions to ensur).18 F
3.487(et)-.18 G .987(hat they ar)-3.487 F 3.488(et)-.18 G -.18(re)-3.488
G .988(ated consistently by all).18 F 4.099(drivers. The)90 706 R 1.599
(other means of access is pr)4.099 F 1.598(ovided for cases wher)-.18 F
4.098(et)-.18 G 1.598(he supplied helper functions)-4.098 F
(might not be appr)90 718 Q(opriate.)-.18 E(Some of them ar)90 736 Q(e:)
-.18 E 0 Cg EP
%%Page: 19 19
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(XFree86\256 serv)90 48 Q
(er 4.x Design \(DRAFT\))-.15 E(19)264.86 E/F1 8/Courier@0 SF 67.2
(xf86Verbose verbosity)154.2 94 R(level)4.8 E 86.4(xf86Bpp -bpp)154.2
104 R(from the command line)4.8 E 76.8(xf86Depth -depth)154.2 114 R
(from the command line)4.8 E 72(xf86Weight -weight)154.2 124 R
(from the command line)4.8 E 76.8(xf86Gamma -{r,g,b,}gamma)154.2 134 R
(from the command line)4.8 E 52.8(xf86FlipPixels -flippixels)154.2 144 R
(from the command line)4.8 E 57.6(xf86ProbeOnly -probeonly)154.2 154 R
(from the command line)4.8 E 9.6(defaultColorVisualClass -cc)154.2 164 R
(from the command line)4.8 E/F2 10/Palatino-Roman@0 SF
(If we ever do allow for scr)90 188 Q
(een-speci\214c command line options, we may need to r)-.18 E
(ethink this.)-.18 E(These can be accessed in a r)90 206 Q
(ead-only manner by drivers with the following functions:)-.18 E/F3 10
/Courier@0 SF(int xf86GetVerbosity\(\))115 230 Q F2
(Returns the value of)140 254 Q F3(xf86Verbose)2.5 E F2(.)A F3
(int xf86GetDepth\(\))115 272 Q F2 1.902(Returns the)140 296 R F3
(-depth)4.402 E F2 1.903(command line setting.)4.402 F 1.903
(If not set on the command)6.903 F(line,)140 308 Q F3(-1)2.5 E F2(is r)
2.5 E(eturned.)-.18 E F3(rgb xf86GetWeight\(\))115 326 Q F2 1.358
(Returns the)140 350 R F3(-weight)3.858 E F2 1.357
(command line setting.)3.858 F 1.357(If not set on the command)6.357 F
(line,)140 362 Q F3({0, 0, 0})2.5 E F2(is r)2.5 E(eturned.)-.18 E F3
(Gamma xf86GetGamma\(\))115 380 Q F2 .878(Returns the)140 404 R F3
(-gamma)3.379 E F2(or)3.379 E F3(-rgamma)3.379 E F2(,)A F3(-ggamma)3.379
E F2(,)A F3(-bgamma)3.379 E F2 .879(command line set-)3.379 F 2.5
(tings. If)140 416 R(not set on the command line,)2.5 E F3
({0.0, 0.0, 0.0})2.5 E F2(is r)2.5 E(eturned.)-.18 E F3
(Bool xf86GetFlipPixels\(\))115 434 Q F2(Returns)140 458 Q F3(TRUE)5.566
E F2(if)5.566 E F3(-flippixels)5.566 E F2 3.066(is pr)5.566 F 3.066
(esent on the command line, and)-.18 F F3(FALSE)140 470 Q F2(otherwise.)
2.5 E F3(const char *xf86GetServerName\(\))115 488 Q F2
(Returns the name of the X server fr)140 512 Q(om the command line.)-.18
E/F4 14/Helvetica-Bold@0 SF 3.892(8.2 Data)90 540 R(handling)3.892 E F2
.049(Con\214g \214le data contains parts that ar)90 558 R 2.549(eg)-.18
G .049(lobal, and parts that ar)-2.549 F 2.549(eS)-.18 G(cr)-2.549 E
.049(een speci\214c.)-.18 F .049(All of it is parsed)5.049 F .262
(into data str)90 570 R(uctur)-.08 E .261(es that neither the drivers o\
r most other parts of the server need to know about.)-.18 F .153
(The global data is typically not r)90 588 R(equir)-.18 E .153
(ed by drivers, and as such, most of it is stor)-.18 F .154
(ed in the private)-.18 F F3(xf86InfoRec)90 600 Q F2(.)A .24(The scr)90
618 R .24(een-speci\214c data collected fr)-.18 F .24
(om the con\214g \214le is stor)-.18 F .24(ed in scr)-.18 F .24
(een, device, display)-.18 F 2.74(,m)-1.11 G(onitor)-2.74 E(-)-.18 E
2.16(speci\214c data str)90 630 R(uctur)-.08 E 2.161(es that ar)-.18 F
4.661(es)-.18 G 2.161(eparate fr)-4.661 F 2.161(om the)-.18 F F3
(ScrnInfoRecs)4.661 E F2 4.661(,w)C 2.161(ith the appr)-4.661 F 2.161
(opriate ele-)-.18 F .041(ments/\214elds hooked into the)90 642 R F3
(ScrnInfoRecs)2.541 E F2 .041(as r)2.541 F(equir)-.18 E 2.541(ed. The)
-.18 F(scr)2.541 E .04(een con\214g data is held in)-.18 F F3(con-)2.54
E(fScreenRec)90 654 Q F2 3.102(,d)C .602(evice data in the)-3.102 F F3
(GDevRec)3.102 E F2 3.103(,m)C .603(onitor data in the)-3.103 F F3
(MonRec)3.103 E F2 3.103(,a)C .603(nd display data in the)-3.103 F F3
(DispRec)90 666 Q F2(.)A .149(The XFr)90 684 R .149
(ee86 common layer's scr)-.18 F .149
(een speci\214c data \(the actual data in use for each scr)-.18 F .148
(een\) is held in)-.18 F(the)90 696 Q F3(ScrnInfoRecs)4.48 E F2 6.98(.A)
C 4.481(sh)-6.98 G 1.981(as been outlined above, the)-4.481 F F3
(ScrnInfoRecs)4.481 E F2(ar)4.481 E 4.481(ea)-.18 G 1.981
(llocated at pr)-4.481 F(obe)-.18 E .407(time, and it is the r)90 708 R
.407(esponsibility of the Drivers')-.18 F F3(Probe\(\))2.907 E F2(and)
2.907 E F3(PreInit\(\))2.906 E F2 .406(functions to \214nish \214ll-)
2.906 F .379(ing them in based on both data pr)90 720 R .379
(ovided on the command line and data pr)-.18 F .379(ovided fr)-.18 F
.379(om the Con-)-.18 F(\214g \214le.)90 732 Q(The pr)5 E
(ecedence for this is:)-.18 E 0 Cg EP
%%Page: 20 20
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(XFree86\256 serv)90 48 Q
(er 4.x Design \(DRAFT\))-.15 E(20)264.86 E/F1 10/Palatino-Roman@0 SF
(command line)115 96 Q 2.5(-> con\214g)5 F 2.5(\214le -> pr)2.5 F
(obed/default data)-.18 E .468(For most things in this category ther)90
114 R 2.968(ea)-.18 G .828 -.18(re h)-2.968 H .467
(elper functions that the drivers can use to ensur).18 F 2.967(et)-.18 G
(hat)-2.967 E(the above pr)90 126 Q(ecedence is consistently used.)-.18
E 1.643(As well as containing scr)90 144 R 1.643
(een-speci\214c data that the XFr)-.18 F 1.644
(ee86 common layer \(including essential)-.18 F .019
(parts of the server infrastr)90 156 R(uctur)-.08 E 2.519(ea)-.18 G
2.519(sw)-2.519 G .019
(ell as helper functions\) needs to access, it also contains some)-2.519
F .91(data that drivers use internally.)90 168 R .91
(When considering whether to add a new \214eld to the)5.91 F/F2 10
/Courier@0 SF(ScrnIn-)3.41 E(foRec)90 180 Q F1 3.08(,c)C .579(onsider t\
he balance between the convenience of things that lots of drivers need \
and the)-3.08 F(size/obscurity of the)90 192 Q F2(ScrnInfoRec)2.5 E F1
(.)A(Per)90 210 Q(-scr)-.18 E .334
(een driver speci\214c data that cannot be accommodated with the static)
-.18 F F2(ScrnInfoRec)2.835 E F1(\214elds)2.835 E .905
(is held in a driver)90 222 R .905(-de\214ned data str)-.18 F(uctur)-.08
E .905(e, a pointer to which is assigned to the)-.18 F F2(ScrnInfoRec)
3.404 E F1('s)A F2(driverPrivate)90 234 Q F1 2.587(\214eld. This)2.586 F
.087(is per)2.587 F(-scr)-.18 E .087(een data that persists acr)-.18 F
.087(oss server generations \(as does the)-.18 F 1.566
(bulk of the static)90 246 R F2(ScrnInfoRec)4.066 E F1 4.066(data\). It)
4.066 F 1.566(would typically also include the video car)4.066 F 1.565
(d's saved)-.18 F(state.)90 258 Q(Per)90 276 Q(-scr)-.18 E 1.532(een da\
ta for other modules that the driver uses \(for example, the XAA module\
\) that is)-.18 F -.18(re)90 288 S
(set for each server generation is hooked into the).18 E F2(ScrnInfoRec)
2.5 E F1(thr)2.5 E(ough it's)-.18 E F2(privates)2.5 E F1(\214eld.)2.5 E
.706(Once it has stabilised, the data str)90 306 R(uctur)-.08 E .706
(es and variables accessible to video drivers will be docu-)-.18 F .131
(mented her)90 318 R 2.631(e. In)-.18 F .131
(the meantime, those things de\214ned in the)2.631 F F2(xf86.h)2.631 E
F1(and)2.632 E F2(xf86str.h)2.632 E F1 .132(\214les ar)2.632 F 2.632(ev)
-.18 G(isi-)-2.632 E .31(ble to video drivers.)90 330 R .31
(Things de\214ned in)5.31 F F2(xf86Priv.h)2.81 E F1(and)2.81 E F2
(xf86Privstr.h)2.81 E F1(ar)2.81 E 2.81(eN)-.18 G .31(OT intended to)
-2.81 F(be visible to video drivers, and it is an err)90 342 Q
(or for a driver to include those \214les.)-.18 E/F3 14/Helvetica-Bold@0
SF 3.892(8.3 Accessing)90 364 R(global data)3.892 E F1(Some other globa\
l state information that the drivers may access via functions is as fol\
lows:)90 382 Q F2(Bool xf86ServerIsExiting\(\))115 406 Q F1(Returns)140
430 Q F2(TRUE)4.794 E F1 2.295
(if the server is at the end of a generation and is in the)4.794 F(pr)
140 442 Q(ocess of exiting, and)-.18 E F2(FALSE)2.5 E F1(otherwise.)2.5
E F2(Bool xf86ServerIsResetting\(\))115 460 Q F1(Returns)140 484 Q F2
(TRUE)4.795 E F1 2.295
(if the server is at the end of a generation and is in the)4.795 F(pr)
140 496 Q(ocess of r)-.18 E(esetting, and)-.18 E F2(FALSE)2.5 E F1
(otherwise.)2.5 E F2(Bool xf86ServerIsInitialising\(\))115 514 Q F1
(Returns)140 538 Q F2(TRUE)2.928 E F1 .428
(if the server is at the beginning of a generation and is in the)2.928 F
(pr)140 550 Q(ocess of initialising, and)-.18 E F2(FALSE)2.5 E F1
(otherwise.)2.5 E F2(Bool xf86ServerIsOnlyProbing\(\))115 568 Q F1
(Returns)140 592 Q F2(TRUE)5.057 E F1 2.557(if the -pr)5.057 F 2.557
(obeonly command line \215ag was speci\214ed, and)-.18 F F2(FALSE)140
604 Q F1(otherwise.)2.5 E F2(Bool xf86CaughtSignal\(\))115 622 Q F1
(Returns)140 646 Q F2(TRUE)2.5 E F1
(if the server has caught a signal, and)2.5 E F2(FALSE)2.5 E F1
(otherwise.)2.5 E F3 3.892(8.4 Allocating)90 674 R(priv)3.892 E
(ate data)-.28 E F1 2.606(Ad)90 692 S .106
(river and any module it uses may allocate per)-2.606 F(-scr)-.18 E .106
(een private storage in either the)-.18 F F2(ScreenRec)2.606 E F1 1.329
(\(DIX level\) or)90 704 R F2(ScrnInfoRec)3.828 E F1(\(XFr)3.828 E 1.328
(ee86 common layer level\).)-.18 F F2(ScreenRec)6.328 E F1 1.328
(storage persists only)3.828 F .526(for a single server generation, and)
90 716 R F2(ScrnInfoRec)3.026 E F1 .526(storage persists acr)3.026 F
.526(oss generations for the life-)-.18 F(time of the server.)90 728 Q 0
Cg EP
%%Page: 21 21
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(XFree86\256 serv)90 48 Q
(er 4.x Design \(DRAFT\))-.15 E(21)264.86 E/F1 10/Palatino-Roman@0 SF
(The)90 96 Q/F2 10/Courier@0 SF -3.245(ScreenRec devPrivates)2.755 F F1
.255(data must be r)2.755 F .254
(eallocated/initialised at the start of each new gen-)-.18 F 4.147
(eration. This)90 108 R 1.647(is normally done fr)4.147 F 1.647(om the)
-.18 F F2(ChipScreenInit\(\))4.148 E F1 1.648
(function, and Init functions for)4.148 F .037
(other modules that it calls.)90 120 R .036
(Data allocated in this way should be fr)5.036 F .036
(eed by the driver's)-.18 F F2(ChipClos-)2.536 E(eScreen\(\))90 132 Q F1
.295(functions, and Close functions for other modules that it calls.)
2.794 F 2.795(An)5.295 G(ew)-2.795 E F2(devPrivates)2.795 E F1
(entry is allocated by calling the)90 144 Q F2
(AllocateScreenPrivateIndex\(\))2.5 E F1(function.)2.5 E F2
(int AllocateScreenPrivateIndex\(\))115 168 Q F1 .254
(This function allocates a new element in the)140 192 R F2(devPrivates)
2.753 E F1 .253(\214eld of all cur)2.753 F(-)-.18 E -.18(re)140 204 S
.158(ntly existing).18 F F2(ScreenRecs)2.658 E F1 5.158(.T)C .158(he r)
-5.158 F .158(eturn value is the index of this new ele-)-.18 F 2.908
(ment in the)140 216 R F2(devPrivates)5.408 E F1 5.408(array. The)5.408
F F2(devPrivates)5.408 E F1 2.908(\214eld is of type)5.408 F F2
(DevUnion)140 228 Q F1(:)A/F3 8/Courier@0 SF(typedef union _DevUnion {)
198.4 244 Q 57.6(pointer ptr;)217.6 254 R 72(long val;)217.6 264 R
(unsigned long)217.6 274 Q(uval;)33.6 E 57.6(pointer \(*fptr\)\(void\);)
217.6 284 R 4.8(}D)198.4 294 S(evUnion;)-4.8 E F1 .409
(which allows the element to be used for any of the above types.)140 322
R .409(It is com-)5.409 F .111(monly used as a pointer to data that the\
 caller allocates after the new index)140 334 R(has been allocated.)140
346 Q 2.163(This function will r)140 364 R(eturn)-.18 E F2(-1)4.663 E F1
2.163(when ther)4.663 F 4.663(ei)-.18 G 4.663(sa)-4.663 G 4.664(ne)
-4.663 G(rr)-4.664 E 2.164(or allocating the new)-.18 F(index.)140 376 Q
(The)90 400 Q F2 -3.388(ScrnInfoRec privates)2.612 F F1 .112
(data persists for the life of the server)2.612 F 2.612(,s)-.74 G 2.612
(oo)-2.612 G .112(nly needs to be allocated)-2.612 F 2.724(once. This)90
412 R .224(should be done fr)2.724 F .224(om the)-.18 F F2
(ChipPreInit\(\))2.724 E F1 .225
(function, and Init functions for other mod-)2.724 F .318
(ules that it calls.)90 424 R .317
(Data allocated in this way should be fr)5.318 F .317
(eed by the driver's)-.18 F F2(ChipFreeScreen\(\))2.817 E F1 .4
(functions, and Fr)90 436 R .4
(ee functions for other modules that it calls.)-.18 F 2.9(An)5.4 G(ew)
-2.9 E F2(privates)2.9 E F1 .4(entry is allocated)2.9 F(by calling the)
90 448 Q F2(xf86AllocateScrnInfoPrivateIndex\(\))2.5 E F1(function.)2.5
E F2(int xf86AllocateScrnInfoPrivateIndex\(\))115 472 Q F1 1.754
(This function allocates a new element in the)140 496 R F2(privates)
4.253 E F1 1.753(\214eld of all cur)4.253 F(-)-.18 E -.18(re)140 508 S
.747(ntly existing).18 F F2(ScrnInfoRecs)3.247 E F1 5.747(.T)C .747
(he r)-5.747 F .747(eturn value is the index of this new)-.18 F 1.827
(element in the)140 520 R F2(privates)4.327 E F1 4.326(array. The)4.327
F F2(privates)4.326 E F1 1.826(\214eld is of type)4.326 F F2(DevU-)4.326
E(nion)140 532 Q F1(:)A F3(typedef union _DevUnion {)198.4 548 Q 57.6
(pointer ptr;)217.6 558 R 72(long val;)217.6 568 R(unsigned long)217.6
578 Q(uval;)33.6 E 57.6(pointer \(*fptr\)\(void\);)217.6 588 R 4.8(}D)
198.4 598 S(evUnion;)-4.8 E F1 .409
(which allows the element to be used for any of the above types.)140 626
R .409(It is com-)5.409 F .111(monly used as a pointer to data that the\
 caller allocates after the new index)140 638 R(has been allocated.)140
650 Q 1.951(This function will not r)140 668 R 1.952(eturn when ther)
-.18 F 4.452(ei)-.18 G 4.452(sa)-4.452 G 4.452(ne)-4.452 G(rr)-4.452 E
1.952(or allocating the new)-.18 F 3.654(index. When)140 680 R(ther)
3.654 E 3.654(ei)-.18 G 3.654(sa)-3.654 G 3.654(ne)-3.654 G(rr)-3.654 E
1.154(or it will cause the server to exit with a fatal)-.18 F(err)140
692 Q 5.8(or. The)-.18 F 3.3
(similar function for allocation privates in the)5.8 F F2(ScreenRec)5.8
E F1(\()140 704 Q F2(AllocateScreenPrivateIndex\(\))A F1 3.267(\)d)C(if)
-3.267 E .767(fers in this r)-.18 F .766(espect by r)-.18 F(eturning)
-.18 E F2(-1)140 716 Q F1(when the allocation fails.)2.5 E 0 Cg EP
%%Page: 22 22
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(XFree86\256 serv)90 48 Q
(er 4.x Design \(DRAFT\))-.15 E(22)264.86 E/F1 16/Helvetica-Bold@0 SF
4.448(9. K)90 102 R(eeping T)-.24 E(rac)-1.28 E 4.448(ko)-.32 G 4.448
(fB)-4.448 G(us Resour)-4.448 E(ces)-.32 E/F2 14/Helvetica-Bold@0 SF
3.892(9.1 Theor)90 124 R 3.892(yo).14 G 3.892(fO)-3.892 G(peration)
-3.892 E/F3 10/Palatino-Roman@0 SF .81(The XFr)90 142 R .811
(ee86 common layer has knowledge of generic access contr)-.18 F .811
(ol mechanisms for devices on)-.18 F .939(certain bus systems \(curr)90
154 R .938(ently the PCI bus\) as well as of methods to enable or disab\
le access to)-.18 F 1.483(the buses itself.)90 166 R(Furthermor)6.483 E
3.983(ei)-.18 G 3.983(tc)-3.983 G 1.483(an access information on r)
-3.983 F(esour)-.18 E 1.483(ces decoded by these devices)-.18 F
(and if necessary modify it.)90 178 Q .831(When \214rst starting the Xs\
erver collects all this information, saves it for r)90 196 R .83
(estoration, checks it for)-.18 F(consistency)90 208 Q 2.575(,a)-1.11 G
.075(nd if necessary)-2.575 F 2.575(,c)-1.11 G(orr)-2.575 E .075
(ects it.)-.18 F .076(Finally it disables all r)5.075 F(esour)-.18 E
.076(ces on a generic level prior to)-.18 F
(calling any driver function.)90 220 Q .696(When the)90 238 R/F4 10
/Courier@0 SF(Probe\(\))3.196 E F3 .695
(function of each driver is called the device sections ar)3.196 F 3.195
(em)-.18 G .695(atched against the)-3.195 F .266
(devices found in the system.)90 250 R .267(The driver may pr)5.267 F
.267(obe devices at this stage that cannot be identi\214ed)-.18 F .61
(by using device independent methods.)90 262 R .61(Access to all r)5.61
F(esour)-.18 E .61(ces that can be contr)-.18 F .61(olled in a device)
-.18 F 4.336(independent way is disabled.)90 274 R(The)9.336 E F4
(Probe\(\))6.836 E F3 4.336(function should r)6.836 F 4.336
(egister all non-r)-.18 F(elocatable)-.18 E -.18(re)90 286 S(sour).18 E
.484(ces at this stage.)-.18 F .484(If a r)5.484 F(esour)-.18 E .484
(ce con\215ict is found between exclusive r)-.18 F(esour)-.18 E .484
(ces the driver will)-.18 F .511(fail immediately.)90 298 R .511
(Optionally the driver might specify an)5.511 F F4(EntityInit\(\))3.011
E F3(,)A F4(EntityLeave\(\))3.011 E F3(and)3.011 E F4(EntityEnter\(\))90
310 Q F3(function.)2.5 E F4(EntityInit\(\))90 328 Q F3 .021
(can be used to disable any shar)2.521 F .021(ed r)-.18 F(esour)-.18 E
.021(ces that ar)-.18 F 2.52(en)-.18 G .02(ot contr)-2.52 F .02
(olled by the generic)-.18 F .814(access contr)90 340 R .814
(ol functions.)-.18 F .814(It is called prior to the Pr)5.814 F .814
(eInit phase r)-.18 F(egar)-.18 E .814(dless if an entity is active or)
-.18 F 4.445(not. When)90 352 R 1.945(calling the)4.445 F F4
(EntityInit\(\))4.445 E F3(,)A F4(EntityEnter\(\))4.444 E F3(and)4.444 E
F4(EntityLeave\(\))4.444 E F3 1.944(functions the)4.444 F .627(common l\
evel will disable access to all other entities on a generic level.)90
364 R .628(Since the common level)5.628 F .757
(has no knowledge of device speci\214c methods to disable access to r)90
376 R(esour)-.18 E .757(ces it cannot be guaran-)-.18 F 2.181
(teed that certain r)90 388 R(esour)-.18 E 2.181(ces ar)-.18 F 4.681(en)
-.18 G 2.182(ot decoded by any other entity until the)-4.681 F F4
(EntityInit\(\))4.682 E F3(or)4.682 E F4(EntityEnter\(\))90 400 Q F3
1.027(phase is \214nished.)3.527 F 1.026(Device drivers should ther)
6.027 F(efor)-.18 E 3.526(er)-.18 G 1.026(egister all those r)-3.706 F
(esour)-.18 E(ces)-.18 E .991(which they ar)90 412 R 3.491(eg)-.18 G
.991(oing to disable.)-3.491 F .992(If these r)5.992 F(esour)-.18 E .992
(ces ar)-.18 F 3.492(en)-.18 G .992
(ever to be used by any driver function)-3.492 F .18
(they may be \215agged)90 424 R F4(ResInit)2.68 E F3 .179
(so that they can be r)2.68 F .179(emoved fr)-.18 F .179(om the r)-.18 F
(esour)-.18 E .179(ce list after pr)-.18 F(ocessing)-.18 E(all)90 436 Q
F4(EntityInit\(\))3.314 E F3(functions.)3.314 E F4(EntityEnter\(\))5.814
E F3 .814(should disable decoding of all r)3.314 F(esour)-.18 E .814
(ces which)-.18 F(ar)90 448 Q 3.922(en)-.18 G 1.422(ot r)-3.922 F
(egister)-.18 E 1.421(ed as exclusive and which ar)-.18 F 3.921(en)-.18
G 1.421(ot handled by the generic access contr)-3.921 F 1.421(ol in the)
-.18 F .446(common level.)90 460 R .446(The dif)5.446 F(fer)-.18 E .446
(ence to)-.18 F F4(EntityInit\(\))2.946 E F3 .447
(is that the latter one is only called once during)2.947 F 1.315
(lifetime of the server.)90 472 R 1.315(It can ther)6.315 F(efor)-.18 E
3.814(eb)-.18 G 3.814(eu)-3.814 G 1.314
(sed to set up variables prior to disabling r)-3.814 F(esour)-.18 E
(ces.)-.18 E F4(EntityLeave\(\))90 484 Q F3 .777(should r)3.277 F(estor)
-.18 E 3.277(et)-.18 G .777
(he original state when exiting the server or switching to a dif-)-3.277
F(fer)90 496 Q .592(ent VT.)-.18 F .592(It also needs to disable device\
 speci\214c access functions if they need to be disabled on)5.592 F
(server exit or VT switch.)90 508 Q
(The default state is to enable them befor)5 E 2.5(eg)-.18 G
(iving up the VT.)-2.5 E(In)90 526 Q F4(PreInit\(\))3.066 E F3 .566
(phase each driver should check if any sharable r)3.066 F(esour)-.18 E
.567(ces it has r)-.18 F(egister)-.18 E .567(ed during)-.18 F F4
(Probe\(\))90 538 Q F3 .583(has been denied and take appr)3.084 F .583
(opriate action which could simply be to fail.)-.18 F .583(If it needs)
5.583 F .077(to access r)90 550 R(esour)-.18 E .077
(ces it has disabled during)-.18 F F4(EntitySetup\(\))2.577 E F3 .077
(it can do so pr)2.577 F .078(ovided it has r)-.18 F(egister)-.18 E(ed)
-.18 E 1.753(these and will disable them befor)90 562 R 4.253(er)-.18 G
1.753(eturning fr)-4.433 F(om)-.18 E F4(PreInit\(\))4.253 E F3 6.753(.T)
C 1.753(his also applies to all other)-6.753 F .098(driver functions.)90
574 R .098(Several functions ar)5.098 F 2.598(ep)-.18 G -.18(ro)-2.598 G
.098(vided to r).18 F .098(equest r)-.18 F(esour)-.18 E .099
(ce ranges, r)-.18 F .099(egister these, corr)-.18 F(ect)-.18 E 2.455
(PCI con\214g space and add r)90 586 R 2.455
(eplacements for the generic access functions.)-.18 F(Resour)7.454 E
2.454(ces may be)-.18 F .655(marked `)90 598 R .655(`disabled'' or `)
-.37 F .656(`unused'' during OPERA)-.37 F .656(TING stage.)-.74 F .656
(Although these steps could also be)5.656 F(performed in)90 610 Q F4
(ScreenInit\(\))2.5 E F3 2.5(,t)C(his is not desirable.)-2.5 E
(Following)90 628 Q F4(PreInit\(\))3.342 E F3 .842
(phase the common level determines if r)3.342 F(esour)-.18 E .841
(ce access contr)-.18 F .841(ol is needed.)-.18 F .279
(This is the case if mor)90 640 R 2.779(et)-.18 G .279(han one scr)
-2.779 F .279(een is used.)-.18 F .279
(If necessary the RAC wrapper module is loaded.)5.279 F(In)90 652 Q F4
(ScreenInit\(\))2.642 E F3 .141
(the drivers can decide which operations need to be placed under RAC.)
2.642 F -.92(Av)5.141 G(ail-).92 E 1.143(able ar)90 664 R 3.643(et)-.18
G 1.144(he frame buf)-3.643 F 1.144
(fer operations, the pointer operations and the colormap operations.)
-.18 F(Any)6.144 E .996(operation that r)90 676 R(equir)-.18 E .996
(es r)-.18 F(esour)-.18 E .996(ces which might be disabled during OPERA)
-.18 F .995(TING state should be)-.74 F(set to use RAC.)90 688 Q
(This can be speci\214ed separately for memory and IO r)5 E(esour)-.18 E
(ces.)-.18 E(When)90 706 Q F4(ScreenInit\(\))3.642 E F3 1.143
(phase is done the common level will determine which shar)3.642 F 1.143
(ed r)-.18 F(esour)-.18 E(ces)-.18 E(ar)90 718 Q 2.863(er)-.18 G .363
(equested by mor)-3.043 F 2.863(et)-.18 G .363
(han one driver and set the access functions accor)-2.863 F 2.862
(dingly. This)-.18 F .362(is done fol-)2.862 F(lowing these r)90 730 Q
(ules:)-.08 E 0 Cg EP
%%Page: 23 23
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(XFree86\256 serv)90 48 Q
(er 4.x Design \(DRAFT\))-.15 E(23)264.86 E/F1 10/Palatino-Roman@0 SF
7.5(1. The)102.5 96 R .781(sharable r)3.281 F(esour)-.18 E .781(ces r)
-.18 F(egister)-.18 E .781(ed by each entity ar)-.18 F 3.282(ec)-.18 G
(ompar)-3.282 E 3.282(ed. If)-.18 F 3.282(ar)3.282 G(esour)-3.462 E .782
(ce is r)-.18 F(egister)-.18 E(ed)-.18 E .448(by mor)120 108 R 2.948(et)
-.18 G .448(han one entity the entity will be marked to need to shar)
-2.948 F 2.947(et)-.18 G .447(his r)-2.947 F(esour)-.18 E .447
(ces type \()-.18 F/F2 10/Courier@0 SF(IO)A F1(or)120 120 Q F2(MEM)2.5 E
F1(\).)A 7.5(2. A)102.5 138 R -.18(re)2.5 G(sour).18 E(ce marked `)-.18
E(`disabled'' during OPERA)-.37 E(TING state will be ignor)-.74 E
(ed entir)-.18 E(ely.)-.18 E 7.5(3. A)102.5 156 R -.18(re)3.08 G(sour)
.18 E .58(ce marked `)-.18 F .581
(`unused'' will only con\215icts with an overlapping r)-.37 F(esour)-.18
E .581(ce of an other)-.18 F
(entity if the second is actually in use during OPERA)120 168 Q
(TING state.)-.74 E 7.5(4. If)102.5 186 R .822(an `)3.322 F .822
(`unused'' r)-.37 F(esour)-.18 E .822
(ce was found to con\215ict however the entity does not use any other)
-.18 F -.18(re)120 198 S(sour).18 E(ce of this type the entir)-.18 E 2.5
(er)-.18 G(esour)-2.68 E(ce type will be disabled for that entity.)-.18
E(The driver has the choice among dif)90 216 Q(fer)-.18 E
(ent ways to contr)-.18 E(ol access to certain r)-.18 E(esour)-.18 E
(ces:)-.18 E 7.5(1. It)102.5 234 R .603(can r)3.103 F .603
(ely on the generic access functions.)-.18 F .603(This is pr)5.603 F
.604(obably the most common case.)-.18 F(Her)5.604 E(e)-.18 E
(the driver only needs to r)120 246 Q(egister any r)-.18 E(esour)-.18 E
(ce it is going to use.)-.18 E 7.5(2. It)102.5 264 R .117(can r)2.617 F
.117(eplace the generic access functions by driver speci\214c ones.)-.18
F .116(This will mostly be used)5.116 F 1.759(in cases wher)120 276 R
4.259(en)-.18 G 4.259(og)-4.259 G 1.759(eneric access functions ar)
-4.259 F 4.259(ea)-.18 G 4.259(vailable. In)-4.259 F 1.76
(this case the driver has to)4.259 F 1.578(make sur)120 288 R 4.078(et)
-.18 G 1.578(hese r)-4.078 F(esour)-.18 E 1.578(ces ar)-.18 F 4.078(ed)
-.18 G 1.577(isabled when entering the)-4.078 F F2(PreInit\(\))4.077 E
F1 4.077(stage. Since)4.077 F(the)4.077 E -.18(re)120 300 S 1.331
(placement functions ar).18 F 3.831(er)-.18 G(egister)-4.011 E 1.331
(ed in)-.18 F F2(PreInit\(\))3.832 E F1 1.332
(the driver will have to enable these)3.832 F -.18(re)120 312 S(sour).18
E 1.212(ces itself if it needs to access them during this state.)-.18 F
1.212(The driver can specify if the)6.212 F -.18(re)120 324 S
(placement functions can contr).18 E(ol memory and/or I/O r)-.18 E
(esour)-.18 E(ces separately.)-.18 E 7.5(3. The)102.5 342 R .754
(driver can enable r)3.253 F(esour)-.18 E .754
(ces itself when it needs them.)-.18 F .754
(Each driver function enabling)5.754 F .631
(them needs to disable them befor)120 354 R 3.131(ei)-.18 G 3.131(tw)
-3.131 G .631(ill r)-3.131 F 3.131(eturn. This)-.18 F .63
(should be used if a r)3.131 F(esour)-.18 E .63(ce which)-.18 F 1.19
(can be contr)120 366 R 1.19(olled in a device dependent way is only r)
-.18 F(equir)-.18 E 1.19(ed during SETUP state.)-.18 F(This)6.19 E
(way it can be marked `)120 378 Q(`unused'' during OPERA)-.37 E
(TING state.)-.74 E 3.875(Ar)90 396 S(esour)-4.055 E 1.375
(ce which is decoded during OPERA)-.18 F 1.374
(TING state however never accessed by the driver)-.74 F
(should be marked unused.)90 408 Q 3.354
(Since access switching latencies ar)90 426 R 5.854(ea)-.18 G 5.854(ni)
-5.854 G 3.354(ssue during Xserver operation, the common level)-5.854 F
.631(attempts to minimize the number of entities that need to be placed\
 under RAC contr)90 438 R 3.13(ol. When)-.18 F(a)3.13 E .189
(wrapped operation is called, the)90 450 R F2(EnableAccess\(\))2.689 E
F1 .189(function is called befor)2.689 F 2.689(ec)-.18 G(ontr)-2.689 E
.19(ol is passed on.)-.18 F F2(EnableAccess\(\))90 462 Q F1 .359
(checks if a scr)2.859 F .359(een is under access contr)-.18 F 2.859
(ol. If)-.18 F .358(not it just establishes bus r)2.859 F(outing)-.18 E
.323(and r)90 474 R 2.823(eturns. If)-.18 F .324(the scr)2.824 F .324
(een needs to be under access contr)-.18 F(ol,)-.18 E F2
(EnableAccess\(\))2.824 E F1 .324(determines which)2.824 F -.18(re)90
486 S(sour).18 E 1.016(ce types \()-.18 F F2(MEM)A F1(,)A F2(IO)3.516 E
F1 3.516(\)a)C 1.376 -.18(re re)-3.516 H(quir).18 E 3.515(ed. Then)-.18
F 1.015(it tests if this access is alr)3.515 F 1.015(eady established.)
-.18 F 1.015(If so it)6.015 F 1.002(simply r)90 498 R 3.502(eturns. If)
-.18 F 1.002(not it disables the curr)3.502 F 1.002
(ently established access, \214xes bus r)-.18 F 1.003
(outing and enables)-.18 F(access to all entities r)90 510 Q(egister)
-.18 E(ed for this scr)-.18 E(een.)-.18 E 1.153
(Whenever a mode switch or a VT)90 528 R 1.153
(-switch is performed the common level will r)-.55 F 1.152
(eturn to SETUP)-.18 F(state.)90 540 Q/F3 14/Helvetica-Bold@0 SF 3.892
(9.2 Resour)90 562 R(ce T)-.28 E(ypes)-.84 E F1(Resour)90 580 Q 1.453
(ce have certain pr)-.18 F 3.953(operties. When)-.18 F -.18(re)3.953 G
1.453(gistering r).18 F(esour)-.18 E 1.454
(ces each range is accompanied by a)-.18 F .23
(\215ag consisting of the ORed \215ags of the dif)90 592 R(fer)-.18 E
.229(ent pr)-.18 F .229(operties the r)-.18 F(esour)-.18 E .229(ce has.)
-.18 F .229(Each r)5.229 F(esour)-.18 E .229(ce range)-.18 F
(may be classi\214ed accor)90 604 Q(ding to)-.18 E/F4 8/Palatino-Roman@0
SF<83>105.152 622 Q F1(its physical pr)5 E(operties i.e., if it addr)
-.18 E(esses memory \()-.18 E F2(ResMem)A F1 5(\)o)C 2.5(rI)-5 G
(/O space \()-2.5 E F2(ResIo)A F1(\),)A F4<83>105.152 640 Q F1
(if it addr)5 E(esses a block \()-.18 E F2(ResBlock)A F1 2.5(\)o)C 2.5
(rs)-2.5 G(parse \()-2.5 E F2(ResSparse)A F1 2.5(\)r)C(ange,)-2.5 E F4
<83>105.152 658 Q F1(its access pr)5 E(operties.)-.18 E(Ther)90 676 Q
2.5(ea)-.18 G .36 -.18(re t)-2.5 H(wo known access pr).18 E(operties:)
-.18 E F4<83>105.152 694 Q F2(ResExclusive)5 E F1(for r)2.5 E(esour)-.18
E(ces which may not be shar)-.18 E(ed with any other device and)-.18 E
F4<83>105.152 712 Q F2(ResShared)5 E F1(for r)2.5 E(esour)-.18 E
(ces which can be disabled and ther)-.18 E(efor)-.18 E 2.5(ec)-.18 G
(an be shar)-2.5 E(ed.)-.18 E .561(If it is necessary to test a r)90 730
R(esour)-.18 E .562(ce against any type a generic access type)-.18 F F2
(ResAny)3.062 E F1 .562(is pr)3.062 F 3.062(ovided. If)-.18 F .912
(this is set the r)90 742 R(esour)-.18 E .912
(ce will con\215ict with any r)-.18 F(esour)-.18 E .912(ce of a dif)-.18
F(fer)-.18 E .912(ent entity intersecting its range.)-.18 F 0 Cg EP
%%Page: 24 24
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(XFree86\256 serv)90 48 Q
(er 4.x Design \(DRAFT\))-.15 E(24)264.86 E/F1 10/Palatino-Roman@0 SF
2.058(Further it can be speci\214ed that a r)90 96 R(esour)-.18 E 2.059
(ce is decoded however never used during any stage)-.18 F(\()90 108 Q/F2
10/Courier@0 SF(ResUnused)A F1 2.742(\)o)C 2.742(rd)-2.742 G .242
(uring OPERA)-2.742 F .242(TING state \()-.74 F F2(ResUnusedOpr)A F1
2.742(\). A)B -.18(re)2.742 G(sour).18 E .242
(ce only visible during the)-.18 F .55(init functions \(ie.)90 120 R F2
(EntityInit\(\))5.55 E F1(,)A F2(EntityEnter\(\))3.05 E F1(and)3.05 E F2
(EntityLeave\(\))3.05 E F1 .55(should be r)3.05 F(egister)-.18 E(ed)-.18
E .571(with the \215ag)90 132 R F2(ResInit)3.071 E F1 5.571(.A)C -.18
(re)-2.5 G(sour).18 E .571(ce that might con\215ict with backgr)-.18 F
.57(ound r)-.18 F(esour)-.18 E .57(ce ranges may be)-.18 F 3.015
(\215agged with)90 144 R F2(ResBios)5.515 E F1 8.016(.T)C 3.016
(his might be useful when r)-8.016 F 3.016(egistering r)-.18 F(esour)
-.18 E 3.016(ces ranges that wer)-.18 F(e)-.18 E
(assigned by the system Bios.)90 156 Q 4.41(Several pr)90 174 R 4.41
(ede\214ned r)-.18 F(esour)-.18 E 4.409(ce lists ar)-.18 F 6.909(ea)-.18
G 4.409(vailable for VGA and 8514/A r)-6.909 F(esour)-.18 E 4.409
(ces in)-.18 F F2(com-)6.909 E(mon/xf86Resources.h)90 186 Q F1(.)A/F3 14
/Helvetica-Bold@0 SF 3.892(9.3 A)90 208 R -.28(va)-.56 G(ilab).28 E
(le Functions)-.14 E F1(The functions pr)90 226 Q(ovided for r)-.18 E
(esour)-.18 E(ce management ar)-.18 E 2.5(el)-.18 G(isted in their or)
-2.5 E(der of use in the driver.)-.18 E/F4 12/Helvetica-Bold@0 SF 3.336
(9.3.1 Pr)90 246 R(obe Phase)-.24 E F1 1.226
(In this phase each driver detects those r)90 264 R(esour)-.18 E 1.227
(ces it is able to drive, cr)-.18 F 1.227(eates an entity r)-.18 F(ecor)
-.18 E 3.727(df)-.18 G(or)-3.727 E .661(each of them, r)90 276 R .661
(egisters non-r)-.18 F .661(elocatable r)-.18 F(esour)-.18 E .661
(ces and allocates scr)-.18 F .661(eens and adds the r)-.18 F(esour)-.18
E .66(ces to)-.18 F(scr)90 288 Q(eens.)-.18 E -.9(Tw)90 306 S 4.26(oh).9
G 1.76(elper functions ar)-4.26 F 4.26(ep)-.18 G -.18(ro)-4.26 G 1.76
(vided for matching device sections in the XF86Con\214g \214le to the)
.18 F(devices:)90 318 Q F2 .8
(int xf86MatchPciInstances\(const char *driverName, int vendorID,)115
342 R(SymTabPtr chipsets, PciChipsets *PCIchipsets,)175 366 Q
(GDevPtr *devList, int numDevs, DriverPtr drvp,)175 390 Q
(int **foundEntities\))175 414 Q F1 .592
(This function \214nds matches between PCI car)140 438 R .593
(ds that a driver supports and)-.18 F 2.253
(con\214g \214le device sections.)140 450 R 2.253
(It is intended for use in the)7.253 F F2(ChipProbe\(\))4.752 E F1 .531
(function of drivers for PCI car)140 462 R 3.032(ds. Only)-.18 F(pr)
3.032 E .532(obed PCI devices with a vendor)-.18 F .688(ID matching)140
474 R F2(vendorID)3.188 E F1(ar)3.188 E 3.188(ec)-.18 G(onsider)-3.188 E
(ed.)-.18 E F2(devList)5.688 E F1(and)3.188 E F2(numDevs)3.188 E F1(ar)
3.187 E 3.187(et)-.18 G(ypi-)-3.187 E 1.672(cally those found fr)140 486
R 1.672(om calling)-.18 F F2(xf86MatchDevice\(\))4.173 E F1 4.173(,a)C
1.673(nd r)-4.173 F(epr)-.18 E 1.673(esent the)-.18 F .403
(active con\214g \214le device sections r)140 498 R .403
(elevant to the driver.)-.18 F F2(PCIchipsets)5.402 E F1 .402(is a)2.902
F 1.737(table that pr)140 510 R 1.737
(ovides a mapping between the PCI device IDs, the driver's)-.18 F
(internal chipset tokens and a list of \214xed r)140 522 Q(esour)-.18 E
(ces.)-.18 E 1.117(When a device section doesn't have a)140 540 R/F5 10
/Palatino-Bold@0 SF(BusID)3.617 E F1 1.117(entry it can only match the)
3.617 F 1.643(primary video device.)140 552 R 1.643
(Secondary devices ar)6.643 F 4.143(eo)-.18 G 1.644
(nly matched with device)-4.143 F(sections that have a matching)140 564
Q F5(BusID)2.5 E F1(entry.)2.5 E .247(Once the pr)140 582 R .246
(eliminary matches have been found, a \214nal match is con\214rmed)-.18
F .253(by checking if the chipset override, ChipID override or pr)140
594 R .253(obed PCI chipset)-.18 F .98
(type match one of those given in the)140 606 R F2(chipsets)3.48 E F1
(and)3.48 E F2(PCIchipsets)3.48 E F1(lists.)3.48 E(The)140 618 Q F2
(PCIchipsets)3.351 E F1 .852
(list includes a list of the PCI device IDs supported by)3.351 F .994
(the driver.)140 630 R .994
(The list should be terminated with an entry with PCI ID)5.994 F F2(-1)
3.493 E F1(".)A(The)140 642 Q F2(chipsets)3.35 E F1 .85
(list is a table mapping the driver's internal chipset tokens)3.35 F
.198(to names, and should be terminated with a)140 654 R F2(NULL)2.697 E
F1 2.697(entry. Only)2.697 F .197(those entries)2.697 F .829
(with a corr)140 666 R .829(esponding entry in the)-.18 F F2
(PCIchipsets)3.329 E F1 .829(list ar)3.329 F 3.329(ec)-.18 G(onsider)
-3.329 E 3.329(ed. The)-.18 F(or)140 678 Q 1.136(der of pr)-.18 F 1.135
(ecedence is: con\214g \214le chipset, con\214g \214le ChipID, pr)-.18 F
1.135(obed PCI)-.18 F(device ID.)140 690 Q 1.033(In cases wher)140 708 R
3.533(ead)-.18 G 1.033(river handles PCI chipsets with mor)-3.533 F
3.534(et)-.18 G 1.034(han one vendor)-3.534 F .194(ID, it may set)140
720 R F2(vendorID)2.694 E F1(to)2.694 E F2(0)2.694 E F1 2.694(,a)C .194
(nd OR each devID in the list with \(the ven-)-2.694 F(dor ID << 16\).)
140 732 Q 0 Cg EP
%%Page: 25 25
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(XFree86\256 serv)90 48 Q
(er 4.x Design \(DRAFT\))-.15 E(25)264.86 E/F1 10/Palatino-Roman@0 SF
.897(Entity index numbers for con\214rmed matches ar)140 96 R 3.397(er)
-.18 G .898(eturned as an array via)-3.577 F/F2 10/Courier@0 SF
(foundEntities)140 108 Q F1 5.952(.T)C .951
(he PCI information, chipset token and device section)-5.952 F 3.459
(for each match ar)140 120 R 5.959(ef)-.18 G 3.459(ound in the)-5.959 F
F2(EntityInfoRec)5.959 E F1 -.18(re)5.959 G(fer).18 E 3.459
(enced by the)-.18 F(indices.)140 132 Q 1.064(The function r)140 150 R
1.064(eturn value is the number of con\214rmed matches.)-.18 F 3.563(Ar)
6.063 G(eturn)-3.743 E 2.154(value of)140 162 R F2(-1)4.654 E F1 2.154
(indicates an internal err)4.654 F 4.655(or. The)-.18 F -.18(re)4.655 G
(turned).18 E F2(foundEntities)4.655 E F1 1.527(array should be fr)140
174 R 1.527(eed by the driver with)-.18 F F2(xfree\(\))4.027 E F1 1.527
(when it is no longer)4.027 F(needed in cases wher)140 186 Q 2.5(et)-.18
G(he r)-2.5 E(eturn value is gr)-.18 E(eater than zer)-.18 E(o.)-.18 E
F2(int xf86MatchIsaInstances\(const char *driverName,)115 204 Q
(SymTabPtr chipsets, IsaChipsets *ISAchipsets,)175 228 Q
(DriverPtr drvp, FindIsaDevProc FindIsaDevice,)175 252 Q
(GDevPtr *devList, int numDevs, int **foundEntities\))175 276 Q F1 .602
(This function \214nds matches between ISA car)140 300 R .602
(ds that a driver supports and)-.18 F 2.253
(con\214g \214le device sections.)140 312 R 2.253
(It is intended for use in the)7.253 F F2(ChipProbe\(\))4.752 E F1 1.879
(function of drivers for ISA car)140 324 R(ds.)-.18 E F2(devList)6.879 E
F1(and)4.379 E F2(numDevs)4.379 E F1(ar)4.379 E 4.379(et)-.18 G
(ypically)-4.379 E 1.019(those found fr)140 336 R 1.019(om calling)-.18
F F2(xf86MatchDevice\(\))3.519 E F1 3.519(,a)C 1.019(nd r)-3.519 F(epr)
-.18 E 1.018(esent the active)-.18 F .817
(con\214g \214le device sections r)140 348 R .817
(elevant to the driver.)-.18 F F2(ISAchipsets)5.817 E F1 .818
(is a table)3.318 F .802(that pr)140 360 R .802
(ovides a mapping between the driver's internal chipset tokens and)-.18
F 1.262(the r)140 372 R(esour)-.18 E 1.262(ce classes.)-.18 F F2
(FindIsaDevice)6.262 E F1 1.263(is a driver)3.762 F(-pr)-.18 E 1.263
(ovided function that)-.18 F(pr)140 384 Q .623(obes the har)-.18 F(dwar)
-.18 E 3.123(ea)-.18 G .623(nd r)-3.123 F .623
(eturns the chipset token corr)-.18 F .623(esponding to what)-.18 F
(was detected, and)140 396 Q F2(-1)2.5 E F1(if nothing was detected.)2.5
E .853(If the con\214g \214le device section contains a chipset entry)
140 414 R 3.353(,t)-1.11 G .853(hen it is checked)-3.353 F .16
(against the)140 426 R F2(chipsets)2.66 E F1 2.66(list. When)2.66 F .16
(no chipset entry is pr)2.66 F .16(esent, the)-.18 F F2(FindIs-)2.66 E
(aDevice)140 438 Q F1(function is called instead.)2.5 E .897
(Entity index numbers for con\214rmed matches ar)140 456 R 3.397(er)-.18
G .898(eturned as an array via)-3.577 F F2(foundEntities)140 468 Q F1
5.066(.T)C .066(he chipset token and device section for each match ar)
-5.066 F(e)-.18 E(found in the)140 480 Q F2(EntityInfoRec)2.5 E F1 -.18
(re)2.5 G(fer).18 E(enced by the indices.)-.18 E 1.063(The function r)
140 498 R 1.064(eturn value is the number of con\214rmed matches.)-.18 F
3.564(Ar)6.064 G(eturn)-3.744 E 2.155(value of)140 510 R F2(-1)4.655 E
F1 2.154(indicates an internal err)4.655 F 4.654(or. The)-.18 F -.18(re)
4.654 G(turned).18 E F2(foundEntities)4.654 E F1 1.527
(array should be fr)140 522 R 1.527(eed by the driver with)-.18 F F2
(xfree\(\))4.027 E F1 1.527(when it is no longer)4.027 F
(needed in cases wher)140 534 Q 2.5(et)-.18 G(he r)-2.5 E
(eturn value is gr)-.18 E(eater than zer)-.18 E(o.)-.18 E 1.525
(These two helper functions make use of several cor)90 558 R 4.025(ef)
-.18 G 1.525(unctions that ar)-4.025 F 4.024(ea)-.18 G 1.524
(vailable at the driver)-4.024 F(level:)90 570 Q 0 Cg EP
%%Page: 26 26
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(XFree86\256 serv)90 48 Q
(er 4.x Design \(DRAFT\))-.15 E(26)264.86 E/F1 10/Courier@0 SF
(Bool xf86ParsePciBusString\(const char *busID, int *bus,)115 96 Q
(int *device, int *func\))175 120 Q/F2 10/Palatino-Roman@0 SF -.92(Ta)
140 144 S .146(kes a).92 F F1(BusID)2.646 E F2 .147
(string, and if it is in the corr)2.646 F .147(ect format, r)-.18 F .147
(eturns the PCI)-.18 F F1(bus)2.647 E F2(,)A F1(device)140 156 Q F2(,)A
F1(func)2.619 E F2 .119(values that it indicates.)2.619 F .118
(The format of the string is expected)5.118 F .102
(to be "PCI:bus:device:func" wher)140 168 R 2.603(ee)-.18 G .103
(ach of `bus', `device' and `func' ar)-2.603 F 2.603(ed)-.18 G(ec-)
-2.603 E 3.491(imal integers.)140 180 R 3.491
(The ":func" part may be omitted, and the func value)8.491 F .979
(assumed to be zer)140 192 R .979(o, but this isn't encouraged.)-.18 F
.979(The "PCI" pr)5.979 F .98(e\214x may also)-.18 F .187(be omitted.)
140 204 R .187(The pr)5.187 F .187(e\214x "AGP" is curr)-.18 F .186
(ently equivalent to the "PCI" pr)-.18 F 2.686(e\214x. If)-.18 F
(the string isn't a valid PCI BusID, the r)140 216 Q(eturn value is)-.18
E F1(FALSE)2.5 E F2(.)A F1
(Bool xf86ComparePciBusString\(const char *busID, int bus,)115 234 Q
(int device, int func\))175 258 Q F2(Compar)140 282 Q 1.726(es a)-.18 F
F1(BusID)4.226 E F2 1.726(string with PCI)4.226 F F1(bus)4.226 E F2(,)A
F1(device)4.226 E F2(,)A F1(func)4.227 E F2 4.227(values. If)4.227 F
(they)4.227 E(match)140 294 Q F1(TRUE)2.5 E F2(is r)2.5 E(eturned, and)
-.18 E F1(FALSE)2.5 E F2(if they don't.)2.5 E F1
(Bool xf86ParseIsaBusString\(const char *busID\))115 312 Q F2(Compar)140
336 Q .955(es a)-.18 F F1(BusID)3.455 E F2 .955
(string with the ISA bus ID string \("ISA" or "ISA:"\).)3.455 F(If)5.954
E(they match)140 348 Q F1(TRUE)2.5 E F2(is r)2.5 E(eturned, and)-.18 E
F1(FALSE)2.5 E F2(if they don't.)2.5 E F1
(Bool xf86CheckPciSlot\(int bus, int device, int func\))115 366 Q F2
2.639(Checks if the PCI slot)140 390 R F1(bus:device:func)5.139 E F2
2.639(has been claimed.)5.139 F 2.639(If so, it)7.639 F -.18(re)140 402
S(turns).18 E F1(FALSE)2.5 E F2 2.5(,a)C(nd otherwise)-2.5 E F1(TRUE)2.5
E F2(.)A F1 2.286
(int xf86ClaimPciSlot\(int bus, int device, int func, DriverPtr)115 420
R(drvp,)115 432 Q(int chipset, GDevPtr dev, Bool active\))175 456 Q F2
2.178(This function is used to claim a PCI slot, allocate the associate\
d entity)140 480 R -.18(re)140 492 S(cor).18 E 3.059(da)-.18 G .559
(nd initialise their data str)-3.059 F(uctur)-.08 E 3.058(es. The)-.18 F
-.18(re)3.058 G .558(turn value is the index of).18 F 1.601
(the newly allocated entity r)140 504 R(ecor)-.18 E 1.602(d, or)-.18 F
F1(-1)4.102 E F2 1.602(if the claim fails.)4.102 F 1.602(This function)
6.602 F 1.522(should always succeed if)140 516 R F1
(xf86CheckPciSlot\(\))4.021 E F2 -.18(re)4.021 G(turned).18 E F1(TRUE)
4.021 E F2 1.521(for the)4.021 F(same PCI slot.)140 528 Q F1
(Bool xf86IsPrimaryPci\(void\))115 546 Q F2 .389(This function r)140 570
R(eturns)-.18 E F1(TRUE)2.889 E F2 .389(if the primary car)2.889 F 2.889
(di)-.18 G 2.889(saP)-2.889 G .39(CI device, and)-2.889 F F1(FALSE)2.89
E F2(otherwise.)140 582 Q F1
(int xf86ClaimIsaSlot\(DriverPtr drvp, int chipset,)115 600 Q
(GDevPtr dev, Bool active\))175 624 Q F2 .321
(This allocates an entity r)140 648 R(ecor)-.18 E 2.821(de)-.18 G .321
(ntity and initialise the data str)-2.821 F(uctur)-.08 E 2.82(es. The)
-.18 F -.18(re)140 660 S
(turn value is the index of the newly allocated entity r).18 E(ecor)-.18
E(d.)-.18 E F1(Bool xf86IsPrimaryIsa\(void\))115 678 Q F2 .431
(This function r)140 702 R(eturns)-.18 E F1(TRUE)2.931 E F2 .432
(if the primary car)2.931 F 2.932(di)-.18 G 2.932(sa)-2.932 G 2.932(nI)
-2.932 G .432(SA \(non-PCI\) device,)-2.932 F(and)140 714 Q F1(FALSE)2.5
E F2(otherwise.)2.5 E -.9(Tw)90 738 S 2.5(oh).9 G(elper functions ar)
-2.5 E 2.5(ep)-.18 G -.18(ro)-2.5 G
(vided to aid con\214guring entities:).18 E 0 Cg EP
%%Page: 27 27
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(XFree86\256 serv)90 48 Q
(er 4.x Design \(DRAFT\))-.15 E(27)264.86 E/F1 10/Courier@0 SF
(ScrnInfoPtr xf86ConfigPciEntity\(ScrnInfoPtr pScrn,)115 96 Q
(int scrnFlag, int entityIndex,)175 120 Q(PciChipsets *p_chip,)175 144 Q
(resList res, EntityProc init,)175 168 Q
(EntityProc enter, EntityProc leave,)175 192 Q(pointer private\))175 216
Q(ScrnInfoPtr xf86ConfigIsaEntity\(ScrnInfoPtr pScrn,)115 234 Q
(int scrnFlag, int entityIndex,)175 258 Q(IsaChipsets *i_chip,)175 282 Q
(resList res, EntityProc init,)175 306 Q
(EntityProc enter, EntityProc leave,)175 330 Q(pointer private\))175 354
Q/F2 10/Palatino-Roman@0 SF 1.595(These functions ar)140 378 R 4.095(eu)
-.18 G 1.595(sed to r)-4.095 F 1.595(egister the non-r)-.18 F 1.595
(elocatable r)-.18 F(esour)-.18 E 1.595(ces for an)-.18 F(entity)140 390
Q 3.147(,a)-1.11 G .648(nd the optional entity-speci\214c)-3.147 F F1
(Init)3.148 E F2(,)A F1(Enter)3.148 E F2(and)3.148 E F1(Leave)3.148 E F2
(functions.)3.148 E 2.124(Usually the list of \214xed r)140 402 R(esour)
-.18 E 2.124(ces is obtained fr)-.18 F 2.124(om the Isa/PciChipsets)-.18
F 3.973(lists. However)140 414 R 1.473(an additional list of r)3.973 F
(esour)-.18 E 1.473(ces may be passed.)-.18 F(Generally)6.473 E .848
(this is not r)140 426 R(equir)-.18 E 3.348(ed. For)-.18 F .848
(active entities a)3.348 F F1(ScrnInfoRec)3.347 E F2 .847
(is allocated if the)3.347 F F1(pScrn)140 438 Q F2(ar)2.881 E .381
(gument is)-.18 F F1(NULL)2.882 E F2 5.382(.T)C .382(he r)-5.382 F .382
(eturn value is)-.18 F F1(TRUE)2.882 E F2 .382(when successful.)2.882 F
(The)5.382 E(init, enter)140 450 Q 2.5(,l)-.74 G(eave functions ar)-2.5
E 2.5(ed)-.18 G(e\214ned as follows:)-2.5 E F1
(typedef void \(*EntityProc\)\(int entityIndex,)165 468 Q
(pointer private\))225 492 Q F2 1.336(They ar)140 510 R 3.836(ep)-.18 G
1.335(assed the entity index and a pointer to a private scratch ar)
-3.836 F(ea.)-.18 E 2.447(This can be set up during)140 522 R F1
(Probe\(\))4.948 E F2 2.448(and its addr)4.948 F 2.448
(ess can be passed to)-.18 F F1(xf86ConfigIsaEntity\(\))140 534 Q F2
(and)4.91 E F1(xf86ConfigPciEntity\(\))4.91 E F2 2.41(as the last)4.91 F
(ar)140 546 Q(gument.)-.18 E 1.524
(These two helper functions make use of several cor)90 570 R 4.025(ef)
-.18 G 1.525(unctions that ar)-4.025 F 4.025(ea)-.18 G 1.525
(vailable at the driver)-4.025 F(level:)90 582 Q 0 Cg EP
%%Page: 28 28
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(XFree86\256 serv)90 48 Q
(er 4.x Design \(DRAFT\))-.15 E(28)264.86 E/F1 10/Courier@0 SF
(void xf86ClaimFixedResources\(resList list, int entityIndex\))115 96 Q
/F2 10/Palatino-Roman@0 SF .899(This function r)140 120 R .899
(egisters the non-r)-.18 F .899(elocatable r)-.18 F(esour)-.18 E .899
(ces which cannot be dis-)-.18 F 1.501(abled and which ther)140 132 R
(efor)-.18 E 4.002(ew)-.18 G 1.502
(ould cause the server to fail immediately if)-4.002 F 1.583(they wer)
140 144 R 4.083(ef)-.18 G 1.583(ound to con\215ict.)-4.083 F 1.583
(It also r)6.583 F(ecor)-.18 E 1.583(ds non-r)-.18 F 1.583
(elocatable but sharable)-.18 F -.18(re)140 156 S(sour).18 E(ces for pr)
-.18 E(ocessing after the)-.18 E F1(Probe\(\))2.5 E F2(phase.)2.5 E F1
(Bool xf86SetEntityFuncs\(int entityIndex, EntityProc init,)115 174 Q
(EntityProc enter, EntityProc leave, pointer\))175 198 Q F2 1.239
(This function r)140 222 R 1.239(egisters with an entity the)-.18 F F1
(init)3.739 E F2(,)A F1(enter)3.739 E F2(,)A F1(leave)3.739 E F2
(functions)3.739 E(along with the pointer to their private ar)140 234 Q
(ea.)-.18 E F1
(void xf86AddEntityToScreen\(ScrnInfoPtr pScrn, int entityIndex\))115
252 Q F2 1.399(This function associates the entity r)140 276 R(efer)-.18
E 1.399(enced by)-.18 F F1(entityIndex)3.899 E F2 1.398(with the)3.899 F
(scr)140 288 Q(een.)-.18 E/F3 12/Helvetica-Bold@0 SF 3.336
(9.3.2 PreInit)90 314 R(Phase)3.336 E F2 3.625(During this phase the r)
90 332 R 3.625(emaining r)-.18 F(esour)-.18 E 3.626(ces should be r)-.18
F(egister)-.18 E(ed.)-.18 E F1(PreInit\(\))8.626 E F2 3.626(should call)
6.126 F F1(xf86GetEntityInfo\(\))90 344 Q F2 .922
(to obtain a pointer to an)3.422 F F1(EntityInfoRec)3.421 E F2 .921
(for each entity it is able to)3.421 F 1.006(drive and check if any r)90
356 R(esour)-.18 E 1.006(ce ar)-.18 F 3.506(el)-.18 G 1.006
(isted in its)-3.506 F F1(resources)3.506 E F2 3.506(\214eld. If)3.506 F
-.18(re)3.507 G(sour).18 E 1.007(ces r)-.18 F(egister)-.18 E 1.007
(ed in the)-.18 F(Pr)90 368 Q 2.071(obe phase have been r)-.18 F 2.071
(ejected in the post-Pr)-.18 F 2.071(obe phase \()-.18 F F1(resources)A
F2 2.07(is non-)4.571 F F1(NULL)A F2 2.07(\), then the)B(driver should \
decide if it can continue without using these or if it should fail.)90
380 Q F1(EntityInfoPtr xf86GetEntityInfo\(int entityIndex\))115 404 Q F2
2.91(This function r)140 428 R 2.91(eturns a pointer to the)-.18 F F1
(EntityInfoRec)5.41 E F2 -.18(re)5.41 G(fer).18 E 2.91(enced by)-.18 F
F1(entityIndex)140 440 Q F2 8.748(.T)C 3.747(he r)-8.748 F(eturned)-.18
E F1(EntityInfoRec)6.247 E F2 3.747(should be fr)6.247 F 3.747(eed with)
-.18 F F1(xfree\(\))140 452 Q F2(when no longer needed.)2.5 E
(Several functions ar)90 488 Q 2.5(ep)-.18 G -.18(ro)-2.5 G
(vided to simplify r).18 E(esour)-.18 E(ce r)-.18 E(egistration:)-.18 E
F1(Bool xf86IsEntityPrimary\(int entityIndex\))115 512 Q F2 .204
(This function r)140 536 R(eturns)-.18 E F1(TRUE)2.704 E F2 .205
(if the entity r)2.704 F(efer)-.18 E .205(enced by)-.18 F F1
(entityIndex)2.705 E F2 .205(is the)2.705 F 1.461(primary display devic\
e \(i.e., the one initialised at boot time and used in)140 548 R
(text mode\).)140 560 Q F1(Bool xf86IsScreenPrimary\(int scrnIndex\))115
578 Q F2 2.291(This function r)140 596 R(eturns)-.18 E F1(TRUE)4.792 E
F2 2.292(if the primary entity is r)4.792 F(egister)-.18 E 2.292
(ed with the)-.18 F(scr)140 608 Q(een r)-.18 E(efer)-.18 E(enced by)-.18
E F1(scrnIndex)2.5 E F2(.)A F1
(pciVideoPtr xf86GetPciInfoForEntity\(int entityIndex\))115 626 Q F2
2.723(This function r)140 650 R 2.723(eturns a pointer to the)-.18 F F1
(pciVideoRec)5.223 E F2 2.723(for the speci\214ed)5.223 F 2.5
(entity. If)140 662 R(the entity is not a PCI device,)2.5 E F1(NULL)2.5
E F2(is r)2.5 E(eturned.)-.18 E(The primary function for r)90 686 Q
(egistration of r)-.18 E(esour)-.18 E(ces is:)-.18 E 0 Cg EP
%%Page: 29 29
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(XFree86\256 serv)90 48 Q
(er 4.x Design \(DRAFT\))-.15 E(29)264.86 E/F1 10/Courier@0 SF
(resPtr xf86RegisterResources\(int entityIndex, resList list,)115 96 Q
(int access\))175 120 Q/F2 10/Palatino-Roman@0 SF .719
(This function tries to r)140 144 R .719(egister the r)-.18 F(esour)-.18
E .719(ces in)-.18 F F1(list)3.219 E F2 5.719(.I)C 3.219(fl)-5.719 G .72
(ist is)-3.219 F F1(NULL)3.22 E F2 .72(it tries)3.22 F .36
(to determine the r)140 156 R(esour)-.18 E .36(ces automatically.)-.18 F
.36(This only works for entities that)5.36 F(pr)140 168 Q .45
(ovide a generic way to r)-.18 F .451(ead out the r)-.18 F(esour)-.18 E
.451(ce ranges they decode.)-.18 F .451(So far)5.451 F .086
(this is only the case for PCI devices.)140 180 R .086
(By default the PCI r)5.086 F(esour)-.18 E .085(ces ar)-.18 F 2.585(er)
-.18 G(egis-)-2.765 E(ter)140 192 Q 1.202(ed as shar)-.18 F 1.202(ed \()
-.18 F F1(ResShared)A F2 3.702(\)i)C 3.702(ft)-3.702 G 1.203
(he driver wants to set a dif)-3.702 F(fer)-.18 E 1.203(ent access)-.18
F 1.129(type it can do so by specifying the access \215ags in the thir)
140 204 R 3.629(da)-.18 G -.18(rg)-3.629 G 3.629(ument. A).18 F .352
(value of)140 216 R F1(0)2.852 E F2 .352
(means to use the default settings.)2.852 F .352(If for any r)5.352 F
.353(eason the r)-.18 F(esour)-.18 E(ce)-.18 E(br)140 228 Q .767
(oker is not able to r)-.18 F .767(egister some of the r)-.18 F .766
(equested r)-.18 F(esour)-.18 E .766(ces the function)-.18 F .346
(will r)140 240 R .346(eturn a pointer to a list of the failed ones.)
-.18 F .347(In this case the driver may)5.346 F .274
(be able to move the r)140 252 R(esour)-.18 E .274(ce to dif)-.18 F(fer)
-.18 E .274(ent locations.)-.18 F .273(In case of PCI bus enti-)5.273 F
1.591(ties this is done by passing the list of failed r)140 264 R(esour)
-.18 E 1.591(ces to)-.18 F F1(xf86Reallo-)4.091 E(catePciResources\(\))
140 276 Q F2 5.403(.W)C .403(hen the r)-5.403 F .403
(egistration succeeds, the r)-.18 F .402(eturn value)-.18 F(is)140 288 Q
F1(NULL)2.5 E F2(.)A F1
(resPtr xf86ReallocatePciResources\(int entityIndex, resPtr pRes\))115
306 Q F2 .929(This function takes a list of PCI r)140 330 R(esour)-.18 E
.929(ces that need to be r)-.18 F .93(eallocated and)-.18 F -.18(re)140
342 S(turns).18 E F1(NULL)5.606 E F2 3.106(when all r)5.606 F 3.106
(elocations ar)-.18 F 5.605(es)-.18 G(uccessful.)-5.605 E F1
(xf86RegisterRe-)8.105 E(sources\(\))140 354 Q F2 .341
(should be called again to r)2.841 F .341(egister the r)-.18 F .341
(elocated r)-.18 F(esour)-.18 E .341(ces with)-.18 F .445(the br)140 366
R 2.945(oker. If)-.18 F .445(the r)2.945 F .444
(eallocation fails, a list of the r)-.18 F(esour)-.18 E .444
(ces that could not be)-.18 F -.18(re)140 378 S(located is r).18 E
(eturned.)-.18 E -.9(Tw)90 402 S 2.5(of).9 G(unctions ar)-2.5 E 2.5(ep)
-.18 G -.18(ro)-2.5 G(vided to obtain a r).18 E(esour)-.18 E
(ce range of a given type:)-.18 E F1
(resRange xf86GetBlock\(long type, memType size,)115 426 Q
(memType window_start, memType window_end,)175 450 Q
(memType align_mask, resPtr avoid\))175 474 Q F2 .963
(This function tries to \214nd a block range of size)140 498 R F1(size)
3.463 E F2 .964(and type)3.464 F F1(type)3.464 E F2 .964(in a)3.464 F
.869(window bound by)140 510 R F1(window_start)3.369 E F2(and)3.369 E F1
(window_end)3.369 E F2 .868(with the alignment)3.369 F 3.071
(speci\214ed in)140 522 R F1(align_mask)5.571 E F2 8.071(.O)C 3.071
(ptionally a list of r)-8.071 F(esour)-.18 E 3.071(ce ranges which)-.18
F .484(should be avoided within the window can be supplied.)140 534 R
.484(On failur)5.484 F 2.984(eaz)-.18 G(er)-2.984 E(o-)-.18 E
(length range of type)140 546 Q F1(ResEnd)2.5 E F2(will be r)2.5 E
(eturned.)-.18 E F1
(resRange xf86GetSparse\(long type, memType fixed_bits,)115 576 Q
(memType decode_mask, memType address_mask,)175 600 Q(resPtr avoid\))175
624 Q F2 .784(This function is like the pr)140 648 R .784
(evious one, but attempts to \214nd a sparse range)-.18 F 2.778
(instead of a block range.)140 660 R(Her)7.778 E 5.278(et)-.18 G(hr)
-5.278 E 2.777(ee values have to be speci\214ed: the)-.18 F F1
(address_mask)140 672 Q F2 .877
(which marks all bits of the mask part of the addr)3.377 F .878
(ess, the)-.18 F F1(decode_mask)140 684 Q F2 2.225
(which masks out the bits which ar)4.725 F 4.725(eh)-.18 G(ar)-4.725 E
2.225(dcoded and ar)-.18 F(e)-.18 E(ther)140 696 Q(efor)-.18 E 3.295(en)
-.18 G .796(ot available for r)-3.295 F .796
(elocation and the values of the \214xed bits.)-.18 F(The)5.796 E .819
(function tries to \214nd a base that satis\214es the given condition.)
140 708 R .818(If the func-)5.818 F .084(tion fails it will r)140 720 R
.084(eturn a zer)-.18 F 2.584(or)-.18 G .084(ange of type)-2.584 F F1
(ResEnd)2.584 E F2 5.085(.O)C .085(ptionally it might be)-5.085 F
(passed a list of r)140 732 Q(esour)-.18 E(ce ranges to avoid.)-.18 E 0
Cg EP
%%Page: 30 30
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(XFree86\256 serv)90 48 Q
(er 4.x Design \(DRAFT\))-.15 E(30)264.86 E/F1 10/Palatino-Roman@0 SF
.874(Some PCI devices ar)90 96 R 3.373(eb)-.18 G -.18(ro)-3.373 G .873
(ken in the sense that they r).18 F .873
(eturn invalid size information for a certain)-.18 F -.18(re)90 108 S
(sour).18 E 2.593(ce. In)-.18 F .093
(this case the driver can supply the corr)2.593 F .094
(ect size and make sur)-.18 F 2.594(et)-.18 G .094(hat the r)-2.594 F
(esour)-.18 E .094(ce range)-.18 F .705(allocated for the car)90 120 R
3.205(di)-.18 G 3.205(sl)-3.205 G(ar)-3.205 E .705
(ge enough to hold the addr)-.18 F .704(ess range decoded by the car)
-.18 F 3.204(d. The)-.18 F(func-)3.204 E(tion)90 132 Q/F2 10/Courier@0
SF(xf86FixPciResource\(\))2.5 E F1(can be used to do this:)2.5 E F2
(Bool xf86FixPciResource\(int entityIndex, unsigned int prt,)115 156 Q
(CARD32 alignment, long type\))175 180 Q F1 .636
(This function \214xes a PCI r)140 204 R(esour)-.18 E .636
(ce allocation.)-.18 F(The)5.636 E F2(prt)3.136 E F1 .636
(parameter contains)3.136 F .664(the number of the PCI base r)140 216 R
.663(egister that needs to be \214xed \()-.18 F F2(0-5)A F1 3.163(,a)C
(nd)-3.163 E F2(6)3.163 E F1(for)3.163 E .803(the BIOS base r)140 228 R
3.303(egister\). The)-.18 F .803(size is speci\214ed by the alignment.)
3.303 F .804(Since PCI)5.804 F -.18(re)140 240 S(sour).18 E 1.369
(ces need to span an integral range of size)-.18 F F2(2\000n)3.868 E F1
3.868(,t)C 1.368(he alignment also)-3.868 F .203
(speci\214es the number of addr)140 252 R .203
(esses that will be decoded.)-.18 F .204(If the driver speci-)5.204 F
.319(\214es a type mask it can override the default type for PCI r)140
264 R(esour)-.18 E .318(ces which is)-.18 F F2(ResShared)140 276 Q F1
6.098(.T)C 1.098(he r)-6.098 F(esour)-.18 E 1.098(ce br)-.18 F 1.098
(oker needs to know that to \214nd a matching)-.18 F -.18(re)140 288 S
(sour).18 E .184(ce range.)-.18 F .183
(This function should be called befor)5.184 F 2.683(ec)-.18 G(alling)
-2.683 E F2(xf86Regis-)2.683 E(terResources\(\))140 300 Q F1 5.368(.T)C
.369(he r)-5.368 F .369(eturn value is)-.18 F F2(TRUE)2.869 E F1 .369
(when the function succeeds.)2.869 F F2
(Bool xf86CheckPciMemBase\(pciVideoPtr pPci, memType base\))115 318 Q F1
.73(This function checks that the memory base addr)140 342 R .73
(ess speci\214ed matches one)-.18 F 1.296(of the PCI base addr)140 354 R
1.296(ess r)-.18 F 1.296(egister values for the given PCI device.)-.18 F
1.297(This is)6.297 F .191(mostly used to check that an externally pr)
140 366 R .191(ovided base addr)-.18 F .191(ess \(e.g., fr)-.18 F .19
(om a)-.18 F
(con\214g \214le\) matches an actual value allocated to a device.)140
378 Q .893(The driver may r)90 402 R .894
(eplace the generic access contr)-.18 F .894
(ol functions for an entity.)-.18 F .894(This is done with the)5.894 F
F2(xf86SetAccessFuncs\(\))90 414 Q F1(:)A 0 Cg EP
%%Page: 31 31
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(XFree86\256 serv)90 48 Q
(er 4.x Design \(DRAFT\))-.15 E(31)264.86 E/F1 10/Courier@0 SF
(void xf86SetAccessFuncs\(EntityInfoPtr pEnt,)115 96 Q
(xf86SetAccessFuncPtr funcs,)175 120 Q(xf86SetAccessFuncPtr oldFuncs\))
175 144 Q/F2 10/Palatino-Roman@0 SF(with:)140 168 Q/F3 8/Courier@0 SF
(typedef struct {)163.8 184 Q(xf86AccessPtr mem;)183 194 Q
(xf86AccessPtr io;)183 204 Q(xf86AccessPtr io_mem;)183 214 Q 4.8(}x)
163.8 224 S(f86SetAccessFuncRec, *xf86SetAccessFuncPtr;)-4.8 E F2 1.245
(The driver can pass thr)140 258 R 1.244
(ee functions: one for I/O access, one for memory)-.18 F 2.358
(access and one for combined memory and I/O access.)140 270 R 2.359
(If the memory)7.358 F 3.067(access and combined access functions ar)140
282 R 5.567(ei)-.18 G 3.066(dentical the common level)-5.567 F 1.979
(assumes that the memory access cannot be contr)140 294 R 1.979
(olled independently of)-.18 F 1.163(I/O access, if the I/O access func\
tion and the combined access functions)140 306 R(ar)140 318 Q 2.543(et)
-.18 G .044(he same it is assumed that I/O can not be contr)-2.543 F
.044(olled independently.)-.18 F(If)5.044 E .457
(memory and I/O have to be contr)140 330 R .457(olled together all thr)
-.18 F .456(ee values should be)-.18 F .257(the same.)140 342 R .257
(If a non)5.257 F F1(NULL)2.757 E F2 .257(value is passed as thir)2.757
F 2.757(da)-.18 G -.18(rg)-2.757 G .258(ument it is interpr).18 F(eted)
-.18 E .246(as an addr)140 354 R .246(ess wher)-.18 F 2.746(et)-.18 G
2.746(os)-2.746 G(tor)-2.746 E 2.746(et)-.18 G .246(he old access r)
-2.746 F(ecor)-.18 E 2.746(d. If)-.18 F .245(the thir)2.745 F 2.745(da)
-.18 G -.18(rg)-2.745 G .245(ument is).18 F F1(NULL)140 366 Q F2 .923
(it will be assumed that the generic access should be enabled befor)
3.422 F(e)-.18 E -.18(re)140 378 S 1.224(placing the access functions.)
.18 F 1.224(Otherwise it will be disabled.)6.224 F 1.224(The driver)
6.224 F 1.056(may enable them itself using the r)140 390 R 1.056
(eturned values.)-.18 F 1.056(It should do this fr)6.056 F(om)-.18 E
.937(its r)140 402 R .936
(eplacement access functions as the generic access may be disabled by)
-.18 F .308(the common level on certain occasions.)140 414 R .308(If r)
5.308 F .308(eplacement functions ar)-.18 F 2.808(es)-.18 G(peci-)-2.808
E 1.17(\214ed they must contr)140 426 R 1.169(ol all r)-.18 F(esour)-.18
E 1.169(ces of the speci\214c type r)-.18 F(egister)-.18 E 1.169
(ed for the)-.18 F(entity.)140 438 Q 2.25 -.92(To \214)90 462 T .41
(nd out if a speci\214c r).92 F(esour)-.18 E .41
(ce range con\215icts with another r)-.18 F(esour)-.18 E .41(ce the)-.18
F F1(xf86ChkConflict\(\))2.91 E F2(function may be used:)90 474 Q F1
(memType xf86ChkConflict\(resRange *rgp, int entityIndex\))115 498 Q F2
1.307(This function checks if the r)140 522 R(esour)-.18 E 1.307
(ce range)-.18 F F1(rgp)3.807 E F2 1.306(of for the speci\214ed entity)
3.807 F .905(con\215icts with with another r)140 534 R(esour)-.18 E
3.406(ce. If)-.18 F 3.406(ac)3.406 G .906(on\215ict is found, the addr)
-3.406 F .906(ess of)-.18 F .602(the start of the con\215ict is r)140
546 R 3.101(eturned. The)-.18 F -.18(re)3.101 G .601(turn value is zer)
.18 F 3.101(ow)-.18 G .601(hen ther)-3.101 F 3.101(ei)-.18 G(s)-3.101 E
(no con\215ict.)140 558 Q 1.694(The OPERA)90 582 R 1.694(TING state pr)
-.74 F 1.694(operties of pr)-.18 F 1.695(eviously r)-.18 F(egister)-.18
E 1.695(ed \214xed r)-.18 F(esour)-.18 E 1.695(ces can be set with the)
-.18 F F1(xf86SetOperatingState\(\))90 594 Q F2(function:)2.5 E 0 Cg EP
%%Page: 32 32
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(XFree86\256 serv)90 48 Q
(er 4.x Design \(DRAFT\))-.15 E(32)264.86 E/F1 10/Courier@0 SF
(resPtr xf86SetOperatingState\(resList list, int entityIndex,)115 96 Q
(int mask\))175 120 Q/F2 10/Palatino-Roman@0 SF 1.331
(This function is used to set the status of a r)140 144 R(esour)-.18 E
1.33(ce during OPERA)-.18 F(TING)-.74 E(state.)140 156 Q F1(list)6.522 E
F2 1.522(holds a list to which)4.022 F F1(mask)4.022 E F2 1.523
(is to be applied.)4.022 F 1.523(The parameter)6.523 F F1(mask)140 168 Q
F2 .048(may have the value)2.548 F F1(ResUnusedOpr)2.548 E F2(and)2.548
E F1(ResDisableOpr)2.548 E F2 5.047(.T)C .047(he \214rst)-5.047 F .563
(one should be used if a r)140 180 R(esour)-.18 E .563
(ce isn't used by the driver during OPERA)-.18 F -.55(T-)-.74 G 1.042(I\
NG state although it is decoded by the device, while the latter one ind\
i-)140 192 R .046(cates that the r)140 204 R(esour)-.18 E .046
(ce is not decoded during OPERA)-.18 F .047(TING state.)-.74 F .047
(Note that)5.047 F .521(the r)140 216 R(esour)-.18 E .521
(ce ranges have to match those speci\214ed during r)-.18 F 3.021
(egistration. If)-.18 F(a)3.02 E .782
(range has been speci\214ed starting at)140 228 R F1(A)3.282 E F2 .782
(and ending at)3.282 F F1(B)3.282 E F2 .782(and suppose)3.282 F F1(C)
3.282 E F2 .782(is a)3.282 F 3.415(value satisfying)140 240 R F1 6
(A<C<B)5.915 G F2 3.414(one may not specify the r)-.085 F(esour)-.18 E
3.414(ce range)-.18 F F1(\(A,B\))140 252 Q F2
(by splitting it into two ranges)2.5 E F1(\(A,C\))2.5 E F2(and)2.5 E F1
(\(C,B\))2.5 E F2(.)A(The following two functions ar)90 276 Q 2.5(ep)
-.18 G -.18(ro)-2.5 G(vided for special cases:).18 E F1 5.5
(void xf86RemoveEntityFromScreen\(ScrnInfoPtr pScrn, int enti-)115 300 R
(tyIndex\))115 312 Q F2 1.226(This function may be used to r)140 336 R
1.225(emove an entity fr)-.18 F 1.225(om a scr)-.18 F 3.725(een. This)
-.18 F(only)3.725 E .655(makes sense if a scr)140 348 R .656
(een has mor)-.18 F 3.156(et)-.18 G .656
(han one entity assigned or the scr)-3.156 F .656(een is)-.18 F
(to be deleted.)140 360 Q(No test is made if the scr)5 E
(een has any entities left.)-.18 E F1 9.333
(void xf86DeallocateResourcesForEntity\(int entityIndex, long)115 378 R
(type\))115 390 Q F2 .697(This function deallocates all r)140 414 R
(esour)-.18 E .698(ces of a given type r)-.18 F(egister)-.18 E .698
(ed for a cer)-.18 F(-)-.18 E(tain entity fr)140 426 Q(om the r)-.18 E
(esour)-.18 E(ce br)-.18 E(oker list.)-.18 E/F3 12/Helvetica-Bold@0 SF
3.336(9.3.3 ScreenInit)90 452 R(Phase)3.336 E F2 .581(All that is r)90
470 R(equir)-.18 E .581(ed in this phase is to setup the RAC \215ags.)
-.18 F .58(Note that it is also permissible to set)5.58 F 1.179
(these \215ags up in the Pr)90 482 R 1.179(eInit phase.)-.18 F 1.179
(The RAC \215ags ar)6.179 F 3.68(eh)-.18 G 1.18(eld in the)-3.68 F F1
(racIoFlags)3.68 E F2(and)3.68 E F1(racMem-)3.68 E(Flags)90 494 Q F2
2.322(\214elds of the)4.822 F F1(ScrnInfoRec)4.822 E F2 2.322
(for each scr)4.822 F 4.822(een. They)-.18 F 2.321
(specify which graphics operations)4.821 F .571(might r)90 506 R(equir)
-.18 E 3.071(et)-.18 G .571(he use of shar)-3.071 F .571(ed r)-.18 F
(esour)-.18 E 3.071(ces. This)-.18 F .572
(can be speci\214ed separately for memory and I/O)3.071 F -.18(re)90 518
S(sour).18 E 2.5(ces. The)-.18 F(available \215ags ar)2.5 E 2.5(ed)-.18
G(e\214ned in)-2.5 E F1(rac/xf86RAC.h)2.5 E F2 5(.T)C(hey ar)-5 E(e:)
-.18 E F1(RAC_FB)90 536 Q F2(for framebuf)115 554 Q
(fer operations \(including hw acceleration\))-.18 E F1(RAC_CURSOR)90
584 Q F2 1.135(for Cursor operations \(??? I'm not sur)115 602 R 3.634
(ei)-.18 G 3.634(fw)-3.634 G 3.634(en)-3.634 G 1.134
(eed this for SW cursor it depends on)-3.634 F
(which level the sw cursor is drawn\))115 614 Q F1(RAC_COLORMAP)90 644 Q
F2(for colormap operations)115 662 Q F1(RAC_VIEWPORT)90 692 Q F2
(for the call to)115 710 Q F1(ChipAdjustFrame\(\))2.5 E F2
(The \215ags ar)90 728 Q 2.5(eO)-.18 G(Red together.)-2.5 E 0 Cg EP
%%Page: 33 33
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(XFree86\256 serv)90 48 Q
(er 4.x Design \(DRAFT\))-.15 E(33)264.86 E/F1 16/Helvetica-Bold@0 SF
4.448(10. Con\214g)90 102 R(\214le `)4.448 E(`Option'' entries)-.736 E
/F2 10/Palatino-Roman@0 SF 1.181(Option entries ar)90 120 R 3.681(ep)
-.18 G 1.181
(ermitted in most sections and subsections of the con\214g \214le.)
-3.681 F(Ther)6.182 E 3.682(ea)-.18 G 1.542 -.18(re t)-3.682 H(wo).18 E
(forms of option entries:)90 132 Q(Option "option-name")120 150 Q 2.5
(Ab)150 162 S(oolean option.)-2.5 E(Option "option-name" "option-value")
120 180 Q(An option with an arbitrary value.)150 192 Q 1.267
(The option entries ar)90 210 R 3.767(eh)-.18 G 1.267
(andled by the parser)-3.767 F 3.767(,a)-.74 G 1.266
(nd a list of the parsed options is included with)-3.767 F .678
(each of the appr)90 222 R .678(opriate data str)-.18 F(uctur)-.08 E
.678(es that the drivers have access to.)-.18 F .678(The data str)5.678
F(uctur)-.08 E .678(es used)-.18 F .627
(to hold the option information ar)90 234 R 3.127(eo)-.18 G .627
(paque to the driver)-3.127 F 3.126(,a)-.74 G .626
(nd a driver must not access the option)-3.126 F .684(data dir)90 246 R
3.184(ectly. Instead,)-.18 F .684(the common layer pr)3.184 F .685
(ovides a set of functions that may be used to access,)-.18 F
(check and manipulate the option data.)90 258 Q .369
(First, the low level option handling functions.)90 276 R .369
(In most cases drivers would not need to use these)5.369 F(dir)90 288 Q
(ectly.)-.18 E/F3 10/Courier@0 SF
(pointer xf86FindOption\(pointer options, const char *name\))115 312 Q
F2 -.92(Ta)140 336 S 1.248
(kes a list of options and an option name, and r).92 F 1.248
(eturns a handle for the)-.18 F .399
(\214rst option entry in the list matching the name.)140 348 R(Returns)
5.399 E F3(NULL)2.899 E F2 .399(if no match)2.899 F(is found.)140 360 Q
F3(char *xf86FindOptionValue\(pointer options, const char *name\))115
378 Q F2 -.92(Ta)140 396 S 1.089
(kes a list of options and an option name, and r).92 F 1.09
(eturns the value associ-)-.18 F .123
(ated with the \214rst option entry in the list matching the name.)140
408 R .122(If the match-)5.123 F .286
(ing option has no value, an empty string \()140 420 R F3("")A F2 2.786
(\)i)C 2.786(sr)-2.786 G 2.786(eturned. Returns)-2.966 F F3(NULL)2.787 E
F2(if)2.787 E(no match is found.)140 432 Q F3
(void xf86MarkOptionUsed\(pointer option\))115 450 Q F2 -.92(Ta)140 474
S(kes a handle for an option, and marks that option as used.).92 E F3 10
(void xf86MarkOptionUsedByName\(pointer options, const char)115 492 R
(*name\))115 504 Q F2 -.92(Ta)140 528 S .189(kes a list of options and \
an option name and marks the \214rst option entry).92 F
(in the list matching the name as used.)140 540 Q
(Next, the higher level functions that most drivers would use.)90 564 Q
0 Cg EP
%%Page: 34 34
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(XFree86\256 serv)90 48 Q
(er 4.x Design \(DRAFT\))-.15 E(34)264.86 E/F1 10/Courier@0 SF
(void xf86CollectOptions\(ScrnInfoPtr pScrn, pointer extraOpts\))115 96
Q/F2 10/Palatino-Roman@0 SF .561(Collect the options fr)140 120 R .561
(om each of the con\214g \214le sections used by the scr)-.18 F(een)-.18
E(\()140 132 Q F1(pScrn)A F2 3.926(\)a)C 1.426(nd r)-3.926 F 1.426
(eturn the mer)-.18 F 1.427(ged list as)-.18 F F1(pScrn->options)3.927 E
F2 6.427(.T)C 1.427(his function)-6.427 F -.18(re)140 144 S(quir).18 E
1.44(es that)-.18 F F1(pScrn->confScreen)3.94 E F2(,)A F1
(pScrn->display)3.94 E F2(,)A F1(pScrn->moni-)3.94 E(tor)140 156 Q F2(,)
A F1(pScrn->numEntities)4.448 E F2 4.448(,a)C(nd)-4.448 E F1
(pScrn->entityList)4.448 E F2(ar)4.448 E 4.448(ei)-.18 G(nitialised.)
-4.448 E F1(extraOpts)140 168 Q F2 1.78
(may optionally be set to an additional list of options to be)4.28 F
4.398(combined with the others.)140 180 R 4.398(The or)9.398 F 4.398
(der of pr)-.18 F 4.398(ecedence for options is)-.18 F F1(extraOpts)140
192 Q F2 2.5(,d)C(isplay)-2.5 E 2.5(,c)-1.11 G(onfScr)-2.5 E
(een, monitor)-.18 E 2.5(,d)-.74 G(evice.)-2.5 E F1
(void xf86ProcessOptions\(int scrnIndex, pointer options,)115 210 Q
(OptionInfoPtr optinfo\))175 234 Q F2(Pr)140 258 Q 2.169
(ocesses a list of options accor)-.18 F 2.168
(ding to the information in the array of)-.18 F F1(OptionInfoRecs)140
270 Q F2(\()3.522 E F1(optinfo)A F2 3.522(\). The)B -.18(re)3.522 G
1.023(sulting information is stor).18 F 1.023(ed in the)-.18 F F1(value)
140 282 Q F2 .193(\214elds of the appr)2.693 F(opriate)-.18 E F1
(optinfo)2.693 E F2 2.693(entries. The)2.693 F F1(found)2.693 E F2 .192
(\214elds ar)2.692 F 2.692(es)-.18 G(et)-2.692 E(to)140 294 Q F1(TRUE)
4.303 E F2 1.803(when an option with a value of the corr)4.303 F 1.804
(ect type if found, and)-.18 F F1(FALSE)140 306 Q F2 2.996
(otherwise. The)2.996 F F1(type)2.996 E F2 .495
(\214eld is used to determine the expected value)2.996 F .357
(type for each option.)140 318 R .357
(Each option in the list of options for which ther)5.357 F 2.858(ei)-.18
G 2.858(sa)-2.858 G 1.241(name match \(but not necessarily a value type\
 match\) is marked as used.)140 330 R -.92(Wa)140 342 S .994
(rning messages ar).92 F 3.494(ep)-.18 G .994
(rinted when option values don't match the types)-3.494 F
(speci\214ed in the optinfo data.)140 354 Q .815
(NOTE: If this function is called befor)140 372 R 3.315(ead)-.18 G .815
(river's scr)-3.315 F .815(een number is known)-.18 F .942(\(e.g., fr)
140 384 R .942(om the)-.18 F F1(ChipProbe\(\))3.442 E F2 .942
(function\) a)3.442 F F1(scrnIndex)3.442 E F2 .942(value of)3.442 F F1
(-1)3.442 E F2(should)3.442 E(be used.)140 396 Q 3.897
(NOTE 2: Given that this function stor)140 414 R 3.896(es into the)-.18
F F1(OptionInfoRecs)6.396 E F2 1.675(pointed to by)140 426 R F1(optinfo)
4.175 E F2 4.175(,t)C 1.676(he caller should ensur)-4.175 F 4.176(et)
-.18 G(he)-4.176 E F1(OptionInfoRecs)4.176 E F2(ar)140 438 Q 3.235(e\()
-.18 G -.18(re)-3.235 G .735(-\)initialised befor).18 F 3.234(et)-.18 G
.734(he call, especially if the caller expects to use the)-3.234 F(pr)
140 450 Q(ede\214ned option values as defaults.)-.18 E(The)140 468 Q F1
(OptionInfoRec)2.5 E F2(is de\214ned as follows:)2.5 E/F3 8/Courier@0 SF
(typedef struct {)188.8 484 Q(double freq;)208 494 Q(int units;)208 504
Q 4.8(}O)188.8 514 S(ptFrequency;)-4.8 E(typedef union {)188.8 534 Q
(unsigned long)208 544 Q(num;)33.6 E(char *)208 554 Q(str;)67.2 E 62.4
(double realnum;)208 564 R 72(Bool bool;)208 574 R 33.6
(OptFrequency freq;)208 584 R 4.8(}V)188.8 594 S(alueUnion;)-4.8 E
(typedef enum {)188.8 614 Q(OPTV_NONE = 0,)208 624 Q(OPTV_INTEGER,)208
634 Q 4.8(OPTV_STRING, /*)208 644 R 4.8(an)4.8 G(on-empty string */)-4.8
E 4.8(OPTV_ANYSTR, /*)208 654 R(Any string, including an empty one */)
4.8 E(OPTV_REAL,)208 664 Q(OPTV_BOOLEAN,)208 674 Q(OPTV_FREQ)208 684 Q
4.8(}O)188.8 694 S(ptionValueType;)-4.8 E(typedef enum {)188.8 714 Q
(OPTUNITS_HZ = 1,)208 724 Q(OPTUNITS_KHZ,)208 734 Q 0 Cg EP
%%Page: 35 35
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(XFree86\256 serv)90 48 Q
(er 4.x Design \(DRAFT\))-.15 E(35)264.86 E/F1 8/Courier@0 SF
(OPTUNITS_MHZ)208 94 Q 4.8(}O)188.8 104 S(ptFreqUnits;)-4.8 E
(typedef struct {)188.8 124 Q 76.8(int token;)208 134 R(const char*)208
144 Q(name;)43.2 E 19.2(OptionValueType type;)208 154 R 43.2
(ValueUnion value;)208 164 R 72(Bool found;)208 174 R 4.8(}O)188.8 184 S
(ptionInfoRec, *OptionInfoPtr;)-4.8 E/F2 10/Courier@0 SF(OPTV_FREQ)140
212 Q/F3 10/Palatino-Roman@0 SF .014
(can be used for options values that ar)2.514 F 2.515(ef)-.18 G -.18(re)
-2.515 G 2.515(quencies. These).18 F(val-)2.515 E 1.891(ues ar)140 224 R
4.391(ea\215)-.18 G 1.891
(oating point number with an optional unit name appended.)-4.391 F .501
(The unit name can be one of "Hz", "kHz", "k", "MHz", "M".)140 236 R
.501(The multiplier)5.501 F 2.483(associated with the unit is stor)140
248 R 2.483(ed in)-.18 F F2(freq.units)4.983 E F3 4.983(,a)C 2.482
(nd the scaled fr)-4.983 F(e-)-.18 E .753(quency is stor)140 260 R .753
(ed in)-.18 F F2(freq.freq)3.253 E F3 5.753(.W)C .753
(hen no unit is speci\214ed,)-5.753 F F2(freq.units)3.253 E F3
(is set to)140 272 Q F2(0)2.5 E F3 2.5(,a)C(nd)-2.5 E F2(freq.freq)2.5 E
F3(is unscaled.)2.5 E -.9(Ty)140 290 S .569
(pical usage is to setup an array of).9 F F2(OptionInfoRecs)3.069 E F3
.569(with all \214elds ini-)3.069 F 6.234(tialised. The)140 302 R F2
(value)6.234 E F3(and)6.234 E F2(found)6.234 E F3 3.735
(\214elds get set by)6.234 F F2(xf86ProcessOp-)6.235 E(tions\(\))140 314
Q F3 5.84(.F)C .84(or cases wher)-5.84 F 3.34(et)-.18 G .84
(he value parsing is mor)-3.34 F 3.34(ec)-.18 G .84(omplex, the driver)
-3.34 F .98(should specify)140 326 R F2(OPTV_STRING)3.48 E F3 3.48(,a)C
.98(nd parse the string itself.)-3.48 F .98(An example of)5.98 F 1.822
(using this option handling is included in the)140 338 R/F4 10
/Palatino-Italic@0 SF 1.822(Sample Driver)4.322 F F3 1.821
(\(section 20.,)4.321 F(page 87\) section.)140 350 Q F2
(void xf86ShowUnusedOptions\(int scrnIndex, pointer options\))115 368 Q
F3 .27(Prints out warning messages for each option in the list of optio\
ns that isn't)140 392 R 1.272(marked as used.)140 404 R 1.272
(This is intended to show options that the driver hasn't)6.272 F -.18
(re)140 416 S 5.809(cognised. It).18 F 3.309
(would normally be called near the end of the)5.809 F F2(Chip-)5.81 E
(ScreenInit\(\))140 428 Q F3(function, but only when)2.5 E F2
(serverGeneration == 1)2.5 E F3(.)A F2
(OptionInfoPtr xf86TokenToOptinfo\(const OptionInfoRec *table,)115 446 Q
(int token\))175 470 Q F3 2.103(Returns a pointer to the)140 494 R F2
(OptionInfoRec)4.603 E F3(in)4.603 E F2(table)4.603 E F3 2.102
(with a token \214eld)4.603 F(matching)140 506 Q F2(token)2.5 E F3 5(.R)
C(eturns)-5 E F2(NULL)2.5 E F3(if no match is found.)2.5 E F2
(Bool xf86IsOptionSet\(const OptionInfoRec *table, int token\))115 524 Q
F3 1.025(Returns the)140 548 R F2(found)3.525 E F3 1.025(\214eld of the)
3.525 F F2(OptionInfoRec)3.525 E F3(in)3.526 E F2(table)3.526 E F3 1.026
(with a)3.526 F F2(token)3.526 E F3 .279(\214eld matching)140 560 R F2
(token)2.779 E F3 5.279(.T)C .278
(his can be used for options of all types.)-5.279 F .278(Note that)5.278
F .212(for options of type)140 572 R F2(OPTV_BOOLEAN)2.712 E F3 2.712
(,i)C 2.712(ti)-2.712 G .213(sn't suf)-2.712 F .213
(\214cient to check this to deter)-.18 F(-)-.18 E
(mine the value of the option.)140 584 Q(Returns)5 E F2(FALSE)2.5 E F3
(if no match is found.)2.5 E F2 10
(char *xf86GetOptValString\(const OptionInfoRec *table, int)115 602 R
(token\))115 614 Q F3 1.978(Returns the)140 638 R F2(value.str)4.478 E
F3 1.978(\214eld of the)4.478 F F2(OptionInfoRec)4.478 E F3(in)4.478 E
F2(table)4.478 E F3 1.978(with a)4.478 F(token \214eld matching)140 650
Q F2(token)2.5 E F3 5(.R)C(eturns)-5 E F2(NULL)2.5 E F3
(if no match is found.)2.5 E F2 10
(Bool xf86GetOptValInteger\(const OptionInfoRec *table, int)115 668 R
(token,)115 680 Q(int *value\))175 704 Q F3 .755(Returns via)140 728 R
F2(*value)3.255 E F3(the)3.255 E F2(value.num)3.255 E F3 .755
(\214eld of the)3.255 F F2(OptionInfoRec)3.255 E F3(in)3.255 E F2(ta-)
3.255 E(ble)140 740 Q F3 .164(with a)2.664 F F2(token)2.664 E F3 .163
(\214eld matching)2.664 F F2(token)2.663 E F3(.)A F2(*value)5.163 E F3
.163(is only changed when a)2.663 F 0 Cg EP
%%Page: 36 36
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(XFree86\256 serv)90 48 Q
(er 4.x Design \(DRAFT\))-.15 E(36)264.86 E/F1 10/Palatino-Roman@0 SF
.528(match is found so it can be safely initialised with a default prio\
r to calling)140 96 R(this function.)140 108 Q(The function r)5 E
(eturn value is as for)-.18 E/F2 10/Courier@0 SF(xf86IsOptionSet\(\))2.5
E F1(.)A F2
(Bool xf86GetOptValULong\(const OptionInfoRec *table, int token,)115 126
Q(unsigned long *value\))175 150 Q F1(Like)140 174 Q F2
(xf86GetOptValInteger\(\))6.655 E F1 6.655(,e)C 4.155
(xcept the value is tr)-6.655 F 4.155(eated as an)-.18 F F2
(unsigned long)140 186 Q F1(.)A F2
(Bool xf86GetOptValReal\(const OptionInfoRec *table, int token,)115 204
Q(double *value\))175 228 Q F1(Like)140 252 Q F2
(xf86GetOptValInteger\(\))2.5 E F1 2.5(,e)C(xcept that)-2.5 E F2
(value.realnum)2.5 E F1(is used.)2.5 E F2
(Bool xf86GetOptValFreq\(const OptionInfoRec *table, int token,)115 270
Q(OptFreqUnits expectedUnits, double *value\))175 294 Q F1(Like)140 318
Q F2(xf86GetOptValInteger\(\))4.564 E F1 4.564(,e)C 2.064
(xcept that the)-4.564 F F2(value.freq)4.564 E F1 2.065(data is)4.565 F
-.18(re)140 330 S 2.664(turned. The).18 F(fr)2.664 E .164
(equency value is scaled to the units indicated by)-.18 F F2(expect-)
2.663 E(edUnits)140 342 Q F1 5.778(.T)C .778
(he scaling is exact when the units wer)-5.778 F 3.278(es)-.18 G .779
(peci\214ed explicitly in)-3.278 F .432(the option's value.)140 354 R
.432(Otherwise, the)5.432 F F2(expectedUnits)2.932 E F1 .432
(\214eld is used as a hint)2.932 F .327(when doing the scaling.)140 366
R .327(In this case, values lar)5.327 F .328(ger than)-.18 F F2(1000)
2.828 E F1(ar)2.828 E 2.828(ea)-.18 G(ssumed)-2.828 E .646
(to have be speci\214ed in the next smallest units.)140 378 R .646
(For example, if the Option)5.646 F .76
(value is "10000" and expectedUnits is)140 390 R F2(OPTUNITS_MHZ)3.26 E
F1 3.26(,t)C .76(he value r)-3.26 F(eturned)-.18 E(is)140 402 Q F2(10)
2.5 E F1(.)A F2 3.2
(Bool xf86GetOptValBool\(const OptionInfoRec *table, int token,)115 420
R(Bool *value\))115 432 Q F1 1.638
(This function is used to check boolean options \()140 456 R F2
(OPTV_BOOLEAN)A F1 4.138(\). If)B(the)4.138 E .496(function r)140 468 R
.496(eturn value is)-.18 F F2(FALSE)2.996 E F1 2.996(,i)C 2.995(tm)
-2.996 G .495(eans the option wasn't set.)-2.995 F(Otherwise)5.495 E F2
(*value)140 480 Q F1 1.602
(is set to the boolean value indicated by the option's value.)4.101 F
(No)6.602 E(option)140 492 Q F2(value)4.2 E F1 1.7(is interpr)4.2 F 1.7
(eted as)-.18 F F2(TRUE)4.2 E F1 6.7(.O)C 1.7(ption values meaning)-6.7
F F2(TRUE)4.2 E F1(ar)4.2 E(e)-.18 E 2.101("1", "yes", "on", "tr)140 504
R 2.102(ue", and option values meaning)-.08 F F2(FALSE)4.602 E F1(ar)
4.602 E 4.602(e")-.18 G 2.102(0", "no",)-4.602 F("of)140 516 Q .928
(f", "false".)-.18 F .928(Option names both with the "no" pr)5.928 F
.927(e\214x in their names, and)-.18 F 2.105(with that pr)140 528 R
2.105(e\214x r)-.18 F 2.105(emoved ar)-.18 F 4.605(ea)-.18 G 2.106
(lso checked and handled in the obvious)-4.605 F(way.)140 540 Q F2
(*value)5.254 E F1 .253(is not changed when the option isn't pr)2.754 F
2.753(esent. It)-.18 F .253(should nor)2.753 F(-)-.18 E
(mally be set to a default value befor)140 552 Q 2.5(ec)-.18 G
(alling this function.)-2.5 E F2 10
(Bool xf86ReturnOptValBool\(const OptionInfoRec *table, int)115 570 R
(token, Bool def\))115 582 Q F1 1.638
(This function is used to check boolean options \()140 606 R F2
(OPTV_BOOLEAN)A F1 4.138(\). If)B(the)4.138 E 1.798
(option is set, its value is r)140 618 R 4.298(eturned. If)-.18 F 1.798
(the options is not set, the default)4.298 F .952(value speci\214ed by)
140 630 R F2(def)3.452 E F1 .952(is r)3.452 F 3.452(eturned. The)-.18 F
.952(option interpr)3.452 F .951(etation is the same)-.18 F(as for)140
642 Q F2(xf86GetOptValBool\(\))2.5 E F1(.)A F2
(int xf86NameCmp\(const char *s1, const char *s2\))115 660 Q F1 .654
(This function should be used when comparing strings fr)140 684 R .655
(om the con\214g \214le)-.18 F 1.524(with expected values.)140 696 R
1.524(It works like)6.524 F F2(strcmp\(\))4.024 E F1 4.024(,b)C 1.523
(ut is not case sensitive)-4.024 F .743(and space, tab, and `)140 708 R
F2(_)A F1 3.243('c)C .743(haracters ar)-3.243 F 3.243(ei)-.18 G(gnor)
-3.243 E .744(ed in the comparison.)-.18 F .744(The use)5.744 F 1.427
(of this function isn't r)140 720 R 1.427
(estricted to parsing option values.)-.18 F 1.426(It may be used)6.426 F
(anywher)140 732 Q 2.5(ew)-.18 G(her)-2.5 E 2.5(et)-.18 G
(his functionality r)-2.5 E(equir)-.18 E(ed.)-.18 E 0 Cg EP
%%Page: 37 37
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(XFree86\256 serv)90 48 Q
(er 4.x Design \(DRAFT\))-.15 E(37)264.86 E/F1 16/Helvetica-Bold@0 SF
4.448(11. Modules,)90 102 R(Driver)4.448 E(s, Inc)-.24 E
(lude Files and Interface Issues)-.32 E/F2 10/Palatino-Roman@0 SF
(NOTE: this section is incomplete.)90 120 Q/F3 14/Helvetica-Bold@0 SF
3.892(11.1 Inc)90 142 R(lude \214les)-.28 E F2
(The following include \214les ar)90 160 Q 2.5(et)-.18 G(ypically r)-2.5
E(equir)-.18 E(ed by video drivers:)-.18 E
(All drivers should include these:)115 184 Q/F4 10/Courier@0 SF
("xf86.h")140 202 Q("xf86_OSproc.h")140 226 Q("xf86_ansic.h")140 250 Q
("xf86Resources.h")140 274 Q F2(Wher)115 304 Q(ever inb/outb \(and r)
-.18 E(elated things\) ar)-.18 E 2.5(eu)-.18 G
(sed the following should be included:)-2.5 E F4("compiler.h")140 322 Q
F2(Note: in drivers, this must be included after)115 352 Q F4
("xf86_ansic.h")2.5 E F2(.)A
(Drivers that need to access PCI vendor/device de\214nitions need this:)
115 370 Q F4("xf86PciInfo.h")140 388 Q F2
(Drivers that need to access the PCI con\214g space need this:)115 406 Q
F4("xf86Pci.h")140 424 Q F2
(Drivers that initialise a SW cursor need this:)115 442 Q F4
("mipointer.h")140 460 Q F2(All drivers implementing backing stor)115
478 Q 2.5(en)-.18 G(eed this:)-2.5 E F4("mibstore.h")140 496 Q F2
(All drivers using the mi colourmap code need this:)115 514 Q F4
("micmap.h")140 532 Q F2
(If a driver uses the vgahw module, it needs this:)115 550 Q F4
("vgaHW.h")140 568 Q F2(Drivers supporting VGA or Her)115 586 Q
(cules monochr)-.18 E(ome scr)-.18 E(eens need:)-.18 E F4("xf1bpp.h")140
604 Q F2(Drivers supporting VGA or EGC 16-colour scr)115 622 Q
(eens need:)-.18 E F4("xf4bpp.h")140 640 Q F2(Drivers using cfb need:)
115 658 Q F4(#define PSZ 8)140 676 Q(#include "cfb.h")140 700 Q
(#undef PSZ)140 724 Q F2
(Drivers supporting bpp 16, 24 or 32 with cfb need one or mor)115 742 Q
2.5(eo)-.18 G(f:)-2.5 E 0 Cg EP
%%Page: 38 38
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(XFree86\256 serv)90 48 Q
(er 4.x Design \(DRAFT\))-.15 E(38)264.86 E/F1 10/Courier@0 SF
("cfb16.h")140 96 Q("cfb24.h")140 120 Q("cfb32.h")140 144 Q/F2 10
/Palatino-Roman@0 SF(If a driver uses XAA, it needs this:)115 162 Q F1
("xaa.h")140 180 Q F2(If a driver uses the fb manager)115 198 Q 2.5(,i)
-.74 G 2.5(tn)-2.5 G(eeds this:)-2.5 E F1("xf86fbman.h")140 216 Q F2
2.26(Non-driver modules should include)90 240 R F1("xf86_ansic.h")4.76 E
F2 2.26(to get the corr)4.76 F 2.26(ect wrapping of ANSI)-.18 F
(C/libc functions.)90 252 Q(All modules must NOT include any system inc\
lude \214les, or the following:)90 270 Q F1("xf86Priv.h")115 288 Q
("xf86Privstr.h")115 312 Q("xf86_OSlib.h")115 336 Q(<X11/Xos.h>)115 360
Q F2 4.906(In addition, "xf86_libc.h" must not be included explicitly.)
90 378 R 4.906(It is included implicitly by)9.906 F("xf86_ansic.h".)90
390 Q/F3 16/Helvetica-Bold@0 SF 4.448(12. Offscreen)90 420 R -4.288
(Memor y)4.448 F(Mana)4.448 E .16(ge)-.16 G(r)-.16 E F2 .984
(Management of of)90 438 R(fscr)-.18 E .984
(een video memory may be handled by the XFr)-.18 F .985(ee86 framebuf)
-.18 F .985(fer manager.)-.18 F .274(Once the of)90 450 R(fscr)-.18 E
.274(een memory manager is r)-.18 F .273
(unning, drivers or extensions may allocate, fr)-.08 F .273(ee or r)-.18
F(esize)-.18 E(ar)90 462 Q 4.71(eas of of)-.18 F(fscr)-.18 E 4.711(een \
video memory using the following functions \(de\214nitions taken fr)-.18
F(om)-.18 E F1(xf86fbman.h)90 474 Q F2(\):)A 0 Cg EP
%%Page: 39 39
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(XFree86\256 serv)90 48 Q
(er 4.x Design \(DRAFT\))-.15 E(39)264.86 E/F1 8/Courier@0 SF
(typedef struct _FBArea {)129.2 94 Q 14.4(ScreenPtr pScreen;)148.4 104 R
28.8(BoxRec box;)148.4 114 R 43.2(int granularity;)148.4 124 R 38.4
(void \(*MoveAreaCallback\)\(struct)148.4 134 R
(_FBArea*, struct _FBArea*\))4.8 E 38.4
(void \(*RemoveAreaCallback\)\(struct)148.4 144 R(_FBArea*\))4.8 E 19.2
(DevUnion devPrivate;)148.4 154 R 4.8(}F)129.2 164 S(BArea, *FBAreaPtr;)
-4.8 E(typedef void \(*MoveAreaCallbackProcPtr\)\(FBAreaPtr from, FBAre\
aPtr to\))129.2 184 Q
(typedef void \(*RemoveAreaCallbackProcPtr\)\(FBAreaPtr\))129.2 194 Q
(FBAreaPtr xf86AllocateOffscreenArea \()129.2 214 Q(ScreenPtr pScreen,)
148.4 224 Q(int width, int height,)148.4 234 Q(int granularity,)148.4
244 Q(MoveAreaCallbackProcPtr MoveAreaCallback,)148.4 254 Q
(RemoveAreaCallbackProcPtr RemoveAreaCallback,)148.4 264 Q
(pointer privData)148.4 274 Q(\))129.2 284 Q
(void xf86FreeOffscreenArea \(FBAreaPtr area\))129.2 304 Q
(Bool xf86ResizeOffscreenArea \()129.2 324 Q(FBAreaPtr area)146 334 Q
(int w, int h)146 344 Q(\))129.2 354 Q/F2 10/Palatino-Roman@0 SF
(The function:)90 372 Q/F3 10/Courier@0 SF
(Bool xf86FBManagerRunning\(ScreenPtr pScreen\))115 390 Q F2 .165(can b\
e used by an extension to check if the driver has initialized the memor\
y manager.)90 408 R .164(The man-)5.164 F
(ager is not available if this r)90 420 Q(eturns)-.18 E F3(FALSE)2.5 E
F2(and the functions above will all fail.)2.5 E F3
(xf86AllocateOffscreenArea\(\))90 438 Q F2 1.284(can be used to r)3.784
F 1.285(equest a r)-.18 F 1.285(ectangle of dimensions)-.18 F F3(width)
3.785 E F2(x)3.785 E F3(height)90 450 Q F2 1.792(\(in pixels\) fr)4.292
F 1.792(om unused of)-.18 F(fscr)-.18 E 1.792(een memory.)-.18 F F3
(granularity)6.792 E F2 1.791(speci\214es that the leftmost)4.292 F .912
(edge of the r)90 462 R .912(ectangle must lie on some multiple of)-.18
F F3(granularity)3.412 E F2 3.412(pixels. A)3.412 F .912
(granularity of zer)3.412 F(o)-.18 E .327
(means the same thing as a granularity of one - no alignment pr)90 474 R
(efer)-.18 E 2.827(ence. A)-.18 F F3(MoveAreaCallback)2.827 E F2 .133
(can be pr)90 486 R .133(ovided to notify the r)-.18 F .133
(equester when the of)-.18 F(fscr)-.18 E .133(een ar)-.18 F .134
(ea is moved.)-.18 F .134(If no)5.134 F F3(MoveAreaCall-)2.634 E(back)90
498 Q F2 .035(is supplied then the ar)2.535 F .035(ea is consider)-.18 F
.035(ed to be immovable.)-.18 F(The)5.035 E F3(privData)2.535 E F2 .035
(\214eld will be stor)2.535 F(ed)-.18 E .336
(in the manager's internal str)90 510 R(uctur)-.08 E 2.836(ef)-.18 G
.336(or that allocated ar)-2.836 F .336(ea and will be r)-.18 F .337
(eturned to the r)-.18 F .337(equester in)-.18 F(the)90 522 Q F3(FBArea)
3.916 E F2 1.416(passed via the)3.916 F F3(MoveAreaCallback)3.916 E F2
6.416(.A)C 3.916(no)-6.416 G(ptional)-3.916 E F3(RemoveAreaCallback)
3.916 E F2 1.416(is pr)3.916 F(o-)-.18 E 2.701(vided. If)90 534 R .201
(the driver pr)2.701 F .202(ovides this it indicates that the ar)-.18 F
.202(ea should be allocated with a lower prior)-.18 F(-)-.18 E 4.667
(ity. Such)90 546 R 2.167(an ar)4.667 F 2.167(ea may be r)-.18 F 2.167
(emoved when a higher priority r)-.18 F 2.167
(equest \(one that doesn't have a)-.18 F F3(RemoveAreaCallback)90 558 Q
F2 2.95(\)i)C 2.95(sm)-2.95 G 2.95(ade. When)-2.95 F .451
(this function is called, the driver will have an opportu-)2.951 F .569
(nity to do whatever cleanup it needs to do to deal with the loss of th\
e ar)90 570 R .569(ea, but it must \214nish its)-.18 F .493
(cleanup befor)90 582 R 2.993(et)-.18 G .493
(he function exits since the of)-2.993 F(fscr)-.18 E .494
(een memory manager will fr)-.18 F .494(ee the ar)-.18 F .494
(ea immedi-)-.18 F(ately after.)90 594 Q F3
(xf86AllocateOffscreenArea\(\))90 612 Q F2 -.18(re)3.025 G(turns).18 E
F3(NULL)3.025 E F2 .524(if it was unable to allocate the r)3.025 F .524
(equested ar)-.18 F(ea.)-.18 E(When no longer needed, ar)90 624 Q
(eas should be fr)-.18 E(eed with)-.18 E F3(xf86FreeOffscreenArea\(\))
2.5 E F2(.)A F3(xf86ResizeOffscreenArea\(\))90 642 Q F2 -.18(re)3.158 G
.658(sizes an existing).18 F F3(FBArea)3.158 E F2(.)A F3
(xf86ResizeOffscreenArea\(\))5.658 E F2 -.18(re)90 654 S(turns).18 E F3
(TRUE)2.576 E F2 .076(if the r)2.576 F .076(esize was successful.)-.18 F
(If)5.075 E F3(xf86ResizeOffscreenArea\(\))2.575 E F2 -.18(re)2.575 G
(turns).18 E F3(FALSE)2.575 E F2 2.575(,t)C(he)-2.575 E(original)90 666
Q F3(FBArea)3.656 E F2 1.156(is left unmodi\214ed.)3.656 F 1.157
(Resizing an ar)6.157 F 1.157(ea maintains the ar)-.18 F 1.157
(ea's original)-.18 F F3(granular-)3.657 E(ity)90 678 Q F2(,)A F3
(devPrivate)4.19 E F2 4.19(,a)C(nd)-4.19 E F3(MoveAreaCallback)4.19 E F2
(.)A F3(xf86ResizeOffscreenArea\(\))6.69 E F2 1.69(has consider)4.19 F
(-)-.18 E .79(ably less over)90 690 R .79(head than fr)-.18 F .79
(eeing the old ar)-.18 F .791(ea then r)-.18 F .791
(eallocating the new size, so it should be used)-.18 F
(whenever possible.)90 702 Q(The function:)90 720 Q 0 Cg EP
%%Page: 40 40
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(XFree86\256 serv)90 48 Q
(er 4.x Design \(DRAFT\))-.15 E(40)264.86 E/F1 10/Courier@0 SF
(Bool xf86QueryLargestOffscreenArea\()115 96 Q(ScreenPtr pScreen,)175
120 Q(int *width, int *height,)175 144 Q(int granularity,)175 168 Q
(int preferences,)175 192 Q(int priority)175 216 Q(\))115 240 Q/F2 10
/Palatino-Roman@0 SF .234(is pr)90 258 R .233
(ovided to query the width and height of the lar)-.18 F .233
(gest single)-.18 F F1(FBArea)2.733 E F2 .233
(allocatable given a partic-)2.733 F 1.417(ular priority.)90 270 R F1
(preferences)6.417 E F2 1.418
(can be one of the following to indicate whether width, height or)3.918
F(ar)90 282 Q(ea should be consider)-.18 E
(ed when determining which is the lar)-.18 E(gest single)-.18 E F1
(FBArea)2.5 E F2(available.)2.5 E F1(FAVOR_AREA_THEN_WIDTH)115 300 Q
(FAVOR_AREA_THEN_HEIGHT)115 324 Q(FAVOR_WIDTH_THEN_AREA)115 348 Q
(FAVOR_HEIGHT_THEN_AREA)115 372 Q(priority)90 390 Q F2
(is one of the following:)2.5 E F1(PRIORITY_LOW)115 414 Q F2 2.136
(Return the lar)140 438 R 2.135
(gest block available without stealing anyone else's space.)-.18 F 5.418
(This corr)140 450 R 5.418(esponds to the priority of allocating a)-.18
F F1(FBArea)7.918 E F2 5.418(when a)7.918 F F1(RemoveAreaCallback)140
462 Q F2(is pr)2.5 E(ovided.)-.18 E F1(PRIORITY_NORMAL)115 492 Q F2 .22
(Return the lar)140 516 R .22
(gest block available if it is acceptable to steal a lower priority)-.18
F(ar)140 528 Q 3.561(ea fr)-.18 F 3.561(om someone.)-.18 F 3.561
(This corr)8.561 F 3.561(esponds to the priority of allocating a)-.18 F
F1(FBArea)140 540 Q F2(without pr)2.5 E(oviding a)-.18 E F1
(RemoveAreaCallback)2.5 E F2(.)A F1(PRIORITY_EXTREME)115 570 Q F2 .923
(Return the lar)140 594 R .923(gest block available if all)-.18 F F1
(FBAreas)3.423 E F2 .922(that ar)3.423 F .922(en't locked down)-.18 F
(wer)140 606 Q 4.785(ee)-.18 G 2.285(xpunged fr)-4.785 F 2.285
(om memory \214rst.)-.18 F 2.286(This corr)7.286 F 2.286
(esponds to any allocation)-.18 F(made dir)140 618 Q
(ectly after a call to)-.18 E F1(xf86PurgeUnlockedOffscreenAreas\(\))2.5
E F2(.)A(The function:)90 642 Q F1
(Bool xf86PurgeUnlockedOffscreenAreas\(ScreenPtr pScreen\))115 660 Q F2
.678(is pr)90 678 R .678(ovided as an extr)-.18 F .677(eme method to fr)
-.18 F .677(ee up of)-.18 F(fscr)-.18 E .677(een memory.)-.18 F .677
(This will r)5.677 F .677(emove all r)-.18 F(emovable)-.18 E F1(FBArea)
90 690 Q F2(allocations.)2.5 E(Initialization of the XFr)90 708 Q
(ee86 framebuf)-.18 E(fer manager is done via)-.18 E F1
(Bool xf86InitFBManager\(ScreenPtr pScreen, BoxPtr FullBox\))115 726 Q 0
Cg EP
%%Page: 41 41
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(XFree86\256 serv)90 48 Q
(er 4.x Design \(DRAFT\))-.15 E(41)264.86 E/F1 10/Courier@0 SF(FullBox)
90 96 Q/F2 10/Palatino-Roman@0 SF -.18(re)3.263 G(pr).18 E .763
(esents the ar)-.18 F .763(ea of the framebuf)-.18 F .763
(fer that the manager is allowed to manage.)-.18 F .764(This is)5.764 F
.377(typically a box with a width of)90 108 R F1(pScrn->displayWidth)
2.877 E F2 .377(and a height of as many lines as can be)2.877 F 1.658
(\214t within the total video memory)90 120 R 4.159(,h)-1.11 G(owever)
-4.159 E 4.159(,t)-.74 G 1.659(he driver can r)-4.159 F 1.659(eserve ar)
-.18 F 1.659(eas at the extr)-.18 F 1.659(emities by)-.18 F
(passing a smaller ar)90 132 Q(ea to the manager.)-.18 E F1
(xf86InitFBManager\(\))90 150 Q F2 .919(must be called befor)3.42 F
3.419(eX)-.18 G .919(AA is initialized since XAA uses the manager)-3.419
F(for it's pixmap cache.)90 162 Q .249(An alternative function is pr)90
180 R .249(ovided to allow the driver to initialize the framebuf)-.18 F
.25(fer manager with)-.18 F 2.5(aR)90 192 S(egion rather than a box.)
-2.5 E F1(Bool xf86InitFBManagerRegion\(ScreenPtr pScreen,)115 210 Q
(RegionPtr FullRegion\))175 234 Q(xf86InitFBManagerRegion\(\))90 252 Q
F2 4.875(,u)C(nlike)-4.875 E F1(xf86InitFBManager\(\))4.875 E F2 4.874
(,d)C 2.374(oes not r)-4.874 F 2.374(emove the ar)-.18 F(ea)-.18 E .857
(used for the visible scr)90 264 R .858(een so that ar)-.18 F .858
(ea should not be included in the r)-.18 F .858
(egion passed to the func-)-.18 F(tion.)90 276 Q F1
(xf86InitFBManagerRegion\(\))6.056 E F2 1.056
(is useful when non-contiguous ar)3.556 F 1.056(eas ar)-.18 F 3.556(ea)
-.18 G 1.056(vailable to be)-3.556 F .253(managed, and is r)90 288 R
(equir)-.18 E .253(ed when multiple framebuf)-.18 F .253(fers ar)-.18 F
2.753(es)-.18 G(tor)-2.753 E .254(ed in video memory \(as in the case)
-.18 F(wher)90 300 Q 2.5(ea)-.18 G 2.5(no)-2.5 G(verlay of a dif)-2.5 E
(fer)-.18 E(ent depth is stor)-.18 E(ed as a second framebuf)-.18 E
(fer in of)-.18 E(fscr)-.18 E(een memory\).)-.18 E/F3 16
/Helvetica-Bold@0 SF 4.448(13. Colormap)90 330 R(Handling)4.448 E F2
4.147(Ag)90 348 S 1.647(eneric colormap handling layer is pr)-4.147 F
1.647(ovided within the XFr)-.18 F 1.647(ee86 common layer.)-.18 F 1.646
(This layer)6.647 F .275(takes car)90 360 R 2.775(eo)-.18 G 2.775(fm)
-2.775 G .275(ost of the details, and only r)-2.775 F(equir)-.18 E .276
(es a function fr)-.18 F .276(om the driver that loads the har)-.18 F
(d-)-.18 E(war)90 372 Q 4.399(ep)-.18 G 1.899(alette when r)-4.399 F
(equir)-.18 E 4.399(ed. T)-.18 F 4.399(ou)-.92 G 1.898
(se the colormap layer)-4.399 F 4.398(,ad)-.74 G 1.898(river calls the)
-4.398 F F1(xf86HandleCol-)4.398 E(ormaps\(\))90 384 Q F2(function.)2.5
E F1(Bool xf86HandleColormaps\(ScreenPtr pScreen, int maxColors,)115 408
Q(int sigRGBbits, LoadPaletteFuncPtr loadPalette,)175 432 Q
(SetOverscanFuncPtr setOverscan, unsigned int flags\))175 456 Q F2 2.804
(This function must be called after the default colormap has been ini-)
140 480 R 3.665(tialised. The)140 492 R F1(pScrn->gamma)3.665 E F2 1.164
(\214eld must also be initialised, pr)3.665 F 1.164(eferably by)-.18 F
(calling)140 504 Q F1(xf86SetGamma\(\))4.703 E F2(.)A F1(maxColors)7.203
E F2 2.203(is the number of entries in the)4.703 F(palette.)140 516 Q F1
(sigRGBbits)6.734 E F2 1.733
(is the size in bits of each color component in the)4.234 F .755
(DAC's palette.)140 528 R F1(loadPalette)5.755 E F2 .755(is a driver)
3.255 F(-pr)-.18 E .756(ovided function for loading a)-.18 F .557
(colormap into the har)140 540 R(dwar)-.18 E .557
(e, and is described below.)-.18 F F1(setOverscan)5.557 E F2 .557(is an)
3.057 F 2.232(optional function that may be pr)140 552 R 2.233
(ovided when the overscan color is an)-.18 F .789(index fr)140 564 R
.789(om the standar)-.18 F 3.289(dL)-.18 G .788
(UT and when it needs to be adjusted to keep it)-3.289 F 1.693
(as close to black as possible.)140 576 R(The)6.693 E F1(setOverscan)
4.193 E F2 1.693(function pr)4.193 F 1.693(ograms the)-.18 F 1.884
(overscan index.)140 588 R 1.884
(It shouldn't normally be used for depths other than 8.)6.884 F F1
(setOverscan)140 600 Q F2 .252(should be set to)2.752 F F1(NULL)2.752 E
F2 .253(when it isn't needed.)2.752 F F1(flags)5.253 E F2 .253(may be)
2.753 F(set to the following \(which may be ORed together\):)140 612 Q
F1(CMAP_PALETTED_TRUECOLOR)140 630 Q F2 2.12(the T)165 654 R -.08(ru)-.9
G 2.119(eColor visual is paletted and is just a special case of).08 F
(Dir)165 666 Q 2.5(ectColor. This)-.18 F(\215ag is only valid for)2.5 E
F1(bpp > 8)2.5 E F2(.)A F1(CMAP_RELOAD_ON_MODE_SWITCH)140 684 Q F2 -.18
(re)165 708 S .331(load the colormap automatically after mode switches.)
.18 F .332(This is)5.332 F 2.337(useful for when the driver is r)165 720
R 2.336(esetting the har)-.18 F(dwar)-.18 E 4.836(ed)-.18 G(uring)-4.836
E .482(mode switches and corr)165 732 R .483(upting or erasing the har)
-.08 F(dwar)-.18 E 2.983(ep)-.18 G(alette.)-2.983 E 0 Cg EP
%%Page: 42 42
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(XFree86\256 serv)90 48 Q
(er 4.x Design \(DRAFT\))-.15 E(42)264.86 E/F1 10/Courier@0 SF
(CMAP_LOAD_EVEN_IF_OFFSCREEN)140 96 Q/F2 10/Palatino-Roman@0 SF -.18(re)
165 120 S 1.55(load the colormap even if the scr).18 F 1.55
(een is switched out of the)-.18 F 2.348(server's VC.)165 132 R 2.348
(The palette is)7.348 F/F3 10/Palatino-Italic@0 SF(not)4.848 E F2 -.18
(re)4.848 G 2.348(loaded when the scr).18 F 2.348(een is)-.18 F .319
(switched back in, nor after mode switches.)165 144 R .319
(This is useful when)5.319 F
(the driver needs to keep track of palette changes.)165 156 Q .291
(The colormap layer normally r)140 174 R .292
(eloads the palette after VT enters so it is not)-.18 F 1.848
(necessary for the driver to save and r)140 186 R(estor)-.18 E 4.348(et)
-.18 G 1.848(he palette when switching)-4.348 F(VT)140 198 Q 3.41
(s. The)-.9 F .911(driver must, however)3.411 F 3.411(,s)-.74 G .911
(till save the initial palette during server)-3.411 F(start up and r)140
210 Q(estor)-.18 E 2.5(ei)-.18 G 2.5(td)-2.5 G(uring server exit.)-2.5 E
F1 11.6(void LoadPalette\(ScrnInfoPtr pScrn, int numColors, int)115 228
R(*indices,)115 240 Q(LOCO *colors, VisualPtr pVisual\))175 264 Q
(LoadPalette\(\))140 288 Q F2 2.486(is a driver)4.986 F(-pr)-.18 E 2.486
(ovided function for loading a colormap)-.18 F .918(into har)140 300 R
(dwar)-.18 E(e.)-.18 E F1(colors)5.918 E F2 .917
(is the array of RGB values that r)3.418 F(epr)-.18 E .917
(esent the full)-.18 F(colormap.)140 312 Q F1(indices)6.105 E F2 1.105
(is a list of index values into the colors array.)3.605 F(These)6.105 E
1.745(indices indicate the entries that need to be updated.)140 324 R F1
(numColors)6.744 E F2 1.744(is the)4.244 F
(number of the indices to be updated.)140 336 Q F1
(void SetOverscan\(ScrnInfoPtr pScrn, int overscan\))115 354 Q
(SetOverscan\(\))140 378 Q F2 3.95(is a driver)6.45 F(-pr)-.18 E 3.95
(ovided function for pr)-.18 F 3.95(ogramming the)-.18 F F1(overscan)140
390 Q F2 3.197(index. As)3.197 F .697
(described above, it is normally only appr)3.197 F .697(opriate for)-.18
F 1.461(LUT modes wher)140 402 R 3.962(ea)-.18 G 1.462
(ll colormap entries ar)-3.962 F 3.962(ea)-.18 G 1.462
(vailable for the display)-3.962 F 3.962(,b)-1.11 G(ut)-3.962 E(wher)140
414 Q 3.48(eo)-.18 G .979
(ne of them is also used for the overscan \(typically 8bpp for VGA)-3.48
F 2.034(compatible LUT)140 426 R 4.534(s\). It)-.9 F 2.034(isn't r)4.534
F(equir)-.18 E 2.035(ed in cases wher)-.18 F 4.535(et)-.18 G 2.035
(he overscan ar)-4.535 F 2.035(ea is)-.18 F(never visible.)140 438 Q/F4
16/Helvetica-Bold@0 SF 4.448(14. DPMS)90 474 R(Extension)4.448 E F2 .761
(Support code for the DPMS extension is included in the XFr)90 492 R .76
(ee86 common layer.)-.18 F .76(This code pr)5.76 F(o-)-.18 E .838(vides\
 an interface between the main extension code, and a means for drivers \
to initialise DPMS)90 504 R .049(when they support it.)90 516 R .048(On\
e function is available to drivers to do this initialisation, and it is\
 always)5.049 F 1.062
(available, even when the DPMS extension is not supported by the cor)90
528 R 3.563(es)-.18 G 1.063(erver \(in which case it)-3.563 F -.18(re)90
540 S(turns a failur).18 E 2.5(er)-.18 G(esult\).)-2.68 E F1 4.4
(Bool xf86DPMSInit\(ScreenPtr pScreen, DPMSSetProcPtr set, int)115 564 R
(flags\))115 576 Q F2 .847(This function r)140 600 R .848
(egisters a driver's DPMS level pr)-.18 F .848(ogramming function)-.18 F
F1(set)3.348 E F2(.)A .445(It also checks)140 612 R F1(pScrn->options)
2.945 E F2 .445(for the "dpms" option, and when pr)2.945 F(esent)-.18 E
.756(marks DPMS as being enabled for that scr)140 624 R 3.257(een. The)
-.18 F F1(set)3.257 E F2 .757(function is called)3.257 F .834
(whenever the DPMS level changes, and is used to pr)140 636 R .833
(ogram the r)-.18 F(equested)-.18 E(level.)140 648 Q F1(flags)6.279 E F2
1.279(is curr)3.779 F 1.279(ently not used, and should be)-.18 F F1(0)
3.779 E F2 6.279(.I)C 3.78(ft)-6.279 G 1.28(he initialisation)-3.78 F
.597(fails for any r)140 660 R .597(eason, including when ther)-.18 F
3.097(ei)-.18 G 3.097(sn)-3.097 G 3.097(oD)-3.097 G .597
(PMS support in the cor)-3.097 F(e)-.18 E(server)140 672 Q 2.5(,t)-.74 G
(he function r)-2.5 E(eturns)-.18 E F1(FALSE)2.5 E F2(.)A 2.106
(Drivers that implement DPMS support must pr)90 696 R 2.107
(ovide the following function, that gets called)-.18 F
(when the DPMS level is changed:)90 708 Q 0 Cg EP
%%Page: 43 43
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(XFree86\256 serv)90 48 Q
(er 4.x Design \(DRAFT\))-.15 E(43)264.86 E/F1 10/Courier@0 SF
(void ChipDPMSSet\(ScrnInfoPtr pScrn, int level, int flags\))115 96 Q/F2
10/Palatino-Roman@0 SF(Pr)140 120 Q 1.168
(ogram the DPMS level speci\214ed by)-.18 F F1(level)3.668 E F2 6.168
(.V)C 1.168(alid values of)-7.088 F F1(level)3.668 E F2(ar)3.668 E(e)
-.18 E F1(DPMSModeOn)140 132 Q F2(,)A F1(DPMSModeStandby)5.333 E F2(,)A
F1(DPMSModeSuspend)5.333 E F2(,)A F1(DPMSModeOff)5.334 E F2(.)A
(These values ar)140 144 Q 2.5(ed)-.18 G(e\214ned in)-2.5 E F1
("extensions/dpms.h")2.5 E F2(.)A/F3 16/Helvetica-Bold@0 SF 4.448
(15. DGA)90 180 R(Extension)4.448 E F2 .489(Drivers can support the XFr)
90 198 R .489(ee86 Dir)-.18 F .489(ect Graphics Ar)-.18 F(chitectur)-.18
E 2.989(e\()-.18 G .488(DGA\) by \214lling out a str)-2.989 F(uctur)-.08
E 2.988(eo)-.18 G(f)-2.988 E
(function pointers and a list of modes and passing them to DGAInit.)90
210 Q F1(Bool DGAInit\(ScreenPtr pScreen, DGAFunctionPtr funcs,)115 234
Q(DGAModePtr modes, int num\))175 258 Q/F4 8/Courier@0 SF
(/** The DGAModeRec **/)160 280 Q(typedef struct {)160 300 Q(int num;)
169.6 310 Q(DisplayModePtr mode;)169.6 320 Q(int flags;)169.6 330 Q
(int imageWidth;)169.6 340 Q(int imageHeight;)169.6 350 Q
(int pixmapWidth;)169.6 360 Q(int pixmapHeight;)169.6 370 Q
(int bytesPerScanline;)169.6 380 Q(int byteOrder;)169.6 390 Q
(int depth;)169.6 400 Q(int bitsPerPixel;)169.6 410 Q
(unsigned long red_mask;)169.6 420 Q(unsigned long green_mask;)169.6 430
Q(unsigned long blue_mask;)169.6 440 Q(int viewportWidth;)169.6 450 Q
(int viewportHeight;)169.6 460 Q(int xViewportStep;)169.6 470 Q
(int yViewportStep;)169.6 480 Q(int maxViewportX;)169.6 490 Q
(int maxViewportY;)169.6 500 Q(int viewportFlags;)169.6 510 Q
(int offset;)169.6 520 Q(unsigned char *address;)169.6 530 Q
(int reserved1;)169.6 540 Q(int reserved2;)169.6 550 Q 4.8(}D)160 560 S
(GAModeRec, *DGAModePtr;)-4.8 E F1(num)140 578 Q F2(Can be ignor)165 596
Q 2.5(ed. The)-.18 F(DGA DDX will assign these numbers.)2.5 E F1(mode)
140 614 Q F2 2.5(Ap)165 632 S(ointer to the)-2.5 E F1(DisplayModeRec)2.5
E F2(for this mode.)2.5 E F1(flags)140 650 Q F2
(The following \215ags ar)165 674 Q 2.5(ed)-.18 G
(e\214ned and may be OR'd together:)-2.5 E F1(DGA_CONCURRENT_ACCESS)165
692 Q F2 .307(Indicates that the driver supports concurr)190 716 R .307
(ent graph-)-.18 F(ics accelerator and linear framebuf)190 728 Q
(fer access.)-.18 E 0 Cg EP
%%Page: 44 44
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(XFree86\256 serv)90 48 Q
(er 4.x Design \(DRAFT\))-.15 E(44)264.86 E/F1 10/Courier@0 SF
(DGA_FILL_RECT)165 96 Q(DGA_BLIT_RECT)165 120 Q(DGA_BLIT_RECT_TRANS)165
144 Q/F2 10/Palatino-Roman@0 SF 4.91
(Indicates that the driver supports the FillRect,)190 168 R
(BlitRect or BlitT)190 180 Q(ransRect functions in this mode.)-.9 E F1
(DGA_PIXMAP_AVAILABLE)165 198 Q F2 .686
(Indicates that Xlib may be used on the framebuf)190 222 R(fer.)-.18 E
.2(This \215ag will usually be set unless the driver wishes)190 234 R
(to pr)190 246 Q(ohibit this for some r)-.18 E(eason.)-.18 E F1
(DGA_INTERLACED)165 264 Q(DGA_DOUBLESCAN)165 288 Q F2 2.434
(Indicates that these ar)190 312 R 4.934(ei)-.18 G 2.435
(nterlaced or double scan)-4.934 F(modes.)190 324 Q F1(imageWidth)140
348 Q(imageHeight)140 372 Q F2 .008(These ar)165 396 R 2.508(et)-.18 G
.008(he dimensions of the linear framebuf)-2.508 F .007
(fer accessible by)-.18 F(the client.)165 408 Q F1(pixmapWidth)140 426 Q
(pixmapHeight)140 450 Q F2 .272(These ar)165 474 R 2.772(et)-.18 G .272
(he dimensions of the ar)-2.772 F .272(ea of the framebuf)-.18 F .272
(fer accessi-)-.18 F(ble by the graphics accelerator.)165 486 Q F1
(bytesPerScanline)140 504 Q F2(Pitch of the framebuf)165 528 Q
(fer in bytes.)-.18 E F1(byteOrder)140 546 Q F2(Usually the same as)165
570 Q F1(pScrn->imageByteOrder)2.5 E F2(.)A F1(depth)140 588 Q F2
(The depth of the framebuf)165 612 Q(fer in this mode.)-.18 E F1
(bitsPerPixel)140 630 Q F2(The number of bits per pixel in this mode.)
165 654 Q F1(red_mask)140 672 Q(green_mask)140 696 Q(blue_mask)140 720 Q
0 Cg EP
%%Page: 45 45
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(XFree86\256 serv)90 48 Q
(er 4.x Design \(DRAFT\))-.15 E(45)264.86 E/F1 10/Palatino-Roman@0 SF
(The RGB masks for this mode, if applicable.)165 96 Q/F2 10/Courier@0 SF
(viewportWidth)140 114 Q(viewportHeight)140 138 Q F1 3.081
(Dimensions of the visible part of the framebuf)165 162 R 5.581
(fer. Usually)-.18 F F2(mode->HDisplay)165 174 Q F1(and)2.5 E F2
(mode->VDisplay)2.5 E F1(.)A F2(xViewportStep)140 192 Q(yViewportStep)
140 216 Q F1 1.462
(The granularity of x and y viewport positions that the driver)165 240 R
(supports in this mode.)165 252 Q F2(maxViewportX)140 270 Q
(maxViewportY)140 294 Q F1 2.04
(The maximum viewport position supported by the driver in)165 318 R
(this mode.)165 330 Q F2(viewportFlags)140 348 Q F1
(The following may be OR'd together:)165 372 Q F2(DGA_FLIP_IMMEDIATE)165
390 Q F1(The driver supports immediate viewport changes.)190 414 Q F2
(DGA_FLIP_RETRACE)165 444 Q F1
(The driver supports viewport changes at r)190 468 Q(etrace.)-.18 E F2
(offset)140 492 Q F1 .78(The of)165 516 R .78
(fset into the linear framebuf)-.18 F .78(fer that corr)-.18 F .78
(esponds to pixel)-.18 F(\(0,0\) for this mode.)165 528 Q F2(address)140
546 Q F1 .014(The virtual addr)165 570 R .014(ess of the framebuf)-.18 F
.014(fer as mapped by the driver.)-.18 F
(This is needed when DGA_PIXMAP_A)165 582 Q -1.11(VA)-1.11 G
(ILABLE is set.)1.11 E/F3 8/Courier@0 SF(/** The DGAFunctionRec **/)160
598 Q(typedef struct {)160 618 Q(Bool \(*OpenFramebuffer\)\()169.6 628 Q
(ScrnInfoPtr pScrn,)193.6 638 Q(char **name,)193.6 648 Q
(unsigned int *mem,)193.6 658 Q(unsigned int *size,)193.6 668 Q
(unsigned int *offset,)193.6 678 Q(unsigned int *extra)193.6 688 Q(\);)
169.6 698 Q(void \(*CloseFramebuffer\)\(ScrnInfoPtr pScrn\);)169.6 708 Q
(Bool \(*SetMode\)\(ScrnInfoPtr pScrn, DGAModePtr pMode\);)169.6 718 Q
(void \(*SetViewport\)\(ScrnInfoPtr pScrn, int x, int y, int flags\);)
169.6 728 Q 4.8(int \(*GetViewport\)\(ScrnInfoPtr)169.6 738 R(pScrn\);)
4.8 E 0 Cg EP
%%Page: 46 46
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(XFree86\256 serv)90 48 Q
(er 4.x Design \(DRAFT\))-.15 E(46)264.86 E/F1 8/Courier@0 SF
(void \(*Sync\)\(ScrnInfoPtr\);)169.6 94 Q(void \(*FillRect\)\()169.6
104 Q(ScrnInfoPtr pScrn,)193.6 114 Q(int x, int y, int w, int h,)193.6
124 Q(unsigned long color)193.6 134 Q(\);)169.6 144 Q
(void \(*BlitRect\)\()169.6 154 Q(ScrnInfoPtr pScrn,)193.6 164 Q
(int srcx, int srcy,)193.6 174 Q(int w, int h,)193.6 184 Q
(int dstx, int dsty)193.6 194 Q(\);)169.6 204 Q
(void \(*BlitTransRect\)\()169.6 214 Q(ScrnInfoPtr pScrn,)193.6 224 Q
(int srcx, int srcy,)193.6 234 Q(int w, int h,)193.6 244 Q
(int dstx, int dsty,)193.6 254 Q(unsigned long color)193.6 264 Q(\);)
169.6 274 Q 4.8(}D)160 284 S(GAFunctionRec, *DGAFunctionPtr;)-4.8 E/F2
10/Courier@0 SF
(Bool OpenFramebuffer \(pScrn, name, mem, size, offset, extra\))115 308
Q(OpenFramebuffer\(\))140 332 Q/F3 10/Palatino-Roman@0 SF .612
(should pass the client everything it needs to know)3.112 F .859
(to be able to open the framebuf)140 344 R 3.359(fer. These)-.18 F .859
(parameters ar)3.359 F 3.359(eO)-.18 G 3.359(Ss)-3.359 G .859
(peci\214c and)-3.359 F(their meanings ar)140 356 Q 2.5(et)-.18 G 2.5
(ob)-2.5 G 2.5(ei)-2.5 G(nterpr)-2.5 E
(eted by an OS speci\214c client library.)-.18 E F2(name)140 374 Q F3
1.181(The name of the device to open or)165 398 R F2(NULL)3.682 E F3
1.182(if ther)3.682 F 3.682(ei)-.18 G 3.682(sn)-3.682 G 3.682(os)-3.682
G(pecial)-3.682 E 2.146(device to open.)165 410 R(A)7.146 E F2(NULL)
4.646 E F3 2.145(name tells the client that it should)4.646 F .412
(open whatever device one would usually open to access physi-)165 422 R
(cal memory.)165 434 Q F2(mem)140 464 Q F3 2.636(The physical addr)165
488 R 2.636(ess of the start of the framebuf)-.18 F(fer)-.18 E 5.136(,o)
-.74 G 5.136(rt)-5.136 G(he)-5.136 E F2(mmap\(2\))165 500 Q F3(of)4.536
E 2.037(fset into the device designated by)-.18 F F2(name)4.537 E F3
7.037(.T)C 2.037(his is)-7.037 F .668
(actually a pointer to two consecutive 32-bit values.)165 512 R(Regar)
5.667 E(dless)-.18 E 1.808(of har)165 524 R(dwar)-.18 E 4.308(ea)-.18 G
-.18(rc)-4.308 G(hitectur).18 E 1.808
(e, the \214rst of these is to be set to the)-.18 F(low-or)165 536 Q
.946(der 32 bits of the addr)-.18 F .946(ess or of)-.18 F .946
(fset, and the second is to)-.18 F(be set to the high-or)165 548 Q
(der 32 bits.)-.18 E F2(size)140 578 Q F3(The size of the framebuf)165
602 Q(fer in bytes.)-.18 E F2(offset)140 632 Q F3(Any of)165 656 Q
(fset into the device, if applicable.)-.18 E F2(flags)140 686 Q F3 2.892
(Any additional information that the client may need.)165 710 R(Cur)
7.893 E(-)-.18 E -.18(re)165 722 S(ntly).18 E 2.5(,o)-1.11 G(nly the)
-2.5 E F2(DGA_NEED_ROOT)2.5 E F3(\215ag is de\214ned.)2.5 E 0 Cg EP
%%Page: 47 47
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(XFree86\256 serv)90 48 Q
(er 4.x Design \(DRAFT\))-.15 E(47)264.86 E/F1 10/Courier@0 SF
(void CloseFramebuffer \(pScrn\))115 96 Q(CloseFramebuffer\(\))140 120 Q
/F2 10/Palatino-Roman@0 SF(mer)4.209 E 1.709
(ely informs the driver \(if it even car)-.18 F 1.708(es\) that)-.18 F
.942(client no longer needs to access the framebuf)140 132 R .942
(fer dir)-.18 F 3.442(ectly. This)-.18 F .942(function is)3.442 F
(optional.)140 144 Q F1(Bool SetMode \(pScrn, pMode\))115 162 Q
(SetMode\(\))140 186 Q F2 .449
(tells the driver to initialize the mode passed to it.)2.949 F(If)5.448
E F1(pMode)2.948 E F2(is)2.948 E F1(NULL)140 198 Q F2 2.5(,t)C
(hen the driver should r)-2.5 E(estor)-.18 E 2.5(et)-.18 G
(he original pr)-2.5 E(e-DGA mode.)-.18 E F1
(void SetViewport \(pScrn, x, y, flags\))115 216 Q(SetViewport\(\))140
240 Q F2 .196
(tells the driver to make the upper left-hand corner of the)2.696 F .455
(visible scr)140 252 R .455(een corr)-.18 F .455(espond to coor)-.18 F
(dinate)-.18 E F1(\(x,y\))2.954 E F2 .454(on the framebuf)2.954 F(fer.)
-.18 E F1(Flags)5.454 E F2(curr)140 264 Q(ently de\214ned ar)-.18 E(e:)
-.18 E F1(DGA_FLIP_IMMEDIATE)140 282 Q F2
(The viewport change should occur immediately.)165 306 Q F1
(DGA_FLIP_RETRACE)140 330 Q F2 1.523
(The viewport change should occur at the vertical r)165 354 R 1.524
(etrace, but)-.18 F(this function should r)165 366 Q
(eturn sooner if possible.)-.18 E(The)140 396 Q F1(\(x,y\))3.24 E F2 .74
(locations will be passed as the client speci\214ed them, however)3.24 F
(,)-.74 E .229(the driver is expected to r)140 408 R .229
(ound these locations down to the next supported)-.18 F .129
(location as speci\214ed by the)140 420 R F1(xViewportStep)2.629 E F2
(and)2.629 E F1(yViewportStep)2.629 E F2 .128(for the)2.629 F(curr)140
432 Q(ent mode.)-.18 E F1(int GetViewport \(pScrn\))115 450 Q
(GetViewport\(\))140 474 Q F2 .451(gets the curr)2.951 F .452
(ent page \215ip status.)-.18 F .452(Set bits in the r)5.452 F(eturned)
-.18 E .343(int corr)140 486 R .343(espond to viewport change r)-.18 F
.343(equests still pending.)-.18 F .343(For instance, set)5.343 F 1.195
(bit zer)140 498 R 3.695(oi)-.18 G 3.695(ft)-3.695 G 1.195(he last SetV)
-3.695 F 1.196(iewport r)-.55 F 1.196
(equest is still pending, bit one if the one)-.18 F(befor)140 510 Q 2.5
(et)-.18 G(hat is still pending, etc.)-2.5 E F1(void Sync \(pScrn\))115
528 Q F2 .614(This function should ensur)140 552 R 3.113(et)-.18 G .613
(hat any graphics accelerator operations have)-3.113 F 3.449
(\214nished. This)140 564 R .949(function should not r)3.449 F .949
(eturn until the graphics accelerator is)-.18 F(idle.)140 576 Q F1
(void FillRect \(pScrn, x, y, w, h, color\))115 594 Q F2 1.136
(This optional function should \214ll a r)140 618 R(ectangle)-.18 E F1
7.135(wxh)3.635 G F2 1.135(located at)-3.5 F F1(\(x,y\))3.635 E F2(in)
3.635 E(the given color.)140 630 Q F1
(void BlitRect \(pScrn, srcx, srcy, w, h, dstx, dsty\))115 648 Q F2
5.895(This optional function should copy an ar)140 672 R(ea)-.18 E F1
11.896(wxh)8.396 G F2 5.896(located at)-3.5 F F1(\(srcx,srcy\))140 684 Q
F2 .565(to location)3.065 F F1(\(dstx,dsty\))3.065 E F2 5.565(.T)C .564
(his function will need to han-)-5.565 F(dle copy dir)140 696 Q
(ections as appr)-.18 E(opriate.)-.18 E F1
(void BlitTransRect \(pScrn, srcx, srcy, w, h, dstx, dsty, color\))115
714 Q F2 2.259(This optional function is the same as BlitRect except th\
at pixels in the)140 738 R 0 Cg EP
%%Page: 48 48
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(XFree86\256 serv)90 48 Q
(er 4.x Design \(DRAFT\))-.15 E(48)264.86 E/F1 10/Palatino-Roman@0 SF
(sour)140 96 Q(ce corr)-.18 E(esponding to the color key)-.18 E/F2 10
/Courier@0 SF(color)2.5 E F1(should be skipped.)2.5 E/F3 16
/Helvetica-Bold@0 SF 4.448(16. The)90 132 R
(XFree86 X Video Extension \(Xv\) De)4.448 E(vice Depen-)-.24 E(dent La)
90 150 Q -.16(ye)-.32 G(r).16 E F1(XFr)90 168 Q .315(ee86 of)-.18 F .315
(fers the X V)-.18 F .315(ideo Extension which allows clients to tr)-.55
F .316(eat video as any another primitive)-.18 F 1.32(and `)90 180 R
1.32(`Put'' video into drawables.)-.37 F 1.319
(By default, the extension r)6.319 F 1.319
(eports no video adaptors as being)-.18 F .294
(available since the DDX layer has not been initialized.)90 192 R .295
(The driver can initialize the DDX layer by)5.294 F .677
(\214lling out one or mor)90 204 R(e)-.18 E F2(XF86VideoAdaptorRecs)
3.176 E F1 .676(as described later in this document and pass-)3.176 F
(ing a list of)90 216 Q F2(XF86VideoAdaptorPtr)2.5 E F1
(pointers to the following function:)2.5 E F2(Bool xf86XVScreenInit\()
115 234 Q(ScreenPtr pScreen,)175 258 Q(XF86VideoAdaptorPtr *adaptPtrs,)
175 282 Q(int num\))175 306 Q F1 .013
(After doing this, the extension will r)90 324 R .013
(eport video adaptors as being available, pr)-.18 F .014
(oviding the data in)-.18 F 1.079(their r)90 336 R(espective)-.18 E F2
(XF86VideoAdaptorRecs)3.579 E F1 1.079(was valid.)3.579 F F2
(xf86XVScreenInit\(\))6.079 E/F4 10/Palatino-Italic@0 SF(copies)3.579 E
F1 1.078(data fr)3.578 F(om)-.18 E 1.408(the str)90 348 R(uctur)-.08 E
3.908(ep)-.18 G 1.408(assed to it so the driver may fr)-3.908 F 1.408
(ee it after the initialization.)-.18 F 1.409(At the moment, the)6.409 F
2.069(DDX only supports r)90 360 R 2.068(endering into W)-.18 F 2.068
(indow drawables.)-.55 F 2.068(Pixmap r)7.068 F 2.068
(endering will be supported)-.18 F(after a suf)90 372 Q
(\214cient survey of suitable har)-.18 E(dwar)-.18 E 2.5(ei)-.18 G 2.5
(sc)-2.5 G(ompleted.)-2.5 E(The)90 390 Q F2(XF86VideoAdaptorRec)2.5 E F1
(:)A/F5 8/Courier@0 SF(typedef struct {)135 412 Q(unsigned int type;)171
422 Q(int flags;)171 432 Q(char *name;)171 442 Q(int nEncodings;)171 452
Q(XF86VideoEncodingPtr pEncodings;)171 462 Q(int nFormats;)171 472 Q
(XF86VideoFormatPtr pFormats;)171 482 Q(int nPorts;)171 492 Q
(DevUnion *pPortPrivates;)171 502 Q(int nAttributes;)171 512 Q
(XF86AttributePtr pAttributes;)171 522 Q(int nImages;)171 532 Q
(XF86ImagePtr pImages;)171 542 Q(PutVideoFuncPtr PutVideo;)171 552 Q
(PutStillFuncPtr PutStill;)171 562 Q(GetVideoFuncPtr GetVideo;)171 572 Q
(GetStillFuncPtr GetStill;)171 582 Q(StopVideoFuncPtr StopVideo;)171 592
Q(SetPortAttributeFuncPtr SetPortAttribute;)171 602 Q
(GetPortAttributeFuncPtr GetPortAttribute;)171 612 Q
(QueryBestSizeFuncPtr QueryBestSize;)171 622 Q
(PutImageFuncPtr PutImage;)171 632 Q
(QueryImageAttributesFuncPtr QueryImageAttributes;)171 642 Q 4.8(}X)135
652 S(F86VideoAdaptorRec, *XF86VideoAdaptorPtr;)-4.8 E F1
(Each adaptor will have its own XF86V)115 670 Q 2.5(ideoAdaptorRec. The)
-.55 F(\214elds ar)2.5 E 2.5(ea)-.18 G 2.5(sf)-2.5 G(ollows:)-2.5 E F2
(type)115 688 Q F1
(This can be any of the following \215ags OR'd together.)140 712 Q F2
-3.5(XvInputMask XvOutputMask)140 730 R 0 Cg EP
%%Page: 49 49
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(XFree86\256 serv)90 48 Q
(er 4.x Design \(DRAFT\))-.15 E(49)264.86 E/F1 10/Palatino-Roman@0 SF
1.979(These r)165 96 R 1.979(efer to the tar)-.18 F 1.979
(get drawable and ar)-.18 F 4.479(es)-.18 G 1.979(imilar to a W)-4.479 F
(in-)-.55 E 1.213(dow's class.)165 108 R/F2 10/Courier@0 SF(XvInputMask)
3.713 E F1 1.212(indicates that the adaptor can put)3.713 F 3.973
(video into a drawable.)165 120 R F2(XvOutputMask)8.973 E F1 3.973
(indicates that the)6.473 F(adaptor can get video fr)165 132 Q
(om a drawable.)-.18 E F2 -3.5(XvVideoMask XvStillMask XvImageMask)140
150 R F1 1.46
(These indicate that the adaptor supports video, still or image)165 174
R(primitives r)165 186 Q(espectively.)-.18 E F2 -3.5
(XvWindowMask XvPixmapMask)140 204 R F1 .532
(These indicate the types of drawables the adaptor is capable of)165 228
R -.18(re)165 240 S 1.152(ndering into.).18 F 1.151
(At the moment, Pixmap r)6.151 F 1.151(endering is not sup-)-.18 F
(ported and the)165 252 Q F2(XvPixmapMask)2.5 E F1(\215ag is ignor)2.5 E
(ed.)-.18 E F2(flags)115 276 Q F1(Curr)140 300 Q(ently)-.18 E 2.5(,t)
-1.11 G(he following \215ags ar)-2.5 E 2.5(ed)-.18 G(e\214ned:)-2.5 E F2
(VIDEO_NO_CLIPPING)140 318 Q F1 .092
(This indicates that the video adaptor does not support clipping.)165
342 R 1.756(The driver will never r)165 354 R 1.756(eceive `)-.18 F
1.755(`Put'' r)-.37 F 1.755(equests wher)-.18 F 4.255(el)-.18 G 1.755
(ess than)-4.255 F 3.731(the entir)165 366 R 6.231(ea)-.18 G -.18(re)
-6.231 G 6.231(ad).18 G 3.731(etermined by)-6.231 F F2(drw_x)6.231 E F1
(,)A F2(drw_y)6.231 E F1(,)A F2(drw_w)6.232 E F1(and)6.232 E F2(drw_h)
165 378 Q F1 1.517(is visible.)4.017 F 1.517
(This \215ag does not apply to `)6.517 F 1.517(`Get'' r)-.37 F(equests.)
-.18 E(Har)165 390 Q(dwar)-.18 E 3.044(et)-.18 G .544
(hat is incapable of clipping `)-3.044 F .544(`Gets'' may punt or get)
-.37 F(the extents of the clipping r)165 402 Q(egion passed to it.)-.18
E F2(VIDEO_INVERT_CLIPLIST)140 420 Q F1 .482
(This indicates that the video driver r)165 444 R(equir)-.18 E .482
(es the clip list to con-)-.18 F 2.415(tain the r)165 456 R 2.415
(egions which ar)-.18 F 4.916(eo)-.18 G(bscur)-4.916 E 2.416
(ed rather than the r)-.18 F(egions)-.18 E(which ar)165 468 Q 2.5(ea)
-.18 G .36 -.18(re v)-2.5 H(isible.).18 E F2(VIDEO_OVERLAID_STILLS)140
486 Q F1 .308(Implementing PutStill for har)165 510 R(dwar)-.18 E 2.808
(et)-.18 G .308(hat does video as an over)-2.808 F(-)-.18 E 1.809
(lay can be awkwar)165 522 R 4.309(ds)-.18 G 1.809
(ince it's unclear how long to leave the)-4.309 F 1.736(video up for.)
165 534 R 1.735(When this \215ag is set, StopV)6.736 F 1.735
(ideo will be called)-.55 F .118
(whenever the destination gets clipped or moved so that the still)165
546 R(can be left up until then.)165 558 Q F2(VIDEO_OVERLAID_IMAGES)140
576 Q F1(Same as)165 600 Q F2(VIDEO_OVERLAID_STILLS)2.5 E F1
(but for images.)2.5 E F2(VIDEO_CLIP_TO_VIEWPORT)140 618 Q F1 2.458
(Indicates that the clip r)165 642 R 2.458
(egion passed to the driver functions)-.18 F .162
(should be clipped to the visible portion of the scr)165 654 R .163
(een in the case)-.18 F(wher)165 666 Q 2.5(et)-.18 G
(he viewport is smaller than the virtual desktop.)-2.5 E F2(name)115 690
Q F1(The name of the adaptor.)140 714 Q F2(nEncodings)115 732 Q 0 Cg EP
%%Page: 50 50
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(XFree86\256 serv)90 48 Q
(er 4.x Design \(DRAFT\))-.15 E(50)264.86 E/F1 10/Courier@0 SF
(pEncodings)115 96 Q/F2 10/Palatino-Roman@0 SF 2.198
(The number of encodings the adaptor is capable of and pointer to the)
140 120 R F1(XF86VideoEncodingRec)140 132 Q F2 9.912(array. The)9.912 F
F1(XF86VideoEncodingRec)9.913 E F2(is)9.913 E 1.221(described later on.)
140 144 R 1.221(For drivers that only support XvImages ther)6.221 F
3.721(es)-.18 G(hould)-3.721 E 2.084
(be an encoding named "XV_IMAGE" and the width and height should)140 156
R(specify the maximum size sour)140 168 Q(ce image supported.)-.18 E F1
(nFormats)115 186 Q(pFormats)115 210 Q F2 3.121
(The number of formats the adaptor is capable of and pointer to the)140
234 R F1(XF86VideoFormatRec)140 246 Q F2 4.156(array. The)4.156 F F1
(XF86VideoFormatRec)4.156 E F2 1.656(is described)4.156 F(later on.)140
258 Q F1(nPorts)115 276 Q(pPortPrivates)115 300 Q F2 1.842
(The number of ports is the number of separate data str)140 324 R 1.841
(eams which the)-.18 F 1.102(adaptor can handle simultaneously.)140 336
R 1.103(If you have mor)6.103 F 3.603(et)-.18 G 1.103(han one port, the)
-3.603 F .999(adaptor is expected to be able to r)140 348 R .999
(ender into mor)-.18 F 3.498(et)-.18 G .998(han one window at a)-3.498 F
(time.)140 360 Q F1(pPortPrivates)5.849 E F2 .849
(is an array of pointers or ints - one for each port.)3.349 F 4.57(Ap)
140 372 S 2.07
(ort's private data will be passed to the driver any time the port is)
-4.57 F -.18(re)140 384 S .191
(quested to do something like put the video or stop the video.).18 F
.192(In the case)5.192 F(wher)140 396 Q 4.163(et)-.18 G(her)-4.163 E
4.163(em)-.18 G 1.662
(ay be many ports, this enables the driver to know which)-4.163 F 2.985
(port the r)140 408 R 2.985(equest is intended for.)-.18 F 2.986
(Most commonly)7.985 F 5.486(,t)-1.11 G 2.986(his will contain a)-5.486
F .47(pointer to the data str)140 420 R(uctur)-.08 E 2.97(ec)-.18 G .47
(ontaining information about the port.)-2.97 F .47(In Xv)5.47 F(,)-1.11
E .67(all ports on a particular adaptor ar)140 432 R 3.171(ee)-.18 G
.671(xpected to be identical in their func-)-3.171 F(tionality.)140 444
Q F1(nAttributes)115 462 Q(pAttributes)115 486 Q F2 1.181
(The number of attributes r)140 510 R 1.181
(ecognized by the adaptor and a pointer to the)-.18 F 2.498(array of)140
522 R F1(XF86AttributeRecs)4.998 E F2 7.498(.T)C(he)-7.498 E F1
(XF86AttributeRec)4.998 E F2 2.499(is described)4.999 F(later on.)140
534 Q F1(nImages)115 552 Q(pImages)115 576 Q F2 .878(The number of)140
600 R F1(XF86ImageRecs)3.378 E F2 .878
(supported by the adaptor and a pointer)3.378 F 1.721(to the array of)
140 612 R F1(XF86ImageRecs)4.221 E F2 4.221(.T)C(he)-4.221 E F1
(XF86ImageRec)4.221 E F2 1.721(is described later)4.221 F(on.)140 624 Q
F1 2(PutVideo PutStill GetVideo GetStill StopVideo SetPortAttribute)115
642 R(GetPortAttribute QueryBestSize PutImage QueryImageAttributes)115
654 Q F2 .002(These functions de\214ne the DDX->driver interface.)140
678 R .002(In each case, the pointer)5.002 F F1(data)140 690 Q F2 2.296
(is passed to the driver.)4.796 F 2.296
(This is the port private for that port as)7.296 F .388
(described above.)140 702 R .388(All \214elds ar)5.388 F 2.888(er)-.18 G
(equir)-3.068 E .388(ed except under the following condi-)-.18 F(tions:)
140 714 Q(1.)152.5 732 Q F1(PutVideo)10 E F2(,)A F1(PutStill)6.343 E F2
3.843(and the image r)6.343 F(outines)-.18 E F1(PutImage)6.343 E F2(and)
6.342 E 0 Cg EP
%%Page: 51 51
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(XFree86\256 serv)90 48 Q
(er 4.x Design \(DRAFT\))-.15 E(51)264.86 E/F1 10/Courier@0 SF
(QueryImageAttributes)170 96 Q/F2 10/Palatino-Roman@0 SF(ar)3.297 E
3.297(en)-.18 G .797(ot r)-3.297 F(equir)-.18 E .797
(ed when the adaptor type)-.18 F(does not contain)170 108 Q F1
(XvInputMask)2.5 E F2(.)A(2.)152.5 126 Q F1(GetVideo)10 E F2(and)3.35 E
F1(GetStill)3.35 E F2(ar)3.35 E 3.35(en)-.18 G .85(ot r)-3.35 F(equir)
-.18 E .85(ed when the adaptor type)-.18 F(does not contain)170 138 Q F1
(XvOutputMask)2.5 E F2(.)A(3.)152.5 156 Q F1(GetVideo)10 E F2(and)3.35 E
F1(PutVideo)3.35 E F2(ar)3.35 E 3.35(en)-.18 G .85(ot r)-3.35 F(equir)
-.18 E .85(ed when the adaptor type)-.18 F(does not contain)170 168 Q F1
(XvVideoMask)2.5 E F2(.)A(4.)152.5 186 Q F1(GetStill)10 E F2(and)3.35 E
F1(PutStill)3.35 E F2(ar)3.35 E 3.35(en)-.18 G .85(ot r)-3.35 F(equir)
-.18 E .85(ed when the adaptor type)-.18 F(does not contain)170 198 Q F1
(XvStillMask)2.5 E F2(.)A(5.)152.5 216 Q F1(PutImage)10 E F2(and)4.405 E
F1(QueryImageAttributes)4.405 E F2(ar)4.405 E 4.405(en)-.18 G 1.905
(ot r)-4.405 F(equir)-.18 E 1.905(ed when)-.18 F
(the adaptor type does not contain)170 228 Q F1(XvImageMask)2.5 E F2(.)A
-.55(Wi)140 246 S 1.497(th the exception of).55 F F1
(QueryImageAttributes)3.997 E F2 3.997(,t)C 1.497(hese functions should)
-3.997 F -.18(re)140 258 S(turn).18 E F1(Success)4.412 E F2 1.912
(if the operation was completed successfully.)4.412 F 1.913(They can)
6.913 F -.18(re)140 270 S(turn).18 E F1(XvBadAlloc)2.609 E F2
(otherwise.)2.609 E F1(QueryImageAttributes)2.608 E F2 -.18(re)2.608 G
.108(turns the size).18 F(of the XvImage queried.)140 282 Q .023(If the)
140 300 R F1(VIDEO_NO_CLIPPING)2.523 E F2 .024(\215ag is set, the)2.523
F F1(clipBoxes)2.524 E F2 .024(may be ignor)2.524 F .024(ed by)-.18 F
1.366(the driver.)140 312 R F1(ClipBoxes)6.366 E F2 1.366(is an)3.866 F
F1(X-Y)3.866 E F2 1.365(banded r)3.865 F 1.365
(egion identical to those used)-.18 F(thr)140 324 Q .77
(oughout the server.)-.18 F .77(The clipBoxes r)5.77 F(epr)-.18 E .77
(esent the visible portions of the)-.18 F(ar)140 336 Q 2.439
(ea determined by)-.18 F F1(drw_x)4.939 E F2(,)A F1(drw_y)4.939 E F2(,)A
F1(drw_w)4.939 E F2(and)4.939 E F1(drw_h)4.939 E F2 2.439
(in the Get/Put)4.939 F 3.089(function. The)140 348 R .589(boxes ar)
3.089 F 3.089(ei)-.18 G 3.089(ns)-3.089 G(cr)-3.089 E .589(een coor)-.18
F .589(dinates, ar)-.18 F 3.089(eg)-.18 G .589(uaranteed not to over)
-3.089 F(-)-.18 E .843(lap and an empty r)140 360 R .843
(egion will never be passed.)-.18 F .843(If the driver has speci\214ed)
5.843 F F1(VIDEO_INVERT_CLIPLIST)140 372 Q F2(,)A F1(clipBoxes)5.408 E
F2 2.909(will indicate the ar)5.408 F 2.909(eas of the)-.18 F
(primitive which ar)140 384 Q 2.5(eo)-.18 G(bscur)-2.5 E
(ed rather than the ar)-.18 E(eas visible.)-.18 E F1 6(typedef int)115
402 R(\(* PutVideoFuncPtr\)\( ScrnInfoPtr pScrn,)6 E
(short vid_x, short vid_y, short drw_x, short drw_y,)175 426 Q
(short vid_w, short vid_h, short drw_w, short drw_h,)175 450 Q
(RegionPtr clipBoxes, pointer data \))175 474 Q F2 .384
(This indicates that the driver should take a subsection)140 498 R F1
(vid_w)2.883 E F2(by)2.883 E F1(vid_h)2.883 E F2(at)2.883 E(location)140
510 Q F1(\(vid_x,vid_y\))2.967 E F2(fr)2.967 E .467(om the video str)
-.18 F .467(eam and dir)-.18 F .468(ect it into the r)-.18 F(ec-)-.18 E
(tangle)140 522 Q F1(drw_w)2.567 E F2(by)2.567 E F1(drw_h)2.567 E F2
.067(at location)2.567 F F1(\(drw_x,drw_y\))2.567 E F2 .067(on the scr)
2.567 F .067(een, scaling)-.18 F 2.319(as necessary.)140 534 R 2.319
(Due to the lar)7.319 F 2.319
(ge variations in capabilities of the various)-.18 F(har)140 546 Q(dwar)
-.18 E 2.551(ee)-.18 G .051
(xpected to be used with this extension, it is not expected that all)
-2.551 F(har)140 558 Q(dwar)-.18 E 4.627(ew)-.18 G 2.128
(ill be able to do this exactly as described.)-4.627 F 2.128
(In that case the)7.128 F .734(driver should just do `)140 570 R .733
(`the best it can,'' scaling as closely to the tar)-.37 F .733(get r)
-.18 F(ec-)-.18 E 2.075(tangle as it can without r)140 582 R 2.075
(endering outside of it.)-.18 F 2.076(In the worst case, the)7.076 F
(driver can opt to just not turn on the video.)140 594 Q F1 6
(typedef int)115 612 R(\(* PutStillFuncPtr\)\( ScrnInfoPtr pScrn,)6 E
(short vid_x, short vid_y, short drw_x, short drw_y,)175 636 Q
(short vid_w, short vid_h, short drw_w, short drw_h,)175 660 Q
(RegionPtr clipBoxes, pointer data \))175 684 Q F2 1.591
(This is same as)140 708 R F1(PutVideo)4.091 E F2 1.591
(except that the driver should place only one)4.091 F(frame fr)140 720 Q
(om the str)-.18 E(eam on the scr)-.18 E(een.)-.18 E F1
(typedef int \(* GetVideoFuncPtr\)\( ScrnInfoPtr pScrn,)115 738 Q 0 Cg
EP
%%Page: 52 52
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(XFree86\256 serv)90 48 Q
(er 4.x Design \(DRAFT\))-.15 E(52)264.86 E/F1 10/Courier@0 SF
(short vid_x, short vid_y, short drw_x, short drw_y,)175 96 Q
(short vid_w, short vid_h, short drw_w, short drw_h,)175 120 Q
(RegionPtr clipBoxes, pointer data \))175 144 Q/F2 10/Palatino-Roman@0
SF .019(This is same as)140 168 R F1(PutVideo)2.519 E F2 .019
(except that the driver gets video fr)2.519 F .02(om the scr)-.18 F(een)
-.18 E 1.12(and outputs it.)140 180 R 1.119
(The driver should do the best it can to get the r)6.12 F(equested)-.18
E(dimensions corr)140 192 Q(ect without r)-.18 E(eading fr)-.18 E
(om an ar)-.18 E(ea lar)-.18 E(ger than r)-.18 E(equested.)-.18 E F1
(typedef int \(* GetStillFuncPtr\)\( ScrnInfoPtr pScrn,)115 210 Q
(short vid_x, short vid_y, short drw_x, short drw_y,)175 234 Q
(short vid_w, short vid_h, short drw_w, short drw_h,)175 258 Q
(RegionPtr clipBoxes, pointer data \))175 282 Q F2 .209
(This is the same as)140 306 R F1(GetVideo)2.709 E F2 .209
(except that the driver should place only one)2.709 F(frame fr)140 318 Q
(om the scr)-.18 E(een into the output str)-.18 E(eam.)-.18 E F1
(typedef void \(* StopVideoFuncPtr\)\(ScrnInfoPtr pScrn,)115 336 Q
(pointer data, Bool cleanup\))175 360 Q F2 .474
(This indicates the driver should stop displaying the video.)140 384 R
.474(This is used to)5.474 F 1.385(stop both input and output video.)140
396 R(The)6.385 E F1(cleanup)3.886 E F2 1.386
(\214eld indicates that the)3.886 F 1.263
(video is being stopped because the client r)140 408 R 1.262
(equested it to stop or because)-.18 F .7
(the server is exiting the curr)140 420 R .701(ent VT.)-.18 F .701
(In that case the driver should deallo-)5.701 F 1.284(cate any of)140
432 R(fscr)-.18 E 1.283(een memory ar)-.18 F 1.283(eas \(if ther)-.18 F
3.783(ea)-.18 G 1.643 -.18(re a)-3.783 H 1.283
(ny\) being used to put the).18 F .344(video to the scr)140 444 R 2.844
(een. If)-.18 F F1(cleanup)2.844 E F2 .344
(is not set, the video is being stopped tem-)2.844 F 1.48
(porarily due to clipping or moving of the window)140 456 R 3.98(,e)-.92
G 3.98(tc... and)-3.98 F 1.48(video will)3.98 F 1.137(likely be r)140
468 R 1.137(estarted soon so the driver should not deallocate any of)
-.18 F(fscr)-.18 E(een)-.18 E(ar)140 480 Q
(eas associated with that port.)-.18 E F1
(typedef int \(* SetPortAttributeFuncPtr\)\(ScrnInfoPtr pScrn,)115 510 Q
(Atom attribute,INT32 value, pointer data\))175 534 Q
(typedef int \(* GetPortAttributeFuncPtr\)\(ScrnInfoPtr pScrn,)115 552 Q
(Atom attribute,INT32 *value, pointer data\))175 576 Q F2 3.674(Ap)140
600 S 1.174
(ort may have particular attributes such as hue, saturation, brightness)
-3.674 F 3.208(or contrast.)140 612 R 3.208
(Xv clients set and get these attribute values by sending)8.208 F 2.469
(attribute strings \(Atoms\) to the server.)140 624 R 2.469(Such r)7.469
F 2.469(equests end up at these)-.18 F .015(driver functions.)140 636 R
.015(It is r)5.015 F .015(ecommended that the driver pr)-.18 F .015
(ovide at least the fol-)-.18 F
(lowing attributes mentioned in the Xv client library docs:)140 648 Q F1
(XV_ENCODING)165 666 Q(XV_HUE)165 690 Q(XV_SATURATION)165 714 Q
(XV_BRIGHTNESS)165 738 Q 0 Cg EP
%%Page: 53 53
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(XFree86\256 serv)90 48 Q
(er 4.x Design \(DRAFT\))-.15 E(53)264.86 E/F1 10/Courier@0 SF
(XV_CONTRAST)165 96 Q/F2 10/Palatino-Roman@0 SF 1.112
(but the driver may r)140 126 R 1.112
(ecognize as many atoms as it wishes.)-.18 F 1.111(If a r)6.111 F
(equested)-.18 E 6.037(attribute is unknown by the driver it should r)
140 138 R(eturn)-.18 E F1(BadMatch)8.537 E F2(.)A F1(XV_ENCODING)140 150
Q F2 2.609(is the attribute intended to let the client specify which)
5.109 F .682(video encoding the particular port should be using \(see t\
he description of)140 162 R F1(XF86VideoEncodingRec)140 174 Q F2 4.739
(below\). If)4.739 F 2.239(the r)4.739 F 2.238
(equested encoding is unsup-)-.18 F 1.462(ported, the driver should r)
140 186 R(eturn)-.18 E F1(XvBadEncoding)3.962 E F2 6.462(.I)C 3.962(ft)
-6.462 G 1.462(he value lies out-)-3.962 F 1.317
(side the advertised range)140 198 R F1(BadValue)3.817 E F2 1.317
(may be r)3.817 F(eturned.)-.18 E F1(Success)6.316 E F2(should)3.816 E
(be r)140 210 Q(eturned otherwise.)-.18 E F1
(typedef void \(* QueryBestSizeFuncPtr\)\(ScrnInfoPtr pScrn,)115 228 Q
(Bool motion, short vid_w, short vid_h,)175 252 Q
(short drw_w, short drw_h,)175 276 Q
(unsigned int *p_w, unsigned int *p_h, pointer data\))175 300 Q
(QueryBestSize)140 324 Q F2(pr)3.386 E .886
(ovides the client with a way to query what the desti-)-.18 F .2
(nation dimensions would end up being if they wer)140 336 R 2.7(et)-.18
G 2.7(or)-2.7 G .2(equest that an ar)-2.88 F(ea)-.18 E F1(vid_w)140 348
Q F2(by)2.622 E F1(vid_h)2.622 E F2(fr)2.622 E .122(om the video str)
-.18 F .122(eam be scaled to r)-.18 F .123(ectangle of)-.18 F F1(drw_w)
2.623 E F2(by)2.623 E F1(drw_h)140 360 Q F2 .158(on the scr)2.658 F
2.657(een. Since)-.18 F .157(it is not expected that all har)2.657 F
(dwar)-.18 E 2.657(ew)-.18 G .157(ill be able)-2.657 F .452
(to get the tar)140 372 R .452(get dimensions exactly)-.18 F 2.952(,i)
-1.11 G 2.953(ti)-2.952 G 2.953(si)-2.953 G .453
(mportant that the driver pr)-2.953 F(ovide)-.18 E(this function.)140
384 Q F1 6(typedef int)115 402 R
(\(* PutImageFuncPtr\)\( ScrnInfoPtr pScrn,)6 E
(short src_x, short src_y, short drw_x, short drw_y,)175 426 Q
(short src_w, short src_h, short drw_w, short drw_h,)175 450 Q
(int image, char *buf, short width, short height,)175 474 Q
(Bool sync, RegionPtr clipBoxes, pointer data \))175 498 Q F2 1.473
(This is similar to)140 522 R F1(PutStill)3.973 E F2 1.473
(except that the sour)3.973 F 1.473(ce of the video is not a)-.18 F .535
(port but the data stor)140 534 R .535(ed in a system memory buf)-.18 F
.535(fer at)-.18 F F1(buf)3.036 E F2 5.536(.T)C .536(he data is in)
-5.536 F 1.313(the format indicated by the)140 546 R F1(image)3.813 E F2
1.313(descriptor and r)3.813 F(epr)-.18 E 1.312(esents a sour)-.18 F
1.312(ce of)-.18 F(size)140 558 Q F1(width)2.543 E F2(by)2.543 E F1
(height)2.544 E F2 5.044(.I)C(f)-5.044 E F1(sync)2.544 E F2 .044
(is TRUE the driver should not r)2.544 F .044(eturn fr)-.18 F(om)-.18 E
2.257(this function until it is thr)140 570 R 2.256(ough r)-.18 F 2.256
(eading the data fr)-.18 F(om)-.18 E F1(buf)4.756 E F2 7.256(.R)C
(eturning)-7.256 E(when)140 582 Q F1(sync)4.706 E F2 2.207
(is TRUE indicates that it is safe for the data at)4.706 F F1(buf)4.707
E F2 2.207(to be)4.707 F -.18(re)140 594 S(placed, fr).18 E
(eed, or modi\214ed.)-.18 E F1 16(typedef int)115 612 R 10
(\(* QueryImageAttributesFuncPtr\)\( ScrnInfoPtr)16 F(pScrn,)115 624 Q
(int image, short *width, short *height,)175 648 Q
(int *pitches, int *offsets\))175 672 Q F2 1.357(This function is calle\
d to let the driver specify how data for a particular)140 696 R F1
(image)140 708 Q F2 1.471(of size)3.971 F F1(width)3.971 E F2(by)3.971 E
F1(height)3.971 E F2 1.471(should be stor)3.971 F 3.971(ed. Sometimes)
-.18 F 1.47(only the)3.971 F .057(size and corr)140 720 R .057
(ected width and height ar)-.18 F 2.558(en)-.18 G 2.558(eeded. In)-2.558
F .058(that case)2.558 F F1(pitches)2.558 E F2(and)2.558 E F1(offsets)
140 732 Q F2(ar)4.23 E 4.23(eN)-.18 G 4.229(ULL. The)-4.23 F 1.729
(size of the memory r)4.229 F(equir)-.18 E 1.729(ed for the image is)
-.18 F 0 Cg EP
%%Page: 54 54
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(XFree86\256 serv)90 48 Q
(er 4.x Design \(DRAFT\))-.15 E(54)264.86 E/F1 10/Palatino-Roman@0 SF
-.18(re)140 96 S .344(turned by this function.).18 F(The)5.344 E/F2 10
/Courier@0 SF(width)2.844 E F1(and)2.845 E F2(height)2.845 E F1 .345
(of the r)2.845 F .345(equested image)-.18 F 1.138(can be alter)140 108
R 1.138(ed by the driver to r)-.18 F 1.137
(e\215ect format limitations \(such as compo-)-.18 F .113
(nent sampling periods that ar)140 120 R 2.614(el)-.18 G(ar)-2.614 E
.114(ger than one\).)-.18 F(If)5.114 E F2(pitches)2.614 E F1(and)2.614 E
F2(offsets)2.614 E F1(ar)140 132 Q 2.7(en)-.18 G .199
(ot NULL, these will be arrays with as many elements in them as ther)
-2.7 F(e)-.18 E(ar)140 144 Q 3.993(ep)-.18 G 1.493(lanes in the)-3.993 F
F2(image)3.993 E F1 3.993(format. The)3.993 F 1.494
(driver should specify the pitch \(in)3.993 F .953
(bytes\) of each scanline in the particular plane as well as the of)140
156 R .952(fset to that)-.18 F(plane \(in bytes\) fr)140 168 Q
(om the beginning of the image.)-.18 E(The XF86V)90 192 Q
(ideoEncodingRec:)-.55 E/F3 8/Courier@0 SF(typedef struct {)135 214 Q
(int id;)171 224 Q(char *name;)171 234 Q(unsigned short width, height;)
171 244 Q(XvRationalRec rate;)171 254 Q 4.8(}X)135 264 S
(F86VideoEncodingRec, *XF86VideoEncodingPtr;)-4.8 E F1(The)115 294 Q F2
(XF86VideoEncodingRec)4.855 E F1 2.355
(speci\214es what encodings the adaptor can support.)4.855 F .637(Most \
of this data is just informational and for the client's bene\214t, and \
is what will be)115 306 R -.18(re)115 318 S .905(ported by).18 F F2
(XvQueryEncodings)3.405 E F1 5.905(.T)C(he)-5.905 E F2(id)3.405 E F1
.905(\214eld is expected to be a unique identi\214er)3.405 F .094
(to allow the client to r)115 330 R .094
(equest a certain encoding via the)-.18 F F2(XV_ENCODING)2.594 E F1 .093
(attribute string.)2.593 F(The XF86V)90 348 Q(ideoFormatRec:)-.55 E F3
(typedef struct {)135 370 Q 4.8(char depth;)171 380 R(short class;)171
390 Q 4.8(}X)135 400 S(F86VideoFormatRec, *XF86VideoFormatPtr;)-4.8 E F1
.568(This speci\214es what visuals the video is viewable in.)115 418 R
F2(depth)5.569 E F1 .569(is the depth of the visual)3.069 F .499
(\(not bpp\).)115 430 R F2(class)5.499 E F1 .498
(is the visual class such as)2.999 F F2(TrueColor)2.998 E F1(,)A F2
(DirectColor)2.998 E F1(or)2.998 E F2(Pseudo-)2.998 E(Color)115 442 Q F1
6.036(.I)C 1.036(nitialization of an adaptor will fail if none of the v\
isuals on that scr)-6.036 F 1.036(een ar)-.18 F(e)-.18 E(supported.)115
454 Q(The XF86AttributeRec:)90 472 Q F3(typedef struct {)135 494 Q 9.6
(int flags;)171 504 R 9.6(int min_value;)171 514 R 9.6(int max_value;)
171 524 R 4.8(char *name;)171 534 R 4.8(}X)135 544 S
(F86AttributeListRec, *XF86AttributeListPtr;)-4.8 E F1 .474(Each adapto\
r may have an array of these advertising the attributes for its ports.)
115 562 R(Cur)5.473 E(-)-.18 E -.18(re)115 574 S .544
(ntly de\214ned \215ags ar).18 F(e)-.18 E F2(XvGettable)3.044 E F1(and)
3.044 E F2(XvSettable)3.045 E F1 .545(which may be OR'd together)3.045 F
1.441(indicating that attribute is `)115 586 R 1.441(`gettable'' or `)
-.37 F 1.441(`settable'' by the client.)-.37 F(The)6.441 E F2(min)3.94 E
F1(and)3.94 E F2(max)3.94 E F1 2.843
(\214eld specify the valid range for the value.)115 598 R F2(Name)7.844
E F1 2.844(is a text string describing the)5.344 F(attribute by name.)
115 610 Q(The XF86ImageRec:)90 628 Q 0 Cg EP
%%Page: 55 55
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(XFree86\256 serv)90 48 Q
(er 4.x Design \(DRAFT\))-.15 E(55)264.86 E/F1 8/Courier@0 SF
(typedef struct {)135 94 Q(int id;)171 104 Q(int type;)171 114 Q
(int byte_order;)171 124 Q(char guid[16];)171 134 Q(int bits_per_pixel;)
171 144 Q(int format;)171 154 Q(int num_planes;)171 164 Q
(/* for RGB formats */)171 184 Q(int depth;)171 194 Q
(unsigned int red_mask;)171 204 Q(unsigned int green_mask;)171 214 Q
(unsigned int blue_mask;)171 224 Q(/* for YUV formats */)171 244 Q
(unsigned int y_sample_bits;)171 254 Q(unsigned int u_sample_bits;)171
264 Q(unsigned int v_sample_bits;)171 274 Q(unsigned int horz_y_period;)
171 284 Q(unsigned int horz_u_period;)171 294 Q
(unsigned int horz_v_period;)171 304 Q(unsigned int vert_y_period;)171
314 Q(unsigned int vert_u_period;)171 324 Q(unsigned int vert_v_period;)
171 334 Q(char component_order[32];)171 344 Q(int scanline_order;)171
354 Q 4.8(}X)135 364 S(F86ImageRec, *XF86ImagePtr;)-4.8 E/F2 10
/Palatino-Roman@0 SF .446(XF86ImageRec describes how video sour)115 382
R .445(ce data is laid out in memory.)-.18 F .445(The \214elds ar)5.445
F(e)-.18 E(as follows:)115 394 Q/F3 10/Courier@0 SF(id)115 412 Q F2 .324
(This is a unique descriptor for the format.)140 436 R .324
(It is often good to set this value)5.324 F
(to the FOURCC for the format when applicable.)140 448 Q F3(type)115 466
Q F2(This is)140 490 Q F3(XvRGB)2.5 E F2(or)2.5 E F3(XvYUV)2.5 E F2(.)A
F3(byte_order)115 508 Q F2(This is)140 532 Q F3(LSBFirst)2.5 E F2(or)2.5
E F3(MSBFirst)2.5 E F2(.)A F3(guid)115 550 Q F2 .04
(This is the Globally Unique IDenti\214er for the format.)140 574 R .04
(When not applicable,)5.04 F(all characters should be NULL.)140 586 Q F3
(bits_per_pixel)115 604 Q F2 .079(The number of bits taken up \(but not\
 necessarily used\) by each pixel.)140 628 R(Note)5.08 E .8(that for so\
me planar formats which have fractional bits per pixel \(such as)140 640
R(IF09\) this number may be r)140 652 Q(ounded _down_.)-.18 E F3(format)
115 670 Q F2(This is)140 694 Q F3(XvPlanar)2.5 E F2(or)2.5 E F3
(XvPacked)2.5 E F2(.)A F3(num_planes)115 712 Q F2 1.842
(The number of planes in planar formats.)140 736 R 1.843
(This should be set to one for)6.842 F 0 Cg EP
%%Page: 56 56
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(XFree86\256 serv)90 48 Q
(er 4.x Design \(DRAFT\))-.15 E(56)264.86 E/F1 10/Palatino-Roman@0 SF
(packed formats.)140 96 Q/F2 10/Courier@0 SF(depth)115 114 Q F1 1.18(Th\
e signi\214cant bits per pixel in RGB formats \(analgous to the depth o\
f a)140 138 R(pixmap format\).)140 150 Q F2 -3.5
(red_mask green_mask blue_mask)115 168 R F1(The r)140 192 Q(ed, gr)-.18
E(een and blue bitmasks for packed RGB formats.)-.18 E F2 -3.5
(y_sample_bits u_sample_bits v_sample_bits)115 210 R F1(The y)140 234 Q
2.5(,ua)-1.11 G(nd v sample sizes \(in bits\).)-2.5 E F2 -3.5
(horz_y_period horz_u_period horz_v_period)115 252 R F1(The y)140 276 Q
2.5(,ua)-1.11 G(nd v sampling periods in the horizontal dir)-2.5 E
(ection.)-.18 E F2 -3.5(vert_y_period vert_u_period vert_v_period)115
294 R F1(The y)140 318 Q 2.5(,ua)-1.11 G
(nd v sampling periods in the vertical dir)-2.5 E(ection.)-.18 E F2
(component_order)115 336 Q F1(Upper)140 360 Q 1.139
(case ascii characters r)-.18 F(epr)-.18 E 1.139(esenting the or)-.18 F
1.139(der that samples ar)-.18 F 3.639(es)-.18 G(tor)-3.639 E(ed)-.18 E
.649(within packed formats.)140 372 R .649(For planar formats this r)
5.649 F(epr)-.18 E .649(esents the or)-.18 F .649(dering of)-.18 F .154
(the planes.)140 384 R .155
(Unused characters in the 32 byte string should be set to NULL.)5.154 F
F2(scanline_order)115 402 Q F1(This is)140 426 Q F2(XvTopToBottom)2.5 E
F1(or)2.5 E F2(XvBottomToTop)2.5 E F1(.)A 2.075(Since some formats \(pa\
rticular some planar YUV formats\) may not be completely)115 444 R .812
(de\214ned by the parameters above, the guid, when available, should pr)
115 456 R .812(ovide the most)-.18 F
(accurate description of the format.)115 468 Q/F3 16/Helvetica-Bold@0 SF
4.448(17. The)90 498 R(Loader)4.448 E F1 .856
(This section describes the interfaces to the module loader.)90 516 R
.855(The loader interfaces can be divided)5.856 F 1.101(into two gr)90
528 R 1.101(oups: those that ar)-.18 F 3.601(eo)-.18 G 1.101
(nly available to the XFr)-3.601 F 1.101(ee86 common layer)-.18 F 3.602
(,a)-.74 G 1.102(nd those that ar)-3.602 F(e)-.18 E
(also available to modules.)90 540 Q/F4 14/Helvetica-Bold@0 SF 3.892
(17.1 Loader)90 562 R -3.752(Over vie)3.892 F(w)-.21 E F1 1.081(The loa\
der is capable of loading modules in a range of object formats, and kno\
wledge of these)90 580 R .062(formats is built in to the loader.)90 592
R .063(Knowledge of new object formats can be added to the loader in a)
5.062 F(straightforwar)90 604 Q 2.733(dm)-.18 G 2.733(anner. This)-2.733
F .233(makes it possible to pr)2.733 F .232
(ovide OS-independent modules \(for a given)-.18 F 1.554(CPU ar)90 616 R
(chitectur)-.18 E 4.054(et)-.18 G 4.054(ype\). In)-4.054 F 1.554
(addition to this, the loader can load modules via the OS-pr)4.054 F
(ovided)-.18 E F2(dlopen\(3\))90 628 Q F1 2.839(service wher)5.34 F
5.339(ea)-.18 G 5.339(vailable. Such)-5.339 F 2.839(modules ar)5.339 F
5.339(en)-.18 G 2.839(ot platform independent, and the)-5.339 F .056
(semantics of)90 640 R F2(dlopen\(\))2.556 E F1 .056(on most systems r)
2.556 F .057
(esults in signi\214cant limitations in the use of modules of)-.18 F .4
(this type.)90 652 R .4(Support for)5.4 F F2(dlopen\(\))2.9 E F1 .4
(modules in the loader is primarily for experimental and devel-)2.9 F
(opment purposes.)90 664 Q 1.297
(Symbols exported by the loader \(on behalf of the cor)90 682 R 3.798
(eXs)-.18 G 1.298(erver\) to modules ar)-3.798 F 3.798(ed)-.18 G 1.298
(etermined at)-3.798 F 2.03(compile time.)90 694 R 2.029
(Only those symbols explicitly exported ar)7.03 F 4.529(ea)-.18 G 2.029
(vailable to modules.)-4.529 F 2.029(All external)7.029 F .609
(symbols of loaded modules ar)90 706 R 3.109(ee)-.18 G .609
(xported to other modules, and to the cor)-3.109 F 3.11(eXs)-.18 G 3.11
(erver. The)-3.11 F(loader)3.11 E .035(can be r)90 718 R .035
(equested to check for unr)-.18 F .034
(esolved symbols at any time, and the action to be taken for unr)-.18 F
(e-)-.18 E .44(solved symbols can be contr)90 730 R .441
(olled by the caller of the loader.)-.18 F -.9(Ty)5.441 G .441
(pically the caller identi\214es which).9 F(symbols can safely r)90 742
Q(emain unr)-.18 E(esolved and which cannot.)-.18 E 0 Cg EP
%%Page: 57 57
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(XFree86\256 serv)90 48 Q
(er 4.x Design \(DRAFT\))-.15 E(57)264.86 E/F1 10/Palatino-Roman@0 SF
2.911(NOTE: Now)90 96 R .411(that ISO-C allows pointers to functions an\
d pointers to data to have dif)2.911 F(fer)-.18 E .41(ent inter)-.18 F
(-)-.18 E(nal r)90 108 Q(epr)-.18 E
(esentations, some of the following interfaces will need to be r)-.18 E
(evisited.)-.18 E/F2 14/Helvetica-Bold@0 SF 3.892(17.2 Semi-priv)90 130
R(ate Loader Interface)-.28 E F1(The following is the semi-private load\
er interface that is available to the XFr)90 148 Q(ee86 common layer.)
-.18 E/F3 10/Courier@0 SF(void LoaderInit\(void\))115 172 Q F1(The)140
196 Q F3(LoaderInit\(\))3.85 E F1 1.35(function initialises the loader)
3.85 F 3.85(,a)-.74 G 1.35(nd it must be called)-3.85 F .314(once befor)
140 208 R 2.814(ec)-.18 G .314(alling any other loader functions.)-2.814
F .314(This function initialises the)5.314 F 1.336(tables of exported s\
ymbols, and anything else that might need to be ini-)140 220 R
(tialised.)140 232 Q F3(void LoaderSetPath\(const char *path\))115 250 Q
F1(The)140 274 Q F3(LoaderSetPath\(\))3.135 E F1 .635
(function initialises a default module sear)3.135 F .635(ch path.)-.18 F
2.315(This must be called if calls to other functions ar)140 286 R 4.816
(et)-.18 G 4.816(ob)-4.816 G 4.816(em)-4.816 G 2.316(ade without)-4.816
F .384(explicitly specifying a module sear)140 298 R .384(ch path.)-.18
F .384(The sear)5.384 F .383(ch path)-.18 F F3(path)2.883 E F1 .383
(must be)2.883 F 4.483(as)140 310 S 1.983(tring of one or mor)-4.483 F
4.484(ec)-.18 G 1.984(omma separated absolute paths.)-4.484 F 1.984
(Modules ar)6.984 F(e)-.18 E 2.307
(expected to be located below these paths, possibly in subdir)140 322 R
2.307(ectories of)-.18 F(these paths.)140 334 Q F3
(pointer LoadModule\(const char *module, const char *path,)115 352 Q
(const char **subdirlist, const char **patternlist,)175 376 Q
(pointer options, const XF86ModReqInfo * modreq,)175 400 Q
(int *errmaj, int *errmin\))175 424 Q F1(The)140 448 Q F3
(LoadModule\(\))2.55 E F1 .05(function loads the module called)2.55 F F3
(module)2.55 E F1 5.05(.T)C .05(he r)-5.05 F(eturn)-.18 E 1.381
(value is a module handle, and may be used in futur)140 460 R 3.88(ec)
-.18 G 1.38(alls to the loader)-3.88 F .501(that r)140 472 R(equir)-.18
E 3.001(ear)-.18 G(efer)-3.181 E .502(ence to a loaded module.)-.18 F
.502(The module name)5.502 F F3(module)3.002 E F1(is)3.002 E 1.23
(normally the module's canonical name, which doesn't contain any dir)140
484 R(ec-)-.18 E .972
(tory path information, or any object/library \214le pr)140 496 R .972
(e\214xes of suf)-.18 F 3.472(\214xes. Cur)-.18 F(-)-.18 E -.18(re)140
508 S 3.151(ntly a full pathname and/or \214lename is also accepted.).18
F 3.151(This might)8.151 F 2.5(change. The)140 520 R
(other parameters ar)2.5 E(e:)-.18 E F3(path)140 538 Q F1 3.414
(An optional comma-separated list of module sear)165 562 R 3.415
(ch paths.)-.18 F(When)165 574 Q F3(NULL)2.5 E F1 2.5(,t)C
(he default sear)-2.5 E(ch path is used.)-.18 E F3(subdirlist)140 592 Q
F1 1.879(An optional)165 616 R F3(NULL)4.379 E F1 1.879
(terminated list of subdir)4.379 F 1.878(ectories to sear)-.18 F(ch.)
-.18 E(When)165 628 Q F3(NULL)3.475 E F1 3.475(,t)C .975
(he default built-in list is used \(r)-3.475 F .975(efer to)-.18 F F3
(stdSub-)3.475 E(dirs)165 640 Q F1(in)4.255 E F3(loadmod.c)4.255 E F1
4.255(\). The)B 1.754(default list is also substituted for)4.255 F 1.618
(entries in)165 652 R F3(subdirlist)4.118 E F1 1.619(with the value)
4.118 F F3(DEFAULT_LIST)4.119 E F1 6.619(.T)C(his)-6.619 E .754
(makes is possible to augment the default list instead of r)165 664 R
(eplac-)-.18 E .753(ing it.)165 676 R .753(Subdir elements must be r)
5.753 F .753(elative, and must not contain)-.18 F F3("..")165 688 Q F1 5
(.I)C 2.5(fa)-5 G(ny violate this r)-2.5 E(equir)-.18 E
(ement, the load fails.)-.18 E F3(patternlist)140 706 Q F1 .514
(An optional)165 730 R F3(NULL)3.014 E F1 .514
(terminated list of POSIX r)3.014 F .513(egular expr)-.18 F(essions)-.18
E 3.966(used to connect module \214lenames with canonical module)165 742
R 0 Cg EP
%%Page: 58 58
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(XFree86\256 serv)90 48 Q
(er 4.x Design \(DRAFT\))-.15 E(58)264.86 E/F1 10/Palatino-Roman@0 SF
4.203(names. Each)165 96 R -.18(re)4.203 G 1.703
(gex should contain exactly one subexpr).18 F(ession)-.18 E 1.185
(that corr)165 108 R 1.185(esponds to the canonical module name.)-.18 F
(When)6.185 E/F2 10/Courier@0 SF(NULL)3.685 E F1(,)A 3.606
(the default built-in list is used \(r)165 120 R 3.605(efer to)-.18 F F2
(stdPatterns)6.105 E F1(in)6.105 E F2(loadmod.c)165 132 Q F1 3.614
(\). The)B 1.115(default list is also substituted for entries in)3.614 F
F2(patternlist)165 144 Q F1 1.319(with the value)3.819 F F2
(DEFAULT_LIST)3.819 E F1 6.318(.T)C 1.318(his makes it)-6.318 F
(possible to augment the default list instead of r)165 156 Q
(eplacing it.)-.18 E F2(options)140 174 Q F1 .199
(An optional parameter that is passed to the newly loaded mod-)165 198 R
(ule's)165 210 Q F2(SetupProc)2.729 E F1 .229
(function \(if it has one\).)2.729 F .229(This ar)5.229 F .229
(gument is nor)-.18 F(-)-.18 E 1.397(mally a)165 222 R F2(NULL)3.897 E
F1 1.397(terminated list of)3.897 F F2(Options)3.897 E F1 3.897(,a)C
1.397(nd must be inter)-3.897 F(-)-.18 E(pr)165 234 Q 2.267
(eted that way by modules loaded dir)-.18 F 2.266(ectly by the XFr)-.18
F(ee86)-.18 E 1.458(common layer.)165 246 R(However)6.458 E 3.959(,i)
-.74 G 3.959(tm)-3.959 G 1.459(ay be used for application-spe-)-3.959 F
(ci\214c parameter passing in other situations.)165 258 Q 2.253
(When loading `)165 276 R 2.253
(`external'' modules \(modules that don't have)-.37 F .953(the standar)
165 288 R 3.453(de)-.18 G .953(ntry point, for example a special shar)
-3.453 F .954(ed library\))-.18 F .334
(the options parameter can be set to)165 300 R F2(EXTERN_MODULE)2.834 E
F1 .334(to tell the)2.834 F 1.339(loader not to r)165 312 R 1.339
(eject the module when it doesn't \214nd the stan-)-.18 F(dar)165 324 Q
2.5(de)-.18 G(ntry point.)-2.5 E F2(modreq)140 342 Q F1 .695
(An optional)165 366 R F2(XF86ModReqInfo*)3.195 E F1 .695
(containing version/ABI/ven-)3.195 F 2.428(dor information specifying r)
165 378 R(equir)-.18 E 2.429(ements to check the newly)-.18 F 1.44
(loaded module against.)165 390 R 1.44
(The main purpose of this is to allow)6.44 F 1.226
(the loader to verify that a module of the corr)165 402 R 1.226
(ect type/version)-.18 F(befor)165 414 Q 2.5(er)-.18 G(unning its)-2.58
E F2(SetupProc)2.5 E F1(function.)2.5 E(The)165 432 Q F2(XF86ModReqInfo)
2.5 E F1(str)2.5 E(uct is de\214ned as follows:)-.08 E/F3 8/Courier@0 SF
(typedef struct {)185 442 Q 33.6(CARD8 majorversion;)221 452 R
(/* MAJOR_UNSPEC */)9.6 E 33.6(CARD8 minorversion;)221 462 R
(/* MINOR_UNSPEC */)9.6 E 28.8(CARD16 patchlevel;)221 472 R
(/* PATCH_UNSPEC */)19.2 E(const char * abiclass;)221 482 Q
(/* ABI_CLASS_NONE */)28.8 E 28.8(CARD32 abiversion;)221 492 R
(/* ABI_VERS_UNSPEC */)19.2 E(const char * moduleclass;)221 502 Q
(/* MOD_CLASS_NONE */)14.4 E 4.8(}X)185 512 S(F86ModReqInfo;)-4.8 E F1
.593(The information her)165 530 R 3.093(ei)-.18 G 3.093(sc)-3.093 G
(ompar)-3.093 E .592(ed against the equivalent infor)-.18 F(-)-.18 E
4.026(mation in the module's)165 542 R F2(XF86ModuleVersionInfo)6.526 E
F1 -.18(re)6.526 G(cor).18 E(d)-.18 E 2.472
(\(which is described below\).)165 554 R 2.471
(The values in comments above)7.471 F 1.215(indicate `)165 566 R 1.215
(`don't car)-.37 F 1.215(e'' settings for each of the \214elds.)-.18 F
1.215(The com-)6.215 F(parisons made ar)165 578 Q 2.5(ea)-.18 G 2.5(sf)
-2.5 G(ollows:)-2.5 E F2(majorversion)165 596 Q F1
(Must match the module's majorversion exactly.)190 620 Q F2
(minorversion)165 650 Q F1 1.785
(The module's minor version must be no less than)190 674 R 5.685
(this value.)190 686 R 5.686(This comparison is only made if)10.685 F F2
(majorversion)190 698 Q F1(is speci\214ed and matches.)2.5 E F2
(patchlevel)165 728 Q 0 Cg EP
%%Page: 59 59
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(XFree86\256 serv)90 48 Q
(er 4.x Design \(DRAFT\))-.15 E(59)264.86 E/F1 10/Palatino-Roman@0 SF
1.533(The module's patchlevel must be no less than this)190 96 R 2.79
(value. This)190 108 R .29(comparison is only made if)2.79 F/F2 10
/Courier@0 SF(minorver-)2.79 E(sion)190 120 Q F1
(is speci\214ed and matches.)2.5 E F2(abiclass)165 150 Q F1
(String must match the module's abiclass string.)190 174 Q F2
(abiversion)165 204 Q F1 2.973
(Must be consistent with the module's abiversion)190 228 R
(\(major equal, minor no older\).)190 240 Q F2(moduleclass)165 270 Q F1
.387(String must match the module's moduleclass string.)190 294 R F2
(errmaj)140 318 Q F1 .625
(An optional pointer to a variable holding the major part or the)165 342
R(err)165 354 Q .735(or code.)-.18 F .735(When pr)5.735 F(ovided,)-.18 E
F2(*errmaj)3.235 E F1 .736(is \214lled in when)3.236 F F2(Load-)3.236 E
(Module\(\))165 366 Q F1(fails.)2.5 E F2(errmin)140 384 Q F1(Like)165
408 Q F2(errmaj)2.5 E F1 2.5(,b)C(ut for the minor part of the err)-2.5
E(or code.)-.18 E F2(void UnloadModule\(pointer mod\))115 432 Q F1 .137
(This function unloads the module r)140 456 R(eferr)-.18 E .137
(ed to by the handle mod.)-.18 F .136(All child)5.136 F .491(modules ar)
140 468 R 2.991(ea)-.18 G .492(lso unloaded r)-2.991 F 2.992
(ecursively. This)-.18 F .492(function must not be used to)2.992 F(dir)
140 480 Q .724(ectly unload modules that ar)-.18 F 3.224(ec)-.18 G .723
(hild modules \(i.e., those that have been)-3.224 F(loaded with the)140
492 Q F2(LoadSubModule\(\))2.5 E F1(described below\).)2.5 E/F3 14
/Helvetica-Bold@0 SF 3.892(17.3 Module)90 520 R(Requirements)3.892 E F1
.808(Modules must pr)90 538 R .808
(ovide information about themselves to the loader)-.18 F 3.309(,a)-.74 G
.809(nd may optionally pr)-3.309 F(ovide)-.18 E 1.569
(entry points for "setup" and "tear)90 550 R 1.569
(down" functions \(those two functions ar)-.18 F 4.068(er)-.18 G(eferr)
-4.248 E 1.568(ed to her)-.18 F 4.068(ea)-.18 G(s)-4.068 E F2(SetupProc)
90 562 Q F1(and)2.5 E F2(TearDownProc)2.5 E F1(\).)A .524
(The module information is contained in the)90 580 R F2
(XF86ModuleVersionInfo)3.025 E F1(str)3.025 E .525
(uct, which is de\214ned)-.08 F(as follows:)90 592 Q 0 Cg EP
%%Page: 60 60
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(XFree86\256 serv)90 48 Q
(er 4.x Design \(DRAFT\))-.15 E(60)264.86 E/F1 8/Courier@0 SF
(typedef struct {)135 94 Q(const char * modname;)154.2 104 Q
(/* name of module, e.g. "foo" */)28.8 E(const char * vendor;)154.2 114
Q(/* vendor specific string */)33.6 E 28.8(CARD32 _modinfo1_;)154.2 124
R(/* constant MODINFOSTRING1/2 to find */)14.4 E 28.8
(CARD32 _modinfo2_;)154.2 134 R
(/* infoarea with a binary editor/sign tool */)14.4 E 28.8
(CARD32 xf86version;)154.2 144 R(/* contains XF86_VERSION_CURRENT */)9.6
E 33.6(CARD8 majorversion;)154.2 154 R
(/* module-specific major version */)4.8 E 33.6(CARD8 minorversion;)
154.2 164 R(/* module-specific minor version */)4.8 E 28.8
(CARD16 patchlevel;)154.2 174 R(/* module-specific patch level */)14.4 E
(const char * abiclass;)154.2 184 Q
(/* ABI class that the module uses */)24 E 28.8(CARD32 abiversion;)154.2
194 R(/* ABI version */)14.4 E(const char * moduleclass;)154.2 204 Q
(/* module class */)9.6 E 28.8(CARD32 checksum[4];)154.2 214 R
(/* contains a digital signature of the */)9.6 E
(/* version info structure */)283.8 224 Q 4.8(}X)135 234 S
(F86ModuleVersionInfo;)-4.8 E/F2 10/Palatino-Roman@0 SF(The \214elds ar)
115 252 Q 2.5(eu)-.18 G(sed as follows:)-2.5 E/F3 10/Courier@0 SF
(modname)115 270 Q F2 2.074(The module's name.)140 294 R 2.074
(This \214eld is curr)7.074 F 2.074(ently only for informational pur)
-.18 F(-)-.18 E .746(poses, but the loader may be modi\214ed in futur)
140 306 R 3.247(et)-.18 G 3.247(or)-3.247 G(equir)-3.427 E 3.247(ei)-.18
G 3.247(tt)-3.247 G 3.247(om)-3.247 G .747(atch the)-3.247 F
(module's canonical name.)140 318 Q F3(vendor)115 336 Q F2
(The module vendor.)140 360 Q
(This \214eld is for informational purposes only.)5 E F3(_modinfo1_)115
378 Q F2 .756(This \214eld holds the \214rst part of a signatur)140 402
R 3.256(et)-.18 G .756(hat can be used to locate this)-3.256 F(str)140
414 Q(uctur)-.08 E 5.088(ei)-.18 G 5.088(nt)-5.088 G 2.588(he binary.)
-5.088 F 2.588(It should always be initialised to)7.588 F F3(MODINFOS-)
5.088 E(TRING1)140 426 Q F2(.)A F3(_modinfo2_)115 444 Q F2 1.194
(This \214eld holds the second part of a signatur)140 468 R 3.693(et)
-.18 G 1.193(hat can be used to locate)-3.693 F .65(this str)140 480 R
(uctur)-.08 E 3.15(ei)-.18 G 3.15(nt)-3.15 G .65(he binary.)-3.15 F .65
(It should always be initialised to)5.65 F F3(MODINFOS-)3.15 E(TRING2)
140 492 Q F2(.)A F3(xf86version)115 510 Q F2 2.445(The XFr)140 534 R
2.445(ee86 version against which the module was compiled.)-.18 F 2.445
(This is)7.445 F 1.353(mostly for informational/diagnostic purposes.)140
546 R 1.354(It should be initialised to)6.354 F F3(XF86_VERSION_CURRENT)
140 558 Q F2 2.5(,w)C(hich is de\214ned in)-2.5 E F3(xf86Version.h)2.5 E
F2(.)A F3(majorversion)115 576 Q F2 2.441
(The module-speci\214c major version.)140 600 R 2.441(For modules wher)
7.441 F 4.941(et)-.18 G 2.441(his version is)-4.941 F 2.913
(used for mor)140 612 R 5.413(et)-.18 G 2.913
(han simply informational purposes, the major version)-5.413 F .134
(should only change \(be incr)140 624 R .133
(emented\) when ABI incompatibilities ar)-.18 F 2.633(ei)-.18 G(ntr)
-2.633 E(o-)-.18 E(duced, or ABI components ar)140 636 Q 2.5(er)-.18 G
(emoved.)-2.68 E F3(minorversion)115 654 Q F2 2.286
(The module-speci\214c minor version.)140 678 R 2.287(For modules wher)
7.287 F 4.787(et)-.18 G 2.287(his version is)-4.787 F 2.759
(used for mor)140 690 R 5.259(et)-.18 G 2.759
(han simply informational purposes, the minor version)-5.259 F 1.324
(should only change \(be incr)140 702 R 1.325
(emented\) when ABI additions ar)-.18 F 3.825(em)-.18 G 1.325(ade in a)
-3.825 F(backwar)140 714 Q 3.112(dc)-.18 G .612(ompatible way.)-3.112 F
.612(It should be r)5.612 F .612(eset to zer)-.18 F 3.111(ow)-.18 G .611
(hen the major ver)-3.111 F(-)-.18 E(sion is incr)140 726 Q(eased.)-.18
E 0 Cg EP
%%Page: 61 61
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(XFree86\256 serv)90 48 Q
(er 4.x Design \(DRAFT\))-.15 E(61)264.86 E/F1 10/Courier@0 SF
(patchlevel)115 96 Q/F2 10/Palatino-Roman@0 SF .141
(The module-speci\214c patch level.)140 120 R .141
(The patch level should incr)5.141 F .141(ease with new)-.18 F -.18(re)
140 132 S .671(visions of the module wher).18 F 3.171(et)-.18 G(her)
-3.171 E 3.171(ea)-.18 G 1.031 -.18(re n)-3.171 H 3.171(oA).18 G .67
(BI changes, and it should be)-3.171 F -.18(re)140 144 S(set to zer).18
E 2.5(ow)-.18 G(hen the minor version is incr)-2.5 E(eased.)-.18 E F1
(abiclass)115 162 Q F2 1.107(The ABI class that the module r)140 186 R
(equir)-.18 E 3.607(es. The)-.18 F 1.107
(class is speci\214ed as a string)3.607 F 1.488(for easy extensibility.)
140 198 R 1.487(It should indicate which \(if any\) of the X server's)
6.488 F .052(built-in ABI classes that the module r)140 210 R .052
(elies on, or a thir)-.18 F .053(d-party ABI if appr)-.18 F(o-)-.18 E
2.5(priate. Built-in)140 222 R(ABI classes curr)2.5 E
(ently de\214ned ar)-.18 E(e:)-.18 E F1(ABI_CLASS_NONE)165 240 Q F2
(no class)190 258 Q F1(ABI_CLASS_ANSIC)165 288 Q F2(only r)190 306 Q
(equir)-.18 E(es the ANSI C interfaces)-.18 E F1(ABI_CLASS_VIDEODRV)165
336 Q F2 -.18(re)190 354 S(quir).18 E(es the video driver ABI)-.18 E F1
(ABI_CLASS_XINPUT)165 384 Q F2 -.18(re)190 402 S(quir).18 E
(es the XInput driver ABI)-.18 E F1(ABI_CLASS_EXTENSION)165 432 Q F2
-.18(re)190 450 S(quir).18 E(es the extension module ABI)-.18 E F1
(ABI_CLASS_FONT)165 480 Q F2 -.18(re)190 498 S(quir).18 E
(es the font module ABI)-.18 E F1(abiversion)115 528 Q F2 1.153
(The version of abiclass that the module r)140 552 R(equir)-.18 E 3.653
(es. The)-.18 F 1.152(version consists of)3.652 F 2.274
(major and minor components.)140 564 R 2.274
(The major version must match and the)7.274 F .782
(minor version must be no newer than that pr)140 576 R .781
(ovided by the server or par)-.18 F(-)-.18 E 1.668(ent module.)140 588 R
-1.11(Ve)6.669 G 1.669
(rsion identi\214ers for the built-in classes curr)1.11 F 1.669
(ently de\214ned)-.18 F(ar)140 600 Q(e:)-.18 E F1(ABI_ANSIC_VERSION)165
618 Q(ABI_VIDEODRV_VERSION)165 642 Q(ABI_XINPUT_VERSION)165 666 Q
(ABI_EXTENSION_VERSION)165 690 Q(ABI_FONT_VERSION)165 714 Q(moduleclass)
115 738 Q 0 Cg EP
%%Page: 62 62
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(XFree86\256 serv)90 48 Q
(er 4.x Design \(DRAFT\))-.15 E(62)264.86 E/F1 10/Palatino-Roman@0 SF
.044(This is similar to the abiclass \214eld, except that it de\214nes \
the type of module)140 96 R 1.588(rather than the ABI it r)140 108 R
(equir)-.18 E 4.088(es. For)-.18 F 1.588
(example, although all video drivers)4.088 F -.18(re)140 120 S(quir).18
E 2.963(et)-.18 G .463(he video driver ABI, not all modules that r)
-2.963 F(equir)-.18 E 2.962(et)-.18 G .462(he video driver)-2.962 F .359
(ABI ar)140 132 R 2.859(ev)-.18 G .359(ideo drivers.)-2.859 F .359
(This distinction can be made with the moduleclass.)5.359 F(Curr)140 144
Q(ently pr)-.18 E(e-de\214ned module classes ar)-.18 E(e:)-.18 E/F2 10
/Courier@0 SF(MOD_CLASS_NONE)165 162 Q(MOD_CLASS_VIDEODRV)165 186 Q
(MOD_CLASS_XINPUT)165 210 Q(MOD_CLASS_FONT)165 234 Q
(MOD_CLASS_EXTENSION)165 258 Q(checksum)115 282 Q F1(Not curr)140 306 Q
(ently used.)-.18 E .357
(The module version information, and the optional)90 330 R F2(SetupProc)
2.856 E F1(and)2.856 E F2(TearDownProc)2.856 E F1 .356(entry points)
2.856 F(ar)90 342 Q 3.461(ef)-.18 G .961(ound by the loader by locating\
 a data object in the module called "modnameModuleData",)-3.461 F(wher)
90 354 Q 4.587(e")-.18 G 2.087
(modname" is the canonical name of the module.)-4.587 F 2.086
(Modules must contain such a data)7.086 F .081
(object, and it must be declar)90 366 R .081(ed with global scope, be c\
ompile-time initialised, and is of the follow-)-.18 F(ing type:)90 378 Q
/F3 8/Courier@0 SF(typedef struct {)135 400 Q(XF86ModuleVersionInfo *)
154.2 410 Q(vers;)24 E 57.6(ModuleSetupProc setup;)154.2 420 R 43.2
(ModuleTearDownProc teardown;)154.2 430 R 4.8(}X)135 440 S
(F86ModuleData;)-4.8 E F1 1.239
(The vers parameter must be initialised to a pointer to a corr)90 464 R
1.239(ectly initialised)-.18 F F2(XF86ModuleVer-)3.739 E(sionInfo)90 476
Q F1(str)2.502 E 2.502(uct. The)-.08 F .002(other two parameters ar)
2.502 F 2.502(eo)-.18 G .002(ptional, and should be initialised to)
-2.502 F F2(NULL)2.503 E F1(when)2.503 E(not r)90 488 Q(equir)-.18 E 2.5
(ed. The)-.18 F(other parameters ar)2.5 E 2.5(ed)-.18 G(e\214ned as)-2.5
E 0 Cg EP
%%Page: 63 63
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(XFree86\256 serv)90 48 Q
(er 4.x Design \(DRAFT\))-.15 E(63)264.86 E/F1 10/Courier@0 SF .667
(typedef pointer \(*ModuleSetupProc\)\(pointer, pointer, int *, int)115
96 R(*\))115 108 Q(typedef void \(*ModuleTearDownProc\)\(pointer\))115
126 Q(pointer SetupProc\(pointer module, pointer options,)115 144 Q
(int *errmaj, int *errmin\))175 168 Q/F2 10/Palatino-Roman@0 SF .528(Wh\
en de\214ned, this function is called by the loader after successfully \
load-)140 192 R 2.407(ing a module.)140 204 R 2.407
(module is a handle for the newly loaded module, and)7.407 F 2.963
(maybe used by the)140 216 R F1(SetupProc)5.463 E F2 2.964
(if it calls other loader functions that)5.464 F -.18(re)140 228 S(quir)
.18 E 4.278(ear)-.18 G(efer)-4.458 E 1.778(ence to it.)-.18 F 1.777
(The r)9.277 F 1.777(emaining ar)-.18 F 1.777(guments ar)-.18 F 4.277
(et)-.18 G 1.777(hose that wer)-4.277 F(e)-.18 E .636(passed to the)140
240 R F1(LoadModule\(\))3.136 E F2(\(or)3.136 E F1(LoadSubModule\(\))
3.136 E F2 .636(\), and ar)B 3.137(ed)-.18 G(escribed)-3.137 E 2.635
(above. When the)140 252 R F1(SetupProc)5.135 E F2 2.635
(is successful it must r)5.135 F 2.635(eturn a non-)-.18 F F1(NULL)A F2
3.034(value. The)140 264 R .534(loader checks this, and if it is)3.034 F
F1(NULL)3.034 E F2 .535(it unloads the module and)3.034 F -.18(re)140
276 S .26(ports the failur).18 F 2.76(et)-.18 G 2.76(ot)-2.76 G .26
(he caller of)-2.76 F F1(LoadModule\(\))2.76 E F2 5.26(.I)C 2.76(ft)
-5.26 G(he)-2.76 E F1(SetupProc)2.76 E F2(does)2.76 E 1.757
(things that need to be undone when the module is unloaded, it should)
140 288 R 1.943(de\214ne a)140 300 R F1(TearDownProc)4.443 E F2 4.442
(,a)C 1.942(nd r)-4.442 F 1.942(eturn a pointer that the)-.18 F F1
(TearDownProc)4.442 E F2(can use to undo what has been done.)140 312 Q
.025(When a module is loaded multiple times, the)140 330 R F1(SetupProc)
2.525 E F2 .025(is called once for)2.525 F(each time it is loaded.)140
342 Q F1(void TearDownProc\(pointer tearDownData\))115 360 Q F2 1.021(W\
hen de\214ned, this function is called when the loader unloads a module\
.)140 384 R(The)140 396 Q F1(tearDownData)4 E F2 1.5(parameter is the r)
4 F 1.5(eturn value of the)-.18 F F1(SetupProc\(\))4 E F2 1.166
(that was called when the module was loaded.)140 408 R 1.166
(The purpose of this func-)6.166 F .616(tion is to clean up befor)140
420 R 3.116(et)-.18 G .616(he module is unloaded \(for example, by fr)
-3.116 F(eeing)-.18 E(allocated r)140 432 Q(esour)-.18 E(ces\).)-.18 E
/F3 14/Helvetica-Bold@0 SF 3.892(17.4 Pub)90 460 R(lic Loader Interface)
-.14 E F2 .738(The following is the Loader interface that is available \
to any part of the server)90 478 R 3.237(,a)-.74 G .737(nd may also be)
-3.237 F(used fr)90 490 Q(om within modules.)-.18 E .106
(Some of these have)90 508 R F1(xf86*)2.606 E F2 .106
(wrappers with simpler interfaces declar)2.606 F .106(ed in)-.18 F F1
("xf86.h")2.606 E F2 5.107(.T)C .107(hese wrap-)-5.107 F .384(pers ar)90
520 R 2.884(et)-.18 G .384(he pr)-2.884 F(eferr)-.18 E .384
(ed interface for modules, given that they ar)-.18 F 2.884(ea)-.18 G
.383(lso available in a statically built)-2.884 F(server)90 532 Q 2.5
(,w)-.74 G(her)-2.5 E(eas the functions below ar)-.18 E 2.5(en)-.18 G
(ot.)-2.5 E 0 Cg EP
%%Page: 64 64
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(XFree86\256 serv)90 48 Q
(er 4.x Design \(DRAFT\))-.15 E(64)264.86 E/F1 10/Courier@0 SF
(pointer LoadSubModule\(pointer parent, const char *module,)115 96 Q
(const char **subdirlist, const char **patternlist,)175 120 Q
(pointer options, const XF86ModReqInfo * modreq,)175 144 Q
(int *errmaj, int *errmin\))175 168 Q/F2 10/Palatino-Roman@0 SF .757
(This function is like the)140 192 R F1(LoadModule\(\))3.258 E F2 .758
(function described above, except)3.258 F .626
(that the module loaded is r)140 204 R(egister)-.18 E .625
(ed as a child of the calling module.)-.18 F(The)5.625 E F1(parent)140
216 Q F2 1.227(parameter is the calling module's handle.)3.726 F 1.227
(Modules loaded with)6.227 F 3.475(this function ar)140 228 R 5.975(ea)
-.18 G 3.474(utomatically unloaded when the par)-5.975 F 3.474
(ent module is)-.18 F 4.779(unloaded. The)140 240 R 2.279(other dif)
4.779 F(fer)-.18 E 2.279(ence is that the path parameter may not be)-.18
F 4.942(speci\214ed. The)140 252 R 2.442(module sear)4.942 F 2.442
(ch path used for modules loaded with this)-.18 F
(function is the default sear)140 264 Q(ch path as initialised with)-.18
E F1(LoaderSetPath\(\))2.5 E F2(.)A F1
(void UnloadSubModule\(pointer module\))115 282 Q F2 1.731
(This function unloads the module with handle)140 306 R F1(module)4.231
E F2 6.731(.I)C 4.231(ft)-6.731 G 1.731(hat module)-4.231 F 1.715
(itself has childr)140 318 R 1.715(en, they ar)-.18 F 4.215(ea)-.18 G
1.715(lso unloaded.)-4.215 F 1.715(It is like)6.715 F F1
(UnloadModule\(\))4.215 E F2(,)A
(except that it is safe to use for unloading child modules.)140 330 Q F1
(pointer LoaderSymbol\(const char *symbol\))115 348 Q F2 .752
(This function r)140 372 R .752(eturns the addr)-.18 F .753
(ess of the symbol with name)-.18 F F1(symbol)3.253 E F2 5.753(.T)C(his)
-5.753 E(may be used to locate a module entry point with a known name.)
140 384 Q F1(char **LoaderlistDirs\(const char **subdirlist,)115 402 Q
(const char **patternlist\))175 426 Q F2 1.029(This function r)140 450 R
1.029(eturns a)-.18 F F1(NULL)3.529 E F2 1.029
(terminated list of canonical modules names)3.529 F 1.109
(for modules found in the default module sear)140 462 R 1.109(ch path.)
-.18 F(The)6.109 E F1(subdirlist)3.609 E F2(and)140 474 Q F1
(patternlist)2.932 E F2 .432(parameters ar)2.932 F 2.932(ea)-.18 G 2.932
(sd)-2.932 G .432(escribed above, and can be used to)-2.932 F(contr)140
486 Q 2.693(ol the locations and names that ar)-.18 F 5.194(es)-.18 G
(ear)-5.194 E 5.194(ched. If)-.18 F 2.694(no modules ar)5.194 F(e)-.18 E
.484(found, the r)140 498 R .484(eturn value is)-.18 F F1(NULL)2.984 E
F2 5.484(.T)C .484(he r)-5.484 F .484(eturned list should be fr)-.18 F
.483(eed by call-)-.18 F(ing)140 510 Q F1(LoaderFreeDirList\(\))2.5 E F2
(when it is no longer needed.)2.5 E F1
(void LoaderFreeDirList\(char **list\))115 528 Q F2(This function fr)140
552 Q(ees a module list cr)-.18 E(eated by)-.18 E F1(LoaderlistDirs\(\))
2.5 E F2(.)A F1(void LoaderReqSymLists\(const char **list0, ...\))115
570 Q F2 .892(This function allows the r)140 594 R .892
(egistration of r)-.18 F(equir)-.18 E .892(ed symbols with the loader.)
-.18 F .453(It is normally used by a caller of)140 606 R F1
(LoadSubModule\(\))2.952 E F2 5.452(.I)C 2.952(fa)-5.452 G .452
(ny symbols r)-2.952 F(eg-)-.18 E(ister)140 618 Q .358
(ed in this way ar)-.18 F 2.858(ef)-.18 G .358(ound to be unr)-2.858 F
.358(esolved when)-.18 F F1(LoaderCheckUnre-)2.858 E(solved\(\))140 630
Q F2 .777(is called then)3.277 F F1(LoaderCheckUnresolved\(\))3.276 E F2
.776(will r)3.276 F .776(eport a fail-)-.18 F(ur)140 642 Q 4.461(e. The)
-.18 F 1.962(function takes one or mor)4.461 F(e)-.18 E F1(NULL)4.462 E
F2 1.962(terminated lists of symbols.)4.462 F(The end of the ar)140 654
Q(gument list is indicated by a)-.18 E F1(NULL)2.5 E F2(ar)2.5 E
(gument.)-.18 E F1(void LoaderReqSymbols\(const char *sym0, ...\))115
672 Q F2 1.877(This function is like)140 696 R F1(LoaderReqSymLists\(\))
4.376 E F2 1.876(except that its ar)4.376 F(guments)-.18 E(ar)140 708 Q
2.904(es)-.18 G .404(ymbols rather than lists of symbols.)-2.904 F .405
(This function is mor)5.405 F 2.905(ec)-.18 G(onvenient)-2.905 E .157
(when single functions ar)140 720 R 2.657(et)-.18 G 2.656(ob)-2.657 G
2.656(er)-2.656 G(egister)-2.836 E .156
(ed, especially when the single func-)-.18 F 1.951
(tion might depend on r)140 732 R 1.952(untime factors.)-.08 F 1.952
(The end of the ar)6.952 F 1.952(gument list is)-.18 F 0 Cg EP
%%Page: 65 65
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(XFree86\256 serv)90 48 Q
(er 4.x Design \(DRAFT\))-.15 E(65)264.86 E/F1 10/Palatino-Roman@0 SF
(indicated by a)140 96 Q/F2 10/Courier@0 SF(NULL)2.5 E F1(ar)2.5 E
(gument.)-.18 E F2(void LoaderRefSymLists\(const char **list0, ...\))115
114 Q F1 .817(This function allows the r)140 138 R .817
(egistration of possibly unr)-.18 F .816(esolved symbols with)-.18 F
.977(the loader.)140 150 R(When)5.977 E F2(LoaderCheckUnresolved\(\))
3.477 E F1 .978(is r)3.477 F .978(un it won't generate)-.08 F 1.286
(warnings for symbols r)140 162 R(egister)-.18 E 1.285
(ed in this way unless they wer)-.18 F 3.785(ea)-.18 G 1.285(lso r)
-3.785 F(egis-)-.18 E(ter)140 174 Q 1.54(ed as r)-.18 F(equir)-.18 E
1.54(ed symbols.)-.18 F 1.54(The function takes one or mor)6.54 F(e)-.18
E F2(NULL)4.04 E F1(termi-)4.04 E .201(nated lists of symbols.)140 186 R
.201(The end of the ar)5.201 F .2(gument list is indicated by a)-.18 F
F2(NULL)2.7 E F1(ar)140 198 Q(gument.)-.18 E F2
(void LoaderRefSymbols\(const char *sym0, ...\))115 216 Q F1 1.876
(This function is like)140 240 R F2(LoaderRefSymLists\(\))4.376 E F1
1.877(except that its ar)4.376 F(guments)-.18 E(ar)140 252 Q 2.905(es)
-.18 G .405(ymbols rather than lists of symbols.)-2.905 F .404
(This function is mor)5.404 F 2.904(ec)-.18 G(onvenient)-2.904 E .156
(when single functions ar)140 264 R 2.656(et)-.18 G 2.656(ob)-2.656 G
2.656(er)-2.656 G(egister)-2.836 E .157
(ed, especially when the single func-)-.18 F 1.952
(tion might depend on r)140 276 R 1.952(untime factors.)-.08 F 1.952
(The end of the ar)6.952 F 1.951(gument list is)-.18 F(indicated by a)
140 288 Q F2(NULL)2.5 E F1(ar)2.5 E(gument.)-.18 E F2
(int LoaderCheckUnresolved\(int dummy\))115 306 Q F1 1.861
(This function checks for unr)140 330 R 1.861(esolved symbols.)-.18 F
1.861(It generates warnings for)6.861 F(unr)140 342 Q 1.159
(esolved symbols that have not been r)-.18 F(egister)-.18 E 1.158
(ed with)-.18 F F2(LoaderRefSym-)3.658 E(Lists\(\))140 354 Q F1 5.619
(.A)C .619(ll such symbols ar)-5.619 F 3.119(ea)-.18 G .619
(utomatically mapped to a dummy func-)-3.119 F 5.235(tion. If)140 366 R
(unr)5.235 E 2.735(esolved symbols ar)-.18 F 5.235(ef)-.18 G 2.735
(ound that have been r)-5.235 F(egister)-.18 E 2.735(ed with)-.18 F F2
(LoaderReqSymLists\(\))140 378 Q F1(or)5.52 E F2(LoaderReqSymbols\(\))
5.52 E F1 3.02(then this function)5.52 F -.18(re)140 390 S 2.251
(turns a non-zer).18 F 4.751(ov)-.18 G 4.751(alue. If)-4.751 F 2.251
(none of these symbols ar)4.751 F 4.751(eu)-.18 G(nr)-4.751 E 2.25
(esolved the)-.18 F -.18(re)140 402 S(turn value is zer).18 E
(o, indicating success.)-.18 E(The)140 420 Q F2(dummy)3.422 E F1 .923
(parameter is not used, and should be set to)3.422 F F2(0)3.423 E F1
5.923(.I)C 3.423(ti)-5.923 G 3.423(sk)-3.423 G .923(ept only)-3.423 F
(for compatibility purposes.)140 432 Q F2
(LoaderErrorMsg\(const char *name, const char *modname,)115 450 Q
(int errmaj, int errmin\))175 474 Q F1 .321(This function prints an err)
140 498 R .321(or message that includes the text `)-.18 F .32
(`Failed to load)-.37 F 1.395(module'', the module name)140 510 R F2
(modname)3.895 E F1 3.895(,am)C 1.395(essage speci\214c to the)-3.895 F
F2(errmaj)3.895 E F1 1.193(value, and the value if)140 522 R F2(errmin)
3.692 E F1 6.192(.I)C(f)-6.192 E F2(name)3.692 E F1 1.192(is non-)3.692
F F2(NULL)A F1 3.692(,i)C 3.692(ti)-3.692 G 3.692(sp)-3.692 G 1.192
(rinted as an)-3.692 F(identifying pr)140 534 Q
(e\214x to the message \(followed by a `:'\).)-.18 E F2
(LoaderSetParentModuleRequirements\(pointer module,)115 552 Q
(pointer req\);)175 576 Q F1 .636
(This function is intended to be called fr)140 600 R .636(om a module's)
-.18 F F2(Setup)3.136 E F1 3.136(function. It)3.136 F 1.082
(associates an)140 612 R F2(XF86ModReqInfo)3.582 E F1(str)3.582 E(uctur)
-.08 E 3.581(eo)-.18 G(ccurr)-3.581 E 1.081(ence \(addr)-.18 F 1.081
(essed by)-.18 F F2(req)3.581 E F1(\))A 3.255
(with the module being loaded \(speci\214ed by)140 624 R F2(module)5.756
E F1 5.756(\). This)B(str)5.756 E(uctur)-.08 E(e)-.18 E(occurr)140 636 Q
3.265(ence will then be used to check this module's par)-.18 F 3.265
(ent modules)-.18 F 2.53(against. This)140 648 R .03
(mechanism allows a module to ensur)2.53 F 2.53(ei)-.18 G .03
(ts callers ar)-2.53 F 2.53(ec)-.18 G(ompati-)-2.53 E(ble.)140 660 Q/F3
14/Helvetica-Bold@0 SF 3.892(17.5 Special)90 688 R
(Registration Functions)3.892 E F1 2.45
(The loader contains some functions for r)90 706 R 2.449
(egistering some classes of modules.)-.18 F 2.449(These may be)7.449 F
(moved out of the loader at some point.)90 718 Q 0 Cg EP
%%Page: 66 66
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(XFree86\256 serv)90 48 Q
(er 4.x Design \(DRAFT\))-.15 E(66)264.86 E/F1 10/Courier@0 SF
(void LoadExtension\(ExtensionModule *ext\))115 96 Q/F2 10
/Palatino-Roman@0 SF 1.863(This r)140 120 R 1.864
(egisters the entry points for the extension identi\214ed by)-.18 F F1
(ext)4.364 E F2 6.864(.T)C(he)-6.864 E F1(ExtensionModule)140 132 Q F2
(str)2.5 E(uct is de\214ned as:)-.08 E/F3 8/Courier@0 SF
(typedef struct {)185 154 Q 28.8(InitExtension initFunc;)204.2 164 R
(char *)204.2 174 Q(name;)67.2 E 72(Bool *disablePtr;)204.2 184 R 28.8
(InitExtension setupFunc;)204.2 194 R 4.8(}E)185 204 S(xtensionModule;)
-4.8 E F1(void LoadFont\(FontModule *font\))115 234 Q F2 .856(This r)140
258 R .855(egisters the entry points for the font rasteriser module ide\
nti\214ed by)-.18 F F1(font)140 270 Q F2 5(.T)C(he)-5 E F1(FontModule)
2.5 E F2(str)2.5 E(uct is de\214ned as:)-.08 E F3(typedef struct {)185
292 Q 14.4(InitFont initFunc;)204.2 302 R(char *)204.2 312 Q(name;)28.8
E 19.2(pointer module;)204.2 322 R 4.8(}F)185 332 S(ontModule;)-4.8 E/F4
16/Helvetica-Bold@0 SF 4.448(18. Helper)90 380 R(Functions)4.448 E F2
.24(This section describe `)90 398 R .241
(`helper'' functions that video driver might \214nd useful.)-.37 F .241
(While video drivers)5.241 F(ar)90 410 Q 2.907(en)-.18 G .407(ot r)
-2.907 F(equir)-.18 E .407(ed to use any of these to be consider)-.18 F
.407(ed `)-.18 F .407(`compliant'', the use of appr)-.37 F .406
(opriate helpers)-.18 F(is str)90 422 Q(ongly encouraged to impr)-.18 E
(ove the consistency of driver behaviour.)-.18 E/F5 14/Helvetica-Bold@0
SF 3.892(18.1 Functions)90 444 R -.28(fo)3.892 G 3.892(rp).28 G
(rinting messa)-3.892 E .14(ge)-.14 G(s)-.14 E 0 Cg EP
%%Page: 67 67
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(XFree86\256 serv)90 48 Q
(er 4.x Design \(DRAFT\))-.15 E(67)264.86 E/F1 10/Courier@0 SF
(ErrorF\(const char *format, ...\))115 96 Q/F2 10/Palatino-Roman@0 SF
2.547(This is the basic function for writing to the err)140 114 R 2.548
(or log \(typically stderr)-.18 F .967(and/or a log \214le\).)140 126 R
-.55(Vi)5.967 G .966(deo drivers should usually avoid using this dir).55
F(ectly)-.18 E .261(in favour of the mor)140 138 R 2.761(es)-.18 G .261
(pecialised functions described below.)-2.761 F .261(This function)5.261
F(is useful for printing messages while debugging a driver.)140 150 Q F1
(FatalError\(const char *format, ...\))115 168 Q F2 .597
(This prints a message and causes the Xserver to abort.)140 180 R .597
(It should rar)5.597 F .596(ely be)-.18 F .689
(used within a video driver)140 192 R 3.189(,a)-.74 G 3.189(sm)-3.189 G
.689(ost err)-3.189 F .689(or conditions should be \215agged by)-.18 F
.81(the r)140 204 R .809(eturn values of the driver functions.)-.18 F
.809(This allows the higher layers to)5.809 F .606(decide how to pr)140
216 R 3.106(oceed. In)-.18 F(rar)3.106 E 3.106(ec)-.18 G .606
(ases, this can be used within a driver if a)-3.106 F
(fatal unexpected condition is found.)140 228 Q F1
(xf86ErrorF\(const char *format, ...\))115 246 Q F2 1.132(This is like)
140 264 R F1(ErrorF\(\))3.632 E F2 3.632(,e)C 1.132
(xcept that the message is only printed when the)-3.632 F 1.077
(Xserver's verbosity level is set to the default \()140 276 R F1(1)A F2
3.578(\)o)C 3.578(rh)-3.578 G 3.578(igher. It)-3.578 F 1.078(means that)
3.578 F .96(the messages ar)140 288 R 3.46(en)-.18 G .96
(ot printed when the server is started with the)-3.46 F F1(-quiet)3.46 E
F2 3.398(\215ag. T)140 300 R .898
(ypically this function would only be used for continuing messages)-.9 F
(started with one of the mor)140 312 Q 2.5(es)-.18 G
(pecialised functions described below.)-2.5 E F1
(xf86ErrorFVerb\(int verb, const char *format, ...\))115 330 Q F2(Like)
140 348 Q F1(xf86ErrorF\(\))3.924 E F2 3.924(,e)C 1.423
(xcept the minimum verbosity level for which the)-3.924 F .79
(message is to be printed is given explicitly.)140 360 R .79(Passing a)
5.79 F F1(verb)3.29 E F2 .79(value of zer)3.29 F(o)-.18 E .753
(means the message is always printed.)140 372 R 3.253(Av)5.753 G .753
(alue higher than)-3.253 F F1(1)3.253 E F2 .753(can be used)3.253 F .343
(for information would normally not be needed, but which might be usefu\
l)140 384 R(when diagnosing pr)140 396 Q(oblems.)-.18 E F1
(xf86Msg\(MessageType type, const char *format, ...\))115 414 Q F2 1.938
(This is like)140 432 R F1(xf86ErrorF\(\))4.438 E F2 4.437(,e)C 1.937
(xcept that the message is pr)-4.437 F 1.937(e\214xed with a)-.18 F .861
(marker determined by the value of)140 444 R F1(type)3.361 E F2 5.861
(.T)C .861(he marker is used to indicate)-5.861 F .224
(the type of message \(warning, err)140 456 R(or)-.18 E 2.724(,p)-.74 G
-.18(ro)-2.724 G .223(bed value, con\214g value, etc\).).18 F(Note)5.223
E(the)140 468 Q F1(xf86Verbose)2.5 E F2(value is ignor)2.5 E
(ed for messages of type)-.18 E F1(X_ERROR)2.5 E F2(.)A
(The marker values ar)140 486 Q(e:)-.18 E F1(X_PROBED)165 504 Q F2 -.92
(Va)190 522 S(lue was pr).92 E(obed.)-.18 E F1(X_CONFIG)165 552 Q F2
-.92(Va)190 570 S(lue was given in the con\214g \214le.).92 E F1
(X_DEFAULT)165 600 Q F2 -.92(Va)190 618 S(lue is a default.).92 E F1
(X_CMDLINE)165 648 Q F2 -.92(Va)190 666 S
(lue was given on the command line.).92 E F1(X_NOTICE)165 696 Q F2
(Notice.)190 714 Q 0 Cg EP
%%Page: 68 68
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(XFree86\256 serv)90 48 Q
(er 4.x Design \(DRAFT\))-.15 E(68)264.86 E/F1 10/Courier@0 SF(X_ERROR)
165 96 Q/F2 10/Palatino-Roman@0 SF(Err)190 114 Q(or message.)-.18 E F1
(X_WARNING)165 144 Q F2 -.92(Wa)190 162 S(rning message.).92 E F1
(X_INFO)165 192 Q F2(Informational message.)190 210 Q F1(X_NONE)165 240
Q F2(No pr)190 258 Q(e\214x.)-.18 E F1(X_NOT_IMPLEMENTED)165 288 Q F2
1.372(The message r)190 306 R 1.373
(elates to functionality that is not yet)-.18 F(implemented.)190 318 Q
F1 4.667(xf86MsgVerb\(MessageType type, int verb, const char *format,)
115 348 R(...\))115 360 Q F2(Like)140 378 Q F1(xf86Msg\(\))2.5 E F2 2.5
(,b)C(ut with the verbosity level given explicitly.)-2.5 E F1 .667
(xf86DrvMsg\(int scrnIndex, MessageType type, const char *format,)115
396 R(...\))115 408 Q F2 .068(This is like)140 426 R F1(xf86Msg\(\))
2.568 E F2 .068(except that the driver's name \(the)2.568 F F1(name)
2.567 E F2 .067(\214eld of the)2.567 F F1(ScrnInfoRec)140 438 Q F2 3.123
(\)f)C .623(ollowed by the)-3.123 F F1(scrnIndex)3.123 E F2 .623(in par)
3.123 F .624(entheses is printed fol-)-.18 F .282(lowing the pr)140 450
R 2.782(e\214x. This)-.18 F .281
(should be used by video drivers in most cases as it)2.782 F .53
(clearly indicates which driver/scr)140 462 R .53
(een the message is for.)-.18 F(If)5.53 E F1(scrnIndex)3.03 E F2(is)3.03
E(negative, this function behaves exactly like)140 474 Q F1(xf86Msg\(\))
2.5 E F2(.)A 2.126(NOTE: This function can only be used after the)140
492 R F1(ScrnInfoRec)4.625 E F2 2.125(and its)4.625 F F1(name)140 504 Q
F2 1.517(\214eld have been allocated.)4.017 F(Normally)6.517 E 4.017(,t)
-1.11 G 1.518(his means that it can not be)-4.017 F 2.089(used befor)140
516 R 4.589(et)-.18 G 2.088(he END of the)-4.589 F F1(ChipProbe\(\))
4.588 E F2 4.588(function. Prior)4.588 F 2.088(to that, use)4.588 F F1
(xf86Msg\(\))140 528 Q F2 4.522(,p)C -.18(ro)-4.522 G 2.022
(viding the driver's name explicitly.).18 F 2.023(No scr)7.023 F 2.023
(een number)-.18 F(can be supplied at that point.)140 540 Q F1
(xf86DrvMsgVerb\(int scrnIndex, MessageType type, int verb,)115 558 Q
(const char *format, ...\))175 582 Q F2(Like)140 600 Q F1
(xf86DrvMsg\(\))2.5 E F2 2.5(,b)C
(ut with the verbosity level given explicitly.)-2.5 E/F3 14
/Helvetica-Bold@0 SF 3.892(18.2 Functions)90 628 R -.28(fo)3.892 G 3.892
(rs).28 G(etting v)-3.892 E(alues based on command line and)-.28 E
(con\214g \214le)90 644 Q 0 Cg EP
%%Page: 69 69
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(XFree86\256 serv)90 48 Q
(er 4.x Design \(DRAFT\))-.15 E(69)264.86 E/F1 10/Courier@0 SF
(Bool xf86SetDepthBpp\(ScrnInfoPtr scrp, int depth, int bpp,)115 96 Q
(int fbbpp, int depth24flags\))175 120 Q/F2 10/Palatino-Roman@0 SF 1.623
(This function sets the)140 138 R F1(depth)4.123 E F2(,)A F1(pixmapBPP)
4.123 E F2(and)4.123 E F1(bitsPerPixel)4.124 E F2 1.624(\214elds of)
4.124 F(the)140 150 Q F1(ScrnInfoRec)6.613 E F2 9.113(.I)C 6.613(ta)
-9.113 G 4.112(lso determines the defaults for display-wide)-6.613 F
.896(attributes and pixmap formats the scr)140 162 R .897
(een will support, and \214nds the Dis-)-.18 F 1.777
(play subsection that matches the depth/bpp.)140 174 R 1.776
(This function should nor)6.777 F(-)-.18 E
(mally be called very early fr)140 186 Q(om the)-.18 E F1
(ChipPreInit\(\))2.5 E F2(function.)2.5 E 1.065(It r)140 204 R(equir)
-.18 E 1.065(es that the)-.18 F F1(confScreen)3.565 E F2 1.065
(\214eld of the)3.565 F F1(ScrnInfoRec)3.565 E F2 1.065(be initialised)
3.565 F .405(prior to calling it.)140 216 R .405
(This is done by the XFr)5.405 F .405(ee86 common layer prior to call-)
-.18 F(ing)140 228 Q F1(ChipPreInit\(\))2.5 E F2(.)A
(The parameters passed ar)140 246 Q(e:)-.18 E F1(depth)140 264 Q F2 .039
(driver's pr)165 282 R(eferr)-.18 E .039
(ed default depth if no other is given.)-.18 F .039(If zer)5.039 F .04
(o, use)-.18 F(the overall server default.)165 294 Q F1(bpp)140 324 Q F2
(Same, but for the pixmap bpp.)165 342 Q F1(fbbpp)140 372 Q F2
(Same, but for the framebuf)165 390 Q(fer bpp.)-.18 E F1(depth24flags)
140 420 Q F2 .852
(Flags that indicate the level of 24/32bpp support and whether)165 438 R
.935(conversion between dif)165 450 R(fer)-.18 E .935(ent framebuf)-.18
F .935(fer and pixmap formats)-.18 F 1.784(is supported.)165 462 R 1.784
(The \215ags for this ar)6.784 F 1.784(gument ar)-.18 F 4.284(ed)-.18 G
1.784(e\214ned as fol-)-4.284 F
(lows, and multiple \215ags may be ORed together:)165 474 Q F1
(NoDepth24Support)165 492 Q F2(No depth 24 formats supported)190 510 Q
F1(Support24bppFb)165 534 Q F2(24bpp framebuf)190 552 Q(fer supported)
-.18 E F1(Support32bppFb)165 582 Q F2(32bpp framebuf)190 600 Q
(fer supported)-.18 E F1(SupportConvert24to32)165 630 Q F2
(Can convert 24bpp pixmap to 32bpp fb)190 648 Q F1(SupportConvert32to24)
165 678 Q F2(Can convert 32bpp pixmap to 24bpp fb)190 696 Q F1
(ForceConvert24to32)165 726 Q 0 Cg EP
%%Page: 70 70
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(XFree86\256 serv)90 48 Q
(er 4.x Design \(DRAFT\))-.15 E(70)264.86 E/F1 10/Palatino-Roman@0 SF
(For)190 96 Q(ce 24bpp pixmap to 32bpp fb conversion)-.18 E/F2 10
/Courier@0 SF(ForceConvert32to24)165 126 Q F1(For)190 144 Q
(ce 32bpp pixmap to 24bpp fb conversion)-.18 E 2.126(It uses the comman\
d line, con\214g \214le, and default values in the corr)140 168 R(ect)
-.18 E(or)140 180 Q .289(der of pr)-.18 F .289
(ecedence to determine the depth and bpp values.)-.18 F .288
(It is up to the)5.288 F 1.05(driver to check the r)140 192 R 1.05
(esults to see that it supports them.)-.18 F 1.05(If not the)6.05 F F2
(Chip-)3.55 E(PreInit\(\))140 204 Q F1(function should r)2.5 E(eturn)
-.18 E F2(FALSE)2.5 E F1(.)A .152
(If only one of depth/bpp is given, the other is set to a r)140 222 R
.152(easonable \(and con-)-.18 F(sistent\) default.)140 234 Q .684
(If a driver \214nds that the initial)140 252 R F2(depth24flags)3.184 E
F1 .684(it uses later r)3.184 F .685(esults in a fb)-.18 F .829
(format that r)140 264 R(equir)-.18 E .829(es mor)-.18 F 3.329(ev)-.18 G
.828(ideo memory than is available it may call this)-3.329 F
(function a second time with a dif)140 276 Q(fer)-.18 E(ent)-.18 E F2
(depth24flags)2.5 E F1(setting.)2.5 E .3(On success, the r)140 294 R
.301(eturn value is)-.18 F F2(TRUE)2.801 E F1 5.301(.O)C 2.801(nf)-5.301
G(ailur)-2.801 E 2.801(ei)-.18 G 2.801(tp)-2.801 G .301(rints an err)
-2.801 F .301(or message)-.18 F(and r)140 306 Q(eturns)-.18 E F2(FALSE)
2.5 E F1(.)A(The following \214elds of the)140 324 Q F2(ScrnInfoRec)2.5
E F1(ar)2.5 E 2.5(ei)-.18 G(nitialised by this function:)-2.5 E F2
(depth)165 342 Q F1(,)A F2(bitsPerPixel)14.667 E F1(,)A F2(display)
14.667 E F1(,)A F2(imageByteOrder)14.666 E F1(,)A F2(bitmapScanlinePad)
165 354 Q F1(,)A F2(bitmapScanlineUnit)12.5 E F1(,)A F2(bitmap-)12.5 E
(BitOrder)165 366 Q F1(,)A F2(numFormats)2.5 E F1(,)A F2(formats)2.5 E
F1(,)A F2(fbFormat)2.5 E F1(.)A F2
(void xf86PrintDepthBpp\(scrnInfoPtr scrp\))115 390 Q F1 2.393
(This function can be used to print out the depth and bpp settings.)140
408 R(It)7.393 E(should be called after the \214nal call to)140 420 Q F2
(xf86SetDepthBpp\(\))2.5 E F1(.)A F2
(Bool xf86SetWeight\(ScrnInfoPtr scrp, rgb weight, rgb mask\))115 438 Q
F1 1.021(This function sets the)140 456 R F2(weight)3.522 E F1(,)A F2
(mask)3.522 E F1(,)A F2(offset)3.522 E F1(and)3.522 E F2(rgbBits)3.522 E
F1 1.022(\214elds of the)3.522 F F2(ScrnInfoRec)140 468 Q F1 7.513(.I)C
5.013(tw)-7.513 G 2.513(ould normally be called fairly early in the)
-5.013 F F2(Chip-)5.013 E(PreInit\(\))140 480 Q F1
(function for depths > 8bpp.)2.5 E .106(It r)140 498 R(equir)-.18 E .106
(es that the)-.18 F F2(depth)2.606 E F1(and)2.607 E F2(display)2.607 E
F1 .107(\214elds of the)2.607 F F2(ScrnInfoRec)2.607 E F1 .107(be ini-)
2.607 F(tialised prior to calling it.)140 510 Q
(The parameters passed ar)140 528 Q(e:)-.18 E F2(weight)140 540 Q F1
1.33(driver's pr)165 558 R(eferr)-.18 E 1.33
(ed default weight if no other is given.)-.18 F 1.33(If zer)6.33 F(o,)
-.18 E(use the overall server default.)165 570 Q F2(mask)140 588 Q F1
(Same, but for mask.)165 606 Q 2.126(It uses the command line, con\214g\
 \214le, and default values in the corr)140 624 R(ect)-.18 E(or)140 636
Q 1.583(der of pr)-.18 F 1.583(ecedence to determine the weight value.)
-.18 F 1.582(It derives the mask)6.583 F .188(and of)140 648 R .188
(fset values fr)-.18 F .188(om the weight and the defaults.)-.18 F .188
(It is up to the driver to)5.188 F .649(check the r)140 660 R .648
(esults to see that it supports them.)-.18 F .648(If not the)5.648 F F2
(ChipPreInit\(\))3.148 E F1(function should r)140 672 Q(eturn)-.18 E F2
(FALSE)2.5 E F1(.)A 2.514
(On success, this function prints a message showing the weight values)
140 690 R(selected, and r)140 702 Q(eturns)-.18 E F2(TRUE)2.5 E F1(.)A
(On failur)140 720 Q 2.5(ei)-.18 G 2.5(tp)-2.5 G(rints an err)-2.5 E
(or message and r)-.18 E(eturns)-.18 E F2(FALSE)2.5 E F1(.)A
(The following \214elds of the)140 738 Q F2(ScrnInfoRec)2.5 E F1(ar)2.5
E 2.5(ei)-.18 G(nitialised by this function:)-2.5 E 0 Cg EP
%%Page: 71 71
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(XFree86\256 serv)90 48 Q
(er 4.x Design \(DRAFT\))-.15 E(71)264.86 E/F1 10/Courier@0 SF(weight)
165 96 Q/F2 10/Palatino-Roman@0 SF(,)A F1(mask)2.5 E F2(,)A F1(offset)
2.5 E F2(.)A F1
(Bool xf86SetDefaultVisual\(ScrnInfoPtr scrp, int visual\))115 120 Q F2
2.754(This function sets the)140 138 R F1(defaultVisual)5.253 E F2 2.753
(\214eld of the)5.253 F F1(ScrnInfoRec)5.253 E F2 7.753(.I)C(t)-7.753 E
(would normally be called fairly early fr)140 150 Q(om the)-.18 E F1
(ChipPreInit\(\))2.5 E F2(function.)2.5 E .106(It r)140 168 R(equir)-.18
E .106(es that the)-.18 F F1(depth)2.606 E F2(and)2.607 E F1(display)
2.607 E F2 .107(\214elds of the)2.607 F F1(ScrnInfoRec)2.607 E F2 .107
(be ini-)2.607 F(tialised prior to calling it.)140 180 Q
(The parameters passed ar)140 198 Q(e:)-.18 E F1(visual)140 216 Q F2 .61
(driver's pr)165 234 R(eferr)-.18 E .609
(ed default visual if no other is given.)-.18 F(If)5.609 E F1(-1)3.109 E
F2 3.109(,u)C(se)-3.109 E(the overall server default.)165 246 Q 2.126(I\
t uses the command line, con\214g \214le, and default values in the cor\
r)140 264 R(ect)-.18 E(or)140 276 Q 1.007(der of pr)-.18 F 1.006
(ecedence to determine the default visual value.)-.18 F 1.006
(It is up to the)6.006 F 2.533(driver to check the r)140 288 R 2.534
(esult to see that it supports it.)-.18 F 2.534(If not the)7.534 F F1
(Chip-)5.034 E(PreInit\(\))140 300 Q F2(function should r)2.5 E(eturn)
-.18 E F1(FALSE)2.5 E F2(.)A 2.627
(On success, this function prints a message showing the default visual)
140 318 R(selected, and r)140 330 Q(eturns)-.18 E F1(TRUE)2.5 E F2(.)A
(On failur)140 348 Q 2.5(ei)-.18 G 2.5(tp)-2.5 G(rints an err)-2.5 E
(or message and r)-.18 E(eturns)-.18 E F1(FALSE)2.5 E F2(.)A F1
(Bool xf86SetGamma\(ScrnInfoPtr scrp, Gamma gamma\))115 366 Q F2 1.868
(This function sets the)140 384 R F1(gamma)4.368 E F2 1.868
(\214eld of the)4.368 F F1(ScrnInfoRec)4.368 E F2 6.868(.I)C 4.369(tw)
-6.868 G 1.869(ould nor)-4.369 F(-)-.18 E 1.767
(mally be called fairly early fr)140 396 R 1.767(om the)-.18 F F1
(ChipPreInit\(\))4.267 E F2 1.767(function in cases)4.267 F(wher)140 408
Q 2.5(et)-.18 G(he driver supports gamma corr)-2.5 E(ection.)-.18 E .351
(It r)140 426 R(equir)-.18 E .351(es that the)-.18 F F1(monitor)2.852 E
F2 .352(\214eld of the)2.852 F F1(ScrnInfoRec)2.852 E F2 .352
(be initialised prior)2.852 F(to calling it.)140 438 Q
(The parameters passed ar)140 456 Q(e:)-.18 E F1(gamma)140 468 Q F2 .13
(driver's pr)165 486 R(eferr)-.18 E .13
(ed default gamma if no other is given.)-.18 F .13(If zer)5.13 F 2.63
(o\()-.18 G F1(<)-2.63 E(0.01)165 498 Q F2
(\), use the overall server default.)A 2.126(It uses the command line, \
con\214g \214le, and default values in the corr)140 516 R(ect)-.18 E(or)
140 528 Q .821(der of pr)-.18 F .821
(ecedence to determine the gamma value.)-.18 F .82
(It is up to the driver)5.821 F 3.427(to check the r)140 540 R 3.428
(esults to see that it supports them.)-.18 F 3.428(If not the)8.428 F F1
(Chip-)5.928 E(PreInit\(\))140 552 Q F2(function should r)2.5 E(eturn)
-.18 E F1(FALSE)2.5 E F2(.)A 2.684
(On success, this function prints a message showing the gamma value)140
570 R(selected, and r)140 582 Q(eturns)-.18 E F1(TRUE)2.5 E F2(.)A
(On failur)140 600 Q 2.5(ei)-.18 G 2.5(tp)-2.5 G(rints an err)-2.5 E
(or message and r)-.18 E(eturns)-.18 E F1(FALSE)2.5 E F2(.)A F1
(void xf86SetDpi\(ScrnInfoPtr pScrn, int x, int y\))115 618 Q F2 1.681
(This function sets the)140 636 R F1(xDpi)4.182 E F2(and)4.182 E F1
(yDpi)4.182 E F2 1.682(\214elds of the)4.182 F F1(ScrnInfoRec)4.182 E F2
6.682(.T)C(he)-6.682 E .165(driver can specify pr)140 648 R(eferr)-.18 E
.164(ed defaults by setting)-.18 F F1(x)2.664 E F2(and)2.664 E F1(y)
2.664 E F2 .164(to non-zer)2.664 F 2.664(ov)-.18 G(alues.)-2.664 E(The)
140 660 Q F1(-dpi)3.169 E F2 .669
(command line option overrides all other settings.)3.169 F .669
(Otherwise, if)5.669 F(the)140 672 Q/F3 10/Palatino-Bold@0 SF
(DisplaySize)2.694 E F2 .194(entry is pr)2.694 F .194(esent in the scr)
-.18 F(een's)-.18 E F3(Monitor)2.693 E F2 .193(con\214g \214le section,)
2.693 F 1.396
(it is used together with the virtual size to calculate the dpi values.)
140 684 R(This)6.397 E(function should be called after all the mode r)
140 696 Q(esolution has been done.)-.18 E F1
(void xf86SetBlackWhitePixels\(ScrnInfoPtr pScrn\))115 714 Q F2 .25
(This functions sets the)140 732 R F1(blackPixel)2.75 E F2(and)2.75 E F1
(whitePixel)2.75 E F2 .25(\214elds of the)2.75 F F1(Scrn-)2.75 E 0 Cg EP
%%Page: 72 72
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(XFree86\256 serv)90 48 Q
(er 4.x Design \(DRAFT\))-.15 E(72)264.86 E/F1 10/Courier@0 SF(InfoRec)
140 96 Q/F2 10/Palatino-Roman@0 SF(accor)4.028 E 1.529
(ding to whether or not the)-.18 F F1(-flipPixels)4.029 E F2 1.529
(command line)4.029 F(options is pr)140 108 Q(esent.)-.18 E F1
(const char *xf86GetVisualName\(int visual\))115 126 Q F2 1.574
(Returns a printable string with the visual name matching the numerical)
140 144 R 2.218(visual class pr)140 156 R 4.718(ovided. If)-.18 F 2.218
(the value is outside the range of valid visual)4.718 F(classes,)140 168
Q F1(NULL)2.5 E F2(is r)2.5 E(eturned.)-.18 E/F3 14/Helvetica-Bold@0 SF
3.892(18.3 Primar)90 196 R 3.892(yM).14 G(ode functions)-3.892 E F2 .554
(The primary mode helper functions ar)90 214 R 3.053(et)-.18 G .553
(hose which would normally be used by a driver)-3.053 F 3.053(,u)-.74 G
(nless)-3.053 E(it has unusual r)90 226 Q(equir)-.18 E
(ements which cannot be cater)-.18 E(ed for the by the helpers.)-.18 E
F1 19.333(int xf86ValidateModes\(ScrnInfoPtr scrp, DisplayModePtr)115
250 R(availModes,)115 262 Q
(char **modeNames, ClockRangePtr clockRanges,)175 286 Q
(int *linePitches, int minPitch, int maxPitch,)175 310 Q
(int pitchInc, int minHeight, int maxHeight,)175 334 Q
(int virtualX, int virtualY,)175 358 Q(unsigned long apertureSize,)175
382 Q(LookupModeFlags strategy\))175 406 Q F2 .206(This function basica\
lly selects the set of modes to use based on those avail-)140 430 R
1.265(able and the various constraints.)140 442 R 1.266
(It also sets some other r)6.265 F 1.266(elated parame-)-.18 F 2.5
(ters. It)140 454 R(is normally called near the end of the)2.5 E F1
(ChipPreInit\(\))2.5 E F2(function.)2.5 E
(The parameters passed to the function ar)140 472 Q(e:)-.18 E F1
(availModes)140 490 Q F2(List of modes available for the monitor.)165
514 Q F1(modeNames)140 544 Q F2(List of mode names that the scr)165 568
Q(een is r)-.18 E(equesting.)-.18 E F1(clockRanges)140 598 Q F2 6.061
(Al)165 622 S 3.561(ist of clock ranges allowed by the driver.)-6.061 F
3.561(Each range)8.561 F .686
(includes whether interlaced or multiscan modes ar)165 634 R 3.186(es)
-.18 G(upported)-3.186 E(for that range.)165 646 Q(See below for mor)5 E
2.5(eo)-.18 G(n)-2.5 E F1(clockRanges)2.5 E F2(.)A F1(linePitches)140
676 Q F2 1.753(List of line pitches supported by the driver.)165 700 R
1.753(This is optional)6.753 F(and should be)165 712 Q F1(NULL)2.5 E F2
(when not used.)2.5 E F1(minPitch)140 742 Q 0 Cg EP
%%Page: 73 73
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(XFree86\256 serv)90 48 Q
(er 4.x Design \(DRAFT\))-.15 E(73)264.86 E/F1 10/Palatino-Roman@0 SF
2.32(Minimum line pitch supported by the driver.)165 96 R 2.32
(This must be)7.32 F 1.705(supplied when)165 108 R/F2 10/Courier@0 SF
(linePitches)4.205 E F1(is)4.205 E F2(NULL)4.205 E F1 4.205(,a)C 1.705
(nd is ignor)-4.205 F 1.705(ed other)-.18 F(-)-.18 E(wise.)165 120 Q F2
(maxPitch)140 150 Q F1 .801(Maximum line pitch supported by the driver.)
165 174 R .801(This is r)5.801 F(equir)-.18 E(ed)-.18 E(when)165 186 Q
F2(minPitch)2.5 E F1(is r)2.5 E(equir)-.18 E(ed.)-.18 E F2(pitchInc)140
216 Q F1 3.06
(Granularity of horizontal pitch values as supported by the)165 240 R
2.5(chipset. This)165 252 R(is expr)2.5 E(essed in bits.)-.18 E
(This must be supplied.)5 E F2(minHeight)140 282 Q F1
(minimum virtual height allowed.)165 306 Q(If zer)5 E
(o, no limit is imposed.)-.18 E F2(maxHeight)140 336 Q F1
(maximum virtual height allowed.)165 360 Q(If zer)5 E
(o, no limit is imposed.)-.18 E F2(virtualX)140 390 Q F1 .854(If gr)165
414 R .854(eater than zer)-.18 F .854
(o, this is the virtual width value that will be)-.18 F 3.054
(used. Otherwise,)165 426 R .554
(the virtual width is chosen to be the smallest)3.054 F
(that can accommodate the modes selected.)165 438 Q F2(virtualY)140 468
Q F1 .71(If gr)165 492 R .71(eater than zer)-.18 F .711
(o, this is the virtual height value that will be)-.18 F 2.882
(used. Otherwise,)165 504 R .382
(the virtual height is chosen to be the smallest)2.882 F
(that can accommodate the modes selected.)165 516 Q F2(apertureSize)140
546 Q F1 1.277(The size \(in bytes\) of the apertur)165 570 R 3.777(eu)
-.18 G 1.278(sed to access video mem-)-3.777 F(ory.)165 582 Q F2
(strategy)140 612 Q F1 1.12(The strategy to use when choosing fr)165 636
R 1.12(om multiple modes with)-.18 F(the same name.)165 648 Q
(The options ar)5 E(e:)-.18 E F2(LOOKUP_DEFAULT)165 666 Q F1(???)190 684
Q F2(LOOKUP_BEST_REFRESH)165 714 Q F1(mode with best r)190 732 Q(efr)
-.18 E(esh rate)-.18 E 0 Cg EP
%%Page: 74 74
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(XFree86\256 serv)90 48 Q
(er 4.x Design \(DRAFT\))-.15 E(74)264.86 E/F1 10/Courier@0 SF
(LOOKUP_CLOSEST_CLOCK)165 96 Q/F2 10/Palatino-Roman@0 SF
(mode with closest matching clock)190 114 Q F1(LOOKUP_LIST_ORDER)165 144
Q F2(\214rst usable mode in list)190 162 Q .949
(The following options can also be combined \(OR'ed\) with one)165 180 R
(of the above:)165 192 Q F1(LOOKUP_CLKDIV2)165 210 Q F2
(Allow halved clocks)190 228 Q F1(LOOKUP_OPTIONAL_TOLERANCES)165 258 Q
F2 5.326(Allow missing horizontal sync and/or vertical)190 276 R -.18
(re)190 288 S(fr).18 E(esh ranges in the XF86Con\214g Monitor section)
-.18 E F1(LOOKUP_OPTIONAL_TOLERANCES)165 306 Q F2 4.005
(should only be speci\214ed)6.505 F .553(when the driver can ensur)165
318 R 3.053(ea)-.18 G .553(ll modes it generates can sync on,)-3.053 F
.803(or at least not damage, the monitor or digital \215at panel.)165
330 R(Hori-)5.803 E .389(zontal sync and/or vertical r)165 342 R(efr)
-.18 E .389(esh ranges speci\214ed by the user)-.18 F
(will still be honour)165 354 Q(ed \(and acted upon\).)-.18 E 1.47
(This function r)140 372 R(equir)-.18 E 1.47
(es that the following \214elds of the)-.18 F F1(ScrnInfoRec)3.97 E F2
(ar)3.97 E(e)-.18 E(initialised prior to calling it:)140 384 Q F1
(clock[])140 402 Q F2(List of discr)165 420 Q(ete clocks \(when non-pr)
-.18 E(ogrammable\))-.18 E F1(numClocks)140 450 Q F2(Number of discr)165
468 Q(ete clocks \(when non-pr)-.18 E(ogrammable\))-.18 E F1(progClock)
140 498 Q F2(Whether the clock is pr)165 516 Q(ogrammable or not)-.18 E
F1(monitor)140 546 Q F2
(Pointer to the applicable XF86Con\214g monitor section)165 564 Q F1
(fdFormat)140 594 Q F2(Format of the scr)165 612 Q(een buf)-.18 E(fer)
-.18 E F1(videoRam)140 642 Q F2(total video memory size \(in bytes\))165
660 Q F1(maxHValue)140 690 Q F2(Maximum horizontal timing value allowed)
165 708 Q F1(maxVValue)140 738 Q 0 Cg EP
%%Page: 75 75
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(XFree86\256 serv)90 48 Q
(er 4.x Design \(DRAFT\))-.15 E(75)264.86 E/F1 10/Palatino-Roman@0 SF
(Maximum vertical timing value allowed)165 96 Q/F2 10/Courier@0 SF(xInc)
140 126 Q F1(Horizontal timing incr)165 144 Q
(ement in pixels \(defaults to 8\))-.18 E
(This function \214lls in the following)140 162 Q F2(ScrnInfoRec)2.5 E
F1(\214elds:)2.5 E F2(modePool)140 180 Q F1 3.01(As)165 204 S .51
(ubset of the modes available to the monitor which ar)-3.01 F 3.01(ec)
-.18 G(om-)-3.01 E(patible with the driver.)165 216 Q F2(modes)140 246 Q
F1 .606(One mode entry for each of the r)165 270 R .607
(equested modes, with the sta-)-.18 F 2.752
(tus \214eld of each \214lled in to indicate if the mode has been)165
282 R(accepted or not.)165 294 Q(This list of modes is a cir)5 E
(cular list.)-.18 E F2(virtualX)140 324 Q F1(The r)165 348 Q
(esulting virtual width.)-.18 E F2(virtualY)140 378 Q F1(The r)165 402 Q
(esulting virtual height.)-.18 E F2(displayWidth)140 432 Q F1(The r)165
456 Q(esulting line pitch.)-.18 E F2(virtualFrom)140 486 Q F1(Wher)165
510 Q 2.5(et)-.18 G(he virtual size was determined fr)-2.5 E(om.)-.18 E
1.081(The \214rst stage of this function checks that the)140 528 R F2
(virtualX)3.581 E F1(and)3.581 E F2(virtualY)3.581 E F1 .303
(values supplied \(if gr)140 540 R .303(eater than zer)-.18 F .303
(o\) ar)-.18 F 2.802(ec)-.18 G .302(onsistent with the line pitch and)
-2.802 F F2(maxHeight)140 552 Q F1 2.785(limitations. If)2.785 F .285
(not, an err)2.785 F .286(or message is printed, and the r)-.18 F(eturn)
-.18 E(value is)140 564 Q F2(-1)2.5 E F1(.)A 2.358
(The second stage sets up the mode pool, eliminating immediately any)140
582 R .492(modes that exceed the driver's line pitch limits, and also t\
he virtual width)140 594 R .739(and height limits \(if gr)140 606 R .738
(eater than zer)-.18 F 3.238(o\). For)-.18 F .738(each mode r)3.238 F
.738(emoved an infor)-.18 F(-)-.18 E .2
(mational message is printed at verbosity level)140 618 R F2(2)2.7 E F1
5.2(.I)C 2.7(ft)-5.2 G .2(he mode pool ends up)-2.7 F(being empty)140
630 Q 2.5(,aw)-1.11 G(arning message is printed, and the r)-2.5 E
(eturn value is)-.18 E F2(0)2.5 E F1(.)A 1.834
(The \214nal stage is to lookup each mode name, and \214ll in the r)140
648 R(emaining)-.18 E 2.63(parameters. If)140 660 R .131(an err)2.631 F
.131(or condition is encounter)-.18 F .131
(ed, a message is printed, and)-.18 F .601(the r)140 672 R .601
(eturn value is)-.18 F F2(-1)3.101 E F1 5.601(.O)C .601(therwise, the r)
-5.601 F .601(eturn value is the number of valid)-.18 F(modes found \()
140 684 Q F2(0)A F1(if none ar)2.5 E 2.5(ef)-.18 G(ound\).)-2.5 E 1.258
(Even if the supplied mode names include duplicates, no two names will)
140 702 R .708(ever match the same mode.)140 714 R(Furthermor)5.707 E
.707(e, if the supplied mode names do)-.18 F .927
(not yield a valid mode \(including the case wher)140 726 R 3.427(en)
-.18 G 3.427(on)-3.427 G .927(ames ar)-3.427 F 3.427(ep)-.18 G .927
(assed at)-3.427 F .099(all\), the function will continue looking thr)
140 738 R .099(ough the mode pool until it \214nds)-.18 F 0 Cg EP
%%Page: 76 76
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(XFree86\256 serv)90 48 Q
(er 4.x Design \(DRAFT\))-.15 E(76)264.86 E/F1 10/Palatino-Roman@0 SF
2.5(am)140 96 S
(ode that survives all checks, or until the mode pool is exhausted.)-2.5
E 2.625(Am)140 114 S .126
(essage is only printed by this function when a fundamental pr)-2.625 F
.126(oblem is)-.18 F 3.912(found. It)140 126 R 1.412
(is intended that this function may be called mor)3.912 F 3.911(et)-.18
G 1.411(han once if)-3.911 F(ther)140 138 Q 2.5(ei)-.18 G 2.5(sm)-2.5 G
(or)-2.5 E 2.5(et)-.18 G
(han one set of constraints that the driver can work within.)-2.5 E
1.779(If this function r)140 156 R(eturns)-.18 E/F2 10/Courier@0 SF(-1)
4.279 E F1 4.279(,t)C(he)-4.279 E F2(ChipPreInit\(\))4.279 E F1 1.779
(function should r)4.279 F(eturn)-.18 E F2(FALSE)140 168 Q F1(.)A F2
(clockRanges)140 186 Q F1 1.11
(is a linked list of clock ranges allowed by the driver.)3.61 F 1.11
(If a)6.11 F 1.312(mode doesn't \214t in any of the de\214ned)140 198 R
F2(clockRanges)3.813 E F1 3.813(,i)C 3.813(ti)-3.813 G 3.813(sr)-3.813 G
3.813(ejected. The)-3.993 F(\214rst)140 210 Q F2(clockRange)4.362 E F1
1.861(that matches all r)4.361 F(equir)-.18 E 1.861(ements is used.)-.18
F 1.861(This str)6.861 F(uctur)-.08 E(e)-.18 E
(needs to be initialized to NULL when allocated.)140 222 Q F2
(clockRanges)140 240 Q F1(contains the following \214elds:)2.5 E F2
(minClock)140 258 Q(maxClock)140 282 Q F1 .783
(The lower and upper mode clock bounds for which the r)165 306 R .783
(est of)-.18 F(the)165 318 Q F2(clockRange)3.637 E F1 1.136
(parameters apply.)3.637 F 1.136(Since these ar)6.136 F 3.636(et)-.18 G
1.136(he mode)-3.636 F 2.787(clocks, they ar)165 330 R 5.287(en)-.18 G
2.788(ot scaled with the)-5.287 F F2(ClockMulFactor)5.288 E F1(and)5.288
E F2(ClockDivFactor)165 342 Q F1 5.501(.I)C 3.001(ti)-5.501 G 3.001(su)
-3.001 G 3.001(pt)-3.001 G 3.001(ot)-3.001 G .501
(he driver to adjust these values)-3.001 F
(if they depend on the clock scaling factors.)165 354 Q F2(clockIndex)
140 384 Q F1(\(not used yet\))165 408 Q F2(-1)2.5 E F1(for pr)2.5 E
(ogrammable clocks)-.18 E F2(interlaceAllowed)140 438 Q(TRUE)165 462 Q
F1(if interlacing is allowed for this range)2.5 E F2(doubleScanAllowed)
140 492 Q(TRUE)165 516 Q F1
(if doublescan or multiscan is allowed for this range)2.5 E F2
(ClockMulFactor)140 546 Q(ClockDivFactor)140 570 Q F1 .026
(Scaling factors that ar)165 594 R 2.526(ea)-.18 G .026
(pplied to the mode clocks ONL)-2.526 F 2.526(Yb)-.92 G(efor)-2.526 E(e)
-.18 E .827(selecting a clock index \(when ther)165 606 R 3.327(ei)-.18
G 3.326(sn)-3.327 G 3.326(op)-3.326 G -.18(ro)-3.326 G .826
(grammable clock\)).18 F .299(or a)165 618 R F2(SynthClock)2.799 E F1
2.799(value. This)2.799 F .299(is useful for drivers that support)2.799
F 1.523(pixel multiplexing or that need to scale the clocks because of)
165 630 R(har)165 642 Q(dwar)-.18 E 2.519(er)-.18 G .019
(estrictions \(like sending 24bpp data to an 8 bit RAM-)-2.699 F
(DAC using a tripled clock\).)165 654 Q .849
(Note that these parameters describe what must be done to the)165 672 R
.599(mode clock to achieve the data transport clock between graph-)165
684 R .493(ics contr)165 696 R .493(oller and RAMDAC.)-.18 F .492
(For example for)5.492 F F2(2:1)2.992 E F1 .492(pixel multi-)2.992 F
2.083(plexing, two pixels ar)165 708 R 4.583(es)-.18 G 2.083
(ent to the RAMDAC on each clock.)-4.583 F 1.468
(This allows the RAMDAC clock to be half of the actual pixel)165 720 R
3.025(clock. Hence,)165 732 R F2(ClockMulFactor=1)3.025 E F1(and)3.025 E
F2(ClockDivFactor=2)3.025 E F1(.)A 0 Cg EP
%%Page: 77 77
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(XFree86\256 serv)90 48 Q
(er 4.x Design \(DRAFT\))-.15 E(77)264.86 E/F1 10/Palatino-Roman@0 SF
.254(This means that the clock used for clock selection \(ie, determin-)
165 96 R .16(ing the corr)165 108 R .16(ect clock index fr)-.18 F .16
(om the list of discr)-.18 F .16(ete clocks\) or for)-.18 F(the)165 120
Q/F2 10/Courier@0 SF(SynthClock)5.465 E F1 2.964
(\214eld in case of a pr)5.465 F 2.964(ogrammable clock is:)-.18 F(\()
165 132 Q F2 .042(mode->Clock * ClockMulFactor\) / ClockDivFactor)B F1
(.)A F2(PrivFlags)140 162 Q F1 .166(This \214eld is copied into the)165
186 R F2(mode->PrivFlags)2.665 E F1 .165(\214eld when this)2.665 F F2
(clockRange)165 198 Q F1 6.06(is selected by)8.56 F F2
(xf86ValidateModes\(\))8.56 E F1 11.06(.I)C(t)-11.06 E .682
(allows the driver to \214nd out what clock range was selected, so)165
210 R 2.363(it knows it needs to set up pixel multiplexing or any other)
165 222 R .65(range-dependent featur)165 234 R 3.15(e. This)-.18 F .65
(\214eld is pur)3.15 F .65(ely driver)-.18 F .65(-de\214ned: it)-.18 F
.457
(may contain \215ag bits, an index or anything else \(as long as it is)
165 246 R(an)165 258 Q F2(INT)2.5 E F1(\).)A .332(Note that the)140 276
R F2(mode->SynthClock)2.832 E F1 .332(\214eld is always \214lled in by)
2.832 F F2(xf86Vali-)2.832 E(dateModes\(\))140 288 Q F1 4.895(:i)C 4.895
(tw)-4.895 G 2.395(ill contain the `)-4.895 F 2.395
(`data transport clock'', which is the)-.37 F 2.13
(clock that will have to be pr)140 300 R 2.13
(ogrammed in the chip when it has a pr)-.18 F(o-)-.18 E .211
(grammable clock, or the clock that will be picked fr)140 312 R .212
(om the clocks list when)-.18 F(it is not a pr)140 324 Q
(ogrammable one.)-.18 E(Thus:)5 E F2(mode->SynthClock =)140 342 Q .5
(\(mode->Clock * ClockMulFactor\) / ClockDivFac-)200 366 R(tor)140 378 Q
(void xf86PruneDriverModes\(ScrnInfoPtr scrp\))115 396 Q F1 .92
(This function deletes modes in the modes \214eld of the)140 420 R F2
(ScrnInfoRec)3.42 E F1(that)3.42 E 3.028(have been marked as invalid.)
140 432 R 3.027(This is normally r)8.027 F 3.027(un after having r)-.08
F(un)-.08 E F2(xf86ValidateModes\(\))140 444 Q F1 .623
(for the last time.)3.123 F .623(For each mode that is deleted,)5.623 F
2.578(aw)140 456 S .078(arning message is printed out indicating the r)
-2.578 F .077(eason for it being deleted.)-.18 F F2
(void xf86SetCrtcForModes\(ScrnInfoPtr scrp, int adjustFlags\))115 474 Q
F1 .621(This function \214lls in the)140 498 R F2(Crtc*)3.121 E F1 .622
(\214elds for all the modes in the)3.121 F F2(modes)3.122 E F1(\214eld)
3.122 E .88(of the)140 510 R F2(ScrnInfoRec)3.38 E F1 5.88(.T)C(he)-5.88
E F2(adjustFlags)3.38 E F1 .88(parameter determines how the)3.38 F .258
(vertical CR)140 522 R .258(TC values ar)-.37 F 2.758(es)-.18 G .258
(caled for interlaced modes.)-2.758 F .259(They ar)5.258 F 2.759(eh)-.18
G .259(alved if it)-2.759 F(is)140 534 Q F2(INTERLACE_HALVE_V)3.199 E F1
5.699(.T)C .699(he vertical CR)-5.699 F .699(TC values ar)-.37 F 3.199
(ed)-.18 G .699(oubled for dou-)-3.199 F(blescan modes, and ar)140 546 Q
2.5(ef)-.18 G(urther multiplied by the)-2.5 E F2(VScan)2.5 E F1(value.)
2.5 E .028(This function is normally called after calling)140 564 R F2
(xf86PruneDriverModes\(\))2.529 E F1(.)A F2
(void xf86PrintModes\(ScrnInfoPtr scrp\))115 582 Q F1 1.479(This functi\
on prints out the virtual size setting, and the line pitch being)140 606
R 3.106(used. It)140 618 R .606
(also prints out two lines for each mode being used.)3.106 F .607
(The \214rst line)5.607 F 2.449
(includes the mode's pixel clock, horizontal sync rate, r)140 630 R(efr)
-.18 E 2.449(esh rate, and)-.18 F 1.744
(whether it is interlaced, doublescanned and/or multi-scanned.)140 642 R
1.744(The sec-)6.744 F(ond line is the mode's Modeline.)140 654 Q
(This function is normally called after calling)140 672 Q F2
(xf86SetCrtcForModes\(\))2.5 E F1(.)A/F3 14/Helvetica-Bold@0 SF 3.892
(18.4 Secondar)90 700 R 3.892(yM).14 G(ode functions)-3.892 E F1 1.853
(The secondary mode helper functions ar)90 718 R 4.352(ef)-.18 G 1.852
(unctions which ar)-4.352 F 4.352(en)-.18 G 1.852
(ormally used by the primary)-4.352 F 1.215
(mode helper functions, and which ar)90 730 R 3.715(en)-.18 G 1.216
(ot normally called dir)-3.715 F 1.216(ectly by a driver.)-.18 F 1.216
(If a driver has)6.216 F .663(unusual r)90 742 R(equir)-.18 E .663(emen\
ts and needs to do its own mode validation, it might be able to make us\
e of)-.18 F 0 Cg EP
%%Page: 78 78
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(XFree86\256 serv)90 48 Q
(er 4.x Design \(DRAFT\))-.15 E(78)264.86 E/F1 10/Palatino-Roman@0 SF
(some of these secondary mode helper functions.)90 96 Q/F2 10/Courier@0
SF .667
(int xf86GetNearestClock\(ScrnInfoPtr scrp, int freq, Bool allow-)115
120 R(Div2,)115 132 Q(int *divider\))175 156 Q F1 .815(This function r)
140 180 R .815(eturns the index of the closest clock to the fr)-.18 F
(equency)-.18 E F2(freq)3.315 E F1 .754(given \(in kHz\).)140 192 R .755
(It assumes that the number of clocks is gr)5.754 F .755(eater than zer)
-.18 F(o.)-.18 E .32(It r)140 204 R(equir)-.18 E .319(es that the)-.18 F
F2(numClocks)2.819 E F1(and)2.819 E F2(clock)2.819 E F1 .319
(\214elds of the)2.819 F F2(ScrnInfoRec)2.819 E F1(ar)2.819 E(e)-.18 E
3.762(initialised. The)140 216 R F2(allowDiv2)3.762 E F1 1.262
(\214eld determines if the clocks can be halved.)3.762 F(The)140 228 Q
F2(*divider)2.71 E F1 -.18(re)2.71 G .21
(turn value indicates whether clock division is used when).18 F
(determining the clock r)140 240 Q(eturned.)-.18 E
(This function is only for non-pr)140 258 Q(ogrammable clocks.)-.18 E F2
(const char *xf86ModeStatusToString\(ModeStatus status\))115 276 Q F1
(This function converts the)140 300 Q F2(status)2.5 E F1
(value to a descriptive printable string.)2.5 E F2 11.333
(ModeStatus xf86LookupMode\(ScrnInfoPtr scrp, DisplayModePtr)115 318 R
(modep,)115 330 Q(ClockRangePtr clockRanges, LookupModeFlags strategy\))
175 354 Q F1 .619(This function takes a pointer to a mode with the name\
 \214lled in, and looks)140 378 R 1.435(for a mode in the)140 390 R F2
(modePool)3.935 E F1 1.435(list which matches.)3.935 F 1.435
(The parameters of the)6.435 F .972(matching mode ar)140 402 R 3.472
<658c>-.18 G .972(lled in to)-3.472 F F2(*modep)3.472 E F1 5.972(.T)C
(he)-5.972 E F2(clockRanges)3.472 E F1(and)3.472 E F2(strat-)3.472 E
(egy)140 414 Q F1(parameters ar)2.5 E 2.5(ea)-.18 G 2.5(sf)-2.5 G
(or the)-2.5 E F2(xf86ValidateModes\(\))2.5 E F1(function above.)2.5 E
1.266(This function r)140 432 R(equir)-.18 E 1.266(es the)-.18 F F2
(modePool)3.766 E F1(,)A F2(clock[])3.766 E F1(,)A F2(numClocks)3.766 E
F1(and)3.767 E F2(prog-)3.767 E(Clock)140 444 Q F1(\214elds of the)2.5 E
F2(ScrnInfoRec)2.5 E F1(to be initialised befor)2.5 E 2.5(eb)-.18 G
(eing called.)-2.5 E .562(The r)140 456 R .562(eturn value is)-.18 F F2
(MODE_OK)3.062 E F1 .562(if a mode was found.)3.062 F .561
(Otherwise it indicates)5.561 F(why a matching mode could not be found.)
140 468 Q F2
(ModeStatus xf86InitialCheckModeForDriver\(ScrnInfoPtr scrp,)115 486 Q
(DisplayModePtr mode, ClockRangePtr clockRanges,)175 510 Q
(LookupModeFlags strategy, int maxPitch,)175 534 Q
(int virtualX, int virtualY\))175 558 Q F1 2.845
(This function checks the passed mode against some basic driver con-)140
582 R 2.531(straints. Apart)140 594 R(fr)2.531 E .031
(om the ones passed explicitly)-.18 F 2.531(,t)-1.11 G(he)-2.531 E F2
(maxHValue)2.531 E F1(and)2.531 E F2(maxV-)2.531 E(Value)140 606 Q F1
.906(\214elds of the)3.406 F F2(ScrnInfoRec)3.406 E F1(ar)3.406 E 3.406
(ea)-.18 G .906(lso used.)-3.406 F .907(If the)5.907 F F2(ValidMode)
3.407 E F1(\214eld)3.407 E .634(of the)140 618 R F2(ScrnInfoRec)3.134 E
F1 .634(is set, that function is also called to check the mode.)3.134 F
(Next, the mode is checked against the monitor's constraints.)140 630 Q
.44(If the mode is consistent with all constraints, the r)140 648 R .44
(eturn value is)-.18 F F2(MODE_OK)2.94 E F1(.)A(Otherwise the r)140 660
Q(eturn value indicates which constraint wasn't met.)-.18 E F2 7.333
(void xf86DeleteMode\(DisplayModePtr *modeList, DisplayModePtr)115 678 R
(mode\))115 690 Q F1 .796(This function deletes the)140 714 R F2(mode)
3.296 E F1 .796(given fr)3.296 F .796(om the)-.18 F F2(modeList)3.297 E
F1 5.797(.I)C 3.297(tn)-5.797 G .797(ever prints)-3.297 F
(any messages, so it is up to the caller to print a message if r)140 726
Q(equir)-.18 E(ed.)-.18 E 0 Cg EP
%%Page: 79 79
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(XFree86\256 serv)90 48 Q
(er 4.x Design \(DRAFT\))-.15 E(79)264.86 E/F1 14/Helvetica-Bold@0 SF
3.892(18.5 Functions)90 100 R -.28(fo)3.892 G 3.892(rh).28 G
(andling strings and tokens)-3.892 E/F2 10/Palatino-Roman@0 SF -.92(Ta)
90 118 S .247(bles associating strings and numerical tokens combined wi\
th the following functions pr).92 F .246(ovide a)-.18 F 1.358
(compact way of handling strings fr)90 130 R 1.358
(om the con\214g \214le, and for converting tokens into printable)-.18 F
2.5(strings. The)90 142 R(table data str)2.5 E(uctur)-.08 E 2.5(ei)-.18
G(s:)-2.5 E/F3 8/Courier@0 SF(typedef struct {)135 164 Q 76.8
(int token;)154.2 174 R(const char *)154.2 184 Q(name;)38.4 E 4.8(}S)135
194 S(ymTabRec, *SymTabPtr;)-4.8 E F2 3.198(At)90 218 S .697
(able is an initialised array of)-3.198 F/F4 10/Courier@0 SF(SymTabRec)
3.197 E F2 5.697(.T)C .697(he tokens must be non-negative integers.)
-5.697 F(Multi-)5.697 E 1.473
(ple names may be mapped to a single token.)90 230 R 1.473
(The table is terminated with an element with a)6.473 F F4(token)90 242
Q F2(value of)2.5 E F4(-1)2.5 E F2(and)2.5 E F4(NULL)2.5 E F2(for the)
2.5 E F4(name)2.5 E F2(.)A F4
(const char *xf86TokenToString\(SymTabPtr table, int token\))115 266 Q
F2 .953(This function r)140 290 R .953(eturns the \214rst string in)-.18
F F4(table)3.452 E F2 .952(that matches)3.452 F F4(token)3.452 E F2
5.952(.I)C 3.452(fn)-5.952 G(o)-3.452 E 1.315(match is found,)140 302 R
F4(NULL)3.815 E F2 1.315(is r)3.815 F 1.316
(eturned \(NOTE, older versions of this function)-.18 F(would r)140 314
Q(eturn the string "unknown" when no match is found\).)-.18 E F4
(int xf86StringToToken\(SymTabPtr table, const char *string\))115 332 Q
F2 .911(This function r)140 350 R .911(eturns the \214rst token in)-.18
F F4(table)3.411 E F2 .911(that matches)3.411 F F4(string)3.411 E F2
5.91(.T)C(he)-5.91 E F4(xf86NameCmp\(\))140 362 Q F2 .767
(function is used to determine the match.)3.267 F .768(If no match is)
5.767 F(found,)140 374 Q F4(-1)2.5 E F2(is r)2.5 E(eturned.)-.18 E F1
3.892(18.6 Functions)90 402 R -.28(fo)3.892 G 3.892<728c>.28 G
(nding whic)-3.892 E 3.892(hc)-.14 G(on\214g \214le entries to use)
-3.892 E F2 .969(These functions can be used to select the appr)90 420 R
.968(opriate con\214g \214le entries that match the detected)-.18 F(har)
90 432 Q(dwar)-.18 E 2.634(e. They)-.18 F(ar)2.634 E 2.634(ed)-.18 G
.134(escribed above in the)-2.634 F/F5 10/Palatino-Italic@0 SF(Pr)2.635
E(obe)-.18 E F2 .135(\(section 5.8, page 8\) and)2.635 F F5 -.37(Av)
2.635 G .135(ailable Functions).37 F F2(\(sec-)2.635 E
(tion 9.3, page 24\) sections.)90 444 Q F1 3.892(18.7 Pr)90 466 R
(obing discrete c)-.28 E(loc)-.28 E(ks on older har)-.28 E -.21(dw)-.28
G(are).21 E F2(The)90 484 Q F4(xf86GetClocks\(\))3.023 E F2 .522
(function may be used to assist in \214nding the discr)3.023 F .522
(ete pixel clock values)-.18 F(on older har)90 496 Q(dwar)-.18 E(e.)-.18
E 0 Cg EP
%%Page: 80 80
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(XFree86\256 serv)90 48 Q
(er 4.x Design \(DRAFT\))-.15 E(80)264.86 E/F1 10/Courier@0 SF
(void xf86GetClocks\(ScrnInfoPtr pScrn, int num,)115 96 Q
(Bool \(*ClockFunc\)\(ScrnInfoPtr, int\),)175 120 Q
(void \(*ProtectRegs\)\(ScrnInfoPtr, Bool\),)175 144 Q
(void \(*BlankScreen\)\(ScrnInfoPtr, Bool\),)175 168 Q
(int vertsyncreg, int maskval, int knownclkindex,)175 192 Q
(int knownclkvalue\))175 216 Q/F2 10/Palatino-Roman@0 SF .133
(This function uses a comparative sampling method to measur)140 240 R
2.633(et)-.18 G .133(he discr)-2.633 F(ete)-.18 E 1.068
(pixel clock values.)140 252 R 1.068(The number of discr)6.068 F 1.067
(ete clocks to measur)-.18 F 3.567(ei)-.18 G 3.567(sg)-3.567 G 1.067
(iven by)-3.567 F F1(num)140 264 Q F2(.)A F1(clockFunc)6.285 E F2 1.285
(is a function that selects the)3.785 F F1(n)3.785 E F2 1.285
('th clock.)B 1.285(It should also)6.285 F 1.926(save or r)140 276 R
(estor)-.18 E 4.426(ea)-.18 G 1.926(ny state af)-4.426 F 1.925
(fected by pr)-.18 F 1.925(ogramming the clocks when the)-.18 F .372
(index passed is)140 288 R F1(CLK_REG_SAVE)2.873 E F2(or)2.873 E F1
(CLK_REG_RESTORE)2.873 E F2(.)A F1(ProtectRegs)5.373 E F2(is)2.873 E
4.431(af)140 300 S 1.931(unction that does whatever is r)-4.431 F(equir)
-.18 E 1.931(ed to pr)-.18 F 1.931(otect the har)-.18 F(dwar)-.18 E 4.43
(es)-.18 G(tate)-4.43 E 1.251(while selecting a new clock.)140 312 R F1
(BlankScreen)6.251 E F2 1.251(is a function that blanks the)3.751 F(scr)
140 324 Q(een.)-.18 E F1(vertsyncreg)6.025 E F2(and)3.525 E F1(maskval)
3.525 E F2(ar)3.525 E 3.525(et)-.18 G 1.025(he I/O r)-3.525 F 1.025
(egister and bitmask to)-.18 F 3.253(check for the pr)140 336 R 3.253
(esence of vertical sync pulses.)-.18 F F1(knownclkindex)8.254 E F2(and)
5.754 E F1(knownclkvalue)140 348 Q F2(ar)2.89 E 2.89(et)-.18 G .389
(he index and value of a known clock.)-2.89 F .389(These ar)5.389 F
2.889(et)-.18 G(he)-2.889 E .092(known r)140 360 R(efer)-.18 E .092
(ences on which the comparative measur)-.18 F .092(ements ar)-.18 F
2.593(eb)-.18 G 2.593(ased. The)-2.593 F 1.54(number of clocks pr)140
372 R 1.54(obed is set in)-.18 F F1(pScrn->numClocks)4.04 E F2 4.04(,a)C
1.54(nd the pr)-4.04 F(obed)-.18 E .12(clocks ar)140 384 R 2.62(es)-.18
G .12(et in the)-2.62 F F1(pScrn->clock[])2.62 E F2 2.62(array. All)2.62
F .12(of the clock values ar)2.62 F 2.62(ei)-.18 G(n)-2.62 E
(units of kHz.)140 396 Q F1
(void xf86ShowClocks\(ScrnInfoPtr scrp, MessageType from\))115 414 Q F2
1.439(Print out the pixel clocks)140 438 R F1(scrp->clock[])3.939 E F2
(.)A F1(from)6.439 E F2 1.439(indicates whether the)3.939 F(clocks wer)
140 450 Q 2.5(ep)-.18 G -.18(ro)-2.5 G(bed or fr).18 E
(om the con\214g \214le.)-.18 E/F3 14/Helvetica-Bold@0 SF 3.892
(18.8 Other)90 478 R(helper functions)3.892 E F1
(Bool xf86IsUnblank\(int mode\))115 496 Q F2(Returns)140 514 Q F1(TRUE)
3.065 E F2 .565(when the scr)3.065 F .565(een saver mode speci\214ed by)
-.18 F F1(mode)3.066 E F2 -.18(re)3.066 G(quir).18 E .566(es the)-.18 F
(scr)140 526 Q .828(een be unblanked, and)-.18 F F1(FALSE)3.328 E F2
3.328(otherwise. The)3.328 F(scr)3.328 E .828(een saver modes that)-.18
F -.18(re)140 538 S(quir).18 E 6.048(eb)-.18 G 3.548(lanking ar)-6.048 F
(e)-.18 E F1(SCREEN_SAVER_ON)6.048 E F2(and)6.048 E F1
(SCREEN_SAVER_CYCLE)6.048 E F2(,)A 10.847(and the scr)140 550 R 10.846
(een saver modes that r)-.18 F(equir)-.18 E 13.346(eu)-.18 G 10.846
(nblanking ar)-13.346 F(e)-.18 E F1(SCREEN_SAVER_OFF)140 562 Q F2(and)
2.66 E F1(SCREEN_SAVER_FORCER)2.66 E F2 5.16(.D)C .16
(rivers may call this)-5.16 F 1.935(helper fr)140 574 R 1.935(om their)
-.18 F F1(SaveScreen\(\))4.435 E F2 1.934(function to interpr)4.435 F
1.934(et the scr)-.18 F 1.934(een saver)-.18 F(modes.)140 586 Q/F4 16
/Helvetica-Bold@0 SF 4.448(19. The)90 622 R(vgahw module)4.448 E F2 1.04
(The vgahw modules pr)90 640 R 1.04(ovides an interface for saving, r)
-.18 F 1.04(estoring and pr)-.18 F 1.04(ogramming the standar)-.18 F(d)
-.18 E(VGA r)90 652 Q(egisters, and for handling VGA colourmaps.)-.18 E
F3 3.892(19.1 Data)90 674 R(Structures)3.892 E F2 .368
(The public data str)90 692 R(uctur)-.08 E .368
(es used by the vgahw module ar)-.18 F(e)-.18 E F1(vgaRegRec)2.868 E F2
(and)2.868 E F1(vgaHWRec)2.868 E F2 5.367(.T)C .367(hey ar)-5.367 F(e)
-.18 E(de\214ned in)90 704 Q F1(vgaHW.h.)2.5 E 0 Cg EP
%%Page: 81 81
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(XFree86\256 serv)90 48 Q
(er 4.x Design \(DRAFT\))-.15 E(81)264.86 E/F1 14/Helvetica-Bold@0 SF
3.892(19.2 General)90 100 R(vgahw Functions)3.892 E/F2 10/Courier@0 SF
(Bool vgaHWGetHWRec\(ScrnInfoPtr pScrn\))115 118 Q/F3 10
/Palatino-Roman@0 SF .379(This function allocates a)140 136 R F2
(vgaHWRec)2.879 E F3(str)2.879 E(uctur)-.08 E .379
(e, and hooks it into the)-.18 F F2(Scrn-)2.88 E(InfoRec)140 148 Q F3
('s)A F2(privates)2.873 E F3 5.373(.L)C .372
(ike all information hooked into the)-5.373 F F2(privates)2.872 E F3
2.872(,i)C(t)-2.872 E .287
(is persistent, and only needs to be allocated once per scr)140 160 R
2.788(een. This)-.18 F(function)2.788 E 2.163
(should normally be called fr)140 172 R 2.162(om the driver's)-.18 F F2
(ChipPreInit\(\))4.662 E F3(function.)4.662 E(The)140 184 Q F2(vgaHWRec)
2.839 E F3 .339(is zer)2.839 F .339
(o-allocated, and the following \214elds ar)-.18 F 2.839(ee)-.18 G .339
(xplicitly ini-)-2.839 F(tialised:)140 196 Q F2(ModeReg.DAC[])140 214 Q
F3(initialised with a default colourmap)165 232 Q F2
(ModeReg.Attribute[0x11])140 262 Q F3
(initialised with the default overscan index)165 280 Q F2(ShowOverscan)
140 310 Q F3(initialised accor)165 328 Q
(ding to the "ShowOverscan" option)-.18 E F2(paletteEnabled)140 358 Q F3
(initialised to F)165 376 Q(ALSE)-.74 E F2(cmapSaved)140 406 Q F3
(initialised to F)165 424 Q(ALSE)-.74 E F2(pScrn)140 454 Q F3
(initialised to pScrn)165 472 Q .715(In addition to the above,)140 490 R
F2(vgaHWSetStdFuncs\(\))3.215 E F3 .715(is called to initialise the)
3.215 F -.18(re)140 502 S
(gister access function \214elds with the standar).18 E 2.5(dV)-.18 G
(GA set of functions.)-2.5 E 2.882(Once allocated, a pointer to the)140
520 R F2(vgaHWRec)5.382 E F3 2.882(can be obtained fr)5.382 F 2.882
(om the)-.18 F F2(ScrnInfoPtr)140 532 Q F3(with the)2.5 E F2
(VGAHWPTR\(pScrn\))2.5 E F3(macr)2.5 E(o.)-.18 E F2
(void vgaHWFreeHWRec\(ScrnInfoPtr pScrn\))115 550 Q F3 2.696
(This function fr)140 568 R 2.696(ees a)-.18 F F2(vgaHWRec)5.196 E F3
(str)5.196 E(uctur)-.08 E 5.195(e. It)-.18 F 2.695(should be called fr)
5.195 F 2.695(om a)-.18 F(driver's)140 580 Q F2(ChipFreeScreen\(\))2.5 E
F3(function.)2.5 E F2
(Bool vgaHWSetRegCounts\(ScrnInfoPtr pScrn, int numCRTC,)115 598 Q
(int numSequencer, int numGraphics, int numAttribute\))175 622 Q F3
3.732(This function allows the number of CR)140 640 R 3.732
(TC, Sequencer)-.37 F 6.233(,G)-.74 G 3.733(raphics and)-6.233 F .35
(Attribute r)140 652 R .349(egisters to be changed.)-.18 F .349
(This makes it possible for extended r)5.349 F(eg-)-.18 E 4.1
(isters to be saved and r)140 664 R(estor)-.18 E 4.1(ed with)-.18 F F2
(vgaHWSave\(\))6.6 E F3(and)6.6 E F2(vgaHWRe-)6.6 E(store\(\))140 676 Q
F3 5.487(.T)C .487(his function should be called after a)-5.487 F F2
(vgaHWRec)2.986 E F3 .486(has been allo-)2.986 F 5.04(cated with)140 688
R F2(vgaHWGetHWRec\(\))7.54 E F3 10.04(.T)C 5.04(he default values ar)
-10.04 F 7.54(ed)-.18 G 5.04(e\214ned in)-7.54 F F2(vgaHW.h)140 700 Q F3
(as follows:)2.5 E/F4 8/Courier@0 SF(#define VGA_NUM_CRTC 25)185 722 Q
(#define VGA_NUM_SEQ)185 732 Q(5)14.4 E 0 Cg EP
%%Page: 82 82
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(XFree86\256 serv)90 48 Q
(er 4.x Design \(DRAFT\))-.15 E(82)264.86 E/F1 8/Courier@0 SF
(#define VGA_NUM_GFX)185 94 Q(9)14.4 E(#define VGA_NUM_ATTR 21)185 104 Q
/F2 10/Courier@0 SF(Bool vgaHWCopyReg\(vgaRegPtr dst, vgaRegPtr src\))
115 144 Q/F3 10/Palatino-Roman@0 SF 1.915
(This function copies the contents of the VGA saved r)140 162 R 1.915
(egisters in)-.18 F F2(src)4.415 E F3(to)4.415 E F2(dst)140 174 Q F3
5.446(.N)C .446(ote that it isn't possible to simply do this with)-5.446
F F2(memcpy\(\))2.946 E F3 .447(\(or simi-)2.947 F 2.92(lar\). This)140
186 R .42(function r)2.92 F(eturns)-.18 E F2(TRUE)2.92 E F3 .42
(unless ther)2.92 F 2.92(ei)-.18 G 2.92(sap)-2.92 G -.18(ro)-2.92 G .42
(blem allocating space).18 F(for the)140 198 Q F2(CRTC)2.5 E F3(and r)
2.5 E(elated \214elds in)-.18 E F2(dst)2.5 E F3(.)A F2
(void vgaHWSetStdFuncs\(vgaHWPtr hwp\))115 216 Q F3 .907
(This function initialises the r)140 234 R .907
(egister access function \214elds of)-.18 F F2(hwp)3.408 E F3 .908
(with the)3.408 F(standar)140 246 Q 3.697(dV)-.18 G 1.197
(GA set of functions.)-3.697 F 1.197(This is called by)6.197 F F2
(vgaHWGetHWRec\(\))3.697 E F3 3.697(,s)C(o)-3.697 E(ther)140 258 Q 2.7
(ei)-.18 G 2.7(su)-2.7 G .201(sually no need to call this explicitly.)
-2.7 F .201(The r)5.201 F .201(egister access functions)-.18 F(ar)140
270 Q 2.895(ed)-.18 G .395(escribed below.)-2.895 F .394(If the r)5.394
F .394(egisters ar)-.18 F 2.894(es)-.18 G .394
(hadowed in some other port I/O)-2.894 F .13
(space \(for example a PCI I/O r)140 282 R .131
(egion\), these functions can be used to access)-.18 F 1.845
(the shadowed r)140 294 R 1.845(egisters if)-.18 F F2(hwp->PIOOffset)
4.345 E F3 1.845(is initialised with)4.345 F F2(offset)4.345 E F3(,)A
1.233(calculated in such a way that when the standar)140 306 R 3.733(dV)
-.18 G 1.233(GA I/O port value is)-3.733 F 1.343(added to it the corr)
140 318 R 1.342(ect of)-.18 F 1.342(fset into the PIO ar)-.18 F 1.342
(ea r)-.18 F 3.842(esults. This)-.18 F 1.342(value is ini-)3.842 F .783
(tialised to zer)140 330 R 3.284(oi)-.18 G(n)-3.284 E F2
(vgaHWGetHWRec\(\))3.284 E F3 5.784(.\()C .784(Note: the PIOOf)-5.784 F
.784(fset functionality)-.18 F(is pr)140 342 Q(esent in XFr)-.18 E
(ee86 4.1.0 and later.\))-.18 E F2
(void vgaHWSetMmioFuncs\(vgaHWPtr hwp, CARD8 *base, int offset\))115 360
Q F3 1.347(This function initialised the r)140 378 R 1.346
(egister access function \214elds of hwp with a)-.18 F .439
(generic MMIO set of functions.)140 390 R F2(hwp->MMIOBase)5.439 E F3
.439(is initialised with)2.939 F F2(base)2.939 E F3(,)A .718
(which must be the virtual addr)140 402 R .718
(ess that the start of MMIO ar)-.18 F .717(ea is mapped)-.18 F(to.)140
414 Q F2(hwp->MMIOOffset)6.096 E F3 1.096(is initialised with)3.596 F F2
(offset)3.597 E F3 3.597(,w)C 1.097(hich must be calcu-)-3.597 F .588
(lated in such a way that when the standar)140 426 R 3.088(dV)-.18 G
.588(GA I/O port value is added)-3.088 F 1(to it the corr)140 438 R 1
(ect of)-.18 F 1(fset into the MMIO ar)-.18 F 1(ea r)-.18 F 3.5
(esults. That)-.18 F 1(means that these)3.5 F .376(functions ar)140 450
R 2.876(eo)-.18 G .376(nly suitable when the VGA I/O ports ar)-2.876 F
2.876(em)-.18 G .375(ade available in)-2.876 F 2.699(ad)140 462 S(ir)
-2.699 E .199(ect mapping to the MMIO space.)-.18 F .2
(If that is not the case, the driver will)5.199 F .246(need to pr)140
474 R .246(ovide its own r)-.18 F .245(egister access functions.)-.18 F
.245(The r)5.245 F .245(egister access func-)-.18 F(tions ar)140 486 Q
2.5(ed)-.18 G(escribed below.)-2.5 E F2
(Bool vgaHWMapMem\(ScrnInfoPtr pScrn\))115 504 Q F3 .419
(This function maps the VGA memory window.)140 522 R .419(It r)5.419 F
(equir)-.18 E .419(es that the)-.18 F F2(vgaH-)2.92 E(WRec)140 534 Q F3
.757(be allocated.)3.257 F .757(If a driver r)5.757 F(equir)-.18 E .757
(es non-default)-.18 F F2(MapPhys)3.257 E F3(or)3.257 E F2(MapSize)3.257
E F3 .408(settings \(the physical location and size of the VGA memory w\
indow\) then)140 546 R 1.211(those \214elds of the)140 558 R F2
(vgaHWRec)3.711 E F3 1.211(must be initialised befor)3.711 F 3.711(ec)
-.18 G 1.211(alling this func-)-3.711 F 4.02(tion. Otherwise,)140 570 R
1.52(this function initialiases the default values of)4.02 F F2(0xA0000)
4.02 E F3(for)140 582 Q F2(MapPhys)5.083 E F3(and)5.083 E F2
(\(64 * 1024\))5.082 E F3(for)5.082 E F2(MapSize)5.082 E F3 7.582(.T)C
2.582(his function must be)-7.582 F 1.8(called befor)140 594 R 4.3(ea)
-.18 G 1.8(ttempting to save or r)-4.3 F(estor)-.18 E 4.3(et)-.18 G 1.8
(he VGA state.)-4.3 F 1.8(If the driver)6.8 F 1.514
(doesn't call it explicitly)140 606 R 4.014(,t)-1.11 G(he)-4.014 E F2
(vgaHWSave\(\))4.014 E F3(and)4.014 E F2(vgaHWRestore\(\))4.013 E F3
(func-)4.013 E 1.404(tions may call it if they need to access the VGA m\
emory \(in which case)140 618 R .563(they will also call)140 630 R F2
(vgaHWUnmapMem\(\))3.063 E F3 .563(to unmap the VGA memory befor)3.063 F
(e)-.18 E(exiting\).)140 642 Q F2
(void vgaHWUnmapMem\(ScrnInfoPtr pScrn\))115 660 Q F3 1.025
(This function unmaps the VGA memory window.)140 678 R 1.026
(It must only be called)6.026 F .127(after the memory has been mapped.)
140 690 R(The)5.127 E F2(Base)2.627 E F3 .126(\214eld of the)2.627 F F2
(vgaHWRec)2.626 E F3(\214eld)2.626 E(is set to)140 702 Q F2(NULL)2.5 E
F3(to indicate that the memory is no longer mapped.)2.5 E F2
(void vgaHWGetIOBase\(vgaHWPtr hwp\))115 720 Q F3 .737
(This function initialises the)140 738 R F2(IOBase)3.237 E F3 .737
(\214eld of the)3.237 F F2(vgaHWRec)3.237 E F3 5.737(.T)C .737
(his function)-5.737 F 0 Cg EP
%%Page: 83 83
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(XFree86\256 serv)90 48 Q
(er 4.x Design \(DRAFT\))-.15 E(83)264.86 E/F1 10/Palatino-Roman@0 SF
.221(must be called befor)140 96 R 2.721(eu)-.18 G .221
(sing any other functions that access the video har)-2.721 F(d-)-.18 E
(war)140 108 Q(e.)-.18 E 2.703(Am)140 126 S(acr)-2.703 E(o)-.18 E/F2 10
/Courier@0 SF(VGAHW_GET_IOBASE\(\))2.703 E F1 .203(is also available in)
2.703 F F2(vgaHW.h)2.704 E F1 .204(that r)2.704 F(eturns)-.18 E .324
(the I/O base, and this may be used when the vgahw module is not loaded)
140 138 R(\(for example, in the)140 150 Q F2(ChipProbe\(\))2.5 E F1
(function\).)2.5 E F2(void vgaHWUnlock\(vgaHWPtr hwp\))115 168 Q F1
1.009(This function unlocks the VGA)140 186 R F2(CRTC[0-7])3.509 E F1
-.18(re)3.509 G 1.009(gisters, and must be called).18 F(befor)140 198 Q
2.5(ea)-.18 G(ttempting to write to those r)-2.5 E(egisters.)-.18 E F2
(void vgaHWLock\(vgaHWPtr hwp\))115 216 Q F1
(This function locks the VGA)140 234 Q F2(CRTC[0-7])2.5 E F1 -.18(re)2.5
G(gisters.).18 E F2(void vgaHWEnable\(vgaHWPtr hwp\))115 252 Q F1 .875
(This function enables the VGA subsystem.)140 270 R .875
(\(Note, this function is pr)5.875 F(esent)-.18 E(in XFr)140 282 Q
(ee86 4.1.0 and later.\).)-.18 E F2(void vgaHWDisable\(vgaHWPtr hwp\))
115 300 Q F1 .61(This function disables the VGA subsystem.)140 318 R .61
(\(Note, this function is pr)5.61 F(esent)-.18 E(in XFr)140 330 Q
(ee86 4.1.0 and later.\).)-.18 E F2
(void vgaHWSave\(ScrnInfoPtr pScrn, vgaRegPtr save, int flags\))115 348
Q F1 .542(This function saves the VGA state.)140 366 R .541
(The state is written to the)5.542 F F2(vgaRegRec)3.041 E F1 1.507
(pointed to by)140 378 R F2(save)4.007 E F1(.)A F2(flags)6.507 E F1
1.507(is set to one or mor)4.007 F 4.007(eo)-.18 G 4.007(ft)-4.007 G
1.508(he following \215ags)-4.007 F(ORed together:)140 390 Q F2
(VGA_SR_MODE)140 408 Q F1(the mode setting r)165 426 Q(egisters ar)-.18
E 2.5(es)-.18 G(aved)-2.5 E F2(VGA_SR_FONTS)140 456 Q F1
(the text mode font/text data is saved)165 474 Q F2(VGA_SR_CMAP)140 504
Q F1(the colourmap \(LUT\) is saved)165 522 Q F2(VGA_SR_ALL)140 552 Q F1
(all of the above ar)165 570 Q 2.5(es)-.18 G(aved)-2.5 E(The)140 588 Q
F2(vgaHWRec)3.32 E F1 .82(and its)3.32 F F2(IOBase)3.32 E F1 .82
(\214elds must be initialised befor)3.32 F 3.32(et)-.18 G .82(his func-)
-3.32 F 1.045(tion is called.)140 600 R(If)6.046 E F2(VGA_SR_FONTS)3.546
E F1 1.046(is set in)3.546 F F2(flags)3.546 E F1 3.546(,t)C 1.046
(he VGA memory win-)-3.546 F 1.319(dow must be mapped.)140 612 R 1.318
(If it isn't then)6.319 F F2(vgaHWMapMem\(\))3.818 E F1 1.318
(will be called to)3.818 F 2.114(map it, and)140 624 R F2
(vgaHWUnmapMem\(\))4.614 E F1 2.114(will be called to unmap it afterwar)
4.614 F(ds.)-.18 E F2(vgaHWSave\(\))140 636 Q F1 1.431(uses the thr)
3.932 F 1.431(ee functions below in the or)-.18 F(der)-.18 E F2
(vgaHWSave-)3.931 E(Colormap\(\))140 648 Q F1(,)A F2(vgaHWSaveMode\(\))
3.46 E F1(,)A F2(vgaHWSaveFonts\(\))3.46 E F1 .96(to carry out the)3.46
F(dif)140 660 Q(fer)-.18 E 2.754(ent save phases.)-.18 F 2.754
(It is undecided at this stage whether they will)7.754 F -.18(re)140 672
S(main part of the vgahw module's public interface or not.).18 E F2
(void vgaHWSaveMode\(ScrnInfoPtr pScrn, vgaRegPtr save\))115 690 Q F1
3.27(This function saves the VGA mode r)140 708 R 5.77(egisters. They)
-.18 F(ar)5.77 E 5.77(es)-.18 G 3.27(aved to the)-5.77 F F2(vgaRegRec)
140 720 Q F1(pointed to by)2.5 E F2(save)2.5 E F1 5(.T)C(he r)-5 E
(egisters saved ar)-.18 E(e:)-.18 E F2(MiscOut)165 738 Q 0 Cg EP
%%Page: 84 84
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(XFree86\256 serv)90 48 Q
(er 4.x Design \(DRAFT\))-.15 E(84)264.86 E/F1 10/Courier@0 SF
(CRTC[0-0x18])165 96 Q(Attribute[0-0x14])165 120 Q(Graphics[0-8])165 144
Q(Sequencer[0-4])165 168 Q/F2 10/Palatino-Roman@0 SF .638
(The number of r)140 186 R .638
(egisters actually saved may be modi\214ed by a prior call to)-.18 F F1
(vgaHWSetRegCounts\(\))140 198 Q F2(.)A F1
(void vgaHWSaveFonts\(ScrnInfoPtr pScrn, vgaRegPtr save\))115 216 Q F2
2.007
(This function saves the text mode font and text data held in the video)
140 234 R 3.688(memory. If)140 246 R 1.188
(called while in a graphics mode, no save is done.)3.688 F 1.187
(The VGA)6.187 F .155(memory window must be mapped with)140 258 R F1
(vgaHWMapMem\(\))2.656 E F2(befor)2.656 E 2.656(et)-.18 G 2.656(oc)
-2.656 G(alling)-2.656 E(this function.)140 270 Q .989
(On some platforms, one or mor)140 288 R 3.489(eo)-.18 G 3.488(ft)-3.489
G .988(he font/text plane saves may be no-)-3.488 F 3.372(ops. This)140
300 R .872(is the case when the platform's VC driver alr)3.372 F .873
(eady takes car)-.18 F 3.373(eo)-.18 G(f)-3.373 E(this.)140 312 Q F1
(void vgaHWSaveColormap\(ScrnInfoPtr pScrn, vgaRegPtr save\))115 330 Q
F2 3.837(This function saves the VGA colourmap \(LUT\).)140 348 R(Befor)
8.837 E 6.337(es)-.18 G 3.837(aving it, it)-6.337 F 1.333
(attempts to verify that the colourmap is r)140 360 R 3.833(eadable. In)
-.18 F(rar)3.834 E 3.834(ec)-.18 G 1.334(ases wher)-3.834 F 3.834(ei)
-.18 G(t)-3.834 E(isn't r)140 372 Q
(eadable, a default colourmap is saved instead.)-.18 E F1 5.6
(void vgaHWRestore\(ScrnInfoPtr pScrn, vgaRegPtr restore, int)115 390 R
(flags\))115 402 Q F2 .392(This function pr)140 420 R .393
(ograms the VGA state.)-.18 F .393(The state pr)5.393 F .393
(ogrammed is that con-)-.18 F 1.102(tained in the)140 432 R F1
(vgaRegRec)3.602 E F2 1.102(pointed to by)3.602 F F1(restore)3.602 E F2
(.)A F1(flags)6.102 E F2 1.101(is the same as)3.601 F
(described above for the)140 444 Q F1(vgaHWSave\(\))2.5 E F2(function.)
2.5 E(The)140 462 Q F1(vgaHWRec)3.32 E F2 .82(and its)3.32 F F1(IOBase)
3.32 E F2 .82(\214elds must be initialised befor)3.32 F 3.32(et)-.18 G
.82(his func-)-3.32 F 1.046(tion is called.)140 474 R(If)6.046 E F1
(VGA_SR_FONTS)3.546 E F2 1.046(is set in)3.546 F F1(flags)3.546 E F2
3.546(,t)C 1.045(he VGA memory win-)-3.546 F 1.318(dow must be mapped.)
140 486 R 1.318(If it isn't then)6.318 F F1(vgaHWMapMem\(\))3.818 E F2
1.319(will be called to)3.819 F 2.114(map it, and)140 498 R F1
(vgaHWUnmapMem\(\))4.614 E F2 2.114(will be called to unmap it afterwar)
4.614 F(ds.)-.18 E F1(vgaHWRestore\(\))140 510 Q F2 .764(uses the thr)
3.264 F .765(ee functions below in the or)-.18 F(der)-.18 E F1(vgaHWRe-)
3.265 E(storeFonts\(\))140 522 Q F2(,)A F1(vgaHWRestoreMode\(\))7.5 E F2
(,)A F1(vgaHWRestoreColormap\(\))7.5 E F2 2.535(to carry out the dif)140
534 R(fer)-.18 E 2.535(ent r)-.18 F(estor)-.18 E 5.035(ep)-.18 G 5.035
(hases. It)-5.035 F 2.535(is undecided at this stage)5.035 F 1.108
(whether they will r)140 546 R 1.107
(emain part of the vgahw module's public interface or)-.18 F(not.)140
558 Q F1(void vgaHWRestoreMode\(ScrnInfoPtr pScrn, vgaRegPtr restore\))
115 576 Q F2 .227(This function r)140 594 R(estor)-.18 E .227
(es the VGA mode r)-.18 F 2.727(egisters. They)-.18 F(ar)2.727 E 2.728
(er)-.18 G(estor)-2.908 E .228(ed fr)-.18 F .228(om the)-.18 F .079
(data in the)140 606 R F1(vgaRegRec)2.578 E F2 .078(pointed to by)2.578
F F1(restore)2.578 E F2 5.078(.T)C .078(he r)-5.078 F .078(egisters r)
-.18 F(estor)-.18 E .078(ed ar)-.18 F(e:)-.18 E F1(MiscOut)165 624 Q
(CRTC[0-0x18])165 648 Q(Attribute[0-0x14])165 672 Q(Graphics[0-8])165
696 Q(Sequencer[0-4])165 720 Q F2 .759(The number of r)140 738 R .759
(egisters actually r)-.18 F(estor)-.18 E .759
(ed may be modi\214ed by a prior call)-.18 F 0 Cg EP
%%Page: 85 85
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(XFree86\256 serv)90 48 Q
(er 4.x Design \(DRAFT\))-.15 E(85)264.86 E/F1 10/Palatino-Roman@0 SF
(to)140 96 Q/F2 10/Courier@0 SF(vgaHWSetRegCounts\(\))2.5 E F1(.)A F2
(void vgaHWRestoreFonts\(ScrnInfoPtr pScrn, vgaRegPtr restore\))115 114
Q F1 .735(This function r)140 132 R(estor)-.18 E .735
(es the text mode font and text data to the video mem-)-.18 F 3.388
(ory. The)140 144 R .889(VGA memory window must be mapped with)3.389 F
F2(vgaHWMapMem\(\))3.389 E F1(befor)140 156 Q 2.5(et)-.18 G 2.5(oc)-2.5
G(alling this function.)-2.5 E .189(On some platforms, one or mor)140
174 R 2.689(eo)-.18 G 2.688(ft)-2.689 G .188(he font/text plane r)-2.688
F(estor)-.18 E .188(es may be no-)-.18 F 3.372(ops. This)140 186 R .872
(is the case when the platform's VC driver alr)3.372 F .873
(eady takes car)-.18 F 3.373(eo)-.18 G(f)-3.373 E(this.)140 198 Q F2
(void vgaHWRestoreColormap\(ScrnInfoPtr pScrn, vgaRegPtr restore\))115
216 Q F1(This function r)140 234 Q(estor)-.18 E
(es the VGA colourmap \(LUT\).)-.18 E F2
(void vgaHWInit\(ScrnInfoPtr pScrn, DisplayModePtr mode\))115 252 Q F1
.031(This function \214lls in the)140 270 R F2(vgaHWRec)2.531 E F1('s)A
F2(ModeReg)2.531 E F1 .031(\214eld with the values appr)2.531 F(o-)-.18
E .608(priate for pr)140 282 R .608(ogramming the given video mode.)-.18
F .608(It r)5.608 F(equir)-.18 E .608(es that the)-.18 F F2(Scrn-)3.109
E(InfoRec)140 294 Q F1('s)A F2(depth)3.543 E F1 1.042
(\214eld is initialised, which determines how the r)3.543 F(egisters)
-.18 E(ar)140 306 Q 2.5(ep)-.18 G -.18(ro)-2.5 G(grammed.).18 E F2
(void vgaHWSeqReset\(vgaHWPtr hwp, Bool start\))115 324 Q F1 .818
(Do a VGA sequencer r)140 342 R 3.318(eset. If)-.18 F .818(start is)
3.318 F F2(TRUE)3.318 E F1 3.318(,t)C .818(he r)-3.318 F .818
(eset is started.)-.18 F .818(If start is)5.818 F F2(FALSE)140 354 Q F1
2.5(,t)C(he r)-2.5 E(eset is ended.)-.18 E F2
(void vgaHWProtect\(ScrnInfoPtr pScrn, Bool on\))115 372 Q F1 .515
(This function pr)140 390 R .515(otects VGA r)-.18 F .514
(egisters and memory fr)-.18 F .514(om corr)-.18 F .514(uption during)
-.08 F 3.28(loads. It)140 402 R .78(is typically called with on set to)
3.28 F F2(TRUE)3.28 E F1(befor)3.28 E 3.28(ep)-.18 G -.18(ro)-3.28 G .78
(gramming, and).18 F(with on set to)140 414 Q F2(FALSE)2.5 E F1
(after pr)2.5 E(ogramming.)-.18 E F2
(Bool vgaHWSaveScreen\(ScreenPtr pScreen, int mode\))115 432 Q F1 .566
(This function blanks and unblanks the scr)140 450 R 3.066(een. It)-.18
F .566(is blanked when)3.066 F F2(mode)3.065 E F1(is)3.065 E F2
(SCREEN_SAVER_ON)140 462 Q F1(or)6.564 E F2(SCREEN_SAVER_CYCLE)6.564 E
F1 6.564(,a)C 4.064(nd unblanked when)-6.564 F F2(mode)140 474 Q F1(is)
2.5 E F2(SCREEN_SAVER_OFF)2.5 E F1(or)2.5 E F2(SCREEN_SAVER_FORCER)2.5 E
F1(.)A F2(void vgaHWBlankScreen\(ScrnInfoPtr pScrn, Bool on\))115 492 Q
F1 1.566(This function blanks and unblanks the scr)140 510 R 4.066
(een. It)-.18 F 1.566(is blanked when)4.066 F F2(on)4.065 E F1(is)4.065
E F2(FALSE)140 522 Q F1 2.512(,a)C .012(nd unblanked when)-2.512 F F2
(on)2.512 E F1(is)2.512 E F2(TRUE)2.512 E F1 5.013(.T)C .013
(his function is pr)-5.013 F .013(ovided for use)-.18 F 1.299
(in cases wher)140 534 R 3.799(et)-.18 G(he)-3.799 E F2(ScrnInfoRec)
3.799 E F1 1.299(can't be derived fr)3.799 F 1.299(om the)-.18 F F2
(ScreenRec)3.799 E F1(\(while pr)140 546 Q
(obing for clocks, for example\).)-.18 E/F3 14/Helvetica-Bold@0 SF 3.892
(19.3 V)90 574 R(GA Colormap Functions)-.7 E F1 .78
(The vgahw module uses the standar)90 592 R 3.281(dc)-.18 G .781
(olormap support \(see the)-3.281 F/F4 10/Palatino-Italic@0 SF .781
(Colormap Handling)3.281 F F1 .781(\(section 13.,)3.281 F
(page 41\) section.)90 604 Q
(This is initialised with the following function:)5 E F2
(Bool vgaHWHandleColormaps\(ScreenPtr pScreen\))115 622 Q F3 3.892
(19.4 V)90 644 R(GA Register Access Functions)-.7 E F1 1.474
(The vgahw module abstracts access to the standar)90 662 R 3.974(dV)-.18
G 1.474(GA r)-3.974 F 1.474(egisters by using a set of functions)-.18 F
.006(held in the)90 674 R F2(vgaHWRec)2.506 E F1 5.006(.W)C .006
(hen the)-5.006 F F2(vgaHWRec)2.506 E F1 .006(is cr)2.506 F .007
(eated these function pointers ar)-.18 F 2.507(ei)-.18 G .007
(nitialised with)-2.507 F .956(the set of standar)90 686 R 3.456(dV)-.18
G .956(GA I/O r)-3.456 F .955(egister access functions.)-.18 F .955
(In addition to these, the vgahw module)5.955 F .685
(includes a basic set of MMIO r)90 698 R .686
(egister access functions, and the)-.18 F F2(vgaHWRec)3.186 E F1 .686
(function pointers can)3.186 F 1.326
(be initialised to these by calling the)90 710 R F2
(vgaHWSetMmioFuncs\(\))3.825 E F1 1.325(function described above.)3.825
F(Some)6.325 E .75(drivers/platforms may r)90 722 R(equir)-.18 E -5.749
3.25(ea d)-.18 H(if)-3.25 E(fer)-.18 E .751
(ent set of functions for VGA access.)-.18 F .751(The access functions)
5.751 F(ar)90 734 Q 2.5(ed)-.18 G(escribed her)-2.5 E(e.)-.18 E 0 Cg EP
%%Page: 86 86
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(XFree86\256 serv)90 48 Q
(er 4.x Design \(DRAFT\))-.15 E(86)264.86 E/F1 10/Courier@0 SF
(void writeCrtc\(vgaHWPtr hwp, CARD8 index, CARD8 value\))115 96 Q/F2 10
/Palatino-Roman@0 SF -.74(Wr)140 120 S(ite).74 E F1(value)2.5 E F2
(to CR)2.5 E(TC r)-.37 E(egister)-.18 E F1(index)2.5 E F2(.)A F1
(CARD8 readCrtc\(vgaHWPtr hwp, CARD8 index\))115 138 Q F2
(Return the value r)140 162 Q(ead fr)-.18 E(om CR)-.18 E(TC r)-.37 E
(egister)-.18 E F1(index)2.5 E F2(.)A F1
(void writeGr\(vgaHWPtr hwp, CARD8 index, CARD8 value\))115 174 Q F2
-.74(Wr)140 198 S(ite).74 E F1(value)2.5 E F2(to Graphics Contr)2.5 E
(oller r)-.18 E(egister)-.18 E F1(index)2.5 E F2(.)A F1
(CARD8 readGR\(vgaHWPtr hwp, CARD8 index\))115 216 Q F2
(Return the value r)140 240 Q(ead fr)-.18 E(om Graphics Contr)-.18 E
(oller r)-.18 E(egister)-.18 E F1(index)2.5 E F2(.)A F1
(void writeSeq\(vgaHWPtr hwp, CARD8 index, CARD8, value\))115 258 Q F2
-.74(Wr)140 282 S(ite).74 E F1(value)2.5 E F2(to Sequencer r)2.5 E
(egister)-.18 E F1(index)2.5 E F2(.)A F1
(CARD8 readSeq\(vgaHWPtr hwp, CARD8 index\))115 300 Q F2
(Return the value r)140 324 Q(ead fr)-.18 E(om Sequencer r)-.18 E
(egister)-.18 E F1(index)2.5 E F2(.)A F1
(void writeAttr\(vgaHWPtr hwp, CARD8 index, CARD8, value\))115 342 Q F2
-.74(Wr)140 366 S(ite).74 E F1(value)2.685 E F2 .185(to Attribute Contr)
2.685 F .185(oller r)-.18 F(egister)-.18 E F1(index)2.685 E F2 5.185(.W)
C .185(hen writing out the)-5.185 F .16
(index value this function should set bit 5 \()140 378 R F1(0x20)A F2
2.66(\)a)C(ccor)-2.66 E .16(ding to the setting of)-.18 F F1
(hwp->paletteEnabled)140 390 Q F2 1.418(in or)3.918 F 1.418(der to pr)
-.18 F 1.418(eserve the palette access state.)-.18 F(It)6.417 E .422
(should be clear)140 402 R .422(ed when)-.18 F F1(hwp->paletteEnabled)
2.922 E F2(is)2.922 E F1(TRUE)2.922 E F2 .422(and set when it)2.922 F
(is)140 414 Q F1(FALSE)2.5 E F2(.)A F1
(CARD8 readAttr\(vgaHWPtr hwp, CARD8 index\))115 432 Q F2 2.086
(Return the value r)140 456 R 2.086(ead fr)-.18 F 2.086
(om Attribute Contr)-.18 F 2.085(oller r)-.18 F(egister)-.18 E F1(index)
4.585 E F2 7.085(.W)C(hen)-7.085 E .369
(writing out the index value this function should set bit 5 \()140 468 R
F1(0x20)A F2 2.87(\)a)C(ccor)-2.87 E(ding)-.18 E .837(to the setting of)
140 480 R F1(hwp->paletteEnabled)3.337 E F2 .837(in or)3.337 F .837
(der to pr)-.18 F .837(eserve the palette)-.18 F .838(access state.)140
492 R .839(It should be clear)5.839 F .839(ed when)-.18 F F1
(hwp->paletteEnabled)3.339 E F2(is)3.339 E F1(TRUE)3.339 E F2
(and set when it is)140 504 Q F1(FALSE)2.5 E F2(.)A F1
(void writeMiscOut\(vgaHWPtr hwp, CARD8 value\))115 522 Q F2 -.74(Wr)140
546 S(ite `).74 E F1(value)A F2 2.5('t)C 2.5(ot)-2.5 G
(he Miscellaneous Output r)-2.5 E(egister.)-.18 E F1
(CARD8 readMiscOut\(vgwHWPtr hwp\))115 564 Q F2(Return the value r)140
588 Q(ead fr)-.18 E(om the Miscellaneous Output r)-.18 E(egister.)-.18 E
F1(void enablePalette\(vgaHWPtr hwp\))115 606 Q F2 .364
(Clear the palette addr)140 630 R .364(ess sour)-.18 F .364
(ce bit in the Attribute Contr)-.18 F .363(oller index r)-.18 F(egis-)
-.18 E(ter and set)140 642 Q F1(hwp->paletteEnabled)2.5 E F2(to)2.5 E F1
(TRUE)2.5 E F2(.)A F1(void disablePalette\(vgaHWPtr hwp\))115 660 Q F2
.524(Set the palette addr)140 684 R .524(ess sour)-.18 F .525
(ce bit in the Attribute Contr)-.18 F .525(oller index r)-.18 F(egister)
-.18 E(and set)140 696 Q F1(hwp->paletteEnabled)2.5 E F2(to)2.5 E F1
(FALSE)2.5 E F2(.)A F1(void writeDacMask\(vgaHWPtr hwp, CARD8 value\))
115 714 Q F2 -.74(Wr)140 738 S(ite).74 E F1(value)2.5 E F2
(to the DAC Mask r)2.5 E(egister.)-.18 E 0 Cg EP
%%Page: 87 87
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(XFree86\256 serv)90 48 Q
(er 4.x Design \(DRAFT\))-.15 E(87)264.86 E/F1 10/Courier@0 SF
(CARD8 readDacMask\(vgaHWptr hwp\))115 96 Q/F2 10/Palatino-Roman@0 SF
(Return the value r)140 120 Q(ead fr)-.18 E(om the DAC Mask r)-.18 E
(egister.)-.18 E F1
(void writeDacReadAddress\(vgaHWPtr hwp, CARD8 value\))115 138 Q F2 -.74
(Wr)140 162 S(ite).74 E F1(value)2.5 E F2(to the DAC Read Addr)2.5 E
(ess r)-.18 E(egister.)-.18 E F1
(void writeDacWriteAddress\(vgaHWPtr hwp, CARD8 value\))115 180 Q F2
-.74(Wr)140 204 S(ite).74 E F1(value)2.5 E F2(to the DAC W)2.5 E
(rite Addr)-.74 E(ess r)-.18 E(egister.)-.18 E F1
(void writeDacData\(vgaHWPtr hwp, CARD8 value\))115 222 Q F2 -.74(Wr)140
246 S(ite).74 E F1(value)2.5 E F2(to the DAC Data r)2.5 E(egister.)-.18
E F1(CARD8 readDacData\(vgaHWptr hwp\))115 264 Q F2(Return the value r)
140 288 Q(ead fr)-.18 E(om the DAC Data r)-.18 E(egister.)-.18 E F1
(CARD8 readEnable\(vgaHWptr hwp\))115 306 Q F2 .538(Return the value r)
140 330 R .537(ead fr)-.18 F .537(om the VGA Enable r)-.18 F 3.037
(egister. \(Note:)-.18 F .537(This function)3.037 F(is pr)140 342 Q
(esent in XFr)-.18 E(ee86 4.1.0 and later.\))-.18 E F1
(void writeEnable\(vgaHWPtr hwp, CARD8 value\))115 360 Q F2 -.74(Wr)140
384 S(ite).74 E F1(value)2.65 E F2 .15(to the VGA Enable r)2.65 F 2.65
(egister. \(Note:)-.18 F .15(This function is pr)2.65 F .15(esent in)
-.18 F(XFr)140 396 Q(ee86 4.1.0 and later.\))-.18 E/F3 16
/Helvetica-Bold@0 SF 4.448(20. Some)90 432 R
(notes about writing a driver)4.448 E/F4 10/Palatino-Italic@0 SF
(NOTE: some parts of this ar)90 450 Q 2.5(en)-.18 G(ot up to date)-2.5 E
F2 .929(The following is an outline for writing a basic unaccelerated d\
river for a PCI video car)90 468 R 3.429(dw)-.18 G .929(ith a)-3.429 F
1.519(linear mapped framebuf)90 480 R(fer)-.18 E 4.019(,a)-.74 G 1.519
(nd which has a VGA cor)-4.019 F 4.019(e. It)-.18 F 1.52
(includes some general information)4.019 F(that is r)90 492 Q(elevant t\
o most drivers \(even those which don't \214t that basic description\).)
-.18 E 1.1(The information her)90 510 R 3.6(ei)-.18 G 3.6(sb)-3.6 G 1.1
(ased on the initial conversion of the Matr)-3.6 F 1.1
(ox Millennium driver to the)-.18 F -.37(``)90 522 S .763(new design''.)
.37 F .763(For a \215eshing out and sample implementation of some of th\
e bits outlined her)5.763 F(e,)-.18 E -.18(re)90 534 S .125
(fer to that driver.).18 F .125(Note that this is an example only.)5.125
F .125(The appr)5.125 F .125(oach used her)-.18 F 2.625(ew)-.18 G .125
(ill not be appr)-2.625 F(o-)-.18 E(priate for all drivers.)90 546 Q
.421(Each driver must r)90 564 R .421
(eserve a unique driver name, and a string that is used to pr)-.18 F
.421(e\214x all of its exter)-.18 F(-)-.18 E 1.008
(nally visible symbols.)90 576 R 1.007
(This is to avoid name space clashes when loading multiple drivers.)
6.007 F(The)6.007 E .721(examples her)90 588 R 3.221(ea)-.18 G 1.082
-.18(re f)-3.221 H .722(or the `).18 F .722(`ZZZ'' driver)-.37 F 3.222
(,w)-.74 G .722(hich uses the `)-3.222 F .722(`ZZZ'' or `)-.37 F .722
(`zzz'' pr)-.37 F .722(e\214x for its externally)-.18 F .507
(visible symbols, with pr)90 600 R(efer)-.18 E .506
(ence given to the upper)-.18 F .506(case pr)-.18 F 3.006
(e\214x. Internal)-.18 F .506(symbols should also fol-)3.006 F(low this\
 convention to facilitate the debugging of a statically built server.)90
612 Q/F5 14/Helvetica-Bold@0 SF 3.892(20.1 Inc)90 634 R(lude \214les)
-.28 E F2(All drivers normally include the following headers:)90 652 Q 0
Cg EP
%%Page: 88 88
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(XFree86\256 serv)90 48 Q
(er 4.x Design \(DRAFT\))-.15 E(88)264.86 E/F1 10/Courier@0 SF("xf86.h")
115 96 Q("xf86_OSproc.h")115 120 Q("xf86_ansic.h")115 144 Q
("xf86Resources.h")115 168 Q/F2 10/Palatino-Roman@0 SF(Wher)90 198 Q
(ever inb/outb \(and r)-.18 E(elated things\) ar)-.18 E 2.5(eu)-.18 G
(sed the following should be included:)-2.5 E F1("compiler.h")115 216 Q
F2(Note: in drivers, this must be included after)90 246 Q F1
("xf86_ansic.h")2.5 E F2(.)A
(Drivers that need to access PCI vendor/device de\214nitions need this:)
90 264 Q F1("xf86PciInfo.h")115 282 Q F2
(Drivers that need to access the PCI con\214g space need this:)90 300 Q
F1("xf86Pci.h")115 318 Q F2(Drivers using the mi banking wrapper need:)
90 336 Q F1("mibank.h")115 354 Q F2
(Drivers that initialise a SW cursor need this:)90 372 Q F1
("mipointer.h")115 390 Q F2(All drivers implementing backing stor)90 408
Q 2.5(en)-.18 G(eed this:)-2.5 E F1("mibstore.h")115 426 Q F2
(All drivers using the mi colourmap code need this:)90 444 Q F1
("micmap.h")115 462 Q F2
(If a driver uses the vgahw module, it needs this:)90 480 Q F1
("vgaHW.h")115 498 Q F2(Drivers supporting VGA or Her)90 516 Q
(cules monochr)-.18 E(ome scr)-.18 E(eens need:)-.18 E F1("xf1bpp.h")115
534 Q F2(Drivers supporting VGA or EGC 16-colour scr)90 552 Q
(eens need:)-.18 E F1("xf4bpp.h")115 570 Q F2(Drivers using cfb need:)90
588 Q F1(#define PSZ 8)115 606 Q(#include "cfb.h")115 630 Q(#undef PSZ)
115 654 Q F2
(Drivers supporting bpp 16, 24 or 32 with cfb need one or mor)90 672 Q
2.5(eo)-.18 G(f:)-2.5 E F1("cfb16.h")115 690 Q("cfb24.h")115 714 Q
("cfb32.h")115 738 Q 0 Cg EP
%%Page: 89 89
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(XFree86\256 serv)90 48 Q
(er 4.x Design \(DRAFT\))-.15 E(89)264.86 E/F1 10/Palatino-Roman@0 SF
(The driver's own header \214le:)90 96 Q/F2 10/Courier@0 SF("zzz.h")115
114 Q F1(Drivers must NOT include the following:)90 132 Q F2
("xf86Priv.h")115 150 Q("xf86Privstr.h")115 174 Q("xf86_libc.h")115 198
Q("xf86_OSlib.h")115 222 Q(<X11/Xos.h>)115 246 Q F1(any OS header)115
270 Q/F3 14/Helvetica-Bold@0 SF 3.892(20.2 Data)90 292 R
(structures and initialisation)3.892 E/F4 8/Palatino-Roman@0 SF<83>
105.152 310 Q F1(The following macr)5 E(os should be de\214ned:)-.18 E
/F5 8/Courier@0 SF(#define VERSION <version-as-an-int>)135 326 Q
(#define ZZZ_NAME "ZZZ")135 336 Q
(/* the name used to prefix messages */)43.2 E
(#define ZZZ_DRIVER_NAME "zzz")135 346 Q
(/* the driver name as used in config file */)9.6 E
(#define ZZZ_MAJOR_VERSION <int>)135 356 Q
(#define ZZZ_MINOR_VERSION <int>)135 366 Q(#define ZZZ_PATCHLEVEL)135
376 Q(<int>)19.2 E F1(NOTE:)115 422 Q F2(ZZZ_DRIVER_NAME)3.91 E F1 1.411
(should match the name of the driver module without things)3.911 F
(like the "lib" pr)115 434 Q(e\214x, the "_drv" suf)-.18 E
(\214x or \214lename extensions.)-.18 E F4<83>105.152 452 Q F1 2.615(AD)
5 G .115(riverRec must be de\214ned, which includes the functions r)
-2.615 F(equir)-.18 E .114(ed at the pr)-.18 F(e-pr)-.18 E .114
(obe phase.)-.18 F .036(The name of this DriverRec must be an upper)115
464 R .036(-case version of ZZZ_DRIVER_NAME \(for the)-.18 F
(purposes of static linking\).)115 476 Q F5(DriverRec ZZZ = {)135 492 Q
(VERSION,)154.2 502 Q(ZZZ_DRIVER_NAME,)154.2 512 Q(ZZZIdentify,)154.2
522 Q(ZZZProbe,)154.2 532 Q(ZZZAvailableOptions,)154.2 542 Q(NULL,)154.2
552 Q(0)154.2 562 Q(};)135 572 Q F4<83>105.152 600 Q F1
(De\214ne list of supported chips and their matching ID:)5 E F5
(static SymTabRec ZZZChipsets[] = {)135 616 Q 4.8({P)154.2 626 S
(CI_CHIP_ZZZ1234, "zzz1234a" },)-4.8 E 4.8({P)154.2 636 S
(CI_CHIP_ZZZ5678, "zzz5678a" },)-4.8 E 4.8({-)154.2 646 S 67.2(1, NULL)
-4.8 F(})4.8 E(};)135 656 Q F1 .876(The token \214eld may be any intege\
r value that the driver may use to uniquely identify the)115 684 R 1.608
(supported chipsets.)115 696 R 1.609
(For drivers that support only PCI devices using the PCI device IDs)
6.608 F .604(might be a natural choice, but this isn't mandatory.)115
708 R .603(For drivers that support both PCI and)5.603 F .554
(other devices \(like ISA\), some other ID should pr)115 720 R .554
(obably used.)-.18 F .554(When other IDs ar)5.554 F 3.054(eu)-.18 G .554
(sed as)-3.054 F(the tokens it is r)115 732 Q
(ecommended that the names be de\214ned as an)-.18 E F2(enum)2.5 E F1
(type.)2.5 E 0 Cg EP
%%Page: 90 90
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(XFree86\256 serv)90 48 Q
(er 4.x Design \(DRAFT\))-.15 E(90)264.86 E/F1 8/Palatino-Roman@0 SF<83>
105.152 96 Q/F2 10/Palatino-Roman@0 SF .855(If the driver uses the)5 F
/F3 10/Courier@0 SF(xf86MatchPciInstances\()3.355 E F2 3.355(\)h)C .855
(elper \(r)-3.355 F .855(ecommended for drivers that)-.18 F .111
(support PCI car)115 108 R .111
(ds\) a list that maps PCI IDs to chip IDs and \214xed r)-.18 F(esour)
-.18 E .112(ces must be de\214ned:)-.18 F/F4 8/Courier@0 SF
(static PciChipsets ZZZPciChipsets[] = {)135 124 Q 4.8({P)154.2 134 S
(CI_CHIP_ZZZ1234, PCI_CHIP_ZZZ1234, RES_SHARED_VGA },)-4.8 E 4.8({P)
154.2 144 S(CI_CHIP_ZZZ5678, PCI_CHIP_ZZZ5678, RES_SHARED_VGA },)-4.8 E
4.8({-)154.2 154 S 67.2(1, -1, RES_UNDEFINED)-4.8 F(})4.8 E(})135 164 Q
F1<83>105.152 192 Q F2 3.25(De\214ne the)5 F F3(XF86ModuleVersionInfo)
5.749 E F2(str)5.749 E 3.249(uct for the driver.)-.08 F 3.249(This is r)
8.249 F(equir)-.18 E 3.249(ed for the)-.18 F
(dynamically loaded version:)115 204 Q F4(#ifdef XFree86LOADER)135 220 Q
(static XF86ModuleVersionInfo zzzVersRec =)135 230 Q({)135 240 Q("zzz",)
154.2 250 Q(MODULEVENDORSTRING,)154.2 260 Q(MODINFOSTRING1,)154.2 270 Q
(MODINFOSTRING2,)154.2 280 Q(XF86_VERSION_CURRENT,)154.2 290 Q
(ZZZ_MAJOR_VERSION, ZZZ_MINOR_VERSION, ZZZ_PATCHLEVEL,)154.2 300 Q
(ABI_CLASS_VIDEODRV,)154.2 310 Q(ABI_VIDEODRV_VERSION,)154.2 320 Q
(MOD_CLASS_VIDEODRV,)154.2 330 Q({0,0,0,0})154.2 340 Q(};)135 350 Q
(#endif)135 360 Q F1<83>105.152 388 Q F2 .569(De\214ne a data str)5 F
(uctur)-.08 E 3.069(et)-.18 G 3.069(oh)-3.069 G .569
(old the driver's scr)-3.069 F .569(een-speci\214c data.)-.18 F .57
(This must be used instead)5.569 F(of global variables.)115 400 Q
(This would be de\214ned in the)5 E F3("zzz.h")2.5 E F2
(\214le, something like:)2.5 E F4(typedef struct {)135 416 Q 4.8
(type1 field1;)154.2 426 R 4.8(type2 field2;)154.2 436 R 14.4
(int fooHack;)154.2 446 R 9.6(Bool pciRetry;)154.2 456 R 9.6
(Bool noAccel;)154.2 466 R 9.6(Bool hwCursor;)154.2 476 R
(CloseScreenProcPtr CloseScreen;)154.2 486 Q(OptionInfoPtr Options;)
154.2 496 Q(...)154.2 506 Q 4.8(}Z)135 516 S(ZZRec, *ZZZPtr;)-4.8 E F1
<83>105.152 544 Q F2 .659
(De\214ne the list of con\214g \214le Options that the driver accepts.)5
F .658(For consistency between driv-)5.658 F .466
(ers those in the list of `)115 556 R(`standar)-.37 E .467
(d'' options should be used wher)-.18 F 2.967(ea)-.18 G(ppr)-2.967 E
.467(opriate befor)-.18 F 2.967(ei)-.18 G(nvent-)-2.967 E
(ing new options.)115 568 Q F4(typedef enum {)135 584 Q
(OPTION_FOO_HACK,)154.2 594 Q(OPTION_PCI_RETRY,)154.2 604 Q
(OPTION_HW_CURSOR,)154.2 614 Q(OPTION_NOACCEL)154.2 624 Q 4.8(}Z)135 634
S(ZZOpts;)-4.8 E(static const OptionInfoRec ZZZOptions[] = {)135 654 Q
4.8({O)144.6 664 S 4.8(PTION_FOO_HACK, "FooHack",)-4.8 F
(OPTV_INTEGER, {0}, FALSE },)14.4 E 4.8({O)144.6 674 S
(PTION_PCI_RETRY, "PciRetry",)-4.8 E(OPTV_BOOLEAN, {0}, FALSE },)9.6 E
4.8({O)144.6 684 S(PTION_HW_CURSOR, "HWcursor",)-4.8 E
(OPTV_BOOLEAN, {0}, FALSE },)9.6 E 4.8({O)144.6 694 S 9.6
(PTION_NOACCEL, "NoAccel", OPTV_BOOLEAN,)-4.8 F({0}, FALSE },)4.8 E 4.8
({-)144.6 704 S 67.2(1, NULL,)-4.8 F 14.4(OPTV_NONE, {0},)38.4 F
(FALSE })4.8 E(};)135 714 Q 0 Cg EP
%%Page: 91 91
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(XFree86\256 serv)90 48 Q
(er 4.x Design \(DRAFT\))-.15 E(91)264.86 E/F1 14/Helvetica-Bold@0 SF
3.892(20.3 Functions)90 100 R/F2 12/Helvetica-Bold@0 SF 3.336
(20.3.1 SetupPr)90 120 R(oc)-.24 E/F3 10/Palatino-Roman@0 SF .054
(For dynamically loaded modules, a)90 138 R/F4 10/Courier@0 SF
(ModuleData)2.554 E F3 .053(variable is r)2.553 F(equir)-.18 E 2.553
(ed. It)-.18 F .053(is should be the name of)2.553 F 3.08(the driver pr)
90 150 R 3.08(epended to "ModuleData".)-.18 F(A)8.08 E F4(Setup\(\))5.58
E F3 3.08(function is also r)5.58 F(equir)-.18 E 3.08(ed, which calls)
-.18 F F4(xf86AddDriver\(\))90 162 Q F3
(to add the driver to the main list of drivers.)2.5 E/F5 8/Courier@0 SF
(#ifdef XFree86LOADER)110 178 Q(static MODULESETUPPROTO\(mgaSetup\);)110
198 Q(XF86ModuleData zzzModuleData = { &zzzVersRec, zzzSetup, NULL };)
110 218 Q(static pointer)110 238 Q
(zzzSetup\(pointer module, pointer opts, int *errmaj, int *errmin\))110
248 Q({)110 258 Q(static Bool setupDone = FALSE;)129.2 268 Q
(/* This module should be loaded only once, but check to be sure. */)
129.2 288 Q(if \(!setupDone\) {)129.2 308 Q(/*)148.4 318 Q 4.8(*M)153.2
328 S(odules that this driver always requires may be loaded)-4.8 E 4.8
(*h)153.2 338 S 4.8(ere by)-4.8 F(calling LoadSubModule\(\).)4.8 E(*/)
153.2 348 Q(setupDone = TRUE;)148.4 368 Q
(xf86AddDriver\(&MGA, module, 0\);)148.4 378 Q(/*)148.4 398 Q 4.8(*T)
153.2 408 S(he return value must be non-NULL on success even though)-4.8
E 4.8(*t)153.2 418 S(here is no TearDownProc.)-4.8 E(*/)153.2 428 Q
(return \(pointer\)1;)148.4 438 Q 4.8(}e)129.2 448 S(lse {)-4.8 E
(if \(errmaj\) *errmaj = LDR_ONCEONLY;)148.4 458 Q(return NULL;)148.4
468 Q(})129.2 478 Q(})110 488 Q(#endif)110 498 Q F2 3.336
(20.3.2 GetRec,)90 528 R(FreeRec)3.336 E F3 3.593(Af)90 546 S 1.092
(unction is usually r)-3.593 F(equir)-.18 E 1.092
(ed to allocate the driver's scr)-.18 F 1.092(een-speci\214c data str)
-.18 F(uctur)-.08 E 3.592(ea)-.18 G 1.092(nd hook it)-3.592 F 1.38
(into the)90 558 R F4(ScrnInfoRec)3.88 E F3('s)A F4(driverPrivate)3.88 E
F3 3.88(\214eld. The)3.88 F F4(ScrnInfoRec)3.88 E F3('s)A F4
(driverPrivate)3.88 E F3 1.38(is ini-)3.88 F .45(tialised to)90 570 R F4
(NULL)2.95 E F3 2.95(,s)C 2.95(oi)-2.95 G 2.95(ti)-2.95 G 2.95(se)-2.95
G .45(asy to check if the initialisation has alr)-2.95 F .45
(eady been done.)-.18 F .45(After allocating)5.45 F .518
(it, initialise the \214elds.)90 582 R .518(By using)5.518 F F4
(xnfcalloc\(\))3.018 E F3 .518(to do the allocation it is zer)3.018 F
.519(oed, and if the alloca-)-.18 F(tion fails the server exits.)90 594
Q .248(NOTE: When allocating str)90 612 R(uctur)-.08 E .247(es fr)-.18 F
.247(om inside the driver which ar)-.18 F 2.747(ed)-.18 G .247
(e\214ned on the common level)-2.747 F 1.498
(it is important to initialize the str)90 624 R(uctur)-.08 E 3.999(et)
-.18 G 3.999(oz)-3.999 G(er)-3.999 E 3.999(o. Only)-.18 F 1.499
(this guarantees that the server r)3.999 F(emains)-.18 E(sour)90 636 Q
(ce compatible to futur)-.18 E 2.5(ec)-.18 G(hanges in common level str)
-2.5 E(uctur)-.08 E(es.)-.18 E 0 Cg EP
%%Page: 92 92
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(XFree86\256 serv)90 48 Q
(er 4.x Design \(DRAFT\))-.15 E(92)264.86 E/F1 8/Courier@0 SF
(static Bool)110 94 Q(ZZZGetRec\(ScrnInfoPtr pScrn\))110 104 Q({)110 114
Q(if \(pScrn->driverPrivate != NULL\))129.2 124 Q(return TRUE;)148.4 134
Q(pScrn->driverPrivate = xnfcalloc\(sizeof\(ZZZRec\), 1\);)129.2 144 Q
(/* Initialise as required */)129.2 154 Q(...)129.2 164 Q(return TRUE;)
129.2 174 Q(})110 184 Q/F2 10/Palatino-Roman@0 SF(De\214ne a macr)90 212
Q 2.5(oi)-.18 G(n)-2.5 E/F3 10/Courier@0 SF("zzz.h")2.5 E F2
(which gets a pointer to the)2.5 E F3(ZZZRec)2.5 E F2(when given)2.5 E
F3(pScrn)2.5 E F2(:)A F1
(#define ZZZPTR\(p\) \(\(ZZZPtr\)\(\(p\)->driverPrivate\)\))110 228 Q F2
(De\214ne a function to fr)90 256 Q(ee the above, setting it to)-.18 E
F3(NULL)2.5 E F2(once it has been fr)2.5 E(eed:)-.18 E F1(static void)
110 272 Q(ZZZFreeRec\(ScrnInfoPtr pScrn\))110 282 Q({)110 292 Q
(if \(pScrn->driverPrivate == NULL\))129.2 302 Q(return;)148.4 312 Q
(xfree\(pScrn->driverPrivate\);)129.2 322 Q
(pScrn->driverPrivate = NULL;)129.2 332 Q(})110 342 Q/F4 12
/Helvetica-Bold@0 SF 3.336(20.3.3 Identify)90 372 R F2 .332
(De\214ne the)90 390 R F3(Identify\(\))2.832 E F2 2.832(function. It)
2.832 F .331(is r)2.832 F .331(un befor)-.08 F 2.831(et)-.18 G .331
(he Pr)-2.831 F .331(obe, and typically prints out an identify-)-.18 F
(ing message, which might include the chipsets it supports.)90 402 Q
(This function is mandatory:)5 E F1(static void)110 418 Q
(ZZZIdentify\(int flags\))110 428 Q({)110 438 Q
(xf86PrintChipsets\(ZZZ_NAME, "driver for ZZZ Tech chipsets",)129.2 448
Q(ZZZChipsets\);)215.6 458 Q(})110 468 Q F4 3.336(20.3.4 Pr)90 498 R
(obe)-.24 E F2 .144(De\214ne the)90 516 R F3(Probe\(\))2.644 E F2 2.644
(function. The)2.644 F .145
(purpose of this is to \214nd all instances of the har)2.644 F(dwar)-.18
E 2.645(et)-.18 G .145(hat the)-2.645 F .578
(driver supports, and for the ones not alr)90 528 R .577
(eady claimed by another driver)-.18 F 3.077(,c)-.74 G .577
(laim the slot, and allo-)-3.077 F 1.385(cate a)90 540 R F3(ScrnInfoRec)
3.885 E F2 6.385(.T)C 1.385(his should be a minimal pr)-6.385 F 1.385
(obe, and it should under no cir)-.18 F(cumstances)-.18 E .659
(leave the state of the har)90 552 R(dwar)-.18 E 3.158(ec)-.18 G 3.158
(hanged. Because)-3.158 F 3.158(ad)3.158 G .658
(evice is found, don't assume that it will be)-3.158 F 3.892
(used. Don't)90 564 R 1.393(do any initialisations other than the r)
3.892 F(equir)-.18 E(ed)-.18 E F3(ScrnInfoRec)3.893 E F2 3.893
(initialisations. Don't)3.893 F(allocate any new data str)90 576 Q
(uctur)-.08 E(es.)-.18 E(This function is mandatory.)90 594 Q(NOTE: The)
90 612 Q F3(xf86DrvMsg\(\))2.5 E F2(functions cannot be used fr)2.5 E
(om the Pr)-.18 E(obe.)-.18 E 0 Cg EP
%%Page: 93 93
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(XFree86\256 serv)90 48 Q
(er 4.x Design \(DRAFT\))-.15 E(93)264.86 E/F1 8/Courier@0 SF
(static Bool)110 94 Q(ZZZProbe\(DriverPtr drv, int flags\))110 104 Q({)
110 114 Q(Bool foundScreen = FALSE;)129.2 124 Q
(int numDevSections, numUsed;)129.2 134 Q(GDevPtr *devSections;)129.2
144 Q(int *usedChips;)129.2 154 Q(int i;)129.2 164 Q(/*)129.2 184 Q 4.8
(*F)134 194 S(ind the config file Device sections that match this)-4.8 E
4.8(*d)134 204 S(river, and return if there are none.)-4.8 E(*/)134 214
Q(if \(\(numDevSections = xf86MatchDevice\(ZZZ_DRIVER_NAME,)129.2 224 Q
(&devSections\)\) <= 0\) {)311.6 234 Q(return FALSE;)148.4 244 Q(})129.2
254 Q(/*)129.2 274 Q 4.8(*S)134 284 S
(ince this is a PCI card, "probing" just amounts to checking)-4.8 E 4.8
(*t)134 294 S(he PCI data that the server has already collected.)-4.8 E
(If there)9.6 E 4.8(*i)134 304 S 4.8(sn)-4.8 G(one, return.)-4.8 E(*)134
314 Q 4.8(*A)134 324 S
(lthough the config file is allowed to override things, it)-4.8 E 4.8
(*i)134 334 S 4.8(sr)-4.8 G
(easonable to not allow it to override the detection)-4.8 E 4.8(*o)134
344 S 4.8(fn)-4.8 G 4.8(oP)-4.8 G(CI video cards.)-4.8 E(*)134 354 Q 4.8
(*T)134 364 S
(he provided xf86MatchPciInstances\(\) helper takes care of)-4.8 E 4.8
(*t)134 374 S(he details.)-4.8 E(*/)134 384 Q
(/* test if PCI bus present */)129.2 394 Q
(if \(xf86GetPciVideoInfo\(\)\) {)129.2 404 Q
(numUsed = xf86MatchPciInstances\(ZZZ_NAME, PCI_VENDOR_ZZZ,)148.4 424 Q
(ZZZChipsets, ZZZPciChipsets, devSections,)244.4 434 Q
(numDevSections, drv, &usedChips\);)244.4 444 Q
(for \(i = 0; i < numUsed; i++\) {)148.4 464 Q
(ScrnInfoPtr pScrn = NULL;)167.6 474 Q
(if \(\(pScrn = xf86ConfigPciEntity\(pScrn, flags, usedChips[i],)167.6
484 Q(ZZZPciChipsets, NULL, NULL,)326 494 Q(NULL, NULL, NULL\)\)\) {)326
504 Q(/* Allocate a ScrnInfoRec */)182 514 Q
(pScrn->driverVersion = VERSION;)182 524 Q 14.4(pScrn->driverName =)182
534 R(ZZZ_DRIVER_NAME;)4.8 E 43.2(pScrn->name =)182 544 R(ZZZ_NAME;)4.8
E 38.4(pScrn->Probe =)182 554 R(ZZZProbe;)4.8 E 28.8(pScrn->PreInit =)
182 564 R(ZZZPreInit;)4.8 E 14.4(pScrn->ScreenInit =)182 574 R
(ZZZScreenInit;)4.8 E 14.4(pScrn->SwitchMode =)182 584 R(ZZZSwitchMode;)
4.8 E 9.6(pScrn->AdjustFrame =)182 594 R(ZZZAdjustFrame;)4.8 E 28.8
(pScrn->EnterVT =)182 604 R(ZZZEnterVT;)4.8 E 28.8(pScrn->LeaveVT =)182
614 R(ZZZLeaveVT;)4.8 E 14.4(pScrn->FreeScreen =)182 624 R
(ZZZFreeScreen;)4.8 E 19.2(pScrn->ValidMode =)182 634 R(ZZZValidMode;)
4.8 E(foundScreen = TRUE;)182 644 Q(/* add screen to entity */)182 654 Q
(})162.8 664 Q(})148.4 674 Q(xfree\(usedChips\);)148.4 684 Q(})129.2 694
Q(#ifdef HAS_ISA_DEVS)110 714 Q(/*)129.2 724 Q 4.8(*I)134 734 S 4.8(ft)
-4.8 G(he driver supports ISA hardware, the following block)-4.8 E 0 Cg
EP
%%Page: 94 94
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(XFree86\256 serv)90 48 Q
(er 4.x Design \(DRAFT\))-.15 E(94)264.86 E/F1 8/Courier@0 SF 4.8(*c)134
94 S(an be included too.)-4.8 E(*/)134 104 Q
(numUsed = xf86MatchIsaInstances\(ZZZ_NAME, ZZZChipsets,)129.2 114 Q
(ZZZIsaChipsets, drv, ZZZFindIsaDevice,)249.2 124 Q
(devSections, numDevSections, &usedChips\);)249.2 134 Q
(for \(i = 0; i < numUsed; i++\) {)129.2 144 Q
(ScrnInfoPtr pScrn = NULL;)148.4 154 Q
(if \(\(pScrn = xf86ConfigIsaEntity\(pScrn, flags, usedChips[i],)146 164
Q(ZZZIsaChipsets, NULL, NULL, NULL,)294.8 174 Q(NULL, NULL\)\)\) {)294.8
184 Q(pScrn->driverVersion = VERSION;)167.6 194 Q 14.4
(pScrn->driverName =)167.6 204 R(ZZZ_DRIVER_NAME;)4.8 E 43.2
(pScrn->name =)167.6 214 R(ZZZ_NAME;)4.8 E 38.4(pScrn->Probe =)167.6 224
R(ZZZProbe;)4.8 E 28.8(pScrn->PreInit =)167.6 234 R(ZZZPreInit;)4.8 E
14.4(pScrn->ScreenInit =)167.6 244 R(ZZZScreenInit;)4.8 E 14.4
(pScrn->SwitchMode =)167.6 254 R(ZZZSwitchMode;)4.8 E 9.6
(pScrn->AdjustFrame =)167.6 264 R(ZZZAdjustFrame;)4.8 E 28.8
(pScrn->EnterVT =)167.6 274 R(ZZZEnterVT;)4.8 E 28.8(pScrn->LeaveVT =)
167.6 284 R(ZZZLeaveVT;)4.8 E 14.4(pScrn->FreeScreen =)167.6 294 R
(ZZZFreeScreen;)4.8 E 19.2(pScrn->ValidMode =)167.6 304 R(ZZZValidMode;)
4.8 E(foundScreen = TRUE;)167.6 314 Q(})148.4 324 Q(})129.2 334 Q
(xfree\(usedChips\);)129.2 344 Q(#endif /* HAS_ISA_DEVS */)110 354 Q
(xfree\(devSections\);)129.2 374 Q(return foundScreen;)129.2 384 Q/F2 12
/Helvetica-Bold@0 SF 3.336(20.3.5 A)90 414 R -.24(va)-.48 G(ilab).24 E
(leOptions)-.12 E/F3 10/Palatino-Roman@0 SF .477(De\214ne the)90 432 R
/F4 10/Courier@0 SF(AvailableOptions\(\))2.977 E F3 .477
(function. The purpose of this is to r)2.977 F .477
(eturn the available driver)-.18 F .284(options back to the -con\214gur)
90 444 R 2.784(eo)-.18 G .285(ption, so that an XF86Con\214g \214le can\
 be built and the user can see)-2.784 F(which options ar)90 456 Q 2.5
(ea)-.18 G(vailable for them to use.)-2.5 E F2 3.336(20.3.6 PreInit)90
476 R F3 1.29(De\214ne the)90 494 R F4(PreInit\(\))3.79 E F3 3.79
(function. The)3.79 F 1.289
(purpose of this is to \214nd all the information r)3.79 F(equir)-.18 E
1.289(ed to)-.18 F .042(determine if the con\214guration is usable, and\
 to initialise those parts of the)90 506 R F4(ScrnInfoRec)2.542 E F3
.042(that can)2.542 F 1.018
(be set once at the beginning of the \214rst server generation.)90 518 R
1.017(The information should be found in)6.017 F(the least intr)90 530 Q
(usive way possible.)-.08 E(This function is mandatory.)90 548 Q(NOTES:)
90 566 Q 7.5(1. The)102.5 584 R F4(PreInit\(\))3.045 E F3 .545(function\
 is only called once during the life of the X server \(at the start of)
3.045 F(the \214rst generation\).)120 596 Q 7.5(2. Data)102.5 614 R .055
(allocated her)2.555 F 2.555(em)-.18 G .054
(ust be of the type that persists for the life of the X server.)-2.555 F
.054(This means)5.054 F 1.397(that data that hooks into the)120 626 R F4
(ScrnInfoRec)3.897 E F3('s)A F4(privates)3.898 E F3 1.398
(\214eld should be allocated her)3.898 F(e,)-.18 E 1.702
(but data that hooks into the)120 638 R F4(ScreenRec)4.202 E F3('s)A F4
(devPrivates)4.202 E F3 1.701(\214eld should not be allocated)4.202 F
(her)120 650 Q 2.5(e. The)-.18 F F4(driverPrivate)2.5 E F3
(\214eld should also be allocated her)2.5 E(e.)-.18 E 7.5(3. Although)
102.5 668 R(the)2.58 E F4(ScrnInfoRec)2.58 E F3 .081
(has been allocated befor)2.581 F 2.581(et)-.18 G .081
(his function is called, the)-2.581 F F4(Screen-)2.581 E(Rec)120 680 Q
F3 1.566(has not been allocated.)4.066 F 1.566(That means that things r)
6.566 F 1.566(equiring it cannot be used in this)-.18 F(function.)120
692 Q 7.5(4. V)102.5 710 R 1.997(ery little of the)-1.11 F F4
(ScrnInfoRec)4.498 E F3 1.998
(has been initialised when this function is called.)4.498 F 1.998(It is)
6.998 F(important to get the or)120 722 Q
(der of doing things right in this function.)-.18 E 0 Cg EP
%%Page: 95 95
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(XFree86\256 serv)90 48 Q
(er 4.x Design \(DRAFT\))-.15 E(95)264.86 E/F1 8/Courier@0 SF
(static Bool)110 94 Q(ZZZPreInit\(ScrnInfoPtr pScrn, int flags\))110 104
Q({)110 114 Q(/* Fill in the monitor field */)129.2 124 Q
(pScrn->monitor = pScrn->confScreen->monitor;)129.2 134 Q(/*)129.2 154 Q
4.8(*I)134 164 S 4.8(fu)-4.8 G
(sing the vgahw module, it will typically be loaded)-4.8 E 4.8(*h)134
174 S(ere by calling xf86LoadSubModule\(pScrn, "vgahw"\);)-4.8 E(*/)134
184 Q(/*)129.2 204 Q 4.8(*S)134 214 S(et the depth/bpp.)-4.8 E
(Use the globally preferred depth/bpp.)9.6 E(If the)9.6 E 4.8(*d)134 224
S(river has special default depth/bpp requirements, the defaults should)
-4.8 E 4.8(*b)134 234 S 4.8(es)-4.8 G(pecified here explicitly.)-4.8 E
4.8(*W)134 244 S 4.8(es)-4.8 G
(upport both 24bpp and 32bpp framebuffer layouts.)-4.8 E 4.8(*T)134 254
S(his sets pScrn->display also.)-4.8 E(*/)134 264 Q
(if \(!xf86SetDepthBpp\(pScrn, 0, 0, 0,)129.2 274 Q
(Support24bppFb | Support32bppFb\)\) {)230 284 Q(return FALSE;)148.4 294
Q 4.8(}e)129.2 304 S(lse {)-4.8 E
(if \(depth/bpp isn't one we support\) {)148.4 314 Q
(print error message;)167.6 324 Q(return FALSE;)167.6 334 Q(})148.4 344
Q(})129.2 354 Q(/* Print out the depth/bpp that was set */)129.2 364 Q
(xf86PrintDepthBpp\(pScrn\);)129.2 374 Q
(/* Set bits per RGB for 8bpp */)129.2 394 Q(if \(pScrn->depth <= 8\) {)
129.2 404 Q(/* Take into account a dac_6_bit option here */)148.4 414 Q
(pScrn->rgbBits = 6 or 8;)148.4 424 Q(})129.2 434 Q(/*)129.2 454 Q 4.8
(*x)134 464 S
(f86SetWeight\(\) and xf86SetDefaultVisual\(\) must be called)-4.8 E 4.8
(*a)134 474 S(fter pScrn->display is initialised.)-4.8 E(*/)134 484 Q
(/* Set weight/mask/offset for depth > 8 */)129.2 504 Q
(if \(pScrn->depth > 8\) {)129.2 514 Q
(if \(!xf86SetWeight\(pScrn, defaultWeight, defaultMask\)\) {)148.4 524
Q(return FALSE;)167.6 534 Q 4.8(}e)148.4 544 S(lse {)-4.8 E
(if \(weight isn't one we support\) {)167.6 554 Q(print error message;)
186.8 564 Q(return FALSE;)186.8 574 Q(})167.6 584 Q(})148.4 594 Q(})
129.2 604 Q(/* Set the default visual. */)129.2 624 Q
(if \(!xf86SetDefaultVisual\(pScrn, -1\)\) {)129.2 634 Q(return FALSE;)
148.4 644 Q 4.8(}e)129.2 654 S(lse {)-4.8 E
(if \(visual isn't one we support\) {)148.4 664 Q(print error message;)
167.6 674 Q(return FALSE;)167.6 684 Q(})148.4 694 Q(})129.2 704 Q
(/* If the driver supports gamma correction, set the gamma. */)129.2 724
Q(if \(!xf86SetGamma\(pScrn, default_gamma\)\) {)129.2 734 Q 0 Cg EP
%%Page: 96 96
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(XFree86\256 serv)90 48 Q
(er 4.x Design \(DRAFT\))-.15 E(96)264.86 E/F1 8/Courier@0 SF
(return FALSE;)148.4 94 Q(})129.2 104 Q
(/* This driver uses a programmable clock */)129.2 124 Q
(pScrn->progClock = TRUE;)129.2 134 Q
(/* Allocate the ZZZRec driverPrivate */)129.2 154 Q
(if \(!ZZZGetRec\(pScrn\)\) {)129.2 164 Q(return FALSE;)148.4 174 Q(})
129.2 184 Q(pZzz = ZZZPTR\(pScrn\);)129.2 204 Q
(/* Collect all of the option flags \(fill in pScrn->options\) */)129.2
224 Q(xf86CollectOptions\(pScrn, NULL\);)129.2 234 Q(/*)129.2 254 Q 4.8
(*P)134 264 S
(rocess the options based on the information in ZZZOptions.)-4.8 E 4.8
(*T)134 274 S(he results are written to pZzz->Options.)-4.8 E
(If all of the options)9.6 E 4.8(*p)134 284 S
(rocessing is done within this function a local variable "options")-4.8
E 4.8(*c)134 294 S(an be used instead of pZzz->Options.)-4.8 E(*/)134
304 Q(if \(!\(pZzz->Options = xalloc\(sizeof\(ZZZOptions\)\)\)\))129.2
314 Q(return FALSE;)148.4 324 Q
(\(void\)memcpy\(pZzz->Options, ZZZOptions, sizeof\(ZZZOptions\)\);)
129.2 334 Q
(xf86ProcessOptions\(pScrn->scrnIndex, pScrn->options, pZzz->Options\);)
129.2 344 Q(/*)129.2 364 Q 4.8(*S)134 374 S
(et various fields of ScrnInfoRec and/or ZZZRec based on)-4.8 E 4.8(*t)
134 384 S(he options found.)-4.8 E(*/)134 394 Q(from = X_DEFAULT;)129.2
404 Q(pZzz->hwCursor = FALSE;)129.2 414 Q
(if \(xf86IsOptionSet\(pZzz->Options, OPTION_HW_CURSOR\)\) {)129.2 424 Q
(from = X_CONFIG;)148.4 434 Q(pZzz->hwCursor = TRUE;)148.4 444 Q(})129.2
454 Q(xf86DrvMsg\(pScrn->scrnIndex, from, "Using %s cursor\\n",)129.2
464 Q(pZzz->hwCursor ? "HW" : "SW"\);)182 474 Q
(if \(xf86IsOptionSet\(pZzz->Options, OPTION_NOACCEL\)\) {)129.2 484 Q
(pZzz->noAccel = TRUE;)148.4 494 Q
(xf86DrvMsg\(pScrn->scrnIndex, X_CONFIG,)148.4 504 Q
("Acceleration disabled\\n"\);)201.2 514 Q 4.8(}e)129.2 524 S(lse {)-4.8
E(pZzz->noAccel = FALSE;)148.4 534 Q(})129.2 544 Q
(if \(xf86IsOptionSet\(pZzz->Options, OPTION_PCI_RETRY\)\) {)129.2 554 Q
(pZzz->UsePCIRetry = TRUE;)148.4 564 Q
(xf86DrvMsg\(pScrn->scrnIndex, X_CONFIG, "PCI retry enabled\\n"\);)148.4
574 Q(})129.2 584 Q(pZzz->fooHack = 0;)129.2 594 Q
(if \(xf86GetOptValInteger\(pZzz->Options, OPTION_FOO_HACK,)129.2 604 Q
(&pZzz->fooHack\)\) {)249.2 614 Q
(xf86DrvMsg\(pScrn->scrnIndex, X_CONFIG, "Foo Hack set to %d\\n",)148.4
624 Q(pZzz->fooHack\);)201.2 634 Q(})129.2 644 Q(/*)129.2 664 Q 4.8(*F)
134 674 S(ind the PCI slot\(s\) that this screen claimed in the probe.)
-4.8 E 4.8(*I)134 684 S 4.8(nt)-4.8 G
(his case, exactly one is expected, so complain otherwise.)-4.8 E 4.8
(*N)134 694 S
(ote in this case we're not interested in the card types so)-4.8 E 4.8
(*t)134 704 S(hat parameter is set to NULL.)-4.8 E(*/)134 714 Q(if \(\(\
i = xf86GetPciInfoForScreen\(pScrn->scrnIndex, &pciList, NULL\)\))129.2
724 Q(!= 1\) {)148.4 734 Q 0 Cg EP
%%Page: 97 97
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(XFree86\256 serv)90 48 Q
(er 4.x Design \(DRAFT\))-.15 E(97)264.86 E/F1 8/Courier@0 SF
(print error message;)148.4 94 Q(ZZZFreeRec\(pScrn\);)148.4 104 Q
(if \(i > 0\))148.4 114 Q(xfree\(pciList\);)167.6 124 Q(return FALSE;)
148.4 134 Q(})129.2 144 Q
(/* Note that pciList should be freed below when no longer needed */)
129.2 154 Q(/*)129.2 174 Q 4.8(*D)134 184 S
(etermine the chipset, allowing config file chipset and)-4.8 E 4.8(*c)
134 194 S(hipid values to override the probed information.)-4.8 E
(The config)9.6 E 4.8(*c)134 204 S
(hipset value has precedence over its chipid value if both)-4.8 E 4.8
(*a)134 214 S(re present.)-4.8 E(*)134 224 Q 4.8(*I)134 234 S 4.8(ti)
-4.8 G(sn't necessary to fill in pScrn->chipset if the driver)-4.8 E 4.8
(*k)134 244 S(eeps track of the chipset in its ZZZRec.)-4.8 E(*/)134 254
Q(...)129.2 274 Q(/*)129.2 294 Q 4.8(*D)134 304 S
(etermine video memory, fb base address, I/O addresses, etc,)-4.8 E 4.8
(*a)134 314 S(llowing the config file to override probed values.)-4.8 E
(*)134 324 Q 4.8(*S)134 334 S
(et the appropriate pScrn fields \(videoRam is probably the)-4.8 E 4.8
(*m)134 344 S(ost important one that other code might require\), and)
-4.8 E 4.8(*p)134 354 S(rint out the settings.)-4.8 E(*/)134 364 Q(...)
129.2 384 Q(/* Initialise a clockRanges list. */)129.2 404 Q(...)129.2
424 Q(/* Set any other chipset specific things in the ZZZRec */)129.2
444 Q(...)129.2 464 Q(/* Select valid modes from those available */)
129.2 484 Q 4.8(i=x)129.2 504 S
(f86ValidateModes\(pScrn, pScrn->monitor->Modes,)-4.8 E
(pScrn->display->modes, clockRanges,)234.8 514 Q
(NULL, minPitch, maxPitch, rounding,)234.8 524 Q(minHeight, maxHeight,)
234.8 534 Q(pScrn->display->virtualX,)234.8 544 Q
(pScrn->display->virtualY,)234.8 554 Q(pScrn->videoRam * 1024,)234.8 564
Q(LOOKUP_BEST_REFRESH\);)234.8 574 Q(if \(i == -1\) {)129.2 584 Q
(ZZZFreeRec\(pScrn\);)148.4 594 Q(return FALSE;)148.4 604 Q(})129.2 614
Q(/* Prune the modes marked as invalid */)129.2 634 Q
(xf86PruneDriverModes\(pScrn\);)129.2 654 Q
(/* If no valid modes, return */)129.2 674 Q
(if \(i == 0 || pScrn->modes == NULL\) {)129.2 694 Q
(print error message;)148.4 704 Q(ZZZFreeRec\(pScrn\);)148.4 714 Q
(return FALSE;)148.4 724 Q(})129.2 734 Q 0 Cg EP
%%Page: 98 98
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(XFree86\256 serv)90 48 Q
(er 4.x Design \(DRAFT\))-.15 E(98)264.86 E/F1 8/Courier@0 SF(/*)129.2
94 Q 4.8(*I)134 104 S(nitialise the CRTC fields for the modes.)-4.8 E
(This driver expects)9.6 E 4.8(*v)134 114 S
(ertical values to be halved for interlaced modes.)-4.8 E(*/)134 124 Q
(xf86SetCrtcForModes\(pScrn, INTERLACE_HALVE_V\);)129.2 134 Q
(/* Set the current mode to the first in the list. */)129.2 154 Q
(pScrn->currentMode = pScrn->modes;)129.2 164 Q
(/* Print the list of modes being used. */)129.2 184 Q
(xf86PrintModes\(pScrn\);)129.2 194 Q(/* Set the DPI */)129.2 214 Q
(xf86SetDpi\(pScrn, 0, 0\);)129.2 224 Q(/* Load bpp-specific modules */)
129.2 244 Q(switch \(pScrn->bitsPerPixel\) {)129.2 254 Q(case 1:)129.2
264 Q(mod = "xf1bpp";)148.4 274 Q(break;)148.4 284 Q(case 4:)129.2 294 Q
(mod = "xf4bpp";)148.4 304 Q(break;)148.4 314 Q(case 8:)129.2 324 Q
(mod = "cfb";)148.4 334 Q(break;)148.4 344 Q(case 16:)129.2 354 Q
(mod = "cfb16";)148.4 364 Q(break;)148.4 374 Q(case 24:)129.2 384 Q
(mod = "cfb24";)148.4 394 Q(break;)148.4 404 Q(case 32:)129.2 414 Q
(mod = "cfb32";)148.4 424 Q(break;)148.4 434 Q(})129.2 444 Q
(if \(mod && !xf86LoadSubModule\(pScrn, mod\)\))129.2 454 Q
(ZZZFreeRec\(pScrn\);)148.4 464 Q(return FALSE;)148.4 474 Q
(/* Load XAA if needed */)129.2 494 Q
(if \(!pZzz->noAccel || pZzz->hwCursor\))129.2 504 Q
(if \(!xf86LoadSubModule\(pScrn, "xaa"\)\) {)148.4 514 Q
(ZZZFreeRec\(pScrn\);)167.6 524 Q(return FALSE;)167.6 534 Q(})148.4 544
Q(/* Done */)129.2 564 Q(return TRUE;)129.2 574 Q(})110 584 Q/F2 12
/Helvetica-Bold@0 SF 3.336(20.3.7 MapMem,)90 614 R(UnmapMem)3.336 E/F3
10/Palatino-Roman@0 SF 3.058(De\214ne functions to map and unmap the vi\
deo memory and any other memory apertur)90 632 R(es)-.18 E -.18(re)90
644 S(quir).18 E 2.5(ed. These)-.18 F(functions ar)2.5 E 2.5(en)-.18 G
(ot mandatory)-2.5 E 2.5(,b)-1.11 G
(ut it is often useful to have such functions.)-2.5 E 0 Cg EP
%%Page: 99 99
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(XFree86\256 serv)90 48 Q
(er 4.x Design \(DRAFT\))-.15 E(99)264.86 E/F1 8/Courier@0 SF
(static Bool)110 94 Q(ZZZMapMem\(ScrnInfoPtr pScrn\))110 104 Q({)110 114
Q(/* Call xf86MapPciMem\(\) to map each PCI memory area */)129.2 124 Q
(...)129.2 134 Q(return TRUE or FALSE;)129.2 144 Q(})110 154 Q
(static Bool)110 174 Q(ZZZUnmapMem\(ScrnInfoPtr pScrn\))110 184 Q({)110
194 Q(/* Call xf86UnMapVidMem\(\) to unmap each memory area */)129.2 204
Q(...)129.2 214 Q(return TRUE or FALSE;)129.2 224 Q(})110 234 Q/F2 12
/Helvetica-Bold@0 SF 3.336(20.3.8 Sa)90 264 R -3.216(ve ,)-.18 F
(Restore)3.336 E/F3 10/Palatino-Roman@0 SF .476
(De\214ne functions to save and r)90 282 R(estor)-.18 E 2.976(et)-.18 G
.476(he original video state.)-2.976 F .477(These functions ar)5.477 F
2.977(en)-.18 G .477(ot mandatory)-2.977 F(,)-1.11 E(but ar)90 294 Q 2.5
(eo)-.18 G(ften useful.)-2.5 E F1(static void)110 310 Q
(ZZZSave\(ScrnInfoPtr pScrn\))110 320 Q({)110 330 Q(/*)129.2 340 Q 4.8
(*S)134 350 S(ave state into per-screen data structures.)-4.8 E 4.8(*I)
134 360 S 4.8(fu)-4.8 G
(sing the vgahw module, vgaHWSave will typically be)-4.8 E 4.8(*c)134
370 S(alled here.)-4.8 E(*/)134 380 Q(...)129.2 390 Q(})110 400 Q
(static void)110 420 Q(ZZZRestore\(ScrnInfoPtr pScrn\))110 430 Q({)110
440 Q(/*)129.2 450 Q 4.8(*R)134 460 S
(estore state from per-screen data structures.)-4.8 E 4.8(*I)134 470 S
4.8(fu)-4.8 G(sing the vgahw module, vgaHWRestore will typically be)-4.8
E 4.8(*c)134 480 S(alled here.)-4.8 E(*/)134 490 Q(...)129.2 500 Q(})110
510 Q F2 3.336(20.3.9 ModeInit)90 540 R F3 .42
(De\214ne a function to initialise a new video mode.)90 558 R .42
(This function isn't mandatory)5.42 F 2.92(,b)-1.11 G .42
(ut is often use-)-2.92 F(ful.)90 570 Q F1(static Bool)110 586 Q
(ZZZModeInit\(ScrnInfoPtr pScrn, DisplayModePtr mode\))110 596 Q({)110
606 Q(/*)129.2 616 Q 4.8(*P)134 626 S(rogram a video mode.)-4.8 E
(If using the vgahw module,)9.6 E 4.8(*v)134 636 S
(gaHWInit and vgaRestore will typically be called here.)-4.8 E 4.8(*O)
134 646 S(nce up to the point where there can't be a failure)-4.8 E 4.8
(*s)134 656 S(et pScrn->vtSema to TRUE.)-4.8 E(*/)134 666 Q(...)129.2
676 Q(})110 686 Q 0 Cg EP
%%Page: 100 100
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(XFree86\256 serv)90 48 Q
(er 4.x Design \(DRAFT\))-.15 E(100)259.86 E/F1 12/Helvetica-Bold@0 SF
3.336(20.3.10 ScreenInit)90 98 R/F2 10/Palatino-Roman@0 SF 1.615
(De\214ne the)90 116 R/F3 10/Courier@0 SF(ScreenInit\(\))4.115 E F2
4.115(function. This)4.115 F 1.616
(is called at the start of each server generation, and)4.116 F .82
(should \214ll in as much of the)90 128 R F3(ScreenRec)3.32 E F2 .82
(as possible as well as any other data that is initialised)3.32 F .297
(once per generation.)90 140 R .297(It should initialise the framebuf)
5.297 F .298(fer layers it is using, and initialise the initial)-.18 F
(video mode.)90 152 Q(This function is mandatory.)90 170 Q .046
(NOTE: The)90 188 R F3(ScreenRec)2.546 E F2(\()2.546 E F3(pScreen)A F2
2.546(\)i)C 2.546(sp)-2.546 G .046(assed to this driver)-2.546 F 2.546
(,b)-.74 G .046(ut it and the)-2.546 F F3(ScrnInfoRecs)2.546 E F2(ar)
2.546 E 2.546(en)-.18 G(ot)-2.546 E .274(yet hooked into each other.)90
200 R .274(This means that in this function, and functions it calls, on\
e cannot be)5.274 F(found fr)90 212 Q(om the other.)-.18 E/F4 8
/Courier@0 SF(static Bool)110 228 Q(ZZZScreenInit\(int scrnIndex, Scree\
nPtr pScreen, int argc, char **argv\))110 238 Q({)110 248 Q
(/* Get the ScrnInfoRec */)129.2 258 Q
(pScrn = xf86Screens[pScreen->myNum];)129.2 268 Q(/*)129.2 288 Q 4.8(*I)
134 298 S 4.8(fu)-4.8 G
(sing the vgahw module, its data structures and related)-4.8 E 4.8(*t)
134 308 S(hings are typically initialised/mapped here.)-4.8 E(*/)134 318
Q(/* Save the current video state */)129.2 338 Q(ZZZSave\(pScrn\);)129.2
348 Q(/* Initialise the first mode */)129.2 368 Q
(ZZZModeInit\(pScrn, pScrn->currentMode\);)129.2 378 Q
(/* Set the viewport if supported */)129.2 398 Q
(ZZZAdjustFrame\(scrnIndex, pScrn->frameX0, pScrn->frameY0, 0\);)129.2
418 Q(/*)129.2 438 Q 4.8(*S)134 448 S
(etup the screen's visuals, and initialise the framebuffer)-4.8 E 4.8
(*c)134 458 S(ode.)-4.8 E(*/)134 468 Q(/* Reset the visual list */)129.2
488 Q(miClearVisualTypes\(\);)129.2 498 Q(/*)129.2 518 Q 4.8(*S)134 528
S(etup the visuals supported.)-4.8 E(This driver only supports)9.6 E 4.8
(*T)134 538 S(rueColor for bpp > 8, so the default set of visuals isn't)
-4.8 E 4.8(*a)134 548 S 4.8(cceptable. To)-4.8 F
(deal with this, call miSetVisualTypes with)4.8 E 4.8(*t)134 558 S
(he appropriate visual mask.)-4.8 E(*/)134 568 Q
(if \(pScrn->bitsPerPixel > 8\) {)129.2 588 Q
(if \(!miSetVisualTypes\(pScrn->depth, TrueColorMask,)148.4 598 Q
(pScrn->rgbBits, pScrn->defaultVisual\)\))254 608 Q(return FALSE;)167.6
618 Q 4.8(}e)129.2 628 S(lse {)-4.8 E
(if \(!miSetVisualTypes\(pScrn->depth,)148.4 638 Q
(miGetDefaultVisualMask\(pScrn->depth\),)254 648 Q
(pScrn->rgbBits, pScrn->defaultVisual\)\))254 658 Q(return FALSE;)167.6
668 Q(})129.2 678 Q(/*)129.2 698 Q 4.8(*I)134 708 S
(nitialise the framebuffer.)-4.8 E(*/)134 718 Q
(switch \(pScrn->bitsPerPixel\) {)129.2 738 Q 0 Cg EP
%%Page: 101 101
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(XFree86\256 serv)90 48 Q
(er 4.x Design \(DRAFT\))-.15 E(101)259.86 E/F1 8/Courier@0 SF(case 1:)
129.2 94 Q(ret = xf1bppScreenInit\(pScreen, FbBase,)148.4 104 Q
(pScrn->virtualX, pScrn->virtualY,)258.8 114 Q
(pScrn->xDpi, pScrn->yDpi,)258.8 124 Q(pScrn->displayWidth\);)258.8 134
Q(break;)148.4 144 Q(case 4:)129.2 154 Q
(ret = xf4bppScreenInit\(pScreen, FbBase,)148.4 164 Q
(pScrn->virtualX, pScrn->virtualY,)258.8 174 Q
(pScrn->xDpi, pScrn->yDpi,)258.8 184 Q(pScrn->displayWidth\);)258.8 194
Q(break;)148.4 204 Q(case 8:)129.2 214 Q
(ret = cfbScreenInit\(pScreen, FbBase,)148.4 224 Q
(pScrn->virtualX, pScrn->virtualY,)244.4 234 Q
(pScrn->xDpi, pScrn->yDpi,)244.4 244 Q(pScrn->displayWidth\);)244.4 254
Q(break;)148.4 264 Q(case 16:)129.2 274 Q
(ret = cfb16ScreenInit\(pScreen, FbBase,)148.4 284 Q
(pScrn->virtualX, pScrn->virtualY,)254 294 Q(pScrn->xDpi, pScrn->yDpi,)
254 304 Q(pScrn->displayWidth\);)254 314 Q(break;)148.4 324 Q(case 24:)
129.2 334 Q(ret = cfb24ScreenInit\(pScreen, FbBase,)148.4 344 Q
(pScrn->virtualX, pScrn->virtualY,)254 354 Q(pScrn->xDpi, pScrn->yDpi,)
254 364 Q(pScrn->displayWidth\);)254 374 Q(break;)148.4 384 Q(case 32:)
129.2 394 Q(ret = cfb32ScreenInit\(pScreen, FbBase,)148.4 404 Q
(pScrn->virtualX, pScrn->virtualY,)254 414 Q(pScrn->xDpi, pScrn->yDpi,)
254 424 Q(pScrn->displayWidth\);)254 434 Q(break;)148.4 444 Q(default:)
129.2 454 Q(print a message about an internal error;)148.4 464 Q
(ret = FALSE;)148.4 474 Q(break;)148.4 484 Q(})129.2 494 Q(if \(!ret\))
129.2 514 Q(return FALSE;)148.4 524 Q
(/* Override the default mask/offset settings */)129.2 544 Q
(if \(pScrn->bitsPerPixel > 8\) {)129.2 554 Q
(for \(i = 0, visual = pScreen->visuals;)148.4 564 Q 4.8(i<p)172.4 574 S
(Screen->numVisuals; i++, visual++\) {)-4.8 E
(if \(\(visual->class | DynamicClass\) == DirectColor\) {)167.6 584 Q
(visual->offsetRed = pScrn->offset.red;)186.8 594 Q
(visual->offsetGreen = pScrn->offset.green;)186.8 604 Q
(visual->offsetBlue = pScrn->offset.blue;)186.8 614 Q
(visual->redMask = pScrn->mask.red;)186.8 624 Q
(visual->greenMask = pScrn->mask.green;)186.8 634 Q
(visual->blueMask = pScrn->mask.blue;)186.8 644 Q(})167.6 654 Q(})148.4
664 Q(})129.2 674 Q(/*)129.2 694 Q 4.8(*I)134 704 S 4.8(fb)-4.8 G
(anking is needed, initialise an miBankInfoRec \(defined in)-4.8 E 4.8
(*")134 714 S(mibank.h"\), and call miInitializeBanking\(\).)-4.8 E(*/)
134 724 Q
(if \(!miInitializeBanking\(pScreen, pScrn->virtualX, pScrn->virtualY,)
129.2 734 Q 0 Cg EP
%%Page: 102 102
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(XFree86\256 serv)90 48 Q
(er 4.x Design \(DRAFT\))-.15 E(102)259.86 E/F1 8/Courier@0 SF
(pScrn->displayWidth, pBankInfo\)\))287.6 94 Q(return FALSE;)148.4 104 Q
(/*)129.2 124 Q 4.8(*I)134 134 S 4.8(fb)-4.8 G
(acking store is to be supported \(as is usually the case\),)-4.8 E 4.8
(*i)134 144 S(nitialise it.)-4.8 E(*/)134 154 Q
(miInitializeBackingStore\(pScreen\);)129.2 164 Q(/*)129.2 184 Q 4.8(*S)
134 194 S(et initial black & white colourmap indices.)-4.8 E(*/)134 204
Q(xf86SetBlackWhitePixels\(pScreen\);)129.2 214 Q(/*)129.2 234 Q 4.8(*I)
134 244 S(nstall colourmap functions.)-4.8 E(If using the vgahw module,)
9.6 E 4.8(*v)134 254 S(gaHandleColormaps would usually be called here.)
-4.8 E(*/)134 264 Q(...)129.2 284 Q(/*)129.2 304 Q 4.8(*I)134 314 S
(nitialise cursor functions.)-4.8 E(This example is for the mi)9.6 E 4.8
(*s)134 324 S(oftware cursor.)-4.8 E(*/)134 334 Q
(miDCInitialize\(pScreen, xf86GetPointerScreenFuncs\(\)\);)129.2 344 Q
(/* Initialise the default colourmap */)129.2 364 Q
(switch \(pScrn->depth\) {)129.2 374 Q(case 1:)129.2 384 Q
(if \(!xf1bppCreateDefColormap\(pScreen\)\))148.4 394 Q(return FALSE;)
167.6 404 Q(break;)148.4 414 Q(case 4:)129.2 424 Q
(if \(!xf4bppCreateDefColormap\(pScreen\)\))148.4 434 Q(return FALSE;)
167.6 444 Q(break;)148.4 454 Q(default:)129.2 464 Q
(if \(!cfbCreateDefColormap\(pScreen\)\))148.4 474 Q(return FALSE;)167.6
484 Q(break;)148.4 494 Q(})129.2 504 Q(/*)129.2 524 Q 4.8(*W)134 534 S
(rap the CloseScreen vector and set SaveScreen.)-4.8 E(*/)134 544 Q
(ZZZPTR\(pScrn\)->CloseScreen = pScreen->CloseScreen;)129.2 554 Q
(pScreen->CloseScreen = ZZZCloseScreen;)129.2 564 Q
(pScreen->SaveScreen = ZZZSaveScreen;)129.2 574 Q
(/* Report any unused options \(only for the first generation\) */)129.2
594 Q(if \(serverGeneration == 1\) {)129.2 604 Q
(xf86ShowUnusedOptions\(pScrn->scrnIndex, pScrn->options\);)148.4 614 Q
(})129.2 624 Q(/* Done */)129.2 644 Q(return TRUE;)129.2 654 Q(})110 664
Q/F2 12/Helvetica-Bold@0 SF 3.336(20.3.11 Switc)90 694 R(hMode)-.12 E/F3
10/Palatino-Roman@0 SF(De\214ne the)90 712 Q/F4 10/Courier@0 SF
(SwitchMode\(\))2.5 E F3
(function if mode switching is supported by the driver.)2.5 E 0 Cg EP
%%Page: 103 103
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(XFree86\256 serv)90 48 Q
(er 4.x Design \(DRAFT\))-.15 E(103)259.86 E/F1 8/Courier@0 SF
(static Bool)110 94 Q
(ZZZSwitchMode\(int scrnIndex, DisplayModePtr mode, int flags\))110 104
Q({)110 114 Q(return ZZZModeInit\(xf86Screens[scrnIndex], mode\);)129.2
124 Q(})110 134 Q/F2 12/Helvetica-Bold@0 SF 3.336(20.3.12 AdjustFrame)90
164 R/F3 10/Palatino-Roman@0 SF(De\214ne the)90 182 Q/F4 10/Courier@0 SF
(AdjustFrame\(\))2.5 E F3(function if the driver supports this.)2.5 E F1
(static void)110 198 Q
(ZZZAdjustFrame\(int scrnIndex, int x, int y, int flags\))110 208 Q({)
110 218 Q(/* Adjust the viewport */)129.2 228 Q(})110 238 Q F2 3.336
(20.3.13 EnterVT)90 268 R 3.336(,L)-.96 G(ea)-3.336 E(veVT)-.18 E F3
(De\214ne the)90 286 Q F4(EnterVT\(\))2.5 E F3(and)2.5 E F4(LeaveVT\(\))
2.5 E F3(functions.)2.5 E(These functions ar)90 304 Q 2.5(em)-.18 G
(andatory.)-2.5 E F1(static Bool)110 320 Q
(ZZZEnterVT\(int scrnIndex, int flags\))110 330 Q({)110 340 Q
(ScrnInfoPtr pScrn = xf86Screens[scrnIndex];)129.2 350 Q
(return ZZZModeInit\(pScrn, pScrn->currentMode\);)129.2 360 Q(})110 370
Q(static void)110 390 Q(ZZZLeaveVT\(int scrnIndex, int flags\))110 400 Q
({)110 410 Q(ScrnInfoPtr pScrn = xf86Screens[scrnIndex];)129.2 420 Q
(ZZZRestore\(pScrn\);)129.2 430 Q(})110 440 Q F2 3.336
(20.3.14 CloseScreen)90 470 R F3(De\214ne the)90 488 Q F4
(CloseScreen\(\))2.5 E F3(function:)2.5 E 1.551
(This function is mandatory.)90 506 R 1.551(Note that it unwraps the pr)
6.551 F 1.551(eviously wrapped)-.18 F F4(pScreen->Clos-)4.05 E(eScreen)
90 518 Q F3 2.5(,a)C(nd \214nishes by calling it.)-2.5 E F1(static Bool)
110 534 Q(ZZZCloseScreen\(int scrnIndex, ScreenPtr pScreen\))110 544 Q
({)110 554 Q(ScrnInfoPtr pScrn = xf86Screens[scrnIndex];)129.2 564 Q
(if \(pScrn->vtSema\) {)129.2 574 Q(ZZZRestore\(pScrn\);)148.4 584 Q
(ZZZUnmapMem\(pScrn\);)148.4 594 Q(})129.2 604 Q(pScrn->vtSema = FALSE;)
129.2 614 Q(pScreen->CloseScreen = ZZZPTR\(pScrn\)->CloseScreen;)129.2
624 Q(return \(*pScreen->CloseScreen\)\(scrnIndex, pScreen\);)129.2 634
Q(})110 644 Q F2 3.336(20.3.15 Sa)90 674 R(veScreen)-.18 E F3 .112
(De\214ne the)90 692 R F4(SaveScreen\(\))2.612 E F3 .112
(function \(the scr)2.612 F .112(een blanking function\).)-.18 F .113
(When using the vgahw mod-)5.113 F(ule, this will typically be:)90 704 Q
0 Cg EP
%%Page: 104 104
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(XFree86\256 serv)90 48 Q
(er 4.x Design \(DRAFT\))-.15 E(104)259.86 E/F1 8/Courier@0 SF
(static Bool)110 94 Q(ZZZSaveScreen\(ScreenPtr pScreen, int mode\))110
104 Q({)110 114 Q(return vgaHWSaveScreen\(pScreen, mode\);)129.2 124 Q
(})110 134 Q/F2 10/Palatino-Roman@0 SF .409(This function is mandatory.)
90 162 R(Befor)5.409 E 2.908(em)-.18 G .408(odifying any har)-2.908 F
(dwar)-.18 E 2.908(er)-.18 G .408(egister dir)-3.088 F .408
(ectly this function needs)-.18 F 4.806(to make sur)90 174 R 7.306(et)
-.18 G 4.806(hat the Xserver is active by checking if)-7.306 F/F3 10
/Courier@0 SF(pScrn)7.306 E F2 4.806(is non-NULL and for)7.306 F F3
(pScrn->vtSema == TRUE)90 186 Q F2(.)A/F4 12/Helvetica-Bold@0 SF 3.336
(20.3.16 FreeScreen)90 206 R F2 .245(De\214ne the)90 224 R F3
(FreeScreen\(\))2.745 E F2 2.745(function. This)2.745 F .244
(function is optional.)2.744 F .244(It should be de\214ned if the)5.244
F F3(Scrn-)2.744 E -2.486(InfoRec driverPrivate)90 236 R F2 1.015
(\214eld is used so that it can be fr)3.514 F 1.015(eed when a scr)-.18
F 1.015(een is deleted by the)-.18 F .393(common layer for r)90 248 R
.393(easons possibly beyond the driver's contr)-.18 F 2.893(ol. This)
-.18 F .392(function is not used in dur)2.893 F(-)-.18 E .238
(ing normal \(err)90 260 R .238(or fr)-.18 F .238(ee\) operation.)-.18 F
.238(The per)5.238 F .239(-generation data is fr)-.18 F .239(eed by the)
-.18 F F3(CloseScreen\(\))2.739 E F2(func-)2.739 E(tion.)90 272 Q F1
(static void)110 288 Q(ZZZFreeScreen\(int scrnIndex, int flags\))110 298
Q({)110 308 Q(/*)129.2 318 Q 4.8(*I)134 328 S 4.8(ft)-4.8 G
(he vgahw module is used vgaHWFreeHWRec\(\) would be called)-4.8 E 4.8
(*h)134 338 S(ere.)-4.8 E(*/)134 348 Q
(ZZZFreeRec\(xf86Screens[scrnIndex]\);)129.2 358 Q(})110 368 Q 0 Cg EP
%%Page: 105 105
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(XFree86\256 serv)90 48 Q
(er 4.x Design \(DRAFT\))-.15 E(105)259.86 E 0 Cg EP
%%Page: 106 106
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Palatino-Roman@0 SF(CONTENTS)278.405 96 Q(1.)90 144 Q(Pr)107.5
144 Q(eface)-.18 E 7.5(................................................\
.......................................................................\
...................... 1)154.5 144 R(2.)90 162 Q(The XF86Con\214g File)
107.5 162 Q 7.5(.......................................................\
............................................................... 1)212
162 R(2.1)107.5 174 Q(Device section)130 174 Q 7.5(....................\
.......................................................................\
............................. 2)207 174 R(2.2)107.5 186 Q(Scr)130 186 Q
(een section)-.18 E 7.5(...............................................\
.......................................................................\
.. 2)207 186 R(2.3)107.5 198 Q(InputDevice section)130 198 Q 7.5(......\
.......................................................................\
................................. 2)232 198 R(2.4)107.5 210 Q
(ServerLayout section)130 210 Q 7.5(...................................\
.......................................................................\
.. 2)237 210 R(2.5)107.5 222 Q(Options)130 222 Q 7.5(..................\
.......................................................................\
.......................................... 3)179.5 222 R(3.)90 240 Q
(Driver Interface)107.5 240 Q 7.5(.....................................\
.......................................................................\
.................. 4)192 240 R(4.)90 258 Q(Resour)107.5 258 Q
(ce Access Contr)-.18 E(ol Intr)-.18 E(oduction)-.18 E 7.5(............\
.......................................................................\
.... 5)289.5 258 R(4.1)107.5 270 Q -.92(Te)130 270 S
(rms and De\214nitions).92 E 7.5(......................................\
.................................................................... 5)
242 270 R(5.)90 288 Q(Contr)107.5 288 Q
(ol Flow in the Server and Mandatory Driver Functions)-.18 E 7.5
(................................................ 6)387 288 R(5.1)107.5
300 Q(Parse the XF86Con\214g \214le)130 300 Q 7.5(.....................\
.......................................................................\
......... 6)254.5 300 R(5.2)107.5 312 Q(Initial pr)130 312 Q
(ocessing of parsed information and command line options)-.18 E 7.5
(........................... 6)439.5 312 R(5.3)107.5 324 Q
(Enable port I/O access)130 324 Q 7.5(.................................\
.......................................................................\
. 6)244.5 324 R(5.4)107.5 336 Q(General bus pr)130 336 Q(obe)-.18 E 7.5
(......................................................................\
........................................... 6)224.5 336 R(5.5)107.5 348
Q(Load initial set of modules)130 348 Q 7.5(...........................\
.......................................................................\
 7)262 348 R(5.6)107.5 360 Q(Register V)130 360 Q
(ideo and Input Drivers)-.55 E 7.5(....................................\
................................................... 7)289.5 360 R(5.7)
107.5 372 Q(Initialise Access Contr)130 372 Q(ol)-.18 E 7.5(...........\
.......................................................................\
..................... 8)249.5 372 R(5.8)107.5 384 Q -.55(Vi)130 384 S
(deo Driver Pr).55 E(obe)-.18 E 7.5(...................................\
.......................................................................\
..... 8)229.5 384 R(5.9)107.5 396 Q(Matching Scr)130 396 Q(eens)-.18 E
7.5(...................................................................\
............................................. 10)222 396 R(5.10)107.5
408 Q(Allocate non-con\215icting r)130 408 Q(esour)-.18 E(ces)-.18 E 7.5
(......................................................................\
............. 10)294.5 408 R(5.1)107.5 420 Q(1)-.55 E(Sort the Scr)130
420 Q(eens and pr)-.18 E(e-check Monitor Information)-.18 E 7.5
(.................................................... 10)372 420 R(5.12)
107.5 432 Q(Pr)130 432 Q(eInit)-.18 E 7.5(.............................\
.......................................................................\
................................ 1)172.55 432 R(1)-.55 E(5.13)107.5 444
Q(Cleaning up Unused Drivers)130 444 Q 7.5(............................\
................................................................ 13)272
444 R(5.14)107.5 456 Q(Consistency Checks)130 456 Q 7.5(...............\
.......................................................................\
...................... 13)232 456 R(5.15)107.5 468 Q(Check if Resour)130
468 Q(ce Contr)-.18 E(ol is Needed)-.18 E 7.5(.........................\
..................................................... 13)307 468 R(5.16)
107.5 480 Q(AddScr)130 480 Q(een \(Scr)-.18 E(eenInit\))-.18 E 7.5(....\
.......................................................................\
........................... 13)247 480 R(5.17)107.5 492 Q
(Finalising RAC Initialisation)130 492 Q 7.5(..........................\
................................................................... 14)
269.5 492 R(5.18)107.5 504 Q(Finishing InitOutput\(\))130 504 Q 7.5(...\
.......................................................................\
.............................. 15)242 504 R(5.19)107.5 516 Q
(Mode Switching)130 516 Q 7.5(.........................................\
.......................................................................\
.. 15)217 516 R(5.20)107.5 528 Q(Changing V)130 528 Q(iewport)-.55 E 7.5
(......................................................................\
...................................... 15)232 528 R(5.21)107.5 540 Q
(VT Switching)130 540 Q 7.5(...........................................\
.......................................................................\
..... 15)204.5 540 R(5.22)107.5 552 Q(End of server generation)130 552 Q
7.5(...................................................................\
................................. 16)252 552 R(6.)90 570 Q
(Optional Driver Functions)107.5 570 Q 7.5(............................\
.......................................................................\
....... 17)237 570 R(6.1)107.5 582 Q(Mode V)130 582 Q(alidation)-.92 E
7.5(...................................................................\
............................................... 17)217 582 R(6.2)107.5
594 Q(Fr)130 594 Q(ee scr)-.18 E(een data)-.18 E 7.5(..................\
.......................................................................\
.......................... 17)214.5 594 R(7.)90 612 Q
(Recommended driver functions)107.5 612 Q 7.5(.........................\
.......................................................................\
 18)262 612 R(7.1)107.5 624 Q(Save)130 624 Q 7.5(......................\
.......................................................................\
.......................................... 18)164.5 624 R(7.2)107.5 636
Q(Restor)130 636 Q(e)-.18 E 7.5(.......................................\
.......................................................................\
.................... 18)177 636 R(7.3)107.5 648 Q(Initialise Mode)130
648 Q 7.5(.............................................................\
........................................................ 18)209.5 648 R
(8.)90 666 Q(Data and Data Str)107.5 666 Q(uctur)-.08 E(es)-.18 E 7.5(.\
.......................................................................\
.................................... 18)232 666 R(8.1)107.5 678 Q
(Command line data)130 678 Q 7.5(......................................\
...................................................................... \
18)232 678 R(8.2)107.5 690 Q(Data handling)130 690 Q 7.5(..............\
.......................................................................\
................................. 19)207 690 R(8.3)107.5 702 Q
(Accessing global data)130 702 Q 7.5(..................................\
.......................................................................\
 20)239.5 702 R(8.4)107.5 714 Q(Allocating private data)130 714 Q 7.5(.\
.......................................................................\
............................... 20)244.5 714 R/F1 10/Times-Roman@0 SF(i)
304.61 768 Q 0 Cg EP
%%Page: 107 107
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Palatino-Roman@0 SF(9.)90 96 Q(Keeping T)107.5 96 Q
(rack of Bus Resour)-.9 E(ces)-.18 E 7.5(..............................\
.................................................................. 22)
262 96 R(9.1)107.5 108 Q(Theory of Operation)130 108 Q 7.5(............\
.......................................................................\
........................ 22)234.5 108 R(9.2)107.5 120 Q(Resour)130 120 Q
(ce T)-.18 E(ypes)-.9 E 7.5(...........................................\
.......................................................................\
.. 23)212 120 R(9.3)107.5 132 Q -.92(Av)130 132 S(ailable Functions).92
E 7.5(.................................................................\
........................................... 24)232 132 R(10.)90 150 Q
(Con\214g \214le `)107.5 150 Q(`Option'' entries)-.37 E 7.5(...........\
.......................................................................\
..................... 33)244.5 150 R -.55(11)90 168 S(.).55 E
(Modules, Drivers, Include Files and Interface Issues)107.5 168 Q 7.5
(............................................................. 37)349.5
168 R -.55(11)107.5 180 S(.1).55 E(Include \214les)130 180 Q 7.5(......\
.......................................................................\
............................................. 37)197 180 R(12.)90 198 Q
(Of)107.5 198 Q(fscr)-.18 E(een Memory Manager)-.18 E 7.5(.............\
.......................................................................\
.................. 38)247 198 R(13.)90 216 Q(Colormap Handling)107.5 216
Q 7.5(.................................................................\
................................................... 41)212 216 R(14.)90
234 Q(DPMS Extension)107.5 234 Q 7.5(..................................\
.......................................................................\
................. 42)197 234 R(15.)90 252 Q(DGA Extension)107.5 252 Q
7.5(...................................................................\
.......................................................... 43)189.5 252
R(16.)90 270 Q(The XFr)107.5 270 Q(ee86 X V)-.18 E
(ideo Extension \(Xv\) Device Dependent Layer)-.55 E 7.5
(........................................... 48)394.5 270 R(17.)90 288 Q
(The Loader)107.5 288 Q 7.5(...........................................\
.......................................................................\
.................. 56)172 288 R(17.1)107.5 300 Q(Loader Overview)130 300
Q 7.5(.................................................................\
............................................... 56)222 300 R(17.2)107.5
312 Q(Semi-private Loader Interface)130 312 Q 7.5(.....................\
...................................................................... \
57)274.5 312 R(17.3)107.5 324 Q(Module Requir)130 324 Q(ements)-.18 E
7.5(...................................................................\
..................................... 59)242 324 R(17.4)107.5 336 Q
(Public Loader Interface)130 336 Q 7.5(................................\
...................................................................... \
63)247 336 R(17.5)107.5 348 Q(Special Registration Functions)130 348 Q
7.5(...................................................................\
....................... 65)277 348 R(18.)90 366 Q(Helper Functions)107.5
366 Q 7.5(.............................................................\
............................................................. 66)197 366
R(18.1)107.5 378 Q(Functions for printing messages)130 378 Q 7.5(......\
.......................................................................\
.......... 66)284.5 378 R(18.2)107.5 390 Q
(Functions for setting values based on command line and con\214g \214le)
130 390 Q 7.5(......................... 68)439.5 390 R(18.3)107.5 402 Q
(Primary Mode functions)130 402 Q 7.5(.................................\
................................................................... 72)
252 402 R(18.4)107.5 414 Q(Secondary Mode functions)130 414 Q 7.5(.....\
.......................................................................\
.................... 77)262 414 R(18.5)107.5 426 Q
(Functions for handling strings and tokens)130 426 Q 7.5(..............\
....................................................... 79)329.5 426 R
(18.6)107.5 438 Q
(Functions for \214nding which con\214g \214le entries to use)130 438 Q
7.5(................................................... 79)374.5 438 R
(18.7)107.5 450 Q(Pr)130 450 Q(obing discr)-.18 E
(ete clocks on older har)-.18 E(dwar)-.18 E(e)-.18 E 7.5(..............\
....................................................... 79)329.5 450 R
(18.8)107.5 462 Q(Other helper functions)130 462 Q 7.5(................\
.......................................................................\
................ 80)244.5 462 R(19.)90 480 Q(The vgahw module)107.5 480
Q 7.5(.................................................................\
..................................................... 80)207 480 R(19.1)
107.5 492 Q(Data Str)130 492 Q(uctur)-.08 E(es)-.18 E 7.5(.............\
.......................................................................\
................................ 80)212 492 R(19.2)107.5 504 Q
(General vgahw Functions)130 504 Q 7.5(................................\
.................................................................. 81)
257 504 R(19.3)107.5 516 Q(VGA Colormap Functions)130 516 Q 7.5(.......\
.......................................................................\
................... 85)259.5 516 R(19.4)107.5 528 Q
(VGA Register Access Functions)130 528 Q 7.5(..........................\
............................................................. 85)284.5
528 R(20.)90 546 Q(Some notes about writing a driver)107.5 546 Q 7.5(..\
.......................................................................\
................... 87)272 546 R(20.1)107.5 558 Q(Include \214les)130
558 Q 7.5(.............................................................\
............................................................. 87)197 558
R(20.2)107.5 570 Q(Data str)130 570 Q(uctur)-.08 E
(es and initialisation)-.18 E 7.5(.....................................\
................................................ 89)289.5 570 R(20.3)
107.5 582 Q(Functions)130 582 Q 7.5(...................................\
.......................................................................\
.................... 91)187 582 R/F1 8/Courier@0 SF($XFree86: xc/progra\
ms/Xserver/hw/xfree86/doc/sgml/DESIGN.sgml,v 1.62 2006/04/18 17:13:22 d\
awes Exp $)150 598 Q/F2 10/Times-Roman@0 SF(ii)303.22 768 Q 0 Cg EP
%%Trailer
end
%%EOF
