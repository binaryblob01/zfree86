%!PS-Adobe-3.0
%%Creator: groff version 1.19.2
%%CreationDate: Mon Dec 29 01:21:38 2008
%%DocumentNeededResources: font Times-Bold
%%+ font Times-Roman
%%+ font Times-Italic
%%+ font Courier
%%DocumentSuppliedResources: procset grops 1.19 2
%%Pages: 88
%%PageOrder: Ascend
%%DocumentMedia: Default 612 792 0 () ()
%%Orientation: Portrait
%%EndComments
%%BeginDefaults
%%PageMedia: Default
%%EndDefaults
%%BeginProlog
%%BeginResource: procset grops 1.19 2
%!PS-Adobe-3.0 Resource-ProcSet
/setpacking where{
pop
currentpacking
true setpacking
}if
/grops 120 dict dup begin
/SC 32 def
/A/show load def
/B{0 SC 3 -1 roll widthshow}bind def
/C{0 exch ashow}bind def
/D{0 exch 0 SC 5 2 roll awidthshow}bind def
/E{0 rmoveto show}bind def
/F{0 rmoveto 0 SC 3 -1 roll widthshow}bind def
/G{0 rmoveto 0 exch ashow}bind def
/H{0 rmoveto 0 exch 0 SC 5 2 roll awidthshow}bind def
/I{0 exch rmoveto show}bind def
/J{0 exch rmoveto 0 SC 3 -1 roll widthshow}bind def
/K{0 exch rmoveto 0 exch ashow}bind def
/L{0 exch rmoveto 0 exch 0 SC 5 2 roll awidthshow}bind def
/M{rmoveto show}bind def
/N{rmoveto 0 SC 3 -1 roll widthshow}bind def
/O{rmoveto 0 exch ashow}bind def
/P{rmoveto 0 exch 0 SC 5 2 roll awidthshow}bind def
/Q{moveto show}bind def
/R{moveto 0 SC 3 -1 roll widthshow}bind def
/S{moveto 0 exch ashow}bind def
/T{moveto 0 exch 0 SC 5 2 roll awidthshow}bind def
/SF{
findfont exch
[exch dup 0 exch 0 exch neg 0 0]makefont
dup setfont
[exch/setfont cvx]cvx bind def
}bind def
/MF{
findfont
[5 2 roll
0 3 1 roll
neg 0 0]makefont
dup setfont
[exch/setfont cvx]cvx bind def
}bind def
/level0 0 def
/RES 0 def
/PL 0 def
/LS 0 def
/MANUAL{
statusdict begin/manualfeed true store end
}bind def
/PLG{
gsave newpath clippath pathbbox grestore
exch pop add exch pop
}bind def
/BP{
/level0 save def
1 setlinecap
1 setlinejoin
72 RES div dup scale
LS{
90 rotate
}{
0 PL translate
}ifelse
1 -1 scale
}bind def
/EP{
level0 restore
showpage
}def
/DA{
newpath arcn stroke
}bind def
/SN{
transform
.25 sub exch .25 sub exch
round .25 add exch round .25 add exch
itransform
}bind def
/DL{
SN
moveto
SN
lineto stroke
}bind def
/DC{
newpath 0 360 arc closepath
}bind def
/TM matrix def
/DE{
TM currentmatrix pop
translate scale newpath 0 0 .5 0 360 arc closepath
TM setmatrix
}bind def
/RC/rcurveto load def
/RL/rlineto load def
/ST/stroke load def
/MT/moveto load def
/CL/closepath load def
/Fr{
setrgbcolor fill
}bind def
/setcmykcolor where{
pop
/Fk{
setcmykcolor fill
}bind def
}if
/Fg{
setgray fill
}bind def
/FL/fill load def
/LW/setlinewidth load def
/Cr/setrgbcolor load def
/setcmykcolor where{
pop
/Ck/setcmykcolor load def
}if
/Cg/setgray load def
/RE{
findfont
dup maxlength 1 index/FontName known not{1 add}if dict begin
{
1 index/FID ne{def}{pop pop}ifelse
}forall
/Encoding exch def
dup/FontName exch def
currentdict end definefont pop
}bind def
/DEFS 0 def
/EBEGIN{
moveto
DEFS begin
}bind def
/EEND/end load def
/CNT 0 def
/level1 0 def
/PBEGIN{
/level1 save def
translate
div 3 1 roll div exch scale
neg exch neg exch translate
0 setgray
0 setlinecap
1 setlinewidth
0 setlinejoin
10 setmiterlimit
[]0 setdash
/setstrokeadjust where{
pop
false setstrokeadjust
}if
/setoverprint where{
pop
false setoverprint
}if
newpath
/CNT countdictstack def
userdict begin
/showpage{}def
/setpagedevice{}def
}bind def
/PEND{
countdictstack CNT sub{end}repeat
level1 restore
}bind def
end def
/setpacking where{
pop
setpacking
}if
%%EndResource
%%EndProlog
%%BeginSetup
%%BeginFeature: *PageSize Default
<< /PageSize [ 612 792 ] /ImagingBBox null >> setpagedevice
%%EndFeature
%%IncludeResource: font Times-Bold
%%IncludeResource: font Times-Roman
%%IncludeResource: font Times-Italic
%%IncludeResource: font Courier
grops begin/DEFS 1 dict def DEFS begin/u{.001 mul}bind def end/RES 72
def/PL 792 def/LS false def/ENC0[/asciicircum/asciitilde/Scaron/Zcaron
/scaron/zcaron/Ydieresis/trademark/quotesingle/Euro/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/space/exclam/quotedbl/numbersign/dollar/percent
/ampersand/quoteright/parenleft/parenright/asterisk/plus/comma/hyphen
/period/slash/zero/one/two/three/four/five/six/seven/eight/nine/colon
/semicolon/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J/K/L/M/N/O
/P/Q/R/S/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright/circumflex
/underscore/quoteleft/a/b/c/d/e/f/g/h/i/j/k/l/m/n/o/p/q/r/s/t/u/v/w/x/y
/z/braceleft/bar/braceright/tilde/.notdef/quotesinglbase/guillemotleft
/guillemotright/bullet/florin/fraction/perthousand/dagger/daggerdbl
/endash/emdash/ff/fi/fl/ffi/ffl/dotlessi/dotlessj/grave/hungarumlaut
/dotaccent/breve/caron/ring/ogonek/quotedblleft/quotedblright/oe/lslash
/quotedblbase/OE/Lslash/.notdef/exclamdown/cent/sterling/currency/yen
/brokenbar/section/dieresis/copyright/ordfeminine/guilsinglleft
/logicalnot/minus/registered/macron/degree/plusminus/twosuperior
/threesuperior/acute/mu/paragraph/periodcentered/cedilla/onesuperior
/ordmasculine/guilsinglright/onequarter/onehalf/threequarters
/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE
/Ccedilla/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex
/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis
/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn
/germandbls/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash
/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]def
/Courier@0 ENC0/Courier RE/Times-Italic@0 ENC0/Times-Italic RE
/Times-Roman@0 ENC0/Times-Roman RE/Times-Bold@0 ENC0/Times-Bold RE
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
BP
%%EndPageSetup
/F0 20/Times-Bold@0 SF 5(XI)142.59 216 S(nput De)-5 E
(vice Extension Library)-.3 E/F1 12/Times-Bold@0 SF 3(XC)225.996 252 S
(onsortium Standard)-3 E 3(XV)223.944 276 S(ersion 11, Release 6.4)-4.2
E/F2 15/Times-Bold@0 SF(Mark P)171.427 480 Q 26.25(atrick Ardent)-.15 F
(Computer)3.75 E(Geor)175.042 504 Q(ge Sachs)-.15 E(Hewlett-P)30 E
(ackard)-.15 E 0 Cg EP
%%Page: 2 2
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Roman@0 SF(Cop)72 220.9 Q
(yright \251 1989, 1990, 1991 by He)-.11 E(wlett-P)-.275 E
(ackard Compan)-.165 E 1.43 -.715(y, A)-.165 H(rdent Computer).715 E(.)
-.605 E(Permission to use, cop)72 237.8 Q 1.43 -.715(y, m)-.11 H(odify)
.715 E 2.75(,a)-.715 G(nd distrib)-2.75 E(ute this documentation for an)
-.22 E 2.75(yp)-.165 G(urpose and without)-2.75 E
(fee is hereby granted, pro)72 250.8 Q(vided that the abo)-.165 E .33
-.165(ve c)-.165 H(op).165 E
(yright notice and this permission notice appear)-.11 E(in all copies.)
72 263.8 Q(Ardent, and He)5.5 E(wlett-P)-.275 E(ackard mak)-.165 E 2.75
(en)-.11 G 2.75(or)-2.75 G(epresentations about the suitability for an)
-2.75 E(y)-.165 E(purpose of the information in this document.)72 276.8
Q(It is pro)5.5 E(vided \222\222as is')-.165 E 2.75('w)-.814 G(ithout e)
-2.75 E(xpress or implied)-.165 E -.11(wa)72 289.8 S(rranty).11 E(.)
-.715 E(Cop)72 367.8 Q(yright \(c\) 1989, 1990, 1991, 1992)-.11 E 2.75
(XC)5.5 G(onsortium)-2.75 E(Permission is hereby granted, free of char)
72 384.7 Q(ge, to an)-.198 E 2.75(yp)-.165 G(erson obtaining a cop)-2.75
E 2.75(yo)-.11 G 2.75(ft)-2.75 G(his softw)-2.75 E(are and)-.11 E
(associated documentation \214les \(the `)72 397.7 Q(`Softw)-.814 E
(are')-.11 E('\), to deal in the Softw)-.814 E(are without restriction,)
-.11 E(including without limitation the rights to use, cop)72 410.7 Q
1.43 -.715(y, m)-.11 H(odify).715 E 2.75(,m)-.715 G(er)-2.75 E
(ge, publish, distrib)-.198 E(ute, sublicense,)-.22 E
(and/or sell copies of the Softw)72 423.7 Q
(are, and to permit persons to whom the Softw)-.11 E
(are is furnished to do)-.11 E(so, subject to the follo)72 436.7 Q
(wing conditions:)-.275 E(The abo)72 453.6 Q .33 -.165(ve c)-.165 H(op)
.165 E(yright notice and this permission notice shall be included in al\
l copies or substan-)-.11 E(tial portions of the Softw)72 466.6 Q(are.)
-.11 E(THE SOFTW)72 483.5 Q(ARE IS PR)-1.32 E -.55(OV)-.44 G(IDED `).55
E -.88(`A)-.814 G 2.75(SI).88 G(S')-2.75 E(', WITHOUT W)-.814 E
(ARRANTY OF ANY KIND,)-1.32 E(EXPRESS OR IMPLIED, INCLUDING B)72 496.5 Q
(UT NO)-.11 E 2.75(TL)-.44 G(IMITED T)-2.75 E 2.75(OT)-.198 G(HE W)-2.75
E(ARRANTIES OF)-1.32 E(MERCHANT)72 509.5 Q(ABILITY)-1.023 E 2.75(,F)
-1.419 G(ITNESS FOR A P)-2.75 E(AR)-1.012 E
(TICULAR PURPOSE AND NONINFRINGE-)-.66 E(MENT)72 522.5 Q 5.5(.I)-.814 G
2.75(NN)-5.5 G 2.75(OE)-2.75 G(VENT SHALL THE X CONSOR)-2.75 E
(TIUM BE LIABLE FOR ANY CLAIM,)-.66 E -.44(DA)72 535.5 S(MA).44 E
(GES OR O)-.44 E(THER LIABILITY)-.44 E 2.75(,W)-1.419 G(HETHER IN AN A)
-2.75 E(CTION OF CONTRA)-.44 E(CT)-.44 E 2.75(,T)-.814 G(OR)-2.948 E
2.75(TO)-.66 G(R)-2.75 E -.44(OT)72 548.5 S(HER).44 E(WISE, ARISING FR)
-.605 E(OM, OUT OF OR IN CONNECTION WITH THE SOFTW)-.44 E(ARE OR)-1.32 E
(THE USE OR O)72 561.5 Q(THER DEALINGS IN THE SOFTW)-.44 E(ARE.)-1.32 E
(Except as contained in this notice, the name of the X Consortium shall\
 not be used in adv)72 578.4 Q(ertising)-.165 E
(or otherwise to promote the sale, use or other dealings in this Softw)
72 591.4 Q(are without prior written)-.11 E
(authorization from the X Consortium.)72 604.4 Q/F1 11/Times-Italic@0 SF
2.75(XW)72 656.4 S(indow System)-3.355 E F0
(is a trademark of X Consortium, Inc.)2.75 E 0 Cg EP
%%Page: 1 3
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF 2.75(1. Input)72 85 R(Extension Ov)2.75 E(er)-.11
E(view)-.11 E/F1 11/Times-Roman@0 SF(This document describes an e)72
101.9 Q(xtension to the X11 serv)-.165 E(er)-.165 E 5.5(.T)-.605 G
(he purpose of this e)-5.5 E(xtension is to sup-)-.165 E
(port the use of additional input de)72 114.9 Q(vices be)-.275 E
(yond the pointer and k)-.165 E -.165(ey)-.11 G(board de).165 E
(vices de\214ned by the)-.275 E(core X protocol.)72 127.9 Q
(This \214rst section gi)5.5 E -.165(ve)-.275 G 2.75(sa).165 G 2.75(no)
-2.75 G -.165(ve)-2.915 G(rvie).165 E 2.75(wo)-.275 G 2.75(ft)-2.75 G
(he input e)-2.75 E 2.75(xtension. The)-.165 F(follo)2.75 E(wing sec-)
-.275 E(tions correspond to chapters 9, 10, and 11, `)72 140.9 Q(`W)
-.814 E(indo)-.44 E 2.75(wa)-.275 G(nd Session Manager Functions')-2.75
E(',)-.814 E -.814(``)72 153.9 S(Ev).814 E(ents')-.165 E(', and `)-.814
E(`Ev)-.814 E(ent Handling Functions')-.165 E 2.75('o)-.814 G 2.75(ft)
-2.75 G(he `)-2.75 E(`Xlib - C Language Interf)-.814 E(ace')-.11 E 2.75
('m)-.814 G(anual and)-2.75 E(describe ho)72 166.9 Q 2.75(wt)-.275 G
2.75(ou)-2.75 G(se the input de)-2.75 E(vice e)-.275 E(xtension.)-.165 E
F0 2.75(1.1. Design)72 192.9 R -.275(Ap)2.75 G(pr).275 E(oach)-.198 E F1
(The design approach of the e)72 209.8 Q
(xtension is to de\214ne functions and e)-.165 E -.165(ve)-.275 G
(nts analogous to the core func-).165 E(tions and e)72 222.8 Q -.165(ve)
-.275 G 2.75(nts. This).165 F(allo)2.75 E(ws e)-.275 E
(xtension input de)-.165 E(vices and e)-.275 E -.165(ve)-.275 G
(nts to be indi).165 E(vidually distinguish-)-.275 E
(able from each other and from the core input de)72 235.8 Q(vices and e)
-.275 E -.165(ve)-.275 G 2.75(nts. These).165 F(functions and e)2.75 E
-.165(ve)-.275 G(nts).165 E(mak)72 248.8 Q 2.75(eu)-.11 G(se of a de)
-2.75 E(vice identi\214er and support the reporting of)-.275 E/F2 11
/Times-Italic@0 SF(n)2.75 E F1(-dimensional motion data as well as).916
E(other data that is not currently reportable via the core input e)72
261.8 Q -.165(ve)-.275 G(nts.).165 E F0 2.75(1.2. Cor)72 287.8 R 2.75
(eI)-.198 G(nput De)-2.75 E(vices)-.165 E F1(The X serv)72 304.7 Q
(er core protocol supports tw)-.165 E 2.75(oi)-.11 G(nput de)-2.75 E
2.75(vices: a)-.275 F(pointer and a k)2.75 E -.165(ey)-.11 G 2.75
(board. The).165 F(pointer)2.75 E(de)72 317.7 Q(vice has tw)-.275 E 2.75
(om)-.11 G(ajor functions.)-2.75 E
(First, it may be used to generate motion information that client)5.5 E
(programs can detect. Second, it may also be used to indicate the curre\
nt location and focus of the)72 330.7 Q 2.75(Xk)72 343.7 S -.165(ey)
-2.86 G 2.75(board. T).165 F 2.75(oa)-.88 G(ccomplish this, the serv)
-2.75 E(er echoes a cursor at the current position of the X)-.165 E
(pointer)72 356.7 Q 5.5(.U)-.605 G(nless the X k)-5.5 E -.165(ey)-.11 G
(board has been e).165 E(xplicitly focused, this cursor also sho)-.165 E
(ws the current)-.275 E(location and focus of the X k)72 369.7 Q -.165
(ey)-.11 G(board.).165 E(The X k)72 386.6 Q -.165(ey)-.11 G
(board is used to generate input that client programs can detect.).165 E
(The X k)72 403.5 Q -.165(ey)-.11 G
(board and X pointer are referred to in this document as the).165 E F2
(cor)2.75 E 2.75(ed)-.407 G -.165(ev)-2.75 G(ices).165 E F1 2.75(,a)C
(nd the input)-2.75 E -2.365 -.275(ev e)72 416.5 T(nts the).275 E 2.75
(yg)-.165 G(enerate \()-2.75 E F0 -.275(Ke).916 G(yPr).275 E(ess)-.198 E
F1(,).916 E F0 -.275(Ke)3.666 G(yRelease).275 E F1(,).916 E F0(ButtonPr)
3.666 E(ess)-.198 E F1(,).916 E F0(ButtonRelease)3.666 E F1 2.75(,a).916
G(nd)-2.75 E F0(MotionNo-)3.666 E(tify)72 429.5 Q F1 2.75(\)a).916 G
(re kno)-2.75 E(wn as the)-.275 E F2(cor)2.75 E 2.75(ei)-.407 G(nput e)
-2.75 E(vents)-.165 E F1 5.5(.A)C(ll other input de)-5.5 E
(vices are referred to as)-.275 E F2 -.22(ex)2.75 G(tension input).22 E
(de)72 442.5 Q(vices)-.165 E F1 2.75(,a)C(nd the input e)-2.75 E -.165
(ve)-.275 G(nts the).165 E 2.75(yg)-.165 G(enerate are referred to as)
-2.75 E F2 -.22(ex)2.75 G(tension input e).22 E(vents)-.165 E F1(.).916
E(Note)277.308 465.5 Q(This input e)99.5 483.5 Q
(xtension does not change the beha)-.165 E
(vior or functionality of the core input)-.22 E(de)99.5 496.5 Q
(vices, core e)-.275 E -.165(ve)-.275 G
(nts, or core protocol requests, with the e).165 E
(xception of the core grab)-.165 E 2.75(requests. These)99.5 509.5 R
(requests may af)2.75 E(fect the synchronization of e)-.275 E -.165(ve)
-.275 G(nts from e).165 E(xtension)-.165 E(de)99.5 522.5 Q 2.75
(vices. See)-.275 F(the e)2.75 E(xplanation in the section titled `)
-.165 E(`Ev)-.814 E(ent Synchronization and Core)-.165 E(Grabs.)99.5
535.5 Q -.814('')-.77 G(Selection of the ph)72 562.4 Q(ysical de)-.055 E
(vices to be initially used by the serv)-.275 E(er as the core de)-.165
E(vices is left imple-)-.275 E(mentation dependent.)72 575.4 Q
(Functions are de\214ned that allo)5.5 E 2.75(wc)-.275 G
(lient programs to change which ph)-2.75 E(ysical)-.055 E(de)72 588.4 Q
(vices are used as the core de)-.275 E(vices.)-.275 E F0 2.75
(1.3. Extension)72 614.4 R(Input De)2.75 E(vices)-.165 E F1(The input e)
72 631.3 Q(xtension controls access to input de)-.165 E
(vices other than the X k)-.275 E -.165(ey)-.11 G(board and X pointer)
.165 E 5.5(.I)-.605 G(t)-5.5 E(allo)72 644.3 Q
(ws client programs to select input from these de)-.275 E
(vices independently from each other and inde-)-.275 E
(pendently from the core de)72 657.3 Q 2.75(vices. Input)-.275 F -2.365
-.275(ev e)2.75 H(nts from these de).275 E(vices are of e)-.275 E
(xtension types)-.165 E(\()72 670.3 Q F0(De).916 E(viceK)-.165 E(eyPr)
-.275 E(ess)-.198 E F1(,).916 E F0(De)3.666 E(viceK)-.165 E(eyRelease)
-.275 E F1(,).916 E F0(De)3.666 E(viceButtonPr)-.165 E(ess)-.198 E F1(,)
.916 E F0(De)3.666 E(viceButtonRelease)-.165 E F1(,).916 E F0(De)3.666 E
(viceMo-)-.165 E(tionNotify)72 683.3 Q F1 2.75(,a).916 G
(nd so on\) and contain a de)-2.75 E(vice identi\214er so that e)-.275 E
-.165(ve)-.275 G(nts of the same type coming).165 E(from dif)72 696.3 Q
(ferent input de)-.275 E(vices can be distinguished.)-.275 E
(Extension input e)72 713.2 Q -.165(ve)-.275 G
(nts are not limited in size by the size of the serv).165 E
(er 32-byte wire e)-.165 E -.165(ve)-.275 G 2.75(nts. Exten-).165 F
(sion input e)72 726.2 Q -.165(ve)-.275 G
(nts may be constructed by the serv).165 E(er sending as man)-.165 E
2.75(yw)-.165 G(ire-sized e)-2.75 E -.165(ve)-.275 G(nts as).165 E F0(1)
285.25 769 Q 0 Cg EP
%%Page: 2 4
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF 2.75(XI)72 49 S(nput Extension Library)-2.75 E
(X11, Release 6.4)229.413 E/F1 11/Times-Roman@0 SF
(necessary to return the information required for that e)72 85 Q -.165
(ve)-.275 G 2.75(nt. The).165 F(library e)2.75 E -.165(ve)-.275 G
(nt reformatting rou-).165 E
(tines are responsible for combining these into one or more client XEv)
72 98 Q(ents.)-.165 E(An)72 114.9 Q 2.75(yi)-.165 G(nput de)-2.75 E
(vice that generates k)-.275 E -.165(ey)-.11 G 2.75(,b)-.55 G
(utton, or motion data may be used as an e)-2.97 E(xtension input)-.165
E(de)72 127.9 Q 2.75(vice. Extension)-.275 F(input de)2.75 E
(vices may ha)-.275 E .33 -.165(ve z)-.22 H(ero or more k).165 E -.165
(ey)-.11 G(s, zero or more b).165 E(uttons, and may)-.22 E
(report zero or more ax)72 140.9 Q(es of motion.)-.165 E
(Motion may be reported as relati)5.5 E .33 -.165(ve m)-.275 H -.165
(ove).165 G(ments from a pre).165 E(vi-)-.275 E
(ous position or as an absolute position.)72 153.9 Q(All v)5.5 E
(aluators reporting motion information for a gi)-.275 E -.165(ve)-.275 G
(n).165 E -.165(ex)72 166.9 S(tension input de).165 E(vice must report \
the same kind of motion information \(absolute or relati)-.275 E -.165
(ve)-.275 G(\).).165 E(This e)72 183.8 Q
(xtension is designed to accommodate ne)-.165 E 2.75(wt)-.275 G
(ypes of input de)-2.75 E(vices that may be added in the)-.275 E 2.75
(future. The)72 196.8 R
(protocol requests that refer to speci\214c characteristics of input de)
2.75 E(vices or)-.275 E -.055(ga)-.198 G(nize that).055 E
(information by)72 209.8 Q/F2 11/Times-Italic@0 SF(input de)2.75 E
(vice classes)-.165 E F1 5.5(.S)C(erv)-5.5 E(er implementors may add ne)
-.165 E 2.75(wc)-.275 G(lasses of input de)-2.75 E(vices)-.275 E
(without changing the protocol requests.)72 222.8 Q(All e)72 239.7 Q
(xtension input de)-.165 E(vices are treated lik)-.275 E 2.75(et)-.11 G
(he core X k)-2.75 E -.165(ey)-.11 G
(board in determining their location and).165 E 2.75(focus. The)72 252.7
R(serv)2.75 E(er does not track the location of these de)-.165 E
(vices on an indi)-.275 E(vidual basis and, there-)-.275 E
(fore, does not echo a cursor to indicate their current location.)72
265.7 Q(Instead, their location is determined)5.5 E
(by the location of the core X pointer)72 278.7 Q 5.5(.L)-.605 G(ik)-5.5
E 2.75(et)-.11 G(he core X k)-2.75 E -.165(ey)-.11 G
(board, some may be e).165 E(xplicitly focused.)-.165 E(If the)72 291.7
Q 2.75(ya)-.165 G(re not e)-2.75 E(xplicitly focused,)-.165 E
(their focus is determined by the location of the core X pointer)5.5 E
(.)-.605 E F0 2.75(1.3.1. Input)72 317.7 R(De)2.75 E(vice Classes)-.165
E F1(Some of the input e)72 334.6 Q(xtension requests di)-.165 E
(vide input de)-.275 E(vices into classes based on their functionality)
-.275 E(.)-.715 E(This is intended to allo)72 347.6 Q 2.75(wn)-.275 G
.55 -.275(ew c)-2.75 H(lasses of input de).275 E
(vices to be de\214ned at a later time without chang-)-.275 E
(ing the semantics of these functions.)72 360.6 Q(The follo)5.5 E
(wing input de)-.275 E(vice classes are currently de\214ned:)-.275 E/F3
10/Times-Roman@0 SF(KEY)72 377.5 Q F1(The de)51.45 E(vice reports k)
-.275 E .33 -.165(ey e)-.11 H -.165(ve)-.11 G(nts.).165 E F3 -.1(BU)72
394.4 S(TT).1 E(ON)-.18 E F1(The de)31.73 E(vice reports b)-.275 E
(utton e)-.22 E -.165(ve)-.275 G(nts.).165 E F3 -1.35(VA)72 411.3 S(LU)
1.35 E -.46 -1.11(AT O)-.4 H(R)1.11 E F1(The de)20.05 E(vice reports v)
-.275 E(aluator data in motion e)-.275 E -.165(ve)-.275 G(nts.).165 E F3
(PR)72 428.2 Q -.4(OX)-.4 G(IMITY).4 E F1(The de)17.25 E
(vice reports proximity e)-.275 E -.165(ve)-.275 G(nts.).165 E F3(FOCUS)
72 445.1 Q F1(The de)39.77 E(vice can be focused.)-.275 E F3(FEEDB)72
462 Q -.4(AC)-.35 G(K).4 E F1(The de)19.97 E(vice supports feedbacks.)
-.275 E(Additional classes may be added in the future.)72 478.9 Q
(Functions that support multiple input classes, such)5.5 E(as the)72
491.9 Q F0(XListInputDe)3.666 E(vices)-.165 E F1
(function that lists all a)3.666 E -.275(va)-.22 G(ilable input de).275
E(vices, or)-.275 E -.055(ga)-.198 G(nize the data the).055 E(y)-.165 E
(return by input class.)72 504.9 Q(Client programs that use these funct\
ions should not access data unless it)5.5 E
(matches a class de\214ned at the time those clients were compiled.)72
517.9 Q(In this w)5.5 E(ay)-.11 E 2.75(,n)-.715 G .55 -.275(ew c)-2.75 H
(lasses can be).275 E(added without forcing e)72 530.9 Q
(xisting clients that use these functions to be recompiled.)-.165 E F0
2.75(1.4. Using)72 556.9 R(Extension Input De)2.75 E(vices)-.165 E F1
2.75(Ac)72 573.8 S(lient that wishes to access an input de)-2.75 E
(vice does so through the library functions de\214ned in the)-.275 E
(follo)72 586.8 Q(wing sections.)-.275 E 2.75(At)5.5 G
(ypical sequence of requests that a client w)-2.75 E(ould mak)-.11 E
2.75(ei)-.11 G 2.75(sa)-2.75 G 2.75(sf)-2.75 G(ollo)-2.75 E(ws:)-.275 E
<83>72 603.7 Q F0(XListInputDe)24.566 E(vices)-.165 E F1 2.75<ad6c>3.666
G(ists all of the a)-2.75 E -.275(va)-.22 G(ilable input de).275 E 2.75
(vices. From)-.275 F(the information)2.75 E
(returned by this request, determine whether the desired input de)99.5
616.7 Q(vice is attached to the)-.275 E(serv)99.5 629.7 Q(er)-.165 E 5.5
(.F)-.605 G(or a description of the)-5.665 E F0(XListInputDe)3.666 E
(vices)-.165 E F1(request, see the section entitled `)3.666 E(`List-)
-.814 E(ing A)99.5 642.7 Q -.275(va)-.814 G(ilable De).275 E(vices.)
-.275 E -.814('')-.77 G<83>72 659.6 Q F0(XOpenDe)24.566 E(vice)-.165 E
F1 2.75<ad72>3.666 G(equests that the serv)-2.75 E(er open the de)-.165
E(vice for access by this client.)-.275 E(This)5.5 E(request returns an)
99.5 672.6 Q F0(XDe)3.666 E(vice)-.165 E F1
(structure that is used by most other input e)3.666 E
(xtension requests to)-.165 E(identify the speci\214ed de)99.5 685.6 Q
2.75(vice. F)-.275 F(or a description of the)-.165 E F0(XOpenDe)3.666 E
(vice)-.165 E F1(request, see the sec-)3.666 E(tion entitled `)99.5
698.6 Q(`Enabling and Disabling Extension De)-.814 E(vices.)-.275 E
-.814('')-.77 G 23.65<8344>72 715.5 S(etermine the e)-23.65 E -.165(ve)
-.275 G(nt types and e).165 E -.165(ve)-.275 G
(nt classes needed to select the desired input e).165 E(xtension)-.165 E
-2.365 -.275(ev e)99.5 728.5 T(nts, and identify them when the).275 E
2.75(ya)-.165 G(re recei)-2.75 E -.165(ve)-.275 G 2.75(d. This).165 F
(is done via macros whose name)2.75 E F0(2)285.25 769 Q 0 Cg EP
%%Page: 3 5
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF 2.75(XI)72 49 S(nput Extension Library)-2.75 E
(X11, Release 6.4)229.413 E/F1 11/Times-Roman@0 SF
(corresponds to the desired e)99.5 85 Q -.165(ve)-.275 G(nt, for e).165
E(xample,)-.165 E F0(De)3.666 E(viceK)-.165 E(eyPr)-.275 E(ess)-.198 E
F1 5.5(.F).916 G(or a description of these)-5.665 E
(macros, see the section entitled `)99.5 98 Q(`Selecting Extension De)
-.814 E(vice Ev)-.275 E(ents.)-.165 E -.814('')-.77 G<83>72 114.9 Q F0
(XSelectExtensionEv)24.566 E(ent)-.11 E F1 2.75<ad73>3.666 G
(elects the desired e)-2.75 E -.165(ve)-.275 G(nts from the serv).165 E
(er)-.165 E 5.5(.F)-.605 G(or a description of)-5.665 E(the)99.5 127.9 Q
F0(XSelextExtensionEv)3.666 E(ent)-.11 E F1
(request, see the section entitled `)3.666 E(`Selecting Extension De)
-.814 E(vice)-.275 E(Ev)99.5 140.9 Q(ents.)-.165 E -.814('')-.77 G<83>72
157.8 Q F0(XNextEv)24.566 E(ent)-.11 E F1 2.75<ad72>3.666 G(ecei)-2.75 E
-.165(ve)-.275 G 2.75(st).165 G(he ne)-2.75 E(xt a)-.165 E -.275(va)-.22
G(ilable e).275 E -.165(ve)-.275 G 2.75(nt. This).165 F(is the core)2.75
E F0(XNextEv)3.666 E(ent)-.11 E F1(function)3.666 E(pro)99.5 170.8 Q
(vided by the standard X libarary)-.165 E(.)-.715 E
(Other requests are de\214ned to grab and focus e)72 187.7 Q
(xtension de)-.165 E(vices, to change their k)-.275 E -.165(ey)-.11 G
2.75(,b)-.55 G(utton, or)-2.97 E
(modi\214er mappings, to control the propag)72 200.7 Q(ation of input e)
-.055 E(xtension e)-.165 E -.165(ve)-.275 G(nts, to get motion history)
.165 E(from an e)72 213.7 Q(xtension de)-.165 E
(vice, and to send input e)-.275 E(xtension e)-.165 E -.165(ve)-.275 G
(nts to another client.).165 E(These functions)5.5 E
(are described in the follo)72 226.7 Q(wing sections.)-.275 E F0 2.75
(2. Library)72 252.7 R(Extension Requests)2.75 E F1(Extension input de)
72 269.6 Q(vices are accessed by client programs through the use of ne)
-.275 E 2.75(wp)-.275 G(rotocol requests.)-2.75 E(The follo)72 282.6 Q
(wing requests are pro)-.275 E(vided as e)-.165 E(xtensions to Xlib)
-.165 E 5.5(.C)-.44 G(onstants and structures referenced by)-5.5 E
(these functions may be found in the \214les)72 295.6 Q F0
(<X11/extensions/XI.h>)2.75 E F1(and)2.75 E F0(<X11/extensions/XIn-)2.75
E(put.h>)72 308.6 Q F1 2.75(,w)C
(hich are attached to this document as Appendix A.)-2.75 E
(The library will return)72 325.5 Q F0(NoSuchExtension)2.75 E F1
(if an e)2.75 E(xtension request is made to a serv)-.165 E
(er that does not)-.165 E(support the input e)72 338.5 Q(xtension.)-.165
E(Input e)72 355.4 Q(xtension requests cannot be used to access the X k)
-.165 E -.165(ey)-.11 G(board and X pointer de).165 E(vices.)-.275 E F0
2.75(2.1. W)72 381.4 R(indo)-.198 E 2.75(wM)-.11 G(anager Functions)
-2.75 E F1(This section discusses the follo)72 398.3 Q
(wing X Input Extension W)-.275 E(indo)-.44 E 2.75(wM)-.275 G
(anager topics:)-2.75 E 23.65<8343>72 415.2 S(hanging the core de)-23.65
E(vices)-.275 E 23.65<8345>72 432.1 S -.165(ve)-23.65 G
(nt synchronization and core grabs).165 E 23.65<8345>72 449 S
(xtension acti)-23.65 E .33 -.165(ve g)-.275 H(rabs).165 E 23.65<8350>72
465.9 S(assi)-23.815 E -.165(ve)-.275 G(ly grabbing a k).165 E -.165(ey)
-.11 G 23.65<8350>72 482.8 S(assi)-23.815 E -.165(ve)-.275 G
(ly grabbing a b).165 E(utton)-.22 E 23.65<8354>72 499.7 S(ha)-23.65 E
(wing a de)-.165 E(vice)-.275 E 23.65<8343>72 516.6 S(ontrolling de)
-23.65 E(vice focus)-.275 E 23.65<8343>72 533.5 S(ontrolling de)-23.65 E
(vice feedback)-.275 E 23.65<8352>72 550.4 S
(inging a bell on an input de)-23.65 E(vice)-.275 E 23.65<8343>72 567.3
S(ontrolling de)-23.65 E(vice encoding)-.275 E 23.65<8343>72 584.2 S
(ontrolling b)-23.65 E(utton mapping)-.22 E 23.65<834f>72 601.1 S
(btaining the state of a de)-23.65 E(vice)-.275 E F0 2.75
(2.1.1. Changing)72 627.1 R(the Cor)2.75 E 2.75(eD)-.198 G -.165(ev)
-2.75 G(ices).165 E F1(These functions are pro)72 644 Q
(vided to change which ph)-.165 E(ysical de)-.055 E
(vice is used as the X pointer or X)-.275 E -.11(ke)72 657 S(yboard.)
-.055 E F0(3)285.25 769 Q 0 Cg EP
%%Page: 4 6
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF 2.75(XI)72 49 S(nput Extension Library)-2.75 E
(X11, Release 6.4)229.413 E/F1 11/Times-Roman@0 SF(Note)277.308 85 Q
(Using these functions may change the characteristics of the core de)
99.5 103 Q 2.75(vices. The)-.275 F(ne)2.75 E(w)-.275 E(pointer de)99.5
116 Q(vice may ha)-.275 E .33 -.165(ve a d)-.22 H(if).165 E
(ferent number of b)-.275 E(uttons from the old one, or the ne)-.22 E(w)
-.275 E -.11(ke)99.5 129 S(yboard de)-.055 E(vice may ha)-.275 E .33
-.165(ve a d)-.22 H(if).165 E(ferent number of k)-.275 E -.165(ey)-.11 G
2.75(so).165 G 2.75(rr)-2.75 G(eport a dif)-2.75 E(ferent range of)-.275
E -.11(ke)99.5 142 S 2.75(ycodes. Client)-.055 F
(programs may be running that depend on those characteristics.)2.75 E
-.165(Fo)5.5 G(r).165 E -.165(ex)99.5 155 S(ample, a client program cou\
ld allocate an array based on the number of b).165 E(uttons on)-.22 E
(the pointer de)99.5 168 Q(vice and then use the b)-.275 E
(utton numbers recei)-.22 E -.165(ve)-.275 G 2.75(di).165 G 2.75(nb)
-2.75 G(utton e)-2.97 E -.165(ve)-.275 G(nts as).165 E
(indices into that array)99.5 181 Q 5.5(.C)-.715 G(hanging the core de)
-5.5 E(vices could cause such client programs)-.275 E(to beha)99.5 194 Q
.33 -.165(ve i)-.22 H(mproperly or to terminate abnormally if the).165 E
2.75(yi)-.165 G(gnore the)-2.75 E F0(ChangeDe)3.666 E(vi-)-.165 E
(ceNotify)99.5 207 Q F1 -2.365 -.275(ev e)3.666 H
(nt generated by these requests.).275 E(These functions change the X k)
72 233.9 Q -.165(ey)-.11 G(board or X pointer de).165 E
(vice and generate an)-.275 E F0(XChangeDe)3.666 E(viceNo-)-.165 E(tify)
72 246.9 Q F1 -2.365 -.275(ev e)3.666 H(nt and a).275 E F0
(MappingNotify)3.666 E F1 -2.365 -.275(ev e)3.666 H 2.75(nt. The).275 F
(speci\214ed de)2.75 E(vice becomes the ne)-.275 E 2.75(wXk)-.275 G
-.165(ey)-2.86 G(board or X).165 E(pointer de)72 259.9 Q 2.75(vice. The)
-.275 F(location of the core de)2.75 E
(vice does not change as a result of this request.)-.275 E
(These requests f)72 276.8 Q(ail and return)-.11 E F0(Alr)3.666 E
(eadyGrab)-.198 E(bed)-.11 E F1(if either the speci\214ed de)3.666 E
(vice or the core de)-.275 E(vice it)-.275 E -.11(wo)72 289.8 S
(uld replace are grabbed by some other client.).11 E(The)5.5 E 2.75(yf)
-.165 G(ail and return)-2.86 E F0(GrabFr)3.666 E(ozen)-.198 E F1
(if either)3.666 E(de)72 302.8 Q(vice is frozen by the acti)-.275 E .33
-.165(ve g)-.275 H(rab of another client.).165 E(These requests f)72
319.7 Q(ail with a)-.11 E F0(BadDe)3.666 E(vice)-.165 E F1
(error if the speci\214ed de)3.666 E(vice is in)-.275 E -.275(va)-.44 G
(lid, has not pre).275 E(viously)-.275 E(been opened via)72 332.7 Q F0
(XOpenDe)3.666 E(vice)-.165 E F1 2.75(,o).916 G 2.75(ri)-2.75 G 2.75(sn)
-2.75 G(ot supported as a core de)-2.75 E(vice by the serv)-.275 E
(er implementa-)-.165 E(tion.)72 345.7 Q(Once the de)72 362.6 Q
(vice has successfully replaced one of the core de)-.275 E
(vices, it is treated as a core de)-.275 E(vice)-.275 E
(until it is in turn replaced by another)72 375.6 Q F0(ChangeDe)3.666 E
(vice)-.165 E F1(request or until the serv)3.666 E(er terminates.)-.165
E(The)5.5 E(termination of the client that changed the de)72 388.6 Q
(vice will not cause it to change back.)-.275 E(Attempts to use)5.5 E
(the)72 401.6 Q F0(XCloseDe)3.666 E(vice)-.165 E F1
(request to close the ne)3.666 E 2.75(wc)-.275 G(ore de)-2.75 E
(vice will f)-.275 E(ail with a)-.11 E F0(BadDe)3.666 E(vice)-.165 E F1
(error)3.666 E(.)-.605 E 1.76 -.88(To c)72 431.5 T(hange which ph).88 E
(ysical de)-.055 E(vice is used as the X k)-.275 E -.165(ey)-.11 G
(board, use the).165 E F0(XChangeK)3.666 E(eyboardDe)-.275 E(vice)-.165
E F1 2.75(function. The)72 444.5 R(speci\214ed de)2.75 E
(vice must support input class)-.275 E F0 -.275(Ke)3.666 G(ys).275 E F1
(\(as reported in the)3.666 E F0(ListInputDe-)3.666 E(vices)72 457.5 Q
F1(request\) or the request will f)3.666 E(ail with a)-.11 E F0
(BadMatch)3.666 E F1(error)3.666 E(.)-.605 E .44 LW 36 479.15 36 490.15
DL 36 477.15 36 488.15 DL 41.5 475.4 36 475.4 DL 43.5 475.4 38 475.4 DL
49 475.4 43.5 475.4 DL(int XChangeK)72 491.3 Q -.165(ey)-.275 G(boardDe)
.165 E -1.834(vice \()-.275 F/F2 11/Times-Italic@0 SF(display).916 E F1
(,).916 E F2(de)2.75 E(vice)-.165 E F1(\)).916 E(Display *)85.75 504.3 Q
F2(display)A F1(;).916 E(XDe)85.75 517.3 Q(vice *)-.275 E F2(de)A(vice)
-.165 E F1(;).916 E F2(display)72 538.1 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2(de)72 555 Q(vice)-.165 E F1(Speci\214es the desired de)44.071 E
(vice.)-.275 E 36 550.65 36 561.65 DL 36 548.65 36 559.65 DL 41.5 559.9
36 559.9 DL 43.5 559.9 38 559.9 DL 49 559.9 43.5 559.9 DL
(If no error occurs,)72 584.9 Q F0(XChangeK)3.666 E(eyboardDe)-.275 E
(vice)-.165 E F1(returns)3.666 E F0(Success)3.666 E F1 5.5(.A).916 G F0
(ChangeDe)-1.834 E(viceNotify)-.165 E F1 -2.365 -.275(ev e)3.666 H(nt)
.275 E(with the request \214eld set to)72 597.9 Q F0(NewK)3.666 E
(eyboard)-.275 E F1(is sent to all clients selecting that e)3.666 E
-.165(ve)-.275 G 2.75(nt. A).165 F F0(Mapping-)3.666 E(Notify)72 610.9 Q
F1 -2.365 -.275(ev e)3.666 H(nt with the request \214eld set to).275 E
F0(MappingK)3.666 E(eyboard)-.275 E F1(is sent to all clients.)3.666 E
(The requested)5.5 E(de)72 623.9 Q(vice becomes the X k)-.275 E -.165
(ey)-.11 G(board, and the old k).165 E -.165(ey)-.11 G(board becomes a)
.165 E -.275(va)-.22 G(ilable as an e).275 E(xtension input)-.165 E(de)
72 636.9 Q 2.75(vice. The)-.275 F(focus state of the ne)2.75 E 2.75(wk)
-.275 G -.165(ey)-2.86 G
(board is the same as the focus state of the old X k).165 E -.165(ey)
-.11 G(board.).165 E F0(XChangeK)72.916 653.8 Q(eyboardDe)-.275 E(vice)
-.165 E F1(can generate)3.666 E F0(Alr)3.666 E(eadyGrab)-.198 E(bed)-.11
E F1(,).916 E F0(BadDe)3.666 E(vice)-.165 E F1(,).916 E F0(BadMatch)
3.666 E F1 2.75(,a).916 G(nd)-2.75 E F0(GrabFr)72.916 666.8 Q(ozen)-.198
E F1(errors.)3.666 E 1.76 -.88(To c)72 696.7 T(hange which ph).88 E
(ysical de)-.055 E(vice is used as the X pointer)-.275 E 2.75(,u)-.44 G
(se the)-2.75 E F0(XChangeP)3.666 E(ointerDe)-.22 E(vice)-.165 E F1
(func-)3.666 E 2.75(tion. The)72 709.7 R(speci\214ed de)2.75 E
(vice must support input class)-.275 E F0 -1.012(Va)3.666 G(luators)
1.012 E F1(\(as reported in the)3.666 E F0(XListInputDe-)3.666 E(vices)
72 722.7 Q F1(request\) and report at least tw)3.666 E 2.75(oa)-.11 G
-.165(xe)-2.75 G 2.75(so).165 G 2.75(fm)-2.75 G
(otion, or the request will f)-2.75 E(ail with a)-.11 E F0(BadMatch)
3.666 E(4)285.25 769 Q 0 Cg EP
%%Page: 5 7
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF 2.75(XI)72 49 S(nput Extension Library)-2.75 E
(X11, Release 6.4)229.413 E/F1 11/Times-Roman@0 SF(error)72 85 Q 5.5(.I)
-.605 G 2.75(ft)-5.5 G(he speci\214ed de)-2.75 E
(vice reports more than tw)-.275 E 2.75(oa)-.11 G -.165(xe)-2.75 G
(s, the tw).165 E 2.75(os)-.11 G(peci\214ed in the xaxis and yaxis)-2.75
E(ar)72 98 Q(guments will be used.)-.198 E(Data from other v)5.5 E
(aluators on the de)-.275 E(vice will be ignored.)-.275 E
(If the speci\214ed de)72 114.9 Q
(vice reports absolute positional information, and the serv)-.275 E
(er implementation does)-.165 E(not allo)72 127.9 Q 2.75(ws)-.275 G
(uch a de)-2.75 E(vice to be used as the X pointer)-.275 E 2.75(,t)-.44
G(he request will f)-2.75 E(ail with a)-.11 E F0(BadDe)3.666 E(vice)
-.165 E F1(error)3.666 E(.)-.605 E .44 LW 36 145.65 36 156.65 DL 36
143.65 36 154.65 DL 41.5 141.9 36 141.9 DL 43.5 141.9 38 141.9 DL 49
141.9 43.5 141.9 DL(int XChangePointerDe)72 157.8 Q -1.834(vice \()-.275
F/F2 11/Times-Italic@0 SF(display).916 E F1(,).916 E F2(de)2.75 E(vice)
-.165 E F1(,).916 E F2(xaxis)2.75 E F1(,).916 E F2(yaxis)2.75 E F1(\))
.916 E(Display *)85.75 170.8 Q F2(display)A F1(;).916 E(XDe)85.75 183.8
Q(vice *)-.275 E F2(de)A(vice)-.165 E F1(;).916 E(int)85.75 196.8 Q F2
(xaxis)2.75 E F1(;).916 E(int)85.75 209.8 Q F2(yaxis)2.75 E F1(;).916 E
F2(display)72 230.6 Q F1(Speci\214es the connection to the X serv)40.221
E(er)-.165 E(.)-.605 E F2(de)72 247.5 Q(vice)-.165 E F1
(Speci\214es the desired de)44.071 E(vice.)-.275 E F2(xaxis)72 264.4 Q
F1(Speci\214es the zero-based inde)49.395 E 2.75(xo)-.165 G 2.75(ft)
-2.75 G(he axis to be used as the x-axis of the pointer)-2.75 E(de)144
277.4 Q(vice.)-.275 E F2(yaxis)72 294.3 Q F1
(Speci\214es the zero-based inde)49.395 E 2.75(xo)-.165 G 2.75(ft)-2.75
G(he axis to be used as the y-axis of the pointer)-2.75 E(de)144 307.3 Q
(vice.)-.275 E 36 302.95 36 313.95 DL 36 300.95 36 311.95 DL 41.5 312.2
36 312.2 DL 43.5 312.2 38 312.2 DL 49 312.2 43.5 312.2 DL
(If no error occurs,)72 337.2 Q F0(XChangeP)3.666 E(ointerDe)-.22 E
(vice)-.165 E F1(returns)3.666 E F0(Success)3.666 E F1 5.5(.A).916 G F0
(ChangeDe)-1.834 E(viceNotify)-.165 E F1 -2.365 -.275(ev e)3.666 H(nt)
.275 E(with the request \214eld set to)72 350.2 Q F0(NewP)3.666 E
(ointer)-.22 E F1(is sent to all clients selecting that e)3.666 E -.165
(ve)-.275 G 2.75(nt. A).165 F F0(Mapping-)3.666 E(Notify)72 363.2 Q F1
-2.365 -.275(ev e)3.666 H(nt with the request \214eld set to).275 E F0
(MappingP)3.666 E(ointer)-.22 E F1(is sent to all clients.)3.666 E
(The requested)5.5 E(de)72 376.2 Q(vice becomes the X pointer)-.275 E
2.75(,a)-.44 G(nd the old pointer becomes a)-2.75 E -.275(va)-.22 G
(ilable as an e).275 E(xtension input de)-.165 E(vice.)-.275 E F0
(XChangeP)72.916 393.1 Q(ointerDe)-.22 E(vice)-.165 E F1(can generate)
3.666 E F0(Alr)3.666 E(eadyGrab)-.198 E(bed)-.11 E F1(,).916 E F0(BadDe)
3.666 E(vice)-.165 E F1(,).916 E F0(BadMatch)3.666 E F1 2.75(,a).916 G
(nd)-2.75 E F0(GrabFr)72.916 406.1 Q(ozen)-.198 E F1(errors.)3.666 E F0
2.75(2.1.2. Ev)72 432.1 R(ent Synchr)-.11 E(onization and Cor)-.198 E
2.75(eG)-.198 G(rabs)-2.75 E F1(Implementation of the input e)72 449 Q
(xtension requires an e)-.165 E(xtension of the meaning of e)-.165 E
-.165(ve)-.275 G(nt synchroniza-).165 E
(tion for the core grab requests.)72 462 Q
(This is necessary in order to allo)5.5 E 2.75(ww)-.275 G(indo)-2.75 E
2.75(wm)-.275 G(anagers to freeze all)-2.75 E(input de)72 475 Q
(vices with a single request.)-.275 E
(The core grab requests require a pointer_mode and k)72 491.9 Q -.165
(ey)-.11 G(board_mode ar).165 E 2.75(gument. The)-.198 F(meaning of)2.75
E(these modes is changed by the input e)72 504.9 Q 2.75(xtension. F)
-.165 F(or the)-.165 E F0(XGrabP)3.666 E(ointer)-.22 E F1(and)3.666 E F0
(XGrabButton)3.666 E F1
(requests, pointer_mode controls synchronization of the pointer de)72
517.9 Q(vice, and k)-.275 E -.165(ey)-.11 G(board_mode con-).165 E
(trols the synchronization of all other input de)72 530.9 Q 2.75
(vices. F)-.275 F(or the)-.165 E F0(XGrabK)3.666 E(eyboard)-.275 E F1
(and)3.666 E F0(XGrabK)3.666 E(ey)-.275 E F1
(requests, pointer_mode controls the synchronization of all input de)72
543.9 Q(vices, e)-.275 E(xcept the X k)-.165 E -.165(ey)-.11 G(board,)
.165 E(while k)72 556.9 Q -.165(ey)-.11 G
(board_mode controls the synchronization of the k).165 E -.165(ey)-.11 G
2.75(board. When).165 F(using one of the core)2.75 E
(grab requests, the synchronization of e)72 569.9 Q(xtension de)-.165 E
(vices is controlled by the mode speci\214ed for the)-.275 E(de)72 582.9
Q(vice not being grabbed.)-.275 E F0 2.75(2.1.3. Extension)72 608.9 R
(Acti)2.75 E .22 -.11(ve G)-.11 H(rabs).11 E F1(Acti)72 625.8 Q .33
-.165(ve g)-.275 H(rabs of e).165 E(xtension de)-.165 E
(vices are supported via the)-.275 E F0(XGrabDe)3.666 E(vice)-.165 E F1
(function in the same w)3.666 E(ay)-.11 E(that core de)72 638.8 Q
(vices are grabbed using the core)-.275 E F0(XGrabK)3.666 E(eyboard)
-.275 E F1(function, e)3.666 E(xcept that an e)-.165 E(xtension)-.165 E
(input de)72 651.8 Q(vice is passed as a function parameter)-.275 E 5.5
(.T)-.605 G(he)-5.5 E F0(XUngrabDe)3.666 E(vice)-.165 E F1
(function allo)3.666 E(ws a pre)-.275 E(vious)-.275 E(acti)72 664.8 Q
.33 -.165(ve g)-.275 H(rab for an e).165 E(xtension de)-.165 E
(vice to be released.)-.275 E -.165(Pa)72 681.7 S(ssi).165 E .33 -.165
(ve g)-.275 H(rabs of b).165 E(uttons and k)-.22 E -.165(ey)-.11 G 2.75
(so).165 G 2.75(ne)-2.75 G(xtension de)-2.915 E
(vices are supported via the)-.275 E F0(XGrabDe)3.666 E(viceBut-)-.165 E
(ton)72 694.7 Q F1(and)3.666 E F0(XGrabDe)3.666 E(viceK)-.165 E(ey)-.275
E F1 2.75(functions. These)3.666 F(passi)2.75 E .33 -.165(ve g)-.275 H
(rabs are released via the).165 E F0(XUngrabDe-)3.666 E(viceK)72 707.7 Q
(ey)-.275 E F1(and)3.666 E F0(XUngrabDe)3.666 E(viceButton)-.165 E F1
(functions.)3.666 E F0(5)285.25 769 Q 0 Cg EP
%%Page: 6 8
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF 2.75(XI)72 49 S(nput Extension Library)-2.75 E
(X11, Release 6.4)229.413 E/F1 11/Times-Roman@0 SF 1.76 -.88(To g)72 85
T(rab an e).88 E(xtension de)-.165 E(vice, use the)-.275 E F0(XGrabDe)
3.666 E(vice)-.165 E F1 2.75(function. The)3.666 F(de)2.75 E
(vice must ha)-.275 E .33 -.165(ve p)-.22 H(re).165 E(viously)-.275 E
(been opened using the)72 98 Q F0(XOpenDe)3.666 E(vice)-.165 E F1
(function.)3.666 E .44 LW 36 115.75 36 126.75 DL 36 113.75 36 124.75 DL
41.5 112 36 112 DL 43.5 112 38 112 DL 49 112 43.5 112 DL(int XGrabDe)72
127.9 Q -1.834(vice \()-.275 F/F2 11/Times-Italic@0 SF(display).916 E F1
(,).916 E F2(de)2.75 E(vice)-.165 E F1(,).916 E F2(gr)2.75 E(ab_window)
-.165 E F1(,).916 E F2(owner_e)2.75 E(vents)-.165 E F1(,).916 E F2 -.165
(ev)2.75 G(ent_count).165 E F1(,).916 E F2 -.165(ev)2.75 G(ent_list).165
E F1(,).916 E F2(this_de)113.25 140.9 Q(vice_mode)-.165 E F1(,).916 E F2
(other_de)2.75 E(vice_mode)-.165 E F1(,).916 E F2(time)2.75 E F1(\)).916
E(Display *)85.75 153.9 Q F2(display)A F1(;).916 E(XDe)85.75 166.9 Q
(vice *)-.275 E F2(de)A(vice)-.165 E F1(;).916 E -.44(Wi)85.75 179.9 S
(ndo).44 E(w)-.275 E F2(gr)2.75 E(ab_window)-.165 E F1(;).916 E(Bool)
85.75 192.9 Q F2(owner_e)2.75 E(vents)-.165 E F1(;).916 E(int)85.75
205.9 Q F2 -.165(ev)2.75 G(ent_count).165 E F1(;).916 E(XEv)85.75 218.9
Q(entClass *)-.165 E F2 -.165(ev)C(ent_list).165 E F1(;).916 E(int)85.75
231.9 Q F2(this_de)2.75 E(vice_mode)-.165 E F1(;).916 E(int)85.75 244.9
Q F2(other_de)2.75 E(vice_mode)-.165 E F1(;).916 E -.385(Ti)85.75 257.9
S(me).385 E F2(time)2.75 E F1(;).916 E F2(display)72 278.7 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2(de)72 295.6 Q(vice)-.165 E F1(Speci\214es the desired de)44.071 E
(vice.)-.275 E F2(gr)72 312.5 Q(ab_window)-.165 E F1
(Speci\214es the ID of a windo)11.654 E 2.75(wa)-.275 G
(ssociated with the de)-2.75 E(vice speci\214ed abo)-.275 E -.165(ve)
-.165 G(.).165 E F2(owner_e)72 329.4 Q(vents)-.165 E F1
(Speci\214es a boolean v)11.676 E(alue of either)-.275 E F0 -.814(Tr)
3.666 G(ue).814 E F1(or)3.666 E F0 -.275(Fa)3.666 G(lse).275 E F1(.).916
E F2 -.165(ev)72 346.3 S(ent_count).165 E F1
(Speci\214es the number of elements in the e)19.013 E -.165(ve)-.275 G
(nt_list array).165 E(.)-.715 E F2 -.165(ev)72 363.2 S(ent_list).165 E
F1(Speci\214es a pointer to a list of e)30.002 E -.165(ve)-.275 G
(nt classes that indicate which e).165 E -.165(ve)-.275 G
(nts the client).165 E(wishes to recei)144 376.2 Q -.165(ve)-.275 G 5.5
(.T).165 G(hese e)-5.5 E -.165(ve)-.275 G(nt classes must ha).165 E .33
-.165(ve b)-.22 H(een obtained using the de).165 E(vice)-.275 E
(being grabbed.)144 389.2 Q F2(this_de)72 406.1 Q(vice_mode)-.165 E F1
(Controls further processing of e)144 419.1 Q -.165(ve)-.275 G
(nts from this de).165 E 2.75(vice. Y)-.275 F(ou can pass one of these)
-1.21 E(constants:)144 432.1 Q F0(GrabModeSync)3.666 E F1(or)3.666 E F0
(GrabModeAsync)3.666 E F1(.).916 E F2(other_de)72 449 Q(vice_mode)-.165
E F1(Controls further processing of e)144 462 Q -.165(ve)-.275 G
(nts from all other de).165 E 2.75(vices. Y)-.275 F(ou can pass one of)
-1.21 E(these constants:)144 475 Q F0(GrabModeSync)3.666 E F1(or)3.666 E
F0(GrabModeAsync)3.666 E F1(.).916 E F2(time)72 491.9 Q F1
(Speci\214es the time.)53.058 E(This may be either a timestamp e)5.5 E
(xpressed in milliseconds or)-.165 E F0(Curr)144.916 504.9 Q(entT)-.198
E(ime)-.198 E F1(.).916 E 36 500.55 36 511.55 DL 36 498.55 36 509.55 DL
41.5 509.8 36 509.8 DL 43.5 509.8 38 509.8 DL 49 509.8 43.5 509.8 DL F0
(XGrabDe)72.916 534.8 Q(vice)-.165 E F1(acti)3.666 E -.165(ve)-.275 G
(ly grabs an e).165 E(xtension input de)-.165 E(vice and generates)-.275
E F0(De)3.666 E(viceF)-.165 E(ocusIn)-.275 E F1(and)3.666 E F0(De)72.916
547.8 Q(viceF)-.165 E(ocusOut)-.275 E F1 -2.365 -.275(ev e)3.666 H 2.75
(nts. Further).275 F(input e)2.75 E -.165(ve)-.275 G(nts from this de)
.165 E(vice are reported only to the grabbing)-.275 E 2.75(client. This)
72 560.8 R(function o)2.75 E -.165(ve)-.165 G(rrides an).165 E 2.75(yp)
-.165 G(re)-2.75 E(vious acti)-.275 E .33 -.165(ve g)-.275 H
(rab by this client for this de).165 E(vice.)-.275 E(The e)72 577.7 Q
-.165(ve)-.275 G(nt_list parameter is a pointer to a list of e).165 E
-.165(ve)-.275 G(nt classes.).165 E(This list indicates which e)5.5 E
-.165(ve)-.275 G(nts the).165 E(client wishes to recei)72 590.7 Q .33
-.165(ve w)-.275 H(hile the grab is acti).165 E -.165(ve)-.275 G 5.5(.I)
.165 G 2.75(fo)-5.5 G(wner_e)-3.025 E -.165(ve)-.275 G(nts is).165 E F0
-.275(Fa)3.666 G(lse).275 E F1 2.75(,i).916 G(nput e)-2.75 E -.165(ve)
-.275 G(nts from this).165 E(de)72 603.7 Q
(vice are reported with respect to grab_windo)-.275 E 2.75(wa)-.275 G
(nd are reported only if speci\214ed in e)-2.75 E -.165(ve)-.275 G
(nt_list.).165 E(If o)72 616.7 Q(wner_e)-.275 E -.165(ve)-.275 G(nts is)
.165 E F0 -.814(Tr)3.666 G(ue).814 E F1 2.75(,t).916 G
(hen if a generated e)-2.75 E -.165(ve)-.275 G(nt w).165 E
(ould normally be reported to this client, it is)-.11 E
(reported normally)72 629.7 Q 5.5(.O)-.715 G(therwise, the e)-5.5 E
-.165(ve)-.275 G(nt is reported with respect to the grab_windo).165 E
2.75(wa)-.275 G(nd is only)-2.75 E(reported if speci\214ed in e)72 642.7
Q -.165(ve)-.275 G(nt_list.).165 E(The this_de)72 659.6 Q(vice_mode ar)
-.275 E(gument controls the further processing of e)-.198 E -.165(ve)
-.275 G(nts from this de).165 E(vice, and)-.275 E(the other_de)72 672.6
Q(vice_mode ar)-.275 E
(gument controls the further processing of input e)-.198 E -.165(ve)
-.275 G(nts from all other).165 E(de)72 685.6 Q(vices.)-.275 E 23.65
<8349>72 702.5 S 2.75(ft)-23.65 G(he this_de)-2.75 E(vice_mode ar)-.275
E(gument is)-.198 E F0(GrabModeAsync)3.666 E F1 2.75(,d).916 G -.275(ev)
-2.75 G(ice e).275 E -.165(ve)-.275 G(nt processing continues).165 E
(normally; if the de)99.5 715.5 Q
(vice is currently frozen by this client, then processing of de)-.275 E
(vice e)-.275 E -.165(ve)-.275 G(nts is).165 E 2.75(resumed. If)99.5
728.5 R(the this_de)2.75 E 2.75(vice_mode ar)-.275 F(gument is)-.198 E
F0(GrabModeSync)3.666 E F1 2.75(,t).916 G(he state of the grabbed)-2.75
E F0(6)285.25 769 Q 0 Cg EP
%%Page: 7 9
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF 2.75(XI)72 49 S(nput Extension Library)-2.75 E
(X11, Release 6.4)229.413 E/F1 11/Times-Roman@0 SF(de)99.5 85 Q(vice \(\
as seen by client applications\) appears to freeze, and no further de)
-.275 E(vice e)-.275 E -.165(ve)-.275 G(nts are).165 E
(generated by the serv)99.5 98 Q
(er until the grabbing client issues a releasing)-.165 E F0(XAllo)3.666
E(wDe)-.11 E(viceEv)-.165 E(ents)-.11 E F1(call or until the de)99.5 111
Q(vice grab is released.)-.275 E(Actual de)5.5 E(vice input e)-.275 E
-.165(ve)-.275 G(nts are not lost while the).165 E(de)99.5 124 Q
(vice is frozen; the)-.275 E 2.75(ya)-.165 G
(re simply queued for later processing.)-2.75 E 23.65<8349>72 140.9 S
2.75(ft)-23.65 G(he other_de)-2.75 E(vice_mode is)-.275 E F0
(GrabModeAsync)3.666 E F1 2.75(,e).916 G -.165(ve)-3.025 G
(nt processing from other input de).165 E(vices)-.275 E(is unaf)99.5
153.9 Q(fected by acti)-.275 E -.275(va)-.275 G(tion of the grab).275 E
5.5(.I)-.44 G 2.75(fo)-5.5 G(ther_de)-2.75 E(vice_mode is)-.275 E F0
(GrabModeSync)3.666 E F1 2.75(,t).916 G(he state)-2.75 E(of all de)99.5
166.9 Q(vices e)-.275 E(xcept the grabbed de)-.165 E
(vice \(as seen by client applications\) appears to freeze,)-.275 E
(and no further e)99.5 179.9 Q -.165(ve)-.275 G
(nts are generated by the serv).165 E
(er until the grabbing client issues a releasing)-.165 E F0(XAllo)
100.416 192.9 Q(wEv)-.11 E(ents)-.11 E F1(or)3.666 E F0(XAllo)3.666 E
(wDe)-.11 E(viceEv)-.165 E(ents)-.11 E F1(call or until the de)3.666 E
(vice grab is released.)-.275 E(Actual)5.5 E -2.365 -.275(ev e)99.5
205.9 T(nts are not lost while the other de).275 E
(vices are frozen; the)-.275 E 2.75(ya)-.165 G
(re simply queued for later pro-)-2.75 E(cessing.)99.5 218.9 Q F0
(XGrabDe)72.916 235.8 Q(vice)-.165 E F1 -.11(fa)3.666 G
(ils on the follo).11 E(wing conditions:)-.275 E 23.65<8349>72 252.7 S
2.75(ft)-23.65 G(he de)-2.75 E(vice is acti)-.275 E -.165(ve)-.275 G
(ly grabbed by some other client, it returns).165 E F0(Alr)3.666 E
(eadyGrab)-.198 E(bed)-.11 E F1(.).916 E 23.65<8349>72 269.6 S 2.75(fg)
-23.65 G(rab_windo)-2.75 E 2.75(wi)-.275 G 2.75(sn)-2.75 G(ot vie)-2.75
E -.11(wa)-.275 G(ble, it returns).11 E F0(GrabNotV)3.666 E(iewable)
-.407 E F1(.).916 E 23.65<8349>72 286.5 S 2.75(ft)-23.65 G(he speci\214\
ed time is earlier than the last-grab-time for the speci\214ed de)-2.75
E(vice or later than)-.275 E(the current X serv)99.5 299.5 Q
(er time, it returns)-.165 E F0(GrabIn)3.666 E -.11(va)-.44 G(lidT).11 E
(ime)-.198 E F1 5.5(.O).916 G(therwise, the last-grab-time for)-5.5 E
(the speci\214ed de)99.5 312.5 Q
(vice is set to the speci\214ed time and)-.275 E F0(Curr)3.666 E(entT)
-.198 E(ime)-.198 E F1(is replaced by the current)3.666 E 2.75(Xs)99.5
325.5 S(erv)-2.75 E(er time.)-.165 E 23.65<8349>72 342.4 S 2.75(ft)
-23.65 G(he de)-2.75 E(vice is frozen by an acti)-.275 E .33 -.165(ve g)
-.275 H(rab of another client, it returns).165 E F0(GrabFr)3.666 E(ozen)
-.198 E F1(.).916 E(If a grabbed de)72 359.3 Q
(vice is closed by a client while an acti)-.275 E .33 -.165(ve g)-.275 H
(rab by that client is in ef).165 E(fect, that acti)-.275 E -.165(ve)
-.275 G(grab will be released.)72 372.3 Q(An)5.5 E 2.75(yp)-.165 G(assi)
-2.75 E .33 -.165(ve g)-.275 H
(rabs established by that client will be released.).165 E(If the de)5.5
E(vice)-.275 E(is frozen only by an acti)72 385.3 Q .33 -.165(ve g)-.275
H(rab of the requesting client, it is tha).165 E(wed.)-.165 E F0
(XGrabDe)72.916 402.2 Q(vice)-.165 E F1(can generate)3.666 E F0
(BadClass)3.666 E F1(,).916 E F0(BadDe)3.666 E(vice)-.165 E F1(,).916 E
F0(BadV)3.666 E(alue)-1.012 E F1 2.75(,a).916 G(nd)-2.75 E F0(BadW)3.666
E(indo)-.198 E(w)-.11 E F1(errors.)3.666 E 1.76 -.88(To r)72 432.1 T
(elease a grab of an e).88 E(xtension de)-.165 E(vice, use the)-.275 E
F0(XUngrabDe)3.666 E(vice)-.165 E F1(function.)3.666 E .44 LW 36 453.75
36 464.75 DL 36 451.75 36 462.75 DL 41.5 450 36 450 DL 43.5 450 38 450
DL 49 450 43.5 450 DL(int XUngrabDe)72 465.9 Q(vice\()-.275 E/F2 11
/Times-Italic@0 SF(display)A F1(,).916 E F2(de)2.75 E(vice)-.165 E F1(,)
.916 E F2(time)2.75 E F1(\)).916 E(Display *)85.75 478.9 Q F2(display)A
F1(;).916 E(XDe)85.75 491.9 Q(vice *)-.275 E F2(de)A(vice)-.165 E F1(;)
.916 E -.385(Ti)85.75 504.9 S(me).385 E F2(time)2.75 E F1(;).916 E F2
(display)72 525.7 Q F1(Speci\214es the connection to the X serv)40.221 E
(er)-.165 E(.)-.605 E F2(de)72 542.6 Q(vice)-.165 E F1
(Speci\214es the desired de)44.071 E(vice.)-.275 E F2(time)72 559.5 Q F1
(Speci\214es the time.)53.058 E(This may be either a timestamp e)5.5 E
(xpressed in milliseconds, or)-.165 E F0(Curr)144.916 572.5 Q(entT)-.198
E(ime)-.198 E F1(.).916 E 36 568.15 36 579.15 DL 36 566.15 36 577.15 DL
41.5 577.4 36 577.4 DL 43.5 577.4 38 577.4 DL 49 577.4 43.5 577.4 DL F0
(XUngrabDe)72.916 602.4 Q(vice)-.165 E F1(allo)3.666 E
(ws a client to release an e)-.275 E(xtension input de)-.165 E
(vice and an)-.275 E 2.75(yq)-.165 G(ueued e)-2.75 E -.165(ve)-.275 G
(nts if).165 E(this client has it grabbed from either)72 615.4 Q F0
(XGrabDe)3.666 E(vice)-.165 E F1(or)3.666 E F0(XGrabDe)3.666 E(viceK)
-.165 E(ey)-.275 E F1 5.5(.I).916 G 2.75(fa)-5.5 G .33 -.165(ny o)-2.75
H(ther de).165 E(vices)-.275 E(are frozen by the grab,)72 628.4 Q F0
(XUngrabDe)3.666 E(vice)-.165 E F1(tha)3.666 E(ws them.)-.165 E
(This function does not release the de)5.5 E(vice)-.275 E(and an)72
641.4 Q 2.75(yq)-.165 G(ueued e)-2.75 E -.165(ve)-.275 G
(nts if the speci\214ed time is earlier than the last-de).165 E
(vice-grab time or is later than)-.275 E(the current X serv)72 654.4 Q
(er time.)-.165 E(It also generates)5.5 E F0(De)3.666 E(viceF)-.165 E
(ocusIn)-.275 E F1(and)3.666 E F0(De)3.666 E(viceF)-.165 E(ocusOut)-.275
E F1 -2.365 -.275(ev e)3.666 H 2.75(nts. The).275 F(X)2.75 E(serv)72
667.4 Q(er automatically performs an)-.165 E F0(XUngrabDe)3.666 E(vice)
-.165 E F1(if the e)3.666 E -.165(ve)-.275 G(nt windo).165 E 2.75(wf)
-.275 G(or an acti)-2.75 E .33 -.165(ve d)-.275 H -.275(ev).165 G
(ice grab).275 E(becomes not vie)72 680.4 Q -.11(wa)-.275 G
(ble or if the client terminates without releasing the grab).11 E(.)-.44
E F0(XUngrabDe)72.916 697.3 Q(vice)-.165 E F1(can generate)3.666 E F0
(BadDe)3.666 E(vice)-.165 E F1(errors.)3.666 E F0(7)285.25 769 Q 0 Cg EP
%%Page: 8 10
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF 2.75(XI)72 49 S(nput Extension Library)-2.75 E
(X11, Release 6.4)229.413 E 2.75(2.1.4. P)72 85 R(assi)-.11 E -.11(ve)
-.11 G(ly Grab).11 E(bing a K)-.11 E(ey)-.275 E/F1 11/Times-Roman@0 SF
1.76 -.88(To p)72 101.9 T(assi).88 E -.165(ve)-.275 G
(ly grab a single k).165 E .33 -.165(ey o)-.11 H 2.75(na).165 G 2.75(ne)
-2.75 G(xtension de)-2.915 E(vice, use)-.275 E F0(XGrabDe)3.666 E(viceK)
-.165 E(ey)-.275 E F1 5.5(.T).916 G(hat de)-5.5 E(vice must)-.275 E(ha)
72 114.9 Q .33 -.165(ve p)-.22 H(re).165 E
(viously been opened using the)-.275 E F0(XOpenDe)3.666 E(vice)-.165 E
F1(function, or the request will f)3.666 E(ail with a)-.11 E F0(BadDe)
72.916 127.9 Q(vice)-.165 E F1(error)3.666 E 5.5(.I)-.605 G 2.75(ft)-5.5
G(he speci\214ed de)-2.75 E(vice does not support input class)-.275 E F0
-.275(Ke)3.666 G(ys).275 E F1 2.75(,t).916 G(he request will f)-2.75 E
(ail)-.11 E(with a)72 140.9 Q F0(BadMatch)3.666 E F1(error)3.666 E(.)
-.605 E .44 LW 36 158.65 36 169.65 DL 36 156.65 36 167.65 DL 41.5 154.9
36 154.9 DL 43.5 154.9 38 154.9 DL 49 154.9 43.5 154.9 DL(int XGrabDe)72
170.8 Q(viceK)-.275 E -.165(ey)-.275 G(\().165 E/F2 11/Times-Italic@0 SF
(display)A F1(,).916 E F2(de)2.75 E(vice)-.165 E F1(,).916 E F2 -.11(ke)
2.75 G(ycode)-.22 E F1(,).916 E F2(modi\214er)2.75 E(s)-.11 E F1(,).916
E F2(modi\214er_de)2.75 E(vice)-.165 E F1(,).916 E F2(gr)2.75 E
(ab_window)-.165 E F1(,).916 E F2(owner_e)124.5 183.8 Q(vents)-.165 E F1
(,).916 E F2 -.165(ev)2.75 G(ent_count).165 E F1(,).916 E F2 -.165(ev)
2.75 G(ent_list).165 E F1(,).916 E F2(this_de)2.75 E(vice_mode)-.165 E
F1(,).916 E F2(other_de)2.75 E(vice_mode)-.165 E F1(\)).916 E(Display *)
85.75 196.8 Q F2(display)A F1(;).916 E(XDe)85.75 209.8 Q(vice *)-.275 E
F2(de)A(vice)-.165 E F1(;).916 E(int)85.75 222.8 Q F2 -.11(ke)2.75 G
(ycode)-.22 E F1(;).916 E(unsigned int)85.75 235.8 Q F2(modi\214er)2.75
E(s)-.11 E F1(;).916 E(XDe)85.75 248.8 Q(vice *)-.275 E F2
(modi\214er_de)A(vice)-.165 E F1(;).916 E -.44(Wi)85.75 261.8 S(ndo).44
E(w)-.275 E F2(gr)2.75 E(ab_window)-.165 E F1(;).916 E(Bool)85.75 274.8
Q F2(owner_e)2.75 E(vents)-.165 E F1(;).916 E(int)85.75 287.8 Q F2 -.165
(ev)2.75 G(ent_count).165 E F1(;).916 E(XEv)85.75 300.8 Q(entClass *)
-.165 E F2 -.165(ev)C(ent_list).165 E F1(;).916 E(int)85.75 313.8 Q F2
(this_de)2.75 E(vice_mode)-.165 E F1(;).916 E(int)85.75 326.8 Q F2
(other_de)2.75 E(vice_mode)-.165 E F1(;).916 E F2(display)72 347.6 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2(de)72 364.5 Q(vice)-.165 E F1(Speci\214es the desired de)44.071 E
(vice.)-.275 E F2 -.11(ke)72 381.4 S(ycode)-.22 E F1(Speci\214es the k)
37.02 E -.165(ey)-.11 G(code of the k).165 E .33 -.165(ey t)-.11 H
(hat is to be grabbed.).165 E -1.21(Yo)5.5 G 2.75(uc)1.21 G
(an pass either the)-2.75 E -.11(ke)144 394.4 S(ycode or)-.055 E F0
(AnyK)3.666 E(ey)-.275 E F1(.).916 E F2(modi\214er)72 411.3 Q(s)-.11 E
F1(Speci\214es the set of k)31.168 E -.165(ey)-.11 G 2.75(masks. This)
.165 F(mask is the bitwise inclusi)2.75 E .33 -.165(ve O)-.275 H 2.75
(Ro).165 G 2.75(ft)-2.75 G(hese)-2.75 E -.11(ke)144 424.3 S(ymask bits:)
-.055 E F0(ShiftMask)3.666 E F1(,).916 E F0(LockMask)3.666 E F1(,).916 E
F0(Contr)3.666 E(olMask)-.198 E F1(,).916 E F0(Mod1Mask)3.666 E F1(,)
.916 E F0(Mod2Mask)144.916 437.3 Q F1(,).916 E F0(Mod3Mask)3.666 E F1(,)
.916 E F0(Mod4Mask)3.666 E F1 2.75(,a).916 G(nd)-2.75 E F0(Mod5Mask)
3.666 E F1(.).916 E -1.21(Yo)144 454.2 S 2.75(uc)1.21 G(an also pass)
-2.75 E F0(AnyModi\214er)3.666 E F1 2.75(,w).916 G(hich is equi)-2.75 E
-.275(va)-.275 G(lent to issuing the grab k).275 E -.165(ey)-.11 G(requ\
est for all possible modi\214er combinations \(including the combinatio\
n of no)144 467.2 Q(modi\214ers\).)144 480.2 Q F2(modi\214er_de)72 497.1
Q(vice)-.165 E F1(Speci\214es the de)144 510.1 Q
(vice whose modi\214ers are to be used.)-.275 E
(If NULL is speci\214ed, the)5.5 E(core X k)144 523.1 Q -.165(ey)-.11 G
(board is used as the modi\214er_de).165 E(vice.)-.275 E F2(gr)72 540 Q
(ab_window)-.165 E F1(Speci\214es the ID of a windo)11.654 E 2.75(wa)
-.275 G(ssociated with the de)-2.75 E(vice speci\214ed abo)-.275 E -.165
(ve)-.165 G(.).165 E F2(owner_e)72 556.9 Q(vents)-.165 E F1
(Speci\214es a boolean v)11.676 E(alue of either)-.275 E F0 -.814(Tr)
3.666 G(ue).814 E F1(or)3.666 E F0 -.275(Fa)3.666 G(lse).275 E F1(.).916
E F2 -.165(ev)72 573.8 S(ent_count).165 E F1
(Speci\214es the number of elements in the e)19.013 E -.165(ve)-.275 G
(nt_list array).165 E(.)-.715 E F2 -.165(ev)72 590.7 S(ent_list).165 E
F1(Speci\214es a pointer to a list of e)30.002 E -.165(ve)-.275 G
(nt classes that indicate which e).165 E -.165(ve)-.275 G
(nts the client).165 E(wishes to recei)144 603.7 Q -.165(ve)-.275 G(.)
.165 E F2(this_de)72 620.6 Q(vice_mode)-.165 E F1
(Controls further processing of e)144 633.6 Q -.165(ve)-.275 G
(nts from this de).165 E 2.75(vice. Y)-.275 F(ou can pass one of these)
-1.21 E(constants:)144 646.6 Q F0(GrabModeSync)3.666 E F1(or)3.666 E F0
(GrabModeAsync)3.666 E F1(.).916 E F2(other_de)72 663.5 Q(vice_mode)
-.165 E F1(Controls further processing of e)144 676.5 Q -.165(ve)-.275 G
(nts from all other de).165 E 2.75(vices. Y)-.275 F(ou can pass one of)
-1.21 E(these constants:)144 689.5 Q F0(GrabModeSync)3.666 E F1(or)3.666
E F0(GrabModeAsync)3.666 E F1(.).916 E 36 685.15 36 696.15 DL 36 683.15
36 694.15 DL 41.5 694.4 36 694.4 DL 43.5 694.4 38 694.4 DL 49 694.4 43.5
694.4 DL F0(XGrabDe)72.916 719.4 Q(viceK)-.165 E(ey)-.275 E F1
(is analogous to the core)3.666 E F0(XGrabK)3.666 E(ey)-.275 E F1 2.75
(function. It)3.666 F(creates an e)2.75 E(xplicit passi)-.165 E -.165
(ve)-.275 G(grab for a k)72 732.4 Q .33 -.165(ey o)-.11 H 2.75(na).165 G
2.75(ne)-2.75 G(xtension de)-2.915 E 2.75(vice. The)-.275 F F0(XGrabDe)
3.666 E(viceK)-.165 E(ey)-.275 E F1(function establishes a passi)3.666 E
.33 -.165(ve g)-.275 H(rab).165 E F0(8)285.25 769 Q 0 Cg EP
%%Page: 9 11
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF 2.75(XI)72 49 S(nput Extension Library)-2.75 E
(X11, Release 6.4)229.413 E/F1 11/Times-Roman@0 SF(on a de)72 85 Q 2.75
(vice. Consequently)-.275 F 2.75(,i)-.715 G 2.75(nt)-2.75 G(he future,)
-2.75 E 23.65<8349>72 101.9 S 2.75(Ft)-23.65 G(he de)-2.75 E
(vice is not grabbed and the speci\214ed k)-.275 E -.165(ey)-.11 G 2.75
(,w)-.55 G(hich itself can be a modi\214er k)-2.75 E -.165(ey)-.11 G
2.75(,i)-.55 G 2.75(sl)-2.75 G(og-)-2.75 E
(ically pressed when the speci\214ed modi\214er k)99.5 114.9 Q -.165(ey)
-.11 G 2.75(sl).165 G(ogically are do)-2.75 E
(wn on the speci\214ed modi\214er)-.275 E(de)99.5 127.9 Q
(vice \(and no other k)-.275 E -.165(ey)-.11 G 2.75(sa).165 G(re do)
-2.75 E(wn\),)-.275 E 23.65<8341>72 144.8 S(ND no other modi\214er k)
-23.65 E -.165(ey)-.11 G 2.75(sl).165 G(ogically are do)-2.75 E(wn,)
-.275 E 23.65<8341>72 161.7 S(ND EITHER the grab windo)-23.65 E 2.75(wi)
-.275 G 2.75(sa)-2.75 G 2.75(na)-2.75 G
(ncestor of \(or is\) the focus windo)-2.75 E 2.75(wo)-.275 G 2.75(rt)
-2.75 G(he grab win-)-2.75 E(do)99.5 174.7 Q 2.75(wi)-.275 G 2.75(sad)
-2.75 G(escendent of the focus windo)-2.75 E 2.75(wa)-.275 G
(nd contains the pointer)-2.75 E(,)-.44 E 23.65<8341>72 191.6 S
(ND a passi)-23.65 E .33 -.165(ve g)-.275 H(rab on the same de).165 E
(vice and k)-.275 E .33 -.165(ey c)-.11 H(ombination does not e).165 E
(xist on an)-.165 E 2.75(ya)-.165 G(ncestor)-2.75 E(of the grab windo)
99.5 204.6 Q -.715(w,)-.275 G 23.65<8354>72 221.5 S(HEN the de)-23.65 E
(vice is acti)-.275 E -.165(ve)-.275 G(ly grabbed, as for).165 E F0
(XGrabDe)3.666 E(vice)-.165 E F1 2.75(,t).916 G(he last-de)-2.75 E
(vice-grab time is set)-.275 E(to the time at which the k)99.5 234.5 Q
.33 -.165(ey w)-.11 H(as pressed \(as transmitted in the).055 E F0(De)
3.666 E(viceK)-.165 E(eyPr)-.275 E(ess)-.198 E F1 -2.365 -.275(ev e)
3.666 H(nt\), and).275 E(the)99.5 247.5 Q F0(De)3.666 E(viceK)-.165 E
(eyPr)-.275 E(ess)-.198 E F1 -2.365 -.275(ev e)3.666 H(nt is reported.)
.275 E(The interpretation of the remaining ar)72 264.4 Q
(guments is as for)-.198 E F0(XGrabDe)3.666 E(vice)-.165 E F1 5.5(.T)
.916 G(he acti)-5.5 E .33 -.165(ve g)-.275 H(rab is termi-).165 E
(nated automatically when the logical state of the de)72 277.4 Q
(vice has the speci\214ed k)-.275 E .33 -.165(ey r)-.11 H
(eleased \(indepen-).165 E
(dent of the logical state of the modi\214er k)72 290.4 Q -.165(ey)-.11
G(s\).).165 E(Note that the logical state of a de)72 307.3 Q
(vice \(as seen by means of the X protocol\) may lag the ph)-.275 E
(ysical)-.055 E(state if de)72 320.3 Q(vice e)-.275 E -.165(ve)-.275 G
(nt processing is frozen.).165 E 2.75(Am)72 337.2 S(odi\214er of)-2.75 E
F0(AnyModi\214er)3.666 E F1(is equi)3.666 E -.275(va)-.275 G
(lent to issuing the request for all possible modi\214er combina-).275 E
(tions \(including the combination of no modi\214ers\).)72 350.2 Q
(It is not required that all modi\214ers speci\214ed)5.5 E(ha)72 363.2 Q
.33 -.165(ve c)-.22 H(urrently assigned k).165 E -.165(ey)-.11 G 2.75
(codes. A).165 F -.11(ke)2.75 G 2.75(yo)-.055 G(f)-2.75 E F0(AnyK)3.666
E(ey)-.275 E F1(is equi)3.666 E -.275(va)-.275 G
(lent to issuing the request for all).275 E(possible k)72 376.2 Q -.165
(ey)-.11 G 2.75(codes. Otherwise,).165 F(the k)2.75 E .33 -.165(ey m)
-.11 H(ust be in the range speci\214ed by min_k).165 E -.165(ey)-.11 G
(code and).165 E(max_k)72 389.2 Q -.165(ey)-.11 G
(code in the information returned by the).165 E F0(XListInputDe)3.666 E
(vices)-.165 E F1 2.75(function. If)3.666 F(it is not within)2.75 E
(that range,)72 402.2 Q F0(XGrabDe)3.666 E(viceK)-.165 E(ey)-.275 E F1
(generates a)3.666 E F0(BadV)3.666 E(alue)-1.012 E F1(error)3.666 E(.)
-.605 E F0(XGrabDe)72.916 419.1 Q(viceK)-.165 E(ey)-.275 E F1
(generates a)3.666 E F0(BadAccess)3.666 E F1
(error if some other client has issued a)3.666 E F0(XGrabDe-)3.666 E
(viceK)72 432.1 Q(ey)-.275 E F1(with the same de)3.666 E(vice and k)
-.275 E .33 -.165(ey c)-.11 H(ombination on the same windo).165 E 4.18
-.715(w. W)-.275 H(hen using).715 E F0(AnyMod-)3.666 E(i\214er)72 445.1
Q F1(or)3.666 E F0(AnyK)3.666 E(ey)-.275 E F1 2.75(,t).916 G
(he request f)-2.75 E(ails completely and the X serv)-.11 E
(er generates a)-.165 E F0(BadAccess)3.666 E F1(error)3.666 E 2.75(,a)
-.44 G(nd)-2.75 E
(no grabs are established if there is a con\215icting grab for an)72
458.1 Q 2.75(yc)-.165 G(ombination.)-2.75 E F0(XGrabDe)72.916 475 Q
(viceK)-.165 E(ey)-.275 E F1(returns)3.666 E F0(Success)3.666 E F1
(upon successful completion of the request.)3.666 E F0(XGrabDe)72.916
491.9 Q(viceK)-.165 E(ey)-.275 E F1(can generate)3.666 E F0(BadAccess)
3.666 E F1(,).916 E F0(BadClass)3.666 E F1(,).916 E F0(BadDe)3.666 E
(vice)-.165 E F1(,).916 E F0(BadMatch)3.666 E F1(,).916 E F0(BadV)3.666
E(alue)-1.012 E F1(,).916 E(and)72 504.9 Q F0(BadW)3.666 E(indo)-.198 E
(w)-.11 E F1(errors.)3.666 E 1.76 -.88(To r)72 534.8 T(elease a passi)
.88 E .33 -.165(ve g)-.275 H(rab of a single k).165 E .33 -.165(ey o)
-.11 H 2.75(na).165 G 2.75(ne)-2.75 G(xtension de)-2.915 E(vice, use)
-.275 E F0(XUngrabDe)3.666 E(viceK)-.165 E(ey)-.275 E F1(.).916 E F0(9)
285.25 769 Q 0 Cg EP
%%Page: 10 12
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF 2.75(XI)72 49 S(nput Extension Library)-2.75 E
(X11, Release 6.4)229.413 E .44 LW 36 76.75 36 87.75 DL 36 74.75 36
85.75 DL 41.5 73 36 73 DL 43.5 73 38 73 DL 49 73 43.5 73 DL/F1 11
/Times-Roman@0 SF(int XUngrabDe)72 88.9 Q(viceK)-.275 E -.165(ey)-.275 G
(\().165 E/F2 11/Times-Italic@0 SF(display)A F1(,).916 E F2(de)2.75 E
(vice)-.165 E F1(,).916 E F2 -.11(ke)2.75 G(ycode)-.22 E F1(,).916 E F2
(modi\214er)2.75 E(s)-.11 E F1(,).916 E F2(modi\214er_de)2.75 E(vice)
-.165 E F1(,).916 E F2(ungr)2.75 E(ab_window)-.165 E F1(\)).916 E
(Display *)85.75 101.9 Q F2(display)A F1(;).916 E(XDe)85.75 114.9 Q
(vice *)-.275 E F2(de)A(vice)-.165 E F1(;).916 E(int)85.75 127.9 Q F2
-.11(ke)2.75 G(ycode)-.22 E F1(;).916 E(unsigned int)85.75 140.9 Q F2
(modi\214er)2.75 E(s)-.11 E F1(;).916 E(XDe)85.75 153.9 Q(vice *)-.275 E
F2(modi\214er_de)A(vice)-.165 E F1(;).916 E -.44(Wi)85.75 166.9 S(ndo)
.44 E(w)-.275 E F2(ungr)2.75 E(ab_window)-.165 E F1(;).916 E F2(display)
72 187.7 Q F1(Speci\214es the connection to the X serv)40.221 E(er)-.165
E(.)-.605 E F2(de)72 204.6 Q(vice)-.165 E F1(Speci\214es the desired de)
44.071 E(vice.)-.275 E F2 -.11(ke)72 221.5 S(ycode)-.22 E F1
(Speci\214es the k)37.02 E -.165(ey)-.11 G(code of the k).165 E .33
-.165(ey t)-.11 H(hat is to be ungrabbed.).165 E -1.21(Yo)5.5 G 2.75(uc)
1.21 G(an pass either the)-2.75 E -.11(ke)144 234.5 S(ycode or)-.055 E
F0(AnyK)3.666 E(ey)-.275 E F1(.).916 E F2(modi\214er)72 251.4 Q(s)-.11 E
F1(Speci\214es the set of k)31.168 E -.165(ey)-.11 G 2.75(masks. This)
.165 F(mask is the bitwise inclusi)2.75 E .33 -.165(ve O)-.275 H 2.75
(Ro).165 G 2.75(ft)-2.75 G(hese)-2.75 E -.11(ke)144 264.4 S(ymask bits:)
-.055 E F0(ShiftMask)3.666 E F1(,).916 E F0(LockMask)3.666 E F1(,).916 E
F0(Contr)3.666 E(olMask)-.198 E F1(,).916 E F0(Mod1Mask)3.666 E F1(,)
.916 E F0(Mod2Mask)144.916 277.4 Q F1(,).916 E F0(Mod3Mask)3.666 E F1(,)
.916 E F0(Mod4Mask)3.666 E F1 2.75(,a).916 G(nd)-2.75 E F0(Mod5Mask)
3.666 E F1(.).916 E -1.21(Yo)144 294.3 S 2.75(uc)1.21 G(an also pass)
-2.75 E F0(AnyModi\214er)3.666 E F1 2.75(,w).916 G(hich is equi)-2.75 E
-.275(va)-.275 G(lent to issuing the ungrab k).275 E -.165(ey)-.11 G(re\
quest for all possible modi\214er combinations \(including the combinat\
ion of no)144 307.3 Q(modi\214ers\).)144 320.3 Q F2(modi\214er_de)72
337.2 Q(vice)-.165 E F1(Speci\214es the de)37.908 E
(vice whose modi\214ers are to be used.)-.275 E(If NULL is speci-)5.5 E
(\214ed, the core X k)180 350.2 Q -.165(ey)-.11 G
(board is used as the modi\214er_de).165 E(vice.)-.275 E F2(ungr)72
367.1 Q(ab_window)-.165 E F1(Speci\214es the ID of a windo)36.654 E 2.75
(wa)-.275 G(ssociated with the de)-2.75 E(vice speci\214ed abo)-.275 E
-.165(ve)-.165 G(.).165 E 36 362.75 36 373.75 DL 36 360.75 36 371.75 DL
41.5 372 36 372 DL 43.5 372 38 372 DL 49 372 43.5 372 DL F0(XUngrabDe)
72.916 397 Q(viceK)-.165 E(ey)-.275 E F1(is analogous to the core)3.666
E F0(XUngrabK)3.666 E(ey)-.275 E F1 2.75(function. It)3.666 F
(releases an e)2.75 E(xplicit pas-)-.165 E(si)72 410 Q .33 -.165(ve g)
-.275 H(rab for a k).165 E .33 -.165(ey o)-.11 H 2.75(na).165 G 2.75(ne)
-2.75 G(xtension input de)-2.915 E(vice.)-.275 E F0(XUngrabDe)72.916
426.9 Q(viceK)-.165 E(ey)-.275 E F1(can generate)3.666 E F0(BadAlloc)
3.666 E F1(,).916 E F0(BadDe)3.666 E(vice)-.165 E F1(,).916 E F0
(BadMatch)3.666 E F1(,).916 E F0(BadV)3.666 E(alue)-1.012 E F1 2.75(,a)
.916 G(nd)-2.75 E F0(Bad-)3.666 E -.198(Wi)72 439.9 S(ndo).198 E(w)-.11
E F1(errors.)3.666 E F0 2.75(2.1.5. P)72 465.9 R(assi)-.11 E -.11(ve)
-.11 G(ly Grab).11 E(bing a Button)-.11 E F1 1.76 -.88(To e)72 482.8 T
(stablish a passi).88 E .33 -.165(ve g)-.275 H(rab for a single b).165 E
(utton on an e)-.22 E(xtension de)-.165 E(vice, use)-.275 E F0(XGrabDe)
3.666 E(viceButton)-.165 E F1(.).916 E(The speci\214ed de)72 495.8 Q
(vice must ha)-.275 E .33 -.165(ve p)-.22 H(re).165 E
(viously been opened using the)-.275 E F0(XOpenDe)3.666 E(vice)-.165 E
F1(function, or the)3.666 E(request will f)72 508.8 Q(ail with a)-.11 E
F0(BadDe)3.666 E(vice)-.165 E F1(error)3.666 E 5.5(.I)-.605 G 2.75(ft)
-5.5 G(he speci\214ed de)-2.75 E(vice does not support input class)-.275
E F0(But-)3.666 E(tons)72 521.8 Q F1 2.75(,t).916 G(he request will f)
-2.75 E(ail with a)-.11 E F0(BadMatch)3.666 E F1(error)3.666 E(.)-.605 E
F0(10)282.5 769 Q 0 Cg EP
%%Page: 11 13
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF 2.75(XI)72 49 S(nput Extension Library)-2.75 E
(X11, Release 6.4)229.413 E .44 LW 36 76.75 36 87.75 DL 36 74.75 36
85.75 DL 41.5 73 36 73 DL 43.5 73 38 73 DL 49 73 43.5 73 DL/F1 11
/Times-Roman@0 SF(int XGrabDe)72 88.9 Q(viceButton\()-.275 E/F2 11
/Times-Italic@0 SF(display)A F1(,).916 E F2(de)2.75 E(vice)-.165 E F1(,)
.916 E F2 -.22(bu)2.75 G(tton).22 E F1(,).916 E F2(modi\214er)2.75 E(s)
-.11 E F1(,).916 E F2(modi\214er_de)2.75 E(vice)-.165 E F1(,)3.666 E F2
(gr)2.75 E(ab_window)-.165 E F1(,).916 E F2(owner_e)118.75 101.9 Q
(vents)-.165 E F1(,).916 E F2 -.165(ev)2.75 G(ent_count).165 E F1(,).916
E F2 -.165(ev)2.75 G(ent_list).165 E F1(,).916 E F2(this_de)2.75 E
(vice_mode)-.165 E F1(,).916 E F2(other_de)2.75 E(vice_mode)-.165 E F1
(\)).916 E(Display *)85.75 114.9 Q F2(display)A F1(;).916 E(XDe)85.75
127.9 Q(vice *)-.275 E F2(de)A(vice)-.165 E F1(;).916 E(unsigned int)
85.75 140.9 Q F2 -.22(bu)2.75 G(tton).22 E F1(;).916 E(unsigned int)
85.75 153.9 Q F2(modi\214er)2.75 E(s)-.11 E F1(;).916 E(XDe)85.75 166.9
Q(vice *)-.275 E F2(modi\214er_de)A(vice)-.165 E F1(;)3.666 E -.44(Wi)
85.75 179.9 S(ndo).44 E(w)-.275 E F2(gr)2.75 E(ab_window)-.165 E F1(;)
.916 E(Bool)85.75 192.9 Q F2(owner_e)2.75 E(vents)-.165 E F1(;).916 E
(int)85.75 205.9 Q F2 -.165(ev)2.75 G(ent_count).165 E F1(;).916 E(XEv)
85.75 218.9 Q(entClass *)-.165 E F2 -.165(ev)C(ent_list).165 E F1(;).916
E(int)85.75 231.9 Q F2(this_de)2.75 E(vice_mode)-.165 E F1(;).916 E(int)
85.75 244.9 Q F2(other_de)2.75 E(vice_mode)-.165 E F1(;).916 E F2
(display)72 265.7 Q F1(Speci\214es the connection to the X serv)40.221 E
(er)-.165 E(.)-.605 E F2(de)72 282.6 Q(vice)-.165 E F1
(Speci\214es the desired de)44.071 E(vice.)-.275 E F2 -.22(bu)72 299.5 S
(tton).22 E F1(Speci\214es the code of the b)44.104 E
(utton that is to be grabbed.)-.22 E -1.21(Yo)5.5 G 2.75(uc)1.21 G
(an pass either the)-2.75 E -.22(bu)144 312.5 S(tton or).22 E F0
(AnyButton)3.666 E F1(.).916 E F2(modi\214er)72 329.4 Q(s)-.11 E F1
(Speci\214es the set of k)31.168 E -.165(ey)-.11 G 2.75(masks. This).165
F(mask is the bitwise inclusi)2.75 E .33 -.165(ve O)-.275 H 2.75(Ro).165
G 2.75(ft)-2.75 G(hese)-2.75 E -.11(ke)144 342.4 S(ymask bits:)-.055 E
F0(ShiftMask)3.666 E F1(,).916 E F0(LockMask)3.666 E F1(,).916 E F0
(Contr)3.666 E(olMask)-.198 E F1(,).916 E F0(Mod1Mask)3.666 E F1(,).916
E F0(Mod2Mask)144.916 355.4 Q F1(,).916 E F0(Mod3Mask)3.666 E F1(,).916
E F0(Mod4Mask)3.666 E F1 2.75(,a).916 G(nd)-2.75 E F0(Mod5Mask)3.666 E
F1(.).916 E -1.21(Yo)144 372.3 S 2.75(uc)1.21 G(an also pass)-2.75 E F0
(AnyModi\214er)3.666 E F1 2.75(,w).916 G(hich is equi)-2.75 E -.275(va)
-.275 G(lent to issuing the grab request).275 E(for all possible modi\
\214er combinations \(including the combination of no modi-)144 385.3 Q
(\214ers\).)144 398.3 Q F2(modi\214er_de)72 415.2 Q(vice)-.165 E F1
(Speci\214es the de)144 428.2 Q(vice whose modi\214ers are to be used.)
-.275 E(If NULL is speci\214ed, the)5.5 E(core X k)144 441.2 Q -.165(ey)
-.11 G(board is used as the modi\214er_de).165 E(vice.)-.275 E F2(gr)72
458.1 Q(ab_window)-.165 E F1(Speci\214es the ID of a windo)11.654 E 2.75
(wa)-.275 G(ssociated with the de)-2.75 E(vice speci\214ed abo)-.275 E
-.165(ve)-.165 G(.).165 E F2(owner_e)72 475 Q(vents)-.165 E F1
(Speci\214es a boolean v)11.676 E(alue of either)-.275 E F0 -.814(Tr)
3.666 G(ue).814 E F1(or)3.666 E F0 -.275(Fa)3.666 G(lse).275 E F1(.).916
E F2 -.165(ev)72 491.9 S(ent_count).165 E F1
(Speci\214es the number of elements in the e)19.013 E -.165(ve)-.275 G
(nt_list array).165 E(.)-.715 E F2 -.165(ev)72 508.8 S(ent_list).165 E
F1(Speci\214es a list of e)30.002 E -.165(ve)-.275 G
(nt classes that indicates which de).165 E(vice e)-.275 E -.165(ve)-.275
G(nts are to be).165 E(reported to the client.)144 521.8 Q F2(this_de)72
538.7 Q(vice_mode)-.165 E F1(Controls further processing of e)144 551.7
Q -.165(ve)-.275 G(nts from this de).165 E 2.75(vice. Y)-.275 F
(ou can pass one of these)-1.21 E(constants:)144 564.7 Q F0
(GrabModeSync)3.666 E F1(or)3.666 E F0(GrabModeAsync)3.666 E F1(.).916 E
F2(other_de)72 581.6 Q(vice_mode)-.165 E F1
(Controls further processing of e)144 594.6 Q -.165(ve)-.275 G
(nts from all other de).165 E 2.75(vices. Y)-.275 F(ou can pass one of)
-1.21 E(these constants:)144 607.6 Q F0(GrabModeSync)3.666 E F1(or)3.666
E F0(GrabModeAsync)3.666 E F1(.).916 E 36 603.25 36 614.25 DL 36 601.25
36 612.25 DL 41.5 612.5 36 612.5 DL 43.5 612.5 38 612.5 DL 49 612.5 43.5
612.5 DL F0(XGrabDe)72.916 637.5 Q(viceButton)-.165 E F1
(is analogous to the core)3.666 E F0(XGrabButton)3.666 E F1 2.75
(function. It)3.666 F(creates an e)2.75 E(xplicit)-.165 E(passi)72 650.5
Q .33 -.165(ve g)-.275 H(rab for a b).165 E(utton on an e)-.22 E
(xtension input de)-.165 E 2.75(vice. Because)-.275 F(the serv)2.75 E
(er does not track e)-.165 E(xten-)-.165 E(sion de)72 663.5 Q
(vices, no cursor is speci\214ed with this request.)-.275 E -.165(Fo)5.5
G 2.75(rt).165 G(he same reason, there is no con\214ne_to)-2.75 E
(parameter)72 676.5 Q 5.5(.T)-.605 G(he de)-5.5 E(vice must ha)-.275 E
.33 -.165(ve p)-.22 H(re).165 E(viously been opened using the)-.275 E F0
(XOpenDe)3.666 E(vice)-.165 E F1(function.)3.666 E(The)72 693.4 Q F0
(XGrabDe)3.666 E(viceButton)-.165 E F1(function establishes a passi)
3.666 E .33 -.165(ve g)-.275 H(rab on a de).165 E 2.75
(vice. Consequently)-.275 F 2.75(,i)-.715 G 2.75(nt)-2.75 G(he)-2.75 E
(future,)72 706.4 Q F0(11)282.5 769 Q 0 Cg EP
%%Page: 12 14
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF 2.75(XI)72 49 S(nput Extension Library)-2.75 E
(X11, Release 6.4)229.413 E/F1 11/Times-Roman@0 SF 23.65<8349>72 85 S
2.75(Ft)-23.65 G(he de)-2.75 E
(vice is not grabbed and the speci\214ed b)-.275 E
(utton is logically pressed when the speci\214ed)-.22 E(modi\214er k)
99.5 98 Q -.165(ey)-.11 G 2.75(sl).165 G(ogically are do)-2.75 E
(wn \(and no other b)-.275 E(uttons or modi\214er k)-.22 E -.165(ey)-.11
G 2.75(sa).165 G(re do)-2.75 E(wn\),)-.275 E 23.65<8341>72 114.9 S
(ND EITHER the grab windo)-23.65 E 2.75(wi)-.275 G 2.75(sa)-2.75 G 2.75
(na)-2.75 G(ncestor of \(or is\) the focus windo)-2.75 E 2.75(wO)-.275 G
2.75(Rt)-2.75 G(he grab)-2.75 E(windo)99.5 127.9 Q 2.75(wi)-.275 G 2.75
(sad)-2.75 G(escendent of the focus windo)-2.75 E 2.75(wa)-.275 G
(nd contains the pointer)-2.75 E(,)-.44 E 23.65<8341>72 144.8 S
(ND a passi)-23.65 E .33 -.165(ve g)-.275 H(rab on the same de).165 E
(vice and b)-.275 E(utton/k)-.22 E .33 -.165(ey c)-.11 H
(ombination does not e).165 E(xist on an)-.165 E(y)-.165 E
(ancestor of the grab windo)99.5 157.8 Q -.715(w,)-.275 G 23.65<8354>72
174.7 S(HEN the de)-23.65 E(vice is acti)-.275 E -.165(ve)-.275 G
(ly grabbed, as for).165 E F0(XGrabDe)3.666 E(vice)-.165 E F1 2.75(,t)
.916 G(he last-grab time is set to the)-2.75 E(time at which the b)99.5
187.7 Q(utton w)-.22 E(as pressed \(as transmitted in the)-.11 E F0(De)
3.666 E(viceButtonPr)-.165 E(ess)-.198 E F1 -2.365 -.275(ev e)3.666 H
(nt\), and).275 E(the)99.5 200.7 Q F0(De)3.666 E(viceButtonPr)-.165 E
(ess)-.198 E F1 -2.365 -.275(ev e)3.666 H(nt is reported.).275 E
(The interpretation of the remaining ar)72 217.6 Q(guments is as for)
-.198 E F0(XGrabDe)3.666 E(vice)-.165 E F1 5.5(.T).916 G(he acti)-5.5 E
.33 -.165(ve g)-.275 H(rab is termi-).165 E
(nated automatically when logical state of the de)72 230.6 Q
(vice has all b)-.275 E(uttons released \(independent of the)-.22 E
(logical state of the modi\214er k)72 243.6 Q -.165(ey)-.11 G(s\).).165
E(Note that the logical state of a de)72 260.5 Q
(vice \(as seen by means of the X protocol\) may lag the ph)-.275 E
(ysical)-.055 E(state if de)72 273.5 Q(vice e)-.275 E -.165(ve)-.275 G
(nt processing is frozen.).165 E 2.75(Am)72 290.4 S(odi\214er of)-2.75 E
F0(AnyModi\214er)3.666 E F1(is equi)3.666 E -.275(va)-.275 G
(lent to issuing the request for all possible modi\214er combina-).275 E
(tions \(including the combination of no modi\214ers\).)72 303.4 Q
(It is not required that all modi\214ers speci\214ed)5.5 E(ha)72 316.4 Q
.33 -.165(ve c)-.22 H(urrently assigned k).165 E -.165(ey)-.11 G 2.75
(codes. A).165 F -.22(bu)2.75 G(tton of).22 E F0(AnyButton)3.666 E F1
(is equi)3.666 E -.275(va)-.275 G(lent to issuing the request for).275 E
(all possible b)72 329.4 Q 2.75(uttons. Otherwise,)-.22 F
(it is not required that the speci\214ed b)2.75 E
(utton be assigned to a ph)-.22 E(ysi-)-.055 E(cal b)72 342.4 Q(utton.)
-.22 E F0(XGrabDe)72.916 359.3 Q(viceButton)-.165 E F1(generates a)3.666
E F0(BadAccess)3.666 E F1(error if some other client has issued a)3.666
E F0(XGrabDe-)3.666 E(viceButton)72 372.3 Q F1(with the same de)3.666 E
(vice and b)-.275 E(utton combination on the same windo)-.22 E 4.18
-.715(w. W)-.275 H(hen using).715 E F0(AnyModi\214er)72.916 385.3 Q F1
(or)3.666 E F0(AnyButton)3.666 E F1 2.75(,t).916 G(he request f)-2.75 E
(ails completely and the X serv)-.11 E(er generates a)-.165 E F0(BadAc-)
3.666 E(cess)72 398.3 Q F1(error and no grabs are established if there \
is a con\215icting grab for an)3.666 E 2.75(yc)-.165 G(ombination.)-2.75
E F0(XGrabDe)72.916 415.2 Q(viceButton)-.165 E F1(can generate)3.666 E
F0(BadAccess)3.666 E F1(,).916 E F0(BadClass)3.666 E F1(,).916 E F0
(BadDe)3.666 E(vice)-.165 E F1(,).916 E F0(BadMatch)3.666 E F1(,).916 E
F0(BadV)3.666 E(alue)-1.012 E F1(,).916 E(and)72 428.2 Q F0(BadW)3.666 E
(indo)-.198 E(w)-.11 E F1(errors.)3.666 E 1.76 -.88(To r)72 458.1 T
(elease a passi).88 E .33 -.165(ve g)-.275 H(rab of a b).165 E
(utton on an e)-.22 E(xtension de)-.165 E(vice, use)-.275 E F0
(XUngrabDe)3.666 E(viceButton)-.165 E F1(.).916 E F0(12)282.5 769 Q 0 Cg
EP
%%Page: 13 15
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF 2.75(XI)72 49 S(nput Extension Library)-2.75 E
(X11, Release 6.4)229.413 E .44 LW 36 76.75 36 87.75 DL 36 74.75 36
85.75 DL 41.5 73 36 73 DL 43.5 73 38 73 DL 49 73 43.5 73 DL/F1 11
/Times-Roman@0 SF(int XUngrabDe)72 88.9 Q(viceButton\()-.275 E/F2 11
/Times-Italic@0 SF(display)A F1(,).916 E F2(de)2.75 E(vice)-.165 E F1(,)
.916 E F2 -.22(bu)2.75 G(tton).22 E F1(,).916 E F2(modi\214er)2.75 E(s)
-.11 E F1(,).916 E F2(modi\214er_de)2.75 E(vice)-.165 E F1(,).916 E F2
(ungr)2.75 E(ab_window)-.165 E F1(\)).916 E(Display *)85.75 101.9 Q F2
(display)A F1(;).916 E(XDe)85.75 114.9 Q(vice *)-.275 E F2(de)A(vice)
-.165 E F1(;).916 E(unsigned int)85.75 127.9 Q F2 -.22(bu)2.75 G(tton)
.22 E F1(;).916 E(unsigned int)85.75 140.9 Q F2(modi\214er)2.75 E(s)-.11
E F1(;).916 E(XDe)85.75 153.9 Q(vice *)-.275 E F2(modi\214er_de)A(vice)
-.165 E F1(;).916 E -.44(Wi)85.75 166.9 S(ndo).44 E(w)-.275 E F2(ungr)
2.75 E(ab_window)-.165 E F1(;).916 E F2(display)72 187.7 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2(de)72 204.6 Q(vice)-.165 E F1(Speci\214es the desired de)44.071 E
(vice.)-.275 E F2 -.22(bu)72 221.5 S(tton).22 E F1
(Speci\214es the code of the b)44.104 E(utton that is to be ungrabbed.)
-.22 E -1.21(Yo)5.5 G 2.75(uc)1.21 G(an pass either a)-2.75 E -.22(bu)
144 234.5 S(tton or).22 E F0(AnyButton)3.666 E F1(.).916 E F2
(modi\214er)72 251.4 Q(s)-.11 E F1(Speci\214es the set of k)31.168 E
-.165(ey)-.11 G 2.75(masks. This).165 F(mask is the bitwise inclusi)2.75
E .33 -.165(ve O)-.275 H 2.75(Ro).165 G 2.75(ft)-2.75 G(hese)-2.75 E
-.11(ke)144 264.4 S(ymask bits:)-.055 E F0(ShiftMask)3.666 E F1(,).916 E
F0(LockMask)3.666 E F1(,).916 E F0(Contr)3.666 E(olMask)-.198 E F1(,)
.916 E F0(Mod1Mask)3.666 E F1(,).916 E F0(Mod2Mask)144.916 277.4 Q F1(,)
.916 E F0(Mod3Mask)3.666 E F1(,).916 E F0(Mod4Mask)3.666 E F1 2.75(,a)
.916 G(nd)-2.75 E F0(Mod5Mask)3.666 E F1(.).916 E -1.21(Yo)144 294.3 S
2.75(uc)1.21 G(an also pass)-2.75 E F0(AnyModi\214er)3.666 E F1 2.75(,w)
.916 G(hich is equi)-2.75 E -.275(va)-.275 G
(lent to issuing the ungrab k).275 E -.165(ey)-.11 G(request for all po\
ssible modi\214er combinations \(including the combination of no)144
307.3 Q(modi\214ers\).)144 320.3 Q F2(modi\214er_de)72 337.2 Q(vice)
-.165 E F1(Speci\214es the de)144 350.2 Q
(vice whose modi\214ers are to be used.)-.275 E
(If NULL is speci\214ed, the)5.5 E(core X k)144 363.2 Q -.165(ey)-.11 G
(board is used as the modi\214er_de).165 E(vice.)-.275 E F2(ungr)72
380.1 Q(ab_window)-.165 E F1(Speci\214es the ID of a windo)144 393.1 Q
2.75(wa)-.275 G(ssociated with the de)-2.75 E(vice speci\214ed abo)-.275
E -.165(ve)-.165 G(.).165 E 36 388.75 36 399.75 DL 36 386.75 36 397.75
DL 41.5 398 36 398 DL 43.5 398 38 398 DL 49 398 43.5 398 DL F0
(XUngrabDe)72.916 423 Q(viceButton)-.165 E F1(is analogous to the core)
3.666 E F0(XUngrabButton)3.666 E F1 2.75(function. It)3.666 F
(releases an)2.75 E -.165(ex)72 436 S(plicit passi).165 E .33 -.165
(ve g)-.275 H(rab for a b).165 E(utton on an e)-.22 E(xtension de)-.165
E 2.75(vice. That)-.275 F(de)2.75 E(vice must ha)-.275 E .33 -.165(ve p)
-.22 H(re).165 E(viously been)-.275 E(opened using the)72 449 Q F0
(XOpenDe)3.666 E(vice)-.165 E F1(function, or a)3.666 E F0(BadDe)3.666 E
(vice)-.165 E F1(error will result.)3.666 E 2.75(Am)72 465.9 S
(odi\214er of)-2.75 E F0(AnyModi\214er)3.666 E F1(is equi)3.666 E -.275
(va)-.275 G
(lent to issuing the request for all possible modi\214er combina-).275 E
(tions \(including the combination of no modi\214ers\).)72 478.9 Q F0
(XUngrabDe)72.916 495.8 Q(viceButton)-.165 E F1(can generate)3.666 E F0
(BadAlloc)3.666 E F1(,).916 E F0(BadDe)3.666 E(vice)-.165 E F1(,).916 E
F0(BadMatch)3.666 E F1(,).916 E F0(BadV)3.666 E(alue)-1.012 E F1 2.75
(,a).916 G(nd)-2.75 E F0(Bad-)3.666 E -.198(Wi)72 508.8 S(ndo).198 E(w)
-.11 E F1(errors.)3.666 E F0 2.75(2.1.6. Thawing)72 534.8 R 2.75(aD)2.75
G -.165(ev)-2.75 G(ice).165 E F1 1.76 -.88(To a)72 551.7 T(llo).88 E
2.75(wf)-.275 G(urther e)-2.75 E -.165(ve)-.275 G
(nts to be processed when a de).165 E(vice has been frozen, use)-.275 E
F0(XAllo)3.666 E(wDe-)-.11 E(viceEv)72 564.7 Q(ents)-.11 E F1(.).916 E
F0(13)282.5 769 Q 0 Cg EP
%%Page: 14 16
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF 2.75(XI)72 49 S(nput Extension Library)-2.75 E
(X11, Release 6.4)229.413 E .44 LW 36 76.75 36 87.75 DL 36 74.75 36
85.75 DL 41.5 73 36 73 DL 43.5 73 38 73 DL 49 73 43.5 73 DL/F1 11
/Times-Roman@0 SF(int XAllo)72 88.9 Q(wDe)-.275 E(viceEv)-.275 E(ents\()
-.165 E/F2 11/Times-Italic@0 SF(display)A F1(,).916 E F2(de)2.75 E(vice)
-.165 E F1(,).916 E F2 -.165(ev)2.75 G(ent_mode).165 E F1(,).916 E F2
(time)2.75 E F1(\)).916 E(Display *)85.75 101.9 Q F2(display)A F1(;).916
E(XDe)85.75 114.9 Q(vice *)-.275 E F2(de)A(vice)-.165 E F1(;).916 E(int)
85.75 127.9 Q F2 -.165(ev)2.75 G(ent_mode).165 E F1(;).916 E -.385(Ti)
85.75 140.9 S(me).385 E F2(time)2.75 E F1(;).916 E F2(display)72 161.7 Q
F1(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605
E F2(de)72 178.6 Q(vice)-.165 E F1(Speci\214es the desired de)44.071 E
(vice.)-.275 E F2 -.165(ev)72 195.5 S(ent_mode).165 E F1
(Speci\214es the e)19.629 E -.165(ve)-.275 G(nt mode.).165 E -1.21(Yo)
5.5 G 2.75(uc)1.21 G(an pass one of these constants:)-2.75 E F0
(AsyncThisDe-)3.666 E(vice)144 208.5 Q F1(,).916 E F0(SyncThisDe)3.666 E
(vice)-.165 E F1(,).916 E F0(AsyncOtherDe)3.666 E(vices)-.165 E F1(,)
.916 E F0(ReplayThisDe)3.666 E(vice)-.165 E F1(,).916 E F0(AsyncAll)
3.666 E F1 2.75(,o).916 G(r)-2.75 E F0(SyncAll)144.916 221.5 Q F1(.).916
E F2(time)72 238.4 Q F1(Speci\214es the time.)53.058 E
(This may be either a timestamp e)5.5 E(xpressed in milliseconds, or)
-.165 E F0(Curr)144.916 251.4 Q(entT)-.198 E(ime)-.198 E F1(.).916 E 36
247.05 36 258.05 DL 36 245.05 36 256.05 DL 41.5 256.3 36 256.3 DL 43.5
256.3 38 256.3 DL 49 256.3 43.5 256.3 DL F0(XAllo)72.916 281.3 Q(wDe)
-.11 E(viceEv)-.165 E(ents)-.11 E F1(releases some queued e)3.666 E
-.165(ve)-.275 G(nts if the client has caused a de).165 E
(vice to freeze.)-.275 E(It)5.5 E(has no ef)72 294.3 Q(fect if the spec\
i\214ed time is earlier than the last-grab time of the most recent acti)
-.275 E .33 -.165(ve g)-.275 H(rab).165 E(for the client and de)72 307.3
Q(vice, or if the speci\214ed time is later than the current X serv)
-.275 E(er time.)-.165 E(The fol-)5.5 E(lo)72 320.3 Q(wing describes th\
e processing that occurs depending on what constant you pass to the)
-.275 E -2.365 -.275(ev e)72 333.3 T(nt_mode ar).275 E(gument:)-.198 E
<83>72 350.2 Q F0(AsyncThisDe)24.566 E(vice)-.165 E F1
(If the speci\214ed de)99.5 367.1 Q(vice is frozen by the client, e)
-.275 E -.165(ve)-.275 G(nt processing for that continues as usual.).165
E(If the de)99.5 380.1 Q(vice is frozen multiple times by the client on\
 behalf of multiple separate grabs,)-.275 E F0(AsyncThisDe)100.416 393.1
Q(vice)-.165 E F1(tha)3.666 E(ws for all.)-.165 E F0(AsyncThisDe)6.416 E
(vice)-.165 E F1(has no ef)3.666 E(fect if the speci\214ed de)-.275 E
(vice is)-.275 E(not frozen by the client, b)99.5 406.1 Q(ut the de)-.22
E(vice need not be grabbed by the client.)-.275 E<83>72 423 Q F0
(SyncThisDe)24.566 E(vice)-.165 E F1(If the speci\214ed de)99.5 439.9 Q
(vice is frozen and acti)-.275 E -.165(ve)-.275 G
(ly grabbed by the client, e).165 E -.165(ve)-.275 G
(nt processing for that).165 E(de)99.5 452.9 Q
(vice continues normally until the ne)-.275 E(xt k)-.165 E .33 -.165
(ey o)-.11 H 2.75(rb).165 G(utton e)-2.97 E -.165(ve)-.275 G
(nt is reported to the client.).165 E(At)5.5 E
(this time, the speci\214ed de)99.5 465.9 Q(vice ag)-.275 E
(ain appears to freeze.)-.055 E(Ho)5.5 E(we)-.275 E -.165(ve)-.275 G .88
-.44(r, i).165 H 2.75(ft).44 G(he reported e)-2.75 E -.165(ve)-.275 G
(nt).165 E(causes the grab to be released, the speci\214ed de)99.5 478.9
Q(vice does not freeze.)-.275 E F0(SyncThisDe)6.416 E(vice)-.165 E F1
(has)3.666 E(no ef)99.5 491.9 Q(fect if the speci\214ed de)-.275 E
(vice is not frozen by the client or is not grabbed by the client.)-.275
E<83>72 508.8 Q F0(ReplayThisDe)24.566 E(vice)-.165 E F1
(If the speci\214ed de)99.5 525.7 Q(vice is acti)-.275 E -.165(ve)-.275
G(ly grabbed by the client and is frozen as the result of an).165 E
-2.365 -.275(ev e)99.5 538.7 T(nt ha).275 E
(ving been sent to the client \(either from the acti)-.22 E -.275(va)
-.275 G(tion of a).275 E F0(GrabDe)3.666 E(viceButton)-.165 E F1(or)
3.666 E(from a pre)99.5 551.7 Q(vious)-.275 E F0(Allo)3.666 E(wDe)-.11 E
(viceEv)-.165 E(ents)-.11 E F1(with mode)3.666 E F0(SyncThisDe)3.666 E
(vice)-.165 E F1 2.75(,b).916 G(ut not from a)-2.97 E F0(Grab)3.666 E F1
(\),).916 E(the grab is released and that e)99.5 564.7 Q -.165(ve)-.275
G(nt is completely reprocessed.).165 E(This time, ho)5.5 E(we)-.275 E
-.165(ve)-.275 G .88 -.44(r, t).165 H(he).44 E(request ignores an)99.5
577.7 Q 2.75(yp)-.165 G(assi)-2.75 E .33 -.165(ve g)-.275 H
(rabs at or abo).165 E .33 -.165(ve \()-.165 H(to).165 E -.11(wa)-.275 G
(rd the root\) the grab-windo).11 E 2.75(wo)-.275 G 2.75(ft)-2.75 G
(he grab)-2.75 E(just released.)99.5 590.7 Q(The request has no ef)5.5 E
(fect if the speci\214ed de)-.275 E(vice is not grabbed by the client)
-.275 E(or if it is not frozen as the result of an e)99.5 603.7 Q -.165
(ve)-.275 G(nt.).165 E<83>72 620.6 Q F0(AsyncOtherDe)24.566 E(vices)
-.165 E F1(If the remaining de)99.5 637.5 Q
(vices are frozen by the client, e)-.275 E -.165(ve)-.275 G
(nt processing for them continues as).165 E 2.75(usual. If)99.5 650.5 R
(the other de)2.75 E(vices are frozen multiple times)-.275 E
(by the client on behalf of multiple)5.5 E(separate grabs,)99.5 663.5 Q
F0(AsyncOtherDe)3.666 E(vices)-.165 E F1 -.814(``)3.666 G(tha).814 E
(ws')-.165 E 2.75('f)-.814 G(or all.)-2.75 E F0(AsyncOtherDe)6.416 E
(vices)-.165 E F1(has no ef)3.666 E(fect if)-.275 E(the de)99.5 676.5 Q
(vices are not frozen by the client, b)-.275 E(ut those de)-.22 E
(vices need not be grabbed by the client.)-.275 E<83>72 693.4 Q F0
(SyncAll)24.566 E F1(If all de)99.5 710.3 Q
(vices are frozen by the client, e)-.275 E -.165(ve)-.275 G
(nt processing \(for all de).165 E(vices\) continues normally)-.275 E
(until the ne)99.5 723.3 Q(xt b)-.165 E(utton or k)-.22 E .33 -.165
(ey e)-.11 H -.165(ve)-.11 G
(nt is reported to the client for a grabbed de).165 E(vice, at which)
-.275 E F0(14)282.5 769 Q 0 Cg EP
%%Page: 15 17
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF 2.75(XI)72 49 S(nput Extension Library)-2.75 E
(X11, Release 6.4)229.413 E/F1 11/Times-Roman@0 SF(time the de)99.5 85 Q
(vices ag)-.275 E(ain appear to freeze.)-.055 E(Ho)5.5 E(we)-.275 E
-.165(ve)-.275 G .88 -.44(r, i).165 H 2.75(ft).44 G(he reported e)-2.75
E -.165(ve)-.275 G(nt causes the grab to).165 E
(be released, then the de)99.5 98 Q(vices do not freeze \(b)-.275 E
(ut if an)-.22 E 2.75(yd)-.165 G -.275(ev)-2.75 G
(ice is still grabbed, then a subse-).275 E(quent e)99.5 111 Q -.165(ve)
-.275 G(nt for it will still cause all de).165 E(vices to freeze\).)
-.275 E F0(SyncAll)6.416 E F1(has no ef)3.666 E(fect unless all)-.275 E
(de)99.5 124 Q(vices are frozen by the client.)-.275 E(If an)5.5 E 2.75
(yd)-.165 G -.275(ev)-2.75 G
(ice is frozen twice by the client on behalf of tw).275 E(o)-.11 E
(separate grabs,)99.5 137 Q F0(SyncAll)3.666 E F1("tha)3.666 E
(ws" for both \(b)-.165 E(ut a subsequent freeze for)-.22 E F0(SyncAll)
3.666 E F1(will freeze)3.666 E(each de)99.5 150 Q(vice only once\).)
-.275 E<83>72 166.9 Q F0(AsyncAll)24.566 E F1(If all de)99.5 183.8 Q
(vices are frozen by the client, e)-.275 E -.165(ve)-.275 G
(nt processing \(for all de).165 E(vices\) continues normally)-.275 E(.)
-.715 E(If an)99.5 196.8 Q 2.75(yd)-.165 G -.275(ev)-2.75 G(ice is froz\
en multiple times by the client on behalf of multiple separate grabs,)
.275 E F0(AsyncAll)100.416 209.8 Q F1 -.814(``)3.666 G(tha).814 E(ws ')
-.165 E('for all.)-.814 E(If an)5.5 E 2.75(yd)-.165 G -.275(ev)-2.75 G
(ice is frozen twice by the client on behalf of tw).275 E 2.75(os)-.11 G
(ep-)-2.75 E(arate grabs,)99.5 222.8 Q F0(AsyncAll)3.666 E F1 -.814(``)
3.666 G(tha).814 E(ws')-.165 E 2.75('f)-.814 G(or both.)-2.75 E F0
(AsyncAll)6.416 E F1(has no ef)3.666 E(fect unless all de)-.275 E
(vices are)-.275 E(frozen by the client.)99.5 235.8 Q F0(AsyncThisDe)
72.916 252.7 Q(vice)-.165 E F1(,).916 E F0(SyncThisDe)3.666 E(vice)-.165
E F1 2.75(,a).916 G(nd)-2.75 E F0(ReplayThisDe)3.666 E(vice)-.165 E F1
(ha)3.666 E .33 -.165(ve n)-.22 H 2.75(oe).165 G -.275(ff)-2.75 G
(ect on the processing of).275 E -2.365 -.275(ev e)72 265.7 T
(nts from the remaining de).275 E(vices.)-.275 E F0(AsyncOtherDe)6.416 E
(vices)-.165 E F1(has no ef)3.666 E(fect on the processing of)-.275 E
-2.365 -.275(ev e)72 278.7 T(nts from the speci\214ed de).275 E 2.75
(vice. When)-.275 F(the e)2.75 E -.165(ve)-.275 G(nt_mode is).165 E F0
(SyncAll)3.666 E F1(or)3.666 E F0(AsyncAll)3.666 E F1 2.75(,t).916 G
(he de)-2.75 E(vice)-.275 E(parameter is ignored.)72 291.7 Q
(It is possible for se)72 308.6 Q -.165(ve)-.275 G(ral grabs of dif).165
E(ferent de)-.275 E(vices \(by the same or dif)-.275 E
(ferent clients\) to be acti)-.275 E -.165(ve)-.275 G(simultaneously)72
321.6 Q 5.5(.I)-.715 G 2.75(fad)-5.5 G -.275(ev)-2.75 G
(ice is frozen on behalf of an).275 E 2.75(yg)-.165 G(rab, no e)-2.75 E
-.165(ve)-.275 G(nt processing is performed for).165 E(the de)72 334.6 Q
2.75(vice. It)-.275 F(is possible for a single de)2.75 E
(vice to be frozen because of se)-.275 E -.165(ve)-.275 G(ral grabs.)
.165 E(In this case,)5.5 E
(the freeze must be released on behalf of each grab before e)72 347.6 Q
-.165(ve)-.275 G(nts can ag).165 E(ain be processed.)-.055 E F0(XAllo)
72.916 364.5 Q(wDe)-.11 E(viceEv)-.165 E(ents)-.11 E F1(can generate)
3.666 E F0(BadDe)3.666 E(vice)-.165 E F1(and)3.666 E F0(BadV)3.666 E
(alue)-1.012 E F1(errors.)3.666 E F0 2.75(2.1.7. Contr)72 390.5 R
(olling De)-.198 E(vice F)-.165 E(ocus)-.275 E F1
(The current focus windo)72 407.4 Q 2.75(wf)-.275 G(or an e)-2.75 E
(xtension input de)-.165 E(vice can be determined using the)-.275 E F0
(XGetDe-)3.666 E(viceF)72 420.4 Q(ocus)-.275 E F1 2.75
(function. Extension)3.666 F(de)2.75 E(vices are focused using the)-.275
E F0(XSetDe)3.666 E(viceF)-.165 E(ocus)-.275 E F1(function in the)3.666
E(same w)72 433.4 Q(ay that the k)-.11 E -.165(ey)-.11 G
(board is focused using the core).165 E F0(XSetInputF)3.666 E(ocus)-.275
E F1(function, e)3.666 E(xcept that a)-.165 E(de)72 446.4 Q
(vice ID is passed as a function parameter)-.275 E 5.5(.O)-.605 G
(ne additional focus state,)-5.5 E F0 -.275(Fo)3.666 G(llo).275 E(wK)
-.11 E(eyboard)-.275 E F1 2.75(,i).916 G(s)-2.75 E(pro)72 459.4 Q
(vided for e)-.165 E(xtension de)-.165 E(vices.)-.275 E 1.76 -.88(To g)
72 476.3 T(et the current focus state, re).88 E -.165(ve)-.275 G
(rt state, and focus time of an e).165 E(xtension de)-.165 E(vice, use)
-.275 E F0(XGetDe-)3.666 E(viceF)72 489.3 Q(ocus)-.275 E F1(.).916 E F0
(15)282.5 769 Q 0 Cg EP
%%Page: 16 18
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF 2.75(XI)72 49 S(nput Extension Library)-2.75 E
(X11, Release 6.4)229.413 E .44 LW 36 76.75 36 87.75 DL 36 74.75 36
85.75 DL 41.5 73 36 73 DL 43.5 73 38 73 DL 49 73 43.5 73 DL/F1 11
/Times-Roman@0 SF(int XGetDe)72 88.9 Q(viceF)-.275 E(ocus\()-.165 E/F2
11/Times-Italic@0 SF(display)A F1(,).916 E F2(de)2.75 E(vice)-.165 E F1
(,).916 E F2(focus_r)2.75 E(eturn)-.407 E F1(,).916 E F2 -2.101 -.407
(re v)2.75 H(ert_to_r).407 E(eturn)-.407 E F1(,).916 E F2(focus_time_r)
2.75 E(eturn)-.407 E F1(\)).916 E(Display *)85.75 101.9 Q F2(display)A
F1(;).916 E(XDe)85.75 114.9 Q(vice *)-.275 E F2(de)A(vice)-.165 E F1(;)
.916 E -.44(Wi)85.75 127.9 S(ndo).44 E 2.75(w*)-.275 G F2(focus_r)-2.75
E(eturn)-.407 E F1(;).916 E(int *)85.75 140.9 Q F2 -2.101 -.407(re v)D
(ert_to_r).407 E(eturn)-.407 E F1(;).916 E -.385(Ti)85.75 153.9 S(me *)
.385 E F2(focus_time_r)A(eturn)-.407 E F1(;).916 E F2(display)72 174.7 Q
F1(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605
E F2(de)72 191.6 Q(vice)-.165 E F1(Speci\214es the desired de)44.071 E
(vice.)-.275 E F2(focus_r)72 208.5 Q(eturn)-.407 E F1
(Speci\214es the address of a v)16.186 E(ariable into which the serv)
-.275 E(er can return the ID of the)-.165 E(windo)144 221.5 Q 2.75(wt)
-.275 G(hat contains the de)-2.75 E(vice focus or one of the constants)
-.275 E F0(None)3.666 E F1(,).916 E F0 -.22(Po)3.666 G(inter).22 E(-)
-.407 E(Root)144 234.5 Q F1 2.75(,o).916 G(r)-2.75 E F0 -.275(Fo)3.666 G
(llo).275 E(wK)-.11 E(eyboard)-.275 E F1(.).916 E F2 -2.101 -.407(re v)
72 251.4 T(ert_to_r).407 E(eturn)-.407 E F1
(Speci\214es the address of a v)144 264.4 Q(ariable into which the serv)
-.275 E(er can return the current)-.165 E(re)144 277.4 Q -.165(ve)-.275
G(rt_to status for the de).165 E(vice.)-.275 E F2(focus_time_r)72 294.3
Q(eturn)-.407 E F1(Speci\214es the address of a v)144 307.3 Q
(ariable into which the serv)-.275 E(er can return the focus time)-.165
E(last set for the de)144 320.3 Q(vice.)-.275 E 36 315.95 36 326.95 DL
36 313.95 36 324.95 DL 41.5 325.2 36 325.2 DL 43.5 325.2 38 325.2 DL 49
325.2 43.5 325.2 DL F0(XGetDe)72.916 350.2 Q(viceF)-.165 E(ocus)-.275 E
F1(returns the focus state, the re)3.666 E -.165(ve)-.275 G
(rt-to state, and the last-focus-time for an e).165 E(xten-)-.165 E
(sion input de)72 363.2 Q(vice.)-.275 E F0(XGetDe)72.916 380.1 Q(viceF)
-.165 E(ocus)-.275 E F1(can generate)3.666 E F0(BadDe)3.666 E(vice)-.165
E F1(and)3.666 E F0(BadMatch)3.666 E F1(errors.)3.666 E 1.76 -.88(To s)
72 410 T(et the focus of an e).88 E(xtension de)-.165 E(vice, use)-.275
E F0(XSetDe)3.666 E(viceF)-.165 E(ocus)-.275 E F1(.).916 E 36 427.75 36
438.75 DL 36 425.75 36 436.75 DL 41.5 424 36 424 DL 43.5 424 38 424 DL
49 424 43.5 424 DL(int XSetDe)72 439.9 Q(viceF)-.275 E(ocus\()-.165 E F2
(display)A F1(,).916 E F2(de)2.75 E(vice)-.165 E F1(,).916 E F2(focus)
2.75 E F1(,).916 E F2 -2.101 -.407(re v)2.75 H(ert_to).407 E F1(,).916 E
F2(time)2.75 E F1(\)).916 E(Display *)83 452.9 Q F2(display)A F1(;).916
E(XDe)83 465.9 Q(vice *)-.275 E F2(de)A(vice)-.165 E F1(;).916 E -.44
(Wi)83 478.9 S(ndo).44 E(w)-.275 E F2(focus)2.75 E F1(;).916 E(int)83
491.9 Q F2 -2.101 -.407(re v)2.75 H(ert_to).407 E F1(;).916 E -.385(Ti)
83 504.9 S(me).385 E F2(time)2.75 E F1(;).916 E F2(display)72 525.7 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2(de)72 542.6 Q(vice)-.165 E F1(Speci\214es the desired de)44.071 E
(vice.)-.275 E F2(focus)72 559.5 Q F1(Speci\214es the ID of the windo)
48.779 E 2.75(wt)-.275 G 2.75(ow)-2.75 G(hich the de)-2.75 E(vice')-.275
E 2.75(sf)-.605 G(ocus should be set.)-2.75 E(This)5.5 E(may be a windo)
144 572.5 Q 2.75(wI)-.275 G(D, or)-2.75 E F0 -.22(Po)3.666 G(interRoot)
.22 E F1(,).916 E F0 -.275(Fo)3.666 G(llo).275 E(wK)-.11 E(eyboard)-.275
E F1 2.75(,o).916 G(r)-2.75 E F0(None)3.666 E F1(.).916 E F2 -2.101
-.407(re v)72 589.4 T(ert_to).407 E F1(Speci\214es to which windo)32.246
E 2.75(wt)-.275 G(he focus of the de)-2.75 E(vice should re)-.275 E
-.165(ve)-.275 G(rt if the focus win-).165 E(do)144 602.4 Q 2.75(wb)
-.275 G(ecomes not vie)-2.75 E -.11(wa)-.275 G 2.75(ble. One).11 F
(of the follo)2.75 E(wing constants may be passed:)-.275 E F0(Re)144.916
615.4 Q -.11(ve)-.165 G(rtT).11 E(oP)-1.012 E(ar)-.11 E(ent)-.198 E F1
(,).916 E F0(Re)3.666 E -.11(ve)-.165 G(rtT).11 E(oP)-1.012 E
(ointerRoot)-.22 E F1(,).916 E F0(Re)3.666 E -.11(ve)-.165 G(rtT).11 E
(oNone)-1.012 E F1 2.75(,o).916 G(r)-2.75 E F0(Re)3.666 E -.11(ve)-.165
G(rtT).11 E(oF)-1.012 E(ol-)-.275 E(lo)144 628.4 Q(wK)-.11 E(eyboard)
-.275 E F1(.).916 E F2(time)72 645.3 Q F1(Speci\214es the time.)53.058 E
-1.21(Yo)5.5 G 2.75(uc)1.21 G(an pass either a timestamp, e)-2.75 E
(xpressed in milliseconds,)-.165 E(or)144 658.3 Q F0(Curr)3.666 E(entT)
-.198 E(ime)-.198 E F1(.).916 E 36 653.95 36 664.95 DL 36 651.95 36
662.95 DL 41.5 663.2 36 663.2 DL 43.5 663.2 38 663.2 DL 49 663.2 43.5
663.2 DL F0(XSetDe)72.916 688.2 Q(viceF)-.165 E(ocus)-.275 E F1
(changes the focus for an e)3.666 E(xtension input de)-.165 E
(vice and the last-focus-change-)-.275 E 2.75(time. It)72 701.2 R
(has no ef)2.75 E(fect if the speci\214ed time is earlier than the last\
-focus-change-time or is later than)-.275 E(the current X serv)72 714.2
Q(er time.)-.165 E
(Otherwise, the last-focus-change-time is set to the speci\214ed time.)
5.5 E(This)5.5 E(function causes the X serv)72 727.2 Q(er to generate)
-.165 E F0(De)3.666 E(viceF)-.165 E(ocusIn)-.275 E F1(and)3.666 E F0(De)
3.666 E(viceF)-.165 E(ocusOut)-.275 E F1 -2.365 -.275(ev e)3.666 H(nts.)
.275 E F0(16)282.5 769 Q 0 Cg EP
%%Page: 17 19
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF 2.75(XI)72 49 S(nput Extension Library)-2.75 E
(X11, Release 6.4)229.413 E/F1 11/Times-Roman@0 SF(The action tak)72 85
Q(en by the serv)-.11 E
(er when this function is requested depends on the v)-.165 E
(alue of the focus)-.275 E(ar)72 98 Q(gument:)-.198 E 23.65<8349>72
114.9 S 2.75(ft)-23.65 G(he focus ar)-2.75 E(gument is)-.198 E F0(None)
3.666 E F1 2.75(,a).916 G(ll input e)-2.75 E -.165(ve)-.275 G
(nts from this de).165 E(vice will be discarded until a)-.275 E(ne)99.5
127.9 Q 2.75(wf)-.275 G(ocus windo)-2.75 E 2.75(wi)-.275 G 2.75(ss)-2.75
G 2.75(et. In)-2.75 F(this case, the re)2.75 E -.165(ve)-.275 G
(rt_to ar).165 E(gument is ignored.)-.198 E 23.65<8349>72 144.8 S 2.75
(ft)-23.65 G(he focus ar)-2.75 E(gument is a windo)-.198 E 2.75(wI)-.275
G(D, it becomes the focus windo)-2.75 E 2.75(wo)-.275 G 2.75(ft)-2.75 G
(he de)-2.75 E 2.75(vice. If)-.275 F(an)2.75 E(input e)99.5 157.8 Q
-.165(ve)-.275 G(nt from the de).165 E(vice w)-.275 E
(ould normally be reported to this windo)-.11 E 2.75(wo)-.275 G 2.75(rt)
-2.75 G 2.75(oo)-2.75 G(ne of its infe-)-2.75 E(riors, the e)99.5 170.8
Q -.165(ve)-.275 G(nt is reported normally).165 E 5.5(.O)-.715 G
(therwise, the e)-5.5 E -.165(ve)-.275 G(nt is reported relati).165 E
.33 -.165(ve t)-.275 H 2.75(ot).165 G(he focus)-2.75 E(windo)99.5 183.8
Q -.715(w.)-.275 G 23.65<8349>72 200.7 S 2.75(ft)-23.65 G(he focus ar)
-2.75 E(gument is)-.198 E F0 -.22(Po)3.666 G(interRoot).22 E F1 2.75(,t)
.916 G(he focus windo)-2.75 E 2.75(wi)-.275 G 2.75(sd)-2.75 G
(ynamically tak)-2.75 E(en to be the root)-.11 E(windo)99.5 213.7 Q 2.75
(wo)-.275 G 2.75(fw)-2.75 G(hate)-2.75 E -.165(ve)-.275 G 2.75(rs).165 G
(creen the pointer is on at each input e)-2.75 E -.165(ve)-.275 G 2.75
(nt. In).165 F(this case, the re)2.75 E -.165(ve)-.275 G(rt_to).165 E
(ar)99.5 226.7 Q(gument is ignored.)-.198 E 23.65<8349>72 243.6 S 2.75
(ft)-23.65 G(he focus ar)-2.75 E(gument is)-.198 E F0 -.275(Fo)3.666 G
(llo).275 E(wK)-.11 E(eyboard)-.275 E F1 2.75(,t).916 G(he focus windo)
-2.75 E 2.75(wi)-.275 G 2.75(sd)-2.75 G(ynamically tak)-2.75 E(en to be)
-.11 E(the same as the focus of the X k)99.5 256.6 Q -.165(ey)-.11 G
(board at each input e).165 E -.165(ve)-.275 G(nt.).165 E
(The speci\214ed focus windo)72 273.5 Q 2.75(wm)-.275 G(ust be vie)-2.75
E -.11(wa)-.275 G(ble at the time).11 E F0(XSetDe)3.666 E(viceF)-.165 E
(ocus)-.275 E F1(is called.)3.666 E(Other)5.5 E(-)-.22 E
(wise, it generates a)72 286.5 Q F0(BadMatch)3.666 E F1(error)3.666 E
5.5(.I)-.605 G 2.75(ft)-5.5 G(he focus windo)-2.75 E 2.75(wl)-.275 G
(ater becomes not vie)-2.75 E -.11(wa)-.275 G(ble, the X).11 E(serv)72
299.5 Q(er e)-.165 E -.275(va)-.275 G(luates the re).275 E -.165(ve)
-.275 G(rt_to ar).165 E(gument to determine the ne)-.198 E 2.75(wf)-.275
G(ocus windo)-2.75 E -.715(w.)-.275 G 23.65<8349>72 316.4 S 2.75(ft)
-23.65 G(he re)-2.75 E -.165(ve)-.275 G(rt_to ar).165 E(gument is)-.198
E F0(Re)3.666 E -.11(ve)-.165 G(rtT).11 E(oP)-1.012 E(ar)-.11 E(ent)
-.198 E F1 2.75(,t).916 G(he focus re)-2.75 E -.165(ve)-.275 G
(rts to the parent \(or the closest).165 E(vie)99.5 329.4 Q -.11(wa)
-.275 G(ble ancestor\), and the ne).11 E 2.75(wr)-.275 G -2.365 -.275
(ev e)-2.75 H(rt_to v).275 E(alue is tak)-.275 E(en to be)-.11 E F0(Re)
3.666 E -.11(ve)-.165 G(rtT).11 E(oNone)-1.012 E F1(.).916 E 23.65<8349>
72 346.3 S 2.75(ft)-23.65 G(he re)-2.75 E -.165(ve)-.275 G(rt_to ar).165
E(gument is)-.198 E F0(Re)3.666 E -.11(ve)-.165 G(rtT).11 E(oP)-1.012 E
(ointerRoot)-.22 E F1(,).916 E F0(Re)3.666 E -.11(ve)-.165 G(rtT).11 E
(oF)-1.012 E(ollo)-.275 E(wK)-.11 E(eyboard)-.275 E F1 2.75(,o).916 G(r)
-2.75 E F0(Re)100.416 359.3 Q -.11(ve)-.165 G(rtT).11 E(oNone)-1.012 E
F1 2.75(,t).916 G(he focus re)-2.75 E -.165(ve)-.275 G(rts to that v)
.165 E(alue.)-.275 E(When the focus re)72 376.2 Q -.165(ve)-.275 G
(rts, the X serv).165 E(er generates)-.165 E F0(De)3.666 E(viceF)-.165 E
(ocusIn)-.275 E F1(and)3.666 E F0(De)3.666 E(viceF)-.165 E(ocusOut)-.275
E F1 -2.365 -.275(ev e)3.666 H(nts, b).275 E(ut)-.22 E
(the last-focus-change time is not af)72 389.2 Q(fected.)-.275 E F0
(XSetDe)72.916 406.1 Q(viceF)-.165 E(ocus)-.275 E F1(can generate)3.666
E F0(BadDe)3.666 E(vice)-.165 E F1(,).916 E F0(BadMatch)3.666 E F1(,)
.916 E F0(BadV)3.666 E(alue)-1.012 E F1 2.75(,a).916 G(nd)-2.75 E F0
(BadW)3.666 E(indo)-.198 E(w)-.11 E F1(errors.)3.666 E F0 2.75
(2.1.8. Contr)72 432.1 R(olling De)-.198 E(vice F)-.165 E(eedback)-.275
E F1 1.76 -.88(To d)72 449 T
(etermine the current feedback settings of an e).88 E(xtension input de)
-.165 E(vice, use)-.275 E F0(XGetF)3.666 E(eedbackCon-)-.275 E(tr)72 462
Q(ol)-.198 E F1(.).916 E .44 LW 36 479.75 36 490.75 DL 36 477.75 36
488.75 DL 41.5 476 36 476 DL 43.5 476 38 476 DL 49 476 43.5 476 DL
(XFeedbackState * XGetFeedbackControl\()72 491.9 Q/F2 11/Times-Italic@0
SF(display)A F1(,).916 E F2(de)2.75 E(vice)-.165 E F1(,).916 E F2
(num_feedbac)2.75 E(ks_r)-.22 E(eturn)-.407 E F1(\)).916 E(Display *)
85.75 504.9 Q F2(display)A F1(;).916 E(XDe)85.75 517.9 Q(vice *)-.275 E
F2(de)A(vice)-.165 E F1(;).916 E(int *)85.75 530.9 Q F2(num_feedbac)A
(ks_r)-.22 E(eturn)-.407 E F1(;).916 E F2(display)72 551.7 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2(de)72 568.6 Q(vice)-.165 E F1(Speci\214es the desired de)44.071 E
(vice.)-.275 E F2(num_feedbac)72 585.5 Q(ks_r)-.22 E(eturn)-.407 E F1
(Returns the number of feedbacks supported by the de)144 598.5 Q(vice.)
-.275 E 36 594.15 36 605.15 DL 36 592.15 36 603.15 DL 41.5 603.4 36
603.4 DL 43.5 603.4 38 603.4 DL 49 603.4 43.5 603.4 DL F0(XGetF)72.916
628.4 Q(eedbackContr)-.275 E(ol)-.198 E F1(returns a list of)3.666 E F0
-.275(Fe)3.666 G(edbackState).275 E F1
(structures that describe the feedbacks)3.666 E
(supported by the speci\214ed de)72 641.4 Q 2.75(vice. There)-.275 F
(is an)2.75 E F0(XF)3.666 E(eedbackState)-.275 E F1
(structure for each class of feed-)3.666 E 2.75(back. These)72 654.4 R
(are of v)2.75 E(ariable length, b)-.275 E
(ut the \214rst three members are common to all.)-.22 E F0(17)282.5 769
Q 0 Cg EP
%%Page: 18 20
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF 2.75(XI)72 49 S(nput Extension Library)-2.75 E
(X11, Release 6.4)229.413 E .44 LW 36 76.75 36 87.75 DL 36 74.75 36
85.75 DL 41.5 73 36 73 DL 43.5 73 38 73 DL 49 73 43.5 73 DL/F1 11
/Times-Roman@0 SF(typedef struct {)72 91.5 Q(XID class;)108 104.5 Q
(int length;)108 117.5 Q(XID id;)108 130.5 Q 2.75(}X)72 143.5 S
(FeedbackState;)-2.75 E 36 145.65 36 156.65 DL 36 143.65 36 154.65 DL
41.5 154.9 36 154.9 DL 43.5 154.9 38 154.9 DL 49 154.9 43.5 154.9 DL
(The common members are as follo)72 179.9 Q(ws:)-.275 E 23.65<8354>72
196.8 S(he class member identi\214es the class of feedback.)-23.65 E
(It may be compared to constants de\214ned)5.5 E(in the \214le <)99.5
209.8 Q F0(X11/extensions/XI.h).916 E F1 2.75(>. Currently).916 F
(de\214ned feedback constants include:)2.75 E F0(Kbd-)3.666 E -.275(Fe)
99.5 222.8 S(edbackClass).275 E F1(,).916 E F0(PtrF)3.666 E
(eedbackClass)-.275 E F1(,).916 E F0(StringF)3.666 E(eedbackClass)-.275
E F1(,).916 E F0(IntegerF)3.666 E(eedbackClass)-.275 E F1(,).916 E F0
(LedF)100.416 235.8 Q(eedbackClass)-.275 E F1 2.75(,a).916 G(nd)-2.75 E
F0(BellF)3.666 E(eedbackClass)-.275 E F1(.).916 E 23.65<8354>72 252.7 S
(he length member speci\214es the length of the)-23.65 E F0 -.275(Fe)
3.666 G(edbackState).275 E F1(structure and can be used by)3.666 E
(clients to tra)99.5 265.7 Q -.165(ve)-.22 G(rse the list.).165 E 23.65
<8354>72 282.6 S(he id member uniquely identi\214es a feedback for a gi)
-23.65 E -.165(ve)-.275 G 2.75(nd).165 G -.275(ev)-2.75 G
(ice and class.).275 E(This allo)5.5 E(ws a)-.275 E(de)99.5 295.6 Q
(vice to support more than one feedback of the same class.)-.275 E
(Other feedbacks of other)5.5 E(classes or de)99.5 308.6 Q(vices may ha)
-.275 E .33 -.165(ve t)-.22 H(he same ID.).165 E(Those feedbacks equi)72
338.5 Q -.275(va)-.275 G(lent to those supported by the core k).275 E
-.165(ey)-.11 G(board are reported in class).165 E F0(Kbd-)3.666 E -.275
(Fe)72 351.5 S(edback).275 E F1(using the)3.666 E F0(XKbdF)3.666 E
(eedbackState)-.275 E F1(structure, which is de\214ned as follo)3.666 E
(ws:)-.275 E 36 373.15 36 384.15 DL 36 371.15 36 382.15 DL 41.5 369.4 36
369.4 DL 43.5 369.4 38 369.4 DL 49 369.4 43.5 369.4 DL(typedef struct {)
72 387.9 Q(XID class;)108 400.9 Q(int length;)108 413.9 Q(XID id;)108
426.9 Q(int click;)108 439.9 Q(int percent;)108 452.9 Q(int pitch;)108
465.9 Q(int duration;)108 478.9 Q(int led_mask;)108 491.9 Q
(int global_auto_repeat;)108 504.9 Q(char auto_repeats[32];)108 517.9 Q
2.75(}X)72 530.9 S(KbdFeedbackState;)-2.75 E 36 533.05 36 544.05 DL 36
531.05 36 542.05 DL 41.5 542.3 36 542.3 DL 43.5 542.3 38 542.3 DL 49
542.3 43.5 542.3 DL(The additional members of the)72 567.3 Q F0(XKbdF)
3.666 E(eedbackState)-.275 E F1
(structure report the current state of the)3.666 E(feedback:)72 580.3 Q
23.65<8354>72 597.2 S(he click member speci\214es the k)-23.65 E -.165
(ey)-.11 G(-click v).165 E(olume and has a v)-.22 E
(alue in the range 0 \(of)-.275 E(f\) to 100)-.275 E(\(loud\).)99.5
610.2 Q 23.65<8354>72 627.1 S(he percent member speci\214es the bell v)
-23.65 E(olume and has a v)-.22 E(alue in the range 0 \(of)-.275 E
(f\) to 100)-.275 E(\(loud\).)99.5 640.1 Q 23.65<8354>72 657 S
(he pitch member speci\214es the bell pitch in Hz. The range of the v)
-23.65 E(alue is implementation-)-.275 E(dependent.)99.5 670 Q 23.65
<8354>72 686.9 S(he duration member speci\214es the duration in millise\
conds of the bell.)-23.65 E 23.65<8354>72 703.8 S(he led_mask member is\
 a bit mask that describes the current state of up to 32 LEDs.)-23.65 E
(A)5.5 E -.275(va)99.5 716.8 S
(lue of 1 in a bit indicates that the corresponding LED is on.).275 E F0
(18)282.5 769 Q 0 Cg EP
%%Page: 19 21
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF 2.75(XI)72 49 S(nput Extension Library)-2.75 E
(X11, Release 6.4)229.413 E/F1 11/Times-Roman@0 SF 23.65<8354>72 85 S
(he global_auto_repeat member has a v)-23.65 E(alue of)-.275 E F0 -.55
(Au)3.666 G(toRepeatModeOn).55 E F1(or)3.666 E F0 -.55(Au)3.666 G
(toRepeat-).55 E(ModeOff)99.5 98 Q F1(.).916 E 23.65<8354>72 114.9 S
(he auto_repeats member is a bit v)-23.65 E(ector)-.165 E 5.5(.E)-.605 G
(ach bit set to 1 indicates that auto-repeat is)-5.5 E
(enabled for the corresponding k)99.5 127.9 Q -.165(ey)-.11 G 5.5(.T)
-.55 G(he v)-5.5 E(ector is represented as 32 bytes.)-.165 E
(Byte N \(from 0\))5.5 E(contains the bits for k)99.5 140.9 Q -.165(ey)
-.11 G 2.75(s8).165 G 2.75(Nt)-2.75 G 2.75(o8)-2.75 G 2.75(N+7)-2.75 G
2.75(,w)-2.75 G
(ith the least signi\214cant bit in the byte representing)-2.75 E -.11
(ke)99.5 153.9 S 2.75(y8)-.055 G(N.)-2.75 E(Those feedbacks equi)72
183.8 Q -.275(va)-.275 G
(lent to those supported by the core pointer are reported in class).275
E F0(PtrF)3.666 E(eed-)-.275 E(back)72 196.8 Q F1(using the)3.666 E F0
(XPtrF)3.666 E(eedbackState)-.275 E F1
(structure, which is de\214ned as follo)3.666 E(ws:)-.275 E .44 LW 36
218.45 36 229.45 DL 36 216.45 36 227.45 DL 41.5 214.7 36 214.7 DL 43.5
214.7 38 214.7 DL 49 214.7 43.5 214.7 DL(typedef struct {)72 233.2 Q
(XID class;)108 246.2 Q(int length;)108 259.2 Q(XID id;)108 272.2 Q
(int accelNum;)108 285.2 Q(int accelDenom;)108 298.2 Q(int threshold;)
108 311.2 Q 2.75(}X)72 324.2 S(PtrFeedbackState;)-2.75 E 36 326.35 36
337.35 DL 36 324.35 36 335.35 DL 41.5 335.6 36 335.6 DL 43.5 335.6 38
335.6 DL 49 335.6 43.5 335.6 DL(The additional members of the)72 360.6 Q
F0(XPtrF)3.666 E(eedbackState)-.275 E F1
(structure report the current state of the feed-)3.666 E(back:)72 373.6
Q 23.65<8354>72 390.5 S(he accelNum member returns the numerator for th\
e acceleration multiplier)-23.65 E(.)-.605 E 23.65<8354>72 407.4 S(he a\
ccelDenom member returns the denominator for the acceleration multiplie\
r)-23.65 E(.)-.605 E 23.65<8354>72 424.3 S
(he accelDenom member returns the threshold for the acceleration.)-23.65
E(Inte)72 454.2 Q(ger feedbacks are those capable of displaying inte)
-.165 E(ger numbers and reported via the)-.165 E F0(XInte-)3.666 E(gerF)
72 467.2 Q(eedbackState)-.275 E F1 2.75(structure. The)3.666 F
(minimum and maximum v)2.75 E(alues that the)-.275 E 2.75(yc)-.165 G
(an display are)-2.75 E(reported.)72 480.2 Q 36 501.85 36 512.85 DL 36
499.85 36 510.85 DL 41.5 498.1 36 498.1 DL 43.5 498.1 38 498.1 DL 49
498.1 43.5 498.1 DL(typedef struct {)72 516.6 Q(XID class;)108 529.6 Q
(int length;)108 542.6 Q(XID id;)108 555.6 Q(int resolution;)108 568.6 Q
(int minV)108 581.6 Q(al;)-1.221 E(int maxV)108 594.6 Q(al;)-1.221 E
2.75(}X)72 607.6 S(Inte)-2.75 E(gerFeedbackState;)-.165 E 36 609.75 36
620.75 DL 36 607.75 36 618.75 DL 41.5 619 36 619 DL 43.5 619 38 619 DL
49 619 43.5 619 DL(The additional members of the)72 644 Q F0(XIntegerF)
3.666 E(eedbackState)-.275 E F1
(structure report the capabilities of the)3.666 E(feedback:)72 657 Q
23.65<8354>72 673.9 S(he resolution member speci\214es the number of di\
gits that the feedback can display)-23.65 E(.)-.715 E 23.65<8354>72
690.8 S(he minV)-23.65 E(al member speci\214es the minimum v)-1.221 E
(alue that the feedback can display)-.275 E(.)-.715 E 23.65<8354>72
707.7 S(he maxV)-23.65 E(al speci\214es the maximum v)-1.221 E
(alue that the feedback can display)-.275 E(.)-.715 E F0(19)282.5 769 Q
0 Cg EP
%%Page: 20 22
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF 2.75(XI)72 49 S(nput Extension Library)-2.75 E
(X11, Release 6.4)229.413 E/F1 11/Times-Roman@0 SF(String feedbacks are\
 those that can display character information and are reported via the)
72 85 Q F0(XStringF)72.916 98 Q(eedbackState)-.275 E F1 2.75
(structure. Clients)3.666 F(set these feedbacks by passing a list of)
2.75 E F0 -.275(Ke)3.666 G(ySyms).275 E F1(to)3.666 E(be displayed.)72
111 Q(The)5.5 E F0(XGetF)3.666 E(eedbackContr)-.275 E(ol)-.198 E F1
(function returns the set of k)3.666 E .33 -.165(ey s)-.11 H
(ymbols that the feed-).165 E(back can display)72 124 Q 2.75(,a)-.715 G
2.75(sw)-2.75 G
(ell as the maximum number of symbols that can be displayed.)-2.75 E
(The)5.5 E F0(XStringF)72.916 137 Q(eedbackState)-.275 E F1
(structure is de\214ned as follo)3.666 E(ws:)-.275 E .44 LW 36 158.65 36
169.65 DL 36 156.65 36 167.65 DL 41.5 154.9 36 154.9 DL 43.5 154.9 38
154.9 DL 49 154.9 43.5 154.9 DL(typedef struct {)72 173.4 Q(XID class;)
108 186.4 Q(int length;)108 199.4 Q(XID id;)108 212.4 Q
(int max_symbols;)108 225.4 Q 2.75(int num_syms_supported;)108 238.4 R
-2.365 -.275(Ke y)108 251.4 T(Sym *syms_supported;).275 E 2.75(}X)72
264.4 S(StringFeedbackState;)-2.75 E 36 266.55 36 277.55 DL 36 264.55 36
275.55 DL 41.5 275.8 36 275.8 DL 43.5 275.8 38 275.8 DL 49 275.8 43.5
275.8 DL(The additional members of the)72 300.8 Q F0(XStringF)3.666 E
(eedbackState)-.275 E F1(structure report the capabilities of the)3.666
E(feedback:)72 313.8 Q 23.65<8354>72 330.7 S(he max_symbols member spec\
i\214es the maximum number of symbols that can be dis-)-23.65 E(played.)
99.5 343.7 Q 23.65<8354>72 360.6 S(he syms_supported member is a pointe\
r to the list of supported symbols.)-23.65 E 23.65<8354>72 377.5 S(he n\
um_syms_supported member speci\214es the length of the list of supporte\
d symbols.)-23.65 E(Bell feedbacks are those that can generate a sound \
and are reported via the)72 407.4 Q F0(XBellF)3.666 E(eedbackState)-.275
E F1 2.75(structure. Some)72 420.4 R
(implementations may support a bell as part of a)2.75 E F0(KbdF)3.666 E
(eedback)-.275 E F1 2.75(feedback. Class)3.666 F F0(BellF)72.916 433.4 Q
(eedback)-.275 E F1(is pro)3.666 E
(vided for implementations that do not choose to do so and for de)-.165
E(vices that)-.275 E(support multiple feedbacks that can produce sound.)
72 446.4 Q(The meaning of the members is the same as)5.5 E
(that of the corresponding \214elds in the)72 459.4 Q F0(XKbdF)3.666 E
(eedbackState)-.275 E F1(structure.)3.666 E 36 481.05 36 492.05 DL 36
479.05 36 490.05 DL 41.5 477.3 36 477.3 DL 43.5 477.3 38 477.3 DL 49
477.3 43.5 477.3 DL(typedef struct {)72 495.8 Q(XID class;)108 508.8 Q
(int length;)108 521.8 Q(XID id;)108 534.8 Q(int percent;)108 547.8 Q
(int pitch;)108 560.8 Q(int duration;)108 573.8 Q 2.75(}X)72 586.8 S
(BellFeedbackState;)-2.75 E 36 588.95 36 599.95 DL 36 586.95 36 597.95
DL 41.5 598.2 36 598.2 DL 43.5 598.2 38 598.2 DL 49 598.2 43.5 598.2 DL
(Led feedbacks are those that can generate a light and are reported via\
 the)72 623.2 Q F0(XLedF)3.666 E(eedbackState)-.275 E F1 2.75
(structure. Up)72 636.2 R(to 32 lights per feedback are supported.)2.75
E(Each bit in led_mask corresponds to one)5.5 E
(supported light, and the corresponding bit in led_v)72 649.2 Q
(alues indicates whether that light is currently)-.275 E(on \(1\) or of)
72 662.2 Q 2.75(f\()-.275 G 2.75(0\). Some)-2.75 F
(implementations may support leds as part of a)2.75 E F0(KbdF)3.666 E
(eedback)-.275 E F1(feedback.)3.666 E(Class)72 675.2 Q F0(LedF)3.666 E
(eedback)-.275 E F1(is pro)3.666 E
(vided for implementations that do not choose to do so and for de)-.165
E(vices)-.275 E(that support multiple led feedbacks.)72 688.2 Q F0(20)
282.5 769 Q 0 Cg EP
%%Page: 21 23
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF 2.75(XI)72 49 S(nput Extension Library)-2.75 E
(X11, Release 6.4)229.413 E .44 LW 36 76.75 36 87.75 DL 36 74.75 36
85.75 DL 41.5 73 36 73 DL 43.5 73 38 73 DL 49 73 43.5 73 DL/F1 11
/Times-Roman@0 SF(typedef struct {)72 91.5 Q(XID class;)108 104.5 Q
(int length;)108 117.5 Q(XID id;)108 130.5 Q(Mask led_v)108 143.5 Q
(alues;)-.275 E(Mask led_mask;)108 156.5 Q 2.75(}X)72 169.5 S
(LedFeedbackState;)-2.75 E 36 171.65 36 182.65 DL 36 169.65 36 180.65 DL
41.5 180.9 36 180.9 DL 43.5 180.9 38 180.9 DL 49 180.9 43.5 180.9 DL F0
(XGetF)72.916 205.9 Q(eedbackContr)-.275 E(ol)-.198 E F1(can generate)
3.666 E F0(BadDe)3.666 E(vice)-.165 E F1(and)3.666 E F0(BadMatch)3.666 E
F1(errors.)3.666 E 1.76 -.88(To f)72 235.8 T
(ree the information returned by the).88 E F0(XGetF)3.666 E
(eedbackContr)-.275 E(ol)-.198 E F1(function, use)3.666 E F0(XFr)3.666 E
(eeF)-.198 E(eedback-)-.275 E(List)72 248.8 Q F1(.).916 E 36 266.55 36
277.55 DL 36 264.55 36 275.55 DL 41.5 262.8 36 262.8 DL 43.5 262.8 38
262.8 DL 49 262.8 43.5 262.8 DL -.22(vo)72 278.7 S
(id XFreeFeedbackList\().22 E/F2 11/Times-Italic@0 SF(list)A F1(\)).916
E(XFeedbackState *)85.75 291.7 Q F2(list)A F1(;).916 E F2(list)72 312.5
Q F1(Speci\214es the pointer to the)58.547 E F0(XF)3.666 E(eedbackState)
-.275 E F1(structure returned by a pre)3.666 E(vious call)-.275 E(to)144
325.5 Q F0(XGetF)3.666 E(eedbackContr)-.275 E(ol)-.198 E F1(.).916 E 36
321.15 36 332.15 DL 36 319.15 36 330.15 DL 41.5 330.4 36 330.4 DL 43.5
330.4 38 330.4 DL 49 330.4 43.5 330.4 DL F0(XFr)72.916 355.4 Q(eeF)-.198
E(eedbackList)-.275 E F1
(frees the list of feedback control information.)3.666 E 1.76 -.88(To c)
72 385.3 T(hange the settings of a feedback on an e).88 E(xtension de)
-.165 E(vice, use)-.275 E F0(XChangeF)3.666 E(eedbackContr)-.275 E(ol)
-.198 E F1(.).916 E(This function modi\214es the current control v)72
398.3 Q(alues of the speci\214ed feedback using information)-.275 E
(passed in the appropriate)72 411.3 Q F0(XF)3.666 E(eedbackContr)-.275 E
(ol)-.198 E F1(structure for the feedback.)3.666 E(Which v)5.5 E
(alues are mod-)-.275 E(i\214ed depends on the v)72 424.3 Q
(aluemask passed.)-.275 E 36 442.05 36 453.05 DL 36 440.05 36 451.05 DL
41.5 438.3 36 438.3 DL 43.5 438.3 38 438.3 DL 49 438.3 43.5 438.3 DL
(int XChangeFeedbackControl\()72 454.2 Q F2(display)A F1(,).916 E F2(de)
2.75 E(vice)-.165 E F1(,).916 E F2(valuemask)2.75 E F1(,).916 E F2
(value)2.75 E F1(\)).916 E(Display *)85.75 467.2 Q F2(display)A F1(;)
.916 E(XDe)85.75 480.2 Q(vice *)-.275 E F2(de)A(vice)-.165 E F1(;).916 E
(unsigned long)85.75 493.2 Q F2(valuemask)2.75 E F1(;).916 E
(XFeedbackControl *)85.75 506.2 Q F2(value)A F1(;).916 E F2(display)72
527 Q F1(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)
-.605 E F2(de)72 543.9 Q(vice)-.165 E F1(Speci\214es the desired de)
44.071 E(vice.)-.275 E F2(valuemask)72 560.8 Q F1(Speci\214es one v)
25.569 E
(alue for each bit in the mask \(least to most signi\214cant bit\).)
-.275 E(The)5.5 E -.275(va)144 573.8 S
(lues are associated with the feedbacks for the speci\214ed de).275 E
(vice.)-.275 E F2(value)72 590.7 Q F1(Speci\214es a pointer to the)
48.174 E F0(XF)3.666 E(eedbackContr)-.275 E(ol)-.198 E F1(structure.)
3.666 E 36 586.35 36 597.35 DL 36 584.35 36 595.35 DL 41.5 595.6 36
595.6 DL 43.5 595.6 38 595.6 DL 49 595.6 43.5 595.6 DL F0(XChangeF)
72.916 620.6 Q(eedbackContr)-.275 E(ol)-.198 E F1(controls the de)3.666
E(vice characteristics described by the)-.275 E F0(XF)3.666 E(eedback-)
-.275 E(Contr)72 633.6 Q(ol)-.198 E F1 2.75(structure. There)3.666 F
(is an)2.75 E F0(XF)3.666 E(eedbackContr)-.275 E(ol)-.198 E F1
(structure for each class of feedback.)3.666 E(These)5.5 E(are of v)72
646.6 Q(ariable length, b)-.275 E
(ut the \214rst three members are common to all and are as follo)-.22 E
(ws:)-.275 E F0(21)282.5 769 Q 0 Cg EP
%%Page: 22 24
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF 2.75(XI)72 49 S(nput Extension Library)-2.75 E
(X11, Release 6.4)229.413 E .44 LW 36 76.75 36 87.75 DL 36 74.75 36
85.75 DL 41.5 73 36 73 DL 43.5 73 38 73 DL 49 73 43.5 73 DL/F1 11
/Times-Roman@0 SF(typedef struct {)72 91.5 Q(XID class;)108 104.5 Q
(int length;)108 117.5 Q(XID id;)108 130.5 Q 2.75(}X)72 143.5 S
(FeedbackControl;)-2.75 E 36 145.65 36 156.65 DL 36 143.65 36 154.65 DL
41.5 154.9 36 154.9 DL 43.5 154.9 38 154.9 DL 49 154.9 43.5 154.9 DL
(Feedback class)72 179.9 Q F0(KbdF)3.666 E(eedback)-.275 E F1
(controls feedbacks equi)3.666 E -.275(va)-.275 G(lent to those pro).275
E(vided by the core)-.165 E -.11(ke)72 192.9 S(yboard using the)-.055 E
F0(KbdF)3.666 E(eedbackContr)-.275 E(ol)-.198 E F1
(structure, which is de\214ned as follo)3.666 E(ws:.)-.275 E 36 214.55
36 225.55 DL 36 212.55 36 223.55 DL 41.5 210.8 36 210.8 DL 43.5 210.8 38
210.8 DL 49 210.8 43.5 210.8 DL(typedef struct {)72 229.3 Q(XID class;)
108 242.3 Q(int length;)108 255.3 Q(XID id;)108 268.3 Q(int click;)108
281.3 Q(int percent;)108 294.3 Q(int pitch;)108 307.3 Q(int duration;)
108 320.3 Q(int led_mask;)108 333.3 Q(int led_v)108 346.3 Q(alue;)-.275
E(int k)108 359.3 Q -.165(ey)-.11 G(;).165 E(int auto_repeat_mode;)108
372.3 Q 2.75(}X)72 385.3 S(KbdFeedbackControl;)-2.75 E 36 387.45 36
398.45 DL 36 385.45 36 396.45 DL 41.5 396.7 36 396.7 DL 43.5 396.7 38
396.7 DL 49 396.7 43.5 396.7 DL(This class controls the de)72 421.7 Q
(vice characteristics described by the)-.275 E F0(XKbdF)3.666 E
(eedbackContr)-.275 E(ol)-.198 E F1(structure.)3.666 E
(These include the k)72 434.7 Q -.165(ey)-.11 G
(_click_percent, global_auto_repeat, and indi).165 E(vidual k)-.275 E
.33 -.165(ey a)-.11 H 2.75(uto-repeat. V).165 F(alid)-1.221 E(modes are)
72 447.7 Q F0 -.55(Au)3.666 G(toRepeatModeOn).55 E F1(,).916 E F0 -.55
(Au)3.666 G(toRepeatModeOff).55 E F1 2.75(,a).916 G(nd)-2.75 E F0 -.55
(Au)3.666 G(toRepeatModeDefault).55 E F1(.).916 E -1.221(Va)72 464.6 S
(lid masks are as follo)1.221 E(ws:)-.275 E 36 482.35 36 493.35 DL 36
480.35 36 491.35 DL 41.5 478.6 36 478.6 DL 43.5 478.6 38 478.6 DL 49
478.6 43.5 478.6 DL(#de\214ne)72 501 Q F0(DvK)125.416 501 Q(eyClickP)
-.275 E(er)-.22 E(cent)-.198 E F1(\(1L << 0\))321 501 Q(#de\214ne)72 514
Q F0(DvP)125.416 514 Q(er)-.22 E(cent)-.198 E F1(\(1L << 1\))321 514 Q
(#de\214ne)72 527 Q F0(DvPitch)125.416 527 Q F1(\(1L << 2\))321 527 Q
(#de\214ne)72 540 Q F0(DvDuration)125.416 540 Q F1(\(1L << 3\))321 540 Q
(#de\214ne)72 553 Q F0(DvLed)125.416 553 Q F1(\(1L << 4\))321 553 Q
(#de\214ne)72 566 Q F0(DvLedMode)125.416 566 Q F1(\(1L << 5\))321 566 Q
(#de\214ne)72 579 Q F0(DvK)125.416 579 Q(ey)-.275 E F1(\(1L << 6\))321
579 Q(#de\214ne)72 592 Q F0(DvA)125.416 592 Q(utoRepeatMode)-.55 E F1
(\(1L << 7\))321 592 Q 36 590.25 36 601.25 DL 36 588.25 36 599.25 DL
41.5 599.5 36 599.5 DL 43.5 599.5 38 599.5 DL 49 599.5 43.5 599.5 DL
(Feedback class)72 628.4 Q F0(PtrF)3.666 E(eedback)-.275 E F1
(controls feedbacks equi)3.666 E -.275(va)-.275 G(lent to those pro).275
E(vided by the core pointer)-.165 E(using the)72 641.4 Q F0(PtrF)3.666 E
(eedbackContr)-.275 E(ol)-.198 E F1
(structure, which is de\214ned as follo)3.666 E(ws:)-.275 E F0(22)282.5
769 Q 0 Cg EP
%%Page: 23 25
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF 2.75(XI)72 49 S(nput Extension Library)-2.75 E
(X11, Release 6.4)229.413 E .44 LW 36 76.75 36 87.75 DL 36 74.75 36
85.75 DL 41.5 73 36 73 DL 43.5 73 38 73 DL 49 73 43.5 73 DL/F1 11
/Times-Roman@0 SF(typedef struct {)72 91.5 Q(XID class;)108 104.5 Q
(int length;)108 117.5 Q(XID id;)108 130.5 Q(int accelNum;)108 143.5 Q
(int accelDenom;)108 156.5 Q(int threshold;)108 169.5 Q 2.75(}X)72 182.5
S(PtrFeedbackControl;)-2.75 E 36 184.65 36 195.65 DL 36 182.65 36 193.65
DL 41.5 193.9 36 193.9 DL 43.5 193.9 38 193.9 DL 49 193.9 43.5 193.9 DL
(Which v)72 218.9 Q(alues are modi\214ed depends on the v)-.275 E
(aluemask passed.)-.275 E -1.221(Va)72 235.8 S(lid masks are as follo)
1.221 E(ws:)-.275 E 36 253.55 36 264.55 DL 36 251.55 36 262.55 DL 41.5
249.8 36 249.8 DL 43.5 249.8 38 249.8 DL 49 249.8 43.5 249.8 DL
(#de\214ne)72 272.2 Q F0(DvAccelnum)125.416 272.2 Q F1(\(1L << 0\))321
272.2 Q(#de\214ne)72 285.2 Q F0(DvAccelDenom)125.416 285.2 Q F1
(\(1L << 1\))321 285.2 Q(#de\214ne)72 298.2 Q F0(DvThr)125.416 298.2 Q
(eshold)-.198 E F1(\(1L << 2\))321 298.2 Q 36 300.35 36 311.35 DL 36
298.35 36 309.35 DL 41.5 309.6 36 309.6 DL 43.5 309.6 38 309.6 DL 49
309.6 43.5 309.6 DL(The acceleration, e)72 334.6 Q
(xpressed as a fraction, is a multiplier for mo)-.165 E -.165(ve)-.165 G
2.75(ment. F).165 F(or e)-.165 E(xample, specifying)-.165 E
(3/1 means that the de)72 347.6 Q(vice mo)-.275 E -.165(ve)-.165 G 2.75
(st).165 G(hree times as f)-2.75 E(ast as normal.)-.11 E
(The fraction may be rounded arbi-)5.5 E(trarily by the X serv)72 360.6
Q(er)-.165 E 5.5(.A)-.605 G(cceleration tak)-5.5 E(es ef)-.11 E
(fect only if the de)-.275 E(vice mo)-.275 E -.165(ve)-.165 G 2.75(sm)
.165 G(ore than threshold)-2.75 E(pix)72 373.6 Q
(els at once and applies only to the amount be)-.165 E(yond the v)-.165
E(alue in the threshold ar)-.275 E 2.75(gument. Setting)-.198 F 2.75(av)
72 386.6 S(alue to -1 restores the def)-3.025 E 2.75(ault. The)-.11 F
-.275(va)2.75 G
(lues of the accelNumerator and threshold \214elds must be).275 E
(nonzero for the pointer v)72 399.6 Q(alues to be set.)-.275 E
(Otherwise, the parameters will be unchanged.)5.5 E(Ne)5.5 E -.055(ga)
-.165 G(ti).055 E -.165(ve)-.275 G -.275(va)72 412.6 S(lues generate a)
.275 E F0(BadV)3.666 E(alue)-1.012 E F1(error)3.666 E 2.75(,a)-.44 G
2.75(sd)-2.75 G(oes a zero v)-2.75 E
(alue for the accelDenominator \214eld.)-.275 E(This request f)72 429.5
Q(ails with a)-.11 E F0(BadMatch)3.666 E F1(error if the speci\214ed de)
3.666 E(vice is not currently reporting relati)-.275 E -.165(ve)-.275 G
2.75(motion. If)72 442.5 R 2.75(ad)2.75 G -.275(ev)-2.75 G
(ice that is capable of reporting both relati).275 E .33 -.165(ve a)
-.275 H(nd absolute motion has its mode).165 E(changed from)72 455.5 Q
F0(Relati)3.666 E -.11(ve)-.11 G F1(to)3.776 E F0(Absolute)3.666 E F1
(by an)3.666 E F0(XSetDe)3.666 E(viceMode)-.165 E F1(request, v)3.666 E
(aluator control v)-.275 E(alues)-.275 E(will be ignored by the serv)72
468.5 Q(er while the de)-.165 E(vice is in that mode.)-.275 E
(Feedback class)72 485.4 Q F0(IntegerF)3.666 E(eedback)-.275 E F1
(controls inte)3.666 E(ger feedbacks displayed on input de)-.165 E
(vices and are)-.275 E(reported via the)72 498.4 Q F0(IntegerF)3.666 E
(eedbackContr)-.275 E(ol)-.198 E F1
(structure, which is de\214ned as follo)3.666 E(ws:)-.275 E 36 520.05 36
531.05 DL 36 518.05 36 529.05 DL 41.5 516.3 36 516.3 DL 43.5 516.3 38
516.3 DL 49 516.3 43.5 516.3 DL(typedef struct {)72 534.8 Q(XID class;)
108 547.8 Q(int length;)108 560.8 Q(XID id;)108 573.8 Q
(int int_to_display;)108 586.8 Q 2.75(}X)72 599.8 S(Inte)-2.75 E
(gerFeedbackControl;)-.165 E 36 601.95 36 612.95 DL 36 599.95 36 610.95
DL 41.5 611.2 36 611.2 DL 43.5 611.2 38 611.2 DL 49 611.2 43.5 611.2 DL
-1.221(Va)72 636.2 S(lid masks are as follo)1.221 E(ws:)-.275 E 36
653.95 36 664.95 DL 36 651.95 36 662.95 DL 41.5 650.2 36 650.2 DL 43.5
650.2 38 650.2 DL 49 650.2 43.5 650.2 DL(#de\214ne)72 672.6 Q F0
(DvInteger)125.416 672.6 Q F1(\(1L << 0\))321 672.6 Q 36 674.75 36
685.75 DL 36 672.75 36 683.75 DL 41.5 684 36 684 DL 43.5 684 38 684 DL
49 684 43.5 684 DL(Feedback class)72 709 Q F0(StringF)3.666 E(eedback)
-.275 E F1(controls string feedbacks displayed on input de)3.666 E
(vices and)-.275 E(reported via the)72 722 Q F0(StringF)3.666 E
(eedbackContr)-.275 E(ol)-.198 E F1
(structure, which is de\214ned as follo)3.666 E(ws:)-.275 E F0(23)282.5
769 Q 0 Cg EP
%%Page: 24 26
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF 2.75(XI)72 49 S(nput Extension Library)-2.75 E
(X11, Release 6.4)229.413 E .44 LW 36 76.75 36 87.75 DL 36 74.75 36
85.75 DL 41.5 73 36 73 DL 43.5 73 38 73 DL 49 73 43.5 73 DL/F1 11
/Times-Roman@0 SF(typedef struct {)72 91.5 Q(XID class;)108 104.5 Q
(int length;)108 117.5 Q(XID id;)108 130.5 Q(int num_k)108 143.5 Q -.165
(ey)-.11 G(syms;).165 E -2.365 -.275(Ke y)108 156.5 T
(Sym *syms_to_display;).275 E 2.75(}X)72 169.5 S(StringFeedbackControl;)
-2.75 E 36 171.65 36 182.65 DL 36 169.65 36 180.65 DL 41.5 180.9 36
180.9 DL 43.5 180.9 38 180.9 DL 49 180.9 43.5 180.9 DL -1.221(Va)72
205.9 S(lid masks are as follo)1.221 E(ws:)-.275 E 36 223.65 36 234.65
DL 36 221.65 36 232.65 DL 41.5 219.9 36 219.9 DL 43.5 219.9 38 219.9 DL
49 219.9 43.5 219.9 DL(#de\214ne)72 242.3 Q F0(DvString)125.416 242.3 Q
F1(\(1L << 0\))321 242.3 Q 36 244.45 36 255.45 DL 36 242.45 36 253.45 DL
41.5 253.7 36 253.7 DL 43.5 253.7 38 253.7 DL 49 253.7 43.5 253.7 DL
(Feedback class)72 278.7 Q F0(BellF)3.666 E(eedback)-.275 E F1
(controls a bell on an input de)3.666 E(vice and is reported via the)
-.275 E F0(BellF)3.666 E(eed-)-.275 E(backContr)72 291.7 Q(ol)-.198 E F1
(structure, which is de\214ned as follo)3.666 E(ws:)-.275 E 36 313.35 36
324.35 DL 36 311.35 36 322.35 DL 41.5 309.6 36 309.6 DL 43.5 309.6 38
309.6 DL 49 309.6 43.5 309.6 DL(typedef struct {)72 328.1 Q(XID class;)
108 341.1 Q(int length;)108 354.1 Q(XID id;)108 367.1 Q(int percent;)108
380.1 Q(int pitch;)108 393.1 Q(int duration;)108 406.1 Q 2.75(}X)72
419.1 S(BellFeedbackControl;)-2.75 E 36 421.25 36 432.25 DL 36 419.25 36
430.25 DL 41.5 430.5 36 430.5 DL 43.5 430.5 38 430.5 DL 49 430.5 43.5
430.5 DL -1.221(Va)72 455.5 S(lid masks are as follo)1.221 E(ws:)-.275 E
36 473.25 36 484.25 DL 36 471.25 36 482.25 DL 41.5 469.5 36 469.5 DL
43.5 469.5 38 469.5 DL 49 469.5 43.5 469.5 DL(#de\214ne)72 491.9 Q F0
(DvP)125.416 491.9 Q(er)-.22 E(cent)-.198 E F1(\(1L << 1\))321 491.9 Q
(#de\214ne)72 504.9 Q F0(DvPitch)125.416 504.9 Q F1(\(1L << 2\))321
504.9 Q(#de\214ne)72 517.9 Q F0(DvDuration)125.416 517.9 Q F1
(\(1L << 3\))321 517.9 Q 36 520.05 36 531.05 DL 36 518.05 36 529.05 DL
41.5 529.3 36 529.3 DL 43.5 529.3 38 529.3 DL 49 529.3 43.5 529.3 DL
(Feedback class)72 554.3 Q F0(LedF)3.666 E(eedback)-.275 E F1
(controls lights on an input de)3.666 E(vice and are reported via the)
-.275 E F0(Led-)3.666 E -.275(Fe)72 567.3 S(edbackContr).275 E(ol)-.198
E F1(structure, which is de\214ned as follo)3.666 E(ws:)-.275 E 36
588.95 36 599.95 DL 36 586.95 36 597.95 DL 41.5 585.2 36 585.2 DL 43.5
585.2 38 585.2 DL 49 585.2 43.5 585.2 DL(typedef struct {)72 603.7 Q
(XID class;)108 616.7 Q(int length;)108 629.7 Q(XID id;)108 642.7 Q
(int led_mask;)108 655.7 Q(int led_v)108 668.7 Q(alues;)-.275 E 2.75(}X)
72 681.7 S(LedFeedbackControl;)-2.75 E 36 683.85 36 694.85 DL 36 681.85
36 692.85 DL 41.5 693.1 36 693.1 DL 43.5 693.1 38 693.1 DL 49 693.1 43.5
693.1 DL -1.221(Va)72 718.1 S(lid masks are as follo)1.221 E(ws:)-.275 E
F0(24)282.5 769 Q 0 Cg EP
%%Page: 25 27
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF 2.75(XI)72 49 S(nput Extension Library)-2.75 E
(X11, Release 6.4)229.413 E .44 LW 36 76.75 36 87.75 DL 36 74.75 36
85.75 DL 41.5 73 36 73 DL 43.5 73 38 73 DL 49 73 43.5 73 DL/F1 11
/Times-Roman@0 SF(#de\214ne)72 95.4 Q F0(DvLed)125.416 95.4 Q F1
(\(1L << 4\))321 95.4 Q(#de\214ne)72 108.4 Q F0(DvLedMode)125.416 108.4
Q F1(\(1L << 5\))321 108.4 Q 36 110.55 36 121.55 DL 36 108.55 36 119.55
DL 41.5 119.8 36 119.8 DL 43.5 119.8 38 119.8 DL 49 119.8 43.5 119.8 DL
F0(XChangeF)72.916 144.8 Q(eedbackContr)-.275 E(ol)-.198 E F1
(can generate)3.666 E F0(BadDe)3.666 E(vice)-.165 E F1(,).916 E F0(BadF)
3.666 E(eedBack)-.275 E F1(,).916 E F0(BadMatch)3.666 E F1 2.75(,a).916
G(nd)-2.75 E F0(Bad-)3.666 E -1.012(Va)72 157.8 S(lue)1.012 E F1
(errors.)3.666 E F0 2.75(2.1.9. Ringing)72 183.8 R 2.75(aB)2.75 G
(ell on an Input De)-2.75 E(vice)-.165 E F1 1.76 -.88(To r)72 200.7 T
(ing a bell on an e).88 E(xtension input de)-.165 E(vice, use)-.275 E F0
(XDe)3.666 E(viceBell)-.165 E F1(.).916 E 36 218.45 36 229.45 DL 36
216.45 36 227.45 DL 41.5 214.7 36 214.7 DL 43.5 214.7 38 214.7 DL 49
214.7 43.5 214.7 DL(int XDe)72 230.6 Q(viceBell\()-.275 E/F2 11
/Times-Italic@0 SF(display)A F1(,).916 E F2(de)2.75 E(vice)-.165 E F1(,)
.916 E F2(feedbac)2.75 E(kclass)-.22 E F1(,).916 E F2(feedbac)2.75 E
(kid)-.22 E F1(,).916 E F2(per)2.75 E(cent)-.407 E F1(\)).916 E
(Display *)85.75 243.6 Q F2(display)A F1(;).916 E(XDe)85.75 256.6 Q
(vice *)-.275 E F2(de)A(vice)-.165 E F1(;).916 E(XID)85.75 269.6 Q F2
(feedbac)2.75 E(kclass)-.22 E F1(,).916 E F2(feedbac)2.75 E(kid)-.22 E
F1(;).916 E(int)85.75 282.6 Q F2(per)2.75 E(cent)-.407 E F1(;).916 E F2
(display)72 303.4 Q F1(Speci\214es the connection to the X serv)40.221 E
(er)-.165 E(.)-.605 E F2(de)72 320.3 Q(vice)-.165 E F1
(Speci\214es the desired de)44.071 E(vice.)-.275 E F2(feedbac)72 337.2 Q
(kclass)-.22 E F1(Speci\214es the feedbackclass.)11.126 E -1.221(Va)5.5
G(lid v)1.221 E(alues are)-.275 E F0(KbdF)3.666 E(eedbackClass)-.275 E
F1(and)3.666 E F0(BellF)3.666 E(eed-)-.275 E(backClass)144 350.2 Q F1(.)
.916 E F2(feedbac)72 367.1 Q(kid)-.22 E F1
(Speci\214es the ID of the feedback that has the bell.)24.568 E F2(per)
72 384 Q(cent)-.407 E F1(Speci\214es the v)39.418 E
(olume in the range -100 \(quiet\) to 100 percent \(loud\).)-.22 E 36
379.65 36 390.65 DL 36 377.65 36 388.65 DL 41.5 388.9 36 388.9 DL 43.5
388.9 38 388.9 DL 49 388.9 43.5 388.9 DL F0(XDe)72.916 413.9 Q(viceBell)
-.165 E F1(is analogous to the core)3.666 E F0(XBell)3.666 E F1 2.75
(function. It)3.666 F(rings the speci\214ed bell on the speci\214ed)2.75
E(input de)72 426.9 Q(vice feedback, using the speci\214ed v)-.275 E
2.75(olume. The)-.22 F(speci\214ed v)2.75 E(olume is relati)-.22 E .33
-.165(ve t)-.275 H 2.75(ot).165 G(he base)-2.75 E -.22(vo)72 439.9 S
(lume for the feedback.).22 E(If the v)5.5 E(alue for the percent ar)
-.275 E(gument is not in the range -100 to 100)-.198 E(inclusi)72 452.9
Q -.165(ve)-.275 G 2.75(,a).165 G F0(BadV).916 E(alue)-1.012 E F1
(error results.)3.666 E(The v)5.5 E
(olume at which the bell rings when the percent ar)-.22 E(gu-)-.198 E
(ment is nonne)72 465.9 Q -.055(ga)-.165 G(ti).055 E .33 -.165(ve i)
-.275 H(s:).165 E(base - [\(base * percent\) / 100] + percent)141 489.3
Q(The v)72 512.7 Q(olume at which the bell rings when the percent ar)
-.22 E(gument is ne)-.198 E -.055(ga)-.165 G(ti).055 E .33 -.165(ve i)
-.275 H(s:).165 E(base + [\(base * percent\) / 100])141 536.1 Q 1.76
-.88(To c)72 559.5 T(hange the base v).88 E(olume of the bell, use)-.22
E F0(XChangeF)3.666 E(eedbackContr)-.275 E(ol)-.198 E F1(.).916 E F0
(XDe)72.916 576.4 Q(viceBell)-.165 E F1(can generate)3.666 E F0(BadDe)
3.666 E(vice)-.165 E F1(and)3.666 E F0(BadV)3.666 E(alue)-1.012 E F1
(errors.)3.666 E F0 2.75(2.1.10. Contr)72 602.4 R(olling De)-.198 E
(vice Encoding)-.165 E F1 1.76 -.88(To g)72 619.3 T(et the k).88 E .33
-.165(ey m)-.11 H(apping of an e).165 E(xtension de)-.165 E
(vice that supports input class)-.275 E F0 -.275(Ke)3.666 G(ys).275 E F1
2.75(,u).916 G(se)-2.75 E F0(XGetDe-)3.666 E(viceK)72 632.3 Q(eyMapping)
-.275 E F1(.).916 E F0(25)282.5 769 Q 0 Cg EP
%%Page: 26 28
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF 2.75(XI)72 49 S(nput Extension Library)-2.75 E
(X11, Release 6.4)229.413 E .44 LW 36 76.75 36 87.75 DL 36 74.75 36
85.75 DL 41.5 73 36 73 DL 43.5 73 38 73 DL 49 73 43.5 73 DL/F1 11
/Times-Roman@0 SF -2.365 -.275(Ke y)72 88.9 T(Sym * XGetDe).275 E(viceK)
-.275 E -.165(ey)-.275 G(Mapping\().165 E/F2 11/Times-Italic@0 SF
(display)A F1(,).916 E F2(de)2.75 E(vice)-.165 E F1(,).916 E F2<8c72>
2.75 E(st_k)-.11 E -.33(ey)-.11 G(code_wanted).33 E F1(,).916 E F2 -.11
(ke)2.75 G(ycode_count)-.22 E F1(,).916 E F2 -.11(ke)129.75 101.9 S
(ysyms_per_k)-.22 E -.33(ey)-.11 G(code_r).33 E(eturn)-.407 E F1(\)).916
E(Display *)88.5 114.9 Q F2(display)A F1(;).916 E(XDe)88.5 127.9 Q
(vice *)-.275 E F2(de)A(vice)-.165 E F1(;).916 E -2.365 -.275(Ke y)88.5
140.9 T(Code).275 E F2<8c72>2.75 E(st_k)-.11 E -.33(ey)-.11 G
(code_wanted).33 E F1(;).916 E(int)88.5 153.9 Q F2 -.11(ke)2.75 G
(ycode_count)-.22 E F1(;).916 E(int *)88.5 166.9 Q F2 -.11(ke)C
(ysyms_per_k)-.22 E -.33(ey)-.11 G(code_r).33 E(eturn)-.407 E F1(;).916
E F2(display)72 187.7 Q F1(Speci\214es the connection to the X serv)
40.221 E(er)-.165 E(.)-.605 E F2(de)72 204.6 Q(vice)-.165 E F1
(Speci\214es the desired de)44.071 E(vice.)-.275 E F2<8c72>72 221.5 Q
(st_k)-.11 E -.33(ey)-.11 G(code_wanted).33 E F1
(Speci\214es the \214rst k)144 234.5 Q -.165(ey)-.11 G
(code that is to be returned.).165 E F2 -.11(ke)72 251.4 S(ycode_count)
-.22 E F1(Speci\214es the number of k)7.078 E -.165(ey)-.11 G
(codes that are to be returned.).165 E F2 -.11(ke)72 268.3 S
(ysyms_per_k)-.22 E -.33(ey)-.11 G(code_r).33 E(eturn)-.407 E F1
(Returns the number of k)144 281.3 Q -.165(ey)-.11 G(syms per k).165 E
-.165(ey)-.11 G(code.).165 E 36 276.95 36 287.95 DL 36 274.95 36 285.95
DL 41.5 286.2 36 286.2 DL 43.5 286.2 38 286.2 DL 49 286.2 43.5 286.2 DL
F0(XGetDe)72.916 311.2 Q(viceK)-.165 E(eyMapping)-.275 E F1
(is analogous to the core)3.666 E F0(XGetK)3.666 E(eyboardMapping)-.275
E F1 2.75(function. It)3.666 F
(returns the symbols for the speci\214ed number of k)72 324.2 Q -.165
(ey)-.11 G(codes for the speci\214ed e).165 E(xtension de)-.165 E(vice.)
-.275 E F0(XGetDe)72.916 341.1 Q(viceK)-.165 E(eyMapping)-.275 E F1
(returns the symbols for the speci\214ed number of k)3.666 E -.165(ey)
-.11 G(codes for the spec-).165 E(i\214ed e)72 354.1 Q(xtension de)-.165
E(vice, starting with the speci\214ed k)-.275 E -.165(ey)-.11 G 2.75
(code. The).165 F(\214rst_k)2.75 E -.165(ey)-.11 G(code_w).165 E
(anted must be)-.11 E(greater than or equal to min-k)72 367.1 Q -.165
(ey)-.11 G(code as returned by the).165 E F0(XListInputDe)3.666 E(vices)
-.165 E F1(request \(else a)3.666 E F0(Bad-)3.666 E -1.012(Va)72 380.1 S
(lue)1.012 E F1(error results\). The follo)3.666 E(wing v)-.275 E(alue:)
-.275 E(\214rst_k)108 399.6 Q -.165(ey)-.11 G(code_w).165 E(anted + k)
-.11 E -.165(ey)-.11 G(code_count \255 1).165 E
(must be less than or equal to max-k)72 423 Q -.165(ey)-.11 G
(code as returned by the).165 E F0(XListInputDe)3.666 E(vices)-.165 E F1
(request \(else a)3.666 E F0(BadV)72.916 436 Q(alue)-1.012 E F1
(error results\).)3.666 E(The number of elements in the k)72 452.9 Q
-.165(ey)-.11 G(syms list is as follo).165 E(ws:)-.275 E -.11(ke)108
472.4 S(ycode_count * k)-.055 E -.165(ey)-.11 G(syms_per_k).165 E -.165
(ey)-.11 G(code_return).165 E
(And KEYSYM number N \(counting from zero\) for k)72 491.9 Q -.165(ey)
-.11 G(code K has an inde).165 E 2.75(x\()-.165 G(counting from zero\),)
-2.75 E(in k)72 504.9 Q -.165(ey)-.11 G(syms, of the follo).165 E(wing:)
-.275 E(\(K \255 \214rst_k)108 524.4 Q -.165(ey)-.11 G(code_w).165 E
(anted\) * k)-.11 E -.165(ey)-.11 G(syms_per_k).165 E -.165(ey)-.11 G
(code_return + N).165 E(The k)72 547.8 Q -.165(ey)-.11 G(syms_per_k).165
E -.165(ey)-.11 G(code_return v).165 E
(alue is chosen arbitrarily by the serv)-.275 E(er to be lar)-.165 E
(ge enough to)-.198 E(report all requested symbols.)72 560.8 Q 2.75(As)
5.5 G(pecial KEYSYM v)-2.75 E(alue of)-.275 E F0(NoSymbol)3.666 E F1
(is used to \214ll in unused)3.666 E(elements for indi)72 573.8 Q
(vidual k)-.275 E -.165(ey)-.11 G(codes.).165 E 1.76 -.88(To f)72 590.7
T(ree the data returned by this function, use).88 E F0(XFr)3.666 E(ee)
-.198 E F1(.).916 E(If the speci\214ed de)72 607.6 Q
(vice has not \214rst been opened by this client via)-.275 E F0(XOpenDe)
3.666 E(vice)-.165 E F1 2.75(,t).916 G(his request will)-2.75 E -.11(fa)
72 620.6 S(il with a).11 E F0(BadDe)3.666 E(vice)-.165 E F1(error)3.666
E 5.5(.I)-.605 G 2.75(ft)-5.5 G(hat de)-2.75 E
(vice does not support input class)-.275 E F0 -.275(Ke)3.666 G(ys).275 E
F1 2.75(,t).916 G(his request will)-2.75 E -.11(fa)72 633.6 S(il with a)
.11 E F0(BadMatch)3.666 E F1(error)3.666 E(.)-.605 E F0(XGetDe)72.916
650.5 Q(viceK)-.165 E(eyMapping)-.275 E F1(can generate)3.666 E F0
(BadDe)3.666 E(vice)-.165 E F1(,).916 E F0(BadMatch)3.666 E F1 2.75(,a)
.916 G(nd)-2.75 E F0(BadV)3.666 E(alue)-1.012 E F1(errors.)3.666 E 1.76
-.88(To c)72 680.4 T(hange the k).88 E -.165(ey)-.11 G
(board mapping of an e).165 E(xtension de)-.165 E
(vice that supports input class)-.275 E F0 -.275(Ke)3.666 G(ys).275 E F1
2.75(,u).916 G(se)-2.75 E F0(XChangeDe)72.916 693.4 Q(viceK)-.165 E
(eyMapping)-.275 E F1(.).916 E F0(26)282.5 769 Q 0 Cg EP
%%Page: 27 29
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF 2.75(XI)72 49 S(nput Extension Library)-2.75 E
(X11, Release 6.4)229.413 E .44 LW 36 76.75 36 87.75 DL 36 74.75 36
85.75 DL 41.5 73 36 73 DL 43.5 73 38 73 DL 49 73 43.5 73 DL/F1 11
/Times-Roman@0 SF(int)72 88.9 Q(XChangeDe)72 101.9 Q(viceK)-.275 E -.165
(ey)-.275 G(Mapping\().165 E/F2 11/Times-Italic@0 SF(display)A F1(,).916
E F2(de)2.75 E(vice)-.165 E F1(,).916 E F2<8c72>2.75 E(st_k)-.11 E -.33
(ey)-.11 G(code).33 E F1(,).916 E F2 -.11(ke)2.75 G(ysyms_per_k)-.22 E
-.33(ey)-.11 G(code).33 E F1(,).916 E F2 -.11(ke)2.75 G(ysyms)-.22 E F1
(,).916 E F2(num_codes)129.75 114.9 Q F1(\)).916 E(Display *)85.75 127.9
Q F2(display)A F1(;).916 E(XDe)85.75 140.9 Q(vice *)-.275 E F2(de)A
(vice)-.165 E F1(;).916 E(int)85.75 153.9 Q F2<8c72>2.75 E(st_k)-.11 E
-.33(ey)-.11 G(code).33 E F1(;).916 E(int)85.75 166.9 Q F2 -.11(ke)2.75
G(ysyms_per_k)-.22 E -.33(ey)-.11 G(code).33 E F1(;).916 E -2.365 -.275
(Ke y)85.75 179.9 T(Sym *).275 E F2 -.11(ke)C(ysyms)-.22 E F1(;).916 E
(int)85.75 192.9 Q F2(num_codes)2.75 E F1(;).916 E F2(display)72 213.7 Q
F1(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605
E F2(de)72 230.6 Q(vice)-.165 E F1(Speci\214es the desired de)44.071 E
(vice.)-.275 E F2<8c72>72 247.5 Q(st_k)-.11 E -.33(ey)-.11 G(code).33 E
F1(Speci\214es the \214rst k)14.514 E -.165(ey)-.11 G
(code that is to be changed.).165 E F2 -.11(ke)72 264.4 S(ysyms_per_k)
-.22 E -.33(ey)-.11 G(code).33 E F1(Speci\214es the k)144 277.4 Q -.165
(ey)-.11 G(syms that are to be used.).165 E F2 -.11(ke)72 294.3 S(ysyms)
-.22 E F1(Speci\214es a pointer to an array of k)36.404 E -.165(ey)-.11
G(syms.).165 E F2(num_codes)72 311.2 Q F1(Speci\214es the number of k)
22.511 E -.165(ey)-.11 G(codes that are to be changed.).165 E 36 306.85
36 317.85 DL 36 304.85 36 315.85 DL 41.5 316.1 36 316.1 DL 43.5 316.1 38
316.1 DL 49 316.1 43.5 316.1 DL F0(XChangeDe)72.916 341.1 Q(viceK)-.165
E(eyMapping)-.275 E F1(is analogous to the core)3.666 E F0(XChangeK)
3.666 E(eyboardMapping)-.275 E F1(function.)3.666 E
(It de\214nes the symbols for the speci\214ed number of k)72 354.1 Q
-.165(ey)-.11 G(codes for the speci\214ed e).165 E(xtension k)-.165 E
-.165(ey)-.11 G(board).165 E(de)72 367.1 Q(vice.)-.275 E
(If the speci\214ed de)72 384 Q
(vice has not \214rst been opened by this client via)-.275 E F0(XOpenDe)
3.666 E(vice)-.165 E F1 2.75(,t).916 G(his request will)-2.75 E -.11(fa)
72 397 S(il with a).11 E F0(BadDe)3.666 E(vice)-.165 E F1(error)3.666 E
5.5(.I)-.605 G 2.75(ft)-5.5 G(he speci\214ed de)-2.75 E
(vice does not support input class)-.275 E F0 -.275(Ke)3.666 G(ys).275 E
F1 2.75(,t).916 G(his)-2.75 E(request will f)72 410 Q(ail with a)-.11 E
F0(BadMatch)3.666 E F1(error)3.666 E(.)-.605 E
(The number of elements in the k)72 426.9 Q -.165(ey)-.11 G
(syms list must be a multiple of k).165 E -.165(ey)-.11 G(syms_per_k)
.165 E -.165(ey)-.11 G 2.75(code. Other).165 F(-)-.22 E(wise,)72 439.9 Q
F0(XChangeDe)3.666 E(viceK)-.165 E(eyMapping)-.275 E F1(generates a)
3.666 E F0(BadLength)3.666 E F1(error)3.666 E 5.5(.T)-.605 G
(he speci\214ed \214rst_k)-5.5 E -.165(ey)-.11 G(code).165 E
(must be greater than or equal to the min_k)72 452.9 Q -.165(ey)-.11 G
(code v).165 E(alue returned by the)-.275 E F0(ListInputDe)3.666 E
(vices)-.165 E F1(request, or this request will f)72 465.9 Q(ail with a)
-.11 E F0(BadV)3.666 E(alue)-1.012 E F1(error)3.666 E 5.5(.I)-.605 G
2.75(na)-5.5 G(ddition, if the follo)-2.75 E(wing e)-.275 E
(xpression is)-.165 E(not less than the max_k)72 478.9 Q -.165(ey)-.11 G
(code v).165 E(alue returned by the)-.275 E F0(ListInputDe)3.666 E
(vices)-.165 E F1(request, the request will)3.666 E -.11(fa)72 491.9 S
(il with a).11 E F0(BadV)3.666 E(alue)-1.012 E F1(error:)3.666 E
(\214rst_k)141 511.4 Q -.165(ey)-.11 G(code + \(num_codes / k).165 E
-.165(ey)-.11 G(syms_per_k).165 E -.165(ey)-.11 G(code\) - 1).165 E F0
(XChangeDe)72.916 534.8 Q(viceK)-.165 E(eyMapping)-.275 E F1
(can generate)3.666 E F0(BadAlloc)3.666 E F1(,).916 E F0(BadDe)3.666 E
(vice)-.165 E F1(,).916 E F0(BadMatch)3.666 E F1 2.75(,a).916 G(nd)-2.75
E F0(BadV)3.666 E(alue)-1.012 E F1(errors.)72 547.8 Q 1.76 -.88(To o)72
577.7 T(btain the k).88 E -.165(ey)-.11 G
(codes that are used as modi\214ers on an e).165 E(xtension de)-.165 E
(vice that supports input class)-.275 E F0 -.275(Ke)72.916 590.7 S(ys)
.275 E F1 2.75(,u).916 G(se)-2.75 E F0(XGetDe)3.666 E
(viceModi\214erMapping)-.165 E F1(.).916 E 36 608.45 36 619.45 DL 36
606.45 36 617.45 DL 41.5 604.7 36 604.7 DL 43.5 604.7 38 604.7 DL 49
604.7 43.5 604.7 DL(XModi\214erK)72 620.6 Q -.165(ey)-.275 G
(map * XGetDe).165 E(viceModi\214erMapping\()-.275 E F2(display)A F1(,)
.916 E F2(de)2.75 E(vice)-.165 E F1(\)).916 E(Display *)85.75 633.6 Q F2
(display)A F1(;).916 E(XDe)85.75 646.6 Q(vice *)-.275 E F2(de)A(vice)
-.165 E F1(;).916 E F2(display)72 667.4 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2(de)72 684.3 Q(vice)-.165 E F1(Speci\214es the desired de)44.071 E
(vice.)-.275 E 36 679.95 36 690.95 DL 36 677.95 36 688.95 DL 41.5 689.2
36 689.2 DL 43.5 689.2 38 689.2 DL 49 689.2 43.5 689.2 DL F0(XGetDe)
72.916 714.2 Q(viceModi\214erMapping)-.165 E F1
(is analogous to the core)3.666 E F0(XGetModi\214erMapping)3.666 E F1
2.75(function. The)3.666 F F0(XGetDe)72.916 727.2 Q
(viceModi\214erMapping)-.165 E F1(function returns a ne)3.666 E
(wly created)-.275 E F0(XModi\214erK)3.666 E(eymap)-.275 E F1(structure)
3.666 E F0(27)282.5 769 Q 0 Cg EP
%%Page: 28 30
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF 2.75(XI)72 49 S(nput Extension Library)-2.75 E
(X11, Release 6.4)229.413 E/F1 11/Times-Roman@0 SF(that contains the k)
72 85 Q -.165(ey)-.11 G 2.75(sb).165 G
(eing used as modi\214ers for the speci\214ed de)-2.75 E 2.75(vice. The)
-.275 F(structure should be)2.75 E(freed after use with)72 98 Q F0(XFr)
3.666 E(eeModi\214erMapping)-.198 E F1 5.5(.I).916 G 2.75(fo)-5.5 G
(nly zero v)-2.75 E(alues appear in the set for an)-.275 E 2.75(ym)-.165
G(odi-)-2.75 E(\214er)72 111 Q 2.75(,t)-.44 G
(hat modi\214er is disabled.)-2.75 E F0(XGetDe)72.916 127.9 Q
(viceModi\214erMapping)-.165 E F1(can generate)3.666 E F0(BadDe)3.666 E
(vice)-.165 E F1(and)3.666 E F0(BadMatch)3.666 E F1(errors.)3.666 E 1.76
-.88(To s)72 157.8 T(et which k).88 E -.165(ey)-.11 G
(codes are to be used as modi\214ers for an e).165 E(xtension de)-.165 E
(vice, use)-.275 E F0(XSetDe)3.666 E(viceModi-)-.165 E(\214erMapping)72
170.8 Q F1(.).916 E .44 LW 36 188.55 36 199.55 DL 36 186.55 36 197.55 DL
41.5 184.8 36 184.8 DL 43.5 184.8 38 184.8 DL 49 184.8 43.5 184.8 DL
(int XSetDe)72 200.7 Q(viceModi\214erMapping\()-.275 E/F2 11
/Times-Italic@0 SF(display)A F1(,).916 E F2(de)2.75 E(vice)-.165 E F1(,)
.916 E F2(modmap)2.75 E F1(\)).916 E(Display *)85.75 213.7 Q F2(display)
A F1(;).916 E(XDe)85.75 226.7 Q(vice *)-.275 E F2(de)A(vice)-.165 E F1
(;).916 E(XModi\214erK)85.75 239.7 Q -.165(ey)-.275 G(map *).165 E F2
(modmap)A F1(;).916 E F2(display)72 260.5 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2(de)72 277.4 Q(vice)-.165 E F1(Speci\214es the desired de)44.071 E
(vice.)-.275 E F2(modmap)72 294.3 Q F1(Speci\214es a pointer to the)
34.116 E F0(XModi\214erK)3.666 E(eymap)-.275 E F1(structure.)3.666 E 36
289.95 36 300.95 DL 36 287.95 36 298.95 DL 41.5 299.2 36 299.2 DL 43.5
299.2 38 299.2 DL 49 299.2 43.5 299.2 DL F0(XSetDe)72.916 324.2 Q
(viceModi\214erMapping)-.165 E F1(is analogous to the core)3.666 E F0
(XSetModi\214erMapping)3.666 E F1 2.75(function. The)3.666 F F0(XSetDe)
72.916 337.2 Q(viceModi\214erMapping)-.165 E F1
(function speci\214es the k)3.666 E -.165(ey)-.11 G(codes of the k).165
E -.165(ey)-.11 G(s, if an).165 E 1.43 -.715(y, t)-.165 H(hat are to be)
.715 E(used as modi\214ers.)72 350.2 Q 2.75(Az)5.5 G(ero v)-2.75 E
(alue means that no k)-.275 E .33 -.165(ey s)-.11 H(hould be used.).165
E(No tw)5.5 E 2.75(oa)-.11 G -.198(rg)-2.75 G(uments can ha).198 E -.165
(ve)-.22 G(the same nonzero k)72 363.2 Q -.165(ey)-.11 G(code v).165 E
2.75(alue. Otherwise,)-.275 F F0(XSetDe)3.666 E(viceModi\214erMapping)
-.165 E F1(generates a)3.666 E F0(Bad-)3.666 E -1.012(Va)72 376.2 S(lue)
1.012 E F1(error)3.666 E 5.5(.T)-.605 G
(here are eight modi\214ers, and the modi\214ermap member of the)-5.5 E
F0(XModi\214erK)3.666 E(eymap)-.275 E F1
(structure contains eight sets of max_k)72 389.2 Q -.165(ey)-.11 G
(permod k).165 E -.165(ey)-.11 G
(codes, one for each modi\214er in the order).165 E F0(Shift)72.916
402.2 Q F1(,).916 E F0(Lock)3.666 E F1(,).916 E F0(Contr)3.666 E(ol)
-.198 E F1(,).916 E F0(Mod1)3.666 E F1(,).916 E F0(Mod2)3.666 E F1(,)
.916 E F0(Mod3)3.666 E F1(,).916 E F0(Mod4)3.666 E F1 2.75(,a).916 G(nd)
-2.75 E F0(Mod5)3.666 E F1 5.5(.O).916 G(nly nonzero k)-5.5 E -.165(ey)
-.11 G(codes ha).165 E -.165(ve)-.22 G(meaning in each set, and zero k)
72 415.2 Q -.165(ey)-.11 G(codes are ignored.).165 E
(In addition, all of the nonzero k)5.5 E -.165(ey)-.11 G(codes).165 E
(must be in the range speci\214ed by min_k)72 428.2 Q -.165(ey)-.11 G
(code and max_k).165 E -.165(ey)-.11 G(code reported by the).165 E F0
(XListInputDe-)3.666 E(vices)72 441.2 Q F1 2.75(function. Otherwise,)
3.666 F F0(XSetModi\214erMapping)3.666 E F1(generates a)3.666 E F0(BadV)
3.666 E(alue)-1.012 E F1(error)3.666 E 5.5(.N)-.605 G 2.75(ok)-5.5 G
-.165(ey)-2.86 G(code).165 E(may appear twice in the entire map.)72
454.2 Q(Otherwise, it generates a)5.5 E F0(BadV)3.666 E(alue)-1.012 E F1
(error)3.666 E(.)-.605 E 2.75(AXs)72 471.1 S(erv)-2.75 E
(er can impose restrictions on ho)-.165 E 2.75(wm)-.275 G
(odi\214ers can be changed, for e)-2.75 E(xample, if certain k)-.165 E
-.165(ey)-.11 G(s).165 E(do not generate up transitions in hardw)72
484.1 Q(are or if multiple modi\214er k)-.11 E -.165(ey)-.11 G 2.75(sa)
.165 G(re not supported.)-2.75 E(If some)5.5 E
(such restriction is violated, the status reply is)72 497.1 Q F0
(MappingF)3.666 E(ailed)-.275 E F1 2.75(,a).916 G
(nd none of the modi\214ers are)-2.75 E 2.75(changed. If)72 510.1 R
(the ne)2.75 E 2.75(wk)-.275 G -.165(ey)-2.86 G
(codes speci\214ed for a modi\214er dif).165 E
(fer from those currently de\214ned and an)-.275 E(y)-.165 E
(\(current or ne)72 523.1 Q(w\) k)-.275 E -.165(ey)-.11 G 2.75(sf).165 G
(or that modi\214er are in the logically do)-2.75 E
(wn state, the status reply is)-.275 E F0(Map-)3.666 E(pingBusy)72 536.1
Q F1 2.75(,a).916 G(nd none of the modi\214ers are changed.)-2.75 E F0
(XSetModi\214erMapping)6.416 E F1(generates a)3.666 E F0(De)72.916 549.1
Q(viceMappingNotify)-.165 E F1 -2.365 -.275(ev e)3.666 H(nt on a).275 E
F0(MappingSuccess)3.666 E F1(status.)3.666 E F0(XSetDe)72.916 566 Q
(viceModi\214erMapping)-.165 E F1(can generate)3.666 E F0(BadAlloc)3.666
E F1(,).916 E F0(BadDe)3.666 E(vice)-.165 E F1(,).916 E F0(BadMatch)
3.666 E F1 2.75(,a).916 G(nd)-2.75 E F0(BadV)3.666 E(alue)-1.012 E F1
(errors.)72 579 Q F0 2.75(2.1.11. Contr)72 605 R(olling Button Mapping)
-.198 E F1 1.76 -.88(To s)72 621.9 T(et the mapping of the b).88 E
(uttons on an e)-.22 E(xtension de)-.165 E(vice, use)-.275 E F0(XSetDe)
3.666 E(viceButtonMapping)-.165 E F1(.).916 E F0(28)282.5 769 Q 0 Cg EP
%%Page: 29 31
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF 2.75(XI)72 49 S(nput Extension Library)-2.75 E
(X11, Release 6.4)229.413 E .44 LW 36 76.75 36 87.75 DL 36 74.75 36
85.75 DL 41.5 73 36 73 DL 43.5 73 38 73 DL 49 73 43.5 73 DL/F1 11
/Times-Roman@0 SF(int XSetDe)72 88.9 Q(viceButtonMapping\()-.275 E/F2 11
/Times-Italic@0 SF(display)A F1(,).916 E F2(de)2.75 E(vice)-.165 E F1(,)
.916 E F2(map)2.75 E F1(,).916 E F2(nmap)2.75 E F1(\)).916 E(Display *)
85.75 101.9 Q F2(display)A F1(;).916 E(XDe)85.75 114.9 Q(vice *)-.275 E
F2(de)A(vice)-.165 E F1(;).916 E(unsigned char)85.75 127.9 Q F2(map)2.75
E F1([];).916 E(int)85.75 140.9 Q F2(nmap)2.75 E F1(;).916 E F2(display)
72 161.7 Q F1(Speci\214es the connection to the X serv)40.221 E(er)-.165
E(.)-.605 E F2(de)72 178.6 Q(vice)-.165 E F1(Speci\214es the desired de)
44.071 E(vice.)-.275 E F2(map)72 195.5 Q F1
(Speci\214es the mapping list.)53.058 E F2(nmap)72 212.4 Q F1
(Speci\214es the number of items in the mapping list.)47.558 E 36 208.05
36 219.05 DL 36 206.05 36 217.05 DL 41.5 217.3 36 217.3 DL 43.5 217.3 38
217.3 DL 49 217.3 43.5 217.3 DL F0(XSetDe)72.916 242.3 Q
(viceButtonMapping)-.165 E F1(sets the mapping of the b)3.666 E
(uttons on an e)-.22 E(xtension de)-.165 E 2.75(vice. If)-.275 F
(it suc-)2.75 E(ceeds, the X serv)72 255.3 Q(er generates a)-.165 E F0
(De)3.666 E(viceMappingNotify)-.165 E F1 -2.365 -.275(ev e)3.666 H
(nt, and).275 E F0(XSetDe)3.666 E(viceButtonMapping)-.165 E F1(returns)
72 268.3 Q F0(MappingSuccess)3.666 E F1 5.5(.E).916 G
(lements of the list are inde)-5.5 E -.165(xe)-.165 G 2.75(ds).165 G
(tarting from one.)-2.75 E(The length of the)5.5 E
(list must be the same as)72 281.3 Q F0(XGetDe)3.666 E
(viceButtonMapping)-.165 E F1 -.11(wo)3.666 G(uld return, or a).11 E F0
(BadV)3.666 E(alue)-1.012 E F1(error results.)3.666 E(The inde)72 294.3
Q 2.75(xi)-.165 G 2.75(sab)-2.75 G(utton number)-2.97 E 2.75(,a)-.44 G
(nd the element of the list de\214nes the ef)-2.75 E(fecti)-.275 E .33
-.165(ve n)-.275 H(umber).165 E 5.5(.A)-.605 G(zero ele-)-2.75 E
(ment disables a b)72 307.3 Q
(utton, and elements are not restricted in v)-.22 E
(alue by the number of ph)-.275 E(ysical b)-.055 E(uttons.)-.22 E(Ho)72
320.3 Q(we)-.275 E -.165(ve)-.275 G .88 -.44(r, n).165 H 2.75(ot).44 G
.22 -.11(wo e)-2.75 H(lements can ha).11 E .33 -.165(ve t)-.22 H
(he same nonzero v).165 E(alue, or a)-.275 E F0(BadV)3.666 E(alue)-1.012
E F1(error results.)3.666 E(If an)5.5 E(y)-.165 E(of the b)72 333.3 Q
(uttons to be altered are logically in the do)-.22 E(wn state,)-.275 E
F0(XSetDe)3.666 E(viceButtonMapping)-.165 E F1(returns)3.666 E F0
(MappingBusy)72.916 346.3 Q F1 2.75(,a).916 G
(nd the mapping is not changed.)-2.75 E F0(XSetDe)72.916 363.2 Q
(viceButtonMapping)-.165 E F1(can generate)3.666 E F0(BadDe)3.666 E
(vice)-.165 E F1(,).916 E F0(BadMatch)3.666 E F1 2.75(,a).916 G(nd)-2.75
E F0(BadV)3.666 E(alue)-1.012 E F1(errors.)3.666 E 1.76 -.88(To g)72
393.1 T(et the b).88 E(utton mapping, use)-.22 E F0(XGetDe)3.666 E
(viceButtonMapping)-.165 E F1(.).916 E 36 410.85 36 421.85 DL 36 408.85
36 419.85 DL 41.5 407.1 36 407.1 DL 43.5 407.1 38 407.1 DL 49 407.1 43.5
407.1 DL(int XGetDe)72 423 Q(viceButtonMapping\()-.275 E F2(display)A F1
(,).916 E F2(de)2.75 E(vice)-.165 E F1(,).916 E F2(map_r)2.75 E(eturn)
-.407 E F1(,).916 E F2(nmap)2.75 E F1(\)).916 E(Display *)85.75 436 Q F2
(display)A F1(;).916 E(XDe)85.75 449 Q(vice *)-.275 E F2(de)A(vice)-.165
E F1(;).916 E(unsigned char)85.75 462 Q F2(map_r)2.75 E(eturn)-.407 E F1
([];).916 E(int)85.75 475 Q F2(nmap)2.75 E F1(;).916 E F2(display)72
495.8 Q F1(Speci\214es the connection to the X serv)40.221 E(er)-.165 E
(.)-.605 E F2(de)72 512.7 Q(vice)-.165 E F1(Speci\214es the desired de)
44.071 E(vice.)-.275 E F2(map_r)72 529.6 Q(eturn)-.407 E F1
(Speci\214es the mapping list.)20.465 E F2(nmap)72 546.5 Q F1
(Speci\214es the number of items in the mapping list.)47.558 E 36 542.15
36 553.15 DL 36 540.15 36 551.15 DL 41.5 551.4 36 551.4 DL 43.5 551.4 38
551.4 DL 49 551.4 43.5 551.4 DL F0(XGetDe)72.916 576.4 Q
(viceButtonMapping)-.165 E F1
(returns the current mapping of the speci\214ed e)3.666 E(xtension de)
-.165 E 2.75(vice. Ele-)-.275 F(ments of the list are inde)72 589.4 Q
-.165(xe)-.165 G 2.75(ds).165 G(tarting from one.)-2.75 E F0(XGetDe)
6.416 E(viceButtonMapping)-.165 E F1(returns the number)3.666 E(of ph)72
602.4 Q(ysical b)-.055 E(uttons actually on the pointer)-.22 E 5.5(.T)
-.605 G(he nominal mapping for the b)-5.5 E(uttons is the identity)-.22
E(mapping: map[i]=i.)72 615.4 Q(The nmap ar)5.5 E
(gument speci\214es the length of the array where the b)-.198 E
(utton map-)-.22 E(ping is returned, and only the \214rst nmap elements\
 are returned in map_return.)72 628.4 Q F0(XGetDe)72.916 645.3 Q
(viceButtonMapping)-.165 E F1(can generate)3.666 E F0(BadDe)3.666 E
(vice)-.165 E F1(and)3.666 E F0(BadMatch)3.666 E F1(errors.)3.666 E F0
2.75(2.1.12. Obtaining)72 671.3 R(the State of a De)2.75 E(vice)-.165 E
F1 1.76 -.88(To o)72 688.2 T
(btain information that describes the state of the k).88 E -.165(ey)-.11
G(s, b).165 E(uttons, and v)-.22 E(aluators of an e)-.275 E(xtension)
-.165 E(de)72 701.2 Q(vice, use)-.275 E F0(XQueryDe)3.666 E(viceState)
-.165 E F1(.).916 E F0(29)282.5 769 Q 0 Cg EP
%%Page: 30 32
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF 2.75(XI)72 49 S(nput Extension Library)-2.75 E
(X11, Release 6.4)229.413 E .44 LW 36 76.75 36 87.75 DL 36 74.75 36
85.75 DL 41.5 73 36 73 DL 43.5 73 38 73 DL 49 73 43.5 73 DL/F1 11
/Times-Roman@0 SF(XDe)72 88.9 Q(viceState * XQueryDe)-.275 E
(viceState\()-.275 E/F2 11/Times-Italic@0 SF(display)A F1(,).916 E F2
(de)2.75 E(vice)-.165 E F1(\)).916 E(Display *)85.75 101.9 Q F2(display)
A F1(;).916 E(XDe)85.75 114.9 Q(vice *)-.275 E F2(de)A(vice)-.165 E F1
(;).916 E F2(display)72 135.7 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2(de)72 152.6 Q(vice)-.165 E F1(Speci\214es the desired de)44.071 E
(vice.)-.275 E 36 148.25 36 159.25 DL 36 146.25 36 157.25 DL 41.5 157.5
36 157.5 DL 43.5 157.5 38 157.5 DL 49 157.5 43.5 157.5 DL F0(XQueryDe)
72.916 182.5 Q(viceState)-.165 E F1(returns a pointer to an)3.666 E F0
(XDe)3.666 E(viceState)-.165 E F1(structure, which points to a list of)
3.666 E(structures that describe the state of the k)72 195.5 Q -.165(ey)
-.11 G(s, b).165 E(uttons, and v)-.22 E(aluators on the de)-.275 E
(vice:)-.275 E 36 217.15 36 228.15 DL 36 215.15 36 226.15 DL 41.5 213.4
36 213.4 DL 43.5 213.4 38 213.4 DL 49 213.4 43.5 213.4 DL
(typedef struct {)72 231.9 Q(XID de)108 244.9 Q(vice_id;)-.275 E
(int num_classes;)108 257.9 Q(XInputClass *data;)108 270.9 Q 2.75(}X)72
283.9 S(De)-2.75 E(viceState;)-.275 E 36 286.05 36 297.05 DL 36 284.05
36 295.05 DL 41.5 295.3 36 295.3 DL 43.5 295.3 38 295.3 DL 49 295.3 43.5
295.3 DL(The structures are of v)72 320.3 Q(ariable length, b)-.275 E
(ut the \214rst tw)-.22 E 2.75(om)-.11 G
(embers are common to all and are as fol-)-2.75 E(lo)72 333.3 Q(ws:)
-.275 E 36 354.95 36 365.95 DL 36 352.95 36 363.95 DL 41.5 351.2 36
351.2 DL 43.5 351.2 38 351.2 DL 49 351.2 43.5 351.2 DL(typedef struct {)
72 369.7 Q(unsigned char class;)108 382.7 Q(unsigned char length;)108
395.7 Q 2.75(}X)72 408.7 S(InputClass;)-2.75 E 36 410.85 36 421.85 DL 36
408.85 36 419.85 DL 41.5 420.1 36 420.1 DL 43.5 420.1 38 420.1 DL 49
420.1 43.5 420.1 DL(The class member contains a class identi\214er)72
445.1 Q 5.5(.T)-.605 G(his identi\214er can be compared with constants)
-5.5 E(de\214ned in the \214le <)72 458.1 Q F0(X11/extensions/XI.h).916
E F1 2.75(>. Currently).916 F(de\214ned constants are:)2.75 E F0 -.275
(Ke)3.666 G(yClass).275 E F1(,).916 E F0(Button-)3.666 E(Class)72 471.1
Q F1 2.75(,a).916 G(nd)-2.75 E F0 -1.012(Va)3.666 G(luatorClass)1.012 E
F1(.).916 E(The length member contains the length of the structure and \
can be used by clients to tra)72 488 Q -.165(ve)-.22 G(rse the).165 E
(list.)72 501 Q(The)72 517.9 Q F0(XV)3.666 E(aluatorState)-1.012 E F1
(structure describes the current state of the v)3.666 E
(aluators on the de)-.275 E 2.75(vice. The)-.275 F(num_v)72 530.9 Q
(aluators member contains the number of v)-.275 E(aluators on the de)
-.275 E 2.75(vice. The)-.275 F(mode member is a)2.75 E(mask whose bits \
report the data mode and other state information for the de)72 543.9 Q
2.75(vice. The)-.275 F(follo)2.75 E(wing)-.275 E
(bits are currently de\214ned:)72 556.9 Q(De)108 576.4 Q 12.71
(viceMode 1)-.275 F(<< 0)2.75 E(Relati)43.092 E .33 -.165(ve = 0)-.275 H
2.75(,A).165 G(bsolute = 1)-2.75 E 3.239(ProximityState 1)108 589.4 R
(<< 1)2.75 E(InProximity = 0, OutOfProximity = 1)43.092 E(The v)72 608.9
Q(aluators member contains a pointer to an array of inte)-.275 E
(gers that describe the current v)-.165 E(alue of)-.275 E(the v)72 621.9
Q 2.75(aluators. If)-.275 F(the mode is)2.75 E F0(Relati)3.666 E -.11
(ve)-.11 G F1 2.75(,t)1.026 G(hese v)-2.75 E(alues are unde\214ned.)
-.275 E F0(30)282.5 769 Q 0 Cg EP
%%Page: 31 33
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF 2.75(XI)72 49 S(nput Extension Library)-2.75 E
(X11, Release 6.4)229.413 E .44 LW 36 76.75 36 87.75 DL 36 74.75 36
85.75 DL 41.5 73 36 73 DL 43.5 73 38 73 DL 49 73 43.5 73 DL/F1 11
/Times-Roman@0 SF(typedef struct {)72 91.5 Q(unsigned char class;)108
104.5 Q(unsigned char length;)108 117.5 Q(unsigned char num_v)108 130.5
Q(aluators;)-.275 E(unsigned char mode;)108 143.5 Q(int *v)108 156.5 Q
(aluators;)-.275 E 2.75(}X)72 169.5 S -1.221(Va)-2.75 G(luatorState;)
1.221 E 36 171.65 36 182.65 DL 36 169.65 36 180.65 DL 41.5 180.9 36
180.9 DL 43.5 180.9 38 180.9 DL 49 180.9 43.5 180.9 DL(The)72 205.9 Q F0
(XK)3.666 E(eyState)-.275 E F1
(structure describes the current state of the k)3.666 E -.165(ey)-.11 G
2.75(so).165 G 2.75(nt)-2.75 G(he de)-2.75 E 2.75(vice. Byte)-.275 F
2.75(N\()2.75 G(from 0\))-2.75 E(contains the bits for k)72 218.9 Q .33
-.165(ey 8)-.11 H 2.75(Nt).165 G 2.75(o8)-2.75 G 2.75(N+7w)-2.75 G
(ith the least signi\214cant bit in the byte representing k)-2.75 E
-.165(ey)-.11 G(8N.)72 231.9 Q 36 253.55 36 264.55 DL 36 251.55 36
262.55 DL 41.5 249.8 36 249.8 DL 43.5 249.8 38 249.8 DL 49 249.8 43.5
249.8 DL(typedef struct {)72 268.3 Q(unsigned char class;)108 281.3 Q
(unsigned char length;)108 294.3 Q(short num_k)108 307.3 Q -.165(ey)-.11
G(s;).165 E(char k)108 320.3 Q -.165(ey)-.11 G(s[32];).165 E 2.75(}X)72
333.3 S -2.365 -.275(Ke y)-2.75 H(State;).275 E 36 335.45 36 346.45 DL
36 333.45 36 344.45 DL 41.5 344.7 36 344.7 DL 43.5 344.7 38 344.7 DL 49
344.7 43.5 344.7 DL(The)72 369.7 Q F0(XButtonState)3.666 E F1
(structure describes the current state of the b)3.666 E
(uttons on the de)-.22 E 2.75(vice. Byte)-.275 F(N)2.75 E
(\(from 0\) contains the bits for b)72 382.7 Q
(utton 8N to 8N + 7 with the least signi\214cant bit in the byte repre-)
-.22 E(senting b)72 395.7 Q(utton 8N.)-.22 E 36 417.35 36 428.35 DL 36
415.35 36 426.35 DL 41.5 413.6 36 413.6 DL 43.5 413.6 38 413.6 DL 49
413.6 43.5 413.6 DL(typedef struct {)72 432.1 Q(unsigned char class;)108
445.1 Q(unsigned char length;)108 458.1 Q(short num_b)108 471.1 Q
(uttons;)-.22 E(char b)108 484.1 Q(uttons[32];)-.22 E 2.75(}X)72 497.1 S
(ButtonState;)-2.75 E 36 499.25 36 510.25 DL 36 497.25 36 508.25 DL 41.5
508.5 36 508.5 DL 43.5 508.5 38 508.5 DL 49 508.5 43.5 508.5 DL F0
(XQueryDe)72.916 533.5 Q(viceState)-.165 E F1(can generate)3.666 E F0
(BadDe)3.666 E(vice)-.165 E F1(errors.)3.666 E 1.76 -.88(To f)72 563.4 T
(ree the data returned by this function, use).88 E F0(XFr)3.666 E(eeDe)
-.198 E(viceState)-.165 E F1(.).916 E 36 581.15 36 592.15 DL 36 579.15
36 590.15 DL 41.5 577.4 36 577.4 DL 43.5 577.4 38 577.4 DL 49 577.4 43.5
577.4 DL -.22(vo)72 593.3 S(id XFreeDe).22 E(viceState\()-.275 E/F2 11
/Times-Italic@0 SF(state)A F1(\)).916 E(XDe)85.75 606.3 Q
(viceState *state;)-.275 E F2(state)72 627.1 Q F1
(Speci\214es the pointer to the)51.221 E F0(XDe)3.666 E(viceState)-.165
E F1(data returned by a pre)3.666 E(vious call to)-.275 E F0(XQueryDe)
144.916 640.1 Q(viceState)-.165 E F1(.).916 E 36 635.75 36 646.75 DL 36
633.75 36 644.75 DL 41.5 645 36 645 DL 43.5 645 38 645 DL 49 645 43.5
645 DL F0(XFr)72.916 670 Q(eeDe)-.198 E(viceState)-.165 E F1
(frees the de)3.666 E(vice state data.)-.275 E F0 2.75(2.2. Ev)72 696 R
(ents)-.11 E F1(The input e)72 712.9 Q(xtension creates input e)-.165 E
-.165(ve)-.275 G(nts analogous to the core input e).165 E -.165(ve)-.275
G 2.75(nts. These).165 F -.165(ex)2.75 G(tension).165 E(input e)72 725.9
Q -.165(ve)-.275 G(nts are generated by manipulating one of the e).165 E
(xtension input de)-.165 E 2.75(vices. The)-.275 F(remainder of)2.75 E
F0(31)282.5 769 Q 0 Cg EP
%%Page: 32 34
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF 2.75(XI)72 49 S(nput Extension Library)-2.75 E
(X11, Release 6.4)229.413 E/F1 11/Times-Roman@0 SF
(this section discusses the follo)72 85 Q(wing X Input Extension e)-.275
E -.165(ve)-.275 G(nt topics:).165 E 23.65<8345>72 101.9 S -.165(ve)
-23.65 G(nt types).165 E 23.65<8345>72 118.8 S -.165(ve)-23.65 G
(nt classes).165 E 23.65<8345>72 135.7 S -.165(ve)-23.65 G
(nt structures).165 E F0 2.75(2.2.1. Ev)72 161.7 R(ent T)-.11 E(ypes)
-.814 E F1(Ev)72 178.6 Q(ent types are inte)-.165 E
(ger numbers that a client can use to determine what kind of e)-.165 E
-.165(ve)-.275 G(nt it has).165 E(recei)72 191.6 Q -.165(ve)-.275 G 2.75
(d. The).165 F(client compares the type \214eld of the e)2.75 E -.165
(ve)-.275 G(nt structure with kno).165 E(wn e)-.275 E -.165(ve)-.275 G
(nt types to).165 E(mak)72 204.6 Q 2.75(et)-.11 G(his determination.)
-2.75 E(The core input e)72 221.5 Q -.165(ve)-.275 G
(nt types are constants and are de\214ned in the header \214le <).165 E
F0(X11/X.h).916 E F1 2.75(>. Extension).916 F -2.365 -.275(ev e)72 234.5
T(nt types are not constants.).275 E(Instead, the)5.5 E 2.75(ya)-.165 G
(re dynamically allocated by the e)-2.75 E(xtension')-.165 E 2.75(sr)
-.605 G(equest)-2.75 E(to the X serv)72 247.5 Q(er when the e)-.165 E
(xtension is initialized.)-.165 E(Because of this, e)5.5 E(xtension e)
-.165 E -.165(ve)-.275 G(nt types must be).165 E
(obtained by the client from the serv)72 260.5 Q(er)-.165 E(.)-.605 E
(The client program determines the e)72 277.4 Q -.165(ve)-.275 G
(nt type for an e).165 E(xtension e)-.165 E -.165(ve)-.275 G
(nt by using the information).165 E(returned by the)72 290.4 Q F0
(XOpenDe)3.666 E(vice)-.165 E F1 2.75(request. This)3.666 F
(type can then be used for comparison with the type)2.75 E(\214eld of e)
72 303.4 Q -.165(ve)-.275 G(nts recei).165 E -.165(ve)-.275 G 2.75(db)
.165 G 2.75(yt)-2.75 G(he client.)-2.75 E(Extension e)72 320.3 Q -.165
(ve)-.275 G(nts propag).165 E(ate up the windo)-.055 E 2.75(wh)-.275 G
(ierarch)-2.75 E 2.75(yi)-.055 G 2.75(nt)-2.75 G
(he same manner as core e)-2.75 E -.165(ve)-.275 G 2.75(nts. If).165 F
2.75(aw)2.75 G(in-)-2.75 E(do)72 333.3 Q 2.75(wi)-.275 G 2.75(sn)-2.75 G
(ot interested in an e)-2.75 E(xtension e)-.165 E -.165(ve)-.275 G
(nt, it usually propag).165 E(ates to the closest ancestor that is)-.055
E(interested, unless the dont_propag)72 346.3 Q(ate list prohibits it.)
-.055 E(Grabs of e)5.5 E(xtension de)-.165 E(vices may alter the set)
-.275 E(of windo)72 359.3 Q(ws that recei)-.275 E .33 -.165(ve a p)-.275
H(articular e).165 E(xtension e)-.165 E -.165(ve)-.275 G(nt.).165 E
(The follo)72 376.2 Q(wing table lists the e)-.275 E -.165(ve)-.275 G
(nt cate).165 E(gory and its associated e)-.165 E -.165(ve)-.275 G
(nt type or types.).165 E .44 LW 448.5 387.45 72 387.45 DL F0(Ev)72
403.7 Q(ent Category)-.11 E(Ev)122.987 E(ent T)-.11 E(ype)-.814 E 448.5
414.45 72 414.45 DL F1(De)72 424.7 Q(vice k)-.275 E -.165(ey)-.11 G F0
(De)269.416 424.7 Q(viceK)-.165 E(eyPr)-.275 E(ess)-.198 E(De)269.416
437.7 Q(viceK)-.165 E(eyRelease)-.275 E F1(De)72 453.7 Q(vice motion)
-.275 E F0(De)269.416 453.7 Q(viceButtonPr)-.165 E(ess)-.198 E(De)
269.416 466.7 Q(viceButtonRelease)-.165 E(De)269.416 479.7 Q
(viceMotionNotify)-.165 E F1(De)72 495.7 Q(vice input focus)-.275 E F0
(De)269.416 495.7 Q(viceF)-.165 E(ocusIn)-.275 E(De)269.416 508.7 Q
(viceF)-.165 E(ocusOut)-.275 E F1(De)72 524.7 Q
(vice state noti\214cation)-.275 E F0(De)269.416 524.7 Q
(viceStateNotify)-.165 E F1(De)72 540.7 Q(vice proximity)-.275 E F0(Pr)
269.416 540.7 Q(oximityIn)-.198 E(Pr)269.416 553.7 Q(oximityOut)-.198 E
F1(De)72 569.7 Q(vice mapping)-.275 E F0(De)269.416 569.7 Q
(viceMappingNotify)-.165 E F1(De)72 585.7 Q(vice change)-.275 E F0
(ChangeDe)269.416 585.7 Q(viceNotify)-.165 E 448.5 596.45 72 596.45 DL
2.75(2.2.2. Ev)72 626.2 R(ent Classes)-.11 E F1(Ev)72 643.1 Q
(ent classes are inte)-.165 E(ger numbers that are used in the same w)
-.165 E(ay as the core e)-.11 E -.165(ve)-.275 G(nt masks.).165 E(The)
5.5 E(y)-.165 E(are used by a client program to indicate to the serv)72
656.1 Q(er which e)-.165 E -.165(ve)-.275 G
(nts that client program wishes to).165 E(recei)72 669.1 Q -.165(ve)
-.275 G(.).165 E(The core input e)72 686 Q -.165(ve)-.275 G
(nt masks are constants and are de\214ned in the header \214le <).165 E
F0(X11/X.h).916 E F1 2.75(>. Exten-).916 F(sion e)72 699 Q -.165(ve)
-.275 G(nt classes are not constants.).165 E(Instead, the)5.5 E 2.75(ya)
-.165 G(re dynamically allocated by the e)-2.75 E(xtension')-.165 E(s)
-.605 E(request to the X serv)72 712 Q(er when the e)-.165 E
(xtension is initialized.)-.165 E(Because of this, e)5.5 E(xtension e)
-.165 E -.165(ve)-.275 G(nt classes).165 E
(must be obtained by the client from the serv)72 725 Q(er)-.165 E(.)
-.605 E F0(32)282.5 769 Q 0 Cg EP
%%Page: 33 35
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF 2.75(XI)72 49 S(nput Extension Library)-2.75 E
(X11, Release 6.4)229.413 E/F1 11/Times-Roman@0 SF(The e)72 85 Q -.165
(ve)-.275 G(nt class for an e).165 E(xtension e)-.165 E -.165(ve)-.275 G
(nt and de).165 E(vice is obtained from information returned by the)
-.275 E F0(XOpenDe)72.916 98 Q(vice)-.165 E F1 2.75(function. This)3.666
F(class can then be used in an)2.75 E F0(XSelectExtensionEv)3.666 E(ent)
-.11 E F1(request to)3.666 E(ask that e)72 111 Q -.165(ve)-.275 G
(nts of that type from that de).165 E
(vice be sent to the client program.)-.275 E -.165(Fo)72 127.9 S(r).165
E F0(De)3.666 E(viceButtonPr)-.165 E(ess)-.198 E F1 -2.365 -.275(ev e)
3.666 H(nts, the client may specify whether or not an implicit passi)
.275 E .33 -.165(ve g)-.275 H(rab).165 E(should be done when the b)72
140.9 Q(utton is pressed.)-.22 E(If the client w)5.5 E
(ants to guarantee that it will recei)-.11 E .33 -.165(ve a)-.275 H F0
(De)72.916 153.9 Q(viceButtonRelease)-.165 E F1 -2.365 -.275(ev e)3.666
H(nt for each).275 E F0(De)3.666 E(viceButtonPr)-.165 E(ess)-.198 E F1
-2.365 -.275(ev e)3.666 H(nt it recei).275 E -.165(ve)-.275 G
(s, it should specify the).165 E F0(De)72.916 166.9 Q(viceButtonPr)-.165
E(essGrab)-.198 E F1(class in addition to the)3.666 E F0(De)3.666 E
(viceButtonPr)-.165 E(ess)-.198 E F1 2.75(class. This)3.666 F
(restricts the)2.75 E
(client in that only one client at a time may request)72 179.9 Q F0(De)
3.666 E(viceButtonPr)-.165 E(ess)-.198 E F1 -2.365 -.275(ev e)3.666 H
(nts from the same).275 E(de)72 192.9 Q(vice and windo)-.275 E 2.75(wi)
-.275 G 2.75(fa)-2.75 G .33 -.165(ny c)-2.75 H
(lient speci\214es this class.).165 E(If an)72 209.8 Q 2.75(yc)-.165 G
(lient has speci\214ed the)-2.75 E F0(De)3.666 E(viceButtonPr)-.165 E
(essGrab)-.198 E F1(class, an)3.666 E 2.75(yr)-.165 G(equests by an)
-2.75 E 2.75(yo)-.165 G(ther client)-2.75 E(that specify the same de)72
222.8 Q(vice and windo)-.275 E 2.75(wa)-.275 G(nd specify either)-2.75 E
F0(De)3.666 E(viceButtonPr)-.165 E(ess)-.198 E F1(or)3.666 E F0(De)3.666
E(viceBut-)-.165 E(tonPr)72 235.8 Q(essGrab)-.198 E F1(will cause an)
3.666 E F0(Access)3.666 E F1(error to be generated.)3.666 E(If only the)
72 252.7 Q F0(De)3.666 E(viceButtonPr)-.165 E(ess)-.198 E F1
(class is speci\214ed, no implicit passi)3.666 E .33 -.165(ve g)-.275 H
(rab will be done when a).165 E -.22(bu)72 265.7 S
(tton is pressed on the de).22 E 2.75(vice. Multiple)-.275 F
(clients may use this class to specify the same de)2.75 E(vice and)-.275
E(windo)72 278.7 Q 2.75(wc)-.275 G(ombination.)-2.75 E
(The client may also select)72 295.6 Q F0(De)3.666 E(viceMotion)-.165 E
F1 -2.365 -.275(ev e)3.666 H(nts only when a b).275 E(utton is do)-.22 E
2.75(wn. It)-.275 F(does this by)2.75 E(specifying the e)72 308.6 Q
-.165(ve)-.275 G(nt classes).165 E F0(De)3.666 E(viceButton1Motion)-.165
E F1(through)3.666 E F0(De)3.666 E(viceButton5Motion)-.165 E F1 5.5(.A)
.916 G 2.75(ni)-5.5 G(nput)-2.75 E(de)72 321.6 Q
(vice will support only as man)-.275 E 2.75(yb)-.165 G
(utton motion classes as it has b)-2.97 E(uttons.)-.22 E F0 2.75
(2.2.3. Ev)72 347.6 R(ent Structur)-.11 E(es)-.198 E F1(Each e)72 364.5
Q(xtension e)-.165 E -.165(ve)-.275 G
(nt type has a corresponding structure declared in <).165 E F0
(X11/extensions/XIn-).916 E(put.h)72 377.5 Q F1 2.75(>. All).916 F
-2.365 -.275(ev e)2.75 H(nt structures ha).275 E .33 -.165(ve t)-.22 H
(he follo).165 E(wing common members:)-.275 E 50.308(type Set)72 394.4 R
(to the e)2.75 E -.165(ve)-.275 G
(nt type number that uniquely identi\214es it.).165 E -.165(Fo)5.5 G
2.75(re).165 G(xample, when the X)-2.915 E(serv)144 407.4 Q
(er reports a)-.165 E F0(De)3.666 E(viceK)-.165 E(eyPr)-.275 E(ess)-.198
E F1 -2.365 -.275(ev e)3.666 H(nt to a client application, it sends an)
.275 E F0(XDe-)3.666 E(viceK)144 420.4 Q(eyPr)-.275 E(essEv)-.198 E(ent)
-.11 E F1(structure.)3.666 E 45.424(serial Set)72 437.3 R
(from the serial number reported in the protocol b)2.75 E(ut e)-.22 E
(xpanded from the 16-bit)-.165 E
(least signi\214cant bits to a full 32-bit v)144 450.3 Q(alue.)-.275 E
(send_e)72 467.2 Q -.165(ve)-.275 G 20.201(nt Set).165 F(to)2.75 E F0
-.814(Tr)3.666 G(ue).814 E F1(if the e)3.666 E -.165(ve)-.275 G
(nt came from an).165 E F0(XSendEv)3.666 E(ent)-.11 E F1(request.)3.666
E 37.471(display Set)72 484.1 R
(to a pointer to a structure that de\214nes the display on which the e)
2.75 E -.165(ve)-.275 G(nt w).165 E(as)-.11 E(read.)144 497.1 Q
(Extension e)72 514 Q -.165(ve)-.275 G
(nt structures report the current position of the X pointer).165 E 5.5
(.I)-.605 G 2.75(na)-5.5 G(ddition, if the de)-2.75 E(vice)-.275 E
(reports motion data and is reporting absolute data, the current v)72
527 Q(alue of an)-.275 E 2.75(yv)-.165 G(aluators the de)-3.025 E(vice)
-.275 E(contains is also reported.)72 540 Q F0 2.75(2.2.3.1. De)72 566 R
(vice K)-.165 E(ey Ev)-.275 E(ents)-.11 E F1 -2.365 -.275(Ke y)72 582.9
T -2.365 -.275(ev e)3.025 H(nts from e).275 E(xtension de)-.165 E
(vices contain all the information that is contained in a k)-.275 E .33
-.165(ey e)-.11 H -.165(ve)-.11 G(nt).165 E(from the X k)72 595.9 Q
-.165(ey)-.11 G 2.75(board. In).165 F(addition, the)2.75 E 2.75(yc)-.165
G(ontain a de)-2.75 E(vice ID and report the current v)-.275 E
(alue of an)-.275 E(y)-.165 E -.275(va)72 608.9 S(luators on the de).275
E(vice, if that de)-.275 E(vice is reporting absolute data.)-.275 E
(If data for more than six v)5.5 E(alua-)-.275 E
(tors is being reported, more than one k)72 621.9 Q .33 -.165(ey e)-.11
H -.165(ve)-.11 G(nt will be sent.).165 E(The ax)5.5 E
(es_count member contains the)-.165 E(number of ax)72 634.9 Q
(es that are being reported.)-.165 E(The serv)5.5 E(er sends as man)
-.165 E 2.75(yo)-.165 G 2.75(ft)-2.75 G(hese e)-2.75 E -.165(ve)-.275 G
(nts as are needed to).165 E(report the de)72 647.9 Q(vice data.)-.275 E
(Each e)5.5 E -.165(ve)-.275 G(nt contains the total number of ax).165 E
(es reported in the ax)-.165 E(es_count)-.165 E
(member and the \214rst axis reported in the current e)72 660.9 Q -.165
(ve)-.275 G(nt in the \214rst_axis member).165 E 5.5(.I)-.605 G 2.75(ft)
-5.5 G(he de)-2.75 E(vice sup-)-.275 E(ports input class)72 673.9 Q F0
-1.012(Va)3.666 G(luators)1.012 E F1 2.75(,b).916 G
(ut is not reporting absolute mode data, the ax)-2.97 E(es_count member)
-.165 E(contains zero \(0\).)72 686.9 Q(The location reported in the x,\
 y and x_root, y_root members is the location of the core X pointer)72
703.8 Q(.)-.605 E F0(33)282.5 769 Q 0 Cg EP
%%Page: 34 36
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF 2.75(XI)72 49 S(nput Extension Library)-2.75 E
(X11, Release 6.4)229.413 E/F1 11/Times-Roman@0 SF(The)72 85 Q F0(XDe)
3.666 E(viceK)-.165 E(eyEv)-.275 E(ent)-.11 E F1
(structure is de\214ned as follo)3.666 E(ws:)-.275 E .44 LW 36 106.65 36
117.65 DL 36 104.65 36 115.65 DL 41.5 102.9 36 102.9 DL 43.5 102.9 38
102.9 DL 49 102.9 43.5 102.9 DL(typedef struct {)72 121.4 Q(int type;)
108 134.4 Q(/* of e)143.634 E -.165(ve)-.275 G(nt */).165 E
(unsigned long serial;)108 147.4 Q(/* # of last request processed */)
88.337 E(Bool send_e)108 160.4 Q -.165(ve)-.275 G 100.998(nt; /*).165 F
(true if from SendEv)2.75 E(ent request */)-.165 E(Display *display;)108
173.4 Q(/* Display the e)102.692 E -.165(ve)-.275 G(nt w).165 E
(as read from */)-.11 E -.44(Wi)108 186.4 S(ndo).44 E 2.75(ww)-.275 G
(indo)-2.75 E 99.106(w; /*)-.275 F("e)2.75 E -.165(ve)-.275 G(nt" windo)
.165 E 2.75(wr)-.275 G(eported relati)-2.75 E .33 -.165(ve t)-.275 H
2.75(o*).165 G(/)-2.75 E(XID de)108 199.4 Q(viceid;)-.275 E -.44(Wi)108
212.4 S(ndo).44 E 2.75(wr)-.275 G 116.552(oot; /*)-2.75 F(root windo)
2.75 E 2.75(we)-.275 G -.165(ve)-3.025 G(nt occurred on */).165 E -.44
(Wi)108 225.4 S(ndo).44 E 2.75(ws)-.275 G(ubwindo)-2.75 E 83.827(w; /*)
-.275 F(child windo)2.75 E 2.75(w*)-.275 G(/)-2.75 E -.385(Ti)108 238.4
S(me time;).385 E(/* milliseconds */)131.798 E(int x, y;)108 251.4 Q
(/* x, y coordinates in e)146.076 E -.165(ve)-.275 G(nt windo).165 E
2.75(w*)-.275 G(/)-2.75 E(int x_root;)108 264.4 Q(/* coordinates relati)
133.855 E .33 -.165(ve t)-.275 H 2.75(or).165 G(oot */)-2.75 E
(int y_root;)108 277.4 Q(/* coordinates relati)133.855 E .33 -.165(ve t)
-.275 H 2.75(or).165 G(oot */)-2.75 E(unsigned int state;)108 290.4 Q
(/* k)99.942 E .33 -.165(ey o)-.11 H 2.75(rb).165 G(utton mask */)-2.97
E(unsigned int k)108 303.4 Q -.165(ey)-.11 G 80.978(code; /*).165 F
(detail */)2.75 E(Bool same_screen;)108 316.4 Q
(/* same screen \215ag */)96.598 E(unsigned int de)108 329.4 Q 63.257
(vice_state; /*)-.275 F(de)2.75 E(vice k)-.275 E .33 -.165(ey o)-.11 H
2.75(rb).165 G(utton mask */)-2.97 E(unsigned char ax)108 342.4 Q
(es_count;)-.165 E(unsigned char \214rst_axis;)108 355.4 Q
(int axis_data[6];)108 368.4 Q 2.75(}X)72 381.4 S(De)-2.75 E(viceK)-.275
E -.165(ey)-.275 G(Ev).165 E(ent;)-.165 E(typedef XDe)72 407.4 Q(viceK)
-.275 E -.165(ey)-.275 G(Ev).165 E(ent XDe)-.165 E(viceK)-.275 E -.165
(ey)-.275 G(PressedEv).165 E(ent;)-.165 E(typedef XDe)72 420.4 Q(viceK)
-.275 E -.165(ey)-.275 G(Ev).165 E(ent XDe)-.165 E(viceK)-.275 E -.165
(ey)-.275 G(ReleasedEv).165 E(ent;)-.165 E 36 418.65 36 429.65 DL 36
416.65 36 427.65 DL 41.5 427.9 36 427.9 DL 43.5 427.9 38 427.9 DL 49
427.9 43.5 427.9 DL F0 2.75(2.2.3.2. De)72 465.9 R(vice Button Ev)-.165
E(ents)-.11 E F1(Button e)72 482.8 Q -.165(ve)-.275 G(nts from e).165 E
(xtension de)-.165 E
(vices contain all the information that is contained in a b)-.275 E
(utton)-.22 E -2.365 -.275(ev e)72 495.8 T(nt from the X pointer).275 E
5.5(.I)-.605 G 2.75(na)-5.5 G(ddition, the)-2.75 E 2.75(yc)-.165 G
(ontain a de)-2.75 E(vice ID and report the current v)-.275 E
(alue of an)-.275 E(y)-.165 E -.275(va)72 508.8 S(luators on the de).275
E(vice if that de)-.275 E(vice is reporting absolute data.)-.275 E
(If data for more than six v)5.5 E(alua-)-.275 E
(tors is being reported, more than one b)72 521.8 Q(utton e)-.22 E -.165
(ve)-.275 G(nt may be sent.).165 E(The ax)5.5 E
(es_count member contains)-.165 E(the number of ax)72 534.8 Q
(es that are being reported.)-.165 E(The serv)5.5 E(er sends as man)
-.165 E 2.75(yo)-.165 G 2.75(ft)-2.75 G(hese e)-2.75 E -.165(ve)-.275 G
(nts as are).165 E(needed to report the de)72 547.8 Q(vice data.)-.275 E
(Each e)5.5 E -.165(ve)-.275 G(nt contains the total number of ax).165 E
(es reported in the)-.165 E(ax)72 560.8 Q
(es_count member and the \214rst axis reported in the current e)-.165 E
-.165(ve)-.275 G(nt in the \214rst_axis member).165 E 5.5(.I)-.605 G
2.75(ft)-5.5 G(he)-2.75 E(de)72 573.8 Q(vice supports input class)-.275
E F0 -1.012(Va)3.666 G(luators)1.012 E F1 2.75(,b).916 G
(ut is not reporting absolute mode data, the ax)-2.97 E(es_count)-.165 E
(member contains zero \(0\).)72 586.8 Q(The location reported in the x,\
 y and x_root, y_root members is the location of the core X pointer)72
603.7 Q(.)-.605 E F0(34)282.5 769 Q 0 Cg EP
%%Page: 35 37
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF 2.75(XI)72 49 S(nput Extension Library)-2.75 E
(X11, Release 6.4)229.413 E .44 LW 36 76.75 36 87.75 DL 36 74.75 36
85.75 DL 41.5 73 36 73 DL 43.5 73 38 73 DL 49 73 43.5 73 DL/F1 11
/Times-Roman@0 SF(typedef struct {)72 91.5 Q(int type;)108 104.5 Q
(/* of e)143.634 E -.165(ve)-.275 G(nt */).165 E(unsigned long serial;)
108 117.5 Q(/* # of last request processed by serv)88.337 E(er */)-.165
E(Bool send_e)108 130.5 Q -.165(ve)-.275 G 100.998(nt; /*).165 F
(true if from a SendEv)2.75 E(ent request */)-.165 E(Display *display;)
108 143.5 Q(/* Display the e)102.692 E -.165(ve)-.275 G(nt w).165 E
(as read from */)-.11 E -.44(Wi)108 156.5 S(ndo).44 E 2.75(ww)-.275 G
(indo)-2.75 E 99.106(w; /*)-.275 F("e)2.75 E -.165(ve)-.275 G(nt" windo)
.165 E 2.75(wr)-.275 G(eported relati)-2.75 E .33 -.165(ve t)-.275 H
2.75(o*).165 G(/)-2.75 E(XID de)108 169.5 Q(viceid;)-.275 E -.44(Wi)108
182.5 S(ndo).44 E 2.75(wr)-.275 G 116.552(oot; /*)-2.75 F(root windo)
2.75 E 2.75(wt)-.275 G(hat the e)-2.75 E -.165(ve)-.275 G
(nt occurred on */).165 E -.44(Wi)108 195.5 S(ndo).44 E 2.75(ws)-.275 G
(ubwindo)-2.75 E 83.827(w; /*)-.275 F(child windo)2.75 E 2.75(w*)-.275 G
(/)-2.75 E -.385(Ti)108 208.5 S(me time;).385 E(/* milliseconds */)
131.798 E(int x, y;)108 221.5 Q(/* x, y coordinates in e)146.076 E -.165
(ve)-.275 G(nt windo).165 E 2.75(w*)-.275 G(/)-2.75 E(int x_root;)108
234.5 Q(/* coordinates relati)133.855 E .33 -.165(ve t)-.275 H 2.75(or)
.165 G(oot */)-2.75 E(int y_root;)108 247.5 Q(/* coordinates relati)
133.855 E .33 -.165(ve t)-.275 H 2.75(or).165 G(oot */)-2.75 E
(unsigned int state;)108 260.5 Q(/* k)99.942 E .33 -.165(ey o)-.11 H
2.75(rb).165 G(utton mask */)-2.97 E(unsigned int b)108 273.5 Q 89.459
(utton; /*)-.22 F(detail */)2.75 E(Bool same_screen;)108 286.5 Q
(/* same screen \215ag */)96.598 E(unsigned int de)108 299.5 Q 63.257
(vice_state; /*)-.275 F(de)2.75 E(vice k)-.275 E .33 -.165(ey o)-.11 H
2.75(rb).165 G(utton mask */)-2.97 E(unsigned char ax)108 312.5 Q
(es_count;)-.165 E(unsigned char \214rst_axis;)108 325.5 Q
(int axis_data[6];)108 338.5 Q 2.75(}X)72 351.5 S(De)-2.75 E
(viceButtonEv)-.275 E(ent;)-.165 E(typedef XDe)72 377.5 Q(viceButtonEv)
-.275 E(ent XDe)-.165 E(viceButtonPressedEv)-.275 E(ent;)-.165 E
(typedef XDe)72 390.5 Q(viceButtonEv)-.275 E(ent XDe)-.165 E
(viceButtonReleasedEv)-.275 E(ent;)-.165 E 36 388.75 36 399.75 DL 36
386.75 36 397.75 DL 41.5 398 36 398 DL 43.5 398 38 398 DL 49 398 43.5
398 DL F0 2.75(2.2.3.3. De)72 436 R(vice Motion Ev)-.165 E(ents)-.11 E
F1(Motion e)72 452.9 Q -.165(ve)-.275 G(nts from e).165 E(xtension de)
-.165 E(vices contain all the information that is contained in a motion)
-.275 E -2.365 -.275(ev e)72 465.9 T(nt from the X pointer).275 E 5.5
(.I)-.605 G 2.75(na)-5.5 G(ddition, the)-2.75 E 2.75(yc)-.165 G
(ontain a de)-2.75 E(vice ID and report the current v)-.275 E
(alue of an)-.275 E(y)-.165 E -.275(va)72 478.9 S(luators on the de).275
E(vice.)-.275 E(The location reported in the x, y and x_root, y_root me\
mbers is the location of the core X pointer)72 495.8 Q(,)-.44 E
(and so is 2-dimensional.)72 508.8 Q(Extension motion de)72 525.7 Q
(vices may report motion data for a v)-.275 E(ariable number of ax)-.275
E 2.75(es. The)-.165 F(ax)2.75 E(es_count)-.165 E
(member contains the number of ax)72 538.7 Q
(es that are being reported.)-.165 E(The serv)5.5 E(er sends as man)
-.165 E 2.75(yo)-.165 G 2.75(ft)-2.75 G(hese)-2.75 E -2.365 -.275(ev e)
72 551.7 T(nts as are needed to report the de).275 E(vice data.)-.275 E
(Each e)5.5 E -.165(ve)-.275 G(nt contains the total number of ax).165 E
(es)-.165 E(reported in the ax)72 564.7 Q
(es_count member and the \214rst axis reported in the current e)-.165 E
-.165(ve)-.275 G(nt in the \214rst_axis).165 E(member)72 577.7 Q(.)-.605
E F0(35)282.5 769 Q 0 Cg EP
%%Page: 36 38
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF 2.75(XI)72 49 S(nput Extension Library)-2.75 E
(X11, Release 6.4)229.413 E .44 LW 36 76.75 36 87.75 DL 36 74.75 36
85.75 DL 41.5 73 36 73 DL 43.5 73 38 73 DL 49 73 43.5 73 DL/F1 11
/Times-Roman@0 SF(typedef struct {)72 91.5 Q(int type;)108 104.5 Q
(/* of e)143.634 E -.165(ve)-.275 G(nt */).165 E(unsigned long serial;)
108 117.5 Q(/* # of last request processed by serv)88.337 E(er */)-.165
E(Bool send_e)108 130.5 Q -.165(ve)-.275 G 100.998(nt; /*).165 F
(true if from a SendEv)2.75 E(ent request */)-.165 E(Display *display;)
108 143.5 Q(/* Display the e)102.692 E -.165(ve)-.275 G(nt w).165 E
(as read from */)-.11 E -.44(Wi)108 156.5 S(ndo).44 E 2.75(ww)-.275 G
(indo)-2.75 E 99.106(w; /*)-.275 F("e)2.75 E -.165(ve)-.275 G(nt" windo)
.165 E 2.75(wr)-.275 G(eported relati)-2.75 E .33 -.165(ve t)-.275 H
2.75(o*).165 G(/)-2.75 E(XID de)108 169.5 Q(viceid;)-.275 E -.44(Wi)108
182.5 S(ndo).44 E 2.75(wr)-.275 G 116.552(oot; /*)-2.75 F(root windo)
2.75 E 2.75(wt)-.275 G(hat the e)-2.75 E -.165(ve)-.275 G
(nt occurred on */).165 E -.44(Wi)108 195.5 S(ndo).44 E 2.75(ws)-.275 G
(ubwindo)-2.75 E 83.827(w; /*)-.275 F(child windo)2.75 E 2.75(w*)-.275 G
(/)-2.75 E -.385(Ti)108 208.5 S(me time;).385 E(/* milliseconds */)
131.798 E(int x, y;)108 221.5 Q(/* x, y coordinates in e)146.076 E -.165
(ve)-.275 G(nt windo).165 E 2.75(w*)-.275 G(/)-2.75 E(int x_root;)108
234.5 Q(/* coordinates relati)133.855 E .33 -.165(ve t)-.275 H 2.75(or)
.165 G(oot */)-2.75 E(int y_root;)108 247.5 Q(/* coordinates relati)
133.855 E .33 -.165(ve t)-.275 H 2.75(or).165 G(oot */)-2.75 E
(unsigned int state;)108 260.5 Q(/* k)99.942 E .33 -.165(ey o)-.11 H
2.75(rb).165 G(utton mask */)-2.97 E(char is_hint;)108 273.5 Q
(/* detail */)125.308 E(Bool same_screen;)108 286.5 Q
(/* same screen \215ag */)96.598 E(unsigned int de)108 299.5 Q 63.257
(vice_state; /*)-.275 F(de)2.75 E(vice k)-.275 E .33 -.165(ey o)-.11 H
2.75(rb).165 G(utton mask */)-2.97 E(unsigned char ax)108 312.5 Q
(es_count;)-.165 E(unsigned char \214rst_axis;)108 325.5 Q
(int axis_data[6];)108 338.5 Q 2.75(}X)72 351.5 S(De)-2.75 E
(viceMotionEv)-.275 E(ent;)-.165 E 36 349.75 36 360.75 DL 36 347.75 36
358.75 DL 41.5 359 36 359 DL 43.5 359 38 359 DL 49 359 43.5 359 DL F0
2.75(2.2.3.4. De)72 397 R(vice F)-.165 E(ocus Ev)-.275 E(ents)-.11 E F1
(These e)72 413.9 Q -.165(ve)-.275 G(nts are equi).165 E -.275(va)-.275
G(lent to the core focus e).275 E -.165(ve)-.275 G 2.75(nts. The).165 F
2.75(yc)-.165 G(ontain the same information, with the)-2.75 E
(addition of a de)72 426.9 Q(vice ID to identify which de)-.275 E
(vice has had a focus change, and a timestamp.)-.275 E F0(De)72.916
443.8 Q(viceF)-.165 E(ocusIn)-.275 E F1(and)3.666 E F0(De)3.666 E(viceF)
-.165 E(ocusOut)-.275 E F1 -2.365 -.275(ev e)3.666 H
(nts are generated for focus changes of e).275 E(xtension)-.165 E(de)72
456.8 Q(vices in the same manner as core focus e)-.275 E -.165(ve)-.275
G(nts are generated.).165 E F0(36)282.5 769 Q 0 Cg EP
%%Page: 37 39
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF 2.75(XI)72 49 S(nput Extension Library)-2.75 E
(X11, Release 6.4)229.413 E .44 LW 36 76.75 36 87.75 DL 36 74.75 36
85.75 DL 41.5 73 36 73 DL 43.5 73 38 73 DL 49 73 43.5 73 DL/F1 11
/Times-Roman@0 SF(typedef struct {)72 91.5 Q(int type;)108 104.5 Q
(/* of e)107.634 E -.165(ve)-.275 G(nt */).165 E(unsigned long serial;)
108 117.5 Q(/* # of last request processed by serv)52.337 E(er */)-.165
E(Bool send_e)108 130.5 Q -.165(ve)-.275 G 64.998(nt; /*).165 F
(true if this came from a SendEv)2.75 E(ent request */)-.165 E
(Display *display;)108 143.5 Q(/* Display the e)66.692 E -.165(ve)-.275
G(nt w).165 E(as read from */)-.11 E -.44(Wi)108 156.5 S(ndo).44 E 2.75
(ww)-.275 G(indo)-2.75 E 63.106(w; /*)-.275 F("e)2.75 E -.165(ve)-.275 G
(nt" windo).165 E 2.75(wi)-.275 G 2.75(ti)-2.75 G 2.75(sr)-2.75 G
(eported relati)-2.75 E .33 -.165(ve t)-.275 H 2.75(o*).165 G(/)-2.75 E
(XID de)108 169.5 Q(viceid;)-.275 E(int mode;)108 182.5 Q
(/* NotifyNormal, NotifyGrab, NotifyUngrab */)102.134 E(int detail;)108
195.5 Q(/*)252 208.5 Q 2.75(*N)252 221.5 S(otifyAncestor)-2.75 E 2.75
(,N)-.44 G(otifyV)-2.75 E(irtual, NotifyInferior)-.66 E(,)-.44 E 2.75
(*N)252 234.5 S(otifyNonLinear)-2.75 E(,NotifyNonLinearV)-.44 E
(irtual, NotifyPointer)-.66 E(,)-.44 E 2.75(*N)252 247.5 S
(otifyPointerRoot, NotifyDetailNone)-2.75 E(*/)252 260.5 Q -.385(Ti)108
273.5 S(me time;).385 E 2.75(}X)72 286.5 S(De)-2.75 E(viceF)-.275 E
(ocusChangeEv)-.165 E(ent;)-.165 E(typedef XDe)72 312.5 Q(viceF)-.275 E
(ocusChangeEv)-.165 E(ent XDe)-.165 E(viceF)-.275 E(ocusInEv)-.165 E
(ent;)-.165 E(typedef XDe)72 325.5 Q(viceF)-.275 E(ocusChangeEv)-.165 E
(ent XDe)-.165 E(viceF)-.275 E(ocusOutEv)-.165 E(ent;)-.165 E 36 323.75
36 334.75 DL 36 321.75 36 332.75 DL 41.5 333 36 333 DL 43.5 333 38 333
DL 49 333 43.5 333 DL F0 2.75(2.2.3.5. De)72 371 R(vice StateNotify Ev)
-.165 E(ent)-.11 E F1(This e)72 387.9 Q -.165(ve)-.275 G
(nt is analogous to the core k).165 E -.165(ey)-.11 G(map e).165 E -.165
(ve)-.275 G(nt b).165 E(ut reports the current state of the de)-.22 E
(vice for)-.275 E(each input class that it supports.)72 400.9 Q
(It is generated after e)5.5 E -.165(ve)-.275 G(ry).165 E F0(De)3.666 E
(viceF)-.165 E(ocusIn)-.275 E F1 -2.365 -.275(ev e)3.666 H(nt and).275 E
F0(Enter)3.666 E(-)-.407 E(Notify)72 413.9 Q F1 -2.365 -.275(ev e)3.666
H(nt and is deli).275 E -.165(ve)-.275 G(red to clients who ha).165 E
.33 -.165(ve s)-.22 H(elected).165 E F0(XDe)3.666 E(viceStateNotify)
-.165 E F1 -2.365 -.275(ev e)3.666 H(nts.).275 E(If the de)72 430.8 Q
(vice supports input class)-.275 E F0 -1.012(Va)3.666 G(luators)1.012 E
F1 2.75(,t).916 G(he mode member in the)-2.75 E F0(XV)3.666 E
(aluatorStatus)-1.012 E F1(structure)3.666 E
(is a bitmask that reports the de)72 443.8 Q
(vice mode, proximity state, and other state information.)-.275 E
(The fol-)5.5 E(lo)72 456.8 Q(wing bits are currently de\214ned:)-.275 E
47.25(0x01 Relati)108 476.3 R .33 -.165(ve = 0)-.275 H 2.75(,A).165 G
(bsolute = 1)-2.75 E 47.25(0x02 InProximity)108 489.3 R 2.75(=0)2.75 G
2.75(,O)-2.75 G(utOfProximity = 1)-2.75 E(If the de)72 512.7 Q
(vice supports more v)-.275 E(aluators than can be reported in a single)
-.275 E F0(XEv)3.666 E(ent)-.11 E F1 2.75(,m).916 G(ultiple)-2.75 E F0
(XDe-)3.666 E(viceStateNotify)72 525.7 Q F1 -2.365 -.275(ev e)3.666 H
(nts will be generated.).275 E F0(37)282.5 769 Q 0 Cg EP
%%Page: 38 40
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF 2.75(XI)72 49 S(nput Extension Library)-2.75 E
(X11, Release 6.4)229.413 E .44 LW 36 76.75 36 87.75 DL 36 74.75 36
85.75 DL 41.5 73 36 73 DL 43.5 73 38 73 DL 49 73 43.5 73 DL/F1 11
/Times-Roman@0 SF(typedef struct {)72 91.5 Q(unsigned char class;)108
104.5 Q(unsigned char length;)108 117.5 Q 2.75(}X)72 130.5 S
(InputClass;)-2.75 E(typedef struct {)72 156.5 Q(int type;)108 169.5 Q
(unsigned long serial;)108 182.5 Q
(/* # of last request processed by serv)88.337 E(er */)-.165 E
(Bool send_e)108 195.5 Q -.165(ve)-.275 G 100.998(nt; /*).165 F
(true if this came from a SendEv)2.75 E(ent request */)-.165 E
(Display *display;)108 208.5 Q(/* Display the e)102.692 E -.165(ve)-.275
G(nt w).165 E(as read from */)-.11 E -.44(Wi)108 221.5 S(ndo).44 E 2.75
(ww)-.275 G(indo)-2.75 E(w;)-.275 E(XID de)108 234.5 Q(viceid;)-.275 E
-.385(Ti)108 247.5 S(me time;).385 E(int num_classes;)108 260.5 Q
(char data[64];)108 273.5 Q 2.75(}X)72 286.5 S(De)-2.75 E
(viceStateNotifyEv)-.275 E(ent;)-.165 E(typedef struct {)72 312.5 Q
(unsigned char class;)108 325.5 Q(unsigned char length;)108 338.5 Q
(unsigned char num_v)108 351.5 Q(aluators;)-.275 E(unsigned char mode;)
108 364.5 Q(int v)108 377.5 Q(aluators[6];)-.275 E 2.75(}X)72 390.5 S
-1.221(Va)-2.75 G(luatorStatus;)1.221 E(typedef struct {)72 416.5 Q
(unsigned char class;)108 429.5 Q(unsigned char length;)108 442.5 Q
(short num_k)108 455.5 Q -.165(ey)-.11 G(s;).165 E(char k)108 468.5 Q
-.165(ey)-.11 G(s[32];).165 E 2.75(}X)72 481.5 S -2.365 -.275(Ke y)-2.75
H(Status;).275 E(typedef struct {)72 507.5 Q(unsigned char class;)108
520.5 Q(unsigned char length;)108 533.5 Q(short num_b)108 546.5 Q
(uttons;)-.22 E(char b)108 559.5 Q(uttons[32];)-.22 E 2.75(}X)72 572.5 S
(ButtonStatus;)-2.75 E 36 570.75 36 581.75 DL 36 568.75 36 579.75 DL
41.5 580 36 580 DL 43.5 580 38 580 DL 49 580 43.5 580 DL F0 2.75
(2.2.3.6. De)72 618 R(vice Mapping Ev)-.165 E(ent)-.11 E F1(This e)72
634.9 Q -.165(ve)-.275 G(nt is equi).165 E -.275(va)-.275 G
(lent to the core).275 E F0(MappingNotify)3.666 E F1 -2.365 -.275(ev e)
3.666 H 2.75(nt. It).275 F(noti\214es client programs when the)2.75 E
(mapping of k)72 647.9 Q -.165(ey)-.11 G(s, modi\214ers, or b).165 E
(uttons on an e)-.22 E(xtension de)-.165 E(vice has changed.)-.275 E F0
(38)282.5 769 Q 0 Cg EP
%%Page: 39 41
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF 2.75(XI)72 49 S(nput Extension Library)-2.75 E
(X11, Release 6.4)229.413 E .44 LW 36 76.75 36 87.75 DL 36 74.75 36
85.75 DL 41.5 73 36 73 DL 43.5 73 38 73 DL 49 73 43.5 73 DL/F1 11
/Times-Roman@0 SF(typedef struct {)72 91.5 Q(int type;)108 104.5 Q
(unsigned long serial;)108 117.5 Q(Bool send_e)108 130.5 Q -.165(ve)
-.275 G(nt;).165 E(Display *display;)108 143.5 Q -.44(Wi)108 156.5 S
(ndo).44 E 2.75(ww)-.275 G(indo)-2.75 E(w;)-.275 E(XID de)108 169.5 Q
(viceid;)-.275 E -.385(Ti)108 182.5 S(me time;).385 E(int request;)108
195.5 Q(int \214rst_k)108 208.5 Q -.165(ey)-.11 G(code;).165 E
(int count;)108 221.5 Q 2.75(}X)72 234.5 S(De)-2.75 E(viceMappingEv)
-.275 E(ent;)-.165 E 36 232.75 36 243.75 DL 36 230.75 36 241.75 DL 41.5
242 36 242 DL 43.5 242 38 242 DL 49 242 43.5 242 DL F0 2.75
(2.2.3.7. ChangeDe)72 280 R(viceNotify Ev)-.165 E(ent)-.11 E F1(This e)
72 296.9 Q -.165(ve)-.275 G(nt has no equi).165 E -.275(va)-.275 G
(lent in the core protocol.).275 E
(It noti\214es client programs when one of the core)5.5 E(de)72 309.9 Q
(vices has been changed.)-.275 E 36 331.55 36 342.55 DL 36 329.55 36
340.55 DL 41.5 327.8 36 327.8 DL 43.5 327.8 38 327.8 DL 49 327.8 43.5
327.8 DL(typedef struct {)72 346.3 Q(int type;)108 359.3 Q
(unsigned long serial;)108 372.3 Q(Bool send_e)108 385.3 Q -.165(ve)
-.275 G(nt;).165 E(Display *display;)108 398.3 Q -.44(Wi)108 411.3 S
(ndo).44 E 2.75(ww)-.275 G(indo)-2.75 E(w;)-.275 E(XID de)108 424.3 Q
(viceid;)-.275 E -.385(Ti)108 437.3 S(me time;).385 E(int request;)108
450.3 Q 2.75(}X)72 463.3 S(ChangeDe)-2.75 E(viceNotifyEv)-.275 E(ent;)
-.165 E 36 461.55 36 472.55 DL 36 459.55 36 470.55 DL 41.5 470.8 36
470.8 DL 43.5 470.8 38 470.8 DL 49 470.8 43.5 470.8 DL F0 2.75
(2.2.3.8. Pr)72 508.8 R(oximity Ev)-.198 E(ents)-.11 E F1(These e)72
525.7 Q -.165(ve)-.275 G(nts ha).165 E .33 -.165(ve n)-.22 H 2.75(oe)
.165 G(qui)-2.75 E -.275(va)-.275 G(lent in the core protocol.).275 E
(Some input de)5.5 E(vices such as graphics tablets)-.275 E
(or touchscreens may send these e)72 538.7 Q -.165(ve)-.275 G
(nts to indicate that a stylus has mo).165 E -.165(ve)-.165 G 2.75(di)
.165 G(nto or out of contact)-2.75 E(with a positional sensing surf)72
551.7 Q(ace.)-.11 E(The e)72 568.6 Q -.165(ve)-.275 G
(nt contains the current v).165 E(alue of an)-.275 E 2.75(yv)-.165 G
(aluators on the de)-3.025 E(vice if that de)-.275 E(vice is reporting)
-.275 E(absolute data.)72 581.6 Q(If data for more than six v)5.5 E
(aluators is being reported, more than one proximity)-.275 E -2.365
-.275(ev e)72 594.6 T(nt may be sent.).275 E(The ax)5.5 E
(es_count member contains the number of ax)-.165 E
(es that are being reported.)-.165 E(The serv)72 607.6 Q
(er sends as man)-.165 E 2.75(yo)-.165 G 2.75(ft)-2.75 G(hese e)-2.75 E
-.165(ve)-.275 G(nts as are needed to report the de).165 E(vice data.)
-.275 E(Each e)5.5 E -.165(ve)-.275 G(nt con-).165 E
(tains the total number of ax)72 620.6 Q(es reported in the ax)-.165 E
(es_count member and the \214rst axis reported in the)-.165 E(current e)
72 633.6 Q -.165(ve)-.275 G(nt in the \214rst_axis member).165 E 5.5(.I)
-.605 G 2.75(ft)-5.5 G(he de)-2.75 E(vice supports input class)-.275 E
F0 -1.012(Va)3.666 G(luators)1.012 E F1 2.75(,b).916 G(ut is not)-2.97 E
(reporting absolute mode data, the ax)72 646.6 Q
(es_count member contains zero \(0\).)-.165 E F0(39)282.5 769 Q 0 Cg EP
%%Page: 40 42
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF 2.75(XI)72 49 S(nput Extension Library)-2.75 E
(X11, Release 6.4)229.413 E .44 LW 36 76.75 36 87.75 DL 36 74.75 36
85.75 DL 41.5 73 36 73 DL 43.5 73 38 73 DL 49 73 43.5 73 DL/F1 11
/Times-Roman@0 SF(typedef struct {)72 91.5 Q(int type;)108 104.5 Q
(/* ProximityIn or ProximityOut */)143.634 E(unsigned long serial;)108
117.5 Q(/* # of last request processed by serv)88.337 E(er */)-.165 E
(Bool send_e)108 130.5 Q -.165(ve)-.275 G 100.998(nt; /*).165 F
(true if this came from a SendEv)2.75 E(ent request */)-.165 E
(Display *display;)108 143.5 Q(/* Display the e)102.692 E -.165(ve)-.275
G(nt w).165 E(as read from */)-.11 E -.44(Wi)108 156.5 S(ndo).44 E 2.75
(ww)-.275 G(indo)-2.75 E(w;)-.275 E(XID de)108 169.5 Q(viceid;)-.275 E
-.44(Wi)108 182.5 S(ndo).44 E 2.75(wr)-.275 G(oot;)-2.75 E -.44(Wi)108
195.5 S(ndo).44 E 2.75(ws)-.275 G(ubwindo)-2.75 E(w;)-.275 E -.385(Ti)
108 208.5 S(me time;).385 E(int x, y;)108 221.5 Q(int x_root, y_root;)
108 234.5 Q(unsigned int state;)108 247.5 Q(Bool same_screen;)108 260.5
Q(unsigned int de)108 273.5 Q 63.257(vice_state; /*)-.275 F(de)2.75 E
(vice k)-.275 E .33 -.165(ey o)-.11 H 2.75(rb).165 G(utton mask */)-2.97
E(unsigned char ax)108 286.5 Q(es_count;)-.165 E
(unsigned char \214rst_axis;)108 299.5 Q(int axis_data[6];)108 312.5 Q
2.75(}X)72 325.5 S(ProximityNotifyEv)-2.75 E(ent;)-.165 E
(typedef XProximityNotifyEv)72 351.5 Q(ent XProximityInEv)-.165 E(ent;)
-.165 E(typedef XProximityNotifyEv)72 364.5 Q(ent XProximityOutEv)-.165
E(ent;)-.165 E 36 362.75 36 373.75 DL 36 360.75 36 371.75 DL 41.5 372 36
372 DL 43.5 372 38 372 DL 49 372 43.5 372 DL F0 2.75(2.3. Ev)72 410 R
(ent Handling Functions)-.11 E F1
(This section discusses the X Input Extension e)72 426.9 Q -.165(ve)
-.275 G(nt handling functions that allo).165 E 2.75(wy)-.275 G(ou to:)
-2.75 E 23.65<8344>72 443.8 S(etermine the e)-23.65 E(xtension v)-.165 E
(ersion)-.165 E 23.65<834c>72 460.7 S(ist the a)-23.65 E -.275(va)-.22 G
(ilable de).275 E(vices)-.275 E 23.65<8345>72 477.6 S
(nable and disable e)-23.65 E(xtension de)-.165 E(vices)-.275 E 23.65
<8343>72 494.5 S(hange the mode of a de)-23.65 E(vice)-.275 E 23.65
<8349>72 511.4 S(nitialize v)-23.65 E(aluators on an input de)-.275 E
(vice)-.275 E 23.65<8347>72 528.3 S(et input de)-23.65 E(vice controls)
-.275 E 23.65<8343>72 545.2 S(hange input de)-23.65 E(vice controls)
-.275 E 23.65<8353>72 562.1 S(elect e)-23.65 E(xtension de)-.165 E
(vice e)-.275 E -.165(ve)-.275 G(nts).165 E 23.65<8344>72 579 S
(etermine selected de)-23.65 E(vice e)-.275 E -.165(ve)-.275 G(nts).165
E 23.65<8343>72 595.9 S(ontrol e)-23.65 E -.165(ve)-.275 G(nt propog)
.165 E(ation)-.055 E 23.65<8353>72 612.8 S(end an e)-23.65 E -.165(ve)
-.275 G(nt).165 E 23.65<8347>72 629.7 S(et motion history)-23.65 E F0
2.75(2.3.1. Determining)72 655.7 R(the Extension V)2.75 E(ersion)-1.1 E
(40)282.5 769 Q 0 Cg EP
%%Page: 41 43
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF 2.75(XI)72 49 S(nput Extension Library)-2.75 E
(X11, Release 6.4)229.413 E .44 LW 36 76.75 36 87.75 DL 36 74.75 36
85.75 DL 41.5 73 36 73 DL 43.5 73 38 73 DL 49 73 43.5 73 DL/F1 11
/Times-Roman@0 SF(XExtensionV)72 88.9 Q(ersion * XGetExtensionV)-1.221 E
(ersion\()-1.221 E/F2 11/Times-Italic@0 SF(display)A F1(,).916 E F2
(name)2.75 E F1(\)).916 E(Display *)85.75 101.9 Q F2(display)A F1(;).916
E(char *)85.75 114.9 Q F2(name)A F1(;).916 E F2(display)72 135.7 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2(name)72 152.6 Q F1(Speci\214es the name of the desired e)48.174 E
(xtension.)-.165 E 36 148.25 36 159.25 DL 36 146.25 36 157.25 DL 41.5
157.5 36 157.5 DL 43.5 157.5 38 157.5 DL 49 157.5 43.5 157.5 DL F0
(XGetExtensionV)72.916 182.5 Q(ersion)-1.1 E F1(allo)3.666 E
(ws a client to determine whether a serv)-.275 E
(er supports the desired v)-.165 E(er)-.165 E(-)-.22 E
(sion of the input e)72 195.5 Q(xtension.)-.165 E(The)72 212.4 Q F0
(XExtensionV)3.666 E(ersion)-1.1 E F1
(structure returns information about the v)3.666 E(ersion of the e)-.165
E(xtension sup-)-.165 E(ported by the serv)72 225.4 Q
(er and is de\214ned as follo)-.165 E(ws:)-.275 E 36 247.05 36 258.05 DL
36 245.05 36 256.05 DL 41.5 243.3 36 243.3 DL 43.5 243.3 38 243.3 DL 49
243.3 43.5 243.3 DL(typedef struct {)72 261.8 Q(Bool present;)108 274.8
Q(short major_v)108 287.8 Q(ersion;)-.165 E(short minor_v)108 300.8 Q
(ersion;)-.165 E 2.75(}X)72 313.8 S(ExtensionV)-2.75 E(ersion;)-1.221 E
36 315.95 36 326.95 DL 36 313.95 36 324.95 DL 41.5 325.2 36 325.2 DL
43.5 325.2 38 325.2 DL 49 325.2 43.5 325.2 DL(The major and minor v)72
350.2 Q
(ersions can be compared with constants de\214ned in the header \214le)
-.165 E(<)72 363.2 Q F0(X11/extensions/XI.h).916 E F1 2.75(>. Each).916
F -.165(ve)2.75 G(rsion is a superset of the pre).165 E(vious v)-.275 E
(ersions.)-.165 E -1.21(Yo)72 380.1 S 2.75(us)1.21 G(hould use)-2.75 E
F0(XFr)3.666 E(ee)-.198 E F1
(to free the data returned by this function.)3.666 E F0 2.75
(2.3.2. Listing)72 406.1 R -.66 -1.1(Av a)2.75 H(ilable De)1.1 E(vices)
-.165 E F1 2.75(Ac)72 423 S
(lient program that wishes to access a speci\214c de)-2.75 E
(vice must \214rst determine whether that de)-.275 E(vice)-.275 E
(is connected to the X serv)72 436 Q(er)-.165 E 5.5(.T)-.605 G
(his is done through the)-5.5 E F0(XListInputDe)3.666 E(vices)-.165 E F1
(function, which will)3.666 E(return a list of all de)72 449 Q
(vices that can be opened by the X serv)-.275 E(er)-.165 E 5.5(.T)-.605
G(he client program can use one of)-5.5 E(the names de\214ned in the <)
72 462 Q F0(X11/extensions/XI.h).916 E F1 2.75(>h).916 G
(eader \214le in an)-2.75 E F0(XInter)3.666 E(nAtom)-.165 E F1
(request to)3.666 E(determine the de)72 475 Q
(vice type of the desired de)-.275 E 2.75(vice. This)-.275 F
(type can then be compared with the de)2.75 E(vice)-.275 E
(types returned by the)72 488 Q F0(XListInputDe)3.666 E(vices)-.165 E F1
(request.)3.666 E 36 509.65 36 520.65 DL 36 507.65 36 518.65 DL 41.5
505.9 36 505.9 DL 43.5 505.9 38 505.9 DL 49 505.9 43.5 505.9 DL(XDe)72
521.8 Q(viceInfo * XListInputDe)-.275 E(vices\()-.275 E F2(display)A F1
(,).916 E F2(nde)2.75 E(vices)-.165 E F1(\)).916 E(Display *)85.75 534.8
Q F2(display)A F1(;).916 E(int *)85.75 547.8 Q F2(nde)A(vices)-.165 E F1
33(;/).916 G 2.75(*R)-33 G(ETURN */)-2.75 E F2(display)72 568.6 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2(nde)72 585.5 Q(vices)-.165 E F1(Speci\214es the address of a v)34.292
E(ariable into which the serv)-.275 E(er can return the number of)-.165
E(input de)144 598.5 Q(vices a)-.275 E -.275(va)-.22 G
(ilable to the X serv).275 E(er)-.165 E(.)-.605 E 36 594.15 36 605.15 DL
36 592.15 36 603.15 DL 41.5 603.4 36 603.4 DL 43.5 603.4 38 603.4 DL 49
603.4 43.5 603.4 DL F0(XListInputDe)72.916 628.4 Q(vices)-.165 E F1
(allo)3.666 E(ws a client to determine which de)-.275 E(vices are a)
-.275 E -.275(va)-.22 G(ilable for X input and).275 E
(information about those de)72 641.4 Q 2.75(vices. An)-.275 F(array of)
2.75 E F0(XDe)3.666 E(viceInf)-.165 E(o)-.275 E F1
(structures is returned, with one ele-)3.666 E
(ment in the array for each de)72 654.4 Q 2.75(vice. The)-.275 F
(number of de)2.75 E(vices is returned in the nde)-.275 E(vices ar)-.275
E(gument.)-.198 E(The X pointer de)72 671.3 Q(vice and X k)-.275 E -.165
(ey)-.11 G(board de).165 E(vice are reported, as well as all a)-.275 E
-.275(va)-.22 G(ilable e).275 E(xtension input)-.165 E(de)72 684.3 Q
2.75(vices. The)-.275 F(use member of the)2.75 E F0(XDe)3.666 E(viceInf)
-.165 E(o)-.275 E F1(structure speci\214es the current use of the de)
3.666 E 2.75(vice. If)-.275 F(the v)72 697.3 Q(alue of this member is)
-.275 E F0(IsXP)3.666 E(ointer)-.22 E F1 2.75(,t).916 G(he de)-2.75 E
(vice is the X pointer de)-.275 E 2.75(vice. If)-.275 F(the v)2.75 E
(alue is)-.275 E F0(IsXK)72.916 710.3 Q(eyboard)-.275 E F1 2.75(,t).916
G(he de)-2.75 E(vice is the X k)-.275 E -.165(ey)-.11 G(board de).165 E
2.75(vice. If)-.275 F(the v)2.75 E(alue is)-.275 E F0(IsXExtensionDe)
3.666 E(vice)-.165 E F1 2.75(,t).916 G(he)-2.75 E(de)72 723.3 Q
(vice is a)-.275 E -.275(va)-.22 G(ilable for use as an e).275 E
(xtension input de)-.165 E(vice.)-.275 E F0(41)282.5 769 Q 0 Cg EP
%%Page: 42 44
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF 2.75(XI)72 49 S(nput Extension Library)-2.75 E
(X11, Release 6.4)229.413 E/F1 11/Times-Roman@0 SF(Each)72 85 Q F0(XDe)
3.666 E(viceInf)-.165 E(o)-.275 E F1(entry contains a pointer to a list\
 of structures that describe the characteristics)3.666 E
(of each class of input supported by that de)72 98 Q 2.75(vice. The)
-.275 F(num_classes member contains the number of)2.75 E
(entries in that list.)72 111 Q(If the de)72 127.9 Q
(vice supports input class)-.275 E F0 -1.012(Va)3.666 G(luators)1.012 E
F1 2.75(,o).916 G(ne of the structures pointed to by the)-2.75 E F0(XDe)
3.666 E(viceInf)-.165 E(o)-.275 E F1(structure will be an)72 140.9 Q F0
(XV)3.666 E(aluatorInf)-1.012 E(o)-.275 E F1 2.75(structure. The)3.666 F
(ax)2.75 E(es member of that structure contains the)-.165 E
(address of an array of)72 153.9 Q F0(XAxisInf)3.666 E(o)-.275 E F1 2.75
(structures. There)3.666 F
(is one element in this array for each axis of)2.75 E
(motion reported by the de)72 166.9 Q 2.75(vice. The)-.275 F
(number of elements in this array is contained in the)2.75 E(num_ax)72
179.9 Q(es element of the)-.165 E F0(XV)3.666 E(aluatorInf)-1.012 E(o)
-.275 E F1 2.75(structure. The)3.666 F(size of the motion b)2.75 E(uf)
-.22 E(fer for the de)-.275 E(vice)-.275 E(is reported in the motion_b)
72 192.9 Q(uf)-.22 E(fer member of the)-.275 E F0(XV)3.666 E(aluatorInf)
-1.012 E(o)-.275 E F1(structure.)3.666 E(The)72 209.8 Q F0(XDe)3.666 E
(viceInf)-.165 E(o)-.275 E F1(structure is de\214ned as follo)3.666 E
(ws:)-.275 E .44 LW 36 231.45 36 242.45 DL 36 229.45 36 240.45 DL 41.5
227.7 36 227.7 DL 43.5 227.7 38 227.7 DL 49 227.7 43.5 227.7 DL
(typedef struct _XDe)72 246.2 Q(viceInfo {)-.275 E(XID id;)108 259.2 Q
(Atom type;)108 272.2 Q(char *name;)108 285.2 Q(int num_classes;)108
298.2 Q(int use;)108 311.2 Q(XAn)108 324.2 Q(yClassPtr inputclassinfo;)
-.165 E 2.75(}X)72 337.2 S(De)-2.75 E(viceInfo;)-.275 E 36 339.35 36
350.35 DL 36 337.35 36 348.35 DL 41.5 348.6 36 348.6 DL 43.5 348.6 38
348.6 DL 49 348.6 43.5 348.6 DL(The structures pointed to by the)72
373.6 Q F0(XDe)3.666 E(viceInf)-.165 E(o)-.275 E F1
(structure are de\214ned as follo)3.666 E(ws:)-.275 E 36 395.25 36
406.25 DL 36 393.25 36 404.25 DL 41.5 391.5 36 391.5 DL 43.5 391.5 38
391.5 DL 49 391.5 43.5 391.5 DL(typedef struct _XK)72 410 Q -.165(ey)
-.275 G(Info {).165 E(XID class;)108 423 Q(int length;)108 436 Q
(unsigned short min_k)108 449 Q -.165(ey)-.11 G(code;).165 E
(unsigned short max_k)108 462 Q -.165(ey)-.11 G(code;).165 E
(unsigned short num_k)108 475 Q -.165(ey)-.11 G(s;).165 E 2.75(}X)72 488
S -2.365 -.275(Ke y)-2.75 H(Info;).275 E(typedef struct _XButtonInfo {)
72 514 Q(XID class;)108 527 Q(int length;)108 540 Q(short num_b)108 553
Q(uttons;)-.22 E 2.75(}X)72 566 S(ButtonInfo;)-2.75 E
(typedef struct _XV)72 592 Q(aluatorInfo {)-1.221 E(XID class;)108 605 Q
(int length;)108 618 Q(unsigned char num_ax)108 631 Q(es;)-.165 E
(unsigned char mode;)108 644 Q(unsigned long motion_b)108 657 Q(uf)-.22
E(fer;)-.275 E(XAxisInfoPtr ax)108 670 Q(es;)-.165 E 2.75(}X)72 683 S
-1.221(Va)-2.75 G(luatorInfo;)1.221 E 36 685.15 36 696.15 DL 36 683.15
36 694.15 DL 41.5 694.4 36 694.4 DL 43.5 694.4 38 694.4 DL 49 694.4 43.5
694.4 DL(The)72 719.4 Q F0(XAxisInf)3.666 E(o)-.275 E F1
(structure pointed to by the)3.666 E F0(XV)3.666 E(aluatorInf)-1.012 E
(o)-.275 E F1(structure is de\214ned as follo)3.666 E(ws:)-.275 E F0(42)
282.5 769 Q 0 Cg EP
%%Page: 43 45
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF 2.75(XI)72 49 S(nput Extension Library)-2.75 E
(X11, Release 6.4)229.413 E .44 LW 36 76.75 36 87.75 DL 36 74.75 36
85.75 DL 41.5 73 36 73 DL 43.5 73 38 73 DL 49 73 43.5 73 DL/F1 11
/Times-Roman@0 SF(typedef struct _XAxisInfo {)72 91.5 Q(int resolution;)
108 104.5 Q(int min_v)108 117.5 Q(alue;)-.275 E(int max_v)108 130.5 Q
(alue;)-.275 E 2.75(}X)72 143.5 S(AxisInfo;)-2.75 E 36 145.65 36 156.65
DL 36 143.65 36 154.65 DL 41.5 154.9 36 154.9 DL 43.5 154.9 38 154.9 DL
49 154.9 43.5 154.9 DL(The follo)72 179.9 Q
(wing atom names are de\214ned in the <)-.275 E F0(X11/extensions/XI.h)
.916 E F1 2.75(>h).916 G(eader \214le.)-2.75 E/F2 10/Times-Roman@0 SF
106.5(MOUSE Q)72 199.4 R -.4(UA)-.1 G(DRA).4 E(TURE)-1.11 E -.93(TA)72
212.4 S 104.1(BLET SP).93 F -.4(AC)-.92 G(EB).4 E(ALL)-.35 E(KEYBO)72
225.4 Q 86.3(ARD D)-.35 F -1.21 -1.11(AT A)-.4 H(GLO).71 E(VE)-.5 E -.18
(TO)72 238.4 S 68.9(UCHSCREEN EYETRA).18 F(CKER)-.4 E -.18(TO)72 251.4 S
(UCHP).18 E 88.16(AD CURSORKEYS)-.92 F -.1(BU)72 264.4 S(TT).1 E(ONBO)
-.18 E 83.02(XF)-.4 G(OO)-83.02 E(TMOUSE)-.4 E -.35(BA)72 277.4 S 94.07
(RCODE ID_MODULE).35 F(KNOB_BO)72 290.4 Q 89.96(XO)-.4 G(NE_KNOB)-89.96
E(TRA)72 303.4 Q(CKB)-.4 E 82.25(ALL NINE_KNOB)-.35 F F1
(These names can be used in an)72 326.8 Q F0(XInter)3.666 E(nAtom)-.165
E F1(request to return an atom that can be used for com-)3.666 E
(parison with the type member of the)72 339.8 Q F0(XDe)3.666 E(viceInf)
-.165 E(o)-.275 E F1(structure.)3.666 E F0(XListInputDe)72.916 356.7 Q
(vices)-.165 E F1(returns NULL if there are no input de)3.666 E
(vices to list.)-.275 E 1.76 -.88(To f)72 386.6 T
(ree the data returned by).88 E F0(XListInputDe)3.666 E(vices)-.165 E F1
2.75(,u).916 G(se)-2.75 E F0(XFr)3.666 E(eeDe)-.198 E(viceList)-.165 E
F1(.).916 E 36 421.25 36 432.25 DL 36 419.25 36 430.25 DL 41.5 417.5 36
417.5 DL 43.5 417.5 38 417.5 DL 49 417.5 43.5 417.5 DL -.22(vo)72 433.4
S(id XFreeDe).22 E(viceList\()-.275 E/F3 11/Times-Italic@0 SF(list)A F1
(\)).916 E(XDe)83 446.4 Q(viceInfo *)-.275 E F3(list)A F1(;).916 E F3
(list)72 467.2 Q F1(Speci\214es the pointer to the)58.547 E F0(XDe)3.666
E(viceInf)-.165 E(o)-.275 E F1(array returned by a pre)3.666 E
(vious call to)-.275 E F0(XListInputDe)144.916 480.2 Q(vices)-.165 E F1
(.).916 E 36 475.85 36 486.85 DL 36 473.85 36 484.85 DL 41.5 485.1 36
485.1 DL 43.5 485.1 38 485.1 DL 49 485.1 43.5 485.1 DL F0(XFr)72.916
510.1 Q(eeDe)-.198 E(viceList)-.165 E F1(frees the list of input de)
3.666 E(vice information.)-.275 E F0 2.75(2.3.3. Enabling)72 536.1 R
(and Disabling Extension De)2.75 E(vices)-.165 E F1
(Each client program that wishes to access an e)72 553 Q(xtension de)
-.165 E(vice must request that the serv)-.275 E(er open)-.165 E(that de)
72 566 Q(vice by calling the)-.275 E F0(XOpenDe)3.666 E(vice)-.165 E F1
(function.)3.666 E 36 583.75 36 594.75 DL 36 581.75 36 592.75 DL 41.5
580 36 580 DL 43.5 580 38 580 DL 49 580 43.5 580 DL(XDe)72 595.9 Q
(vice * XOpenDe)-.275 E(vice\()-.275 E F3(display)A F1(,).916 E F3(de)
2.75 E(vice_id)-.165 E F1(\)).916 E(Display *)85.75 608.9 Q F3(display)A
F1(;).916 E(XID)85.75 621.9 Q F3(de)2.75 E(vice_id)-.165 E F1(;).916 E
F3(display)72 642.7 Q F1(Speci\214es the connection to the X serv)40.221
E(er)-.165 E(.)-.605 E F3(de)72 659.6 Q(vice_id)-.165 E F1
(Speci\214es the ID that uniquely identi\214es the de)30.013 E
(vice to be opened.)-.275 E(This ID is)5.5 E(obtained from the)144 672.6
Q F0(XListInputDe)3.666 E(vices)-.165 E F1(request.)3.666 E 36 668.25 36
679.25 DL 36 666.25 36 677.25 DL 41.5 677.5 36 677.5 DL 43.5 677.5 38
677.5 DL 49 677.5 43.5 677.5 DL F0(XOpenDe)72.916 702.5 Q(vice)-.165 E
F1(opens the de)3.666 E
(vice for the requesting client and, on success, returns an)-.275 E F0
(XDe)3.666 E(vice)-.165 E F1(structure, which is de\214ned as follo)72
715.5 Q(ws:)-.275 E F0(43)282.5 769 Q 0 Cg EP
%%Page: 44 46
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF 2.75(XI)72 49 S(nput Extension Library)-2.75 E
(X11, Release 6.4)229.413 E .44 LW 36 76.75 36 87.75 DL 36 74.75 36
85.75 DL 41.5 73 36 73 DL 43.5 73 38 73 DL 49 73 43.5 73 DL/F1 11
/Times-Roman@0 SF(typedef struct {)72 91.5 Q(XID de)108 104.5 Q
(vice_id;)-.275 E(int num_classes;)108 117.5 Q
(XInputClassInfo *classes;)108 130.5 Q 2.75(}X)72 143.5 S(De)-2.75 E
(vice;)-.275 E 36 145.65 36 156.65 DL 36 143.65 36 154.65 DL 41.5 154.9
36 154.9 DL 43.5 154.9 38 154.9 DL 49 154.9 43.5 154.9 DL(The)72 179.9 Q
F0(XDe)3.666 E(vice)-.165 E F1
(structure contains a pointer to an array of)3.666 E F0(XInputClassInf)
3.666 E(o)-.275 E F1 2.75(structures. Each)3.666 F(ele-)2.75 E
(ment in that array contains information about e)72 192.9 Q -.165(ve)
-.275 G(nts of a particular input class supported by the).165 E
(input de)72 205.9 Q(vice.)-.275 E(The)72 222.8 Q F0(XInputClassInf)
3.666 E(o)-.275 E F1(structure is de\214ned as follo)3.666 E(ws:)-.275 E
36 244.45 36 255.45 DL 36 242.45 36 253.45 DL 41.5 240.7 36 240.7 DL
43.5 240.7 38 240.7 DL 49 240.7 43.5 240.7 DL(typedef struct {)72 259.2
Q(unsigned char input_class;)108 272.2 Q(unsigned char e)108 285.2 Q
-.165(ve)-.275 G(nt_type_base;).165 E 2.75(}X)72 298.2 S
(InputClassInfo;)-2.75 E 36 300.35 36 311.35 DL 36 298.35 36 309.35 DL
41.5 309.6 36 309.6 DL 43.5 309.6 38 309.6 DL 49 309.6 43.5 309.6 DL
2.75(Ac)72 334.6 S(lient program can determine the e)-2.75 E -.165(ve)
-.275 G(nt type and e).165 E -.165(ve)-.275 G(nt class for a gi).165 E
-.165(ve)-.275 G 2.75(ne).165 G -.165(ve)-3.025 G(nt by using macros)
.165 E(de\214ned by the input e)72 347.6 Q 2.75(xtension. The)-.165 F
(name of the macro corresponds to the desired e)2.75 E -.165(ve)-.275 G
(nt, and the).165 E(macro is passed the structure that describes the de)
72 360.6 Q(vice from which input is desired, for e)-.275 E(xample:)-.165
E(De)108 384 Q(viceK)-.275 E -.165(ey)-.275 G(Press\(XDe).165 E
(vice *de)-.275 E(vice, e)-.275 E -.165(ve)-.275 G(nt_type, e).165 E
-.165(ve)-.275 G(nt_class\)).165 E(The macro will \214ll in the v)72
407.4 Q(alues of the e)-.275 E -.165(ve)-.275 G
(nt class to be used in an).165 E F0(XSelectExtensionEv)3.666 E(ent)-.11
E F1(request to select the e)72 420.4 Q -.165(ve)-.275 G(nt and the e)
.165 E -.165(ve)-.275 G(nt type to be used in comparing with the e).165
E -.165(ve)-.275 G(nt types of).165 E -2.365 -.275(ev e)72 433.4 T
(nts recei).275 E -.165(ve)-.275 G 2.75(dv).165 G(ia)-2.75 E F0(XNextEv)
3.666 E(ent)-.11 E F1(.).916 E F0(XOpenDe)72.916 450.3 Q(vice)-.165 E F1
(can generate)3.666 E F0(BadDe)3.666 E(vice)-.165 E F1(errors.)3.666 E
(Before terminating, the client program should request that the serv)72
480.2 Q(er close the de)-.165 E(vice by calling)-.275 E(the)72 493.2 Q
F0(XCloseDe)3.666 E(vice)-.165 E F1(function.)3.666 E 36 510.95 36
521.95 DL 36 508.95 36 519.95 DL 41.5 507.2 36 507.2 DL 43.5 507.2 38
507.2 DL 49 507.2 43.5 507.2 DL(int XCloseDe)72 523.1 Q(vice\()-.275 E
/F2 11/Times-Italic@0 SF(display)A F1(,).916 E F2(de)2.75 E(vice)-.165 E
F1(\)).916 E(Display *display;)85.75 536.1 Q(XDe)85.75 549.1 Q(vice *de)
-.275 E(vice;)-.275 E F2(display)72 569.9 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2(de)72 586.8 Q(vice)-.165 E F1(Speci\214es the de)44.071 E
(vice to be closed.)-.275 E 36 582.45 36 593.45 DL 36 580.45 36 591.45
DL 41.5 591.7 36 591.7 DL 43.5 591.7 38 591.7 DL 49 591.7 43.5 591.7 DL
F0(XCloseDe)72.916 616.7 Q(vice)-.165 E F1(closes the de)3.666 E
(vice for the requesting client and frees the associated)-.275 E F0(XDe)
3.666 E(vice)-.165 E F1(struc-)3.666 E(ture.)72 629.7 Q 2.75(Ac)72 646.6
S(lient may open the same e)-2.75 E(xtension de)-.165 E
(vice more than once.)-.275 E(Requests after the \214rst successful)5.5
E(one return an additional)72 659.6 Q F0(XDe)3.666 E(vice)-.165 E F1
(structure with the same information as the \214rst, b)3.666 E
(ut otherwise)-.22 E(ha)72 672.6 Q .33 -.165(ve n)-.22 H 2.75(oe).165 G
-.275(ff)-2.75 G 2.75(ect. A).275 F(single)2.75 E F0(XCloseDe)3.666 E
(vice)-.165 E F1(request will terminate that client')3.666 E 2.75(sa)
-.605 G(ccess to the de)-2.75 E(vice.)-.275 E(Closing a de)72 689.5 Q
(vice releases an)-.275 E 2.75(ya)-.165 G(cti)-2.75 E .33 -.165(ve o)
-.275 H 2.75(rp).165 G(assi)-2.75 E .33 -.165(ve g)-.275 H
(rabs the requesting client has established.).165 E(If the)5.5 E(de)72
702.5 Q(vice is frozen only by an acti)-.275 E .33 -.165(ve g)-.275 H
(rab of the requesting client, an).165 E 2.75(yq)-.165 G(ueued e)-2.75 E
-.165(ve)-.275 G(nts are released.).165 E
(If a client program terminates without closing a de)72 719.4 Q
(vice, the serv)-.275 E(er will automatically close that)-.165 E(de)72
732.4 Q(vice on behalf of the client.)-.275 E(This does not af)5.5 E
(fect an)-.275 E 2.75(yo)-.165 G
(ther clients that may be accessing that)-2.75 E F0(44)282.5 769 Q 0 Cg
EP
%%Page: 45 47
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF 2.75(XI)72 49 S(nput Extension Library)-2.75 E
(X11, Release 6.4)229.413 E/F1 11/Times-Roman@0 SF(de)72 85 Q(vice.)
-.275 E F0(XCloseDe)72.916 101.9 Q(vice)-.165 E F1(can generate)3.666 E
F0(BadDe)3.666 E(vice)-.165 E F1(errors.)3.666 E F0 2.75
(2.3.4. Changing)72 127.9 R(the Mode of a De)2.75 E(vice)-.165 E F1
(Some de)72 144.8 Q(vices are capable of reporting either relati)-.275 E
.33 -.165(ve o)-.275 H 2.75(ra).165 G(bsolute motion data.)-2.75 E 1.76
-.88(To c)5.5 H(hange the).88 E(mode of a de)72 157.8 Q
(vice from relati)-.275 E .33 -.165(ve t)-.275 H 2.75(oa).165 G
(bsolute, use)-2.75 E F0(XSetDe)3.666 E(viceMode)-.165 E F1(.).916 E .44
LW 36 175.55 36 186.55 DL 36 173.55 36 184.55 DL 41.5 171.8 36 171.8 DL
43.5 171.8 38 171.8 DL 49 171.8 43.5 171.8 DL(int XSetDe)72 187.7 Q
(viceMode\()-.275 E/F2 11/Times-Italic@0 SF(display)A F1(,).916 E F2(de)
2.75 E(vice)-.165 E F1(,).916 E F2(mode)2.75 E F1(\)).916 E(Display *)
85.75 200.7 Q F2(display)A F1(;).916 E(XDe)85.75 213.7 Q(vice *)-.275 E
F2(de)A(vice)-.165 E F1(;).916 E(int)85.75 226.7 Q F2(mode)2.75 E F1(;)
.916 E F2(display)72 247.5 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2(de)72 264.4 Q(vice)-.165 E F1(Speci\214es the de)44.071 E
(vice whose mode should be changed.)-.275 E F2(mode)72 281.3 Q F1
(Speci\214es the mode.)48.174 E -1.21(Yo)5.5 G 2.75(uc)1.21 G(an pass)
-2.75 E F0(Absolute)3.666 E F1(or)3.666 E F0(Relati)3.666 E -.11(ve)-.11
G F1(.)1.026 E 36 276.95 36 287.95 DL 36 274.95 36 285.95 DL 41.5 286.2
36 286.2 DL 43.5 286.2 38 286.2 DL 49 286.2 43.5 286.2 DL F0(XSetDe)
72.916 311.2 Q(viceMode)-.165 E F1(allo)3.666 E
(ws a client to request the serv)-.275 E(er to change the mode of a de)
-.165 E(vice that is)-.275 E
(capable of reporting either absolute positional data or relati)72 324.2
Q .33 -.165(ve m)-.275 H(otion data.).165 E(If the de)5.5 E(vice is in)
-.275 E -.275(va)-.44 G(lid).275 E(or if the client has not pre)72 337.2
Q(viously requested that the serv)-.275 E(er open the de)-.165 E
(vice via an)-.275 E F0(XOpenDe)3.666 E(vice)-.165 E F1
(request, this request will f)72 350.2 Q(ail with a)-.11 E F0(BadDe)
3.666 E(vice)-.165 E F1(error)3.666 E 5.5(.I)-.605 G 2.75(ft)-5.5 G
(he de)-2.75 E(vice does not support input class)-.275 E F0 -1.012(Va)
72.916 363.2 S(luators)1.012 E F1(or if it is not capable of reporting \
the speci\214ed mode, the request will f)3.666 E(ail with a)-.11 E F0
(Bad-)3.666 E(Match)72 376.2 Q F1(error)3.666 E(.)-.605 E
(This request will f)72 393.1 Q(ail and return)-.11 E F0(De)3.666 E
(viceBusy)-.165 E F1(if another client has already opened the de)3.666 E
(vice and)-.275 E(requested a dif)72 406.1 Q(ferent mode.)-.275 E F0
(XSetDe)72.916 423 Q(viceMode)-.165 E F1(can generate)3.666 E F0(BadDe)
3.666 E(vice)-.165 E F1(,).916 E F0(BadMatch)3.666 E F1(,).916 E F0
(BadMode)3.666 E F1 2.75(,a).916 G(nd)-2.75 E F0(De)3.666 E(viceBusy)
-.165 E F1(errors.)3.666 E F0 2.75(2.3.5. Initializing)72 449 R -1.012
(Va)2.75 G(luators on an Input De)1.012 E(vice)-.165 E F1(Some de)72
465.9 Q(vices that report absolute positional data can be initialized t\
o a starting v)-.275 E 2.75(alue. De)-.275 F(vices)-.275 E
(that are capable of reporting relati)72 478.9 Q .33 -.165(ve m)-.275 H
(otion or absolute positional data may require that their v).165 E(al-)
-.275 E(uators be initialized to a starting v)72 491.9 Q
(alue after the mode of the de)-.275 E(vice is changed to)-.275 E F0
(Absolute)3.666 E F1(.).916 E 1.76 -.88(To i)72 521.8 T(nitialize the v)
.88 E(aluators on such a de)-.275 E(vice, use)-.275 E F0(XSetDe)3.666 E
(viceV)-.165 E(aluators)-1.012 E F1(.).916 E 36 539.55 36 550.55 DL 36
537.55 36 548.55 DL 41.5 535.8 36 535.8 DL 43.5 535.8 38 535.8 DL 49
535.8 43.5 535.8 DL(Status XSetDe)72 551.7 Q(viceV)-.275 E(aluators\()
-1.221 E F2(display)A F1(,).916 E F2(de)2.75 E(vice)-.165 E F1(,).916 E
F2(valuator)2.75 E(s)-.11 E F1(,).916 E F2<8c72>2.75 E(st_valuator)-.11
E F1(,).916 E F2(num_valuator)2.75 E(s)-.11 E F1(\)).916 E(Display *)
85.75 564.7 Q F2(display)A F1(;).916 E(XDe)85.75 577.7 Q(vice *)-.275 E
F2(de)A(vice)-.165 E F1(;).916 E(int *)85.75 590.7 Q F2(valuator)A(s)
-.11 E F1(,).916 E F2<8c72>2.75 E(st_valuator)-.11 E F1(,).916 E F2
(num_valuator)2.75 E(s)-.11 E F1(;).916 E F2(display)72 611.5 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2(de)72 628.4 Q(vice)-.165 E F1(Speci\214es the de)44.071 E
(vice whose v)-.275 E(aluators should be initialized.)-.275 E F2
(valuator)72 645.3 Q(s)-.11 E F1(Speci\214es the v)30.552 E
(alues to which each v)-.275 E(aluator should be set.)-.275 E F2<8c72>72
662.2 Q(st_valuator)-.11 E F1(Speci\214es the \214rst v)12.215 E
(aluator to be set.)-.275 E F2(num_valuator)72 679.1 Q(s)-.11 E F1
(Speci\214es the number of v)6.11 E(aluators to be set.)-.275 E 36
674.75 36 685.75 DL 36 672.75 36 683.75 DL 41.5 684 36 684 DL 43.5 684
38 684 DL 49 684 43.5 684 DL F0(XSetDe)72.916 709 Q(viceV)-.165 E
(aluators)-1.012 E F1(initializes the speci\214ed v)3.666 E
(aluators on the speci\214ed e)-.275 E(xtension input de)-.165 E(vice.)
-.275 E -1.221(Va)72 722 S(luators are numbered be)1.221 E
(ginning with zero.)-.165 E(Only the v)5.5 E
(aluators in the range speci\214ed by)-.275 E F0(45)282.5 769 Q 0 Cg EP
%%Page: 46 48
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF 2.75(XI)72 49 S(nput Extension Library)-2.75 E
(X11, Release 6.4)229.413 E/F1 11/Times-Roman@0 SF(\214rst_v)72 85 Q
(aluator and num_v)-.275 E(aluators are set.)-.275 E(A)5.5 E F0(BadV)
3.666 E(alue)-1.012 E F1(error results if the number of v)3.666 E
(aluators)-.275 E(supported by the de)72 98 Q
(vice is less than the follo)-.275 E(wing e)-.275 E(xpression:)-.165 E
(\214rst_v)108 117.5 Q(aluator + num_v)-.275 E(aluators)-.275 E
(If the request succeeds,)72 140.9 Q F0(Success)3.666 E F1(is returned.)
3.666 E(If the speci\214ed de)5.5 E(vice is grabbed by some other)-.275
E(client, the request will f)72 153.9 Q(ail and a status of)-.11 E F0
(Alr)3.666 E(eadyGrab)-.198 E(bed)-.11 E F1(will be returned.)3.666 E F0
(XSetDe)72.916 170.8 Q(viceV)-.165 E(aluators)-1.012 E F1(can generate)
3.666 E F0(BadDe)3.666 E(vice)-.165 E F1(,).916 E F0(BadLength)3.666 E
F1(,).916 E F0(BadMatch)3.666 E F1 2.75(,a).916 G(nd)-2.75 E F0(BadV)
3.666 E(alue)-1.012 E F1(errors.)72 183.8 Q F0 2.75(2.3.6. Getting)72
209.8 R(Input De)2.75 E(vice Contr)-.165 E(ols)-.198 E F1(Some input de)
72 226.7 Q(vices support v)-.275 E
(arious con\214guration controls that can be queried or changed by)-.275
E 2.75(clients. The)72 239.7 R(set of supported controls will v)2.75 E
(ary from one input de)-.275 E(vice to another)-.275 E 5.5(.R)-.605 G
(equests to)-5.5 E(manipulate these controls will f)72 252.7 Q
(ail if either the tar)-.11 E(get X serv)-.198 E(er or the tar)-.165 E
(get input de)-.198 E(vice does not)-.275 E(support the requested de)72
265.7 Q(vice control.)-.275 E(Each de)72 282.6 Q
(vice control has a unique identi\214er)-.275 E 5.5(.I)-.605 G
(nformation passed with each de)-5.5 E(vice control v)-.275 E(aries in)
-.275 E(length and is mapped by data structures unique to that de)72
295.6 Q(vice control.)-.275 E 1.76 -.88(To q)72 325.5 T(uery a de).88 E
(vice control, use)-.275 E F0(XGetDe)3.666 E(viceContr)-.165 E(ol)-.198
E F1(.).916 E .44 LW 36 343.25 36 354.25 DL 36 341.25 36 352.25 DL 41.5
339.5 36 339.5 DL 43.5 339.5 38 339.5 DL 49 339.5 43.5 339.5 DL(XDe)72
355.4 Q(viceControl * XGetDe)-.275 E(viceControl\()-.275 E/F2 11
/Times-Italic@0 SF(display)A F1(,).916 E F2(de)2.75 E(vice)-.165 E F1(,)
.916 E F2(contr)2.75 E(ol)-.495 E F1(\)).916 E(Display *)85.75 368.4 Q
F2(display)A F1(;).916 E(XDe)85.75 381.4 Q(vice *)-.275 E F2(de)A(vice)
-.165 E F1(;).916 E(int)85.75 394.4 Q F2(contr)2.75 E(ol)-.495 E F1(;)
.916 E F2(display)72 415.2 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2(de)72 432.1 Q(vice)-.165 E F1(Speci\214es the de)44.071 E
(vice whose con\214guration control status is to be returned.)-.275 E F2
(contr)72 449 Q(ol)-.495 E F1(Identi\214es the speci\214c de)40.716 E
(vice control to be queried.)-.275 E 36 444.65 36 455.65 DL 36 442.65 36
453.65 DL 41.5 453.9 36 453.9 DL 43.5 453.9 38 453.9 DL 49 453.9 43.5
453.9 DL F0(XGetDe)72.916 478.9 Q(viceContr)-.165 E(ol)-.198 E F1
(returns the current state of the speci\214ed de)3.666 E(vice control.)
-.275 E(If the tar)5.5 E(get X)-.198 E(serv)72 491.9 Q
(er does not support that de)-.165 E(vice control, a)-.275 E F0(BadV)
3.666 E(alue)-1.012 E F1(error is returned.)3.666 E
(If the speci\214ed de)5.5 E(vice)-.275 E(does not support that de)72
504.9 Q(vice control, a)-.275 E F0(BadMatch)3.666 E F1
(error is returned.)3.666 E
(If the request is successful, a pointer to a generic)72 521.8 Q F0(XDe)
3.666 E(viceState)-.165 E F1(structure is returned.)3.666 E(The infor)
5.5 E(-)-.22 E(mation returned v)72 534.8 Q(aries according to the spec\
i\214ed control and is mapped by a structure appropriate)-.275 E
(for that control.)72 547.8 Q(The \214rst tw)5.5 E 2.75(om)-.11 G
(embers are common to all de)-2.75 E
(vice controls and are de\214ned as fol-)-.275 E(lo)72 560.8 Q(ws:)-.275
E 36 582.45 36 593.45 DL 36 580.45 36 591.45 DL 41.5 578.7 36 578.7 DL
43.5 578.7 38 578.7 DL 49 578.7 43.5 578.7 DL(typedef struct {)72 597.2
Q(XID control;)108 610.2 Q(int length;)108 623.2 Q 2.75(}X)72 636.2 S
(De)-2.75 E(viceState;)-.275 E 36 638.35 36 649.35 DL 36 636.35 36
647.35 DL 41.5 647.6 36 647.6 DL 43.5 647.6 38 647.6 DL 49 647.6 43.5
647.6 DL
(The control may be compared to constants de\214ned in the \214le <)72
672.6 Q F0(X11/extensions/XI.h).916 E F1 2.75(>. Currently).916 F
(de\214ned de)72 685.6 Q(vice controls include DEVICE_RESOLUTION.)-.275
E(The information returned for the DEVICE_RESOLUTION control is de\214n\
ed in the)72 702.5 Q F0(XDe)3.666 E(viceRes-)-.165 E(olutionState)72
715.5 Q F1(structure, which is de\214ned as follo)3.666 E(ws:)-.275 E F0
(46)282.5 769 Q 0 Cg EP
%%Page: 47 49
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF 2.75(XI)72 49 S(nput Extension Library)-2.75 E
(X11, Release 6.4)229.413 E .44 LW 36 76.75 36 87.75 DL 36 74.75 36
85.75 DL 41.5 73 36 73 DL 43.5 73 38 73 DL 49 73 43.5 73 DL/F1 11
/Times-Roman@0 SF(typedef struct {)72 91.5 Q(XID control;)108 104.5 Q
(int length;)108 117.5 Q(int num_v)108 130.5 Q(aluators;)-.275 E
(int *resolutions;)108 143.5 Q(int *min_resolutions;)108 156.5 Q
(int *max_resolutions;)108 169.5 Q 2.75(}X)72 182.5 S(De)-2.75 E
(viceResolutionState;)-.275 E 36 184.65 36 195.65 DL 36 182.65 36 193.65
DL 41.5 193.9 36 193.9 DL 43.5 193.9 38 193.9 DL 49 193.9 43.5 193.9 DL
(This de)72 218.9 Q(vice control returns a list of v)-.275 E
(aluators and the range of v)-.275 E(alid resolutions allo)-.275 E
(wed for each.)-.275 E -1.221(Va)72 231.9 S(luators are numbered be)
1.221 E(ginning with zero \(0\).)-.165 E(Resolutions for all v)5.5 E
(aluators on the de)-.275 E(vice are)-.275 E 2.75(returned. F)72 244.9 R
(or each v)-.165 E(aluator i on the de)-.275 E
(vice, resolutions[i] returns the current setting of the resolu-)-.275 E
(tion, min_resolutions[i] returns the minimum v)72 257.9 Q
(alid setting, and max_resolutions[i] returns the)-.275 E(maximum v)72
270.9 Q(alid setting.)-.275 E(When this control is speci\214ed,)72 287.8
Q F0(XGetDe)3.666 E(viceContr)-.165 E(ol)-.198 E F1 -.11(fa)3.666 G
(ils with a).11 E F0(BadMatch)3.666 E F1(error if the speci\214ed)3.666
E(de)72 300.8 Q(vice has no v)-.275 E(aluators.)-.275 E F0(XGetDe)72.916
317.7 Q(viceContr)-.165 E(ol)-.198 E F1(can generate)3.666 E F0
(BadMatch)3.666 E F1(and)3.666 E F0(BadV)3.666 E(alue)-1.012 E F1
(errors.)3.666 E F0 2.75(2.3.7. Changing)72 343.7 R(Input De)2.75 E
(vice Contr)-.165 E(ols)-.198 E F1(Some input de)72 360.6 Q
(vices support v)-.275 E
(arious con\214guration controls that can be changed by clients.)-.275 E
-.88(Ty)5.5 G(pi-).88 E(cally)72 373.6 Q 2.75(,t)-.715 G(his w)-2.75 E
(ould be done to initialize the de)-.11 E(vice to a kno)-.275 E
(wn state or con\214guration.)-.275 E(The set of sup-)5.5 E
(ported controls will v)72 386.6 Q(ary from one input de)-.275 E
(vice to another)-.275 E 5.5(.R)-.605 G
(equests to manipulate these controls)-5.5 E(will f)72 399.6 Q
(ail if either the tar)-.11 E(get X serv)-.198 E(er or the tar)-.165 E
(get input de)-.198 E(vice does not support the requested)-.275 E(de)72
412.6 Q(vice control.)-.275 E(Setting the de)5.5 E
(vice control will also f)-.275 E(ail if the tar)-.11 E(get input de)
-.198 E(vice is grabbed by)-.275 E(another client or is open by another\
 client and has been set to a con\215icting state.)72 425.6 Q(Each de)72
442.5 Q(vice control has a unique identi\214er)-.275 E 5.5(.I)-.605 G
(nformation passed with each de)-5.5 E(vice control v)-.275 E(aries in)
-.275 E(length and is mapped by data structures unique to that de)72
455.5 Q(vice control.)-.275 E 1.76 -.88(To c)72 485.4 T(hange a de).88 E
(vice control, use)-.275 E F0(XChangeDe)3.666 E(viceContr)-.165 E(ol)
-.198 E F1(.).916 E 36 503.15 36 514.15 DL 36 501.15 36 512.15 DL 41.5
499.4 36 499.4 DL 43.5 499.4 38 499.4 DL 49 499.4 43.5 499.4 DL
(Status XChangeDe)72 515.3 Q(viceControl\()-.275 E/F2 11/Times-Italic@0
SF(display)A F1(,).916 E F2(de)2.75 E(vice)-.165 E F1(,).916 E F2(contr)
2.75 E(ol)-.495 E F1(,).916 E F2(value)2.75 E F1(\)).916 E(Display *)
85.75 528.3 Q F2(display)A F1(;).916 E(XDe)85.75 541.3 Q(vice *)-.275 E
F2(de)A(vice)-.165 E F1(;).916 E(int)85.75 554.3 Q F2(contr)2.75 E(ol)
-.495 E F1(;).916 E(XDe)85.75 567.3 Q(viceControl *)-.275 E F2(value)A
F1(;).916 E F2(display)72 588.1 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2(de)72 605 Q(vice)-.165 E F1(Speci\214es the de)44.071 E
(vice whose con\214guration control status is to be modi\214ed.)-.275 E
F2(contr)72 621.9 Q(ol)-.495 E F1(Identi\214es the speci\214c de)40.716
E(vice control to be changed.)-.275 E F2(value)72 638.8 Q F1
(Speci\214es a pointer to an)48.174 E F0(XDe)3.666 E(viceContr)-.165 E
(ol)-.198 E F1(structure that describes which control)3.666 E
(is to be changed and ho)144 651.8 Q 2.75(wi)-.275 G 2.75(ti)-2.75 G
2.75(st)-2.75 G 2.75(ob)-2.75 G 2.75(ec)-2.75 G(hanged.)-2.75 E 36
647.45 36 658.45 DL 36 645.45 36 656.45 DL 41.5 656.7 36 656.7 DL 43.5
656.7 38 656.7 DL 49 656.7 43.5 656.7 DL F0(XChangeDe)72.916 681.7 Q
(viceContr)-.165 E(ol)-.198 E F1
(changes the current state of the speci\214ed de)3.666 E(vice control.)
-.275 E(If the tar)5.5 E(get X)-.198 E(serv)72 694.7 Q
(er does not support that de)-.165 E(vice control, a)-.275 E F0(BadV)
3.666 E(alue)-1.012 E F1(error is returned.)3.666 E
(If the speci\214ed de)5.5 E(vice)-.275 E(does not support that de)72
707.7 Q(vice control, a)-.275 E F0(BadMatch)3.666 E F1
(error is returned.)3.666 E(If another client has the tar)5.5 E(-)-.22 E
(get de)72 720.7 Q(vice grabbed, a status of)-.275 E F0(Alr)3.666 E
(eadyGrab)-.198 E(bed)-.11 E F1(is returned.)3.666 E
(If another client has the de)5.5 E(vice)-.275 E F0(47)282.5 769 Q 0 Cg
EP
%%Page: 48 50
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF 2.75(XI)72 49 S(nput Extension Library)-2.75 E
(X11, Release 6.4)229.413 E/F1 11/Times-Roman@0 SF
(open and has set it to a con\215icting state, a status of)72 85 Q F0
(De)3.666 E(viceBusy)-.165 E F1(is returned.)3.666 E(If the request f)
5.5 E(ails)-.11 E(for an)72 98 Q 2.75(yr)-.165 G(eason, the de)-2.75 E
(vice control will not be changed.)-.275 E
(If the request is successful, the de)72 114.9 Q
(vice control will be changed and a status of)-.275 E F0(Success)3.666 E
F1(is returned.)3.666 E(The information passed v)72 127.9 Q(aries accor\
ding to the speci\214ed control and is mapped by a structure)-.275 E
(appropriate for that control.)72 140.9 Q(The \214rst tw)5.5 E 2.75(om)
-.11 G(embers are common to all de)-2.75 E(vice controls:)-.275 E .44 LW
36 162.55 36 173.55 DL 36 160.55 36 171.55 DL 41.5 158.8 36 158.8 DL
43.5 158.8 38 158.8 DL 49 158.8 43.5 158.8 DL(typedef struct {)72 177.3
Q(XID control;)108 190.3 Q(int length;)108 203.3 Q 2.75(}X)72 216.3 S
(De)-2.75 E(viceControl;)-.275 E 36 218.45 36 229.45 DL 36 216.45 36
227.45 DL 41.5 227.7 36 227.7 DL 43.5 227.7 38 227.7 DL 49 227.7 43.5
227.7 DL(The control may be set using constants de\214ned in the <)72
252.7 Q F0(X11/extensions/XI.h).916 E F1 2.75(>h).916 G(eader \214le.)
-2.75 E(Cur)5.5 E(-)-.22 E(rently de\214ned de)72 265.7 Q
(vice controls include DEVICE_RESOLUTION.)-.275 E(The information that \
can be changed by the DEVICE_RESOLUTION control is de\214ned in the)72
282.6 Q F0(XDe)72.916 295.6 Q(viceResolutionContr)-.165 E(ol)-.198 E F1
(structure, which is de\214ned as follo)3.666 E(ws:)-.275 E 36 317.25 36
328.25 DL 36 315.25 36 326.25 DL 41.5 313.5 36 313.5 DL 43.5 313.5 38
313.5 DL 49 313.5 43.5 313.5 DL(typedef struct {)72 332 Q(XID control;)
108 345 Q(int length;)108 358 Q(int \214rst_v)108 371 Q(aluator;)-.275 E
(int num_v)108 384 Q(aluators;)-.275 E(int *resolutions;)108 397 Q 2.75
(}X)72 410 S(De)-2.75 E(viceResolutionControl;)-.275 E 36 412.15 36
423.15 DL 36 410.15 36 421.15 DL 41.5 421.4 36 421.4 DL 43.5 421.4 38
421.4 DL 49 421.4 43.5 421.4 DL(This de)72 446.4 Q
(vice control changes the resolution of the speci\214ed v)-.275 E
(aluators on the speci\214ed e)-.275 E(xtension)-.165 E(input de)72
459.4 Q 2.75(vice. V)-.275 F(aluators are numbered be)-1.221 E
(ginning with zero.)-.165 E(Only the v)5.5 E
(aluators in the range speci-)-.275 E(\214ed by \214rst_v)72 472.4 Q
(aluator and num_v)-.275 E(aluators are set.)-.275 E 2.75(Av)5.5 G
(alue of -1 in the resolutions list indicates that)-3.025 E
(the resolution for this v)72 485.4 Q(aluator is not to be changed.)
-.275 E(The num_v)5.5 E(aluators member speci\214es the)-.275 E
(number of v)72 498.4 Q(aluators in the resolutions list.)-.275 E
(When this control is speci\214ed,)72 515.3 Q F0(XChangeDe)3.666 E
(viceContr)-.165 E(ol)-.198 E F1 -.11(fa)3.666 G(ils with a).11 E F0
(BadMatch)3.666 E F1(error if the spec-)3.666 E(i\214ed de)72 528.3 Q
(vice has no v)-.275 E 2.75(aluators. If)-.275 F 2.75(ar)2.75 G
(esolution is speci\214ed that is not within the range of v)-2.75 E
(alid v)-.275 E(al-)-.275 E(ues \(as returned by)72 541.3 Q F0(XGetDe)
3.666 E(viceContr)-.165 E(ol)-.198 E F1(\),).916 E F0(XChangeDe)3.666 E
(viceContr)-.165 E(ol)-.198 E F1 -.11(fa)3.666 G(ils with a).11 E F0
(BadV)3.666 E(alue)-1.012 E F1(error)3.666 E(.)-.605 E(A)72 554.3 Q F0
(BadV)3.666 E(alue)-1.012 E F1(error results if the number of v)3.666 E
(aluators supported by the de)-.275 E(vice is less than the fol-)-.275 E
(lo)72 567.3 Q(wing e)-.275 E(xpression:)-.165 E(\214rst_v)108 590.7 Q
(aluator + num_v)-.275 E(aluators,)-.275 E F0(XChangeDe)72.916 614.1 Q
(viceContr)-.165 E(ol)-.198 E F1(can generate)3.666 E F0(BadMatch)3.666
E F1(and)3.666 E F0(BadV)3.666 E(alue)-1.012 E F1(errors.)3.666 E F0
2.75(2.3.8. Selecting)72 640.1 R(Extension De)2.75 E(vice Ev)-.165 E
(ents)-.11 E F1 1.76 -.88(To s)72 657 T(elect de).88 E(vice input e)
-.275 E -.165(ve)-.275 G(nts, use).165 E F0(XSelectExtensionEv)3.666 E
(ent)-.11 E F1 5.5(.T).916 G(he parameters passed are a pointer)-5.5 E
(to a list of classes that de\214ne the desired e)72 670 Q -.165(ve)
-.275 G(nt types and de).165 E(vices, a count of the number of ele-)
-.275 E(ments in the list, and the ID of the windo)72 683 Q 2.75(wf)
-.275 G(rom which e)-2.75 E -.165(ve)-.275 G(nts are desired.).165 E F0
(48)282.5 769 Q 0 Cg EP
%%Page: 49 51
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF 2.75(XI)72 49 S(nput Extension Library)-2.75 E
(X11, Release 6.4)229.413 E .44 LW 36 76.75 36 87.75 DL 36 74.75 36
85.75 DL 41.5 73 36 73 DL 43.5 73 38 73 DL 49 73 43.5 73 DL/F1 11
/Times-Roman@0 SF(int XSelectExtensionEv)72 88.9 Q(ent\()-.165 E/F2 11
/Times-Italic@0 SF(display)A F1(,).916 E F2(window)2.75 E F1(,).916 E F2
-.165(ev)2.75 G(ent_list).165 E F1(,).916 E F2 -.165(ev)2.75 G
(ent_count).165 E F1(\)).916 E(Display *)85.75 101.9 Q F2(display)A F1
(;).916 E -.44(Wi)85.75 114.9 S(ndo).44 E(w)-.275 E F2(window)2.75 E F1
(;).916 E(XEv)85.75 127.9 Q(entClass *)-.165 E F2 -.165(ev)C(ent_list)
.165 E F1(;).916 E(int)85.75 140.9 Q F2 -.165(ev)2.75 G(ent_count).165 E
F1(;).916 E F2(display)72 161.7 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2(window)72 178.6 Q F1(Speci\214es the ID of the windo)37.768 E 2.75
(wf)-.275 G(rom which the client wishes to recei)-2.75 E .33 -.165(ve e)
-.275 H -.165(ve)-.11 G(nts.).165 E F2 -.165(ev)72 195.5 S(ent_list).165
E F1(Speci\214es a pointer to an array of e)30.002 E -.165(ve)-.275 G
(nt classes that specify which e).165 E -.165(ve)-.275 G(nts are).165 E
(desired.)144 208.5 Q F2 -.165(ev)72 225.4 S(ent_count).165 E F1
(Speci\214es the number of elements in the e)19.013 E -.165(ve)-.275 G
(nt_list.).165 E 36 221.05 36 232.05 DL 36 219.05 36 230.05 DL 41.5
230.3 36 230.3 DL 43.5 230.3 38 230.3 DL 49 230.3 43.5 230.3 DL F0
(XSelectExtensionEv)72.916 255.3 Q(ent)-.11 E F1(requests the serv)3.666
E(er to send e)-.165 E -.165(ve)-.275 G(nts that match the e).165 E
-.165(ve)-.275 G(nts and de).165 E(vices)-.275 E(described by the e)72
268.3 Q -.165(ve)-.275 G(nt list and that come from the requested windo)
.165 E 4.18 -.715(w. T)-.275 H(he elements of the).715 E F0(XEv)72.916
281.3 Q(entClass)-.11 E F1(array are the e)3.666 E -.165(ve)-.275 G
(nt_class v).165 E(alues obtained by in)-.275 E -.22(vo)-.44 G
(king a macro with the pointer to).22 E(an)72 294.3 Q F0(XDe)3.666 E
(vice)-.165 E F1(structure returned by the)3.666 E F0(XOpenDe)3.666 E
(vice)-.165 E F1 2.75(request. F)3.666 F(or e)-.165 E(xample, the)-.165
E F0(De)3.666 E(viceK)-.165 E(eyPr)-.275 E(ess)-.198 E F1(macro w)72
307.3 Q(ould return the)-.11 E F0(XEv)3.666 E(entClass)-.11 E F1(for)
3.666 E F0(De)3.666 E(viceK)-.165 E(eyPr)-.275 E(ess)-.198 E F1 -2.365
-.275(ev e)3.666 H(nts from the speci\214ed de).275 E(vice if it)-.275 E
(were in)72 320.3 Q -.22(vo)-.44 G -.11(ke).22 G 2.75(di).11 G 2.75(nt)
-2.75 G(he follo)-2.75 E(wing form:)-.275 E(De)108 339.8 Q(viceK)-.275 E
-.165(ey)-.275 G(Press \(XDe).165 E(vice *de)-.275 E(vice, e)-.275 E
-.165(ve)-.275 G(nt_type, e).165 E -.165(ve)-.275 G(nt_class\)).165 E
(Macros are de\214ned for the follo)72 363.2 Q(wing e)-.275 E -.165(ve)
-.275 G(nt classes:).165 E F0(De)72.916 382.7 Q(viceK)-.165 E(eyPr)-.275
E(ess)-.198 E(De)72.916 395.7 Q(viceK)-.165 E(eyRelease)-.275 E(De)
72.916 408.7 Q(viceButtonPr)-.165 E(ess)-.198 E(De)72.916 421.7 Q
(viceButtonRelease)-.165 E(De)72.916 434.7 Q(viceMotionNotify)-.165 E
(De)72.916 447.7 Q(viceF)-.165 E(ocusIn)-.275 E(De)72.916 460.7 Q(viceF)
-.165 E(ocusOut)-.275 E(Pr)72.916 473.7 Q(oximityIn)-.198 E(Pr)72.916
486.7 Q(oximityOut)-.198 E(De)72.916 499.7 Q(viceStateNotify)-.165 E(De)
72.916 512.7 Q(viceMappingNotify)-.165 E(ChangeDe)72.916 525.7 Q
(viceNotify)-.165 E(De)72.916 538.7 Q(viceP)-.165 E(ointerMotionHint)
-.22 E(De)72.916 551.7 Q(viceButton1Motion)-.165 E(De)72.916 564.7 Q
(viceButton2Motion)-.165 E(De)72.916 577.7 Q(viceButton3Motion,)-.165 E
(De)72.916 590.7 Q(viceButton4Motion)-.165 E(De)72.916 603.7 Q
(viceButton5Motion)-.165 E(De)72.916 616.7 Q(viceButtonMotion,)-.165 E
(De)72.916 629.7 Q(viceOwnerGrabButton)-.165 E(De)72.916 642.7 Q
(viceButtonPr)-.165 E(essGrab)-.198 E F1 1.76 -.88(To g)72 666.1 T
(et the ne).88 E(xt a)-.165 E -.275(va)-.22 G(ilable e).275 E -.165(ve)
-.275 G(nt from within a client program, use the core).165 E F0(XNextEv)
3.666 E(ent)-.11 E F1(function.)3.666 E(This returns the ne)72 679.1 Q
(xt e)-.165 E -.165(ve)-.275 G(nt whether it came from a core de).165 E
(vice or an e)-.275 E(xtension de)-.165 E(vice.)-.275 E(Succeeding)72
696 Q F0(XSelectExtensionEv)3.666 E(ent)-.11 E F1(requests using e)3.666
E -.165(ve)-.275 G(nt classes for the same de).165 E(vice as w)-.275 E
(as)-.11 E(speci\214ed on a pre)72 709 Q
(vious request will replace the pre)-.275 E(vious set of selected e)
-.275 E -.165(ve)-.275 G(nts from that de).165 E(vice)-.275 E
(with the ne)72 722 Q 2.75(ws)-.275 G(et.)-2.75 E F0(49)282.5 769 Q 0 Cg
EP
%%Page: 50 52
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF 2.75(XI)72 49 S(nput Extension Library)-2.75 E
(X11, Release 6.4)229.413 E(XSelectExtensionEv)72.916 85 Q(ent)-.11 E/F1
11/Times-Roman@0 SF(can generate)3.666 E F0(BadAccess)3.666 E F1(,).916
E F0(BadClass)3.666 E F1(,).916 E F0(BadLength)3.666 E F1 2.75(,a).916 G
(nd)-2.75 E F0(BadW)3.666 E(indo)-.198 E(w)-.11 E F1(errors.)72 98 Q F0
2.75(2.3.9. Determining)72 124 R(Selected De)2.75 E(vice Ev)-.165 E
(ents)-.11 E F1 1.76 -.88(To d)72 140.9 T(etermine which e).88 E
(xtension e)-.165 E -.165(ve)-.275 G
(nts are currently selected from a gi).165 E -.165(ve)-.275 G 2.75(nw)
.165 G(indo)-2.75 E 1.43 -.715(w, u)-.275 H(se).715 E F0(XGetSe-)3.666 E
(lectedExtensionEv)72 153.9 Q(ents)-.11 E F1(.).916 E .44 LW 36 171.65
36 182.65 DL 36 169.65 36 180.65 DL 41.5 167.9 36 167.9 DL 43.5 167.9 38
167.9 DL 49 167.9 43.5 167.9 DL(int XGetSelectedExtensionEv)72 183.8 Q
(ents\()-.165 E/F2 11/Times-Italic@0 SF(display)A F1(,).916 E F2(window)
2.75 E F1(,).916 E F2(this_client_count)2.75 E F1(,).916 E F2
(this_client)2.75 E F1(,).916 E F2(all_clients_count)138 196.8 Q F1(,)
.916 E F2(all_clients)2.75 E F1(\)).916 E(Display *)85.75 209.8 Q F2
(display)A F1(;).916 E -.44(Wi)85.75 222.8 S(ndo).44 E(w)-.275 E F2
(window)2.75 E F1(;).916 E(int *)85.75 235.8 Q F2(this_client_count)A F1
5.5(;/).916 G 2.75(*R)-5.5 G(ETURN */)-2.75 E(XEv)85.75 248.8 Q
(entClass **)-.165 E F2(this_client)A F1 19.25(;/).916 G 2.75(*R)-19.25
G(ETURN */)-2.75 E(int *)85.75 261.8 Q F2(all_clients_count)A F1 5.5(;/)
.916 G 2.75(*R)-5.5 G(ETURN */)-2.75 E(XEv)85.75 274.8 Q(entClass **)
-.165 E F2(all_clients)A F1 19.25(;/).916 G 2.75(*R)-19.25 G(ETURN */)
-2.75 E F2(display)72 295.6 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2(window)72 312.5 Q F1(Speci\214es the ID of the windo)37.768 E 2.75
(wf)-.275 G(rom which the client wishes to recei)-2.75 E .33 -.165(ve e)
-.275 H -.165(ve)-.11 G(nts.).165 E F2(this_client_count)72 329.4 Q F1
(Returns the number of elements in the this_client list.)144 342.4 Q F2
(this_client)72 359.3 Q F1(Returns a list of)26.163 E F0(XEv)3.666 E
(entClasses)-.11 E F1(that specify which e)3.666 E -.165(ve)-.275 G
(nts are selected by this).165 E(client.)144 372.3 Q F2
(all_clients_count)72 389.2 Q F1
(Returns the number of elements in the all_clients list.)144 402.2 Q F2
(all_clients)72 419.1 Q F1(Returns a list of)26.163 E F0(XEv)3.666 E
(entClasses)-.11 E F1(that specify which e)3.666 E -.165(ve)-.275 G
(nts are selected by all).165 E(clients.)144 432.1 Q 36 427.75 36 438.75
DL 36 425.75 36 436.75 DL 41.5 437 36 437 DL 43.5 437 38 437 DL 49 437
43.5 437 DL F0(XGetSelectedExtensionEv)72.916 462 Q(ents)-.11 E F1
(returns pointers to tw)3.666 E 2.75(oe)-.11 G -.165(ve)-3.025 G
(nt class arrays.).165 E(One lists the e)5.5 E(xten-)-.165 E(sion e)72
475 Q -.165(ve)-.275 G
(nts selected by this client from the speci\214ed windo).165 E 4.18
-.715(w. T)-.275 H(he other lists the e).715 E(xtension e)-.165 E -.165
(ve)-.275 G(nts).165 E
(selected by all clients from the speci\214ed windo)72 488 Q 4.18 -.715
(w. T)-.275 H(his information is analogous to that returned).715 E
(in your_e)72 501 Q -.165(ve)-.275 G(nt_mask and all_e).165 E -.165(ve)
-.275 G(nt_masks of the).165 E F0(XW)3.666 E(indo)-.198 E(wAttrib)-.11 E
(utes)-.22 E F1(structure when an)3.666 E F0(XGetW)72.916 514 Q(indo)
-.198 E(wAttrib)-.11 E(utes)-.22 E F1(request is made.)3.666 E 1.76 -.88
(To f)5.5 H(ree the tw).88 E 2.75(oa)-.11 G
(rrays returned by this function, use)-2.75 E F0(XFr)72.916 527 Q(ee)
-.198 E F1(.).916 E F0(XGetSelectedExtensionEv)72.916 543.9 Q(ents)-.11
E F1(can generate)3.666 E F0(BadW)3.666 E(indo)-.198 E(w)-.11 E F1
(errors.)3.666 E F0 2.75(2.3.10. Contr)72 569.9 R(olling Ev)-.198 E
(ent Pr)-.11 E(opagation)-.198 E F1(Extension e)72 586.8 Q -.165(ve)
-.275 G(nts propag).165 E(ate up the windo)-.055 E 2.75(wh)-.275 G
(ierarch)-2.75 E 2.75(yi)-.055 G 2.75(nt)-2.75 G
(he same manner as core e)-2.75 E -.165(ve)-.275 G 2.75(nts. If).165 F
2.75(aw)2.75 G(in-)-2.75 E(do)72 599.8 Q 2.75(wi)-.275 G 2.75(sn)-2.75 G
(ot interested in an e)-2.75 E(xtension e)-.165 E -.165(ve)-.275 G
(nt, it usually propag).165 E(ates to the closest ancestor that is)-.055
E(interested, unless the dont_propag)72 612.8 Q(ate list prohibits it.)
-.055 E(Grabs of e)5.5 E(xtension de)-.165 E(vices may alter the set)
-.275 E(of windo)72 625.8 Q(ws that recei)-.275 E .33 -.165(ve a p)-.275
H(articular e).165 E(xtension e)-.165 E -.165(ve)-.275 G(nt.).165 E
(Client programs may control e)72 642.7 Q -.165(ve)-.275 G(nt propag)
.165 E(ation through the use of the follo)-.055 E(wing tw)-.275 E 2.75
(of)-.11 G(unctions:)-2.75 E F0(XChangeDe)72.916 655.7 Q(viceDontPr)
-.165 E(opagateList)-.198 E F1(and)3.666 E F0(XGetDe)3.666 E(viceDontPr)
-.165 E(opagateList)-.198 E F1(.).916 E F0(50)282.5 769 Q 0 Cg EP
%%Page: 51 53
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF 2.75(XI)72 49 S(nput Extension Library)-2.75 E
(X11, Release 6.4)229.413 E .44 LW 36 76.75 36 87.75 DL 36 74.75 36
85.75 DL 41.5 73 36 73 DL 43.5 73 38 73 DL 49 73 43.5 73 DL/F1 11
/Times-Roman@0 SF(int XChangeDe)72 88.9 Q(viceDontPropag)-.275 E
(ateList\()-.055 E/F2 11/Times-Italic@0 SF(display)A F1(,).916 E F2
(window)2.75 E F1(,).916 E F2 -.165(ev)2.75 G(ent_count).165 E F1(,).916
E F2 -.165(ev)2.75 G(ents).165 E F1(,).916 E F2(mode)2.75 E F1(\)).916 E
(Display *)85.75 101.9 Q F2(display)A F1(;).916 E -.44(Wi)85.75 114.9 S
(ndo).44 E(w)-.275 E F2(window)2.75 E F1(;).916 E(int)85.75 127.9 Q F2
-.165(ev)2.75 G(ent_count).165 E F1(;).916 E(XEv)85.75 140.9 Q
(entClass *)-.165 E F2 -.165(ev)C(ents).165 E F1(;).916 E(int)85.75
153.9 Q F2(mode)2.75 E F1(;).916 E F2(display)72 174.7 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2(window)72 191.6 Q F1(Speci\214es the desired windo)37.768 E -.715(w.)
-.275 G F2 -.165(ev)72 208.5 S(ent_count).165 E F1
(Speci\214es the number of elements in the e)19.013 E -.165(ve)-.275 G
(nts list.).165 E F2 -.165(ev)72 225.4 S(ents).165 E F1
(Speci\214es a pointer to the list of XEv)44.676 E(entClasses.)-.165 E
F2(mode)72 242.3 Q F1(Speci\214es the mode.)48.174 E -1.21(Yo)5.5 G 2.75
(uc)1.21 G(an pass)-2.75 E F0(AddT)3.666 E(oList)-1.012 E F1(or)3.666 E
F0(DeleteFr)3.666 E(omList)-.198 E F1(.).916 E 36 237.95 36 248.95 DL 36
235.95 36 246.95 DL 41.5 247.2 36 247.2 DL 43.5 247.2 38 247.2 DL 49
247.2 43.5 247.2 DL F0(XChangeDe)72.916 272.2 Q(viceDontPr)-.165 E
(opagateList)-.198 E F1(adds an e)3.666 E -.165(ve)-.275 G
(nt to or deletes an e).165 E -.165(ve)-.275 G(nt from the do_not_prop-)
.165 E(ag)72 285.2 Q(ate list of e)-.055 E(xtension e)-.165 E -.165(ve)
-.275 G(nts for the speci\214ed windo).165 E 4.18 -.715(w. T)-.275 H
(here is one list per windo).715 E 1.43 -.715(w, a)-.275 H(nd the list)
.715 E(remains for the life of the windo)72 298.2 Q 4.18 -.715(w. T)
-.275 H(he list is not altered if a client that changed the list termi-)
.715 E(nates.)72 311.2 Q(Suppression of e)72 328.1 Q -.165(ve)-.275 G
(nt propag).165 E(ation is not allo)-.055 E(wed for all e)-.275 E -.165
(ve)-.275 G 2.75(nts. If).165 F 2.75(as)2.75 G(peci\214ed)-2.75 E F0
(XEv)3.666 E(entClass)-.11 E F1(is)3.666 E(in)72 341.1 Q -.275(va)-.44 G
(lid because suppression of that e).275 E -.165(ve)-.275 G
(nt is not allo).165 E(wed, a)-.275 E F0(BadClass)3.666 E F1
(error results.)3.666 E F0(XChangeDe)72.916 358 Q(viceDontPr)-.165 E
(opagateList)-.198 E F1(can generate)3.666 E F0(BadClass)3.666 E F1(,)
.916 E F0(BadMode)3.666 E F1 2.75(,a).916 G(nd)-2.75 E F0(BadW)3.666 E
(indo)-.198 E(w)-.11 E F1(errors.)72 371 Q 36 405.65 36 416.65 DL 36
403.65 36 414.65 DL 41.5 401.9 36 401.9 DL 43.5 401.9 38 401.9 DL 49
401.9 43.5 401.9 DL(XEv)72 417.8 Q(entClass * XGetDe)-.165 E
(viceDontPropag)-.275 E(ateList\()-.055 E F2(display)A F1(,).916 E F2
(window)2.75 E F1(,).916 E F2 -.165(ev)2.75 G(ent_count).165 E F1(\))
.916 E(Display *)88.5 430.8 Q F2(display)A F1(;).916 E -.44(Wi)88.5
443.8 S(ndo).44 E(w)-.275 E F2(window)2.75 E F1(;).916 E(int *)88.5
456.8 Q F2 -.165(ev)C(ent_count).165 E F1 122.673(;/).916 G(*RETURN */)
-122.673 E F2(display)72 477.6 Q F1
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F2(window)72 494.5 Q F1(Speci\214es the desired windo)37.768 E -.715(w.)
-.275 G F2 -.165(ev)72 511.4 S(ent_count).165 E F1
(Returns the number of elements in the array returned by this function.)
19.013 E 36 507.05 36 518.05 DL 36 505.05 36 516.05 DL 41.5 516.3 36
516.3 DL 43.5 516.3 38 516.3 DL 49 516.3 43.5 516.3 DL F0(XGetDe)72.916
541.3 Q(viceDontPr)-.165 E(opagateList)-.198 E F1(allo)3.666 E
(ws a client to determine the do_not_propag)-.275 E(ate list of e)-.055
E(xten-)-.165 E(sion e)72 554.3 Q -.165(ve)-.275 G
(nts for the speci\214ed windo).165 E 4.18 -.715(w. I)-.275 H 2.75(tr)
.715 G(eturns an array of)-2.75 E F0(XEv)3.666 E(entClass)-.11 E F1 2.75
(,e).916 G(ach)-2.75 E F0(XEv)3.666 E(entClass)-.11 E F1
(representing a de)72 567.3 Q(vice/e)-.275 E -.165(ve)-.275 G
(nt type pair).165 E 5.5(.T)-.605 G 2.75(of)-6.38 G
(ree the data returned by this function, use)-2.75 E F0(XFr)3.666 E(ee)
-.198 E F1(.).916 E F0(XGetDe)72.916 584.2 Q(viceDontPr)-.165 E
(opagateList)-.198 E F1(can generate)3.666 E F0(BadW)3.666 E(indo)-.198
E(w)-.11 E F1(errors.)3.666 E F0 2.75(2.3.11. Sending)72 610.2 R(an Ev)
2.75 E(ent)-.11 E F1 1.76 -.88(To s)72 627.1 T(end an e).88 E
(xtension e)-.165 E -.165(ve)-.275 G(nt to another client, use).165 E F0
(XSendExtensionEv)3.666 E(ent)-.11 E F1(.).916 E F0(51)282.5 769 Q 0 Cg
EP
%%Page: 52 54
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF 2.75(XI)72 49 S(nput Extension Library)-2.75 E
(X11, Release 6.4)229.413 E .44 LW 36 76.75 36 87.75 DL 36 74.75 36
85.75 DL 41.5 73 36 73 DL 43.5 73 38 73 DL 49 73 43.5 73 DL/F1 11
/Times-Roman@0 SF(int XSendExtensionEv)72 88.9 Q(ent\()-.165 E/F2 11
/Times-Italic@0 SF(display)A F1(,).916 E F2(de)2.75 E(vice)-.165 E F1(,)
.916 E F2(window)2.75 E F1(,).916 E F2(pr)2.75 E(opa)-.495 E(gate)-.11 E
F1(,).916 E F2 -.165(ev)2.75 G(ent_count).165 E F1(,).916 E F2 -.165(ev)
2.75 G(ent_list).165 E F1(,).916 E F2 -.165(ev)2.75 G(ent).165 E F1(\))
.916 E(Display *)85.75 101.9 Q F2(display)A F1(;).916 E(XDe)85.75 114.9
Q(vice *)-.275 E F2(de)A(vice)-.165 E F1(;).916 E -.44(Wi)85.75 127.9 S
(ndo).44 E(w)-.275 E F2(window)2.75 E F1(;).916 E(Bool)85.75 140.9 Q F2
(pr)2.75 E(opa)-.495 E(gate)-.11 E F1(;).916 E(int)85.75 153.9 Q F2
-.165(ev)2.75 G(ent_count).165 E F1(;).916 E(XEv)85.75 166.9 Q
(entClass *)-.165 E F2 -.165(ev)C(ent_list).165 E F1(;).916 E(XEv)85.75
179.9 Q(ent *)-.165 E F2 -.165(ev)C(ent).165 E F1(;).916 E F2(display)72
200.7 Q F1(Speci\214es the connection to the X serv)40.221 E(er)-.165 E
(.)-.605 E F2(de)72 217.6 Q(vice)-.165 E F1(Speci\214es the de)44.071 E
(vice whose ID is recorded in the e)-.275 E -.165(ve)-.275 G(nt.).165 E
F2(window)72 234.5 Q F1(Speci\214es the destination windo)37.768 E 2.75
(wI)-.275 G 2.75(D. Y)-2.75 F(ou can pass a windo)-1.21 E 2.75(wI)-.275
G(D,)-2.75 E F0 -.22(Po)3.666 G(interW).22 E(in-)-.198 E(do)144 247.5 Q
(w)-.11 E F1(or)3.666 E F0(InputF)3.666 E(ocus)-.275 E F1(.).916 E F2
(pr)72 264.4 Q(opa)-.495 E(gate)-.11 E F1(Speci\214es a boolean v)27.384
E(alue that is either)-.275 E F0 -.814(Tr)3.666 G(ue).814 E F1(or)3.666
E F0 -.275(Fa)3.666 G(lse).275 E F1(.).916 E F2 -.165(ev)72 281.3 S
(ent_count).165 E F1(Speci\214es the number of elements in the e)19.013
E -.165(ve)-.275 G(nt_list array).165 E(.)-.715 E F2 -.165(ev)72 298.2 S
(ent_list).165 E F1(Speci\214es a pointer to an array of)30.002 E F0
(XEv)3.666 E(entClass)-.11 E F1(.).916 E F2 -.165(ev)72 315.1 S(ent).165
E F1(Speci\214es a pointer to the e)48.955 E -.165(ve)-.275 G
(nt that is to be sent.).165 E 36 310.75 36 321.75 DL 36 308.75 36
319.75 DL 41.5 320 36 320 DL 43.5 320 38 320 DL 49 320 43.5 320 DL F0
(XSendExtensionEv)72.916 345 Q(ent)-.11 E F1
(identi\214es the destination windo)3.666 E 1.43 -.715(w, d)-.275 H
(etermines which clients should).715 E(recei)72 358 Q .33 -.165(ve t)
-.275 H(he speci\214ed e).165 E -.165(ve)-.275 G(nt, and ignores an).165
E 2.75(ya)-.165 G(cti)-2.75 E .33 -.165(ve g)-.275 H 2.75(rabs. It).165
F(requires a list of)2.75 E F0(XEv)3.666 E(entClass)-.11 E F1(to be)
3.666 E 2.75(speci\214ed. These)72 371 R
(are obtained by opening an input de)2.75 E(vice with the)-.275 E F0
(XOpenDe)3.666 E(vice)-.165 E F1(request.)3.666 E F0(XSendExtensionEv)
72.916 387.9 Q(ent)-.11 E F1(uses the windo)3.666 E 2.75(wa)-.275 G
-.198(rg)-2.75 G(ument to identify the destination windo).198 E 2.75(wa)
-.275 G 2.75(sf)-2.75 G(ollo)-2.75 E(ws:)-.275 E 23.65<8349>72 404.8 S
2.75(fy)-23.65 G(ou pass)-2.75 E F0 -.22(Po)3.666 G(interW).22 E(indo)
-.198 E(w)-.11 E F1 2.75(,t).916 G(he destination windo)-2.75 E 2.75(wi)
-.275 G 2.75(st)-2.75 G(he windo)-2.75 E 2.75(wt)-.275 G
(hat contains the)-2.75 E(pointer)99.5 417.8 Q(.)-.605 E 23.65<8349>72
434.7 S 2.75(fy)-23.65 G(ou pass)-2.75 E F0(InputF)3.666 E(ocus)-.275 E
F1(and if the focus windo)3.666 E 2.75(wc)-.275 G(ontains the pointer)
-2.75 E 2.75(,t)-.44 G(he destination win-)-2.75 E(do)99.5 447.7 Q 2.75
(wi)-.275 G 2.75(st)-2.75 G(he windo)-2.75 E 2.75(wt)-.275 G
(hat contains the pointer)-2.75 E 5.5(.I)-.605 G 2.75(ft)-5.5 G
(he focus windo)-2.75 E 2.75(wd)-.275 G(oes not contain the)-2.75 E
(pointer)99.5 460.7 Q 2.75(,t)-.44 G(he destination windo)-2.75 E 2.75
(wi)-.275 G 2.75(st)-2.75 G(he focus windo)-2.75 E -.715(w.)-.275 G 1.76
-.88(To d)72 477.6 T(etermine which clients should recei).88 E .33 -.165
(ve t)-.275 H(he speci\214ed e).165 E -.165(ve)-.275 G(nts,).165 E F0
(XSendExtensionEv)3.666 E(ent)-.11 E F1(uses the)3.666 E(propag)72 490.6
Q(ate ar)-.055 E(gument as follo)-.198 E(ws:)-.275 E 23.65<8349>72 507.5
S 2.75(fp)-23.65 G(ropag)-2.75 E(ate is)-.055 E F0 -.275(Fa)3.666 G(lse)
.275 E F1 2.75(,t).916 G(he e)-2.75 E -.165(ve)-.275 G(nt is sent to e)
.165 E -.165(ve)-.275 G(ry client selecting from the destination windo)
.165 E(w)-.275 E(an)99.5 520.5 Q 2.75(yo)-.165 G 2.75(ft)-2.75 G(he e)
-2.75 E -.165(ve)-.275 G(nts speci\214ed in the e).165 E -.165(ve)-.275
G(nt_list array).165 E(.)-.715 E 23.65<8349>72 537.4 S 2.75(fp)-23.65 G
(ropag)-2.75 E(ate is)-.055 E F0 -.814(Tr)3.666 G(ue).814 E F1
(and no clients ha)3.666 E .33 -.165(ve s)-.22 H
(elected from the destination windo).165 E 2.75(wa)-.275 G .33 -.165
(ny o)-2.75 H 2.75(ft).165 G(he)-2.75 E -2.365 -.275(ev e)99.5 550.4 T
(nts speci\214ed in the e).275 E -.165(ve)-.275 G(nt_list array).165 E
2.75(,t)-.715 G(he destination is replaced with the closest ancestor)
-2.75 E(of destination for which some client has selected one of the sp\
eci\214ed e)99.5 563.4 Q -.165(ve)-.275 G(nts and for which).165 E
(no interv)99.5 576.4 Q(ening windo)-.165 E 2.75(wh)-.275 G(as that e)
-2.75 E -.165(ve)-.275 G(nt in its do_not_propag).165 E(ate mask.)-.055
E(If no such windo)5.5 E(w)-.275 E -.165(ex)99.5 589.4 S
(ists, or if the windo).165 E 2.75(wi)-.275 G 2.75(sa)-2.75 G 2.75(na)
-2.75 G(ncestor of the focus windo)-2.75 E 1.43 -.715(w, a)-.275 H(nd)
.715 E F0(InputF)3.666 E(ocus)-.275 E F1 -.11(wa)3.666 G 2.75(so).11 G
(riginally)-2.75 E(speci\214ed as the destination, the e)99.5 602.4 Q
-.165(ve)-.275 G(nt is not sent to an).165 E 2.75(yc)-.165 G 2.75
(lients. Otherwise,)-2.75 F(the e)2.75 E -.165(ve)-.275 G(nt is).165 E
(reported to e)99.5 615.4 Q -.165(ve)-.275 G
(ry client selecting on the \214nal destination an).165 E 2.75(yo)-.165
G 2.75(ft)-2.75 G(he e)-2.75 E -.165(ve)-.275 G(nts speci\214ed in).165
E -2.365 -.275(ev e)99.5 628.4 T(nt_list.).275 E(The e)72 645.3 Q -.165
(ve)-.275 G(nt in the).165 E F0(XEv)3.666 E(ent)-.11 E F1
(structure must be one of the e)3.666 E -.165(ve)-.275 G
(nts de\214ned by the input e).165 E(xtension, so)-.165 E
(that the X serv)72 658.3 Q(er can correctly byte sw)-.165 E
(ap the contents as necessary)-.11 E 5.5(.T)-.715 G
(he contents of the e)-5.5 E -.165(ve)-.275 G(nt are).165 E
(otherwise unaltered and uncheck)72 671.3 Q(ed by the X serv)-.11 E
(er e)-.165 E(xcept to force send_e)-.165 E -.165(ve)-.275 G(nt to).165
E F0 -.814(Tr)3.666 G(ue).814 E F1(in the for)3.666 E(-)-.22 E -.11(wa)
72 684.3 S(rded e).11 E -.165(ve)-.275 G
(nt and to set the sequence number in the e).165 E -.165(ve)-.275 G
(nt correctly).165 E(.)-.715 E F0(XSendExtensionEv)72.916 701.2 Q(ent)
-.11 E F1(returns zero if the con)3.666 E -.165(ve)-.44 G
(rsion-to-wire protocol f).165 E(ailed; otherwise, it)-.11 E
(returns nonzero.)72 714.2 Q F0(52)282.5 769 Q 0 Cg EP
%%Page: 53 55
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF 2.75(XI)72 49 S(nput Extension Library)-2.75 E
(X11, Release 6.4)229.413 E(XSendExtensionEv)72.916 85 Q(ent)-.11 E/F1
11/Times-Roman@0 SF(can generate)3.666 E F0(BadClass)3.666 E F1(,).916 E
F0(BadDe)3.666 E(vice)-.165 E F1(,).916 E F0(BadV)3.666 E(alue)-1.012 E
F1 2.75(,a).916 G(nd)-2.75 E F0(BadW)3.666 E(indo)-.198 E(w)-.11 E F1
(errors.)72 98 Q F0 2.75(2.3.12. Getting)72 124 R(Motion History)2.75 E
.44 LW 36 145.65 36 156.65 DL 36 143.65 36 154.65 DL 41.5 141.9 36 141.9
DL 43.5 141.9 38 141.9 DL 49 141.9 43.5 141.9 DL F1(XDe)72 157.8 Q
(viceT)-.275 E(imeCoord * XGetDe)-.385 E(viceMotionEv)-.275 E(ents\()
-.165 E/F2 11/Times-Italic@0 SF(display)A F1(,).916 E F2(de)2.75 E(vice)
-.165 E F1(,).916 E F2(start)2.75 E F1(,).916 E F2(stop)2.75 E F1(,).916
E F2(ne)2.75 E(vents_r)-.165 E(eturn)-.407 E F1(,).916 E F2(mode_r)2.75
E(eturn)-.407 E F1(,).916 E F2(axis_count_r)129.75 170.8 Q(eturn)-.407 E
F1(\);).916 E(Display *)85.75 183.8 Q F2(display)A F1(;).916 E(XDe)85.75
196.8 Q(vice *)-.275 E F2(de)A(vice)-.165 E F1(;).916 E -.385(Ti)85.75
209.8 S(me).385 E F2(start)2.75 E F1(,).916 E F2(stop)2.75 E F1(;).916 E
(int *)85.75 222.8 Q F2(ne)A(vents_r)-.165 E(eturn)-.407 E F1(;).916 E
(int *)85.75 235.8 Q F2(mode_r)A(eturn)-.407 E F1(;).916 E(int *)85.75
248.8 Q F2(axis_count_r)A(eturn)-.407 E F1(;).916 E F2(display)72 269.6
Q F1(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)
-.605 E F2(de)72 286.5 Q(vice)-.165 E F1(Speci\214es the desired de)
44.071 E(vice.)-.275 E F2(start)72 303.4 Q F1
(Speci\214es the start time.)51.826 E F2(stop)72 320.3 Q F1
(Speci\214es the stop time.)53.663 E F2(ne)72 337.2 Q(vents_r)-.165 E
(eturn)-.407 E F1(Returns the number of positions in the motion b)6.583
E(uf)-.22 E(fer returned for this request.)-.275 E F2(mode_r)72 354.1 Q
(eturn)-.407 E F1(Returns the mode of the ne)15.581 E -.165(ve)-.275 G
(nts information.).165 E(The mode will be one of the fol-)5.5 E(lo)144
367.1 Q(wing:)-.275 E F0(Absolute)3.666 E F1(or)3.666 E F0(Relati)3.666
E -.11(ve)-.11 G F1(.)1.026 E F2(axis_count_r)72 384 Q(eturn)-.407 E F1
(Returns the number of ax)144 397 Q
(es reported in each of the positions returned.)-.165 E 36 392.65 36
403.65 DL 36 390.65 36 401.65 DL 41.5 401.9 36 401.9 DL 43.5 401.9 38
401.9 DL 49 401.9 43.5 401.9 DL F0(XGetDe)72.916 426.9 Q(viceMotionEv)
-.165 E(ents)-.11 E F1(returns all positions in the de)3.666 E(vice')
-.275 E 2.75(sm)-.605 G(otion history b)-2.75 E(uf)-.22 E(fer that f)
-.275 E(all)-.11 E(between the speci\214ed start and stop times inclusi)
72 439.9 Q -.165(ve)-.275 G 5.5(.I).165 G 2.75(ft)-5.5 G
(he start time is in the future or is later)-2.75 E
(than the stop time, no positions are returned.)72 452.9 Q
(The return type for this function is an)72 469.8 Q F0(XDe)3.666 E
(viceT)-.165 E(imeCoord)-.198 E F1
(structure, which is de\214ned as follo)3.666 E(ws:)-.275 E 36 491.45 36
502.45 DL 36 489.45 36 500.45 DL 41.5 487.7 36 487.7 DL 43.5 487.7 38
487.7 DL 49 487.7 43.5 487.7 DL(typedef struct {)72 506.2 Q -.385(Ti)108
519.2 S(me time;).385 E(unsigned int *data;)108 532.2 Q 2.75(}X)72 545.2
S(De)-2.75 E(viceT)-.275 E(imeCoord;)-.385 E 36 547.35 36 558.35 DL 36
545.35 36 556.35 DL 41.5 556.6 36 556.6 DL 43.5 556.6 38 556.6 DL 49
556.6 43.5 556.6 DL
(The data member is a pointer to an array of data items.)72 581.6 Q
(Each item is of type int, and there is one)5.5 E
(data item per axis of motion reported by the de)72 594.6 Q 2.75
(vice. The)-.275 F(number of ax)2.75 E(es reported by the de)-.165 E
(vice is)-.275 E(returned in the axis_count v)72 607.6 Q(ariable.)-.275
E(The v)72 624.5 Q(alue of the data items depends on the mode of the de)
-.275 E 2.75(vice. The)-.275 F(mode is returned in the mode)2.75 E -.275
(va)72 637.5 S 2.75(riable. If).275 F(the mode is)2.75 E F0(Absolute)
3.666 E F1 2.75(,t).916 G(he data items are the ra)-2.75 E 2.75(wv)-.165
G(alues generated by the de)-3.025 E(vice.)-.275 E
(These may be scaled by the client program using the maximum v)72 650.5
Q(alues that the de)-.275 E(vice can gener)-.275 E(-)-.22 E
(ate for each axis of motion that it reports.)72 663.5 Q(The maximum v)
5.5 E(alue for each axis is reported in the)-.275 E(max_v)72 676.5 Q
(al member of the)-.275 E F0(XAxisInf)3.666 E(o)-.275 E F1
(structure, which is part of the information returned by the)3.666 E F0
(XListInputDe)72.916 689.5 Q(vices)-.165 E F1(request.)3.666 E
(If the mode is)72 706.4 Q F0(Relati)3.666 E -.11(ve)-.11 G F1 2.75(,t)
1.026 G(he data items are the relati)-2.75 E .33 -.165(ve v)-.275 H
(alues generated by the de)-.11 E 2.75(vice. The)-.275 F(client)2.75 E
(program must choose an initial position for the de)72 719.4 Q
(vice and maintain a current position by accumu-)-.275 E
(lating these relati)72 732.4 Q .33 -.165(ve v)-.275 H(alues.)-.11 E F0
(53)282.5 769 Q 0 Cg EP
%%Page: 54 56
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF 2.75(XI)72 49 S(nput Extension Library)-2.75 E
(X11, Release 6.4)229.413 E/F1 11/Times-Roman@0 SF(Consecuti)72 85 Q .33
-.165(ve c)-.275 H(alls to).165 E F0(XGetDe)3.666 E(viceMotionEv)-.165 E
(ents)-.11 E F1(can return data of dif)3.666 E
(ferent modes, that is, if)-.275 E
(some client program has changed the mode of the de)72 98 Q(vice via an)
-.275 E F0(XSetDe)3.666 E(viceMode)-.165 E F1(request.)3.666 E F0
(XGetDe)72.916 114.9 Q(viceMotionEv)-.165 E(ents)-.11 E F1(can generate)
3.666 E F0(BadDe)3.666 E(vice)-.165 E F1(and)3.666 E F0(BadMatch)3.666 E
F1(errors.)3.666 E 1.76 -.88(To f)72 144.8 T(ree the data returned by)
.88 E F0(XGetDe)3.666 E(viceMotionEv)-.165 E(ents)-.11 E F1 2.75(,u).916
G(se)-2.75 E F0(XFr)3.666 E(eeDe)-.198 E(viceMotionEv)-.165 E(ents)-.11
E F1(.).916 E .44 LW 36 166.45 36 177.45 DL 36 164.45 36 175.45 DL 41.5
162.7 36 162.7 DL 43.5 162.7 38 162.7 DL 49 162.7 43.5 162.7 DL -.22(vo)
72 178.6 S(id XFreeDe).22 E(viceMotionEv)-.275 E(ents\()-.165 E/F2 11
/Times-Italic@0 SF -.165(ev)C(ents).165 E F1(\)).916 E(XDe)88.5 191.6 Q
(viceT)-.275 E(imeCoord *)-.385 E F2 -.165(ev)C(ents).165 E F1(;).916 E
F2 -.165(ev)72 212.4 S(ents).165 E F1(Speci\214es the pointer to the)
44.676 E F0(XDe)3.666 E(viceT)-.165 E(imeCoord)-.198 E F1
(array returned by a pre)3.666 E(vious)-.275 E(call to)144 225.4 Q F0
(XGetDe)3.666 E(viceMotionEv)-.165 E(ents)-.11 E F1(.).916 E 36 221.05
36 232.05 DL 36 219.05 36 230.05 DL 41.5 230.3 36 230.3 DL 43.5 230.3 38
230.3 DL 49 230.3 43.5 230.3 DL F0(XFr)72.916 255.3 Q(eeDe)-.198 E
(viceMotionEv)-.165 E(ents)-.11 E F1
(frees the speci\214ed array of motion information.)3.666 E F0(54)282.5
769 Q 0 Cg EP
%%Page: 55 57
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF 2.75(XI)72 49 S(nput Extension Library)-2.75 E
(X11, Release 6.4)229.413 E/F1 12/Times-Bold@0 SF -.3(Ap)257.31 85 S
(pendix A).3 E/F2 11/Times-Roman@0 SF(The follo)72 101.9 Q
(wing information is contained in the)-.275 E F0
(<X11/extensions/XInput.h>)2.75 E F2(and)2.75 E F0(<X11/exten-)2.75 E
(sions/XI.h>)72 114.9 Q F2(header \214les:)2.75 E F0(55)282.5 769 Q 0 Cg
EP
%%Page: 56 58
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF 2.75(XI)72 49 S(nput Extension Library)-2.75 E
(X11, Release 6.4)229.413 E/F1 8/Courier@0 SF -.356
(/************************************************************)71.822 85
S -.356(Copyright 1989, 1998)71.822 111 S -.356(The Open Group)8.888 G
-.356(Permission to use, copy, modify, distribute, and sell this softwa\
re and its)71.822 137 S -.356(documentation for any purpose is hereby g\
ranted without fee, provided that)71.822 150 S -.356
(the above copyright notice appear in all copies and that both that)
71.822 163 S -.356
(copyright notice and this permission notice appear in supporting)71.822
176 S -.356(documentation.)71.822 189 S -.356(The above copyright notic\
e and this permission notice shall be included in)71.822 215 S -.356
(all copies or substantial portions of the Software.)71.822 228 S -.356
(THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRES\
S OR)71.822 254 S -.356(IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRA\
NTIES OF MERCHANTABILITY,)71.822 267 S -.356
(FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.)71.822 280 S
-.356(IN NO EVENT SHALL THE)8.888 G -.356(OPEN GROUP BE LIABLE FOR ANY \
CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN)71.822 293 S -.356
(AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN)
71.822 306 S -.356(CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEA\
LINGS IN THE SOFTWARE.)71.822 319 S -.356(Except as contained in this n\
otice, the name of The Open Group shall not be)71.822 345 S -.356(used \
in advertising or otherwise to promote the sale, use or other dealings)
71.822 358 S -.356(in this Software without prior written authorization\
 from The Open Group.)71.822 371 S -.356
(Copyright 1989 by Hewlett-Packard Company, Palo Alto, California.)
71.822 397 S -.356(All Rights Reserved)154.322 423 S -.356
(Permission to use, copy, modify, and distribute this software and its)
71.822 449 S -.356
(documentation for any purpose and without fee is hereby granted,)71.822
462 S -.356
(provided that the above copyright notice appear in all copies and that)
71.822 475 S -.356
(both that copyright notice and this permission notice appear in)71.822
488 S -.356
(supporting documentation, and that the name of Hewlett-Packard not be)
71.822 501 S -.356
(used in advertising or publicity pertaining to distribution of the)
71.822 514 S -.356(software without specific, written prior permission.)
71.822 527 S -.356(HEWLETT-PACKARD DISCLAIMS ALL WARRANTIES WITH REGARD\
 TO THIS SOFTWARE, INCLUDING)71.822 553 S -.356(ALL IMPLIED WARRANTIES \
OF MERCHANTABILITY AND FITNESS, IN NO EVENT SHALL)71.822 566 S -.356(HE\
WLETT-PACKARD BE LIABLE FOR ANY SPECIAL, INDIRECT OR CONSEQUENTIAL DAMA\
GES OR)71.822 579 S -.356
(ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS,)
71.822 592 S -.356
(WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION,)
71.822 605 S -.356
(ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS)
71.822 618 S -.356(SOFTWARE.)71.822 631 S -.356
(********************************************************/)71.822 657 S
-.356(/* $XFree86: xc/doc/specs/Xi/library.ms,v 1.3 2006/01/09 14:56:34\
 dawes Exp $ */)71.822 670 S -.356
(/* Definitions used by the library and client */)71.822 696 S -.356
(#ifndef _XINPUT_H_)71.822 722 S F0(56)282.5 769 Q 0 Cg EP
%%Page: 57 59
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF 2.75(XI)72 49 S(nput Extension Library)-2.75 E
(X11, Release 6.4)229.413 E/F1 8/Courier@0 SF -.356(#define _XINPUT_H_)
71.822 85 S -.356(#include <X11/Xlib.h>)71.822 111 S -.356
(#include <X11/extensions/XI.h>)71.822 124 S -.356
(#define _deviceKeyPress)71.822 150 S(0)35.288 E -.356
(#define _deviceKeyRelease)71.822 163 S(1)26.4 E -.356
(#define _deviceButtonPress)71.822 189 S(0)21.956 E -.356
(#define _deviceButtonRelease)71.822 202 S(1)13.068 E -.356
(#define _deviceMotionNotify)71.822 228 S(0)17.512 E -.356
(#define _deviceFocusIn)71.822 254 S(0)39.732 E -.356
(#define _deviceFocusOut)71.822 267 S(1)35.288 E -.356
(#define _proximityIn)71.822 293 S(0)48.62 E -.356
(#define _proximityOut)71.822 306 S(1)44.176 E -.356
(#define _deviceStateNotify)71.822 332 S(0)21.956 E -.356
(#define _deviceMappingNotify)71.822 345 S(1)13.068 E -.356
(#define _changeDeviceNotify)71.822 358 S(2)17.512 E -.356
(#define FindTypeAndClass\(d,type,_class,classid,offset\))71.822 384 S
4.088({i)22.22 G -.356(nt _i; XInputClassInfo *_ip;)-4.444 G -.356
(type = 0; _class = 0;)22.22 G -.356
(for \(_i=0, _ip= \(\(XDevice *\) d\)->classes;)22.22 G -.356
(_i< \(\(XDevice *\) d\)->num_classes;)27.016 G -.356(_i++, _ip++\))
18.348 G -.356(if \(_ip->input_class == classid\))24.728 G -.356
({type =)40.568 G -.356(_ip->event_type_base + offset;)8.888 G -.356
(_class =)51.128 G -.356(\(\(XDevice *\) d\)->device_id << 8 | type;}})
8.888 G -.356(#define DeviceKeyPress\(d,type,_class\))71.822 410 S -.356
(FindTypeAndClass\(d, type, _class, KeyClass, _deviceKeyPress\))22.22 G
-.356(#define DeviceKeyRelease\(d,type,_class\))71.822 436 S -.356
(FindTypeAndClass\(d, type, _class, KeyClass, _deviceKeyRelease\))22.22
G -.356(#define DeviceButtonPress\(d,type,_class\))71.822 462 S -.356
(FindTypeAndClass\(d, type, _class, ButtonClass, _deviceButtonPress\))
22.22 G -.356(#define DeviceButtonRelease\(d,type,_class\))71.822 488 S
-.356
(FindTypeAndClass\(d, type, _class, ButtonClass, _deviceButtonRelease\))
22.22 G -.356(#define DeviceMotionNotify\(d,type,_class\))71.822 514 S
-.356(FindTypeAndClass\(d, type, _class, ValuatorClass, _deviceMotionNo\
tify\))22.22 G -.356(#define DeviceFocusIn\(d,type,_class\))71.822 540 S
-.356(FindTypeAndClass\(d, type, _class, FocusClass, _deviceFocusIn\))
22.22 G -.356(#define DeviceFocusOut\(d,type,_class\))71.822 566 S -.356
(FindTypeAndClass\(d, type, _class, FocusClass, _deviceFocusOut\))22.22
G -.356(#define ProximityIn\(d,type,_class\))71.822 592 S -.356
(FindTypeAndClass\(d, type, _class, ProximityClass, _proximityIn\))22.22
G -.356(#define ProximityOut\(d,type,_class\))71.822 618 S -.356
(FindTypeAndClass\(d, type, _class, ProximityClass, _proximityOut\))
22.22 G -.356(#define DeviceStateNotify\(d,type,_class\))71.822 644 S
-.356
(FindTypeAndClass\(d, type, _class, OtherClass, _deviceStateNotify\))
22.22 G -.356(#define DeviceMappingNotify\(d,type,_class\))71.822 670 S
-.356
(FindTypeAndClass\(d, type, _class, OtherClass, _deviceMappingNotify\))
22.22 G -.356(#define ChangeDeviceNotify\(d,type,_class\))71.822 696 S
-.356
(FindTypeAndClass\(d, type, _class, OtherClass, _changeDeviceNotify\))
22.22 G -.356(#define DevicePointerMotionHint\(d,type,_class\))71.822
722 S 4.088({_)22.22 G -.356(class =)-4.444 G -.356
(\(\(XDevice *\) d\)->device_id << 8 | _devicePointerMotionHint;})8.888
G F0(57)282.5 769 Q 0 Cg EP
%%Page: 58 60
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF 2.75(XI)72 49 S(nput Extension Library)-2.75 E
(X11, Release 6.4)229.413 E/F1 8/Courier@0 SF -.356
(#define DeviceButton1Motion\(d,type,_class\))71.822 85 S 4.088({_)22.22
G -.356(class =)-4.444 G -.356
(\(\(XDevice *\) d\)->device_id << 8 | _deviceButton1Motion;})8.888 G
-.356(#define DeviceButton2Motion\(d,type,_class\))71.822 111 S 4.088
({_)22.22 G -.356(class =)-4.444 G -.356
(\(\(XDevice *\) d\)->device_id << 8 | _deviceButton2Motion;})8.888 G
-.356(#define DeviceButton3Motion\(d,type,_class\))71.822 137 S 4.088
({_)22.22 G -.356(class =)-4.444 G -.356
(\(\(XDevice *\) d\)->device_id << 8 | _deviceButton3Motion;})8.888 G
-.356(#define DeviceButton4Motion\(d,type, _class\))71.822 163 S 4.088
({_)22.22 G -.356(class =)-4.444 G -.356
(\(\(XDevice *\) d\)->device_id << 8 | _deviceButton4Motion;})8.888 G
-.356(#define DeviceButton5Motion\(d,type,_class\))71.822 189 S 4.088
({_)22.22 G -.356(class =)-4.444 G -.356
(\(\(XDevice *\) d\)->device_id << 8 | _deviceButton5Motion;})8.888 G
-.356(#define DeviceButtonMotion\(d,type, _class\))71.822 215 S 4.088
({_)22.22 G -.356(class =)-4.444 G -.356
(\(\(XDevice *\) d\)->device_id << 8 | _deviceButtonMotion;})8.888 G
-.356(#define DeviceOwnerGrabButton\(d,type,_class\))71.822 241 S 4.088
({_)22.22 G -.356(class =)-4.444 G -.356
(\(\(XDevice *\) d\)->device_id << 8 | _deviceOwnerGrabButton;})8.888 G
-.356(#define DeviceButtonPressGrab\(d,type,_class\))71.822 267 S 4.088
({_)22.22 G -.356(class =)-4.444 G -.356
(\(\(XDevice *\) d\)->device_id << 8 | _deviceButtonGrab;})8.888 G -.356
(#define NoExtensionEvent\(d,type,_class\))71.822 293 S 4.088({_)22.22 G
-.356(class =)-4.444 G -.356
(\(\(XDevice *\) d\)->device_id << 8 | _noExtensionEvent;})8.888 G -.356
(#define BadDevice\(dpy,error\) _xibaddevice\(dpy, &error\))71.822 319 S
-.356(#define BadClass\(dpy,error\) _xibadclass\(dpy, &error\))71.822
345 S -.356(#define BadEvent\(dpy,error\) _xibadevent\(dpy, &error\))
71.822 371 S -.356
(#define BadMode\(dpy,error\) _xibadmode\(dpy, &error\))71.822 397 S
-.356(#define DeviceBusy\(dpy,error\) _xidevicebusy\(dpy, &error\))
71.822 423 S -.356
(/***************************************************************)71.822
449 S(*)76.266 462 Q 4.088(*D)76.266 475 S -.356(eviceKey events.)-4.444
G -.356(These events are sent by input devices that)8.888 G 4.088(*s)
76.266 488 S -.356(upport input class Keys.)-4.444 G 4.088(*T)76.266 501
S -.356(he location of the X pointer is reported in the coordinate)
-4.444 G 4.088(*f)76.266 514 S -.356
(ields of the x,y and x_root,y_root fields.)-4.444 G(*)76.266 527 Q
-.356(*/)76.266 540 S -.356(typedef struct)71.822 566 S({)89.598 579 Q
48.884 -.356(int type;)89.598 592 T -.356(/* of event */)39.996 G -.356
(unsigned long)89.598 605 S 26.664 -.356(serial; /*)8.888 H 4.088(#o)
4.444 G 4.088(fl)-4.444 G -.356(ast request processed */)-4.444 G 44.44
-.356(Bool send_event;)89.598 618 T -.356
(/* true if from SendEvent request */)13.332 G 31.108 -.356
(Display *display;)89.598 631 T -.356
(/* Display the event was read from */)22.22 G 35.552 -.356
(Window window;)89.598 644 T -.356
(/* "event" window reported relative to */)31.108 G 48.884 -.356
(XID deviceid;)89.598 657 T 35.552 -.356(Window root; /*)89.598 670 T
-.356(root window event occured on */)4.444 G 35.552 -.356
(Window subwindow;)89.598 683 T -.356(/* child window */)17.776 G 44.44
-.356(Time time;)89.598 696 T -.356(/* milliseconds */)39.996 G 48.884
-.356(int x,)89.598 709 T 35.552 -.356(y; /*)4.444 H -.356
(x, y coordinates in event window */)4.444 G 48.884 -.356(int x_root;)
89.598 722 T -.356(/* coordinates relative to root */)31.108 G F0(58)
282.5 769 Q 0 Cg EP
%%Page: 59 61
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF 2.75(XI)72 49 S(nput Extension Library)-2.75 E
(X11, Release 6.4)229.413 E/F1 8/Courier@0 SF 48.884 -.356(int y_root;)
89.598 85 T -.356(/* coordinates relative to root */)31.108 G -.356
(unsigned int)89.598 98 S 31.108 -.356(state; /*)13.332 H -.356
(key or button mask */)4.444 G -.356(unsigned int)89.598 111 S 22.22
-.356(keycode; /*)13.332 H -.356(detail */)4.444 G 44.44 -.356
(Bool same_screen;)89.598 124 T -.356(/* same screen flag */)8.888 G
-.356(unsigned int)89.598 137 S -.356
(device_state; /* device key or button mask */)13.332 G -.356
(unsigned char)89.598 150 S -.356(axes_count;)8.888 G -.356
(unsigned char)89.598 163 S -.356(first_axis;)8.888 G 48.884 -.356
(int axis_data[6];)89.598 176 T 4.088(}X)89.598 189 S -.356
(DeviceKeyEvent;)-4.444 G -.356
(typedef XDeviceKeyEvent XDeviceKeyPressedEvent;)71.822 215 S -.356
(typedef XDeviceKeyEvent XDeviceKeyReleasedEvent;)71.822 228 S -.356
(/*******************************************************************)
71.822 254 S(*)76.266 267 Q 4.088(*D)76.266 280 S -.356
(eviceButton events.)-4.444 G -.356
(These events are sent by extension devices)8.888 G 4.088(*t)76.266 293
S -.356(hat support input class Buttons.)-4.444 G(*)76.266 306 Q -.356
(*/)76.266 319 S -.356(typedef struct {)71.822 345 S 44.44 -.356
(int type;)89.598 358 T -.356(/* of event */)39.996 G -.356
(unsigned long serial;)89.598 371 S -.356
(/* # of last request processed by server */)31.108 G 39.996 -.356
(Bool send_event;)89.598 384 T -.356
(/* true if from a SendEvent request */)13.332 G 26.664 -.356
(Display *display;)89.598 397 T -.356
(/* Display the event was read from */)22.22 G 31.108 -.356
(Window window;)89.598 410 T -.356
(/* "event" window reported relative to */)31.108 G 44.44 -.356
(XID deviceid;)89.598 423 T 31.108 -.356(Window root;)89.598 436 T -.356
(/* root window that the event occured on */)39.996 G 31.108 -.356
(Window subwindow;)89.598 449 T -.356(/* child window */)17.776 G 39.996
-.356(Time time;)89.598 462 T -.356(/* milliseconds */)39.996 G 44.44
-.356(int x,)89.598 475 T 35.552 -.356(y; /*)4.444 H -.356
(x, y coordinates in event window */)4.444 G 44.44 -.356(int x_root;)
89.598 488 T -.356(/* coordinates relative to root */)31.108 G 44.44
-.356(int y_root;)89.598 501 T -.356(/* coordinates relative to root */)
31.108 G -.356(unsigned int)89.598 514 S 31.108 -.356(state; /*)8.888 H
-.356(key or button mask */)4.444 G -.356(unsigned int)89.598 527 S
26.664 -.356(button; /*)8.888 H -.356(detail */)4.444 G 39.996 -.356
(Bool same_screen;)89.598 540 T -.356(/* same screen flag */)8.888 G
-.356(unsigned int)89.598 553 S -.356
(device_state; /* device key or button mask */)8.888 G -.356
(unsigned char axes_count;)89.598 566 S -.356(unsigned char first_axis;)
89.598 579 S 44.44 -.356(int axis_data[6];)89.598 592 T 4.088(}X)89.598
605 S -.356(DeviceButtonEvent;)-4.444 G -.356
(typedef XDeviceButtonEvent XDeviceButtonPressedEvent;)71.822 631 S
-.356(typedef XDeviceButtonEvent XDeviceButtonReleasedEvent;)71.822 644
S -.356
(/*******************************************************************)
71.822 670 S(*)76.266 683 Q 4.088(*D)76.266 696 S -.356
(eviceMotionNotify event.)-4.444 G -.356
(These events are sent by extension devices)8.888 G 4.088(*t)76.266 709
S -.356(hat support input class Valuators.)-4.444 G(*)76.266 722 Q F0
(59)282.5 769 Q 0 Cg EP
%%Page: 60 62
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF 2.75(XI)72 49 S(nput Extension Library)-2.75 E
(X11, Release 6.4)229.413 E/F1 8/Courier@0 SF -.356(*/)76.266 85 S -.356
(typedef struct)71.822 111 S({)89.598 124 Q 44.44 -.356(int type;)89.598
137 T -.356(/* of event */)35.552 G -.356(unsigned long serial;)89.598
150 S -.356(/* # of last request processed by server */)26.664 G 39.996
-.356(Bool send_event;)89.598 163 T -.356
(/* true if from a SendEvent request */)8.888 G 26.664 -.356
(Display *display;)89.598 176 T -.356
(/* Display the event was read from */)17.776 G 31.108 -.356
(Window window;)89.598 189 T -.356
(/* "event" window reported relative to */)26.664 G 44.44 -.356
(XID deviceid;)89.598 202 T 31.108 -.356(Window root; /*)89.598 215 T
-.356(root window that the event occured on */)4.444 G 31.108 -.356
(Window subwindow;)89.598 228 T -.356(/* child window */)13.332 G 39.996
-.356(Time time;)89.598 241 T -.356(/* milliseconds */)35.552 G 44.44
-.356(int x,)89.598 254 T 31.108 -.356(y; /*)4.444 H -.356
(x, y coordinates in event window */)4.444 G 44.44 -.356(int x_root;)
89.598 267 T -.356(/* coordinates relative to root */)26.664 G 44.44
-.356(int y_root;)89.598 280 T -.356(/* coordinates relative to root */)
26.664 G -.356(unsigned int)89.598 293 S 26.664 -.356(state; /*)8.888 H
-.356(key or button mask */)4.444 G 39.996 -.356(char is_hint;)89.598
306 T -.356(/* detail */)22.22 G 39.996 -.356(Bool same_screen;)89.598
319 T -.356(/* same screen flag */)4.444 G -.356(unsigned int)89.598 332
S -.356(device_state; /* device key or button mask */)8.888 G -.356
(unsigned char axes_count;)89.598 345 S -.356(unsigned char first_axis;)
89.598 358 S 44.44 -.356(int axis_data[6];)89.598 371 T 4.088(}X)89.598
384 S -.356(DeviceMotionEvent;)-4.444 G -.356
(/*******************************************************************)
71.822 410 S(*)76.266 423 Q 4.088(*D)76.266 436 S -.356
(eviceFocusChange events.)-4.444 G -.356
(These events are sent when the focus)8.888 G 4.088(*o)76.266 449 S
4.088(fa)-4.444 G 4.088(ne)-4.444 G -.356
(xtension device that can be focused is changed.)-4.444 G(*)76.266 462 Q
-.356(*/)76.266 475 S -.356(typedef struct)71.822 501 S({)89.598 514 Q
44.44 -.356(int type;)89.598 527 T -.356(/* of event */)31.108 G -.356
(unsigned long serial;)89.598 540 S -.356
(/* # of last request processed by server */)22.22 G 39.996 -.356
(Bool send_event;)89.598 553 T -.356
(/* true if from a SendEvent request */)4.444 G 26.664 -.356
(Display *display;)89.598 566 T -.356
(/* Display the event was read from */)13.332 G 31.108 -.356
(Window window;)89.598 579 T -.356
(/* "event" window reported relative to */)22.22 G 44.44 -.356
(XID deviceid;)89.598 592 T 44.44 -.356(int mode;)89.598 605 T -.356
(/* NotifyNormal, NotifyGrab, NotifyUngrab */)31.108 G 44.44 -.356
(int detail;)89.598 618 T -.356(/*)99.322 631 S 4.088(*N)103.766 644 S
-.356(otifyAncestor, NotifyVirtual, NotifyInferior,)-4.444 G 4.088(*N)
103.766 657 S -.356
(otifyNonLinear,NotifyNonLinearVirtual, NotifyPointer,)-4.444 G 4.088
(*N)103.766 670 S -.356(otifyPointerRoot, NotifyDetailNone)-4.444 G
-.356(*/)103.766 683 S 66.66 -.356(Time time;)89.598 696 T 4.088(}X)
89.598 709 S -.356(DeviceFocusChangeEvent;)-4.444 G F0(60)282.5 769 Q 0
Cg EP
%%Page: 61 63
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF 2.75(XI)72 49 S(nput Extension Library)-2.75 E
(X11, Release 6.4)229.413 E/F1 8/Courier@0 SF -.356
(typedef XDeviceFocusChangeEvent XDeviceFocusInEvent;)71.822 85 S -.356
(typedef XDeviceFocusChangeEvent XDeviceFocusOutEvent;)71.822 98 S -.356
(/*******************************************************************)
71.822 124 S(*)76.266 137 Q 4.088(*P)76.266 150 S -.356
(roximityNotify events.)-4.444 G -.356
(These events are sent by those absolute)8.888 G 4.088(*p)76.266 163 S
-.356(ositioning devices that are capable of generating proximity infor\
mation.)-4.444 G(*)76.266 176 Q -.356(*/)76.266 189 S -.356
(typedef struct)71.822 215 S({)89.598 228 Q 53.328 -.356(int type;)
89.598 241 T -.356(/* ProximityIn or ProximityOut */)26.664 G -.356
(unsigned long)89.598 254 S 13.332 -.356(serial; /*)13.332 H 4.088(#o)
4.444 G 4.088(fl)-4.444 G -.356(ast request processed by server */)
-4.444 G 48.884 -.356(Bool send_event;)89.598 267 T -.356
(/* true if this came from a SendEvent request */)4.444 G 35.552 -.356
(Display *display;)89.598 280 T -.356
(/* Display the event was read from */)8.888 G 39.996 -.356
(Window window;)89.598 293 T 72.776 -.356(XID deviceid;)89.598 306 T
39.996 -.356(Window root;)89.598 319 T 39.996 -.356(Window subwindow;)
89.598 332 T 48.884 -.356(Time time;)89.598 345 T 53.328 -.356(int x,)
89.598 358 T -.356(y;)4.444 G 53.328 -.356(int x_root,)89.598 371 T
-.356(y_root;)4.444 G -.356(unsigned int)89.598 384 S -.356(state;)
17.776 G 48.884 -.356(Bool same_screen;)89.598 397 T -.356(unsigned int)
89.598 410 S -.356(device_state; /* device key or button mask */)17.776
G -.356(unsigned char)89.598 423 S -.356(axes_count;)13.332 G -.356
(unsigned char)89.598 436 S -.356(first_axis;)13.332 G 53.328 -.356
(int axis_data[6];)89.598 449 T 4.088(}X)89.598 462 S -.356
(ProximityNotifyEvent;)-4.444 G -.356
(typedef XProximityNotifyEvent XProximityInEvent;)71.822 475 S -.356
(typedef XProximityNotifyEvent XProximityOutEvent;)71.822 488 S -.356
(/*******************************************************************)
71.822 514 S(*)76.266 527 Q 4.088(*D)76.266 540 S -.356
(eviceStateNotify events are generated on EnterWindow and FocusIn)-4.444
G 4.088(*f)76.266 553 S -.356
(or those clients who have selected DeviceState.)-4.444 G(*)76.266 566 Q
-.356(*/)76.266 579 S -.356(typedef struct)71.822 605 S({)89.598 618 Q
-.356(#if defined\(__cplusplus\) || defined\(c_plusplus\))71.822 631 S
-.356(unsigned char)89.598 644 S -.356(c_class;)6.952 G -.356(#else)
71.822 657 S -.356(unsigned char)89.598 670 S -.356(class;)6.952 G -.356
(#endif)71.822 683 S -.356(unsigned char)89.598 696 S -.356(length;)
6.952 G 4.088(}X)89.598 709 S -.356(InputClass;)-4.444 G F0(61)282.5 769
Q 0 Cg EP
%%Page: 62 64
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF 2.75(XI)72 49 S(nput Extension Library)-2.75 E
(X11, Release 6.4)229.413 E/F1 8/Courier@0 SF -.356(typedef struct {)
71.822 85 S 44.44 -.356(int type;)89.598 98 T -.356
(unsigned long serial;)89.598 111 S -.356
(/* # of last request processed by server */)31.108 G 39.996 -.356
(Bool send_event;)89.598 124 T -.356
(/* true if this came from a SendEvent request */)13.332 G 26.664 -.356
(Display *display;)89.598 137 T -.356
(/* Display the event was read from */)22.22 G 31.108 -.356
(Window window;)89.598 150 T 44.44 -.356(XID deviceid;)89.598 163 T
39.996 -.356(Time time;)89.598 176 T 44.44 -.356(int num_classes;)89.598
189 T 23.892 -.356(char data[64];)89.598 202 T 4.088(}X)71.822 215 S
-.356(DeviceStateNotifyEvent;)-4.444 G -.356(typedef struct {)71.822 241
S -.356(#if defined\(__cplusplus\) || defined\(c_plusplus\))71.822 254 S
-.356(unsigned char)89.598 267 S -.356(c_class;)6.952 G -.356(#else)
71.822 280 S -.356(unsigned char)89.598 293 S -.356(class;)6.952 G -.356
(#endif)71.822 306 S -.356(unsigned char)89.598 319 S -.356(length;)
6.952 G -.356(unsigned char)89.598 332 S -.356(num_valuators;)6.952 G
-.356(unsigned char)89.598 345 S -.356(mode;)6.952 G 74.448 -.356
(int valuators[6];)89.598 358 T 4.088(}X)71.822 371 S -.356
(ValuatorStatus;)-4.444 G -.356(typedef struct {)71.822 397 S -.356
(#if defined\(__cplusplus\) || defined\(c_plusplus\))71.822 410 S -.356
(unsigned char)89.598 423 S -.356(c_class;)6.952 G -.356(#else)71.822
436 S -.356(unsigned char)89.598 449 S -.356(class;)6.952 G -.356
(#endif)71.822 462 S -.356(unsigned char)89.598 475 S -.356(length;)
6.952 G 38.06 -.356(short num_keys;)89.598 488 T 42.504 -.356
(char keys[32];)89.598 501 T 4.088(}X)71.822 514 S -.356(KeyStatus;)
-4.444 G -.356(typedef struct {)71.822 540 S -.356
(#if defined\(__cplusplus\) || defined\(c_plusplus\))71.822 553 S -.356
(unsigned char)89.598 566 S -.356(c_class;)6.952 G -.356(#else)71.822
579 S -.356(unsigned char)89.598 592 S -.356(class;)6.952 G -.356
(#endif)71.822 605 S -.356(unsigned char)89.598 618 S -.356(length;)
6.952 G 38.06 -.356(short num_buttons;)89.598 631 T 42.504 -.356
(char buttons[32];)89.598 644 T 4.088(}X)71.822 657 S -.356
(ButtonStatus;)-4.444 G -.356
(/*******************************************************************)
71.822 683 S(*)76.266 696 Q 4.088(*D)76.266 709 S -.356
(eviceMappingNotify event.)-4.444 G -.356
(This event is sent when the key mapping,)8.888 G 4.088(*m)76.266 722 S
-.356
(odifier mapping, or button mapping of an extension device is changed.)
-4.444 G F0(62)282.5 769 Q 0 Cg EP
%%Page: 63 65
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF 2.75(XI)72 49 S(nput Extension Library)-2.75 E
(X11, Release 6.4)229.413 E/F1 8/Courier@0 SF(*)76.266 85 Q -.356(*/)
76.266 98 S -.356(typedef struct {)71.822 124 S 44.44 -.356(int type;)
89.598 137 T -.356(unsigned long serial;)89.598 150 S -.356
(/* # of last request processed by server */)31.108 G 39.996 -.356
(Bool send_event;)89.598 163 T -.356
(/* true if this came from a SendEvent request */)13.332 G 26.664 -.356
(Display *display;)89.598 176 T -.356
(/* Display the event was read from */)22.22 G 31.108 -.356
(Window window;)89.598 189 T -.356(/* unused */)31.108 G 44.44 -.356
(XID deviceid;)89.598 202 T 39.996 -.356(Time time;)89.598 215 T 44.44
-.356(int request;)89.598 228 T -.356
(/* one of MappingModifier, MappingKeyboard,)26.664 G -.356
(MappingPointer */)231.806 241 S 44.44 -.356(int first_keycode;/*)89.598
254 T -.356(first keycode */)4.444 G 44.44 -.356(int count;)89.598 267 T
-.356(/* defines range of change w. first_keycode*/)35.552 G 4.088(}X)
71.822 280 S -.356(DeviceMappingEvent;)-4.444 G -.356
(/*******************************************************************)
71.822 306 S(*)76.266 319 Q 4.088(*C)76.266 332 S -.356
(hangeDeviceNotify event.)-4.444 G -.356(This event is sent when an)
8.888 G 4.088(*X)76.266 345 S -.356
(ChangeKeyboard or XChangePointer request is made.)-4.444 G(*)76.266 358
Q -.356(*/)76.266 371 S -.356(typedef struct {)71.822 397 S 44.44 -.356
(int type;)89.598 410 T -.356(unsigned long serial;)89.598 423 S -.356
(/* # of last request processed by server */)31.108 G 39.996 -.356
(Bool send_event;)89.598 436 T -.356
(/* true if this came from a SendEvent request */)13.332 G 26.664 -.356
(Display *display;)89.598 449 T -.356
(/* Display the event was read from */)22.22 G 31.108 -.356
(Window window;)89.598 462 T -.356(/* unused */)31.108 G 44.44 -.356
(XID deviceid;)89.598 475 T 39.996 -.356(Time time;)89.598 488 T 44.44
-.356(int request;)89.598 501 T -.356(/* NewPointer or NewKeyboard */)
26.664 G 4.088(}X)71.822 514 S -.356(ChangeDeviceNotifyEvent;)-4.444 G
-.356
(/*******************************************************************)
71.822 540 S(*)76.266 553 Q 4.088(*C)76.266 566 S -.356
(ontrol structures for input devices that support input class)-4.444 G
4.088(*F)76.266 579 S 4.444 -.356(eedback. These)-4.444 H -.356
(are used by the XGetFeedbackControl and)4.444 G 4.088(*X)76.266 592 S
-.356(ChangeFeedbackControl functions.)-4.444 G(*)76.266 605 Q -.356(*/)
76.266 618 S -.356(typedef struct {)71.822 644 S -.356
(#if defined\(__cplusplus\) || defined\(c_plusplus\))71.822 657 S 48.884
-.356(XID c_class;)94.042 670 T -.356(#else)71.822 683 S 48.884 -.356
(XID class;)94.042 696 T -.356(#endif)71.822 709 S 48.884 -.356
(int length;)94.042 722 T F0(63)282.5 769 Q 0 Cg EP
%%Page: 64 66
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF 2.75(XI)72 49 S(nput Extension Library)-2.75 E
(X11, Release 6.4)229.413 E/F1 8/Courier@0 SF 48.884 -.356(XID id;)
94.042 85 T 4.088(}X)71.822 98 S -.356(FeedbackState;)-4.444 G -.356
(typedef struct {)71.822 124 S -.356
(#if defined\(__cplusplus\) || defined\(c_plusplus\))71.822 137 S 17.776
-.356(XID c_class;)89.598 150 T -.356(#else)71.822 163 S 17.776 -.356
(XID class;)89.598 176 T -.356(#endif)71.822 189 S 17.776 -.356
(int length;)89.598 202 T 17.776 -.356(XID id;)89.598 215 T 17.776 -.356
(int click;)89.598 228 T 17.776 -.356(int percent;)89.598 241 T 17.776
-.356(int pitch;)89.598 254 T 17.776 -.356(int duration;)89.598 267 T
17.776 -.356(int led_mask;)89.598 280 T 17.776 -.356
(int global_auto_repeat;)89.598 293 T 13.332 -.356
(char auto_repeats[32];)89.598 306 T 4.088(}X)71.822 319 S -.356
(KbdFeedbackState;)-4.444 G -.356(typedef struct {)71.822 345 S -.356
(#if defined\(__cplusplus\) || defined\(c_plusplus\))71.822 358 S 17.776
-.356(XID c_class;)89.598 371 T -.356(#else)71.822 384 S 17.776 -.356
(XID class;)89.598 397 T -.356(#endif)71.822 410 S 17.776 -.356
(int length;)89.598 423 T 17.776 -.356(XID id;)89.598 436 T 17.776 -.356
(int accelNum;)89.598 449 T 17.776 -.356(int accelDenom;)89.598 462 T
17.776 -.356(int threshold;)89.598 475 T 4.088(}X)71.822 488 S -.356
(PtrFeedbackState;)-4.444 G -.356(typedef struct {)71.822 514 S -.356
(#if defined\(__cplusplus\) || defined\(c_plusplus\))71.822 527 S 17.776
-.356(XID c_class;)89.598 540 T -.356(#else)71.822 553 S 17.776 -.356
(XID class;)89.598 566 T -.356(#endif)71.822 579 S 17.776 -.356
(int length;)89.598 592 T 17.776 -.356(XID id;)89.598 605 T 17.776 -.356
(int resolution;)89.598 618 T 17.776 -.356(int minVal;)89.598 631 T
17.776 -.356(int maxVal;)89.598 644 T 4.088(}X)71.822 657 S -.356
(IntegerFeedbackState;)-4.444 G -.356(typedef struct {)71.822 683 S
-.356(#if defined\(__cplusplus\) || defined\(c_plusplus\))71.822 696 S
17.776 -.356(XID c_class;)89.598 709 T -.356(#else)71.822 722 S F0(64)
282.5 769 Q 0 Cg EP
%%Page: 65 67
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF 2.75(XI)72 49 S(nput Extension Library)-2.75 E
(X11, Release 6.4)229.413 E/F1 8/Courier@0 SF 17.776 -.356(XID class;)
89.598 85 T -.356(#endif)71.822 98 S 17.776 -.356(int length;)89.598 111
T 17.776 -.356(XID id;)89.598 124 T 17.776 -.356(int max_symbols;)89.598
137 T 17.776 -.356(int num_syms_supported;)89.598 150 T 4.444 -.356
(KeySym *syms_supported;)89.598 163 T 4.088(}X)71.822 176 S -.356
(StringFeedbackState;)-4.444 G -.356(typedef struct {)71.822 202 S -.356
(#if defined\(__cplusplus\) || defined\(c_plusplus\))71.822 215 S 17.776
-.356(XID c_class;)89.598 228 T -.356(#else)71.822 241 S 17.776 -.356
(XID class;)89.598 254 T -.356(#endif)71.822 267 S 17.776 -.356
(int length;)89.598 280 T 17.776 -.356(XID id;)89.598 293 T 17.776 -.356
(int percent;)89.598 306 T 17.776 -.356(int pitch;)89.598 319 T 17.776
-.356(int duration;)89.598 332 T 4.088(}X)71.822 345 S -.356
(BellFeedbackState;)-4.444 G -.356(typedef struct {)71.822 371 S -.356
(#if defined\(__cplusplus\) || defined\(c_plusplus\))71.822 384 S 17.776
-.356(XID c_class;)89.598 397 T -.356(#else)71.822 410 S 17.776 -.356
(XID class;)89.598 423 T -.356(#endif)71.822 436 S 17.776 -.356
(int length;)89.598 449 T 17.776 -.356(XID id;)89.598 462 T 17.776 -.356
(int led_values;)89.598 475 T 17.776 -.356(int led_mask;)89.598 488 T
4.088(}X)71.822 501 S -.356(LedFeedbackState;)-4.444 G -.356
(typedef struct {)71.822 527 S -.356
(#if defined\(__cplusplus\) || defined\(c_plusplus\))71.822 540 S 48.884
-.356(XID c_class;)94.042 553 T -.356(#else)71.822 566 S 48.884 -.356
(XID class;)94.042 579 T -.356(#endif)71.822 592 S 48.884 -.356
(int length;)94.042 605 T 32.78 -.356(XID id;)94.042 618 T 4.088(}X)
71.822 631 S -.356(FeedbackControl;)-4.444 G -.356(typedef struct {)
71.822 657 S -.356(#if defined\(__cplusplus\) || defined\(c_plusplus\))
71.822 670 S 17.776 -.356(XID c_class;)89.598 683 T -.356(#else)71.822
696 S 17.776 -.356(XID class;)89.598 709 T -.356(#endif)71.822 722 S F0
(65)282.5 769 Q 0 Cg EP
%%Page: 66 68
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF 2.75(XI)72 49 S(nput Extension Library)-2.75 E
(X11, Release 6.4)229.413 E/F1 8/Courier@0 SF 17.776 -.356(int length;)
89.598 85 T 17.776 -.356(XID id;)89.598 98 T 17.776 -.356(int accelNum;)
89.598 111 T 17.776 -.356(int accelDenom;)89.598 124 T 17.776 -.356
(int threshold;)89.598 137 T 4.088(}X)71.822 150 S -.356
(PtrFeedbackControl;)-4.444 G -.356(typedef struct {)71.822 176 S -.356
(#if defined\(__cplusplus\) || defined\(c_plusplus\))71.822 189 S 17.776
-.356(XID c_class;)89.598 202 T -.356(#else)71.822 215 S 17.776 -.356
(XID class;)89.598 228 T -.356(#endif)71.822 241 S 17.776 -.356
(int length;)89.598 254 T 17.776 -.356(XID id;)89.598 267 T 17.776 -.356
(int click;)89.598 280 T 17.776 -.356(int percent;)89.598 293 T 17.776
-.356(int pitch;)89.598 306 T 17.776 -.356(int duration;)89.598 319 T
17.776 -.356(int led_mask;)89.598 332 T 17.776 -.356(int led_value;)
89.598 345 T 17.776 -.356(int key;)89.598 358 T 17.776 -.356
(int auto_repeat_mode;)89.598 371 T 4.088(}X)71.822 384 S -.356
(KbdFeedbackControl;)-4.444 G -.356(typedef struct {)71.822 410 S -.356
(#if defined\(__cplusplus\) || defined\(c_plusplus\))71.822 423 S 17.776
-.356(XID c_class;)89.598 436 T -.356(#else)71.822 449 S 17.776 -.356
(XID class;)89.598 462 T -.356(#endif)71.822 475 S 17.776 -.356
(int length;)89.598 488 T 17.776 -.356(XID id;)89.598 501 T 17.776 -.356
(int num_keysyms;)89.598 514 T 4.444 -.356(KeySym *syms_to_display;)
89.598 527 T 4.088(}X)71.822 540 S -.356(StringFeedbackControl;)-4.444 G
-.356(typedef struct {)71.822 566 S -.356
(#if defined\(__cplusplus\) || defined\(c_plusplus\))71.822 579 S 17.776
-.356(XID c_class;)89.598 592 T -.356(#else)71.822 605 S 17.776 -.356
(XID class;)89.598 618 T -.356(#endif)71.822 631 S 17.776 -.356
(int length;)89.598 644 T 17.776 -.356(XID id;)89.598 657 T 17.776 -.356
(int int_to_display;)89.598 670 T 4.088(}X)71.822 683 S -.356
(IntegerFeedbackControl;)-4.444 G -.356(typedef struct {)71.822 709 S
-.356(#if defined\(__cplusplus\) || defined\(c_plusplus\))71.822 722 S
F0(66)282.5 769 Q 0 Cg EP
%%Page: 67 69
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF 2.75(XI)72 49 S(nput Extension Library)-2.75 E
(X11, Release 6.4)229.413 E/F1 8/Courier@0 SF 17.776 -.356(XID c_class;)
89.598 85 T -.356(#else)71.822 98 S 17.776 -.356(XID class;)89.598 111 T
-.356(#endif)71.822 124 S 17.776 -.356(int length;)89.598 137 T 17.776
-.356(XID id;)89.598 150 T 17.776 -.356(int percent;)89.598 163 T 17.776
-.356(int pitch;)89.598 176 T 17.776 -.356(int duration;)89.598 189 T
4.088(}X)71.822 202 S -.356(BellFeedbackControl;)-4.444 G -.356
(typedef struct {)71.822 228 S -.356
(#if defined\(__cplusplus\) || defined\(c_plusplus\))71.822 241 S 17.776
-.356(XID c_class;)89.598 254 T -.356(#else)71.822 267 S 17.776 -.356
(XID class;)89.598 280 T -.356(#endif)71.822 293 S 17.776 -.356
(int length;)89.598 306 T 17.776 -.356(XID id;)89.598 319 T 17.776 -.356
(int led_mask;)89.598 332 T 17.776 -.356(int led_values;)89.598 345 T
4.088(}X)71.822 358 S -.356(LedFeedbackControl;)-4.444 G -.356
(/*******************************************************************)
71.822 384 S(*)76.266 397 Q 4.088(*D)76.266 410 S -.356
(evice control structures.)-4.444 G(*)76.266 423 Q -.356(*/)76.266 436 S
-.356(typedef struct {)71.822 462 S 48.884 -.356(XID control;)94.042 475
T 48.884 -.356(int length;)94.042 488 T 4.088(}X)71.822 501 S -.356
(DeviceControl;)-4.444 G -.356(typedef struct {)71.822 527 S 48.884
-.356(XID control;)94.042 540 T 48.884 -.356(int length;)94.042 553 T
48.884 -.356(int first_valuator;)94.042 566 T 48.884 -.356
(int num_valuators;)94.042 579 T 48.884 -.356(int *resolutions;)94.042
592 T 4.088(}X)71.822 605 S -.356(DeviceResolutionControl;)-4.444 G
-.356(typedef struct {)71.822 631 S 48.884 -.356(XID control;)94.042 644
T 48.884 -.356(int length;)94.042 657 T 48.884 -.356(int num_valuators;)
94.042 670 T 48.884 -.356(int *resolutions;)94.042 683 T 48.884 -.356
(int *min_resolutions;)94.042 696 T 48.884 -.356(int *max_resolutions;)
94.042 709 T 4.088(}X)71.822 722 S -.356(DeviceResolutionState;)-4.444 G
F0(67)282.5 769 Q 0 Cg EP
%%Page: 68 70
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF 2.75(XI)72 49 S(nput Extension Library)-2.75 E
(X11, Release 6.4)229.413 E/F1 8/Courier@0 SF -.356
(/*******************************************************************)
71.822 85 S(*)76.266 98 Q 4.088(*A)76.266 111 S 4.088(na)-4.444 G -.356
(rray of XDeviceList structures is returned by the)-4.444 G 4.088(*X)
76.266 124 S -.356(ListInputDevices function.)-4.444 G -.356
(Each entry contains information)8.888 G 4.088(*a)76.266 137 S -.356
(bout one input device.)-4.444 G -.356
(Among that information is an array of)8.888 G 4.088(*p)76.266 150 S
-.356(ointers to structures that describe the characteristics of)-4.444
G 4.088(*t)76.266 163 S -.356(he input device.)-4.444 G(*)76.266 176 Q
-.356(*/)76.266 189 S -.356
(typedef struct _XAnyClassinfo *XAnyClassPtr;)71.822 215 S -.356
(typedef struct _XAnyClassinfo {)71.822 241 S -.356
(#if defined\(__cplusplus\) || defined\(c_plusplus\))71.822 254 S 19.448
-.356(XID c_class;)89.598 267 T -.356(#else)71.822 280 S 19.448 -.356
(XID class;)89.598 293 T -.356(#endif)71.822 306 S 19.448 -.356
(int length;)89.598 319 T 4.088(}X)89.598 332 S -.356(AnyClassInfo;)
-4.444 G -.356(typedef struct _XDeviceInfo *XDeviceInfoPtr;)71.822 358 S
-.356(typedef struct _XDeviceInfo)71.822 384 S({)89.598 397 Q 71.104
-.356(XID id;)89.598 410 T 66.66 -.356(Atom type;)89.598 423 T 66.66
-.356(char *name;)89.598 436 T 71.104 -.356(int num_classes;)89.598 449
T 71.104 -.356(int use;)89.598 462 T 6.952 -.356
(XAnyClassPtr inputclassinfo;)89.598 475 T 4.088(}X)89.598 488 S -.356
(DeviceInfo;)-4.444 G -.356(typedef struct _XKeyInfo *XKeyInfoPtr;)
71.822 514 S -.356(typedef struct _XKeyInfo)71.822 540 S({)89.598 553 Q
-.356(#if defined\(__cplusplus\) || defined\(c_plusplus\))71.822 566 S
74.448 -.356(XID c_class;)89.598 579 T -.356(#else)71.822 592 S 74.448
-.356(XID class;)89.598 605 T -.356(#endif)71.822 618 S 74.448 -.356
(int length;)89.598 631 T -.356(unsigned short)89.598 644 S -.356
(min_keycode;)26.664 G -.356(unsigned short)89.598 657 S -.356
(max_keycode;)26.664 G -.356(unsigned short)89.598 670 S -.356
(num_keys;)26.664 G 4.088(}X)89.598 683 S -.356(KeyInfo;)-4.444 G -.356
(typedef struct _XButtonInfo *XButtonInfoPtr;)71.822 709 S F0(68)282.5
769 Q 0 Cg EP
%%Page: 69 71
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF 2.75(XI)72 49 S(nput Extension Library)-2.75 E
(X11, Release 6.4)229.413 E/F1 8/Courier@0 SF -.356
(typedef struct _XButtonInfo {)71.822 85 S -.356
(#if defined\(__cplusplus\) || defined\(c_plusplus\))71.822 98 S 46.948
-.356(XID c_class;)89.598 111 T -.356(#else)71.822 124 S 46.948 -.356
(XID class;)89.598 137 T -.356(#endif)71.822 150 S 46.948 -.356
(int length;)89.598 163 T 10.56 -.356(short num_buttons;)89.598 176 T
4.088(}X)89.598 189 S -.356(ButtonInfo;)-4.444 G -.356
(typedef struct _XAxisInfo *XAxisInfoPtr;)71.822 215 S -.356
(typedef struct _XAxisInfo {)71.822 241 S 19.448 -.356(int resolution;)
89.598 254 T 19.448 -.356(int min_value;)89.598 267 T 19.448 -.356
(int max_value;)89.598 280 T 4.088(}X)89.598 293 S -.356(AxisInfo;)
-4.444 G -.356(typedef struct _XValuatorInfo *XValuatorInfoPtr;)71.822
319 S -.356(typedef struct)71.822 345 S -.356(_XValuatorInfo)20.284 G({)
89.598 358 Q -.356(#if defined\(__cplusplus\) || defined\(c_plusplus\))
71.822 371 S 74.448 -.356(XID c_class;)89.598 384 T -.356(#else)71.822
397 S 74.448 -.356(XID class;)89.598 410 T -.356(#endif)71.822 423 S
74.448 -.356(int length;)89.598 436 T -.356(unsigned char)89.598 449 S
-.356(num_axes;)31.108 G -.356(unsigned char)89.598 462 S -.356(mode;)
31.108 G -.356(unsigned long)89.598 475 S -.356(motion_buffer;)31.108 G
31.108 -.356(XAxisInfoPtr axes;)89.598 488 T 4.088(}X)89.598 501 S -.356
(ValuatorInfo;)-4.444 G -.356
(/*******************************************************************)
71.822 540 S(*)76.266 553 Q 4.088(*A)76.266 566 S 4.088(nX)-4.444 G
-.356(Device structure is returned by the XOpenDevice function.)-4.444 G
4.088(*I)76.266 579 S 4.088(tc)-4.444 G -.356
(ontains an array of pointers to XInputClassInfo structures.)-4.444 G
4.088(*E)76.266 592 S -.356
(ach contains information about a class of input supported by the)-4.444
G 4.088(*d)76.266 605 S -.356
(evice, including a pointer to an array of data for each type of event)
-4.444 G 4.088(*t)76.266 618 S -.356(he device reports.)-4.444 G(*)
76.266 631 Q -.356(*/)76.266 644 S -.356(typedef struct {)71.822 683 S
-.356(unsigned char)107.374 696 S -.356(input_class;)13.332 G -.356
(unsigned char)107.374 709 S -.356(event_type_base;)13.332 G 4.088(}X)
71.822 722 S -.356(InputClassInfo;)-4.444 G F0(69)282.5 769 Q 0 Cg EP
%%Page: 70 72
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF 2.75(XI)72 49 S(nput Extension Library)-2.75 E
(X11, Release 6.4)229.413 E/F1 8/Courier@0 SF -.356(typedef struct {)
71.822 85 S 84.436 -.356(XID device_id;)107.374 98 T 84.436 -.356
(int num_classes;)107.374 111 T 31.108 -.356(XInputClassInfo *classes;)
107.374 124 T 4.088(}X)71.822 137 S -.356(Device;)-4.444 G -.356
(/*******************************************************************)
71.822 176 S(*)76.266 189 Q 4.088(*T)76.266 202 S -.356
(he following structure is used to return information for the)-4.444 G
4.088(*X)76.266 215 S -.356(GetSelectedExtensionEvents function.)-4.444
G(*)76.266 228 Q -.356(*/)76.266 241 S -.356(typedef struct {)71.822 267
S 17.776 -.356(XEventClass event_type;)107.374 280 T 53.328 -.356
(XID device;)107.374 293 T 4.088(}X)71.822 306 S -.356(EventList;)-4.444
G -.356
(/*******************************************************************)
71.822 332 S(*)76.266 345 Q 4.088(*T)76.266 358 S -.356
(he following structure is used to return motion history data from)
-4.444 G 4.088(*a)76.266 371 S 4.088(ni)-4.444 G -.356
(nput device that supports the input class Valuators.)-4.444 G 4.088(*T)
76.266 384 S -.356
(his information is returned by the XGetDeviceMotionEvents function.)
-4.444 G(*)76.266 397 Q -.356(*/)76.266 410 S -.356(typedef struct {)
71.822 436 S 8.888 -.356(Time time;)107.374 449 T 13.332 -.356
(int *data;)107.374 462 T 4.088(}X)71.822 475 S -.356(DeviceTimeCoord;)
-4.444 G -.356
(/*******************************************************************)
71.822 514 S(*)76.266 527 Q 4.088(*D)76.266 540 S -.356
(evice state structure.)-4.444 G 4.088(*T)76.266 553 S -.356
(his is returned by the XQueryDeviceState request.)-4.444 G(*)76.266 566
Q -.356(*/)76.266 579 S -.356(typedef struct {)71.822 605 S 29.172 -.356
(XID device_id;)107.374 618 T 29.172 -.356(int num_classes;)107.374 631
T 21.12 -.356(XInputClass *data;)107.374 644 T 4.088(}X)71.822 657 S
-.356(DeviceState;)-4.444 G -.356
(/*******************************************************************)
71.822 683 S(*)76.266 696 Q 4.088(*N)76.266 709 S -.356
(ote that the mode field is a bitfield that reports the Proximity)-4.444
G 4.088(*s)76.266 722 S -.356(tatus of the device as well as the mode.)
-4.444 G -.356(The mode field should)8.888 G F0(70)282.5 769 Q 0 Cg EP
%%Page: 71 73
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF 2.75(XI)72 49 S(nput Extension Library)-2.75 E
(X11, Release 6.4)229.413 E/F1 8/Courier@0 SF 4.088(*b)76.266 85 S 4.088
(eO)-4.444 G -.356
(R'd with the mask DeviceMode and compared with the values)-4.444 G
4.088(*A)76.266 98 S -.356
(bsolute and Relative to determine the mode, and should be OR'd)-4.444 G
4.088(*w)76.266 111 S -.356
(ith the mask ProximityState and compared with the values InProximity)
-4.444 G 4.088(*a)76.266 124 S -.356
(nd OutOfProximity to determine the proximity state.)-4.444 G(*)76.266
137 Q -.356(*/)76.266 150 S -.356(typedef struct {)71.822 176 S -.356
(#if defined\(__cplusplus\) || defined\(c_plusplus\))71.822 189 S -.356
(unsigned char)89.598 202 S -.356(c_class;)6.952 G -.356(#else)71.822
215 S -.356(unsigned char)89.598 228 S -.356(class;)6.952 G -.356
(#endif)71.822 241 S -.356(unsigned char)89.598 254 S -.356(length;)
6.952 G -.356(unsigned char)89.598 267 S -.356(num_valuators;)6.952 G
-.356(unsigned char)89.598 280 S -.356(mode;)6.952 G 74.448 -.356
(int *valuators;)89.598 293 T 4.088(}X)71.822 306 S -.356
(ValuatorState;)-4.444 G -.356(typedef struct {)71.822 332 S -.356
(#if defined\(__cplusplus\) || defined\(c_plusplus\))71.822 345 S -.356
(unsigned char)89.598 358 S -.356(c_class;)6.952 G -.356(#else)71.822
371 S -.356(unsigned char)89.598 384 S -.356(class;)6.952 G -.356
(#endif)71.822 397 S -.356(unsigned char)89.598 410 S -.356(length;)
6.952 G 38.06 -.356(short num_keys;)89.598 423 T 42.504 -.356
(char keys[32];)89.598 436 T 4.088(}X)71.822 449 S -.356(KeyState;)
-4.444 G -.356(typedef struct {)71.822 475 S -.356
(#if defined\(__cplusplus\) || defined\(c_plusplus\))71.822 488 S -.356
(unsigned char)89.598 501 S -.356(c_class;)6.952 G -.356(#else)71.822
514 S -.356(unsigned char)89.598 527 S -.356(class;)6.952 G -.356
(#endif)71.822 540 S -.356(unsigned char)89.598 553 S -.356(length;)
6.952 G 38.06 -.356(short num_buttons;)89.598 566 T 42.504 -.356
(char buttons[32];)89.598 579 T 4.088(}X)71.822 592 S -.356
(ButtonState;)-4.444 G -.356
(/*******************************************************************)
71.822 618 S(*)76.266 631 Q 4.088(*F)76.266 644 S -.356
(unction definitions.)-4.444 G(*)76.266 657 Q -.356(*/)76.266 670 S
-.356(_XFUNCPROTOBEGIN)71.822 696 S -.356(extern int)71.822 722 S -.356
(XChangeKeyboardDevice\()10.56 G F0(71)282.5 769 Q 0 Cg EP
%%Page: 72 74
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF 2.75(XI)72 49 S(nput Extension Library)-2.75 E
(X11, Release 6.4)229.413 E/F1 8/Courier@0 SF 24.728 -.356(Display* /*)
89.598 85 T -.356(display */,)4.444 G 24.728 -.356(XDevice* /*)89.598 98
T -.356(device */)4.444 G -.356(\);)71.822 111 S -.356(extern int)71.822
137 S -.356(XChangePointerDevice\()10.56 G 24.728 -.356(Display* /*)
89.598 150 T -.356(display */,)4.444 G 24.728 -.356(XDevice* /*)89.598
163 T -.356(device */,)4.444 G 74.448 -.356(int /*)89.598 176 T -.356
(xaxis */,)4.444 G 74.448 -.356(int /*)89.598 189 T -.356(yaxis */)4.444
G -.356(\);)71.822 202 S -.356(extern int)71.822 228 S -.356
(XGrabDevice\()10.56 G 24.728 -.356(Display* /*)89.598 241 T -.356
(display */,)4.444 G 24.728 -.356(XDevice* /*)89.598 254 T -.356
(device */,)4.444 G 33.616 -.356(Window /*)89.598 267 T -.356
(grab_window */,)4.444 G 42.504 -.356(Bool /*)89.598 280 T -.356
(ownerEvents */,)4.444 G 74.448 -.356(int /*)89.598 293 T -.356
(event count */,)4.444 G 6.952 -.356(XEventClass* /*)89.598 306 T -.356
(event_list */,)4.444 G 74.448 -.356(int /*)89.598 319 T -.356
(this_device_mode */,)4.444 G 74.448 -.356(int /*)89.598 332 T -.356
(other_devices_mode */,)4.444 G 42.504 -.356(Time /*)89.598 345 T -.356
(time */)4.444 G -.356(\);)71.822 358 S -.356(extern int)71.822 384 S
-.356(XUngrabDevice\()10.56 G 24.728 -.356(Display* /*)89.598 397 T
-.356(display */,)4.444 G 24.728 -.356(XDevice* /*)89.598 410 T -.356
(device */,)4.444 G 42.504 -.356(Time /*)89.598 423 T -.356(time */)
4.444 G -.356(\);)71.822 436 S -.356(extern int)71.822 462 S -.356
(XGrabDeviceKey\()10.56 G 24.728 -.356(Display* /*)89.598 475 T -.356
(display */,)4.444 G 24.728 -.356(XDevice* /*)89.598 488 T -.356
(device */,)4.444 G -.356(unsigned int)89.598 501 S -.356(/* key */,)
11.396 G -.356(unsigned int)89.598 514 S -.356(/* modifiers */,)11.396 G
24.728 -.356(XDevice* /*)89.598 527 T -.356(modifier_device */,)4.444 G
33.616 -.356(Window /*)89.598 540 T -.356(grab_window */,)4.444 G 42.504
-.356(Bool /*)89.598 553 T -.356(owner_events */,)4.444 G -.356
(unsigned int)89.598 566 S -.356(/* event_count */,)11.396 G 6.952 -.356
(XEventClass* /*)89.598 579 T -.356(event_list */,)4.444 G 74.448 -.356
(int /*)89.598 592 T -.356(this_device_mode */,)4.444 G 74.448 -.356
(int /*)89.598 605 T -.356(other_devices_mode */)4.444 G -.356(\);)
71.822 618 S -.356(extern int)71.822 644 S -.356(XUngrabDeviceKey\()
10.56 G 24.728 -.356(Display* /*)89.598 657 T -.356(display */,)4.444 G
24.728 -.356(XDevice* /*)89.598 670 T -.356(device */,)4.444 G -.356
(unsigned int)89.598 683 S -.356(/* key */,)11.396 G -.356(unsigned int)
89.598 696 S -.356(/* modifiers */,)11.396 G 24.728 -.356(XDevice* /*)
89.598 709 T -.356(modifier_dev */,)4.444 G 33.616 -.356(Window /*)
89.598 722 T -.356(grab_window */)4.444 G F0(72)282.5 769 Q 0 Cg EP
%%Page: 73 75
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF 2.75(XI)72 49 S(nput Extension Library)-2.75 E
(X11, Release 6.4)229.413 E/F1 8/Courier@0 SF -.356(\);)71.822 85 S
-.356(extern int)71.822 111 S -.356(XGrabDeviceButton\()10.56 G 24.728
-.356(Display* /*)89.598 124 T -.356(display */,)4.444 G 24.728 -.356
(XDevice* /*)89.598 137 T -.356(device */,)4.444 G -.356(unsigned int)
89.598 150 S -.356(/* button */,)11.396 G -.356(unsigned int)89.598 163
S -.356(/* modifiers */,)11.396 G 24.728 -.356(XDevice* /*)89.598 176 T
-.356(modifier_device */,)4.444 G 33.616 -.356(Window /*)89.598 189 T
-.356(grab_window */,)4.444 G 42.504 -.356(Bool /*)89.598 202 T -.356
(owner_events */,)4.444 G -.356(unsigned int)89.598 215 S -.356
(/* event_count */,)11.396 G 6.952 -.356(XEventClass* /*)89.598 228 T
-.356(event_list */,)4.444 G 74.448 -.356(int /*)89.598 241 T -.356
(this_device_mode */,)4.444 G 74.448 -.356(int /*)89.598 254 T -.356
(other_devices_mode */)4.444 G -.356(\);)71.822 267 S -.356(extern int)
71.822 293 S -.356(XUngrabDeviceButton\()10.56 G 24.728 -.356
(Display* /*)89.598 306 T -.356(display */,)4.444 G 24.728 -.356
(XDevice* /*)89.598 319 T -.356(device */,)4.444 G -.356(unsigned int)
89.598 332 S -.356(/* button */,)11.396 G -.356(unsigned int)89.598 345
S -.356(/* modifiers */,)11.396 G 24.728 -.356(XDevice* /*)89.598 358 T
-.356(modifier_dev */,)4.444 G 33.616 -.356(Window /*)89.598 371 T -.356
(grab_window */)4.444 G -.356(\);)71.822 384 S -.356(extern int)71.822
410 S -.356(XAllowDeviceEvents\()10.56 G 24.728 -.356(Display* /*)89.598
423 T -.356(display */,)4.444 G 24.728 -.356(XDevice* /*)89.598 436 T
-.356(device */,)4.444 G 74.448 -.356(int /*)89.598 449 T -.356
(event_mode */,)4.444 G 42.504 -.356(Time /*)89.598 462 T -.356(time */)
4.444 G -.356(\);)71.822 475 S -.356(extern int)71.822 501 S -.356
(XGetDeviceFocus\()10.56 G 24.728 -.356(Display* /*)89.598 514 T -.356
(display */,)4.444 G 24.728 -.356(XDevice* /*)89.598 527 T -.356
(device */,)4.444 G 29.172 -.356(Window* /*)89.598 540 T -.356
(focus */,)4.444 G 42.504 -.356(int* /*)89.598 553 T -.356
(revert_to */,)4.444 G 38.06 -.356(Time* /*)89.598 566 T -.356(time */)
4.444 G -.356(\);)71.822 579 S -.356(extern int)71.822 605 S -.356
(XSetDeviceFocus\()10.56 G 24.728 -.356(Display* /*)89.598 618 T -.356
(display */,)4.444 G 24.728 -.356(XDevice* /*)89.598 631 T -.356
(device */,)4.444 G 33.616 -.356(Window /*)89.598 644 T -.356(focus */,)
4.444 G 74.448 -.356(int /*)89.598 657 T -.356(revert_to */,)4.444 G
42.504 -.356(Time /*)89.598 670 T -.356(time */)4.444 G -.356(\);)71.822
683 S -.356(extern XFeedbackState)71.822 709 S -.356
(*XGetFeedbackControl\()16.676 G 24.728 -.356(Display* /*)89.598 722 T
-.356(display */,)4.444 G F0(73)282.5 769 Q 0 Cg EP
%%Page: 74 76
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF 2.75(XI)72 49 S(nput Extension Library)-2.75 E
(X11, Release 6.4)229.413 E/F1 8/Courier@0 SF 24.728 -.356(XDevice* /*)
89.598 85 T -.356(device */,)4.444 G 42.504 -.356(int* /*)89.598 98 T
-.356(num_feedbacks */)4.444 G -.356(\);)71.822 111 S -.356(extern void)
71.822 137 S -.356(XFreeFeedbackList\()6.116 G 21.12 -.356
(XFeedbackState* /*)89.598 150 T -.356(list */)4.444 G -.356(\);)71.822
163 S -.356(extern int)71.822 189 S -.356(XChangeFeedbackControl\()10.56
G 24.728 -.356(Display* /*)89.598 202 T -.356(display */,)4.444 G 24.728
-.356(XDevice* /*)89.598 215 T -.356(device */,)4.444 G -.356
(unsigned long)89.598 228 S -.356(/* mask */,)6.952 G 12.232 -.356
(XFeedbackControl* /*)89.598 241 T 4.088(f*)4.444 G(/)-4.444 E -.356
(\);)71.822 254 S -.356(extern int)71.822 280 S -.356(XDeviceBell\()
10.56 G 24.728 -.356(Display* /*)89.598 293 T -.356(display */,)4.444 G
24.728 -.356(XDevice* /*)89.598 306 T -.356(device */,)4.444 G 74.448
-.356(XID /*)89.598 319 T -.356(feedbackclass */,)4.444 G 74.448 -.356
(XID /*)89.598 332 T -.356(feedbackid */,)4.444 G 74.448 -.356(int /*)
89.598 345 T -.356(percent */)4.444 G -.356(\);)71.822 358 S -.356
(extern KeySym)71.822 384 S -.356(*XGetDeviceKeyMapping\()24.728 G
24.728 -.356(Display* /*)89.598 397 T -.356(display */,)4.444 G 24.728
-.356(XDevice* /*)89.598 410 T -.356(device */,)4.444 G -.356
(#if NeedWidePrototypes)71.822 423 S -.356(unsigned int)89.598 436 S
-.356(/* first */,)11.396 G -.356(#else)71.822 449 S 29.172 -.356
(KeyCode /*)89.598 462 T -.356(first */,)4.444 G -.356(#endif)71.822 475
S 74.448 -.356(int /*)89.598 488 T -.356(keycount */,)4.444 G 42.504
-.356(int* /*)89.598 501 T -.356(syms_per_code */)4.444 G -.356(\);)
71.822 514 S -.356(extern int)71.822 540 S -.356
(XChangeDeviceKeyMapping\()10.56 G 24.728 -.356(Display* /*)89.598 553 T
-.356(display */,)4.444 G 24.728 -.356(XDevice* /*)89.598 566 T -.356
(device */,)4.444 G 74.448 -.356(int /*)89.598 579 T -.356(first */,)
4.444 G 74.448 -.356(int /*)89.598 592 T -.356(syms_per_code */,)4.444 G
29.172 -.356(KeySym* /*)89.598 605 T -.356(keysyms */,)4.444 G 74.448
-.356(int /*)89.598 618 T -.356(count */)4.444 G -.356(\);)71.822 631 S
-.356(extern XModifierKeymap)71.822 657 S -.356
(*XGetDeviceModifierMapping\()12.232 G 24.728 -.356(Display* /*)89.598
670 T -.356(display */,)4.444 G 24.728 -.356(XDevice* /*)89.598 683 T
-.356(device */)4.444 G -.356(\);)71.822 696 S -.356(extern int)71.822
722 S -.356(XSetDeviceModifierMapping\()10.56 G F0(74)282.5 769 Q 0 Cg
EP
%%Page: 75 77
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF 2.75(XI)72 49 S(nput Extension Library)-2.75 E
(X11, Release 6.4)229.413 E/F1 8/Courier@0 SF 24.728 -.356(Display* /*)
89.598 85 T -.356(display */,)4.444 G 24.728 -.356(XDevice* /*)89.598 98
T -.356(device */,)4.444 G 16.676 -.356(XModifierKeymap* /*)89.598 111 T
-.356(modmap */)4.444 G -.356(\);)71.822 124 S -.356(extern int)71.822
150 S -.356(XSetDeviceButtonMapping\()10.56 G 24.728 -.356(Display* /*)
89.598 163 T -.356(display */,)4.444 G 24.728 -.356(XDevice* /*)89.598
176 T -.356(device */,)4.444 G -.356(unsigned char*)89.598 189 S -.356
(/* map[] */,)2.508 G 74.448 -.356(int /*)89.598 202 T -.356(nmap */)
4.444 G -.356(\);)71.822 215 S -.356(extern int)71.822 241 S -.356
(XGetDeviceButtonMapping\()10.56 G 24.728 -.356(Display* /*)89.598 254 T
-.356(display */,)4.444 G 24.728 -.356(XDevice* /*)89.598 267 T -.356
(device */,)4.444 G -.356(unsigned char*)89.598 280 S -.356
(/* map[] */,)2.508 G -.356(unsigned int)89.598 293 S -.356(/* nmap */)
11.396 G -.356(\);)71.822 306 S -.356(extern XDeviceState)71.822 332 S
-.356(*XQueryDeviceState\()25.564 G 24.728 -.356(Display* /*)89.598 345
T -.356(display */,)4.444 G 24.728 -.356(XDevice* /*)89.598 358 T -.356
(device */)4.444 G -.356(\);)71.822 371 S -.356(extern void)71.822 397 S
-.356(XFreeDeviceState\()6.116 G 2.508 -.356(XDeviceState* /*)89.598 410
T -.356(list */)4.444 G -.356(\);)71.822 423 S -.356
(extern XExtensionVersion)71.822 449 S -.356(*XGetExtensionVersion\()
3.344 G 24.728 -.356(Display* /*)89.598 462 T -.356(display */,)4.444 G
-.356(_Xconst char*)89.598 475 S -.356(/* name */)6.952 G -.356(\);)
71.822 488 S -.356(extern XDeviceInfo)71.822 514 S -.356
(*XListInputDevices\()2.508 G 24.728 -.356(Display* /*)89.598 527 T
-.356(display */,)4.444 G 42.504 -.356(int* /*)89.598 540 T -.356
(ndevices */)4.444 G -.356(\);)71.822 553 S -.356(extern void)71.822 579
S -.356(XFreeDeviceList\()6.116 G 6.952 -.356(XDeviceInfo* /*)89.598 592
T -.356(list */)4.444 G -.356(\);)71.822 605 S -.356(extern XDevice)
71.822 631 S -.356(*XOpenDevice\()20.284 G 24.728 -.356(Display* /*)
89.598 644 T -.356(display */,)4.444 G 74.448 -.356(XID /*)89.598 657 T
-.356(id */)4.444 G -.356(\);)71.822 670 S -.356(extern int)71.822 696 S
-.356(XCloseDevice\()10.56 G 24.728 -.356(Display* /*)89.598 709 T -.356
(display */,)4.444 G 24.728 -.356(XDevice* /*)89.598 722 T -.356
(device */)4.444 G F0(75)282.5 769 Q 0 Cg EP
%%Page: 76 78
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF 2.75(XI)72 49 S(nput Extension Library)-2.75 E
(X11, Release 6.4)229.413 E/F1 8/Courier@0 SF -.356(\);)71.822 85 S
-.356(extern int)71.822 111 S -.356(XSetDeviceMode\()10.56 G 24.728
-.356(Display* /*)89.598 124 T -.356(display */,)4.444 G 24.728 -.356
(XDevice* /*)89.598 137 T -.356(device */,)4.444 G 74.448 -.356(int /*)
89.598 150 T -.356(mode */)4.444 G -.356(\);)71.822 163 S -.356
(extern int)71.822 189 S -.356(XSetDeviceValuators\()10.56 G 24.728
-.356(Display* /*)89.598 202 T -.356(display */,)4.444 G 24.728 -.356
(XDevice* /*)89.598 215 T -.356(device */,)4.444 G 42.504 -.356(int* /*)
89.598 228 T -.356(valuators */,)4.444 G 74.448 -.356(int /*)89.598 241
T -.356(first_valuator */,)4.444 G 74.448 -.356(int /*)89.598 254 T
-.356(num_valuators */)4.444 G -.356(\);)71.822 267 S -.356
(extern XDeviceControl)71.822 293 S -.356(*XGetDeviceControl\()16.676 G
24.728 -.356(Display* /*)89.598 306 T -.356(display */,)4.444 G 24.728
-.356(XDevice* /*)89.598 319 T -.356(device */,)4.444 G 74.448 -.356
(int /*)89.598 332 T -.356(control */)4.444 G -.356(\);)71.822 345 S
-.356(extern int)71.822 371 S -.356(XChangeDeviceControl\()10.56 G
24.728 -.356(Display* /*)89.598 384 T -.356(display */,)4.444 G 24.728
-.356(XDevice* /*)89.598 397 T -.356(device */,)4.444 G 74.448 -.356
(int /*)89.598 410 T -.356(control */,)4.444 G 21.12 -.356
(XDeviceControl* /*)89.598 423 T 4.088(d*)4.444 G(/)-4.444 E -.356(\);)
71.822 436 S -.356(extern int)71.822 462 S -.356
(XSelectExtensionEvent\()10.56 G 24.728 -.356(Display* /*)89.598 475 T
-.356(display */,)4.444 G 33.616 -.356(Window /*)89.598 488 T 4.088(w*)
4.444 G -.356(/,)-4.444 G 6.952 -.356(XEventClass* /*)89.598 501 T -.356
(event_list */,)4.444 G 74.448 -.356(int /*)89.598 514 T -.356(count */)
4.444 G -.356(\);)71.822 527 S -.356
(extern int XGetSelectedExtensionEvents\()71.822 553 S 24.728 -.356
(Display* /*)89.598 566 T -.356(display */,)4.444 G 33.616 -.356
(Window /*)89.598 579 T 4.088(w*)4.444 G -.356(/,)-4.444 G 42.504 -.356
(int* /*)89.598 592 T -.356(this_client_count */,)4.444 G 2.508 -.356
(XEventClass** /*)89.598 605 T -.356(this_client_list */,)4.444 G 42.504
-.356(int* /*)89.598 618 T -.356(all_clients_count */,)4.444 G 2.508
-.356(XEventClass** /*)89.598 631 T -.356(all_clients_list */)4.444 G
-.356(\);)71.822 644 S -.356(extern int)71.822 670 S -.356
(XChangeDeviceDontPropagateList\()10.56 G 24.728 -.356(Display* /*)
89.598 683 T -.356(display */,)4.444 G 33.616 -.356(Window /*)89.598 696
T -.356(window */,)4.444 G 74.448 -.356(int /*)89.598 709 T -.356
(count */,)4.444 G 6.952 -.356(XEventClass* /*)89.598 722 T -.356
(events */,)4.444 G F0(76)282.5 769 Q 0 Cg EP
%%Page: 77 79
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF 2.75(XI)72 49 S(nput Extension Library)-2.75 E
(X11, Release 6.4)229.413 E/F1 8/Courier@0 SF 74.448 -.356(int /*)89.598
85 T -.356(mode */)4.444 G -.356(\);)71.822 98 S -.356
(extern XEventClass)71.822 124 S -.356(*XGetDeviceDontPropagateList\()
2.508 G 24.728 -.356(Display* /*)89.598 137 T -.356(display */,)4.444 G
33.616 -.356(Window /*)89.598 150 T -.356(window */,)4.444 G 42.504
-.356(int* /*)89.598 163 T -.356(count */)4.444 G -.356(\);)71.822 176 S
-.356(extern Status)71.822 202 S -.356(XSendExtensionEvent\()24.728 G
24.728 -.356(Display* /*)89.598 215 T -.356(display */,)4.444 G 24.728
-.356(XDevice* /*)89.598 228 T -.356(device */,)4.444 G 33.616 -.356
(Window /*)89.598 241 T -.356(dest */,)4.444 G 42.504 -.356(Bool /*)
89.598 254 T -.356(prop */,)4.444 G 74.448 -.356(int /*)89.598 267 T
-.356(count */,)4.444 G 6.952 -.356(XEventClass* /*)89.598 280 T -.356
(list */,)4.444 G 29.172 -.356(XEvent* /*)89.598 293 T -.356(event */)
4.444 G -.356(\);)71.822 306 S -.356(extern XDeviceTimeCoord)71.822 332
S -.356(*XGetDeviceMotionEvents\()7.788 G 24.728 -.356(Display* /*)
89.598 345 T -.356(display */,)4.444 G 24.728 -.356(XDevice* /*)89.598
358 T -.356(device */,)4.444 G 42.504 -.356(Time /*)89.598 371 T -.356
(start */,)4.444 G 42.504 -.356(Time /*)89.598 384 T -.356(stop */,)
4.444 G 42.504 -.356(int* /*)89.598 397 T -.356(nEvents */,)4.444 G
42.504 -.356(int* /*)89.598 410 T -.356(mode */,)4.444 G 42.504 -.356
(int* /*)89.598 423 T -.356(axis_count */)4.444 G -.356(\);)71.822 436 S
-.356(extern void)71.822 462 S -.356(XFreeDeviceMotionEvents\()6.116 G
12.232 -.356(XDeviceTimeCoord* /*)89.598 475 T -.356(events */)4.444 G
-.356(\);)71.822 488 S -.356(extern void)71.822 514 S -.356
(XFreeDeviceControl\()6.116 G 21.12 -.356(XDeviceControl* /*)89.598 527
T -.356(control */)4.444 G -.356(\);)71.822 540 S -.356
(extern void _xibaddevice\(Display *dpy, int *error\);)71.822 566 S
-.356(extern void _xibadclass\(Display *dpy, int *error\);)71.822 579 S
-.356(extern void _xibadevent\(Display *dpy, int *error\);)71.822 592 S
-.356(extern void _xibadmode\(Display *dpy, int *error\);)71.822 605 S
-.356(extern void _xidevicebusy\(Display *dpy, int *error\);)71.822 618
S -.356(_XFUNCPROTOEND)71.822 657 S -.356(#endif /* _XINPUT_H_ */)71.822
683 S -.356
(/************************************************************)71.822
709 S F0(77)282.5 769 Q 0 Cg EP
%%Page: 78 80
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF 2.75(XI)72 49 S(nput Extension Library)-2.75 E
(X11, Release 6.4)229.413 E/F1 8/Courier@0 SF -.356
(Copyright 1989, 1998)71.822 85 S -.356(The Open Group)8.888 G -.356(Pe\
rmission to use, copy, modify, distribute, and sell this software and i\
ts)71.822 111 S -.356(documentation for any purpose is hereby granted w\
ithout fee, provided that)71.822 124 S -.356
(the above copyright notice appear in all copies and that both that)
71.822 137 S -.356
(copyright notice and this permission notice appear in supporting)71.822
150 S -.356(documentation.)71.822 163 S -.356(The above copyright notic\
e and this permission notice shall be included in)71.822 189 S -.356
(all copies or substantial portions of the Software.)71.822 202 S -.356
(THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRES\
S OR)71.822 228 S -.356(IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRA\
NTIES OF MERCHANTABILITY,)71.822 241 S -.356
(FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.)71.822 254 S
-.356(IN NO EVENT SHALL THE)8.888 G -.356(OPEN GROUP BE LIABLE FOR ANY \
CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN)71.822 267 S -.356
(AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN)
71.822 280 S -.356(CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEA\
LINGS IN THE SOFTWARE.)71.822 293 S -.356(Except as contained in this n\
otice, the name of The Open Group shall not be)71.822 319 S -.356(used \
in advertising or otherwise to promote the sale, use or other dealings)
71.822 332 S -.356(in this Software without prior written authorization\
 from The Open Group.)71.822 345 S -.356
(Copyright 1989 by Hewlett-Packard Company, Palo Alto, California.)
71.822 371 S -.356(All Rights Reserved)154.322 397 S -.356
(Permission to use, copy, modify, and distribute this software and its)
71.822 423 S -.356
(documentation for any purpose and without fee is hereby granted,)71.822
436 S -.356
(provided that the above copyright notice appear in all copies and that)
71.822 449 S -.356
(both that copyright notice and this permission notice appear in)71.822
462 S -.356
(supporting documentation, and that the name of Hewlett-Packard not be)
71.822 475 S -.356
(used in advertising or publicity pertaining to distribution of the)
71.822 488 S -.356(software without specific, written prior permission.)
71.822 501 S -.356(HEWLETT-PACKARD DISCLAIMS ALL WARRANTIES WITH REGARD\
 TO THIS SOFTWARE, INCLUDING)71.822 527 S -.356(ALL IMPLIED WARRANTIES \
OF MERCHANTABILITY AND FITNESS, IN NO EVENT SHALL)71.822 540 S -.356(HE\
WLETT-PACKARD BE LIABLE FOR ANY SPECIAL, INDIRECT OR CONSEQUENTIAL DAMA\
GES OR)71.822 553 S -.356
(ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS,)
71.822 566 S -.356
(WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION,)
71.822 579 S -.356
(ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS)
71.822 592 S -.356(SOFTWARE.)71.822 605 S -.356
(********************************************************/)71.822 631 S
-.356(/* $XFree86: xc/doc/specs/Xi/library.ms,v 1.3 2006/01/09 14:56:34\
 dawes Exp $ */)71.822 644 S -.356
(/* Definitions used by the server, library and client */)71.822 670 S
-.356(#ifndef _XI_H_)71.822 696 S -.356(#define _XI_H_)71.822 722 S F0
(78)282.5 769 Q 0 Cg EP
%%Page: 79 81
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF 2.75(XI)72 49 S(nput Extension Library)-2.75 E
(X11, Release 6.4)229.413 E/F1 8/Courier@0 SF -.356
(#define sz_xGetExtensionVersionReq)71.822 85 S(8)41.404 E -.356
(#define sz_xGetExtensionVersionReply)71.822 98 S -.356(32)32.516 G
-.356(#define sz_xListInputDevicesReq)71.822 111 S(4)82.236 E -.356
(#define sz_xListInputDevicesReply)71.822 124 S -.356(32)45.848 G -.356
(#define sz_xOpenDeviceReq)71.822 137 S(8)81.4 E -.356
(#define sz_xOpenDeviceReply)71.822 150 S -.356(32)72.512 G -.356
(#define sz_xCloseDeviceReq)71.822 163 S(8)76.956 E -.356
(#define sz_xSetDeviceModeReq)71.822 176 S(8)68.068 E -.356
(#define sz_xSetDeviceModeReply)71.822 189 S -.356(32)59.18 G -.356
(#define sz_xSelectExtensionEventReq)71.822 202 S -.356(12)36.96 G -.356
(#define sz_xGetSelectedExtensionEventsReq)71.822 215 S(8)10.296 E -.356
(#define sz_xGetSelectedExtensionEventsReply)71.822 228 S -.356(32)1.408
G -.356(#define sz_xChangeDeviceDontPropagateListReq)71.822 241 S -.356
(12)24.464 G -.356(#define sz_xGetDeviceDontPropagateListReq)71.822 254
S(8)10.296 E -.356(#define sz_xGetDeviceDontPropagateListReply)71.822
267 S -.356(32)1.408 G -.356(#define sz_xGetDeviceMotionEventsReq)71.822
280 S -.356(16)32.516 G -.356(#define sz_xGetDeviceMotionEventsReply)
71.822 293 S -.356(32)51.128 G -.356
(#define sz_xChangeKeyboardDeviceReq)71.822 306 S(8)36.96 E -.356
(#define sz_xChangeKeyboardDeviceReply)71.822 319 S -.356(32)28.072 G
-.356(#define sz_xChangePointerDeviceReq)71.822 332 S(8)41.404 E -.356
(#define sz_xChangePointerDeviceReply)71.822 345 S -.356(32)32.516 G
-.356(#define sz_xGrabDeviceReq)71.822 358 S -.356(20)81.4 G -.356
(#define sz_xGrabDeviceReply)71.822 371 S -.356(32)72.512 G -.356
(#define sz_xUngrabDeviceReq)71.822 384 S -.356(12)72.512 G -.356
(#define sz_xGrabDeviceKeyReq)71.822 397 S -.356(20)68.068 G -.356
(#define sz_xGrabDeviceKeyReply)71.822 410 S -.356(32)59.18 G -.356
(#define sz_xUngrabDeviceKeyReq)71.822 423 S -.356(16)59.18 G -.356
(#define sz_xGrabDeviceButtonReq)71.822 436 S -.356(20)82.236 G -.356
(#define sz_xGrabDeviceButtonReply)71.822 449 S -.356(32)45.848 G -.356
(#define sz_xUngrabDeviceButtonReq)71.822 462 S -.356(16)45.848 G -.356
(#define sz_xAllowDeviceEventsReq)71.822 475 S -.356(12)50.292 G -.356
(#define sz_xGetDeviceFocusReq)71.822 488 S(8)63.624 E -.356
(#define sz_xGetDeviceFocusReply)71.822 501 S -.356(32)82.236 G -.356
(#define sz_xSetDeviceFocusReq)71.822 514 S -.356(16)63.624 G -.356
(#define sz_xGetFeedbackControlReq)71.822 527 S(8)45.848 E -.356
(#define sz_xGetFeedbackControlReply)71.822 540 S -.356(32)36.96 G -.356
(#define sz_xChangeFeedbackControlReq)71.822 553 S -.356(12)32.516 G
-.356(#define sz_xGetDeviceKeyMappingReq)71.822 566 S(8)41.404 E -.356
(#define sz_xGetDeviceKeyMappingReply)71.822 579 S -.356(32)32.516 G
-.356(#define sz_xChangeDeviceKeyMappingReq)71.822 592 S(8)28.072 E
-.356(#define sz_xGetDeviceModifierMappingReq)71.822 605 S(8)46.684 E
-.356(#define sz_xSetDeviceModifierMappingReq)71.822 618 S(8)46.684 E
-.356(#define sz_xSetDeviceModifierMappingReply)71.822 631 S -.356(32)
10.296 G -.356(#define sz_xGetDeviceButtonMappingReq)71.822 644 S(8)
28.072 E -.356(#define sz_xGetDeviceButtonMappingReply)71.822 657 S
-.356(32)46.684 G -.356(#define sz_xSetDeviceButtonMappingReq)71.822 670
S(8)28.072 E -.356(#define sz_xSetDeviceButtonMappingReply)71.822 683 S
-.356(32)46.684 G -.356(#define sz_xQueryDeviceStateReq)71.822 696 S(8)
82.236 E -.356(#define sz_xQueryDeviceStateReply)71.822 709 S -.356(32)
45.848 G -.356(#define sz_xSendExtensionEventReq)71.822 722 S -.356(16)
45.848 G F0(79)282.5 769 Q 0 Cg EP
%%Page: 80 82
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF 2.75(XI)72 49 S(nput Extension Library)-2.75 E
(X11, Release 6.4)229.413 E/F1 8/Courier@0 SF -.356
(#define sz_xDeviceBellReq)71.822 85 S(8)81.4 E -.356
(#define sz_xSetDeviceValuatorsReq)71.822 98 S(8)45.848 E -.356
(#define sz_xSetDeviceValuatorsReply)71.822 111 S -.356(32)36.96 G -.356
(#define sz_xGetDeviceControlReq)71.822 124 S(8)82.236 E -.356
(#define sz_xGetDeviceControlReply)71.822 137 S -.356(32)45.848 G -.356
(#define sz_xChangeDeviceControlReq)71.822 150 S(8)41.404 E -.356
(#define sz_xChangeDeviceControlReply)71.822 163 S -.356(32)32.516 G
-.356(#define INAME)71.822 189 S -.356("XInputExtension")79.728 G -.356
(#define XI_KEYBOARD)71.822 215 S -.356("KEYBOARD")25.564 G -.356
(#define XI_MOUSE)71.822 228 S -.356("MOUSE")11.396 G -.356
(#define XI_TABLET)71.822 241 S -.356("TABLET")6.952 G -.356
(#define XI_TOUCHSCREEN)71.822 254 S -.356("TOUCHSCREEN")12.232 G -.356
(#define XI_TOUCHPAD)71.822 267 S -.356("TOUCHPAD")25.564 G -.356
(#define XI_BARCODE)71.822 280 S -.356("BARCODE")2.508 G -.356
(#define XI_BUTTONBOX)71.822 293 S -.356("BUTTONBOX")21.12 G -.356
(#define XI_KNOB_BOX)71.822 306 S -.356("KNOB_BOX")25.564 G -.356
(#define XI_ONE_KNOB)71.822 319 S -.356("ONE_KNOB")25.564 G -.356
(#define XI_NINE_KNOB)71.822 332 S -.356("NINE_KNOB")21.12 G -.356
(#define XI_TRACKBALL)71.822 345 S -.356("TRACKBALL")21.12 G -.356
(#define XI_QUADRATURE)71.822 358 S -.356("QUADRATURE")16.676 G -.356
(#define XI_ID_MODULE)71.822 371 S -.356("ID_MODULE")21.12 G -.356
(#define XI_SPACEBALL)71.822 384 S -.356("SPACEBALL")21.12 G -.356
(#define XI_DATAGLOVE)71.822 397 S -.356("DATAGLOVE")21.12 G -.356
(#define XI_EYETRACKER)71.822 410 S -.356("EYETRACKER")16.676 G -.356
(#define XI_CURSORKEYS)71.822 423 S -.356("CURSORKEYS")16.676 G -.356
(#define XI_FOOTMOUSE)71.822 436 S -.356("FOOTMOUSE")21.12 G -.356
(#define Dont_Check)71.822 462 S(0)57.508 E -.356
(#define XInput_Initial_Release)71.822 475 S(1)31.68 E -.356
(#define XInput_Add_XDeviceBell)71.822 488 S(2)31.68 E -.356
(#define XInput_Add_XSetDeviceValuators)71.822 501 S(3)23.628 E -.356
(#define XInput_Add_XChangeDeviceControl)71.822 514 S(4)19.184 E -.356
(#define XI_Absent)71.822 540 S(0)34.452 E -.356(#define XI_Present)
71.822 553 S(1)30.008 E -.356(#define XI_Initial_Release_Major)71.822
579 S(1)50.292 E -.356(#define XI_Initial_Release_Minor)71.822 592 S(0)
50.292 E -.356(#define XI_Add_XDeviceBell_Major)71.822 618 S(1)50.292 E
-.356(#define XI_Add_XDeviceBell_Minor)71.822 631 S(1)50.292 E -.356
(#define XI_Add_XSetDeviceValuators_Major)71.822 657 S(1)14.74 E -.356
(#define XI_Add_XSetDeviceValuators_Minor)71.822 670 S(2)14.74 E -.356
(#define XI_Add_XChangeDeviceControl_Major)71.822 696 S(1)10.296 E -.356
(#define XI_Add_XChangeDeviceControl_Minor)71.822 709 S(3)10.296 E F0
(80)282.5 769 Q 0 Cg EP
%%Page: 81 83
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF 2.75(XI)72 49 S(nput Extension Library)-2.75 E
(X11, Release 6.4)229.413 E/F1 8/Courier@0 SF -.356
(#define DEVICE_RESOLUTION)71.822 85 S(1)26.4 E -.356
(#define NoSuchExtension)71.822 111 S(1)35.288 E -.356(#define COUNT)
71.822 137 S(0)79.728 E -.356(#define CREATE)71.822 150 S(1)75.284 E
-.356(#define NewPointer)71.822 176 S(0)30.008 E -.356
(#define NewKeyboard)71.822 189 S(1)53.064 E -.356(#define XPOINTER)
71.822 215 S(0)38.896 E -.356(#define XKEYBOARD)71.822 228 S(1)34.452 E
-.356(#define UseXKeyboard)71.822 254 S -.356(0xFF)48.62 G -.356
(#define IsXPointer)71.822 280 S(0)30.008 E -.356(#define IsXKeyboard)
71.822 293 S(1)53.064 E -.356(#define IsXExtensionDevice)71.822 306 S(2)
21.956 E -.356(#define AsyncThisDevice)71.822 332 S(0)35.288 E -.356
(#define SyncThisDevice)71.822 345 S(1)39.732 E -.356
(#define ReplayThisDevice)71.822 358 S(2)3.344 E -.356
(#define AsyncOtherDevices)71.822 371 S(3)26.4 E -.356(#define AsyncAll)
71.822 384 S(4)38.896 E -.356(#define SyncAll)71.822 397 S(5)70.84 E
-.356(#define FollowKeyboard)71.822 423 S(3)39.732 E -.356
(#ifndef RevertToFollowKeyboard)71.822 436 S -.356
(#define RevertToFollowKeyboard)71.822 449 S(3)31.68 E -.356(#endif)
71.822 462 S -.356(#define DvAccelNum)71.822 488 S -.356(\(1L << 0\))
62.216 G -.356(#define DvAccelDenom)71.822 501 S -.356(\(1L << 1\))
53.328 G -.356(#define DvThreshold)71.822 514 S -.356(\(1L << 2\))57.772
G -.356(#define DvKeyClickPercent)71.822 540 S -.356(\(1L<<0\))26.4 G
-.356(#define DvPercent)71.822 553 S -.356(\(1L<<1\))34.452 G -.356
(#define DvPitch)71.822 566 S -.356(\(1L<<2\))70.84 G -.356
(#define DvDuration)71.822 579 S -.356(\(1L<<3\))30.008 G -.356
(#define DvLed)71.822 592 S -.356(\(1L<<4\))79.728 G -.356
(#define DvLedMode)71.822 605 S -.356(\(1L<<5\))34.452 G -.356
(#define DvKey)71.822 618 S -.356(\(1L<<6\))79.728 G -.356
(#define DvAutoRepeatMode)71.822 631 S -.356(\(1L<<7\))3.344 G -.356
(#define DvString)71.822 657 S -.356(\(1L << 0\))71.104 G -.356
(#define DvInteger)71.822 683 S -.356(\(1L << 0\))66.66 G -.356
(#define DeviceMode)71.822 709 S -.356(\(1L << 0\))62.216 G -.356
(#define Relative)71.822 722 S(0)71.104 E F0(81)282.5 769 Q 0 Cg EP
%%Page: 82 84
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF 2.75(XI)72 49 S(nput Extension Library)-2.75 E
(X11, Release 6.4)229.413 E/F1 8/Courier@0 SF -.356(#define Absolute)
71.822 85 S(1)71.104 E -.356
(/* Merged from Metrolink tree for XINPUT stuff)71.822 98 S -.356(*/)
15.576 G -.356(#define TS_Raw)71.822 111 S -.356(57)130.284 G -.356
(#define TS_Scaled)71.822 124 S -.356(58)89.452 G -.356
(#define SendCoreEvents)71.822 137 S -.356(59)67.232 G -.356
(#define DontSendCoreEvents)71.822 150 S -.356(60)49.456 G -.356
(/* End of merged section)71.822 163 S -.356(*/)3.344 G -.356
(#define ProximityState)71.822 189 S -.356(\(1L << 1\))44.44 G -.356
(#define InProximity)71.822 202 S -.356(\(0L << 1\))57.772 G -.356
(#define OutOfProximity)71.822 215 S -.356(\(1L << 1\))44.44 G -.356
(#define AddToList)71.822 241 S(0)66.66 E -.356(#define DeleteFromList)
71.822 254 S(1)44.44 E -.356(#define KeyClass)71.822 280 S(0)38.896 E
-.356(#define ButtonClass)71.822 293 S(1)53.064 E -.356
(#define ValuatorClass)71.822 306 S(2)44.176 E -.356
(#define FeedbackClass)71.822 319 S(3)44.176 E -.356
(#define ProximityClass)71.822 332 S(4)12.232 E -.356
(#define FocusClass)71.822 345 S(5)57.508 E -.356(#define OtherClass)
71.822 358 S(6)57.508 E -.356(#define KbdFeedbackClass)71.822 384 S(0)
30.844 E -.356(#define PtrFeedbackClass)71.822 397 S(1)30.844 E -.356
(#define StringFeedbackClass)71.822 410 S(2)17.512 E -.356
(#define IntegerFeedbackClass)71.822 423 S(3)13.068 E -.356
(#define LedFeedbackClass)71.822 436 S(4)30.844 E -.356
(#define BellFeedbackClass)71.822 449 S(5)26.4 E -.356
(#define _devicePointerMotionHint 0)71.822 475 S -.356
(#define _deviceButton1Motion)71.822 488 S(1)17.512 E -.356
(#define _deviceButton2Motion)71.822 501 S(2)17.512 E -.356
(#define _deviceButton3Motion)71.822 514 S(3)17.512 E -.356
(#define _deviceButton4Motion)71.822 527 S(4)17.512 E -.356
(#define _deviceButton5Motion)71.822 540 S(5)17.512 E -.356
(#define _deviceButtonMotion)71.822 553 S(6)21.956 E -.356
(#define _deviceButtonGrab)71.822 566 S(7)30.844 E -.356
(#define _deviceOwnerGrabButton)71.822 579 S(8)8.624 E -.356
(#define _noExtensionEvent)71.822 592 S(9)30.844 E -.356
(#define XI_BadDevice)71.822 618 S(0)21.12 E -.356(#define XI_BadEvent)
71.822 631 S(1)25.564 E -.356(#define XI_BadMode)71.822 644 S(2)2.508 E
-.356(#define XI_DeviceBusy)71.822 657 S(3)16.676 E -.356
(#define XI_BadClass)71.822 670 S(4)25.564 E -.356
(/* Make XEventClass be a CARD32 for 64 bit servers.)71.822 696 S -.356
(Don't affect client)8.888 G 4.088(*d)76.266 709 S -.356(efinition of X\
EventClass since that would be a library interface change.)-4.444 G
4.088(*S)76.266 722 S -.356
(ee the top of X.h for more _XSERVER64 magic.)-4.444 G F0(82)282.5 769 Q
0 Cg EP
%%Page: 83 85
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF 2.75(XI)72 49 S(nput Extension Library)-2.75 E
(X11, Release 6.4)229.413 E/F1 8/Courier@0 SF -.356(*/)76.266 85 S -.356
(#ifdef _XSERVER64)71.822 98 S 19.448 -.356(typedef CARD32)71.822 111 T
-.356(XEventClass;)28.336 G -.356(#else)71.822 124 S 19.448 -.356
(typedef unsigned)71.822 137 T 20.284 -.356(long XEventClass;)4.444 H
-.356(#endif)71.822 150 S -.356
(/*******************************************************************)
71.822 176 S(*)76.266 189 Q 4.088(*E)76.266 202 S -.356
(xtension version structure.)-4.444 G(*)76.266 215 Q -.356(*/)76.266 228
S -.356(typedef struct {)71.822 254 S 29.172 -.356(int present;)107.374
267 T 20.284 -.356(short major_version;)107.374 280 T 20.284 -.356
(short minor_version;)107.374 293 T 4.088(}X)71.822 306 S -.356
(ExtensionVersion;)-4.444 G -.356(#endif /* _XI_H_ */)71.822 332 S F0
(83)282.5 769 Q 0 Cg EP
%%Page: 84 86
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF 2.75(XI)72 49 S(nput Extension Library)-2.75 E
(X11, Release 6.4)229.413 E(84)282.5 769 Q 0 Cg EP
%%Page: 1 87
%%BeginPageSetup
BP
%%EndPageSetup
/F0 13/Times-Bold@0 SF -1.196(Ta)239.126 98 S(ble of Contents)1.196 E/F1
11/Times-Roman@0 SF(1. Input Extension Ov)72 137 Q(ervie)-.165 E 13.846
(w.)-.275 G -2.75 11(................... 1)-2.846 H
(1.1. Design Approach)72 150 Q -2.75 11(...................... 1)16.464
H(1.2. Core Input De)72 163 Q 5.739(vices .)-.275 F -2.75 11
(..................... 1)11 H(1.3. Extension Input De)72 176 Q 10.623
(vices .)-.275 F -2.75 11(................... 1)11 H(1.3.1. Input De)72
189 Q(vice Classes)-.275 E -2.75 11(..................... 2)6.652 H
(1.4. Using Extension Input De)72 202 Q 9.094(vices .)-.275 F -2.75 11
(................. 2)11 H(2. Library Extension Requests)72 215 Q -2.75
11(.................... 3)7.29 H(2.1. W)72 228 Q(indo)-.44 E 2.75(wM)
-.275 G(anager Functions)-2.75 E -2.75 11(................... 3)9.842 H
(2.1.1. Changing the Core De)72 241 Q 2.989(vices .)-.275 F -2.75 11
(.................. 3)11 H(2.1.2. Ev)72 254 Q
(ent Synchronization and Core Grabs)-.165 E -2.75 11(............... 5)
9.611 H(2.1.3. Extension Acti)72 267 Q .33 -.165(ve G)-.275 H 5.596
(rabs .).165 F -2.75 11(................... 5)11 H(2.1.4. P)72 280 Q
(assi)-.165 E -.165(ve)-.275 G(ly Grabbing a K).165 E 10.81 -.165(ey .)
-.275 H -2.75 11(.................. 8)11.165 H(2.1.5. P)72 293 Q(assi)
-.165 E -.165(ve)-.275 G(ly Grabbing a Button).165 E -8.25 11
(.................. 1)14.913 H(0)-11 E(2.1.6. Tha)72 306 Q(wing a De)
-.165 E 2.549(vice .)-.275 F -8.25 11(..................... 1)11 H(3)-11
E(2.1.7. Controlling De)72 319 Q(vice F)-.275 E 10.777(ocus .)-.165 F
-8.25 11(.................. 1)11 H(5)-11 E(2.1.8. Controlling De)72 332
Q(vice Feedback)-.275 E -8.25 11(.................. 1)11.239 H(7)-11 E
(2.1.9. Ringing a Bell on an Input De)72 345 Q .844(vice .)-.275 F -8.25
11(................ 2)11 H(5)-11 E(2.1.10. Controlling De)72 358 Q
(vice Encoding)-.275 E -8.25 11(.................. 2)5.728 H(5)-11 E
(2.1.11. Controlling Button Mapping)72 371 Q -8.25 11
(.................. 2)9.094 H(8)-11 E
(2.1.12. Obtaining the State of a De)72 384 Q 7.884(vice .)-.275 F -8.25
11(................ 2)11 H(9)-11 E(2.2. Ev)72 397 Q 6.223(ents .)-.165 F
-8.25 11(......................... 3)11 H(1)-11 E(2.2.1. Ev)72 410 Q
(ent T)-.165 E .998(ypes .)-.88 F -8.25 11(....................... 3)11
H(2)-11 E(2.2.2. Ev)72 423 Q(ent Classes)-.165 E -8.25 11
(....................... 3)10.502 H(2)-11 E(2.2.3. Ev)72 436 Q
(ent Structures)-.165 E -8.25 11(...................... 3)12.647 H(3)-11
E(2.2.3.1. De)72 449 Q(vice K)-.275 E .33 -.165(ey E)-.275 H -.165(ve)
.165 G 4.21(nts .).165 F -8.25 11(.................... 3)11 H(3)-11 E
(2.2.3.2. De)72 462 Q(vice Button Ev)-.275 E 5.893(ents .)-.165 F -8.25
11(................... 3)11 H(4)-11 E(2.2.3.3. De)72 475 Q
(vice Motion Ev)-.275 E 3.451(ents .)-.165 F -8.25 11
(................... 3)11 H(5)-11 E(2.2.3.4. De)72 488 Q(vice F)-.275 E
(ocus Ev)-.165 E 9.732(ents .)-.165 F -8.25 11(................... 3)11
H(6)-11 E(2.2.3.5. De)72 501 Q(vice StateNotify Ev)-.275 E 3.154(ent .)
-.165 F -8.25 11(.................. 3)11 H(7)-11 E(2.2.3.6. De)72 514 Q
(vice Mapping Ev)-.275 E .404(ent .)-.165 F -8.25 11
(................... 3)11 H(8)-11 E(2.2.3.7. ChangeDe)72 527 Q
(viceNotify Ev)-.275 E 8.049(ent .)-.165 F -8.25 11(................. 3)
11 H(9)-11 E(2.2.3.8. Proximity Ev)72 540 Q 11.712(ents .)-.165 F -8.25
11(.................... 3)11 H(9)-11 E(2.3. Ev)72 553 Q
(ent Handling Functions)-.165 E -8.25 11(.................... 4)5.915 H
(0)-11 E(2.3.1. Determining the Extension V)72 566 Q 10.348(ersion .)
-1.221 F -8.25 11(............... 4)11 H(0)-11 E(2.3.2. Listing A)72 579
Q -.275(va)-.814 G(ilable De).275 E 10.491(vices .)-.275 F -8.25 11
(.................. 4)11 H(1)-11 E
(2.3.3. Enabling and Disabling Extension De)72 592 Q 4.21(vices .)-.275
F -8.25 11(............. 4)11 H(3)-11 E
(2.3.4. Changing the Mode of a De)72 605 Q 10.942(vice .)-.275 F -8.25
11(................ 4)11 H(5)-11 E(2.3.5. Initializing V)72 618 Q
(aluators on an Input De)-1.221 E 13.692(vice .)-.275 F -8.25 11
(............. 4)11 H(5)-11 E(2.3.6. Getting Input De)72 631 Q
(vice Controls)-.275 E -8.25 11(.................. 4)7.257 H(6)-11 E
(2.3.7. Changing Input De)72 644 Q(vice Controls)-.275 E -8.25 11
(................. 4)11.228 H(7)-11 E(2.3.8. Selecting Extension De)72
657 Q(vice Ev)-.275 E 11.404(ents .)-.165 F -8.25 11(............... 4)
11 H(8)-11 E(2.3.9. Determining Selected De)72 670 Q(vice Ev)-.275 E
3.473(ents .)-.165 F -8.25 11(............... 5)11 H(0)-11 E
(2.3.10. Controlling Ev)72 683 Q(ent Propag)-.165 E 11.162(ation .)-.055
F -8.25 11(................ 5)11 H(0)-11 E(2.3.11. Sending an Ev)72 696
Q 13.56(ent .)-.165 F -8.25 11(.................... 5)11 H(1)-11 E
(2.3.12. Getting Motion History)72 709 Q -8.25 11
(.................... 5)3.605 H(3)-11 E(2.3.12. Appendix A)72 722 Q
-8.25 11(....................... 5)12.174 H(5)-11 E/F2 11/Times-Bold@0
SF(i)286.471 769 Q 0 Cg EP
%%Page: 2 88
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Bold@0 SF 2.75(XI)72 49 S(nput Extension Library)-2.75 E
(X11, Release 6.4)229.413 E(ii)284.942 769 Q 0 Cg EP
%%Trailer
end
%%EOF
