%!PS-Adobe-3.0
%%Creator: groff version 1.19.2
%%CreationDate: Mon Dec 29 01:56:35 2008
%%DocumentNeededResources: font Times-Bold
%%+ font Times-Italic
%%+ font Times-Roman
%%+ font Courier-Bold
%%DocumentSuppliedResources: procset grops 1.19 2
%%Pages: 17
%%PageOrder: Ascend
%%DocumentMedia: Default 612 792 0 () ()
%%Orientation: Portrait
%%EndComments
%%BeginDefaults
%%PageMedia: Default
%%EndDefaults
%%BeginProlog
%%BeginResource: procset grops 1.19 2
%!PS-Adobe-3.0 Resource-ProcSet
/setpacking where{
pop
currentpacking
true setpacking
}if
/grops 120 dict dup begin
/SC 32 def
/A/show load def
/B{0 SC 3 -1 roll widthshow}bind def
/C{0 exch ashow}bind def
/D{0 exch 0 SC 5 2 roll awidthshow}bind def
/E{0 rmoveto show}bind def
/F{0 rmoveto 0 SC 3 -1 roll widthshow}bind def
/G{0 rmoveto 0 exch ashow}bind def
/H{0 rmoveto 0 exch 0 SC 5 2 roll awidthshow}bind def
/I{0 exch rmoveto show}bind def
/J{0 exch rmoveto 0 SC 3 -1 roll widthshow}bind def
/K{0 exch rmoveto 0 exch ashow}bind def
/L{0 exch rmoveto 0 exch 0 SC 5 2 roll awidthshow}bind def
/M{rmoveto show}bind def
/N{rmoveto 0 SC 3 -1 roll widthshow}bind def
/O{rmoveto 0 exch ashow}bind def
/P{rmoveto 0 exch 0 SC 5 2 roll awidthshow}bind def
/Q{moveto show}bind def
/R{moveto 0 SC 3 -1 roll widthshow}bind def
/S{moveto 0 exch ashow}bind def
/T{moveto 0 exch 0 SC 5 2 roll awidthshow}bind def
/SF{
findfont exch
[exch dup 0 exch 0 exch neg 0 0]makefont
dup setfont
[exch/setfont cvx]cvx bind def
}bind def
/MF{
findfont
[5 2 roll
0 3 1 roll
neg 0 0]makefont
dup setfont
[exch/setfont cvx]cvx bind def
}bind def
/level0 0 def
/RES 0 def
/PL 0 def
/LS 0 def
/MANUAL{
statusdict begin/manualfeed true store end
}bind def
/PLG{
gsave newpath clippath pathbbox grestore
exch pop add exch pop
}bind def
/BP{
/level0 save def
1 setlinecap
1 setlinejoin
72 RES div dup scale
LS{
90 rotate
}{
0 PL translate
}ifelse
1 -1 scale
}bind def
/EP{
level0 restore
showpage
}def
/DA{
newpath arcn stroke
}bind def
/SN{
transform
.25 sub exch .25 sub exch
round .25 add exch round .25 add exch
itransform
}bind def
/DL{
SN
moveto
SN
lineto stroke
}bind def
/DC{
newpath 0 360 arc closepath
}bind def
/TM matrix def
/DE{
TM currentmatrix pop
translate scale newpath 0 0 .5 0 360 arc closepath
TM setmatrix
}bind def
/RC/rcurveto load def
/RL/rlineto load def
/ST/stroke load def
/MT/moveto load def
/CL/closepath load def
/Fr{
setrgbcolor fill
}bind def
/setcmykcolor where{
pop
/Fk{
setcmykcolor fill
}bind def
}if
/Fg{
setgray fill
}bind def
/FL/fill load def
/LW/setlinewidth load def
/Cr/setrgbcolor load def
/setcmykcolor where{
pop
/Ck/setcmykcolor load def
}if
/Cg/setgray load def
/RE{
findfont
dup maxlength 1 index/FontName known not{1 add}if dict begin
{
1 index/FID ne{def}{pop pop}ifelse
}forall
/Encoding exch def
dup/FontName exch def
currentdict end definefont pop
}bind def
/DEFS 0 def
/EBEGIN{
moveto
DEFS begin
}bind def
/EEND/end load def
/CNT 0 def
/level1 0 def
/PBEGIN{
/level1 save def
translate
div 3 1 roll div exch scale
neg exch neg exch translate
0 setgray
0 setlinecap
1 setlinewidth
0 setlinejoin
10 setmiterlimit
[]0 setdash
/setstrokeadjust where{
pop
false setstrokeadjust
}if
/setoverprint where{
pop
false setoverprint
}if
newpath
/CNT countdictstack def
userdict begin
/showpage{}def
/setpagedevice{}def
}bind def
/PEND{
countdictstack CNT sub{end}repeat
level1 restore
}bind def
end def
/setpacking where{
pop
setpacking
}if
%%EndResource
%%EndProlog
%%BeginSetup
%%BeginFeature: *PageSize Default
<< /PageSize [ 612 792 ] /ImagingBBox null >> setpagedevice
%%EndFeature
%%IncludeResource: font Times-Bold
%%IncludeResource: font Times-Italic
%%IncludeResource: font Times-Roman
%%IncludeResource: font Courier-Bold
grops begin/DEFS 1 dict def DEFS begin/u{.001 mul}bind def end/RES 72
def/PL 792 def/LS false def/ENC0[/asciicircum/asciitilde/Scaron/Zcaron
/scaron/zcaron/Ydieresis/trademark/quotesingle/Euro/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/space/exclam/quotedbl/numbersign/dollar/percent
/ampersand/quoteright/parenleft/parenright/asterisk/plus/comma/hyphen
/period/slash/zero/one/two/three/four/five/six/seven/eight/nine/colon
/semicolon/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J/K/L/M/N/O
/P/Q/R/S/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright/circumflex
/underscore/quoteleft/a/b/c/d/e/f/g/h/i/j/k/l/m/n/o/p/q/r/s/t/u/v/w/x/y
/z/braceleft/bar/braceright/tilde/.notdef/quotesinglbase/guillemotleft
/guillemotright/bullet/florin/fraction/perthousand/dagger/daggerdbl
/endash/emdash/ff/fi/fl/ffi/ffl/dotlessi/dotlessj/grave/hungarumlaut
/dotaccent/breve/caron/ring/ogonek/quotedblleft/quotedblright/oe/lslash
/quotedblbase/OE/Lslash/.notdef/exclamdown/cent/sterling/currency/yen
/brokenbar/section/dieresis/copyright/ordfeminine/guilsinglleft
/logicalnot/minus/registered/macron/degree/plusminus/twosuperior
/threesuperior/acute/mu/paragraph/periodcentered/cedilla/onesuperior
/ordmasculine/guilsinglright/onequarter/onehalf/threequarters
/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE
/Ccedilla/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex
/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis
/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn
/germandbls/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash
/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]def
/Courier-Bold@0 ENC0/Courier-Bold RE/Times-Roman@0 ENC0/Times-Roman RE
/Times-Italic@0 ENC0/Times-Italic RE/Times-Bold@0 ENC0/Times-Bold RE
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
BP
%%EndPageSetup
/F0 12/Times-Bold@0 SF -.3(Fo)192.636 123 S(nt ser).3 E -.12(ve)-.12 G 3
(ri).12 G(mplementation o)-3 E -.12(ve)-.12 G -.12(rv).12 G(iew).12 E/F1
10/Times-Italic@0 SF(Dave Lemk)263.2 159 Q(e)-.1 E/F2 10/Times-Roman@0
SF(Netw)219.435 177 Q(ork Computing De)-.1 E(vices, Inc.)-.25 E(Cop)
181.655 189 Q(yright \251 1991 Netw)-.1 E(ork Computing De)-.1 E
(vices, Inc.)-.25 E/F3 10/Times-Bold@0 SF 2.5(1. Intr)72 225 R(oduction)
-.18 E F2(The font serv)97 240.6 Q(er uses the same client/serv)-.15 E
(er model as X.)-.15 E(The basic structure is that of the X Consor)5 E
(-)-.2 E(tium X11R5 X serv)72 252.6 Q(er)-.15 E 2.5(,a)-.4 G
(nd those who kno)-2.5 E 2.5(wt)-.25 G(hat code should \214nd the)-2.5 E
F1(os)2.5 E F2(and)2.5 E F1(difs)2.5 E F2(\(de)2.5 E
(vice independent font)-.25 E(serv)72 264.6 Q(er\) layers f)-.15 E
(amiliar)-.1 E(.)-.55 E/F4 8/Courier-Bold@0 SF(+-----------------+)187.2
300.6 Q 24(+-----| difs)158.4 309.6 R(|------+)33.6 E 24(|+)158.4 318.6
S 24(-----------------+ |)-24 F 144(||)158.4 327.6 S 81.6
(+----+ +------------+)148.8 336.6 R 4.8(|o)148.8 345.6 S 72 4.8(s| |r)
-4.8 H 4.8(enderers |)-4.8 F 81.6(+----+ +------------+)148.8 354.6 R F3
(De\214nitions)72 376.2 Q F2 11.5<8352>72 391.8 S(enderer)-11.5 E 5(.C)
-.55 G(ode that kno)-5 E(ws ho)-.25 E 2.5(wt)-.25 G 2.5(ot)-2.5 G(ak)
-2.5 E 2.5(ef)-.1 G(ont data in its ra)-2.5 E 2.5(wf)-.15 G
(ormat and con)-2.5 E -.15(ve)-.4 G(rt it to the font serv).15 E(er')
-.15 E(s)-.55 E(format.)87 403.8 Q 11.5<8346>72 419.4 S(ont P)-11.65 E
(ath Element \(FPE\).)-.15 E(An instance of a renderer)5 E 2.5(,a)-.4 G
(ssociated with a speci\214c font source, \(ie a direc-)-2.5 E
(tory of PCF bitmaps\).)87 431.4 Q(The)97 447 Q F1(difs)2.5 E F2
(layer interprets the requests, and handles the renderer independent w)
2.5 E 2.5(ork. This)-.1 F(includes error)2.5 E
(checking of requests, and the top le)72 459 Q -.15(ve)-.25 G 2.5(lf).15
G(ont database.)-2.5 E(It also contains v)5 E
(arious utility functionality such as)-.25 E(caching and byte sw)72 471
Q(apping.)-.1 E(The)97 486.6 Q F1(os)2.5 E F2(layer sets up the communi\
cations channel, reads requests and sends the ra)2.5 E 2.5(wd)-.15 G
(ata of replies)-2.5 E(and e)72 498.6 Q -.15(ve)-.25 G 2.5(nts. It).15 F
(also handles font serv)2.5 E
(er con\214guration issues, controlled by command line ar)-.15 E
(guments and a)-.18 E(con\214guration \214le.)72 510.6 Q(The renderer l\
ayer contains all font-speci\214c code, and is responsible for renderin\
g a font \(which may)97 526.2 Q(mean just reading a bitmap from disk, o\
r may include scaling of outline data\), computing a fonts properties)72
538.2 Q(and header information.)72 550.2 Q F3 2.5(2. Startup)72 574.2 R
F2(At startup, the font serv)97 589.8 Q(er handles an)-.15 E 2.5(yc)-.15
G(ommand line ar)-2.5 E(guments, initializes an)-.18 E 2.5(yO)-.15 G
(S-speci\214c data, and)-2.5 E(then sets up the communications.)72 601.8
Q -1.11(Va)5 G(rious internal databases are then initialized \(e)1.11 E
(xtensions, the font cata-)-.15 E(logue, etc\).)72 613.8 Q(The con\214g\
 \214le, an ordered list of font sources, cache size hints, def)97 629.4
Q(ault resolutions, and security)-.1 E(information, is then read in.)72
641.4 Q(Each of these source names could be a directory name, the name \
of another)5 E(font serv)72 653.4 Q(er)-.15 E 2.5(,o)-.4 G 2.5(rs)-2.5 G
(ome other string that a particular renderer can recognize.)-2.5 E
(The def)97 669 Q(ault font catalogue is then b)-.1 E
(uilt up by taking each of the font source names and comparing it)-.2 E
(with the names a renderer recognizes.)72 681 Q
(The one that matches this name will become attached to this source.)5 E
2.5(Ar)72 693 S(enderer will `)-2.5 E(`understand')-.74 E 2.5('an)-.74 G
(ame if it can parse the data in that directory)-2.5 E 2.5(,o)-.65 G 2.5
(rr)-2.5 G(ecognize that it is a v)-2.5 E(alid)-.25 E(font serv)72 705 Q
(er address, or recognizes a special string.)-.15 E
(Thus a collection of v)5 E(alid font path elements is b)-.25 E
(uilt up.)-.2 E(Each)72 717 Q F3(FPE)2.5 E F2(has a set of functions to\
 support opening a font and accessing its data.)2.5 E 0 Cg EP
%%Page: 2 2
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(-2-)282.17 48 Q -.15(Fo)97 84 S
(nt information is accessed via method functions in the).15 E/F1 10
/Times-Bold@0 SF -.25(Fo)2.5 G(nt.).25 E F0
(When a font is \214rst loaded, the)5 E
(header information and properties are loaded/computed.)72 96 Q
(The font also initializes its function pointers to do)5 E(the proper w)
72 108 Q 2.5(ork. When)-.1 F
(speci\214c metrics or bitmaps are required, the)2.5 E 2.5(ya)-.15 G
(re access via the font')-2.5 E 2.5(sf)-.55 G 2.5(unctions. A)-2.5 F
(disk-based bitmap font will probably w)72 120 Q
(ant to load all data when \214rst accessed.)-.1 E 2.5(As)5 G
(caled font or FS font)-2.5 E(may w)72 132 Q(ant to do more selecti)-.1
E .3 -.15(ve c)-.25 H 2.5(aching. In).15 F
(both cases, the renderer can use the utility functions to k)2.5 E(eep)
-.1 E(track of this data.)72 144 Q(Changing v)5 E
(alues of bitmap formats could result in the font ha)-.25 E
(ving multiple copies of data)-.2 E(in dif)72 156 Q(ferent formats, whi\
ch the renderer may use the utility functions to manage.)-.25 E F1 2.5
(3. P)72 180 R(er client pr)-.2 E(ocessing)-.18 E F0
(Each entity attaching to the serv)97 195.6 Q(er is a client.)-.15 E
(Each client has its o)5 E(wn authorization and resolution)-.25 E
(information, and its o)72 207.6 Q(wn vie)-.25 E 2.5(wo)-.25 G 2.5(ft)
-2.5 G(he font database.)-2.5 E 2.5(Af)5 G
(ont open to one client may not be open to another)-2.5 E(,)-.4 E
(though the font serv)72 219.6 Q(er may ha)-.15 E .3 -.15(ve i)-.2 H 2.5
(tl).15 G(oaded.)-2.5 E(After initialization, ne)97 235.2 Q 2.5(wc)-.25
G(lients can attach to the font serv)-2.5 E(er and ha)-.15 E .3 -.15
(ve t)-.2 H(heir requests processed.).15 E -.15(Fo)5 G(r).15 E
(each request that is searching for a font)72 247.2 Q F1(\(OpenBitmapF)
2.5 E(ont\))-.25 E F0(or listing font names)2.5 E F1(\(ListF)2.5 E
(onts, List-)-.25 E -.25(Fo)72 259.2 S(ntsW).25 E(ithXInf)-.18 E(o\),)
-.25 E F0(the pattern is gi)2.5 E -.15(ve)-.25 G 2.5(nt).15 G 2.5(oe)
-2.5 G(ach)-2.5 E F1(FPE.)2.5 E(OpenBitmapF)97 274.8 Q(ont)-.25 E F0
(will tak)2.5 E 2.5(et)-.1 G(he supplied name and pass it to each)-2.5 E
F1(FPE.)2.5 E F0(The)5 E F1(FPE)2.5 E F0(will return one of)2.5 E
(three things:)72 286.8 Q/F2 10/Times-Italic@0 SF(Success,)2.5 E F0
(and the font object;)2.5 E F2(BadF)2.5 E(ont,)-1.05 E F0
(because it doesn')2.5 E 2.5(tk)-.18 G(no)-2.5 E 2.5(wt)-.25 G
(he font; or)-2.5 E F2(BadF)2.5 E(ont)-1.05 E F0(and an)2.5 E
(alias name, when it has an alias for the font.)72 298.8 Q(If)5 E F2
(Success)2.5 E F0(is returned, the serv)2.5 E
(er goes on to create an ID \(or)-.15 E(\214nd an e)72 310.8 Q
(xisting one\) and return a reply)-.15 E 5(.I)-.65 G(f)-5 E F2(BadF)2.5
E(ont)-1.05 E F0(is returned, it goes on to the ne)2.5 E(xt)-.15 E F1
(FPE.)2.5 E F0(If it reaches the)5 E
(end without \214nding a font, an error is returned to the client.)72
322.8 Q(If an alias is returned, the search resets to the)5 E(\214rst)72
334.8 Q F1(FPE)2.5 E F0(and starts ag)2.5 E
(ain, using the alias as the ne)-.05 E 2.5(wf)-.25 G(ont name.)-2.5 E
(This allo)5 E(ws aliases to w)-.25 E(ork across dif)-.1 E(ferent)-.25 E
F1(FPEs,)72 346.8 Q F0(without an)2.5 E 2.5(yo)-.15 G
(rdering restrictions.)-2.5 E(When each)97 362.4 Q F1(FPE)2.5 E F0
(recei)2.5 E -.15(ve)-.25 G 2.5(saf).15 G
(ont name to open, it searches for the font')-2.5 E 2.5(se)-.55 G 2.5
(xistence. If)-2.65 F(it can')2.5 E 2.5<748c>-.18 G(nd, or)-2.5 E
(can only \214nd an alias, it returns)72 374.4 Q F2(BadF)2.5 E(ont)-1.05
E F0(and an)2.5 E 2.5(ya)-.15 G 2.5(lias. If)-2.5 F
(it \214nds the font, it checks the authorization and)2.5 E
(license status of the font to that of the client.)72 386.4 Q
(If it passes, it then creates a ne)5 E 2.5(wf)-.25 G
(ont object, and reads and/or)-2.5 E(computes at least the font')72
398.4 Q 2.5(sh)-.55 G(eader information and properties.)-2.5 E
(\(It may also w)5 E(ant to produce the bitmaps)-.1 E(and e)72 410.4 Q
(xtents, b)-.15 E(ut that choice is left to the renderer)-.2 E(.\))-.55
E(When a font')97 426 Q 2.5(si)-.55 G(nformation is accessed, the inter\
preter routine looks up the font ID to \214nd the font)-2.5 E
(object, and then uses the font')72 438 Q 2.5(sa)-.55 G
(ccess functions to get the data.)-2.5 E
(These functions will return the data in the)5 E(format e)72 450 Q
(xpected by the client.)-.15 E F1 2.5(4. Client)72 486 R(shutdo)2.5 E
(wn)-.1 E F0(When a client disconnects, all its references to an)97
501.6 Q 2.5(yf)-.15 G(onts it still has opened are remo)-2.5 E -.15(ve)
-.15 G 2.5(d. If).15 F(no other)2.5 E
(clients reference these fonts, the)72 513.6 Q 2.5(ym)-.15 G
(ay be freed, though the serv)-2.5 E(er may choose to cache them.)-.15 E
F1 2.5(5. Ser)72 549.6 R -.1(ve)-.1 G 2.5(rr).1 G(eset and cleanup)-2.68
E F0 2.5(As)97 565.2 S(erv)-2.5 E(er may be reset to \215ush the caches\
, re-read the con\214guration \214le, and a ne)-.15 E 2.5(wl)-.25 G
(ist of)-2.5 E F1(FPEs)2.5 E F0(to be)2.5 E -.2(bu)72 577.2 S
(ilt, via an OS-speci\214c outside action.).2 E
(In UNIX, this will be handled via signals; in VMS it could be han-)5 E
(dled via an async trap or e)72 589.2 Q -.15(ve)-.25 G(nt \215ag.).15 E
F1 2.5(6. Ser)72 625.2 R -.1(ve)-.1 G 2.5(ro).1 G(f\215oading)-2.5 E F0
(In order to deal with numerous clients without major performance de)97
640.8 Q(gradation, the serv)-.15 E(er must be)-.15 E
(able to clone itself, or pro)72 652.8 Q
(vide the client with a substitute serv)-.15 E
(er via the alternate serv)-.15 E(er mechanism.)-.15 E(Since)5 E
(both strate)72 664.8 Q(gies ha)-.15 E .3 -.15(ve t)-.2 H
(heir uses, both will be supported.).15 E -.15(Fo)5 G 2.5(ras).15 G(erv)
-2.5 E(er that has plenty of host memory or CPU,)-.15 E -.2(bu)72 676.8
S 2.5(ti).2 G(nsuf)-2.5 E(\214cient sock)-.25 E
(ets, cloning may be a good choice.)-.1 E -.15(Fo)5 G 2.5(rah).15 G
(ost with limited memory)-2.5 E 2.5(,a)-.65 G(ssigning an alter)-2.5 E
(-)-.2 E(nate serv)72 688.8 Q(er on a dif)-.15 E
(ferent host may be a good choice.)-.25 E(The serv)5 E(er will mak)-.15
E 2.5(et)-.1 G(his decision based on con\214gu-)-2.5 E(ration options.)
72 700.8 Q 0 Cg EP
%%Page: 3 3
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(-3-)282.17 48 Q/F1 10/Times-Bold@0 SF 2.5(7. F)
72 84 R(ont ser)-.25 E -.1(ve)-.1 G 2.5(rd).1 G(ata structur)-2.5 E(es)
-.18 E F0(The)97 103.2 Q F1(Client)2.5 E F0(handles per)2.5 E
(-client information and interpreter status.)-.2 E/F2 8/Courier-Bold@0
SF(typedef struct _Client {)97 130.2 Q 38.4(int index;)116.2 139.2 R
19.2(pointer osPrivate;)116.2 148.2 R 38.4(int noClientException;)116.2
157.2 R 38.4(int \(**requestVector\))116.2 166.2 R(\(\);)4.8 E 19.2
(pointer requestBuffer;)116.2 175.2 R 38.4(int clientGone;)116.2 184.2 R
38.4(int sequence;)116.2 193.2 R 33.6(Bool swapped;)116.2 202.2 R 33.6
(long last_request_time;)116.2 211.2 R 33.6(void \(*pSwapReplyFunc\))
116.2 220.2 R(\(\);)4.8 E(AuthContextPtr auth;)116.2 229.2 Q 28.8
(char *catalogues;)116.2 238.2 R 38.4(int num_catalogues;)116.2 247.2 R
33.6(Mask eventmask;)116.2 256.2 R(fsResolution *resolutions;)116.2
265.2 Q 38.4(int num_resolutions;)116.2 274.2 R 52.8(}C)97 283.2 S
(lientRec, *ClientPtr;)-52.8 E F0(The)97 308.4 Q F1 -.25(Fo)2.5 G(nt).25
E F0(contains basic font information, including header information and \
properties.)2.5 E F2(typedef struct _font)97 335.4 Q({)33.6 E 24
(int refcount;)140.2 344.4 R(fsHeader header;)140.2 353.4 Q 14.4
(fsBitmapFormat format;)140.2 362.4 R 24(int \(*get_glyphs\)\(\);)140.2
371.4 R 24(int \(*get_metrics\)\(\);)140.2 380.4 R 24
(int \(*get_extents\)\(\);)140.2 389.4 R 24(int \(*get_bitmaps\)\(\);)
140.2 398.4 R 24(int \(*unload_font\)\(\);)140.2 407.4 R 38.4
(FontPathElementPtr fpe;)140.2 416.4 R 24(int *client_ids;)140.2 425.4 R
19.2(Bool restricted_font;)140.2 434.4 R 38.4(}F)97 443.4 S
(ontRec *FontPtr;)-38.4 E F0(The)97 468.6 Q F1(ClientF)2.5 E(ont)-.25 E
F0(is a wrapper on top of)2.5 E F1 -.25(Fo)2.5 G(nt,).25 E F0
(handling client speci\214c font information.)2.5 E F2
(typedef struct _clientfont {)97 495.6 Q 4.8(FontPtr font;)140.2 504.6 R
24(int clientindex;)140.2 513.6 R 38.4(}C)97 522.6 S
(lientFontRec, *ClientFontRec;)-38.4 E F0(The)97 547.8 Q F1 -.5(Au)2.5 G
(thContext).5 E F0(contains authorization information.)2.5 E F2 4.8
(typedef struct)97 578.4 R 33.6(_authcontext {)4.8 F 19.2
(char *authname;)140.2 587.4 R 19.2(char *authdata;)140.2 596.4 R 19.2
(FSID acid;)140.2 605.4 R 38.4(}A)97 614.4 S
(uthContextRec *AuthContextPtr;)-38.4 E F1 2.5(8. F)72 660 R(ont P)-.25
E(ath Element functions)-.1 E F0
(These functions are associated with each renderer)97 675.6 Q 2.5(,a)-.4
G(nd handle all aspects of font access.)-2.5 E -.15(Fo)5 G(nt data).15 E
(access is controlled via another set of functions described later)72
687.6 Q 5(.T)-.55 G 2.5(hese functions)-5 F(are intended to support)2.5
E(the R5 X serv)72 699.6 Q(er as well as the font serv)-.15 E(er)-.15 E
5(.A)-.55 G 2.5(sar)-5 G
(esult, some design decisions were made to support both)-2.5 E 2.5
(models. When)72 711.6 R(the)2.5 E/F3 10/Times-Italic@0 SF(difs)2.5 E F0
(layer needs to access a font, it uses these functions.)2.5 E 0 Cg EP
%%Page: 4 4
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(-4-)282.17 48 Q/F1 8/Courier-Bold@0 SF
(typedef unsigned long)97 81 Q(Mask;)28.8 E(typedef unsigned char)97 99
Q(*pointer;)28.8 E(typedef struct _FontPathElement {)97 117 Q 38.4
(int name_length;)116.2 126 R 28.8(char *name;)116.2 135 R 38.4
(int type;)116.2 144 R 38.4(int refcount;)116.2 153 R 19.2
(pointer private;)116.2 162 R 52.8(}F)97 171 S
(ontPathElementRec, *FontPathElementPtr;)-52.8 E F0(The FPE')97 196.2 Q
2.5(sr)-.55 G(eference count is incremented when it is added to the cur\
rent list of FPEs and when it)-2.5 E(opens a font.)72 208.2 Q(It is dec\
remented when it is no longer in the current list and when it closes a \
font.)5 E(All refer)5 E(-)-.2 E(ence changes are handled by the)72 220.2
Q/F2 10/Times-Italic@0 SF(difs)2.5 E F0(layer)2.5 E 5(.T)-.55 G
(he count is required to support font catalogue changes that)-5 E
(may occur while the fontserv)72 232.2 Q(er has fonts open, and k)-.15 E
(eeps FPEs from being lost.)-.1 E F1(typedef struct FontNames {)97 271.8
Q 4.8(int nnames;)116.2 280.8 R 4.8(int size;)116.2 289.8 R 4.8
(int *length;)116.2 298.8 R(char **names;)116.2 307.8 Q 57.6(}F)97 316.8
S(ontNamesRec, *FontNamesPtr;)-57.6 E(typedef struct {)97 334.8 Q 19.2
(Bool \(*name_check\)\(\);)140.2 343.8 R 24(int \(*init_fpe\)\(\);)140.2
352.8 R 24(int \(*reset_fpe\)\(\);)140.2 361.8 R 24
(int \(*free_fpe\)\(\);)140.2 370.8 R 24(int \(*open_font\)\(\);)140.2
379.8 R 24(int \(*close_font\)\(\);)140.2 388.8 R 24
(int \(*list_fonts\)\(\);)140.2 397.8 R 24
(int \(*start_list_fonts_with_info\)\(\);)140.2 406.8 R 24
(int \(*list_next_font_with_info\)\(\);)140.2 415.8 R 24
(int \(*wakeup_fpe\)\(\);)140.2 424.8 R 24(int \(*client_died\);)140.2
433.8 R 24(FontNamesPtr renderer_names;)140.2 442.8 R 4.8(}F)97 451.8 S
(PEFunctions;)-4.8 E 24(int init_fpe_type\(Bool)97 469.8 R
(\(name_func\)\(\),)4.8 E
(int \(init_func\)\(\), int \(free_func\)\(\), int \(reset_func\),)183.4
478.8 Q(int \(open_func\)\(\), int \(close_func\)\(\),)183.4 487.8 Q
(int \(list_func\)\(\),)183.4 496.8 Q
(int \(start_lfwi_func\)\(\), int \(next_lfwi_func\)\(\),)183.4 505.8 Q
(int \(wakeup_func\)\(\),)183.4 514.8 Q(int \(client_died_func\)\(\))
183.4 523.8 Q(\))183.4 532.8 Q F0
(This is called by the renderer when it is initialized at the be)72 570
Q(ginning of time, and sets up an FPEFunctions)-.15 E
(entry for the renderer)72 582 Q(.)-.55 E(The)72 597.6 Q/F3 10
/Times-Bold@0 SF(FPEFunctions)2.5 E F0(ha)2.5 E .3 -.15(ve t)-.2 H
(he follo).15 E(wing parameters:)-.25 E F1 19.2(Bool name_check\(char)97
628.2 R(*name\);)4.8 E F0(If)72 653.4 Q F2(name)2.5 E F0
(is something the renderer recognizes as a v)2.5 E
(alid font source name, it return T)-.25 E(rue, otherwise F)-.35 E
(alse.)-.15 E(ie, if)72 665.4 Q F2(name)2.5 E F0
(is a directory name, or is pre\214x)2.5 E(ed by the renderer')-.15 E
2.5(sp)-.55 G(re\214x, and the directory contains font data)-2.5 E
(the renderer can interpret, it w)72 677.4 Q(ould return T)-.1 E(rue.)
-.35 E F1 24(int init_fpe\(FontPathElementPtr)97 708 R(fpe\);)4.8 E 0 Cg
EP
%%Page: 5 5
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(-5-)282.17 48 Q(Does an)72 84 Q 2.5(yi)-.15 G
(nitialization w)-2.5 E(ork for the renderer)-.1 E 5(.T)-.55 G
(he name in)-5 E/F1 10/Times-Italic@0 SF(fpe)2.5 E F0
(will be one whose pre\214x matches the list)2.5 E
(returned when the renderer w)72 96 Q(as initialized.)-.1 E/F2 8
/Courier-Bold@0 SF 24(int reset_fpe\(FontPathElementPtr)97 126.6 R
(fpe\);)4.8 E F0 -.7(Te)72 151.8 S(lls).7 E F1(fpe)2.5 E F0(to reset an)
2.5 E 2.5(yi)-.15 G(nternal state about what fonts it has a)-2.5 E -.25
(va)-.2 G 2.5(ilable. This).25 F(will typically be called because)2.5 E
(the font serv)72 163.8 Q(er')-.15 E(s)-.55 E/F3 10/Times-Bold@0 SF(FPE)
2.5 E F0(search list has been changed.)2.5 E(The)5 E F1(fpe)2.5 E F0
(should reset an)2.5 E 2.5(yc)-.15 G(ached state of a)-2.5 E -.25(va)-.2
G(ilable fonts).25 E(\(ie, re-read this)72 175.8 Q F1(fonts.dir\))A F0
(when)A F2 24(int free_fpe\(FontPathElementPtr)97 206.4 R(fpe\);)4.8 E
F0(Frees an)72 231.6 Q 2.5(yr)-.15 G(enderer)-2.5 E
(-speci\214c data and closes an)-.2 E 2.5<798c>-.15 G(les or sock)-2.5 E
(ets.)-.1 E F2 24(int open_font\(pointer)97 262.2 R
(client, FontPathElementPtr fpe, Mask flags,)4.8 E
(char *fontname, int namelength,)183.4 271.2 Q
(fsBitmapFormat format_hint, fsBitmapFormatMask format_mask,)183.4 280.2
Q(XID fontid, FontPtr *ppfont, char **alias\);)183.4 289.2 Q F0
(Opens the font.)72 314.4 Q(The bits mark)5 E(ed by the)-.1 E F1
(format_mask)A F0(in)A F1(format_hint)2.5 E F0
(are used where applicable.)2.5 E(The result-)5 E(ing F)72 326.4 Q
(ontPtr is returned in)-.15 E F1(ppfont.)2.5 E F0(The)5 E F1(client)2.5
E F0(is optional state information for use with blocking renderers.)2.5
E(If the)72 338.4 Q F1(fontname)2.5 E F0(resolv)74.5 350.4 Q
(es to an alias, it is returned in)-.15 E F1(alias)2.5 E F0(with a)2.5 E
F1 -1.05(Fo)2.5 G(ntNameAlias)1.05 E F0(error)2.5 E 5(.T)-.55 G
(his tells the calling code to start)-5 E(searching ag)72 362.4 Q
(ain, using)-.05 E F1(alias)2.5 E F0(as the font name.)2.5 E
(The renderer is e)5 E(xpected to \214ll in an)-.15 E 2.5(yi)-.15 G
(nformation speci\214ed)-2.5 E(by the)72 374.4 Q F1<8d61>2.5 E(gs.)-.1 E
F0(Possible \215ags v)97 390 Q(alues are:)-.25 E F2
(#define FontLoadInfo)97 417 Q 67.2(0x0001 /*)19.2 F
(font header info */)4.8 E(#define FontLoadProps)97 426 Q 67.2
(0x0002 /*)14.4 F(font properties */)4.8 E
(#define FontLoadMetrics 0x0004)97 435 Q(/* font extents */)72 E
(#define FontLoadBitmaps 0x0008)97 444 Q(/* glyph bitmaps */)72 E
(#define FontLoadAll)97 453 Q(0x000f)24 E(#define FontOpenSync)97 462 Q
67.2(0x0010 /*)19.2 F(force synchronous loading */)4.8 E F0
(Once a font has been opened, the serv)72 487.2 Q
(er may place it and the pattern it matched into a name cache, to a)-.15
E -.2(vo)-.2 G(id).2 E(length)72 499.2 Q 2.5(ys)-.05 G
(earching if the font is reopened.)-2.5 E
(If the renderer does not wish the font to be in this cache \(for)5 E
(licensing reasons\), it should set the font')72 511.2 Q(s)-.55 E F1
-.37(re)2.5 G(stricted_access).37 E F0(\215ag.)2.5 E F2 24
(int close_font\(FontPtr)97 541.8 R(pfont\);)4.8 E F0
(Frees up all the data associated with the font.)72 567 Q F2 24
(int list_fonts\(pointer)97 597.6 R(client, FontPathElementPtr fpe,)4.8
E(char *pattern, int pattern_length, int maxnames,)183.4 606.6 Q
(FontNamesPtr *paths\);)183.4 615.6 Q F0(Returns in)72 640.8 Q F1(paths)
2.5 E F0(up to)2.5 E F1(maxnames)2.5 E F0
(font names the fpe recognizes as matching the gi)2.5 E -.15(ve)-.25 G
2.5(np).15 G(attern.)-2.5 E F2 24
(int start_list_fonts_with_info\(pointer)97 671.4 R(client,)4.8 E
(FontPathElementPtr fpe, char *pattern, int pattern_length,)183.4 680.4
Q(int maxnames, pointer fpe_data\);)183.4 689.4 Q F0(Initiates a)72
714.6 Q F3(ListF)2.5 E(ontsW)-.25 E(ithXInf)-.18 E(o.)-.25 E F0 -.8(Ty)5
G(pically).8 E 2.5(,ad)-.65 G(isk-based renderer will do the equi)-2.5 E
-.25(va)-.25 G(lent of ListF).25 E(onts to)-.15 E -.05(ga)72 726.6 S
(ther all the font names matching the pattern.).05 E 2.5(Af)5 G
(ont serv)-2.5 E(er renderer will send the request.)-.15 E F1(fpe_data)5
E 0 Cg EP
%%Page: 6 6
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(-6-)282.17 48 Q(pro)72 84 Q
(vides a handle for an)-.15 E 2.5(yF)-.15 G(PE-pri)-2.5 E -.25(va)-.25 G
(te data that needs to be passed in later via).25 E/F1 10/Times-Bold@0
SF(list_next_f)2.5 E(ont_with_inf)-.25 E(o\(\),)-.25 E F0 -.15(eg)72 96
S 2.5(,t).15 G(he list of font names for a disk-based renderer)-2.5 E(.)
-.55 E/F2 8/Courier-Bold@0 SF 24(int list_next_font_with_info\(pointer)
97 126.6 R(client, FontPathElementPtr fpe,)4.8 E
(char **name, int *namelen, FontInfoPtr &pinfo,)183.4 135.6 Q
(int &num_fonts, pointer fpe_data\);)183.4 144.6 Q F0(Returns the ne)72
169.8 Q(xt font')-.15 E 2.5(si)-.55 G 2.5(nformation. The)-2.5 F
(renderer should k)2.5 E(eep an)-.1 E 2.5(ys)-.15 G
(tate it requires in the)-2.5 E/F3 10/Times-Italic@0 SF(fpe_data)2.5 E
F0(\214eld.)2.5 E F3(num_fonts)72 181.8 Q F0
(contains the number of replies remaining.)2.5 E(These tw)72 197.4 Q 2.5
(or)-.1 G(outines are split for because of the w)-2.5 E
(ay both disk-based renderers and font serv)-.1 E(er renderers han-)-.15
E(dle this request.)72 209.4 Q
(The \214rst function initiates the action, the second is used to g)5 E
(ather the results.)-.05 E -.15(Fo)5 G 2.5(rad).15 G(isk-)-2.5 E
(based renderer)72 221.4 Q 2.5(,al)-.4 G
(ist of font names matching the pattern is \214rst b)-2.5 E
(uilt up when)-.2 E F1(start_list_f)2.5 E(onts_with_inf)-.25 E(o\(\))
-.25 E F0(is called, and the results are g)72 233.4 Q
(athered with each call to)-.05 E F1(list_next_f)2.5 E(ont_with_inf)-.25
E(o.)-.25 E F0(In a font serv)5 E(er renderer)-.15 E(,)-.4 E
(the \214rst function sends the)72 245.4 Q F1(ListF)2.5 E(ontsW)-.25 E
(ithXInf)-.18 E(o)-.25 E F0
(request, and the second processes the replies.)2.5 E F2 24
(int wakeup_fpe\(FontPathElementPtr)97 276 R(fpe, unsigned long *mask\))
4.8 E F0(Optional function which can be used for blocking renderers.)72
301.2 Q -.8(Ty)5 G(pical usage is for a font serv).8 E(er renderer)-.15
E(,)-.4 E(where it is called when a reply is recei)72 313.2 Q -.15(ve)
-.25 G(d, allo).15 E
(wing the data to be read and the client to be signaled and)-.25 E
(unblock)72 325.2 Q(ed.)-.1 E F2 24(int client_died\(pointer)97 355.8 R
(client, FontPathElementPtr fpe\))4.8 E F0
(This function is called when a client dies in the middle of a block)72
381 Q(ed request, allo)-.1 E(wing the renderer to clean)-.25 E(up.)72
393 Q F1 2.5(9. F)72 429 R(ont speci\214c functions)-.25 E F0
(These functions are contained in each)72 444.6 Q F1 -.25(Fo)2.5 G(nt.)
.25 E F0 -.15(Fo)5 G 2.5(rm).15 G(an)-2.5 E 2.5(yr)-.15 G(enderers, e)
-2.5 E -.15(ve)-.25 G(ry font will use the same functions,).15 E -.2(bu)
72 456.6 S 2.5(ts).2 G(ome renderers may wish to use dif)-2.5 E
(ferent interf)-.25 E(aces for dif)-.1 E(ferent fonts.)-.25 E F2
(typedef struct {)97 487.2 Q 14.4(INT16 left)140.2 496.2 R(B16,)4.8 E
(right B16;)183.4 505.2 Q 14.4(INT16 width)140.2 514.2 R(B16;)4.8 E 14.4
(INT16 ascent)140.2 523.2 R(B16,)4.8 E(descent B16;)183.4 532.2 Q 9.6
(CARD16 attributes)140.2 541.2 R(B16;)4.8 E 38.4(}f)97 550.2 S
(sCharInfo;)-38.4 E(typedef struct {)97 568.2 Q 38.4(CARD8 low,)116.2
577.2 R(high;)183.4 586.2 Q 52.8(}f)97 595.2 S(sChar2b;)-52.8 E
(typedef struct {)97 613.2 Q 24(fsChar2b min_char,)116.2 622.2 R
(max_char;)183.4 631.2 Q 52.8(}f)97 640.2 S(sRange;)-52.8 E 24
(int get_extents\(pointer)97 658.2 R(client,)4.8 E
(FontPtr pfont, Mask flags, int num_ranges, fsRange *ranges,)183.4 667.2
Q(int *num_extents, fsCharInfo **extents\);)183.4 676.2 Q F0
(Possible \215ags:)72 701.4 Q 0 Cg EP
%%Page: 7 7
%%BeginPageSetup
BP
%%EndPageSetup
/F0 8/Times-Roman@0 SF(-7-)283.336 45 Q/F1 8/Courier-Bold@0 SF 48
(LoadAll /*)97 81 R(ignore the ranges and get everything */)4.8 E 28.8
(FinishRange /*)97 90 R
(magic for range completion as specified by protocol */)4.8 E/F2 10
/Times-Roman@0 SF(Builds up the requested array of e)72 115.2 Q 2.5
(xtents. The)-.15 F -.15(ex)2.5 G
(tent data \(which the renderer allocates\) is returned, as well).15 E
(as the number of e)72 127.2 Q(xtents.)-.15 E/F3 10/Times-Italic@0 SF
(closur)5 E(e)-.37 E F2(contains an)2.5 E 2.5(yb)-.15 G
(locking state information.)-2.5 E F1 24(int get_bitmaps\(pointer)97
157.8 R(client,)4.8 E(FontPtr pfont, fsBitmapFormat format, Mask flags,)
183.4 166.8 Q(int num_ranges, fsRange *ranges,)183.4 175.8 Q
(unsigned long *size, unsigned long *num_glyphs,)183.4 184.8 Q
(unsigned long **offsets, pointer *glyph_data\);)183.4 193.8 Q F2
(Possible \215ags:)72 219 Q F1(LoadAll)97 249.6 Q 28.8(FinishRange /*)97
258.6 R(magic for range completion as specified by protocol */)4.8 E F2
(Builds up the requested array of bitmaps.)72 283.8 Q(The glyph and of)5
E(fset data \(which the renderer allocates\) is)-.25 E
(returned, as well as the number of glyphs.)72 295.8 Q(The)5 E F3
(closur)2.5 E(e)-.37 E F2(contains an)2.5 E 2.5(yb)-.15 G
(locking state information.)-2.5 E(This func-)5 E(tion will b)72 307.8 Q
(uild up the bitmap data in the format speci\214ed by)-.2 E F3(format)
2.5 E F2(so that the interpreter can return it with-)2.5 E(out an)72
319.8 Q 2.5(ya)-.15 G(dditional modi\214cation.)-2.5 E(This should mini\
mize data massaging, since outline renderers will hope-)5 E
(fully be able to produce the bitmaps in the proper format.)72 331.8 Q
F1 19.2(void unload_font\(FontPtr)97 362.4 R(pfont\))4.8 E F2
(The render will free an)72 387.6 Q 2.5(ya)-.15 G(llocated data.)-2.5 E
(Note that the)5 E/F4 10/Times-Bold@0 SF(FPE)2.5 E F2(function)2.5 E F4
(close_f)2.5 E(ont\(\))-.25 E F2(will also be called, and)2.5 E
(should handle an)72 399.6 Q(y)-.15 E F4(FPE)2.5 E F2
(data allocated for the font.)2.5 E F1 24(int get_glyphs\(\))97 430.2 R
24(int get_metrics\(\))97 439.2 R F2(These tw)72 464.4 Q 2.5(of)-.1 G
(unctions are used by the X serv)-2.5 E
(er for loading glyphs and metrics.)-.15 E(The)5 E 2.5(ye)-.15 G
(xpect the results in a)-2.65 E(considerably dif)72 476.4 Q
(ferent form.)-.25 E(The)5 E F3 -.1(ge)2.5 G(t_bitmaps\(\)).1 E F2(and)
2.5 E F3 -.1(ge)2.5 G(t_e).1 E(xtents\(\))-.2 E F2(routines both allo)
2.5 E 2.5(wf)-.25 G(or better cache con-)-2.5 E(trol by the renderer)72
488.4 Q(.)-.55 E F4 2.5(10. F)72 524.4 R(ont dir)-.25 E
(ectories and aliases)-.18 E F2(Existing bitmap renderers already ha)97
540 Q .3 -.15(ve t)-.2 H(heir o).15 E(wn concept of font or)-.25 E -.05
(ga)-.18 G 2.5(nization. In).05 F(the X sample)2.5 E(serv)72 552 Q(er)
-.15 E 2.5(,t)-.4 G(he \214les)-2.5 E F4 -.25(fo)2.5 G(nts.dir).25 E F2
(and)2.5 E F4 -.25(fo)2.5 G(nts.alias).25 E F2(are used to list the kno)
2.5 E(wn fonts.)-.25 E F4 -.25(fo)5 G(nts.dir).25 E F2
(maps \214le names to font)2.5 E(names, while)72 564 Q F4 -.25(fo)2.5 G
(nts.alias).25 E F2(maps font names to other font names.)2.5 E(These co\
ncepts will also be needed by other forms of fonts which the sample X s\
erv)97 579.6 Q(er does not cur)-.15 E(-)-.2 E(rently use, b)72 591.6 Q
(ut the font serv)-.2 E(er will, lik)-.15 E 2.5(eB)-.1 G
(itstream outlines.)-2.5 E F4 2.5(11. Handling)72 627.6 R(scalable f)2.5
E(onts)-.25 E F2 -.15(Fo)97 643.2 S 2.5(rt).15 G
(hose renderers that support scalable fonts, se)-2.5 E -.15(ve)-.25 G
(ral issues must be addressed:).15 E 11.5<834e>72 658.8 S(ame P)-11.5 E
2.5(arsing. An)-.15 F(XLFD name must be parsed to determine the request\
ed resolutions and/or sizes.)2.5 E 11.5<8350>72 674.4 S
(roperty scaling.)-11.5 E(Man)5 E 2.5(yo)-.15 G 2.5(ft)-2.5 G
(he standard font properties ha)-2.5 E .3 -.15(ve v)-.2 H
(alues that depend on scaling \(e)-.1 E(g,)-.15 E F3(RESO-)2.5 E 2.5
(LUTION_X. POINT_SIZE\))87 686.4 R F2 11.5<8344>72 702 S(ef)-11.5 E
(ault v)-.1 E 2.5(alues. If)-.25 F
(resolution information is wildcarded, the proper def)2.5 E
(ault resolution should be sup-)-.1 E(plied.)87 714 Q 0 Cg EP
%%Page: 8 8
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(-8-)282.17 48 Q(Name P)72 84 Q(arsing)-.15 E
(The font name pattern supplied to)97 99.6 Q/F1 10/Times-Bold@0 SF
(OpenBitmapF)2.5 E(ont)-.25 E F0(or)2.5 E F1(ListF)2.5 E(onts)-.25 E F0
(may require some parsing to be)2.5 E(recognized as a scalable font kno)
72 111.6 Q(wn to the renderer)-.25 E 5(.T)-.55 G(he)-5 E F1
(PIXEL_SIZE, POINT_SIZE, RESOLU-)2.5 E(TION_X, RESOLUTION_Y)72 123.6 Q
F0(and)2.5 E F1 -1.45(AV)2.5 G(ERA)1.45 E(GE_WIDTH)-.55 E F0
(all need to determined from the font name pat-)2.5 E 2.5(tern. The)72
135.6 R(master font must then be found, and scaled appropriately)2.5 E 5
(.A)-.65 G .3 -.15(ny u)-5 H(nspeci\214ed v).15 E(alues that cannot be)
-.25 E(determined should be replaced by the proper def)72 147.6 Q 2.5
(aults. F)-.1 F(or size \214elds, this is whate)-.15 E -.15(ve)-.25 G
2.5(rt).15 G(he con\214guration)-2.5 E 2.5(speci\214es. F)72 159.6 R
(or resolution \214elds, these should be tak)-.15 E(en from the client')
-.1 E 2.5(sr)-.55 G(esolution list, if set, or from the)-2.5 E(serv)72
171.6 Q(er')-.15 E 2.5(sc)-.55 G(on\214guration.)-2.5 E
(Property scaling)72 187.2 Q -.15(Pa)97 202.8 S
(rt of scaling a font is scaling its properties.).15 E(Man)5 E 2.5(ys)
-.15 G(calable fonts will ha)-2.5 E .3 -.15(ve a ve)-.2 H(ry lar).15 E
(ge number of)-.18 E(scalable properties.)72 214.8 Q(One w)5 E
(ay to deal with these is for the `)-.1 E(`master')-.74 E 2.5('o)-.74 G
(utline to k)-2.5 E(eep track of the property)-.1 E
(names, and supply ne)72 226.8 Q 2.5(wv)-.25 G
(alues for each instance of the font.)-2.75 E
(If the property names are stored as Atoms,)5 E(memory usage is k)72
238.8 Q(ept to a minimum.)-.1 E(Using def)72 254.4 Q(aults)-.1 E
(Using def)97 270 Q(ault v)-.1 E(alues as substitutions for missing v)
-.25 E(alues w)-.25 E(as co)-.1 E -.15(ve)-.15 G(red abo).15 E -.15(ve)
-.15 G 5(.T).15 G(hese def)-5 E(aults will also)-.1 E
(be useful in handling)72 282 Q F1(ListF)2.5 E(onts)-.25 E F0 2.5
(requests. Returning)2.5 F 2.5(as)2.5 G
(calable font with an instance using the def)-2.5 E(ault v)-.1 E(al-)
-.25 E(ues will pro)72 294 Q(vide the most user)-.15 E(-friendly en)-.2
E(vironment.)-.4 E F1 2.5(12. Access)72 330 R(contr)2.5 E(ol)-.18 E F0
(The font serv)97 345.6 Q(er will also support lar)-.15 E
(ge grain security)-.18 E 5(.I)-.65 G 2.5(tw)-5 G(ill ha)-2.5 E .3 -.15
(ve b)-.2 H(oth a limit of the number of users,).15 E
(and on the hosts which it will support.)72 357.6 Q
(Limiting the number of users is as much a serv)97 373.2 Q
(er loading issue as a security issue.)-.15 E(The limitation)5 E(will b\
e typically be set via con\214guration options or OS limitations.)72
385.2 Q 1.6 -.8(To c)5 H(hange it, use:).8 E/F2 8/Courier-Bold@0 SF 19.2
(void AccessSetConnectionLimit\(int)97 415.8 R(limit\))4.8 E F0(A)72 441
Q/F3 10/Times-Italic@0 SF(limit)2.5 E F0
(of 0 will set it to a compiled constant based on OS resources \(e)2.5 E
(g, number of \214le descriptors\).)-.15 E(Client-host based access con\
trol can be used to supplement licensing, and support font serv)97 456.6
Q(er load)-.15 E(balancing by restricting access.)72 468.6 Q
(As with licensing, this is OS-speci\214c code.)5 E 1.6 -.8(To m)5 H
(anipulate these functions,).8 E(use:)72 480.6 Q F2
(typedef struct _host_address {)97 511.2 Q 24(int type;)140.2 520.2 R
4.8(pointer address;)140.2 529.2 R(struct _host_address *next;)140.2
538.2 Q 4.8(}H)97 547.2 S(ostAddress;)-4.8 E(typedef HostAddress)97
565.2 Q(*HostList;)38.4 E 24(int AddHost\(HostList)97 583.2 R
(list, HostAddress *address\))4.8 E 24(int RemoveHost\(HostList)97 592.2
R(list, HostAddress *address\))4.8 E 19.2(Bool ValidHost\(HostList)97
601.2 R(list, HostAddress *address\))4.8 E F1(AddHost\(\))72 626.4 Q F0
(adds a host to the)2.5 E F3(list.)2.5 E F1(Remo)5 E -.1(ve)-.1 G
(Host\(\)).1 E F0(remo)2.5 E -.15(ve)-.15 G 2.5(si).15 G(t, and)-2.5 E
F1 -.92(Va)2.5 G(lidHost\(\)).92 E F0(checks to see if its on the)2.5 E
F3(list.)72 638.4 Q F0(In all functions, the)5 E F3(addr)2.5 E(ess)-.37
E F0(has will ignore an)2.5 E 2.5(yv)-.15 G(alue in the)-2.75 E F3(ne)
2.5 E(xt)-.2 E F0(\214eld.)2.5 E(Netw)97 654 Q
(ork addresses are used here to a)-.1 E -.2(vo)-.2 G
(id issues with host name aliases.).2 E
(The caller \214lls in the desired)5 E
(type, and an address of that form is returned.)72 666 Q
(This is highly OS-speci\214c, b)5 E(ut v)-.2 E(alues for the)-.25 E F3
(type)2.5 E F0(and)2.5 E F3(addr)2.5 E(ess)-.37 E F0
(\214elds could include:)72 678 Q 0 Cg EP
%%Page: 9 9
%%BeginPageSetup
BP
%%EndPageSetup
/F0 8/Times-Roman@0 SF(-9-)283.336 45 Q/F1 8/Courier-Bold@0 SF 4.8
(#define HOST_AF_INET)97 81 R(1)28.8 E(struct in_addr)97 90 Q(*address;)
19.2 E 4.8(#define HOST_AF_DECnet)97 108 R(2)19.2 E 9.6(struct dn_addr)
97 117 R(*address;)9.6 E/F2 10/Times-Roman@0 SF(The serv)72 142.2 Q
(er will use a global host list, b)-.15 E(ut ha)-.2 E
(ving the list as an ar)-.2 E(gument will allo)-.18 E 2.5(wl)-.25 G
(icensing schemes to)-2.5 E(ha)72 154.2 Q .3 -.15(ve t)-.2 H(heir o).15
E(wn host lists.)-.25 E/F3 10/Times-Bold@0 SF 2.5(13. Licensing)72 190.2
R F2(Licensing is a trick)97 205.8 Q 2.5(yi)-.15 G
(ssue, which each renderer will support in a dif)-2.5 E(ferent w)-.25 E
(ay)-.1 E 5(.T)-.65 G(he sample font)-5 E(serv)72 217.8 Q
(er will attempt to pro)-.15 E(vide some guidelines, and present a poss\
ible implementation of some simple)-.15 E(licensing schemes.)72 229.8 Q
F3(Host Addr)72 245.4 Q(ess licensing)-.18 E F2
(This is simplistic licensing based on the client')72 261 Q 2.5(sh)-.55
G 2.5(ost. W)-2.5 F
(ith this form of licensing, a font may be accessible)-.4 E
(to some host b)72 273 Q(ut not others.)-.2 E 1.6 -.8(To g)5 H
(et the current client').8 E 2.5(sh)-.55 G(ost, the follo)-2.5 E
(wing is used:)-.25 E F1 19.2(void GetHostAddress\(HostAddress)97 303.6
R(*address\);)4.8 E F2 2.5(Ar)72 328.8 S
(enderer can also use the host access functions to k)-2.5 E
(eep a list of the licensed hosts, and)-.1 E F3 -.92(Va)2.5 G
(lidHost\(\)).92 E F2(to)2.5 E(check a client.)72 340.8 Q F3
(Simultaneous use license)72 356.4 Q F2(This licensing allo)97 372 Q
(ws for a limited number of copies of the font to be open at once.)-.25
E(Since this should)5 E(be a simple per)72 384 Q(-font counter)-.2 E 2.5
(,n)-.4 G 2.5(os)-2.5 G
(upport should be required outside of the renderer)-2.5 E(.)-.55 E F3
2.5(14. DIFS)72 420 R(contents)2.5 E F2
(This contains the protocol dispatcher)97 435.6 Q 2.5(,i)-.4 G
(nterpreter and reply encoding routines.)-2.5 E
(The interpreter is table dri)97 451.2 Q -.15(ve)-.25 G 2.5(no).15 G .5
-.25(ff t)-2.5 H(he request code.).25 E
(The dispatcher gets a request from the os layer)5 E(from)72 463.2 Q F3
-.65(Wa)2.5 G(itF).65 E(orSomething\(\),)-.25 E F2
(and uses the request code to determine which function to call.)2.5 E
-.15(eg)5 G 2.5(,a).15 G/F4 10/Times-Italic@0 SF(CloseF)A(ont)-1.05 E F2
(request w)72 475.2 Q(ould call)-.1 E F3(Pr)2.5 E(ocCloseF)-.18 E
(ont\(\).)-.25 E F2(Each request')97 490.8 Q 2.5(sr)-.55 G
(outine handles an)-2.5 E 2.5(ya)-.15 G
(pplicable error checking, and then does as much w)-2.5 E
(ork as it can.)-.1 E -.15(Fo)72 502.8 S 2.5(rf).15 G
(ont related requests, this means con)-2.5 E -.15(ve)-.4 G
(rting the request to the proper ar).15 E(guments for the renderers.)
-.18 E(If an)97 518.4 Q 2.5(yr)-.15 G
(eplies are generated, the reply data is g)-2.5 E
(athered into the bytestream format, and sent via)-.05 E F4(os)2.5 E F2
(write functions to the client.)72 530.4 Q
(If the byte order of the client and serv)97 546 Q(er dif)-.15 E(fer)
-.25 E 2.5(,t)-.4 G(he abo)-2.5 E .3 -.15(ve i)-.15 H 2.5(sm).15 G
(odi\214ed by ha)-2.5 E(ving the dispatcher call an)-.2 E(intermediate \
function which re-orders the request to the proper byte order)72 558 Q 5
(.R)-.55 G(eplies go through similar)-5 E(sw)72 570 Q(apping.)-.1 E F3
(Client blocking)72 585.6 Q F2 1.6 -.8(To m)97 601.2 T
(inimize delay caused by font serv).8 E
(er request, clients can be block)-.15 E(ed while the)-.1 E 2.5(yw)-.15
G(ait for data to be)-2.6 E 2.5(produced. This)72 613.2 R
(is primarily intended for)2.5 E F3(FPEs)2.5 E F2
(using a remote font serv)2.5 E(er)-.15 E 2.5(,b)-.4 G
(ut can be used an)-2.7 E(ywhere where)-.15 E(the font serv)72 625.2 Q(\
er can pause to handle other client requests while data needed to satis\
fy another is produced)-.15 E(\(possibly via multiple processes\).)72
637.2 Q F1 19.2(Bool ClientSleep\(ClientPtr)97 667.8 R
(client, Bool \(*function\)\(\), pointer closure\))4.8 E F2
(Puts a client to ')72 693 Q 2.5(sleep'. This)-.55 F
(means the client will no longer be considered while the serv)2.5 E
(er is dispatching)-.15 E(requests.)72 705 Q F4(function)5 E F2
(will be called when the client is signaled, with the)2.5 E F4(client)
2.5 E F2(and)2.5 E F4(closur)2.5 E(e)-.37 E F2(as its ar)2.5 E(guments.)
-.18 E 0 Cg EP
%%Page: 10 10
%%BeginPageSetup
BP
%%EndPageSetup
/F0 8/Times-Roman@0 SF(-10-)281.336 45 Q/F1 8/Courier-Bold@0 SF 19.2
(Bool ClientSignal\(ClientPtr)72 81 R(client\))4.8 E/F2 10/Times-Roman@0
SF(This should be called when the client is ready to do more w)72 106.2
Q 2.5(ork. At)-.1 F(this point, the function gi)2.5 E -.15(ve)-.25 G 2.5
(nt).15 G(o)-2.5 E/F3 10/Times-Bold@0 SF(ClientSleep\(\))72 118.2 Q F2
(will be called.)2.5 E F1(void ClientWakeup\(ClientPtr client\))72 145.2
Q F2(Puts the client back to its normal state processing requests.)72
170.4 Q F1(Bool ClientIsAsleep\(ClientPtr client\))72 197.4 Q F2
(Can be used to check if a client is asleep.)72 222.6 Q
(This is useful for handling client termination, so that an)5 E 2.5(yr)
-.15 G(equests)-2.5 E(the client is w)72 234.6 Q
(aiting upon can be properply cleaned up.)-.1 E F3(Sample Usage)72 250.2
Q F2 -.15(Fo)97 265.8 S 2.5(rh).15 G(andling a font serv)-2.5 E
(er renderer request for)-.15 E F3(OpenBitmapF)2.5 E(ont)-.25 E F2
(the renderer will send the request)2.5 E(to the remote font serv)72
277.8 Q(er)-.15 E 2.5(,a)-.4 G(nd the call)-2.5 E F3(ClientSleep\(\).)
2.5 E F2(The font serv)5 E(er will then continue processing requests)
-.15 E(from other clients, while the one making the request is block)72
289.8 Q 2.5(ed. When)-.1 F(the reply returns, the renderer will)2.5 E
(notice when its)72 301.8 Q F3(wak)2.5 E(eup_fpe\(\))-.1 E F2
(function is called.)2.5 E(At this point the font serv)5 E
(er renderer will read and)-.15 E(process the reply)72 313.8 Q(.)-.65 E
F3(ClientSignal\(\))5 E F2(will be called, and the)2.5 E/F4 10
/Times-Italic@0 SF(closur)2.5 E(e)-.37 E F2(function will be called.)2.5
E(It will request the)5 E(data from the renderer)72 325.8 Q 2.5(,c)-.4 G
(ompleting the request, and call)-2.5 E F3(ClientW)2.5 E(ak)-.65 E
(eup\(\))-.1 E F2(to return the client to normal sta-)2.5 E(tus.)72
337.8 Q(This layer also contains the resource database, which associate\
s fonts with IDs, e)97 365.4 Q(xtension interf)-.15 E(ace)-.1 E
(functions and the serv)72 377.4 Q(er initialization and reset control.)
-.15 E F3 2.5(15. OS)72 401.4 R(contents)2.5 E F2(This layer contains O\
S speci\214c routines for con\214guration, command line parsing, client\
/serv)97 417 Q(er com-)-.15 E(munications, and v)72 429 Q(arious OS-dep\
endent utilities such as memory management and error handling.)-.25 E F3
(ReadRequestFr)97 444.6 Q(omClient\(\))-.18 E F2
(returns a full request to the dispatcher)2.5 E(.)-.55 E F3 -.65(Wa)5 G
(itF).65 E(orSomething\(\))-.25 E F2(is where)2.5 E(the serv)72 456.6 Q
(er spends its idle time, w)-.15 E(aiting for an)-.1 E 2.5(ya)-.15 G
(ction from a client or processing an)-2.5 E 2.5(yw)-.15 G
(ork left from a)-2.6 E(block)72 468.6 Q(ed client.)-.1 E
(When a client attempts to connect, the serv)97 484.2 Q(er will call)
-.15 E F1 24(int CheckClientAuthorization\(ClientPtr)97 514.8 R
(client, AuthPtr client_auth,)4.8 E
(int *accept, int *index, int *size, char **authdata\))183.4 523.8 Q F2
(to see if the serv)72 549 Q(er is set to allo)-.15 E 2.5(wt)-.25 G
(he client to connect.)-2.5 E
(It may use licensing or con\214guration information to)5 E
(determine if the client can connect.)72 561 Q
(When then connection is established, the serv)97 576.6 Q
(er will use the)-.15 E F1(typedef struct _alt_server {)97 607.2 Q 33.6
(char subset;)116.2 616.2 R 33.6(char namelen;)116.2 625.2 R 28.8
(char *name;)116.2 634.2 R 52.8(}A)97 643.2 S
(lternateServerRec, *AlternateServerPtr;)-52.8 E
(int ListAlternateServers\(AlternateServerPtr *servers\))97 661.2 Q F2
(to return an)72 686.4 Q 2.5(ya)-.15 G(lternate serv)-2.5 E
(er information it may ha)-.15 E -.15(ve)-.2 G(.).15 E
(When the client limit is reached, the font serv)72 702 Q
(er may attempt to cop)-.15 E 2.5(yi)-.1 G(tself, by calling)-2.5 E 0 Cg
EP
%%Page: 11 11
%%BeginPageSetup
BP
%%EndPageSetup
/F0 8/Times-Roman@0 SF(-11-)281.336 45 Q/F1 8/Courier-Bold@0 SF
(int CloneMyself\(\))97 81 Q/F2 10/Times-Roman@0 SF
(This function will \(if the con\214guartion options allo)72 106.2 Q
(w\) start a ne)-.25 E 2.5(wf)-.25 G(ont serv)-2.5 E(er process.)-.15 E
(This is done in such a)5 E -.1(wa)72 118.2 S 2.5(yt).1 G
(hat no pending connections should be lost, and that the original serv)
-2.5 E(er will accept no ne)-.15 E 2.5(wc)-.25 G(onnections.)-2.5 E
(Once the original serv)72 130.2 Q(er has no more clients, it will e)
-.15 E(xit.)-.15 E(Catalogue manipulation)72 154.2 Q(Catalogues are con\
\214guration dependent, and hence sent by OS-dependent methods.)97 169.8
Q(In order for the)5 E/F3 10/Times-Italic@0 SF(difs)72 181.8 Q F2
(layer to get them, it uses)2.5 E F1 24(int ListCatalogues\(char)97
212.4 R(*pattern, int pattern_length,)4.8 E
(int maxnames, char **catalogues, int *len\))140.2 221.4 Q F2(which ret\
urns the list of all catalogues it supports which match the pattern.)72
246.6 Q(This function will be used by)5 E
(the catalogue manipulation requests, as well as by renderers when the)
72 258.6 Q 2.5(yg)-.15 G -2.15 -.25(iv e)-2.5 H(their)2.75 E/F4 10
/Times-Bold@0 SF(ListF)2.5 E(onts)-.25 E F2(results.)2.5 E F1
(int ValidateCatalogues\(int number, char *catalogues\))72 289.2 Q F2
(Can be used to v)72 314.4 Q(alidate a list of catalogues, returning T)
-.25 E(rue if the list is acceptable.)-.35 E F4 2.5(16. Utility)72 350.4
R(functions)2.5 E F2(Client data functions)72 366 Q(These pro)97 381.6 Q
(vide access to the current client')-.15 E 2.5(sr)-.55 G
(esolution and authorization data.)-2.5 E(This form of interf)5 E(ace)
-.1 E(is supplied rather than passing it to all renderers in the)72
393.6 Q F4(FPE)2.5 E F2(functions because the data may be comple)2.5 E
(x)-.15 E(and/or uninteresting to all renderers.)72 405.6 Q F1 14.4
(AuthContextPtr GetClientAuthorization\(\))97 436.2 R F2
(Returns the authorization data for the current client.)72 461.4 Q F1 24
(fsResolution *GetClientResolutions\(int)97 492 R(*num_resolutions\))9.6
E F2(Returns the list of resolutions that the current client has set.)72
517.2 Q F4(Caching functions)72 556.8 Q F2
(These are functions that simplify caching of renderer data.)97 572.4 Q
(These are for use by renderers that tak)5 E(e)-.1 E
(signi\214cant resources to produce data.)72 584.4 Q
(The data must be re-creatable -- the cache is not meant for general)5 E
2.5(storage. The)72 596.4 R(data may also be mo)2.5 E -.15(ve)-.15 G 2.5
(db).15 G 2.5(yt)-2.5 G
(he cache, so it should only be accessed by CacheID.)-2.5 E F1
(typedef void \(*CacheFree\)\(\);)97 627 Q(typedef unsigned long)97 636
Q(CacheID;)28.8 E(typedef unsigned long)97 645 Q(Cache;)28.8 E
(Cache CacheInit\(int renderer_id\))97 672 Q F2
(Initializes a cache object for the renderer)72 697.2 Q 5(.t)-.55 G
(he returned ID should be passed to)-5 E F4(CacheStor)2.5 E(eMemory\(\))
-.18 E F2(when)2.5 E(adding an object to the cache.)72 709.2 Q 0 Cg EP
%%Page: 12 12
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(-12-)279.67 48 Q/F1 8/Courier-Bold@0 SF
(void CacheStats\(Cache cid, unsigned long *num_entries,)97 81 Q
(unsigned long *max_storage, unsigned long *current_storage,)140.2 90 Q
(unsigned long *num_lookups, unsigned long *hit_ratio\))140.2 99 Q F0
(Returns statistics on the cache.)72 124.2 Q(Useful if the renderer w)5
E(ants some hints about whether to place an object in)-.1 E(the cache.)
72 136.2 Q(If the cache is nearly full, and the priority lo)5 E 1.3 -.65
(w, i)-.25 H 2.5(tm).65 G(ay w)-2.5 E(ant to tak)-.1 E 2.5(ed)-.1 G(if)
-2.5 E(ferent action.)-.25 E F1 4.8(CacheID CacheStoreMemory\(Cache)97
166.8 R(cacheid, pointer data, unsigned long size,)4.8 E
(CacheFree free_func\))226.6 175.8 Q F0
(The renderer hands the cache some chunk of contiguous memory)72 201 Q
2.5(,w)-.65 G(hich the cache timestamps and stores.)-2.5 E
(When it needs to remo)72 213 Q .3 -.15(ve t)-.15 H(hem, it calls the)
.15 E/F2 10/Times-Italic@0 SF(fr)2.5 E(ee_func,)-.37 E F0
(which must tak)2.5 E 2.5(er)-.1 G
(esponsibility for properly freeing the)-2.5 E(data.)72 225 Q F2(size)5
E F0(is primarily a hint to the cache, so that cache limits can be prop\
erly calculated.)2.5 E 2.5(Ar)5 G(eturn v)-2.5 E(alue of)-.25 E
(zero means the store f)72 237 Q(ailed, probably because the gi)-.1 E
-.15(ve)-.25 G 2.5(ns).15 G(ize w)-2.5 E(as o)-.1 E -.15(ve)-.15 G 2.5
(rt).15 G(he cache limit.)-2.5 E(If the gi)5 E -.15(ve)-.25 G 2.5(nd).15
G(ata is)-2.5 E(too lar)72 249 Q
(ge for the current cache, it will attempt to free old data to mak)-.18
E 2.5(er)-.1 G 2.5(oom. The)-2.5 F(returned ID is a unique)2.5 E -.25
(va)72 261 S
(lue that refers both to the object and the cache in which it w).25 E
(as placed.)-.1 E F1
(pointer CacheFetchMemory\(CacheID cid, Bool update\))97 291.6 Q F0
(Returns the memory attached to the id.)72 316.8 Q(If)5 E F2(update)2.5
E F0(is set, the timestamp is updated.)2.5 E(\(some accesses may)5 E
(wish to be ')72 328.8 Q(silent', which allo)-.55 E(ws some control o)
-.25 E -.15(ve)-.15 G 2.5(rt).15 G(he freeing scheduling.\))-2.5 E
(If the cid is in)5 E -.25(va)-.4 G(lid,).25 E F2(NULL)2.5 E F0(is)2.5 E
(returned.)72 340.8 Q F1 24(int CacheFreeMemory\(CacheID)97 371.4 R
(cid, Bool notify\))4.8 E F0(Allo)72 396.6 Q
(ws the cache to \215ush the data.)-.25 E(If)5 E F2(notify)2.5 E F0
(is set, the CacheFree function passed in when the data w)2.5 E(as)-.1 E
(cached will also be called.)72 408.6 Q F1 19.2
(void MemoryFreed\(CacheID)97 439.2 R(cid, pointer data, int reason\))
4.8 E F0(Callback function from the cache to the renderer notifying it \
that its data has been \215ushed.)72 464.4 Q(This function)5 E
(then has the responsibility to free that data.)72 476.4 Q F2 -.37(re)5
G(ason).37 E F0(may be one of:)2.5 E F1 33.6(CacheReset /*)97 507 R
(all cache freed because of server reset */)4.8 E 9.6
(CacheEntryFreed /*)97 516 R(explicit request via free_memory\(\) */)4.8
E 19.2(CacheEntryOld /*)97 525 R
(cache hit limit, and memory being freed because its old */)4.8 E F0
(and is supplied so that the renderer may choose ho)72 550.2 Q 2.5(wt)
-.25 G 2.5(od)-2.5 G(eal with the free request.)-2.5 E
(\(It will probably be)5 E(ignored by most, b)72 562.2 Q(ut some may w)
-.2 E(ant to k)-.1 E
(eep the memory around by bypassing the cache, or re-inserting it.\))-.1
E(Note that the cache will consider the data gone, so it)72 574.2 Q/F3
10/Times-Bold@0 SF(must)2.5 E F0(be re-inserted to k)2.5 E(eep it ali)
-.1 E -.15(ve)-.25 G(.).15 E F1 19.2(void CacheSimpleFree\(CacheID)97
604.8 R(cid, pointer data, int reason\))4.8 E F0(Just calls)72 630 Q F3
(fr)2.5 E(ee\(\))-.18 E F0(on the data.)2.5 E
(Simple CacheFree de\214ned here to pre)5 E -.15(ve)-.25 G
(nt it being rede\214ned in each renderer).15 E(.)-.55 E -.8(Ty)97 645.6
S(pical usage of the cache is for the renderer to store a CacheID rathe\
r than a pointer to the).8 E(cacheable data.)72 657.6 Q(The renderer is\
 responsible for both allocating and freeing the data, as well as k)5 E
(eeping)-.1 E(track of just what it is.)72 669.6 Q(When the renderer ne\
eds the cached data, it will request it from the cache.)5 E(If it)5 E
-.1(fa)72 681.6 S(ils, it must reb).1 E(uild it.)-.2 E 2.5(Ap)97 697.2 S
(ossible con\214guration parameter is the size of the cache.)-2.5 E
(when the cache is \214lled \(with the calcu-)5 E
(lation based on the gi)72 709.2 Q -.15(ve)-.25 G 2.5(ns).15 G
(ize\), it sweeps the cache and frees old data.)-2.5 E
(The amount of memory actually)5 E(freed may wish to be tunable:)72
721.2 Q(some systems may w)5 E(ant to k)-.1 E
(eep the cache as full as possible, others may)-.1 E 0 Cg EP
%%Page: 13 13
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(-13-)279.67 48 Q -.1(wa)72 84 S
(nt to free some percentage such that sweeps occur less frequently).1 E
(.)-.65 E(Cache statistics may w)97 99.6 Q(ant to be a)-.1 E -.25(va)-.2
G(ilable for administrators.).25 E(The)5 E 2.5(yc)-.15 G
(ould be dumped to a \214le when a)-2.5 E(signal is recei)72 111.6 Q
-.15(ve)-.25 G 2.5(d. \(SNMP).15 F(seems lik)2.5 E 2.5(eap)-.1 G
(erfect match, b)-2.5 E(ut apparently the technology isn')-.2 E 2.5(tt)
-.18 G(here yet.)-2.5 E
(Cached data could also be compressed, if the memory/CPU tradeof)97
127.2 Q(fs mak)-.25 E 2.5(ei)-.1 G 2.5(tw)-2.5 G(orthwhile.)-2.6 E 2.5
(ISSUE: Is)97 142.8 R 2.5(at)2.5 G(ime-based freeing schedule suf)-2.5 E
2.5(\214cient? Should)-.25 F(priorities or size also be tak)2.5 E
(en into)-.1 E 2.5(account? [)72 154.8 R 2.5(No. An)2.5 F
(ything that the renderer thinks should ha)-.15 E .3 -.15(ve a h)-.2 H
(igher priority should probably not be).15 E(placed into the cache. ])72
166.8 Q/F1 10/Times-Bold@0 SF(Byte swapping)72 206.4 Q F0
(Functions for sw)72 222 Q(apping a 4-byte quantity)-.1 E 2.5(,a2)-.65 G
(-byte quantity and in)-2.5 E -.15(ve)-.4 G(rting a byte.).15 E/F2 8
/Courier-Bold@0 SF 19.2(void BitOrderInvert\(pointer)97 252.6 R
(buffer, unsigned long num_bytes\))4.8 E 19.2(void TwoByteSwap\(pointer)
97 261.6 R(buffer, unsigned long num_shorts\))4.8 E 19.2
(void FourByteSwap\(pointer)97 270.6 R
(buffer, unsigned long num_longs\))4.8 E F1(Bitmap padding)72 295.8 Q F0
(Functions taking a desired e)72 311.4 Q
(xtents and a bitmap that will return the bitmap properly padded.)-.15 E
F2 24(int RepadBitmap\(pointer)72 338.4 R
(src, pointer dst, fsFormat src_format,)4.8 E
(fsFormat dst_format, int width, int height\))163.2 347.4 Q F0 -.8(Ta)72
372.6 S -.1(ke).8 G 2.5(sab).1 G(itmap in)-2.5 E/F3 10/Times-Italic@0 SF
(sr)2.5 E(c_format)-.37 E F0(and con)2.5 E -.15(ve)-.4 G
(rts it to one in).15 E F3(dst_format.)2.5 E F1(Atoms)72 388.2 Q F0(Exi\
sting bitmap-based renderers use atoms to store strings for property in\
formation.)97 403.8 Q(Rather than)5 E
(duplicate this code in each renderer)72 415.8 Q 2.5(,i)-.4 G 2.5(tl)
-2.5 G -2.15 -.25(iv e)-2.5 H 2.5(si).25 G 2.5(nt)-2.5 G(he)-2.5 E F3
(util)2.5 E F0(directory)2.5 E(.)-.65 E
(Atoms will be especially useful for property information, to pre)97
431.4 Q -.15(ve)-.25 G(nt man).15 E 2.5(yc)-.15 G
(opies of the same strings)-2.5 E(from being sa)72 443.4 Q -.15(ve)-.2 G
2.5(d. Using).15 F(atoms for comparison when modifying properties after\
 scaling is also more ef)2.5 E<8c2d>-.25 E 2.5(cient. Since)72 455.4 R
F3(atoms)2.5 E F0(will will e)2.5 E(xist until the serv)-.15 E
(er is reset, the)-.15 E 2.5(ym)-.15 G(ay w)-2.5 E
(ant to be used sparingly for property)-.1 E -.25(va)72 467.4 S
(lues to a).25 E -.2(vo)-.2 G(id e).2 E(xtraneous string data.)-.15 E F2
(typedef unsigned long)97 498 Q(Atom;)28.8 E 19.2(Atom MakeAtom\(char)97
516 R(*string, unsigned int length, Bool create\))4.8 E F0
(Returns the atom associated with)72 541.2 Q F3(string)2.5 E(.)-.15 E F0
(If)5 E F3(cr)2.5 E(eate)-.37 E F0(is true, a ne)2.5 E 2.5(wa)-.25 G
(tom will be created.)-2.5 E F2 19.2(char *NameForAtom\(Atom)97 571.8 R
(atom\))4.8 E F0(Returns the string associated with)72 597 Q F3(atom.)
2.5 E F1 2.5(17. Ser)72 633 R -.1(ve)-.1 G 2.5(rr).1 G(equest details)
-2.68 E F0
(This section describes in-depth the action of each protocol request.)97
648.6 Q(In all cases, the request is \214rst)5 E(error check)72 660.6 Q
(ed for simple length or v)-.1 E(alue errors, with the serv)-.25 E
(er immediately returning an error if one is)-.15 E(encountered.)72
672.6 Q F1 2.5(17.1. Connection)72 696.6 R F0(When a ne)97 712.2 Q 2.5
(wc)-.25 G(lient attempts to connect, the serv)-2.5 E
(er \214rst checks its initial authorization information to)-.15 E
(see if the serv)72 724.2 Q(er is willing to talk to it.)-.15 E
(This will be handled in some OS-speci\214c form using)5 E 0 Cg EP
%%Page: 14 14
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(-14-)279.67 48 Q/F1 10/Times-Bold@0 SF
(CheckClientA)72 84 Q(uthorization\(\).)-.5 E F0
(If it passes this test, and the serv)5 E(er has suf)-.15 E
(\214cient to resources to talk to it,)-.25 E(the serv)72 96 Q
(er sends accepts the connection and returns its connection block.)-.15
E(If the connection f)5 E(ails, the serv)-.1 E(er)-.15 E
(returns the proper status and a list of an)72 108 Q 2.5(ya)-.15 G
(lternate serv)-2.5 E(ers it may kno)-.15 E 2.5(wo)-.25 G 2.5(f\()-2.5 G
-.05(ga)-2.5 G(thered from).05 E F1(ListAlter)2.5 E(nate-)-.15 E(Ser)72
120 Q -.1(ve)-.1 G(rs\(\).\)).1 E 2.5(17.2. ListExtension)72 144 R F0
(Returns the list of e)97 159.6 Q(xtensions the serv)-.15 E(er kno)-.15
E(ws about.)-.25 E(An)5 E 2.5(ye)-.15 G
(xtensions will be initialized when the)-2.65 E(serv)72 171.6 Q
(er is \214rst started.)-.15 E F1 2.5(17.3. QueryExtension)72 195.6 R F0
(Returns the information about the requested e)97 211.2 Q
(xtension, which w)-.15 E(as set when the e)-.1 E(xtension w)-.15 E
(as initial-)-.1 E(ized.)72 223.2 Q F1 2.5(17.4. ListCatalogues)72 247.2
R F0(Returns the catalogues the serv)97 262.8 Q
(er recognizes \(the results of)-.15 E F1(ListCatalogues\(\).\))2.5 E
2.5(17.5. SetCatalogues)72 286.8 R F0(Sets the requesting client')97
302.4 Q 2.5(sc)-.55 G(atalogues after v)-2.5 E
(erifying them with the supported catalogues.)-.15 E F1 2.5
(17.6. GetCatalogues)72 326.4 R F0(Returns the requesting client')97 342
Q 2.5(sc)-.55 G(atalogues.)-2.5 E F1 2.5(17.7. Cr)72 366 R(eateA)-.18 E
(C)-.55 E F0(Creates a ne)97 381.6 Q 2.5(wa)-.25 G(uthorization conte)
-2.5 E(xt and \214lls it in.)-.15 E
(The list of authorization protocols is then check)5 E(ed)-.1 E
(by the serv)72 393.6 Q(er with)-.15 E F1(CheckClientA)2.5 E
(uthorization\(\).)-.5 E F0(If an)5 E 2.5(ya)-.15 G(re accepted, the)
-2.5 E F1 -.55(AC)2.5 G F0(is placed in the resource)3.05 E
(database and)72 405.6 Q/F2 10/Times-Italic@0 SF(Success)2.5 E F0
(is returned with the name of the accepted protocol.)2.5 E
(If more than one is accepted,)5 E F2(Continue)72 417.6 Q F0(is returne\
d with each of the accepted protocols, until the last one which has sta\
tus)2.5 E F2(Success)2.5 E F0(Other)2.5 E(-)-.2 E(wise)72 429.6 Q F2
(Denied)2.5 E F0(is returned.)2.5 E F1 2.5(17.8. Fr)72 453.6 R(eeA)-.18
E(C)-.55 E F0(Looks up the)97 469.2 Q F1 -.55(AC)2.5 G F0
(in the resource database, and frees it if it \214nds it.)3.05 E
(Otherwise an)5 E F2(Access)2.5 E F0(error is)2.5 E(returned.)72 481.2 Q
F1 2.5(17.9. SetA)72 505.2 R(uthorization)-.5 E F0(Looks up the)97 520.8
Q F1 -.55(AC)2.5 G F0(in the resource database, and set the client')3.05
E 2.5(sA)-.55 G(uthConte)-2.5 E(xtPtr to its v)-.15 E(alue if it is)-.25
E 2.5(found. Otherwise)72 532.8 R(it sends an)2.5 E F2(Access)2.5 E F0
(error)2.5 E(.)-.55 E F1 2.5(17.10. SetResolution)72 556.8 R F0
(Sets the requesting client')97 572.4 Q 2.5(sr)-.55 G
(esolution list to the supplied list.)-2.5 E F1 2.5
(17.11. GetResolution)72 596.4 R F0(Returns the requesting client')97
612 Q 2.5(sl)-.55 G(ist of resolutions.)-2.5 E F1 2.5(17.12. ListF)72
636 R(onts)-.25 E F0(Iterates o)97 651.6 Q -.15(ve)-.15 G 2.5(re).15 G
(ach open FPE, calling the FPE')-2.5 E(s)-.55 E F1(list_f)2.5 E
(onts\(\))-.25 E F0(routine passing it the pattern.)2.5 E(When all)5 E
(FPE')72 663.6 Q 2.5(sh)-.55 G -2.25 -.2(av e)-2.5 H
(been processed, the list that has been b)2.7 E(uilt up is returned.)-.2
E(Note that the same)5 E F1 -.25(Fo)2.5 G(ntNamesPtr).25 E F0(is)2.5 E
(sent to each FPE in turn, so that one list is b)72 675.6 Q(uilt up.)-.2
E(An FPE may restrict the fonts it returns based on the)5 E(client')72
687.6 Q 2.5(sc)-.55 G(atalogue.)-2.5 E 0 Cg EP
%%Page: 15 15
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(-15-)279.67 48 Q/F1 10/Times-Bold@0 SF 2.5
(17.13. ListF)72 84 R(ontsW)-.25 E(ithXInf)-.18 E(o)-.25 E F0
(Iterates o)97 99.6 Q -.15(ve)-.15 G 2.5(re).15 G(ach FPE, calling its)
-2.5 E F1(start_list_f)2.5 E(onts_with_inf)-.25 E(o\(\))-.25 E F0
(function to prime the FPE')2.5 E 2.5(sr)-.55 G(enderer)-2.5 E(.)-.55 E
(It then calls the FPE')72 111.6 Q(s)-.55 E F1(list_next_f)2.5 E
(ont_with_inf)-.25 E(o\(\),)-.25 E F0(sending each font')2.5 E 2.5(sd)
-.55 G(ata to the client until no more fonts)-2.5 E 2.5(remain. When)72
123.6 R(all FPEs ha)2.5 E .3 -.15(ve b)-.2 H(een processed, the \214nal\
 reply with a zero-length name is then sent to mark).15 E
(the end of the replies.)72 135.6 Q
(An FPE may restrict the fonts it returns based on the client')5 E 2.5
(sc)-.55 G 2.5(atalogue. Note:)-2.5 F(an)2.5 E(issue e)72 147.6 Q(xists\
 with font aliases which may require this to change, since an FPE may c\
ontain an alias pointing)-.15 E
(to another FPE, and cannot therefore return the font')72 159.6 Q 2.5
(si)-.55 G(nfo.)-2.5 E F1 2.5(17.14. OpenBitmapF)72 183.6 R(ont)-.25 E
F0(The pattern is \214rst searched for in the font serv)97 199.2 Q(er')
-.15 E 2.5(sn)-.55 G(ame cache.)-2.5 E(If it doesn')5 E 2.5<748c>-.18 G
(nd it, the serv)-2.5 E(er iterates)-.15 E -.15(ove)72 211.2 S 2.5(re)
.15 G(ach FPE, calling its)-2.5 E F1(open_f)2.5 E(ont)-.25 E F0
(function with the supplied pattern.)2.5 E
(This will return one of the follo)5 E(w-)-.25 E(ing v)72 223.2 Q
(alues:)-.25 E 11.5<8361>72 238.8 S(n)-11.5 E F1(Access)2.5 E F0(error)
2.5 E 2.5(,w)-.4 G(hich means the renderer has the font b)-2.5 E
(ut the client does not ha)-.2 E .3 -.15(ve a)-.2 H(ccess to it because)
.15 E(of some form of licensing restriction)87 250.8 Q 11.5<8361>72
266.4 S F1 -.25(Fo)-9 G(nt).25 E F0(error and a NULL)2.5 E/F2 10
/Times-Italic@0 SF(alias)2.5 E F0(parameter)2.5 E 2.5(,w)-.4 G
(hich will cause the ne)-2.5 E(xt FPE to be tried)-.15 E 11.5<8361>72
282 S F1 -.25(Fo)-9 G(nt).25 E F0(error b)2.5 E(ut a non-NULL)-.2 E F2
(alias,)2.5 E F0(which will cause the search to start o)2.5 E -.15(ve)
-.15 G 2.5(rw).15 G(ith the \214rst FPE using)-2.5 E F2(alias)87 294 Q
F0(as the ne)2.5 E 2.5(wf)-.25 G(ont pattern)-2.5 E<83>72 309.6 Q F1
(Success,)11.5 E F0(in which case a v)2.5 E(alid font has been found.)
-.25 E(If the end of the FPE list is reached without ha)97 325.2 Q
(ving found the font, an error is returned to the client.)-.2 E(If an)72
337.2 Q F1(Access)2.5 E F0(error w)2.5 E
(as encountered, it is returned, otherwise a)-.1 E F1 -.25(Fo)2.5 G(nt)
.25 E F0(error is returned.)2.5 E(If a v)5 E(alid font is)-.25 E
(found, its reference count will be incremented and it will be check)72
349.2 Q(ed to see if the client has already opened)-.1 E(it before.)72
361.2 Q(If so, the pre)5 E(vious ID will be returned.)-.25 E
(Otherwise the font will be placed in the resource data-)5 E(base.)72
373.2 Q(The renderer will \214ll in the font')97 388.8 Q 2.5(sh)-.55 G
(eader and property information, and may also choose to load or)-2.5 E
(create the font')72 400.8 Q 2.5(sm)-.55 G(etrics or glyphs.)-2.5 E
(If the glyphs are b)5 E(uilt, the)-.2 E 2.5(yw)-.15 G(ill use an)-2.5 E
2.5(ys)-.15 G(upplied)-2.5 E F2(format hint)2.5 E F0(.)A(Whene)97 416.4
Q -.15(ve)-.25 G 2.5(ran).15 G .5 -.25(ew f)-2.5 H(ont is successfuly o\
pened, the font and its name pattern will be placed in a name).25 E 2.5
(cache. This)72 428.4 R(cache e)2.5 E(xists to minimize the amount of w)
-.15 E(ork spent searching for a font.)-.1 E(It will be \215ushed)5 E
(when the font catalogue is modi\214ed.)72 440.4 Q(Client')5 E 2.5(sw)
-.55 G(ith pri)-2.5 E -.25(va)-.25 G
(te font catalogues will require pri).25 E -.25(va)-.25 G
(te name caches.).25 E F1 2.5(17.15. QueryXInf)72 464.4 R(o)-.25 E F0
(The)97 480 Q F2(fontid)2.5 E F0(is look)2.5 E
(ed up in the resource database, and the font')-.1 E 2.5(sh)-.55 G
(eader and property info is returned.)-2.5 E F1 2.5
(17.16. QueryXExtents8)72 504 R(QueryXExtents16)2.5 E F0(The)97 519.6 Q
F2(fontid)2.5 E F0(is look)2.5 E(ed up in the resource database.)-.1 E
(The supplied list of characters \(interpreted accord-)5 E
(ing to request type\) is then translated into a list of ranges.)72
531.6 Q(The font')5 E(s)-.55 E F1(get_extents\(\))2.5 E F0
(function is then called.)2.5 E(It b)72 543.6 Q
(uilds the requested list of e)-.2 E
(xtents, and returns them along with the number of e)-.15 E 2.5
(xtents. The)-.15 F(results are)2.5 E(properly sw)72 555.6 Q
(apped and sent to the client.)-.1 E F1 2.5(17.17. QueryXBitmaps8)72
579.6 R(QueryXBitmaps16)2.5 E F0(The)97 595.2 Q F2(fontid)2.5 E F0
(is look)2.5 E(ed up in the resource database.)-.1 E
(The supplied list of characters \(interpreted accord-)5 E
(ing to request type\) is then translated into a list of ranges.)72
607.2 Q(The font')5 E(s)-.55 E F1(get_bitmaps\(\))2.5 E F0
(function is called, and)2.5 E(the renderer will b)72 619.2 Q
(uild up the requested bitmaps, using the speci\214ed)-.2 E F2(format,)
2.5 E F0(and returns the bitmaps, the)2.5 E(number of glyphs and the of)
72 631.2 Q 2.5(fsets. The)-.25 F(of)2.5 E(fsets are properly sw)-.25 E
(apped and the of)-.1 E(fsets and bitmaps are sent to)-.25 E
(the clients.)72 643.2 Q F1 2.5(17.18. CloseF)72 667.2 R(ont)-.25 E F0
(The font')97 682.8 Q 2.5(sr)-.55 G(eference count is decremented.)-2.5
E(If this w)5 E(as the last reference, the font')-.1 E(s)-.55 E F1
(unload_f)2.5 E(ont\(\))-.25 E F0
(function is called to free the renderer')72 694.8 Q 2.5(sd)-.55 G
(ata, and the font')-2.5 E 2.5(sF)-.55 G(PE)-2.5 E F1(close_f)2.5 E
(ont\(\))-.25 E F0(function is called to free up)2.5 E(an)72 706.8 Q 2.5
(yF)-.15 G(PE speci\214c data.)-2.5 E 0 Cg EP
%%Page: 16 16
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(-16-)279.67 48 Q/F1 10/Times-Bold@0 SF 2.5
(18. Con\214guration)72 84 R F0
(The con\214guration mechanism is a simple k)97 99.6 Q -.15(ey)-.1 G -.1
(wo).15 G(rd-v).1 E(alue pair)-.25 E 2.5(,s)-.4 G(eparated by an '='.)
-2.5 E(Con\214guration types:)72 115.2 Q 73.29(cardinal non-ne)115.2
139.2 R -.05(ga)-.15 G(ti).05 E .3 -.15(ve n)-.25 H(umber).15 E 73.84
(boolean "[Yy]es",)115.2 163.2 R("[Yy]" "on", "1", "[Nn]o", "[Nn]", "of)
2.5 E(f", "0")-.25 E(resolution)115.2 187.2 Q/F2 10/Times-Italic@0 SF
(car)68 E(dinal,car)-.37 E(dinal)-.37 E F0(list of foo)115.2 211.2 Q 2.5
(1o)69.11 G 2.5(rm)-2.5 G(ore of foo, separated by commas)-2.5 E
(Here is an incomplete list of the supported k)72 238.8 Q -.15(ey)-.1 G
-.1(wo).15 G(rds:).1 E 103(#i)72 262.8 S 2.5(nt)-103 G
(he \214rst column, a comment character)-2.5 E
(catalogue \(list of string\))72 286.8 Q
(Ordered list of font path element names.)180 298.8 Q(alternate-serv)72
322.8 Q(ers \(list of string\))-.15 E(List of alternate serv)180 334.8 Q
(ers for this FS.)-.15 E(client-limit \(cardinal\))72 358.8 Q
(Number of clients this FS will support before refusing)180 370.8 Q
(service.)180 382.8 Q(clone-self \(boolean\))72 406.8 Q
(Whether this FS should attempt to clone itself or)180 418.8 Q(use dele)
180 430.8 Q -.05(ga)-.15 G(tes when it reachs the client-limit.).05 E
(def)72 454.8 Q(ault-point-size \(cardinal\))-.1 E(The def)180 466.8 Q
(ault pointsize \(in decipoints\) for fonts that)-.1 E(don')180 478.8 Q
2.5(ts)-.18 G(pecify)-2.5 E(.)-.65 E(def)72 502.8 Q
(ault-resolutions \(list of resolutions\))-.1 E(Resolutions the serv)180
514.8 Q(er supports by def)-.15 E(ault.)-.1 E
(This information may be used as a hint for pre-rendering.)180 526.8 Q
(error)72 550.8 Q(-\214le \(string\))-.2 E
(Filename of the error \214le.)180 562.8 Q(All w)5 E(arnings and errors)
-.1 E(will be logged here.)180 574.8 Q(port \(cardinal\))72 598.8 Q
(The TCP port on which the serv)180 610.8 Q
(er will listen for connections.)-.15 E(use-syslog \(boolean\))72 634.8
Q(Whether syslog\(3\) is to be used for errors.)180 646.8 Q
(Each renderer may also w)97 662.4 Q(ant pri)-.1 E -.25(va)-.25 G
(te con\214guration options.).25 E(The names should be pre\214x)5 E
(ed by the ren-)-.15 E(derer name, ie)97 674.4 Q F2(pcf-, atm-.)2.5 E F0
(Examples:)72 690 Q 2.5(#a)72 714 S(llo)-2.5 E 2.5(wa~)-.25 G 2.5(am)
-2.5 G -2.25 -.15(eg a)-2.5 H(byte of memory to be reserv).15 E
(ed for cache data)-.15 E(cache-size = 1000000)72 726 Q 0 Cg EP
%%Page: 17 17
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(-17-)279.67 48 Q
(catalogue = pcf:/usr/lib/X11/fonts/misc,speedo:/usr/lib/fonts/speedo)72
84 Q 0 Cg EP
%%Trailer
end
%%EOF
