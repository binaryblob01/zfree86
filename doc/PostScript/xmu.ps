%!PS-Adobe-3.0
%%Creator: groff version 1.19.2
%%CreationDate: Mon Dec 29 01:23:28 2008
%%DocumentNeededResources: font Times-Bold
%%+ font Times-Roman
%%+ font Times-Italic
%%DocumentSuppliedResources: procset grops 1.19 2
%%Pages: 27
%%PageOrder: Ascend
%%DocumentMedia: Default 612 792 0 () ()
%%Orientation: Portrait
%%EndComments
%%BeginDefaults
%%PageMedia: Default
%%EndDefaults
%%BeginProlog
%%BeginResource: procset grops 1.19 2
%!PS-Adobe-3.0 Resource-ProcSet
/setpacking where{
pop
currentpacking
true setpacking
}if
/grops 120 dict dup begin
/SC 32 def
/A/show load def
/B{0 SC 3 -1 roll widthshow}bind def
/C{0 exch ashow}bind def
/D{0 exch 0 SC 5 2 roll awidthshow}bind def
/E{0 rmoveto show}bind def
/F{0 rmoveto 0 SC 3 -1 roll widthshow}bind def
/G{0 rmoveto 0 exch ashow}bind def
/H{0 rmoveto 0 exch 0 SC 5 2 roll awidthshow}bind def
/I{0 exch rmoveto show}bind def
/J{0 exch rmoveto 0 SC 3 -1 roll widthshow}bind def
/K{0 exch rmoveto 0 exch ashow}bind def
/L{0 exch rmoveto 0 exch 0 SC 5 2 roll awidthshow}bind def
/M{rmoveto show}bind def
/N{rmoveto 0 SC 3 -1 roll widthshow}bind def
/O{rmoveto 0 exch ashow}bind def
/P{rmoveto 0 exch 0 SC 5 2 roll awidthshow}bind def
/Q{moveto show}bind def
/R{moveto 0 SC 3 -1 roll widthshow}bind def
/S{moveto 0 exch ashow}bind def
/T{moveto 0 exch 0 SC 5 2 roll awidthshow}bind def
/SF{
findfont exch
[exch dup 0 exch 0 exch neg 0 0]makefont
dup setfont
[exch/setfont cvx]cvx bind def
}bind def
/MF{
findfont
[5 2 roll
0 3 1 roll
neg 0 0]makefont
dup setfont
[exch/setfont cvx]cvx bind def
}bind def
/level0 0 def
/RES 0 def
/PL 0 def
/LS 0 def
/MANUAL{
statusdict begin/manualfeed true store end
}bind def
/PLG{
gsave newpath clippath pathbbox grestore
exch pop add exch pop
}bind def
/BP{
/level0 save def
1 setlinecap
1 setlinejoin
72 RES div dup scale
LS{
90 rotate
}{
0 PL translate
}ifelse
1 -1 scale
}bind def
/EP{
level0 restore
showpage
}def
/DA{
newpath arcn stroke
}bind def
/SN{
transform
.25 sub exch .25 sub exch
round .25 add exch round .25 add exch
itransform
}bind def
/DL{
SN
moveto
SN
lineto stroke
}bind def
/DC{
newpath 0 360 arc closepath
}bind def
/TM matrix def
/DE{
TM currentmatrix pop
translate scale newpath 0 0 .5 0 360 arc closepath
TM setmatrix
}bind def
/RC/rcurveto load def
/RL/rlineto load def
/ST/stroke load def
/MT/moveto load def
/CL/closepath load def
/Fr{
setrgbcolor fill
}bind def
/setcmykcolor where{
pop
/Fk{
setcmykcolor fill
}bind def
}if
/Fg{
setgray fill
}bind def
/FL/fill load def
/LW/setlinewidth load def
/Cr/setrgbcolor load def
/setcmykcolor where{
pop
/Ck/setcmykcolor load def
}if
/Cg/setgray load def
/RE{
findfont
dup maxlength 1 index/FontName known not{1 add}if dict begin
{
1 index/FID ne{def}{pop pop}ifelse
}forall
/Encoding exch def
dup/FontName exch def
currentdict end definefont pop
}bind def
/DEFS 0 def
/EBEGIN{
moveto
DEFS begin
}bind def
/EEND/end load def
/CNT 0 def
/level1 0 def
/PBEGIN{
/level1 save def
translate
div 3 1 roll div exch scale
neg exch neg exch translate
0 setgray
0 setlinecap
1 setlinewidth
0 setlinejoin
10 setmiterlimit
[]0 setdash
/setstrokeadjust where{
pop
false setstrokeadjust
}if
/setoverprint where{
pop
false setoverprint
}if
newpath
/CNT countdictstack def
userdict begin
/showpage{}def
/setpagedevice{}def
}bind def
/PEND{
countdictstack CNT sub{end}repeat
level1 restore
}bind def
end def
/setpacking where{
pop
setpacking
}if
%%EndResource
%%EndProlog
%%BeginSetup
%%BeginFeature: *PageSize Default
<< /PageSize [ 612 792 ] /ImagingBBox null >> setpagedevice
%%EndFeature
%%IncludeResource: font Times-Bold
%%IncludeResource: font Times-Roman
%%IncludeResource: font Times-Italic
grops begin/DEFS 1 dict def DEFS begin/u{.001 mul}bind def end/RES 72
def/PL 792 def/LS false def/ENC0[/asciicircum/asciitilde/Scaron/Zcaron
/scaron/zcaron/Ydieresis/trademark/quotesingle/Euro/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/space/exclam/quotedbl/numbersign/dollar/percent
/ampersand/quoteright/parenleft/parenright/asterisk/plus/comma/hyphen
/period/slash/zero/one/two/three/four/five/six/seven/eight/nine/colon
/semicolon/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J/K/L/M/N/O
/P/Q/R/S/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright/circumflex
/underscore/quoteleft/a/b/c/d/e/f/g/h/i/j/k/l/m/n/o/p/q/r/s/t/u/v/w/x/y
/z/braceleft/bar/braceright/tilde/.notdef/quotesinglbase/guillemotleft
/guillemotright/bullet/florin/fraction/perthousand/dagger/daggerdbl
/endash/emdash/ff/fi/fl/ffi/ffl/dotlessi/dotlessj/grave/hungarumlaut
/dotaccent/breve/caron/ring/ogonek/quotedblleft/quotedblright/oe/lslash
/quotedblbase/OE/Lslash/.notdef/exclamdown/cent/sterling/currency/yen
/brokenbar/section/dieresis/copyright/ordfeminine/guilsinglleft
/logicalnot/minus/registered/macron/degree/plusminus/twosuperior
/threesuperior/acute/mu/paragraph/periodcentered/cedilla/onesuperior
/ordmasculine/guilsinglright/onequarter/onehalf/threequarters
/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE
/Ccedilla/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex
/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis
/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn
/germandbls/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash
/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]def
/Times-Italic@0 ENC0/Times-Italic RE/Times-Roman@0 ENC0/Times-Roman RE
/Times-Bold@0 ENC0/Times-Bold RE
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
BP
%%EndPageSetup
/F0 12/Times-Bold@0 SF(Xmu Library)253.5 84 Q/F1 10/Times-Roman@0 SF 2.5
(XV)236.065 102 S(ersion 11, Release 6.4)-3.61 E -.74(``)261.4 126 S/F2
10/Times-Italic@0 SF(Don').74 E 2.5(ta)-.3 G(sk.)-2.5 E F1 -.74('')C
(Cop)72 165.6 Q(yright \251 1989 X Consortium)-.1 E
(Permission is hereby granted, free of char)72 181.2 Q(ge, to an)-.18 E
2.5(yp)-.15 G(erson obtaining a cop)-2.5 E 2.5(yo)-.1 G 2.5(ft)-2.5 G
(his softw)-2.5 E(are and associated)-.1 E
(documentation \214les \(the `)72 193.2 Q(`Softw)-.74 E(are')-.1 E
('\), to deal in the Softw)-.74 E
(are without restriction, including without limita-)-.1 E
(tion the rights to use, cop)72 205.2 Q 1.3 -.65(y, m)-.1 H(odify).65 E
2.5(,m)-.65 G(er)-2.5 E(ge, publish, distrib)-.18 E
(ute, sublicense, and/or sell copies of the Soft-)-.2 E -.1(wa)72 217.2
S(re, and to permit persons to whom the Softw).1 E
(are is furnished to do so, subject to the follo)-.1 E(wing conditions:)
-.25 E(The abo)72 232.8 Q .3 -.15(ve c)-.15 H(op).15 E(yright notice an\
d this permission notice shall be included in all copies or substantial\
 portions)-.1 E(of the Softw)72 244.8 Q(are.)-.1 E(THE SOFTW)72 260.4 Q
(ARE IS PR)-1.2 E -.5(OV)-.4 G(IDED `).5 E -.8(`A)-.74 G 2.5(SI).8 G(S')
-2.5 E(', WITHOUT W)-.74 E(ARRANTY OF ANY KIND, EXPRESS OR)-1.2 E
(IMPLIED, INCLUDING B)72 272.4 Q(UT NO)-.1 E 2.5(TL)-.4 G(IMITED T)-2.5
E 2.5(OT)-.18 G(HE W)-2.5 E(ARRANTIES OF MERCHANT)-1.2 E(ABILITY)-.93 E
2.5(,F)-1.29 G(IT)-2.5 E(-)-.92 E(NESS FOR A P)72 284.4 Q(AR)-.92 E
(TICULAR PURPOSE AND NONINFRINGEMENT)-.6 E 5(.I)-.74 G 2.5(NN)-5 G 2.5
(OE)-2.5 G(VENT SHALL THE X)-2.5 E(CONSOR)72 296.4 Q
(TIUM BE LIABLE FOR ANY CLAIM, D)-.6 E(AMA)-.4 E(GES OR O)-.4 E
(THER LIABILITY)-.4 E 2.5(,W)-1.29 G(HETHER IN)-2.5 E(AN A)72 308.4 Q
(CTION OF CONTRA)-.4 E(CT)-.4 E 2.5(,T)-.74 G(OR)-2.68 E 2.5(TO)-.6 G
2.5(RO)-2.5 G(THER)-2.9 E(WISE, ARISING FR)-.55 E
(OM, OUT OF OR IN CONNEC-)-.4 E(TION WITH THE SOFTW)72 320.4 Q
(ARE OR THE USE OR O)-1.2 E(THER DEALINGS IN THE SOFTW)-.4 E(ARE.)-1.2 E
(Except as contained in this notice, the name of the X Consortium shall\
 not be used in adv)72 336 Q(ertising or other)-.15 E(-)-.2 E
(wise to promote the sale, use or other dealings in this Softw)72 348 Q
(are without prior written authorization from the)-.1 E 2.5(XC)72 360 S
(onsortium.)-2.5 E F2 2.5(XW)72 408 S(indow System)-3.05 E F1
(is a trademark of X Consortium, Inc.)2.5 E 0 Cg EP
%%Page: 2 2
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(-2-)282.17 48 Q/F1 10/Times-Bold@0 SF 2.5
(1. Intr)72 84 R(oduction)-.18 E F0(The Xmu Library is a collection of \
miscellaneous \(some might say random\) utility functions that ha)72
99.6 Q .3 -.15(ve b)-.2 H(een).15 E(useful in b)72 111.6 Q(uilding v)-.2
E(arious applications and widgets.)-.25 E
(This library is required by the Athena W)5 E(idgets.)-.4 E F1 2.5
(2. Atom)72 139.2 R(Functions)2.5 E F0(The use the functions and macros\
 de\214ned in this section, you should include the header \214le)72
154.8 Q(<)72 166.8 Q F1(X11/Xmu/Atoms.h).833 E F0(>.).833 E(XA_A)72
194.4 Q -.18(TO)-1.11 G(M_P).18 E(AIR\()-.92 E/F2 10/Times-Italic@0 SF
(d)A F0(\))A(XA_CHARA)72 206.4 Q(CTER_POSITION\()-.4 E F2(d)A F0(\))A
(XA_CLASS\()72 218.4 Q F2(d)A F0(\))A(XA_CLIENT_WINDO)72 230.4 Q(W\()
-.35 E F2(d)A F0(\))A(XA_CLIPBO)72 242.4 Q(ARD\()-.35 E F2(d)A F0(\))A
(XA_COMPOUND_TEXT\()72 254.4 Q F2(d)A F0(\))A(XA_DECNET_ADDRESS\()72
266.4 Q F2(d)A F0(\))A(XA_DELETE\()72 278.4 Q F2(d)A F0(\))A(XA_FILEN)72
290.4 Q(AME\()-.35 E F2(d)A F0(\))A(XA_HOSTN)72 302.4 Q(AME\()-.35 E F2
(d)A F0(\))A(XA_IP_ADDRESS\()72 314.4 Q F2(d)A F0(\))A(XA_LENGTH\()72
326.4 Q F2(d)A F0(\))A(XA_LIST_LENGTH\()72 338.4 Q F2(d)A F0(\))A(XA_N)
72 350.4 Q(AME\()-.35 E F2(d)A F0(\))A(XA_NET_ADDRESS\()72 362.4 Q F2(d)
A F0(\))A(XA_NULL\()72 374.4 Q F2(d)A F0(\))A(XA_O)72 386.4 Q(WNER_OS\()
-.35 E F2(d)A F0(\))A(XA_SP)72 398.4 Q(AN\()-.92 E F2(d)A F0(\))A(XA_T)
72 410.4 Q(ARGETS\()-.93 E F2(d)A F0(\))A(XA_TEXT\()72 422.4 Q F2(d)A F0
(\))A(XA_TIMEST)72 434.4 Q(AMP\()-.93 E F2(d)A F0(\))A(XA_USER\()72
446.4 Q F2(d)A F0(\))A(XA_UTF8_STRING\()72 458.4 Q F2(d)A F0(\))A
(These macros tak)72 477.6 Q 2.5(ead)-.1 G(isplay as ar)-2.5 E
(gument and return an)-.18 E F1(Atom)3.333 E F0 5(.T).833 G
(he name of the atom is obtained from the)-5 E(macro name by remo)72
489.6 Q(ving the leading characters `)-.15 E(`XA_')-.74 E 2.5('. The)
-.74 F F1(Atom)3.333 E F0 -.25(va)3.333 G
(lue is cached, such that subsequent).25 E
(requests do not cause another round-trip to the serv)72 501.6 Q(er)-.15
E(.)-.55 E(AtomPtr XmuMak)72 529.2 Q(eAtom\()-.1 E F2(name)A F0(\))A
(char*)87 541.2 Q F2(name)2.5 E F0(;)A F2(name)72 560.4 Q F0
(speci\214es the atom name)50.34 E
(This function creates and initializes an opaque object, an)72 576 Q F1
(AtomPtr)3.333 E F0 2.5(,f).833 G(or an)-2.5 E F1(Atom)3.333 E F0
(with the gi)3.333 E -.15(ve)-.25 G 2.5(nn).15 G(ame.)-2.5 E F1
(XmuInter)72.833 588 Q(nAtom)-.15 E F0(can be used to cache the Atom v)
3.333 E(alue for one or more displays.)-.25 E(char *XmuNameOfAtom\()72
615.6 Q F2(atom_ptr)A F0(\))A(AtomPtr)87 627.6 Q F2(atom_ptr)2.5 E F0(;)
A F2(atom_ptr)72 646.8 Q F0(speci\214es the AtomPtr)35.33 E
(The function returns the name of an AtomPtr)72 662.4 Q(.)-.55 E
(Atom XmuInternAtom\()72 690 Q F2(d)A F0(,)A F2(atom_ptr)2.5 E F0(\))A
(Display *)87 702 Q F2(d)A F0(;)A(AtomPtr)87 714 Q F2(atom_ptr)2.5 E F0
(;)A 0 Cg EP
%%Page: 3 3
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(-3-)282.17 48 Q/F1 10/Times-Italic@0 SF(d)72 84
Q F0(speci\214es the connection to the X serv)67 E(er)-.15 E F1
(atom_ptr)72 99.6 Q F0(speci\214es the AtomPtr)35.33 E
(This function returns the)72 115.2 Q/F2 10/Times-Bold@0 SF(Atom)3.333 E
F0(for an)3.333 E F2(AtomPtr)3.333 E F0 5(.T).833 G(he)-5 E F2(Atom)
3.333 E F0(is cached, such that subsequent requests do)3.333 E
(not cause another round-trip to the serv)72 127.2 Q(er)-.15 E(.)-.55 E
(char *XmuGetAtomName\()72 154.8 Q F1(d)A F0(,)A F1(atom)2.5 E F0(\))A
(Display *)87 166.8 Q F1(d)A F0(;)A(Atom)87 178.8 Q F1(atom)2.5 E F0(;)A
F1(d)72 198 Q F0(speci\214es the connection to the X serv)67 E(er)-.15 E
F1(atom)72 213.6 Q F0(speci\214es the atom whose name is desired)52 E
(This function returns the name of an)72 229.2 Q F2(Atom)3.333 E F0 5
(.T).833 G(he result is cached, such that subsequent requests do not)-5
E(cause another round-trip to the serv)72 241.2 Q(er)-.15 E(.)-.55 E -.2
(vo)72 268.8 S(id XmuInternStrings\().2 E F1(d)A F0(,)A F1(names)2.5 E
F0(,)A F1(count)2.5 E F0(,)A F1(atoms)2.5 E F0(\))A(Display *)87 280.8 Q
F1(d)A F0(;)A(String *)87 292.8 Q F1(names)A F0(;)A(Cardinal)87 304.8 Q
F1(count)2.5 E F0(;)A(Atom *)87 316.8 Q F1(atoms)A F0(;)A F1(d)72 336 Q
F0(speci\214es the connection to the X serv)67 E(er)-.15 E F1(names)72
351.6 Q F0(speci\214es the strings to intern)46.45 E F1(count)72 367.2 Q
F0(speci\214es the number of strings)49.78 E F1(atoms)72 382.8 Q F0
(returns the list of Atom v)48.11 E(alues)-.25 E(This function con)72
398.4 Q -.15(ve)-.4 G(rts a list of atom names into).15 E F2(Atom)3.333
E F0 -.25(va)3.333 G 2.5(lues. The).25 F
(results are cached, such that subsequent)2.5 E
(requests do not cause further round-trips to the serv)72 410.4 Q(er)
-.15 E 5(.T)-.55 G(he caller is responsible for preallocating the array)
-5 E(pointed at by atoms.)72 422.4 Q F2 2.5(3. Err)72 450 R
(or Handler Functions)-.18 E F0 1.6 -.8(To u)72 465.6 T(se the function\
s de\214ned in this section, you should include the header \214le <).8 E
F2(X11/Xmu/Err).833 E(or)-.18 E(.h)-1 E F0(>.).833 E(int XmuPrintDef)72
493.2 Q(aultErrorMessage\()-.1 E F1(dpy)A F0(,)A F1 -.15(ev)2.5 G(ent)
.15 E F0(,)A F1(fp)2.5 E F0(\))A(Display *)87 505.2 Q F1(dpy)A F0(;)A
(XErrorEv)87 517.2 Q(ent *)-.15 E F1 -.15(ev)C(ent).15 E F0(;)A(FILE *)
87 529.2 Q F1(fp)A F0(;)A F1(dpy)72 548.4 Q F0
(speci\214es the connection to the X serv)57.56 E(er)-.15 E F1 -.15(ev)
72 564 S(ent).15 E F0(speci\214es the error)51.05 E F1(fp)72 579.6 Q F0
(speci\214es where to print the error message)64.22 E
(This function prints an error message, equi)72 595.2 Q -.25(va)-.25 G
(lent to Xlib').25 E 2.5(sd)-.55 G(ef)-2.5 E
(ault error message for protocol errors.)-.1 E(It)5 E
(returns a non-zero v)72 607.2 Q(alue if the caller should consider e)
-.25 E(xiting, otherwise it returns 0.)-.15 E(This function can be)5 E
(used when you need to write your o)72 619.2 Q(wn error handler)-.25 E
2.5(,b)-.4 G(ut need to print out an error from within that handler)-2.7
E(.)-.55 E(int XmuSimpleErrorHandler\()72 646.8 Q F1(dpy)A F0(,)A F1
(err)2.5 E(orp)-.45 E F0(\))A(Display *)87 658.8 Q F1(dpy)A F0(;)A
(XErrorEv)87 670.8 Q(ent *)-.15 E F1(err)A(orp)-.45 E F0(;)A F1(dpy)72
690 Q F0(speci\214es the connection to the X serv)57.56 E(er)-.15 E F1
(err)72 705.6 Q(orp)-.45 E F0(speci\214es the error)46.34 E 0 Cg EP
%%Page: 4 4
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(-4-)282.17 48 Q
(This function ignores errors for)72 84 Q/F1 10/Times-Bold@0 SF(BadW)
3.333 E(indo)-.18 E(w)-.1 E F0(errors for)3.333 E F1(XQueryT)3.333 E
-.18(re)-.74 G(e).18 E F0(and)3.333 E F1(XGetW)3.333 E(indo)-.18 E
(wAttrib)-.1 E(utes)-.2 E F0 2.5(,a).833 G(nd)-2.5 E(ignores)72 96 Q F1
(BadDrawable)3.333 E F0(errors for)3.333 E F1(XGetGeometry)3.333 E F0
2.5(;i).833 G 2.5(tr)-2.5 G(eturns 0 in those cases.)-2.5 E
(Otherwise, it prints the)5 E(def)72 108 Q
(ault error message, and returns a non-zero v)-.1 E
(alue if the caller should consider e)-.25 E
(xiting, and 0 if the caller)-.15 E(should not e)72 120 Q(xit.)-.15 E F1
2.5(4. System)72 147.6 R(Utility Functions)2.5 E F0 1.6 -.8(To u)72
163.2 T(se the functions de\214ned in this section, you should include \
the header \214le <).8 E F1(X11/Xmu/SysUtil.h).833 E F0(>.).833 E
(int XmuGetHostname\()72 190.8 Q/F2 10/Times-Italic@0 SF -.2(bu)C(f).2 E
F0(,)A F2(maxlen)2.5 E F0(\))A(char *)87 202.8 Q F2 -.2(bu)C(f).2 E F0
(;)A(int)87 214.8 Q F2(maxlen)2.5 E F0(;)A F2 -.2(bu)72 234 S(f).2 E F0
(returns the host name)59.42 E F2(maxlen)72 249.6 Q F0
(speci\214es the length of b)43.12 E(uf)-.2 E
(This function stores the null terminated name of the local host in b)72
265.2 Q(uf, and returns length of the name.)-.2 E(This)5 E
(function hides operating system dif)72 277.2 Q
(ferences, such as whether to call gethostname or uname.)-.25 E F1 2.5
(5. W)72 304.8 R(indo)-.18 E 2.5(wU)-.1 G(tility Functions)-2.5 E F0 1.6
-.8(To u)72 320.4 T(se the functions de\214ned in this section, you sho\
uld include the header \214le <).8 E F1(X11/Xmu/W).833 E(inUtil.h)-.18 E
F0(>.).833 E(Screen *XmuScreenOfW)72 348 Q(indo)-.4 E(w\()-.25 E F2(dpy)
A F0(,)A F2(w)2.5 E F0(\))A(Display *)87 360 Q F2(dpy)A F0(;)A -.4(Wi)87
372 S(ndo).4 E(w)-.25 E F2(w)2.5 E F0(;)A F2(dpy)72 391.2 Q F0
(speci\214es the connection to the X serv)57.56 E(er)-.15 E F2(w)72
406.8 Q F0(speci\214es the windo)65.33 E(w)-.25 E
(This function returns the)72 422.4 Q F1(Scr)3.333 E(een)-.18 E F0
(on which the speci\214ed windo)3.333 E 2.5(ww)-.25 G(as created.)-2.6 E
-.4(Wi)72 450 S(ndo).4 E 2.5(wX)-.25 G(muClientW)-2.5 E(indo)-.4 E(w\()
-.25 E F2(dpy)A F0(,)A F2(win)2.5 E F0(\))A(Display *)87 462 Q F2(dpy)A
F0(;)A -.4(Wi)87 474 S(ndo).4 E(w)-.25 E F2(win)2.5 E F0(;)A F2(dpy)72
493.2 Q F0(speci\214es the connection to the X serv)57.56 E(er)-.15 E F2
(win)72 508.8 Q F0(speci\214es the windo)57.55 E(w)-.25 E
(This function \214nds a windo)72 524.4 Q 1.3 -.65(w, a)-.25 H 2.5(to)
.65 G 2.5(rb)-2.5 G(elo)-2.5 E 2.5(wt)-.25 G(he speci\214ed windo)-2.5 E
1.3 -.65(w, w)-.25 H(hich has a WM_ST).65 E -1.11(AT)-.93 G 2.5(Ep)1.11
G(roperty)-2.5 E 5(.I)-.65 G 2.5(fs)-5 G(uch)-2.5 E 2.5(aw)72 536.4 S
(indo)-2.5 E 2.5(wi)-.25 G 2.5(sf)-2.5 G
(ound, it is returned, otherwise the ar)-2.5 E(gument windo)-.18 E 2.5
(wi)-.25 G 2.5(sr)-2.5 G(eturned.)-2.5 E(Bool XmuUpdateMapHints\()72 564
Q F2(dpy)A F0(,)A F2(w)2.5 E F0(,)A F2(hints)2.5 E F0(\))A(Display *)87
576 Q F2(dpy)A F0(;)A -.4(Wi)87 588 S(ndo).4 E(w)-.25 E F2(w)2.5 E F0(;)
A(XSizeHints *)87 600 Q F2(hints)A F0(;)A F2(dpy)72 619.2 Q F0
(speci\214es the connection to the X serv)57.56 E(er)-.15 E F2(win)72
634.8 Q F0(speci\214es the windo)57.55 E(w)-.25 E F2(hints)72 650.4 Q F0
(speci\214es the ne)52.55 E 2.5(wh)-.25 G(ints, or NULL)-2.5 E
(This function clears the)72 666 Q F1(PP)3.333 E(osition)-.2 E F0(and)
3.333 E F1(PSize)3.333 E F0(\215ags and sets the)3.333 E F1(USP)3.333 E
(osition)-.2 E F0(and)3.333 E F1(USSize)3.333 E F0(\215ags in the hints)
3.333 E(structure, and then stores the hints for the windo)72 678 Q 2.5
(wu)-.25 G(sing)-2.5 E F1(XSetWMNormalHints)3.333 E F0(and returns)3.333
E F1 -.74(Tr)3.333 G(ue).74 E F0 5(.I).833 G(f)-5 E(NULL is passed for \
the hints structure, then the current hints are read back from the wind\
o)72 690 Q 2.5(wu)-.25 G(sing)-2.5 E F1(XGetWMNormalHints)72.833 702 Q
F0(and are used instead, and)3.333 E F1 -.74(Tr)3.333 G(ue).74 E F0
(is returned; otherwise)3.333 E F1 -.25(Fa)3.333 G(lse).25 E F0
(is returned.)3.333 E 0 Cg EP
%%Page: 5 5
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(-5-)282.17 48 Q/F1 10/Times-Bold@0 SF 2.5
(6. Cursor)72 84 R(Utility Functions)2.5 E F0 1.6 -.8(To u)72 99.6 T(se\
 the functions de\214ned in this section, you should include the header\
 \214le <).8 E F1(X11/Xmu/CurUtil.h).833 E F0(>.).833 E
(int XmuCursorNameT)72 127.2 Q(oInde)-.8 E(x\()-.15 E/F2 10
/Times-Italic@0 SF(name)A F0(\))A(char *)87 139.2 Q F2(name)A F0(;)A F2
(name)72 158.4 Q F0(speci\214es the name of the cursor)50.34 E
(This function tak)72 174 Q
(es the name of a standard cursor and returns its inde)-.1 E 2.5(xi)-.15
G 2.5(nt)-2.5 G(he standard cursor font.)-2.5 E(The cur)5 E(-)-.2 E
(sor names are formed by remo)72 186 Q(ving the `)-.15 E(`XC_')-.74 E
2.5('p)-.74 G
(re\214x from the cursor de\214nes listed in Appendix B of the)-2.5 E
(Xlib manual.)72 198 Q F1 2.5(7. Graphics)72 225.6 R(Functions)2.5 E F0
1.6 -.8(To u)72 241.2 T(se the functions de\214ned in this section, you\
 should include the header \214le <).8 E F1(X11/Xmu/Drawing).833 E(.h)
-.15 E F0(>.).833 E -.2(vo)72 268.8 S(id XmuDra).2 E
(wRoundedRectangle\()-.15 E F2(dpy)A F0(,)A F2(dr)2.5 E(aw)-.15 E F0(,)A
F2(gc)2.5 E F0(,)A F2(x)2.5 E F0(,)A F2(y)2.5 E F0(,)A F2(w)2.5 E F0(,)A
F2(h)2.5 E F0(,)A F2 -.15(ew)2.5 G F0(,).15 E F2(eh)2.5 E F0(\))A
(Display *)87 280.8 Q F2(dpy)A F0(;)A(Dra)87 292.8 Q -.1(wa)-.15 G(ble)
.1 E F2(dr)2.5 E(aw)-.15 E F0(;)A(GC)87 304.8 Q F2(gc)2.5 E F0(;)A(int)
87 316.8 Q F2(x)2.5 E F0(,)A F2(y)2.5 E F0(,)A F2(w)2.5 E F0(,)A F2(h)
2.5 E F0(,)A F2 -.15(ew)2.5 G F0(,).15 E F2(eh)2.5 E F0(;)A F2(dpy)72
336 Q F0(speci\214es the connection to the X serv)57.56 E(er)-.15 E F2
(dr)72 351.6 Q(aw)-.15 E F0(speci\214es the dra)51.59 E -.1(wa)-.15 G
(ble).1 E F2(gc)72 367.2 Q F0(speci\214es the GC)62.56 E F2(x)72 382.8 Q
F0(speci\214es the upper left x coordinate)67.56 E F2(y)72 398.4 Q F0
(speci\214es the upper left y coordinate)67.56 E F2(w)72 414 Q F0
(speci\214es the rectangle width)65.33 E F2(h)72 429.6 Q F0
(speci\214es the rectangle height)67 E F2 -.15(ew)72 445.2 S F0
(speci\214es the corner width)61.19 E F2(eh)72 460.8 Q F0
(speci\214es the corner height)62.56 E(This function dra)72 476.4 Q
(ws a rounded rectangle, where x, y)-.15 E 2.5(,w)-.65 G 2.5(,ha)-3.15 G
(re the dimensions of the o)-2.5 E -.15(ve)-.15 G(rall rectangle, and)
.15 E .5 -.25(ew a)72 488.4 T
(nd eh are the sizes of a bounding box that the corners are dra).25 E
(wn inside of; e)-.15 E 2.5(ws)-.25 G(hould be no more than)-2.5 E
(half of w)72 500.4 Q 2.5(,a)-.65 G
(nd eh should be no more than half of h.)-2.5 E
(The current GC line attrib)5 E(utes control all attrib)-.2 E(utes of)
-.2 E(the line.)72 512.4 Q -.2(vo)72 540 S(id XmuFillRoundedRectangle\()
.2 E F2(dpy)A F0(,)A F2(dr)2.5 E(aw)-.15 E F0(,)A F2(gc)2.5 E F0(,)A F2
(x)2.5 E F0(,)A F2(y)2.5 E F0(,)A F2(w)2.5 E F0(,)A F2(h)2.5 E F0(,)A F2
-.15(ew)2.5 G F0(,).15 E F2(eh)2.5 E F0(\))A(Display *)87 552 Q F2(dpy)A
F0(;)A(Dra)87 564 Q -.1(wa)-.15 G(ble).1 E F2(dr)2.5 E(aw)-.15 E F0(;)A
(GC)87 576 Q F2(gc)2.5 E F0(;)A(int)87 588 Q F2(x)2.5 E F0(,)A F2(y)2.5
E F0(,)A F2(w)2.5 E F0(,)A F2(h)2.5 E F0(,)A F2 -.15(ew)2.5 G F0(,).15 E
F2(eh)2.5 E F0(;)A F2(dpy)72 607.2 Q F0
(speci\214es the connection to the X serv)57.56 E(er)-.15 E F2(dr)72
622.8 Q(aw)-.15 E F0(speci\214es the dra)51.59 E -.1(wa)-.15 G(ble).1 E
F2(gc)72 638.4 Q F0(speci\214es the GC)62.56 E F2(x)72 654 Q F0
(speci\214es the upper left x coordinate)67.56 E F2(y)72 669.6 Q F0
(speci\214es the upper left y coordinate)67.56 E F2(w)72 685.2 Q F0
(speci\214es the rectangle width)65.33 E F2(h)72 700.8 Q F0
(speci\214es the rectangle height)67 E F2 -.15(ew)72 716.4 S F0
(speci\214es the corner width)61.19 E 0 Cg EP
%%Page: 6 6
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(-6-)282.17 48 Q/F1 10/Times-Italic@0 SF(eh)72 84
Q F0(speci\214es the corner height)62.56 E(This function dra)72 99.6 Q
(ws a \214lled rounded rectangle, where x, y)-.15 E 2.5(,w)-.65 G 2.5
(,ha)-3.15 G(re the dimensions of the o)-2.5 E -.15(ve)-.15 G
(rall rectangle,).15 E(and e)72 111.6 Q 2.5(wa)-.25 G
(nd eh are the sizes of a bounding box that the corners are dra)-2.5 E
(wn inside of; e)-.15 E 2.5(ws)-.25 G(hould be no more)-2.5 E
(than half of w)72 123.6 Q 2.5(,a)-.65 G
(nd eh should be no more than half of h.)-2.5 E
(The current GC \214ll settings control all attrib)5 E(utes of)-.2 E
(the \214ll contents.)72 135.6 Q(XmuDra)72 163.2 Q(wLogo\()-.15 E F1
(dpy)A F0(,)A F1(dr)2.5 E(awable)-.15 E F0(,)A F1(gcF)2.5 E(or)-1.05 E
(e)-.37 E F0(,)A F1(gcBac)2.5 E(k)-.2 E F0(,)A F1(x)2.5 E F0(,)A F1(y)
2.5 E F0(,)A F1(width)2.5 E F0(,)A F1(height)2.5 E F0(\))A(Display *)87
175.2 Q F1(dpy)A F0(;)A(Dra)87 187.2 Q -.1(wa)-.15 G(ble).1 E F1(dr)2.5
E(awable)-.15 E F0(;)A(GC)87 199.2 Q F1(gcF)2.5 E(or)-1.05 E(e)-.37 E F0
(,)A F1(gcBac)2.5 E(k)-.2 E F0(;)A(int)87 211.2 Q F1(x)2.5 E F0(,)A F1
(y)2.5 E F0(;)A(unsigned int)87 223.2 Q F1(width)2.5 E F0(,)A F1(height)
2.5 E F0(;)A F1(dpy)72 242.4 Q F0
(speci\214es the connection to the X serv)57.56 E(er)-.15 E F1(dr)72 258
Q(awable)-.15 E F0(speci\214es the dra)34.37 E -.1(wa)-.15 G(ble).1 E F1
(gcF)72 273.6 Q(or)-1.05 E(e)-.37 E F0(speci\214es the fore)44.54 E
(ground GC)-.15 E F1(gcBac)72 289.2 Q(k)-.2 E F0
(speci\214es the background GC)42.77 E F1(x)72 304.8 Q F0
(speci\214es the upper left x coordinate)67.56 E F1(y)72 320.4 Q F0
(speci\214es the upper left y coordinate)67.56 E F1(width)72 336 Q F0
(speci\214es the logo width)49.77 E F1(height)72 351.6 Q F0
(speci\214es the logo height)47 E(This function dra)72 367.2 Q(ws the `)
-.15 E(`of)-.74 E(\214cial')-.25 E 2.5('XW)-.74 G(indo)-2.9 E 2.5(wS)
-.25 G(ystem logo.)-2.5 E(The bounding box of the logo in the dra)5 E
-.1(wa)-.15 G(ble).1 E(is gi)72 379.2 Q -.15(ve)-.25 G 2.5(nb).15 G 2.5
(yx)-2.5 G 2.5(,y)-2.5 G 2.5(,w)-3.15 G(idth, and height.)-2.5 E
(The logo itself is \214lled using gcF)5 E
(ore, and the rest of the rectangle is)-.15 E(\214lled using gcBack.)72
391.2 Q(Pixmap XmuCreateStippledPixmap\()72 418.8 Q F1(scr)A(een)-.37 E
F0(,)A F1(for)2.5 E(e)-.37 E F0(,)A F1(bac)2.5 E(k)-.2 E F0(,)A F1
(depth)2.5 E F0(\))A(Screen *)87 430.8 Q F1(scr)A(een)-.37 E F0(;)A(Pix)
87 442.8 Q(el)-.15 E F1(for)2.5 E(e)-.37 E F0(,)A F1(bac)2.5 E(k)-.2 E
F0(;)A(unsigned int)87 454.8 Q F1(depth)2.5 E F0(;)A F1(scr)72 474 Q
(een)-.37 E F0(speci\214es the screen the pixmap is created on)46.27 E
F1(for)72 489.6 Q(e)-.37 E F0(speci\214es the fore)56.26 E(ground pix)
-.15 E(el v)-.15 E(alue)-.25 E F1(bac)72 505.2 Q(k)-.2 E F0
(speci\214es the background pix)53.32 E(el v)-.15 E(alue)-.25 E F1
(depth)72 520.8 Q F0(speci\214es the depth of the pixmap)49.78 E
(This function creates a tw)72 536.4 Q 2.5(op)-.1 G(ix)-2.5 E
(el by one pix)-.15 E
(el stippled pixmap of speci\214ed depth on the speci\214ed screen.)-.15
E(The pixmap is cached so that multiple requests share the same pixmap.)
72 548.4 Q(The pixmap should be freed with)5 E/F2 10/Times-Bold@0 SF
(XmuReleaseStippledPixmap)72.833 560.4 Q F0
(to maintain correct reference counts.)3.333 E -.2(vo)72 588 S
(id XmuReleaseStippledPixmap\().2 E F1(scr)A(een)-.37 E F0(,)A F1
(pixmap)2.5 E F0(\))A(Screen *)87 600 Q F1(scr)A(een)-.37 E F0(;)A
(Pixmap)87 612 Q F1(pixmap)2.5 E F0(;)A F1(scr)72 631.2 Q(een)-.37 E F0
(speci\214es the screen the pixmap w)46.27 E(as created on)-.1 E F1
(pixmap)72 646.8 Q F0(speci\214es the pixmap to free)42.56 E
(This function frees a pixmap created with)72 662.4 Q F2(XmuCr)3.333 E
(eateStippledPixmap)-.18 E F0(.).833 E 0 Cg EP
%%Page: 7 7
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(-7-)282.17 48 Q(int XmuReadBitmapData\()72 84 Q
/F1 10/Times-Italic@0 SF(fstr)A(eam)-.37 E F0(,)A F1(width)2.5 E F0(,)A
F1(height)2.5 E F0(,)A F1(datap)2.5 E F0(,)A F1(x_hot)2.5 E F0(,)A F1
(y_hot)2.5 E F0(\))A(FILE *)82 96 Q F1(fstr)A(eam)-.37 E F0(;)A
(unsigned int *)82 108 Q F1(width)A F0 2.5(,*)C F1(height)-2.5 E F0(;)A
(unsigned char **)82 120 Q F1(datap)A F0(;)A(int *)82 132 Q F1(x_hot)A
F0 2.5(,*)C F1(y_hot)-2.5 E F0(;)A F1(str)72 151.2 Q(eam)-.37 E F0
(speci\214es the stream to read from)45.15 E F1(width)72 166.8 Q F0
(returns the width of the bitmap)49.77 E F1(height)72 182.4 Q F0
(returns the height of the bitmap)47 E F1(datap)72 198 Q F0
(returns the parsed bitmap data)49.22 E F1(x_hot)72 213.6 Q F0
(returns the x coordinate of the hotspot)49.78 E F1(y_hot)72 229.2 Q F0
(returns the y coordinate of the hotspot)49.78 E(This function reads a \
standard bitmap \214le description from the speci\214ed stream, and ret\
urns the parsed data)72 244.8 Q(in a format suitable for passing to)72
256.8 Q/F2 10/Times-Bold@0 SF(XCr)3.333 E(eateBitmapFr)-.18 E(omData)
-.18 E F0 5(.T).833 G(he return v)-5 E(alue of the function has the)-.25
E(same interpretation as the return v)72 268.8 Q(alue for)-.25 E F2
(XReadBitmapFile)3.333 E F0(.).833 E(int XmuReadBitmapDataFromFile\()72
296.4 Q F1(\214lename)A F0(,)A F1(width)2.5 E F0(,)A F1(height)2.5 E F0
(,)A F1(datap)2.5 E F0(,)A F1(x_hot)2.5 E F0(,)A F1(y_hot)2.5 E F0(\))A
(char *)82 308.4 Q F1(\214lename)A F0(;)A(unsigned int *)82 320.4 Q F1
(width)A F0 2.5(,*)C F1(height)-2.5 E F0(;)A(unsigned char **)82 332.4 Q
F1(datap)A F0(;)A(int *)82 344.4 Q F1(x_hot)A F0 2.5(,*)C F1(y_hot)-2.5
E F0(;)A F1(\214lename)72 363.6 Q F0
(speci\214es the \214le to read from)38.12 E F1(width)72 379.2 Q F0
(returns the width of the bitmap)49.77 E F1(height)72 394.8 Q F0
(returns the height of the bitmap)47 E F1(datap)72 410.4 Q F0
(returns the parsed bitmap data)49.22 E F1(x_hot)72 426 Q F0
(returns the x coordinate of the hotspot)49.78 E F1(y_hot)72 441.6 Q F0
(returns the y coordinate of the hotspot)49.78 E(This function reads a \
standard bitmap \214le description from the speci\214ed \214le, and ret\
urns the parsed data in)72 457.2 Q 2.5(af)72 469.2 S
(ormat suitable for passing to)-2.5 E F2(XCr)3.333 E(eateBitmapFr)-.18 E
(omData)-.18 E F0 5(.T).833 G(he return v)-5 E
(alue of the function has the same)-.25 E
(interpretation as the return v)72 481.2 Q(alue for)-.25 E F2
(XReadBitmapFile)3.333 E F0(.).833 E(Pixmap XmuLocateBitmapFile\()72
508.8 Q F1(scr)A(een)-.37 E F0(,)A F1(name)2.5 E F0(,)A F1(sr)2.5 E
(cname)-.37 E F0(,)A F1(sr)2.5 E(cnamelen)-.37 E F0(,)A F1(widthp)2.5 E
F0(,)A F1(heightp)2.5 E F0(,)A F1(xhotp)2.5 E F0(,)A F1(yhotp)2.5 E F0
(\))A(Screen *)82 520.8 Q F1(scr)A(een)-.37 E F0(;)A(char *)82 532.8 Q
F1(name)A F0(;)A(char *)82 544.8 Q F1(sr)A(cname)-.37 E F0(;)A(int)82
556.8 Q F1(sr)2.5 E(cnamelen)-.37 E F0(;)A(int *)82 568.8 Q F1(widthp)A
F0 2.5(,*)C F1(heightp)-2.5 E F0 2.5(,*)C F1(xhotp)-2.5 E F0 2.5(,*)C F1
(yhotp)-2.5 E F0(;)A F1(scr)72 588 Q(een)-.37 E F0
(speci\214es the screen the pixmap is created on)46.27 E F1(name)72
603.6 Q F0(speci\214es the \214le to read from)50.34 E F1(sr)72 619.2 Q
(cname)-.37 E F0(returns the full \214lename of the bitmap)38.49 E F1
(sr)72 634.8 Q(cnamelen)-.37 E F0
(speci\214es the length of the srcname b)26.27 E(uf)-.2 E(fer)-.25 E F1
(width)72 650.4 Q F0(returns the width of the bitmap)49.77 E F1(height)
72 666 Q F0(returns the height of the bitmap)47 E F1(xhotp)72 681.6 Q F0
(returns the x coordinate of the hotspot)49.78 E F1(yhotp)72 697.2 Q F0
(returns the y coordinate of the hotspot)49.78 E
(This function reads a \214le in standard bitmap \214le format, using)72
712.8 Q F2(XReadBitmapFile)3.333 E F0 2.5(,a).833 G
(nd returns the created)-2.5 E 2.5(bitmap. The)72 724.8 R
(\214lename may be absolute, or relati)2.5 E .3 -.15(ve t)-.25 H 2.5(ot)
.15 G(he global resource named bitmapFileP)-2.5 E(ath with class)-.15 E
0 Cg EP
%%Page: 8 8
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(-8-)282.17 48 Q(BitmapFileP)72 84 Q 2.5(ath. If)
-.15 F(the resource is not de\214ned, the def)2.5 E(ault v)-.1 E
(alue is the b)-.25 E(uild symbol BITMAPDIR, which is)-.2 E
(typically "/usr/include/X11/bitmaps".)72 96 Q
(If srcnamelen is greater than zero and srcname is not NULL, the null)5
E(terminated \214lename will be copied into srcname.)72 108 Q
(The size and hotspot of the bitmap are also returned.)5 E
(Pixmap XmuCreatePixmapFromBitmap\()72 135.6 Q/F1 10/Times-Italic@0 SF
(dpy)A F0(,)A F1(d)2.5 E F0(,)A F1(bitmap)2.5 E F0(,)A F1(width)2.5 E F0
(,)A F1(height)2.5 E F0(,)A F1(depth)2.5 E F0(,)A F1(for)2.5 E(e)-.37 E
F0(,)A F1(bac)2.5 E(k)-.2 E F0(\))A(Display *)82 147.6 Q F1(dpy)A F0(;)A
(Dra)82 159.6 Q -.1(wa)-.15 G(ble).1 E F1(d)2.5 E F0(;)A(Pixmap)82 171.6
Q F1(bitmap)2.5 E F0(;)A(unsigned int)82 183.6 Q F1(width)2.5 E F0(,)A
F1(height)2.5 E F0(;)A(unsigned int)82 195.6 Q F1(depth)2.5 E F0(;)A
(unsigned long)82 207.6 Q F1(for)2.5 E(e)-.37 E F0(,)A F1(bac)2.5 E(k)
-.2 E F0(;)A F1(dpy)72 226.8 Q F0
(speci\214es the connection to the X serv)57.56 E(er)-.15 E F1(d)72
242.4 Q F0(speci\214es the screen the pixmap is created on)67 E F1
(bitmap)72 258 Q F0(speci\214es the bitmap source)44.22 E F1(width)72
273.6 Q F0(speci\214es the width of the pixmap)49.77 E F1(height)72
289.2 Q F0(speci\214es the height of the pixmap)47 E F1(depth)72 304.8 Q
F0(speci\214es the depth of the pixmap)49.78 E F1(for)72 320.4 Q(e)-.37
E F0(speci\214es the fore)56.26 E(ground pix)-.15 E(el v)-.15 E(alue)
-.25 E F1(bac)72 336 Q(k)-.2 E F0(speci\214es the background pix)53.32 E
(el v)-.15 E(alue)-.25 E(This function creates a pixmap of the speci\
\214ed width, height, and depth, on the same screen as the speci\214ed)
72 351.6 Q(dra)72 363.6 Q -.1(wa)-.15 G(ble, and then performs an).1 E
/F2 10/Times-Bold@0 SF(XCopyPlane)3.333 E F0
(from the speci\214ed bitmap to the pixmap, using the speci\214ed)3.333
E(fore)72 375.6 Q(ground and background pix)-.15 E(el v)-.15 E 2.5
(alues. The)-.25 F(created pixmap is returned.)2.5 E F2 2.5
(8. Selection)72 403.2 R(Functions)2.5 E F0 1.6 -.8(To u)72 418.8 T(se \
the functions de\214ned in this section, you should include the header \
\214le <).8 E F2(X11/Xmu/StdSel.h).833 E F0(>.).833 E(Boolean XmuCon)72
446.4 Q -.15(ve)-.4 G(rtStandardSelection\().15 E F1(w)A F0(,)A F1(time)
2.5 E F0(,)A F1(selection)2.5 E F0(,)A F1(tar)2.5 E -.1(ge)-.37 G(t).1 E
F0(,)A F1(type)2.5 E F0(,)A F1(value)2.5 E F0(,)A F1(length)2.5 E F0(,)A
F1(format)2.5 E F0(\))A -.4(Wi)87 458.4 S(dget).4 E F1(w)2.5 E F0(;)A
-.35(Ti)87 470.4 S(me).35 E F1(time)2.5 E F0(;)A(Atom *)87 482.4 Q F1
(selection)A F0 2.5(,*)C F1(tar)-2.5 E -.1(ge)-.37 G(t).1 E F0 2.5(,*)C
F1(type)-2.5 E F0(;)A(caddr_t *)87 494.4 Q F1(value)A F0(;)A
(unsigned long *)87 506.4 Q F1(length)A F0(;)A(int *)87 518.4 Q F1
(format)A F0(;)A F1(w)72 537.6 Q F0
(speci\214es the widget which currently o)65.33 E(wns the selection)-.25
E F1(time)72 553.2 Q F0(speci\214es the time at which the selection w)
54.78 E(as established)-.1 E F1(selection)72 568.8 Q F0(this ar)36.45 E
(gument is ignored)-.18 E F1(tar)72 584.4 Q -.1(ge)-.37 G(t).1 E F0
(speci\214es the tar)48.58 E(get type of the selection)-.18 E F1(type)72
600 Q F0(returns the property type of the con)55.34 E -.15(ve)-.4 G
(rted v).15 E(alue)-.25 E F1(value)72 615.6 Q F0(returns the con)50.34 E
-.15(ve)-.4 G(rted v).15 E(alue)-.25 E F1(length)72 631.2 Q F0
(returns the number of elements in the con)47 E -.15(ve)-.4 G(rted v).15
E(alue)-.25 E F1(format)72 646.8 Q F0
(returns the size in bits of the elements)45.33 E(This function con)72
662.4 Q -.15(ve)-.4 G(rts the follo).15 E
(wing standard selections: CLASS, CLIENT_WINDO)-.25 E 1.84 -.92(W, D)
-.35 H(EC-).92 E(NET_ADDRESS, HOSTN)72 674.4 Q(AME, IP_ADDRESS, N)-.35 E
(AME, O)-.35 E(WNER_OS, T)-.35 E(ARGETS, TIMEST)-.93 E(AMP)-.93 E 2.5
(,a)-1.11 G(nd)-2.5 E 2.5(USER. It)72 686.4 R(returns)2.5 E F2 -.74(Tr)
3.333 G(ue).74 E F0(if the con)3.333 E -.15(ve)-.4 G(rsion w).15 E
(as successful, else it returns)-.1 E F2 -.25(Fa)3.333 G(lse.).25 E 0 Cg
EP
%%Page: 9 9
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(-9-)282.17 48 Q/F1 10/Times-Bold@0 SF 2.5(9. T)
72 84 R(ype Con)-.74 E -.1(ve)-.4 G(rter Functions).1 E F0 1.6 -.8(To u)
72 99.6 T(se the functions de\214ned in this section, you should includ\
e the header \214le <).8 E F1(X11/Xmu/Con).833 E -.1(ve)-.4 G(rters.h).1
E F0(>.).833 E -.2(vo)72 127.2 S(id XmuCvtFunctionT).2 E(oCallback\()-.8
E/F2 10/Times-Italic@0 SF(ar)A(gs)-.37 E F0(,)A F2(num_ar)2.5 E(gs)-.37
E F0(,)A F2(fr)2.5 E(omV)-.45 E(al)-1.11 E F0(,)A F2(toV)2.5 E(al)-1.11
E F0(\))A(XrmV)87 139.2 Q(alue *)-1.11 E F2(ar)A(gs)-.37 E F0(;)A
(Cardinal *)87 151.2 Q F2(num_ar)A(gs)-.37 E F0(;)A(XrmV)87 163.2 Q
(aluePtr)-1.11 E F2(fr)2.5 E(omV)-.45 E(al)-1.11 E F0(;)A(XrmV)87 175.2
Q(aluePtr)-1.11 E F2(toV)2.5 E(al)-1.11 E F0(;)A F2(ar)72 194.4 Q(gs)
-.37 E F0(this ar)54.59 E(gument is ignored)-.18 E F2(num_ar)72 210 Q
(gs)-.37 E F0(this ar)32.37 E(gument is ignored)-.18 E F2(fr)72 225.6 Q
(omV)-.45 E(al)-1.11 E F0(the function to con)40.78 E -.15(ve)-.4 G(rt)
.15 E F2(toV)72 241.2 Q(al)-1.11 E F0(the place to store the con)51.44 E
-.15(ve)-.4 G(rted v).15 E(alue)-.25 E(This function con)72 256.8 Q -.15
(ve)-.4 G(rts a callback procedure to a callback list containing that p\
rocedure, with NULL closure).15 E 2.5(data. T)72 268.8 R 2.5(ou)-.8 G
(se this con)-2.5 E -.15(ve)-.4 G(rter).15 E 2.5(,i)-.4 G
(nclude the follo)-2.5 E(wing in your widget')-.25 E 2.5(sC)-.55 G
(lassInitialize procedure:)-2.5 E(XtAddCon)72 284.4 Q -.15(ve)-.4 G
(rter\(XtRCallProc, XtRCallback, XmuCvtFunctionT).15 E
(oCallback, NULL, 0\);)-.8 E -.2(vo)72 312 S(id XmuCvtStringT).2 E
(oBackingStore\()-.8 E F2(ar)A(gs)-.37 E F0(,)A F2(num_ar)2.5 E(gs)-.37
E F0(,)A F2(fr)2.5 E(omV)-.45 E(al)-1.11 E F0(,)A F2(toV)2.5 E(al)-1.11
E F0(\))A(XrmV)87 324 Q(alue *)-1.11 E F2(ar)A(gs)-.37 E F0(;)A
(Cardinal *)87 336 Q F2(num_ar)A(gs)-.37 E F0(;)A(XrmV)87 348 Q(aluePtr)
-1.11 E F2(fr)2.5 E(omV)-.45 E(al)-1.11 E F0(;)A(XrmV)87 360 Q(aluePtr)
-1.11 E F2(toV)2.5 E(al)-1.11 E F0(;)A F2(ar)72 379.2 Q(gs)-.37 E F0
(this ar)54.59 E(gument is ignored)-.18 E F2(num_ar)72 394.8 Q(gs)-.37 E
F0(this ar)32.37 E
(gument must be a pointer to a Cardinal containing the v)-.18 E(alue 0)
-.25 E F2(fr)72 410.4 Q(omV)-.45 E(al)-1.11 E F0
(speci\214es the string to con)40.78 E -.15(ve)-.4 G(rt).15 E F2(toV)72
426 Q(al)-1.11 E F0(returns the con)51.44 E -.15(ve)-.4 G(rted v).15 E
(alue)-.25 E(This function con)72 441.6 Q -.15(ve)-.4 G
(rts a string to a backing-store inte).15 E(ger as de\214ned in <)-.15 E
F1(X11/X.h).833 E F0 2.5(>. The).833 F(string "notUseful")2.5 E(con)72
453.6 Q -.15(ve)-.4 G(rts to).15 E F1(NotUseful)3.333 E F0 2.5(,").833 G
(whenMapped" con)-2.5 E -.15(ve)-.4 G(rts to).15 E F1(WhenMapped)3.333 E
F0 2.5(,a).833 G(nd "al)-2.5 E -.1(wa)-.1 G(ys" con).1 E -.15(ve)-.4 G
(rts to).15 E F1(Always)3.333 E F0 5(.T).833 G(he)-5 E(string "def)72
465.6 Q(ault" con)-.1 E -.15(ve)-.4 G(rts to the v).15 E(alue)-.25 E F1
(Always)3.333 E F0(+).833 E F1(WhenMapped)3.333 E F0(+).833 E F1
(NotUseful)3.333 E F0 5(.T).833 G(he case of the string does)-5 E
(not matter)72 477.6 Q 5(.T)-.55 G 2.5(ou)-5.8 G(se this con)-2.5 E -.15
(ve)-.4 G(rter).15 E 2.5(,i)-.4 G(nclude the follo)-2.5 E
(wing in your widget')-.25 E 2.5(sC)-.55 G(lassInitialize procedure:)
-2.5 E(XtAddCon)72 493.2 Q -.15(ve)-.4 G
(rter\(XtRString, XtRBackingStore, XmuCvtStringT).15 E
(oBackingStore, NULL, 0\);)-.8 E -.2(vo)72 520.8 S(id XmuCvtStringT).2 E
(oBitmap\()-.8 E F2(ar)A(gs)-.37 E F0(,)A F2(num_ar)2.5 E(gs)-.37 E F0
(,)A F2(fr)2.5 E(omV)-.45 E(al)-1.11 E F0(,)A F2(toV)2.5 E(al)-1.11 E F0
(\))A(XrmV)87 532.8 Q(aluePtr)-1.11 E F2(ar)2.5 E(gs)-.37 E F0(;)A
(Cardinal *)87 544.8 Q F2(num_ar)A(gs)-.37 E F0(;)A(XrmV)87 556.8 Q
(aluePtr)-1.11 E F2(fr)2.5 E(omV)-.45 E(al)-1.11 E F0(;)A(XrmV)87 568.8
Q(aluePtr)-1.11 E F2(toV)2.5 E(al)-1.11 E F0(;)A F2(ar)72 588 Q(gs)-.37
E F0(the sole ar)54.59 E
(gument speci\214es the Screen on which to create the bitmap)-.18 E F2
(num_ar)72 603.6 Q(gs)-.37 E F0(must be the v)32.37 E(alue 1)-.25 E F2
(fr)72 619.2 Q(omV)-.45 E(al)-1.11 E F0(speci\214es the string to con)
40.78 E -.15(ve)-.4 G(rt).15 E F2(toV)72 634.8 Q(al)-1.11 E F0
(returns the con)51.44 E -.15(ve)-.4 G(rted v).15 E(alue)-.25 E(This fu\
nction creates a bitmap \(a Pixmap of depth one\) suitable for windo)72
650.4 Q 2.5(wm)-.25 G(anager icons.)-2.5 E(The string)5 E(ar)72 662.4 Q
(gument is the name of a \214le in standard bitmap \214le format.)-.18 E
-.15(Fo)5 G 2.5(rt).15 G(he possible \214lename speci\214cations, see)
-2.5 E F1(XmuLocateBitmapFile)72.833 674.4 Q F0 5(.T).833 G 2.5(ou)-5.8
G(se this con)-2.5 E -.15(ve)-.4 G(rter).15 E 2.5(,i)-.4 G
(nclude the follo)-2.5 E(wing in your widget')-.25 E 2.5(sC)-.55 G
(lassInitialize pro-)-2.5 E(cedure:)72 686.4 Q(static XtCon)72 702 Q
-.15(ve)-.4 G(rtAr).15 E(gRec screenCon)-.18 E -.15(ve)-.4 G(rtAr).15 E
(g[] = {)-.18 E({XtBaseOf)77 714 Q(fset, \(XtPointer\)XtOf)-.25 E
(fset\(W)-.25 E(idget, core.screen\), sizeof\(Screen *\)})-.4 E(};)72
726 Q 0 Cg EP
%%Page: 10 10
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(-10-)279.67 48 Q(XtAddCon)72 84 Q -.15(ve)-.4 G
(rter\(XtRString, XtRBitmap, XmuCvtStringT).15 E(oBitmap,)-.8 E
(screenCon)124.5 96 Q -.15(ve)-.4 G(rtAr).15 E(g, XtNumber\(screenCon)
-.18 E -.15(ve)-.4 G(rtAr).15 E(g\)\);)-.18 E(Boolean XmuCvtStringT)72
123.6 Q(oColorCursor\()-.8 E/F1 10/Times-Italic@0 SF(dpy)A F0(,)A F1(ar)
2.5 E(gs)-.37 E F0(,)A F1(num_ar)2.5 E(gs)-.37 E F0(,)A F1(fr)2.5 E(omV)
-.45 E(al)-1.11 E F0(,)A F1(toV)2.5 E(al)-1.11 E F0(,)A F1(data)2.5 E F0
(\))A(Display *)87 135.6 Q F1(dpy)2.5 E F0(;)A(XrmV)87 147.6 Q(aluePtr)
-1.11 E F1(ar)2.5 E(gs)-.37 E F0(;)A(Cardinal *)87 159.6 Q F1(num_ar)A
(gs)-.37 E F0(;)A(XrmV)87 171.6 Q(aluePtr)-1.11 E F1(fr)2.5 E(omV)-.45 E
(al)-1.11 E F0(;)A(XrmV)87 183.6 Q(aluePtr)-1.11 E F1(toV)2.5 E(al)-1.11
E F0(;)A(XtPointer *)87 195.6 Q F1(data)2.5 E F0(;)A F1(dpy)72 214.8 Q
F0(speci\214es the display to use for con)57.56 E -.15(ve)-.4 G(rsion w)
.15 E(arnings)-.1 E F1(ar)72 230.4 Q(gs)-.37 E F0
(speci\214es the required con)54.59 E -.15(ve)-.4 G(rsion ar).15 E
(guments)-.18 E F1(num_ar)72 246 Q(gs)-.37 E F0
(speci\214es the number of required con)32.37 E -.15(ve)-.4 G(rsion ar)
.15 E(guments, which is 4)-.18 E F1(fr)72 261.6 Q(omV)-.45 E(al)-1.11 E
F0(speci\214es the string to con)40.78 E -.15(ve)-.4 G(rt).15 E F1(toV)
72 277.2 Q(al)-1.11 E F0(returns the con)51.44 E -.15(ve)-.4 G(rted v)
.15 E(alue)-.25 E F1(data)72 292.8 Q F0(this ar)54.22 E
(gument is ignored)-.18 E(This function con)72 308.4 Q -.15(ve)-.4 G
(rts a string to a).15 E/F2 10/Times-Bold@0 SF(Cursor)3.333 E F0
(with the fore)3.333 E(ground and background pix)-.15 E
(els speci\214ed by the)-.15 E(con)72 320.4 Q -.15(ve)-.4 G(rsion ar).15
E 2.5(guments. The)-.18 F
(string can either be a standard cursor name formed by remo)2.5 E
(ving the `)-.15 E(`XC_')-.74 E(')-.74 E(pre\214x from an)72 332.4 Q 2.5
(yo)-.15 G 2.5(ft)-2.5 G(he cursor de\214nes listed in Appendix B of th\
e Xlib Manual, a font name and glyph inde)-2.5 E(x)-.15 E
(in decimal of the form "FONT fontname inde)72 344.4 Q 2.5(x[)-.15 G
([font] inde)-2.5 E(x]", or a bitmap \214lename acceptable to)-.15 E F2
(XmuLo-)3.333 E(cateBitmapFile)72 356.4 Q F0 5(.T).833 G 2.5(ou)-5.8 G
(se this con)-2.5 E -.15(ve)-.4 G(rter).15 E 2.5(,i)-.4 G
(nclude the follo)-2.5 E(wing in the widget ClassInitialize procedure:)
-.25 E(static XtCon)72 372 Q -.15(ve)-.4 G(rtAr).15 E
(gRec colorCursorCon)-.18 E -.15(ve)-.4 G(rtAr).15 E(gs[] = {)-.18 E
({XtW)77 384 Q(idgetBaseOf)-.4 E(fset, \(XtPointer\) XtOf)-.25 E
(fsetOf\(W)-.25 E(idgetRec, core.screen\),)-.4 E(sizeof\(Screen *\)},)
79.5 396 Q({XtResourceString, \(XtPointer\) XtNpointerColor)77 408 Q 2.5
(,s)-.4 G(izeof\(Pix)-2.5 E(el\)},)-.15 E({XtResourceString, \(XtPointe\
r\) XtNpointerColorBackground, sizeof\(Pix)77 420 Q(el\)},)-.15 E({XtW)
77 432 Q(idgetBaseOf)-.4 E(fset, \(XtPointer\) XtOf)-.25 E(fsetOf\(W)
-.25 E(idgetRec, core.colormap\),)-.4 E(sizeof\(Colormap\)})79.5 444 Q
(};)72 456 Q(XtSetT)72 471.6 Q(ypeCon)-.8 E -.15(ve)-.4 G
(rter\(XtRString, XtRColorCursor).15 E 2.5(,X)-.4 G(muCvtStringT)-2.5 E
(oColorCursor)-.8 E(,)-.4 E(colorCursorCon)124.5 483.6 Q -.15(ve)-.4 G
(rtAr).15 E(gs, XtNumber\(colorCursorCon)-.18 E -.15(ve)-.4 G(rtAr).15 E
(gs\),)-.18 E(XtCacheByDisplay)114.5 495.6 Q 2.5(,N)-.65 G
(ULL\); The widget must recognize XtNpointerColor and XtNpointerColor)
-2.5 E(-)-.2 E
(Background as resources, or specify other appropriate fore)72 507.6 Q
(ground and background resources.)-.15 E(The widget')5 E(s)-.55 E
(Realize and SetV)72 519.6 Q(alues methods must cause the con)-1.11 E
-.15(ve)-.4 G(rter to be in).15 E -.2(vo)-.4 G -.1(ke).2 G 2.5(dw).1 G
(ith the appropriate ar)-2.5 E(guments)-.18 E(when one of the fore)72
531.6 Q
(ground, background, or cursor resources has changed, or when the windo)
-.15 E 2.5(wi)-.25 G 2.5(sc)-2.5 G(reated,)-2.5 E
(and must assign the cursor to the windo)72 543.6 Q 2.5(wo)-.25 G 2.5
(ft)-2.5 G(he widget.)-2.5 E -.2(vo)72 571.2 S(id XmuCvtStringT).2 E
(oCursor\()-.8 E F1(ar)A(gs)-.37 E F0(,)A F1(num_ar)2.5 E(gs)-.37 E F0
(,)A F1(fr)2.5 E(omV)-.45 E(al)-1.11 E F0(,)A F1(toV)2.5 E(al)-1.11 E F0
(\))A(XrmV)87 583.2 Q(aluePtr)-1.11 E F1(ar)2.5 E(gs)-.37 E F0(;)A
(Cardinal *)87 595.2 Q F1(num_ar)A(gs)-.37 E F0(;)A(XrmV)87 607.2 Q
(aluePtr)-1.11 E F1(fr)2.5 E(omV)-.45 E(al)-1.11 E F0(;)A(XrmV)87 619.2
Q(aluePtr)-1.11 E F1(toV)2.5 E(al)-1.11 E F0(;)A F1(ar)72 638.4 Q(gs)
-.37 E F0(speci\214es the required con)54.59 E -.15(ve)-.4 G(rsion ar)
.15 E(gument, the screen)-.18 E F1(num_ar)72 654 Q(gs)-.37 E F0
(speci\214es the number of required con)32.37 E -.15(ve)-.4 G(rsion ar)
.15 E(guments, which is 1)-.18 E F1(fr)72 669.6 Q(omV)-.45 E(al)-1.11 E
F0(speci\214es the string to con)40.78 E -.15(ve)-.4 G(rt).15 E F1(toV)
72 685.2 Q(al)-1.11 E F0(returns the con)51.44 E -.15(ve)-.4 G(rted v)
.15 E(alue)-.25 E(This function con)72 700.8 Q -.15(ve)-.4 G
(rts a string to a).15 E F2(Cursor)3.333 E F0 5(.T).833 G
(he string can either be a standard cursor name formed by)-5 E(remo)72
712.8 Q(ving the `)-.15 E(`XC_')-.74 E 2.5('p)-.74 G(re\214x from an)
-2.5 E 2.5(yo)-.15 G 2.5(ft)-2.5 G
(he cursor de\214nes listed in Appendix B of the Xlib Manual, a font)
-2.5 E(name and glyph inde)72 724.8 Q 2.5(xi)-.15 G 2.5(nd)-2.5 G
(ecimal of the form "FONT fontname inde)-2.5 E 2.5(x[)-.15 G
([font] inde)-2.5 E(x]", or a bitmap \214lename)-.15 E 0 Cg EP
%%Page: 11 11
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(-11-)279.67 48 Q(acceptable to)72 84 Q/F1 10
/Times-Bold@0 SF(XmuLocateBitmapFile)3.333 E F0 5(.T).833 G 2.5(ou)-5.8
G(se this con)-2.5 E -.15(ve)-.4 G(rter).15 E 2.5(,i)-.4 G
(nclude the follo)-2.5 E(wing in your widget')-.25 E(s)-.55 E
(ClassInitialize procedure:)72 96 Q(static XtCon)72 111.6 Q -.15(ve)-.4
G(rtAr).15 E(gRec screenCon)-.18 E -.15(ve)-.4 G(rtAr).15 E(g[] = {)-.18
E({XtBaseOf)77 123.6 Q(fset, \(XtPointer\)XtOf)-.25 E(fsetOf\(W)-.25 E
(idgetRec, core.screen\), sizeof\(Screen *\)})-.4 E(};)72 135.6 Q
(XtAddCon)72 151.2 Q -.15(ve)-.4 G(rter\(XtRString, XtRCursor).15 E 2.5
(,X)-.4 G(muCvtStringT)-2.5 E(oCursor)-.8 E(,)-.4 E(screenCon)124.5
163.2 Q -.15(ve)-.4 G(rtAr).15 E(g, XtNumber\(screenCon)-.18 E -.15(ve)
-.4 G(rtAr).15 E(g\)\);)-.18 E -.2(vo)72 190.8 S(id XmuCvtStringT).2 E
(oGra)-.8 E(vity\()-.2 E/F2 10/Times-Italic@0 SF(ar)A(gs)-.37 E F0(,)A
F2(num_ar)2.5 E(gs)-.37 E F0(,)A F2(fr)2.5 E(omV)-.45 E(al)-1.11 E F0(,)
A F2(toV)2.5 E(al)-1.11 E F0(\))A(XrmV)84.5 202.8 Q(aluePtr *)-1.11 E F2
(ar)A(gs)-.37 E F0(;)A(Cardinal *)87 214.8 Q F2(num_ar)A(gs)-.37 E F0(;)
A(XrmV)87 226.8 Q(aluePtr)-1.11 E F2(fr)2.5 E(omV)-.45 E(al)-1.11 E F0
(;)A(XrmV)87 238.8 Q(aluePtr)-1.11 E F2(toV)2.5 E(al)-1.11 E F0(;)A F2
(ar)72 258 Q(gs)-.37 E F0(this ar)54.59 E(gument is ignored)-.18 E F2
(num_ar)72 273.6 Q(gs)-.37 E F0(this ar)32.37 E
(gument must be a pointer to a Cardinal containing the v)-.18 E(alue 0)
-.25 E F2(fr)72 289.2 Q(omV)-.45 E(al)-1.11 E F0
(speci\214es the string to con)40.78 E -.15(ve)-.4 G(rt).15 E F2(toV)72
304.8 Q(al)-1.11 E F0(returns the con)51.44 E -.15(ve)-.4 G(rted v).15 E
(alue)-.25 E(This function con)72 320.4 Q -.15(ve)-.4 G
(rts a string to an).15 E F1(XtGra)3.333 E(vity)-.25 E F0(enumeration v)
3.333 E 2.5(alue. The)-.25 F(string "for)2.5 E(get" and a NULL v)-.18 E
(alue)-.25 E(con)72 332.4 Q -.15(ve)-.4 G(rt to).15 E F1 -.25(Fo)3.333 G
-.1(rg).25 G(etGra).1 E(vity)-.25 E F0 2.5(,").833 G(NorthW)-2.5 E
(estGra)-.8 E(vity" con)-.2 E -.15(ve)-.4 G(rts to).15 E F1(NorthW)3.333
E(estGra)-.65 E(vity)-.25 E F0 2.5(,t).833 G(he strings "NorthGra)-2.5 E
(v-)-.2 E(ity" and "top" con)72 344.4 Q -.15(ve)-.4 G(rt to).15 E F1
(NorthGra)3.333 E(vity)-.25 E F0 2.5(,").833 G(NorthEastGra)-2.5 E
(vity" con)-.2 E -.15(ve)-.4 G(rts to).15 E F1(NorthEastGra)3.333 E
(vity)-.25 E F0 2.5(,t).833 G(he strings)-2.5 E("W)72 356.4 Q
(est" and "left" con)-.8 E -.15(ve)-.4 G(rt to).15 E F1 -.65(We)3.333 G
(stGra).65 E(vity)-.25 E F0 2.5(,").833 G(CenterGra)-2.5 E(vity" con)-.2
E -.15(ve)-.4 G(rts to).15 E F1(CenterGra)3.333 E(vity)-.25 E F0 2.5(,")
.833 G(EastGra)-2.5 E(vity" and)-.2 E("right" con)72 368.4 Q -.15(ve)-.4
G(rt to).15 E F1(EastGra)3.333 E(vity)-.25 E F0 2.5(,").833 G(SouthW)
-2.5 E(estGra)-.8 E(vity" con)-.2 E -.15(ve)-.4 G(rts to).15 E F1
(SouthW)3.333 E(estGra)-.65 E(vity)-.25 E F0 2.5(,").833 G(SouthGra)-2.5
E(vity" and)-.2 E("bottom" con)72 380.4 Q -.15(ve)-.4 G(rt to).15 E F1
(SouthGra)3.333 E(vity)-.25 E F0 2.5(,").833 G(SouthEastGra)-2.5 E
(vity" con)-.2 E -.15(ve)-.4 G(rts to).15 E F1(SouthEastGra)3.333 E
(vity)-.25 E F0 2.5(,").833 G(StaticGra)-2.5 E(vity")-.2 E(con)72 392.4
Q -.15(ve)-.4 G(rts to).15 E F1(StaticGra)3.333 E(vity)-.25 E F0 2.5(,a)
.833 G(nd "UnmapGra)-2.5 E(vity" con)-.2 E -.15(ve)-.4 G(rts to).15 E F1
(UnmapGra)3.333 E(vity)-.25 E F0 5(.T).833 G(he case of the string does)
-5 E(not matter)72 404.4 Q 5(.T)-.55 G 2.5(ou)-5.8 G(se this con)-2.5 E
-.15(ve)-.4 G(rter).15 E 2.5(,i)-.4 G(nclude the follo)-2.5 E
(wing in your widget')-.25 E 2.5(sc)-.55 G(lass initialize procedure:)
-2.5 E(XtAddCon)72 420 Q -.15(ve)-.4 G(rter\(XtRString, XtRGra).15 E
(vity)-.2 E 2.5(,X)-.65 G(muCvtStringT)-2.5 E(oGra)-.8 E(vity)-.2 E 2.5
(,N)-.65 G(ULL, 0\);)-2.5 E -.2(vo)72 447.6 S(id XmuCvtStringT).2 E
(oJustify\()-.8 E F2(ar)A(gs)-.37 E F0(,)A F2(num_ar)2.5 E(gs)-.37 E F0
(,)A F2(fr)2.5 E(omV)-.45 E(al)-1.11 E F0(,)A F2(toV)2.5 E(al)-1.11 E F0
(\))A(XrmV)87 459.6 Q(aluePtr *)-1.11 E F2(ar)A(gs)-.37 E F0(;)A
(Cardinal *)87 471.6 Q F2(num_ar)A(gs)-.37 E F0(;)A(XrmV)87 483.6 Q
(aluePtr)-1.11 E F2(fr)2.5 E(omV)-.45 E(al)-1.11 E F0(;)A(XrmV)87 495.6
Q(aluePtr)-1.11 E F2(toV)2.5 E(al)-1.11 E F0(;)A F2(ar)72 514.8 Q(gs)
-.37 E F0(this ar)54.59 E(gument is ignored)-.18 E F2(num_ar)72 530.4 Q
(gs)-.37 E F0(this ar)32.37 E(gument is ignored)-.18 E F2(fr)72 546 Q
(omV)-.45 E(al)-1.11 E F0(speci\214es the string to con)40.78 E -.15(ve)
-.4 G(rt).15 E F2(toV)72 561.6 Q(al)-1.11 E F0(returns the con)51.44 E
-.15(ve)-.4 G(rted v).15 E(alue)-.25 E(This function con)72 577.2 Q -.15
(ve)-.4 G(rts a string to an).15 E F1(XtJ)3.333 E(ustify)-.15 E F0
(enumeration v)3.333 E 2.5(alue. The)-.25 F(string "left" con)2.5 E -.15
(ve)-.4 G(rts to).15 E F1(XtJ)3.333 E(usti-)-.15 E(fyLeft)72 589.2 Q F0
2.5(,").833 G(center" con)-2.5 E -.15(ve)-.4 G(rts to).15 E F1(XtJ)3.333
E(ustifyCenter)-.15 E F0 2.5(,a).833 G(nd "right" con)-2.5 E -.15(ve)-.4
G(rts to).15 E F1(XtJ)3.333 E(ustifyRight)-.15 E F0 5(.T).833 G
(he case of the)-5 E(string does not matter)72 601.2 Q 5(.T)-.55 G 2.5
(ou)-5.8 G(se this con)-2.5 E -.15(ve)-.4 G(rter).15 E 2.5(,i)-.4 G
(nclude the follo)-2.5 E(wing in your widget')-.25 E 2.5(sC)-.55 G
(lassInitialize proce-)-2.5 E(dure:)72 613.2 Q(XtAddCon)72 628.8 Q -.15
(ve)-.4 G(rter\(XtRString, XtRJustify).15 E 2.5(,X)-.65 G(muCvtStringT)
-2.5 E(oJustify)-.8 E 2.5(,N)-.65 G(ULL, 0\);)-2.5 E -.2(vo)72 656.4 S
(id XmuCvtStringT).2 E(oLong\()-.8 E F2(ar)A(gs)-.37 E F0(,)A F2(num_ar)
2.5 E(gs)-.37 E F0(,)A F2(fr)2.5 E(omV)-.45 E(al)-1.11 E F0(,)A F2(toV)
2.5 E(al)-1.11 E F0(\))A(XrmV)87 668.4 Q(aluePtr)-1.11 E F2(ar)2.5 E(gs)
-.37 E F0(;)A 7.5(Cardinal *)87 680.4 R F2(num_ar)A(gs)-.37 E F0(;)A
(XrmV)87 692.4 Q(aluePtr)-1.11 E F2(fr)2.5 E(omV)-.45 E(al)-1.11 E F0(;)
A(XrmV)87 704.4 Q(aluePtr)-1.11 E F2(toV)2.5 E(al)-1.11 E F0(;)A 0 Cg EP
%%Page: 12 12
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(-12-)279.67 48 Q/F1 10/Times-Italic@0 SF(ar)72
84 Q(gs)-.37 E F0(this ar)54.59 E(gument is ignored)-.18 E F1(num_ar)72
99.6 Q(gs)-.37 E F0(this ar)32.37 E
(gument must be a pointer to a Cardinal containing 0)-.18 E F1(fr)72
115.2 Q(omV)-.45 E(al)-1.11 E F0(speci\214es the string to con)40.78 E
-.15(ve)-.4 G(rt).15 E F1(toV)72 130.8 Q(al)-1.11 E F0(returns the con)
51.44 E -.15(ve)-.4 G(rted v).15 E(alue)-.25 E(This function con)72
146.4 Q -.15(ve)-.4 G(rts a string to an inte).15 E(ger of type long.)
-.15 E(It parses the string using)5 E/F2 10/Times-Bold@0 SF(sscanf)3.333
E F0(with a format of)3.333 E 2.5("%ld". T)72 158.4 R 2.5(ou)-.8 G
(se this con)-2.5 E -.15(ve)-.4 G(rter).15 E 2.5(,i)-.4 G
(nclude the follo)-2.5 E(wing in your widget')-.25 E 2.5(sC)-.55 G
(lassInitialize procedure:)-2.5 E(XtAddCon)72 174 Q -.15(ve)-.4 G
(rter\(XtRString, XtRLong, XmuCvtStringT).15 E(oLong, NULL, 0\);)-.8 E
-.2(vo)72 201.6 S(id XmuCvtStringT).2 E(oOrientation\()-.8 E F1(ar)A(gs)
-.37 E F0(,)A F1(num_ar)2.5 E(gs)-.37 E F0(,)A F1(fr)2.5 E(omV)-.45 E
(al)-1.11 E F0(,)A F1(toV)2.5 E(al)-1.11 E F0(\))A(XrmV)87 213.6 Q
(aluePtr *)-1.11 E F1(ar)A(gs)-.37 E F0(;)A(Cardinal *)87 225.6 Q F1
(num_ar)A(gs)-.37 E F0(;)A(XrmV)87 237.6 Q(aluePtr)-1.11 E F1(fr)2.5 E
(omV)-.45 E(al)-1.11 E F0(;)A(XrmV)87 249.6 Q(aluePtr)-1.11 E F1(toV)2.5
E(al)-1.11 E F0(;)A F1(ar)72 268.8 Q(gs)-.37 E F0(this ar)54.59 E
(gument is ignored)-.18 E F1(num_ar)72 284.4 Q(gs)-.37 E F0(this ar)
32.37 E(gument is ignored)-.18 E F1(fr)72 300 Q(omV)-.45 E(al)-1.11 E F0
(speci\214es the string to con)40.78 E -.15(ve)-.4 G(rt).15 E F1(toV)72
315.6 Q(al)-1.11 E F0(returns the con)51.44 E -.15(ve)-.4 G(rted v).15 E
(alue)-.25 E(This function con)72 331.2 Q -.15(ve)-.4 G
(rts a string to an).15 E F2(XtOrientation)3.333 E F0(enumeration v)
3.333 E 2.5(alue. The)-.25 F(string "horizontal" con)2.5 E -.15(ve)-.4 G
(rts to).15 E F2(XtorientHorizontal)72.833 343.2 Q F0(and "v)3.333 E
(ertical" con)-.15 E -.15(ve)-.4 G(rts to).15 E F2(XtorientV)3.333 E
(ertical)-1 E F0 5(.T).833 G(he case of the string does not matter)-5 E
(.)-.55 E 1.6 -.8(To u)72 355.2 T(se this con).8 E -.15(ve)-.4 G(rter)
.15 E 2.5(,i)-.4 G(nclude the follo)-2.5 E(wing in your widget')-.25 E
2.5(sC)-.55 G(lassInitialize procedure:)-2.5 E(XtAddCon)72 370.8 Q -.15
(ve)-.4 G(rter\(XtRString, XtR).15 E(Orientation, XmuCvtStringT)-.4 E
(oOrientation, NULL, 0\);)-.8 E(Boolean XmuCvtStringT)72 398.4 Q
(oShapeStyle\()-.8 E F1(dpy)A F0(,)A F1(ar)2.5 E(gs)-.37 E F0(,)A F1
(num_ar)2.5 E(gs)-.37 E F0(,)A F1(fr)2.5 E(om)-.45 E F0(,)A F1(toV)2.5 E
(al)-1.11 E F0 2.5(,d)C(ata\))-2.5 E(Display *)87 410.4 Q F1(dpy)A F0(;)
A(XrmV)87 422.4 Q(alue *)-1.11 E F1(ar)A(gs)-.37 E F0(;)A(Cardinal *)87
434.4 Q F1(num_ar)A(gs)-.37 E F0(;)A(XrmV)87 446.4 Q(alue *)-1.11 E F1
(fr)A(om)-.45 E F0(;)A(XrmV)87 458.4 Q(alue *)-1.11 E F1(toV)A(al)-1.11
E F0(;)A(XtPointer *)87 470.4 Q F1(data)A F0(;)A F1(dpy)72 489.6 Q F0
(the display to use for con)57.56 E -.15(ve)-.4 G(rsion w).15 E(arnings)
-.1 E F1(ar)72 505.2 Q(gs)-.37 E F0(this ar)54.59 E(gument is ignored)
-.18 E F1(num_ar)72 520.8 Q(gs)-.37 E F0(this ar)32.37 E
(gument is ignored)-.18 E F1(fr)72 536.4 Q(omV)-.45 E(al)-1.11 E F0
(the v)40.78 E(alue to con)-.25 E -.15(ve)-.4 G(rt from).15 E F1(toV)72
552 Q(al)-1.11 E F0(the place to store the con)51.44 E -.15(ve)-.4 G
(rted v).15 E(alue)-.25 E F1(data)72 567.6 Q F0(this ar)54.22 E
(gument is ignored)-.18 E(This function con)72 583.2 Q -.15(ve)-.4 G
(rts a string to an inte).15 E(ger shape style.)-.15 E
(The string "rectangle" con)5 E -.15(ve)-.4 G(rts to).15 E F2
(XmuShapeRectangle)72.833 595.2 Q F0 2.5(,").833 G -.15(ov)-2.5 G
(al" con)-.1 E -.15(ve)-.4 G(rts to).15 E F2(XmuShapeOv)3.333 E(al)-.1 E
F0 2.5(,").833 G(ellipse" con)-2.5 E -.15(ve)-.4 G(rts to).15 E F2
(XmuShapeEllipse)3.333 E F0 2.5(,a).833 G(nd)-2.5 E
("roundedRectangle" con)72 607.2 Q -.15(ve)-.4 G(rts to).15 E F2
(XmuShapeRoundedRectangle)3.333 E F0 5(.T).833 G
(he case of the string does not matter)-5 E(.)-.55 E 1.6 -.8(To u)72
619.2 T(se this con).8 E -.15(ve)-.4 G(rter).15 E 2.5(,i)-.4 G
(nclude the follo)-2.5 E(wing in your widget')-.25 E 2.5(sC)-.55 G
(lassInitialize procedure:)-2.5 E(XtSetT)72 634.8 Q(ypeCon)-.8 E -.15
(ve)-.4 G(rter\(XtRString, XtRShapeStyle, XmuCvtStringT).15 E
(oShapeStyle,)-.8 E(NULL, 0, XtCacheNone, NULL\);)134.5 646.8 Q
(Boolean XmuReshapeW)72 674.4 Q(idget\(w)-.4 E(,)-.65 E F1(shape_style)
2.5 E F0(,)A F1(corner_width)2.5 E F0(,)A F1(corner_height)2.5 E F0(\))A
-.4(Wi)87 686.4 S(dget).4 E F1(w)2.5 E F0(;)A(int)87 698.4 Q F1
(shape_style)2.5 E F0(;)A(int)87 710.4 Q F1(corner_width)2.5 E F0(,)A F1
(corner_height)2.5 E F0(;)A 0 Cg EP
%%Page: 13 13
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(-13-)279.67 48 Q/F1 10/Times-Italic@0 SF(w)72 84
Q F0(speci\214es the widget to reshape)65.33 E F1(shape_style)72 99.6 Q
F0(speci\214es the ne)25.34 E 2.5(ws)-.25 G(hape)-2.5 E F1(corner_width)
72 115.2 Q F0(speci\214es the width of the rounded rectangle corner)
18.11 E F1(corner_height)72 130.8 Q F0
(speci\214ed the height of the rounded rectangle corner)15.34 E
(This function reshapes the speci\214ed widget, using the Shape e)72
146.4 Q(xtension, to a rectangle, o)-.15 E -.25(va)-.15 G
(l, ellipse, or).25 E
(rounded rectangle, as speci\214ed by shape_style \()72 158.4 Q/F2 10
/Times-Bold@0 SF(XmuShapeRectangle)3.333 E F0(,).833 E F2(XmuShapeOv)
3.333 E(al)-.1 E F0(,).833 E F2(XmuShapeEl-)3.333 E(lipse)72 170.4 Q F0
2.5(,a).833 G(nd)-2.5 E F2(XmuShapeRoundedRectangle)3.333 E F0 2.5(,r)
.833 G(especti)-2.5 E -.15(ve)-.25 G 2.5(ly\). The).15 F
(shape is bounded by the outside edges of)2.5 E(the rectangular e)72
182.4 Q(xtents of the widget.)-.15 E
(If the shape is a rounded rectangle, corner_width and corner_height)5 E
(specify the size of the bounding box that the corners are dra)72 194.4
Q(wn inside of \(see)-.15 E F2(XmuFillRoundedRectan-)3.333 E(gle)72
206.4 Q F0(\); otherwise, corner_width and corner_height are ignored.)
.833 E(The origin of the widget within its parent)5 E
(remains unchanged.)72 218.4 Q -.2(vo)72 246 S(id XmuCvtStringT).2 E(oW)
-.8 E(idget\()-.4 E F1(ar)A(gs)-.37 E F0(,)A F1(num_ar)2.5 E(gs)-.37 E
F0(,)A F1(fr)2.5 E(omV)-.45 E(al)-1.11 E F0(,)A F1(toV)2.5 E(al)-1.11 E
F0(\))A(XrmV)87 258 Q(aluePtr)-1.11 E F1(ar)2.5 E(gs)-.37 E F0(;)A
(Cardinal *)87 270 Q F1(num_ar)A(gs)-.37 E F0(;)A(XrmV)87 282 Q(aluePtr)
-1.11 E F1(fr)2.5 E(omV)-.45 E(al)-1.11 E F0(;)A(XrmV)87 294 Q(aluePtr)
-1.11 E F1(toV)2.5 E(al)-1.11 E F0(;)A F1(ar)72 313.2 Q(gs)-.37 E F0
(this sole ar)54.59 E(gument is the parent W)-.18 E(idget)-.4 E F1
(num_ar)72 328.8 Q(gs)-.37 E F0(this ar)32.37 E(gument must be 1)-.18 E
F1(fr)72 344.4 Q(omV)-.45 E(al)-1.11 E F0(speci\214es the string to con)
40.78 E -.15(ve)-.4 G(rt).15 E F1(toV)72 360 Q(al)-1.11 E F0
(returns the con)51.44 E -.15(ve)-.4 G(rted v).15 E(alue)-.25 E
(This function con)72 375.6 Q -.15(ve)-.4 G(rts a string to an immediat\
e child widget of the parent widget passed as an ar).15 E(gument.)-.18 E
(Note that this con)72 387.6 Q -.15(ve)-.4 G(rter only w).15 E
(orks for child widgets that ha)-.1 E .3 -.15(ve a)-.2 H
(lready been created; there is no lazy e).15 E -.25(va)-.25 G(lua-).25 E
2.5(tion. The)72 399.6 R(string is \214rst compared ag)2.5 E
(ainst the names of the normal and popup children, and if a match is)
-.05 E(found the corresponding child is returned.)72 411.6 Q
(If no match is found, the string is compared ag)5 E(ainst the classes)
-.05 E(of the normal and popup children, and if a match is found the co\
rresponding child is returned.)72 423.6 Q(The case of)5 E
(the string is signi\214cant.)72 435.6 Q 1.6 -.8(To u)5 H(se this con).8
E -.15(ve)-.4 G(rter).15 E 2.5(,i)-.4 G(nclude the follo)-2.5 E
(wing in your widget')-.25 E 2.5(sC)-.55 G(lassInitialize proce-)-2.5 E
(dure:)72 447.6 Q(static XtCon)72 463.2 Q -.15(ve)-.4 G(rtAr).15 E
(gRec parentCvtAr)-.18 E(g[] = {)-.18 E({XtBaseOf)77 475.2 Q
(fset, \(XtPointer\)XtOf)-.25 E(fset\(W)-.25 E
(idget, core.parent\), sizeof\(W)-.4 E(idget\)},)-.4 E(};)72 487.2 Q
(XtAddCon)72 502.8 Q -.15(ve)-.4 G(rter\(XtRString, XtR).15 E -.4(Wi)
-.55 G(dget, XmuCvtStringT).4 E(oW)-.8 E(idget,)-.4 E(parentCvtAr)124.5
514.8 Q(g, XtNumber\(parentCvtAr)-.18 E(g\)\);)-.18 E(Boolean XmuNe)72
542.4 Q(wCvtStringT)-.25 E(oW)-.8 E(idget\()-.4 E F1(dpy)A F0(,)A F1(ar)
2.5 E(gs)-.37 E F0(,)A F1(num_ar)2.5 E(gs)-.37 E F0(,)A F1(fr)2.5 E(omV)
-.45 E(al)-1.11 E F0(,)A F1(toV)2.5 E(al)-1.11 E F0(,)A F1(data)2.5 E F0
(\))A(Display *)87 554.4 Q F1(dpy)A F0(;)A(XrmV)87 566.4 Q(alue *)-1.11
E F1(ar)2.5 E(gs)-.37 E F0(;)A(Cardinal *)87 578.4 Q F1(num_ar)A(gs)-.37
E F0(;)A(XrmV)87 590.4 Q(alue *)-1.11 E F1(fr)2.5 E(omV)-.45 E(al)-1.11
E F0(;)A(XrmV)87 602.4 Q(alue *)-1.11 E F1(toV)2.5 E(al)-1.11 E F0(;)A
(XtPointer *)87 614.4 Q F1(data)A F0(;)A F1(dpy)72 633.6 Q F0
(the display to use for con)57.56 E -.15(ve)-.4 G(rsion w).15 E(arnings)
-.1 E F1(ar)72 649.2 Q(gs)-.37 E F0(this sole ar)54.59 E
(gument is the parent W)-.18 E(idget)-.4 E F1(num_ar)72 664.8 Q(gs)-.37
E F0(this ar)32.37 E
(gument must be a pointer to a Cardinal containing the v)-.18 E(alue 1)
-.25 E F1(fr)72 680.4 Q(omV)-.45 E(al)-1.11 E F0
(speci\214es the string to con)40.78 E -.15(ve)-.4 G(rt).15 E F1(toV)72
696 Q(al)-1.11 E F0(returns the con)51.44 E -.15(ve)-.4 G(rted v).15 E
(alue)-.25 E F1(data)72 711.6 Q F0(this ar)54.22 E(gument is ignored)
-.18 E 0 Cg EP
%%Page: 14 14
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(-14-)279.67 48 Q(This con)72 84 Q -.15(ve)-.4 G
(rter is identical in functionality to XmuCvtStringT).15 E(oW)-.8 E
(idget, e)-.4 E(xcept that it is a ne)-.15 E(w-style con-)-.25 E -.15
(ve)72 96 S(rter).15 E 2.5(,a)-.4 G(llo)-2.5 E
(wing the speci\214cation of a cache type at the time of re)-.25 E 2.5
(gistration. Most)-.15 F(widgets will not cache the)2.5 E(con)72 108 Q
-.15(ve)-.4 G
(rsion results, as the application may dynamically create and destro).15
E 2.5(yw)-.1 G(idgets, which w)-2.5 E(ould cause)-.1 E(cached v)72 120 Q
(alues to become ille)-.25 E -.05(ga)-.15 G 2.5(l. T).05 F 2.5(ou)-.8 G
(se this con)-2.5 E -.15(ve)-.4 G(rter).15 E 2.5(,i)-.4 G
(nclude the follo)-2.5 E(wing in the widget')-.25 E 2.5(sc)-.55 G
(lass initialize)-2.5 E(procedure:)72 132 Q(static XtCon)72 147.6 Q -.15
(ve)-.4 G(rtAr).15 E(gRec parentCvtAr)-.18 E(g[] = {)-.18 E({XtW)77
159.6 Q(idgetBaseOf)-.4 E(fset, \(XtPointer\)XtOf)-.25 E(fsetOf\(W)-.25
E(idgetRec, core.parent\),)-.4 E(sizeof\(W)79.5 171.6 Q(idget\)})-.4 E
(};)72 183.6 Q(XtSetT)72 199.2 Q(ypeCon)-.8 E -.15(ve)-.4 G
(rter\(XtRString, XtR).15 E -.4(Wi)-.55 G(dget, XmuNe).4 E(wCvtStringT)
-.25 E(oW)-.8 E(idget,)-.4 E(parentCvtAr)129.5 211.2 Q
(g, XtNumber\(parentCvtAr)-.18 E(g\), XtCacheNone, NULL\);)-.18 E/F1 10
/Times-Bold@0 SF 2.5(10. Character)72 238.8 R(Set Functions)2.5 E F0 1.6
-.8(To u)72 254.4 T(se the functions de\214ned in this section, you sho\
uld include the header \214le <).8 E F1(X11/Xmu/CharSet.h).833 E F0(>.)
.833 E(The functions in this section are)72 270 Q F1(depr)2.5 E(ecated)
-.18 E F0(because the)2.5 E 2.5(yd)-.15 G(on')-2.5 E 2.5(tw)-.18 G
(ork in most locales no)-2.6 E 2.5(ws)-.25 G(upported by)-2.5 E
(X11; the function)72 282 Q F1(XmbLookupString)3.333 E F0(pro)3.333 E
(vides a better alternati)-.15 E -.15(ve)-.25 G(.).15 E -.2(vo)72 309.6
S(id XmuCop).2 E(yISOLatin1Lo)-.1 E(wered\()-.25 E/F2 10/Times-Italic@0
SF(dst)A F0(,)A F2(sr)2.5 E(c)-.37 E F0(\))A(char *)87 321.6 Q F2(dst)A
F0 2.5(,*)C F2(sr)-2.5 E(c)-.37 E F0(;)A F2(dst)72 340.8 Q F0
(returns the string cop)60.33 E(y)-.1 E F2(sr)72 356.4 Q(c)-.37 E F0
(speci\214es the string to cop)60.15 E(y)-.1 E(This function copies a n\
ull terminated string from src to dst \(including the null\), changing \
all Latin-1 upper)72 372 Q(-)-.2 E(case letters to lo)72 384 Q 2.5
(wercase. The)-.25 F(string is assumed to be encoded using ISO 8859-1.)
2.5 E -.2(vo)72 411.6 S(id XmuCop).2 E(yISOLatin1Uppered\()-.1 E F2(dst)
A F0(,)A F2(sr)2.5 E(c)-.37 E F0(\))A(char *)87 423.6 Q F2(dst)A F0 2.5
(,*)C F2(sr)-2.5 E(c)-.37 E F0(;)A F2(dst)72 442.8 Q F0
(returns the string cop)60.33 E(y)-.1 E F2(sr)72 458.4 Q(c)-.37 E F0
(speci\214es the string to cop)60.15 E(y)-.1 E(This function copies a n\
ull terminated string from src to dst \(including the null\), changing \
all Latin-1 lo)72 474 Q(wer)-.25 E(-)-.2 E(case letters to uppercase.)72
486 Q(The string is assumed to be encoded using ISO 8859-1.)5 E
(int XmuCompareISOLatin1\()72 513.6 Q F2<8c72>A(st)-.1 E F0(,)A F2
(second)2.5 E F0(\))A(char *)87 525.6 Q F2<8c72>A(st)-.1 E F0 2.5(,*)C
F2(second)-2.5 E F0(;)A F2(dst)72 544.8 Q F0
(speci\214es a string to compare)60.33 E F2(sr)72 560.4 Q(c)-.37 E F0
(speci\214es a string to compare)60.15 E(This function compares tw)72
576 Q 2.5(on)-.1 G(ull terminated Latin-1 strings, ignoring case dif)
-2.5 E(ferences, and returns an inte-)-.25 E(ger greater than, equal to\
, or less than 0, according to whether \214rst is le)72 588 Q
(xicographically greater than, equal)-.15 E(to, or less than second.)72
600 Q(The tw)5 E 2.5(os)-.1 G
(trings are assumed to be encoded using ISO 8859-1.)-2.5 E
(int XmuLookupLatin1\()72 627.6 Q F2 -.15(ev)C(ent).15 E F0(,)A F2 -.2
(bu)2.5 G -.18(ff).2 G(er).18 E F0(,)A F2(nbytes)2.5 E F0(,)A F2 -.1(ke)
2.5 G(ysym)-.2 E F0(,)A F2(status)2.5 E F0(\))A(XK)87 639.6 Q -.15(ey)
-.25 G(Ev).15 E(ent *)-.15 E F2 -.15(ev)C(ent).15 E F0(;)A(char *)87
651.6 Q F2 -.2(bu)C -.18(ff).2 G(er).18 E F0(;)A(int)87 663.6 Q F2
(nbytes)2.5 E F0(;)A -2.15 -.25(Ke y)87 675.6 T(Sym *).25 E F2 -.1(ke)C
(ysym)-.2 E F0(;)A(XComposeStatus *)87 687.6 Q F2(status)A F0(;)A F2
-.15(ev)72 706.8 S(ent).15 E F0(speci\214es the k)51.05 E .3 -.15(ey e)
-.1 H -.15(ve)-.1 G(nt).15 E 0 Cg EP
%%Page: 15 15
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(-15-)279.67 48 Q/F1 10/Times-Italic@0 SF -.2(bu)
72 84 S -.18(ff).2 G(er).18 E F0(returns the translated characters)48.49
E F1(nbytes)72 99.6 Q F0(speci\214es the length of the b)46.45 E(uf)-.2
E(fer)-.25 E F1 -.1(ke)72 115.2 S(ysym)-.2 E F0(returns the computed K)
43.53 E -.15(ey)-.25 G(Sym, or None).15 E F1(status)72 130.8 Q F0
(speci\214es or returns the compose state)48.66 E
(This function is identical to)72 146.4 Q/F2 10/Times-Bold@0 SF
(XLookupString)3.333 E F0 2.5(,a).833 G(nd e)-2.5 E
(xists only for naming symmetry with other functions.)-.15 E
(int XmuLookupLatin2\()72 174 Q F1 -.15(ev)C(ent).15 E F0(,)A F1 -.2(bu)
2.5 G -.18(ff).2 G(er).18 E F0(,)A F1(nbytes)2.5 E F0(,)A F1 -.1(ke)2.5
G(ysym)-.2 E F0(,)A F1(status)2.5 E F0(\))A(XK)87 186 Q -.15(ey)-.25 G
(Ev).15 E(ent *)-.15 E F1 -.15(ev)C(ent).15 E F0(;)A(char *)87 198 Q F1
-.2(bu)C -.18(ff).2 G(er).18 E F0(;)A(int)87 210 Q F1(nbytes)2.5 E F0(;)
A -2.15 -.25(Ke y)87 222 T(Sym *).25 E F1 -.1(ke)C(ysym)-.2 E F0(;)A
(XComposeStatus *)87 234 Q F1(status)A F0(;)A F1 -.15(ev)72 253.2 S(ent)
.15 E F0(speci\214es the k)51.05 E .3 -.15(ey e)-.1 H -.15(ve)-.1 G(nt)
.15 E F1 -.2(bu)72 268.8 S -.18(ff).2 G(er).18 E F0
(returns the translated characters)48.49 E F1(nbytes)72 284.4 Q F0
(speci\214es the length of the b)46.45 E(uf)-.2 E(fer)-.25 E F1 -.1(ke)
72 300 S(ysym)-.2 E F0(returns the computed K)43.53 E -.15(ey)-.25 G
(Sym, or None).15 E F1(status)72 315.6 Q F0
(speci\214es or returns the compose state)48.66 E
(This function is similar to)72 331.2 Q F2(XLookupString)3.333 E F0 2.5
(,e).833 G(xcept that it maps a k)-2.65 E .3 -.15(ey e)-.1 H -.15(ve)-.1
G(nt to an Latin-2 \(ISO 8859-2\)).15 E
(string, or to an ASCII control string.)72 343.2 Q
(int XmuLookupLatin3\()72 370.8 Q F1 -.15(ev)C(ent).15 E F0(,)A F1 -.2
(bu)2.5 G -.18(ff).2 G(er).18 E F0(,)A F1(nbytes)2.5 E F0(,)A F1 -.1(ke)
2.5 G(ysym)-.2 E F0(,)A F1(status)2.5 E F0(\))A(XK)87 382.8 Q -.15(ey)
-.25 G(Ev).15 E(ent *)-.15 E F1 -.15(ev)C(ent).15 E F0(;)A(char *)87
394.8 Q F1 -.2(bu)C -.18(ff).2 G(er).18 E F0(;)A(int)87 406.8 Q F1
(nbytes)2.5 E F0(;)A -2.15 -.25(Ke y)87 418.8 T(Sym *).25 E F1 -.1(ke)C
(ysym)-.2 E F0(;)A(XComposeStatus *)87 430.8 Q F1(status)A F0(;)A F1
-.15(ev)72 450 S(ent).15 E F0(speci\214es the k)51.05 E .3 -.15(ey e)-.1
H -.15(ve)-.1 G(nt).15 E F1 -.2(bu)72 465.6 S -.18(ff).2 G(er).18 E F0
(returns the translated characters)48.49 E F1(nbytes)72 481.2 Q F0
(speci\214es the length of the b)46.45 E(uf)-.2 E(fer)-.25 E F1 -.1(ke)
72 496.8 S(ysym)-.2 E F0(returns the computed K)43.53 E -.15(ey)-.25 G
(Sym, or None).15 E F1(status)72 512.4 Q F0
(speci\214es or returns the compose state)48.66 E
(This function is similar to)72 528 Q F2(XLookupString)3.333 E F0 2.5
(,e).833 G(xcept that it maps a k)-2.65 E .3 -.15(ey e)-.1 H -.15(ve)-.1
G(nt to an Latin-3 \(ISO 8859-3\)).15 E
(string, or to an ASCII control string.)72 540 Q(int XmuLookupLatin4\()
72 567.6 Q F1 -.15(ev)C(ent).15 E F0(,)A F1 -.2(bu)2.5 G -.18(ff).2 G
(er).18 E F0(,)A F1(nbytes)2.5 E F0(,)A F1 -.1(ke)2.5 G(ysym)-.2 E F0(,)
A F1(status)2.5 E F0(\))A(XK)87 579.6 Q -.15(ey)-.25 G(Ev).15 E(ent *)
-.15 E F1 -.15(ev)C(ent).15 E F0(;)A(char *)87 591.6 Q F1 -.2(bu)C -.18
(ff).2 G(er).18 E F0(;)A(int)87 603.6 Q F1(nbytes)2.5 E F0(;)A -2.15
-.25(Ke y)87 615.6 T(Sym *).25 E F1 -.1(ke)C(ysym)-.2 E F0(;)A
(XComposeStatus *)87 627.6 Q F1(status)A F0(;)A F1 -.15(ev)72 646.8 S
(ent).15 E F0(speci\214es the k)51.05 E .3 -.15(ey e)-.1 H -.15(ve)-.1 G
(nt).15 E F1 -.2(bu)72 662.4 S -.18(ff).2 G(er).18 E F0
(returns the translated characters)48.49 E F1(nbytes)72 678 Q F0
(speci\214es the length of the b)46.45 E(uf)-.2 E(fer)-.25 E F1 -.1(ke)
72 693.6 S(ysym)-.2 E F0(returns the computed K)43.53 E -.15(ey)-.25 G
(Sym, or None).15 E F1(status)72 709.2 Q F0
(speci\214es or returns the compose state)48.66 E 0 Cg EP
%%Page: 16 16
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(-16-)279.67 48 Q(This function is similar to)72
84 Q/F1 10/Times-Bold@0 SF(XLookupString)3.333 E F0 2.5(,e).833 G
(xcept that it maps a k)-2.65 E .3 -.15(ey e)-.1 H -.15(ve)-.1 G
(nt to an Latin-4 \(ISO 8859-4\)).15 E
(string, or to an ASCII control string.)72 96 Q(int XmuLookupKana\()72
123.6 Q/F2 10/Times-Italic@0 SF -.15(ev)C(ent).15 E F0(,)A F2 -.2(bu)2.5
G -.18(ff).2 G(er).18 E F0(,)A F2(nbytes)2.5 E F0(,)A F2 -.1(ke)2.5 G
(ysym)-.2 E F0(,)A F2(status)2.5 E F0(\))A(XK)87 135.6 Q -.15(ey)-.25 G
(Ev).15 E(ent *)-.15 E F2 -.15(ev)C(ent).15 E F0(;)A(char *)87 147.6 Q
F2 -.2(bu)C -.18(ff).2 G(er).18 E F0(;)A(int)87 159.6 Q F2(nbytes)2.5 E
F0(;)A -2.15 -.25(Ke y)87 171.6 T(Sym *).25 E F2 -.1(ke)C(ysym)-.2 E F0
(;)A(XComposeStatus *)87 183.6 Q F2(status)A F0(;)A F2 -.15(ev)72 202.8
S(ent).15 E F0(speci\214es the k)51.05 E .3 -.15(ey e)-.1 H -.15(ve)-.1
G(nt).15 E F2 -.2(bu)72 218.4 S -.18(ff).2 G(er).18 E F0
(returns the translated characters)48.49 E F2(nbytes)72 234 Q F0
(speci\214es the length of the b)46.45 E(uf)-.2 E(fer)-.25 E F2 -.1(ke)
72 249.6 S(ysym)-.2 E F0(returns the computed K)43.53 E -.15(ey)-.25 G
(Sym, or None).15 E F2(status)72 265.2 Q F0
(speci\214es or returns the compose state)48.66 E
(This function is similar to)72 280.8 Q F1(XLookupString)3.333 E F0 2.5
(,e).833 G(xcept that it maps a k)-2.65 E .3 -.15(ey e)-.1 H -.15(ve)-.1
G(nt to a string in an encoding con-).15 E(sisting of Latin-1 \(ISO 885\
9-1\) and ASCII control in the Graphics Left half \(v)72 292.8 Q
(alues 0 to 127\), and Katakana)-.25 E(in the Graphics Right half \(v)72
304.8 Q(alues 128 to 255\), using the v)-.25 E
(alues from JIS X201-1976.)-.25 E(int XmuLookupJISX0201\()72 332.4 Q F2
-.15(ev)C(ent).15 E F0(,)A F2 -.2(bu)2.5 G -.18(ff).2 G(er).18 E F0(,)A
F2(nbytes)2.5 E F0(,)A F2 -.1(ke)2.5 G(ysym)-.2 E F0(,)A F2(status)2.5 E
F0(\))A(XK)87 344.4 Q -.15(ey)-.25 G(Ev).15 E(ent *)-.15 E F2 -.15(ev)C
(ent).15 E F0(;)A(char *)87 356.4 Q F2 -.2(bu)C -.18(ff).2 G(er).18 E F0
(;)A(int)87 368.4 Q F2(nbytes)2.5 E F0(;)A -2.15 -.25(Ke y)87 380.4 T
(Sym *).25 E F2 -.1(ke)C(ysym)-.2 E F0(;)A(XComposeStatus *)87 392.4 Q
F2(status)A F0(;)A F2 -.15(ev)72 411.6 S(ent).15 E F0(speci\214es the k)
51.05 E .3 -.15(ey e)-.1 H -.15(ve)-.1 G(nt).15 E F2 -.2(bu)72 427.2 S
-.18(ff).2 G(er).18 E F0(returns the translated characters)48.49 E F2
(nbytes)72 442.8 Q F0(speci\214es the length of the b)46.45 E(uf)-.2 E
(fer)-.25 E F2 -.1(ke)72 458.4 S(ysym)-.2 E F0(returns the computed K)
43.53 E -.15(ey)-.25 G(Sym, or None).15 E F2(status)72 474 Q F0
(speci\214es or returns the compose state)48.66 E
(This function is similar to)72 489.6 Q F1(XLookupString)3.333 E F0 2.5
(,e).833 G(xcept that it maps a k)-2.65 E .3 -.15(ey e)-.1 H -.15(ve)-.1
G(nt to a string in the JIS).15 E
(X0201-1976 encoding, including ASCII control.)72 501.6 Q
(int XmuLookupArabic\()72 529.2 Q F2 -.15(ev)C(ent).15 E F0(,)A F2 -.2
(bu)2.5 G -.18(ff).2 G(er).18 E F0(,)A F2(nbytes)2.5 E F0(,)A F2 -.1(ke)
2.5 G(ysym)-.2 E F0(,)A F2(status)2.5 E F0(\))A(XK)87 541.2 Q -.15(ey)
-.25 G(Ev).15 E(ent *)-.15 E F2 -.15(ev)C(ent).15 E F0(;)A(char *)87
553.2 Q F2 -.2(bu)C -.18(ff).2 G(er).18 E F0(;)A(int)87 565.2 Q F2
(nbytes)2.5 E F0(;)A -2.15 -.25(Ke y)87 577.2 T(Sym *).25 E F2 -.1(ke)C
(ysym)-.2 E F0(;)A(XComposeStatus *)87 589.2 Q F2(status)A F0(;)A F2
-.15(ev)72 608.4 S(ent).15 E F0(speci\214es the k)51.05 E .3 -.15(ey e)
-.1 H -.15(ve)-.1 G(nt).15 E F2 -.2(bu)72 624 S -.18(ff).2 G(er).18 E F0
(returns the translated characters)48.49 E F2(nbytes)72 639.6 Q F0
(speci\214es the length of the b)46.45 E(uf)-.2 E(fer)-.25 E F2 -.1(ke)
72 655.2 S(ysym)-.2 E F0(returns the computed K)43.53 E -.15(ey)-.25 G
(Sym, or None).15 E F2(status)72 670.8 Q F0
(speci\214es or returns the compose state)48.66 E
(This function is similar to)72 686.4 Q F1(XLookupString)3.333 E F0 2.5
(,e).833 G(xcept that it maps a k)-2.65 E .3 -.15(ey e)-.1 H -.15(ve)-.1
G(nt to a Latin/Arabic \(ISO 8859-6\)).15 E
(string, or to an ASCII control string.)72 698.4 Q 0 Cg EP
%%Page: 17 17
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(-17-)279.67 48 Q(int XmuLookupCyrillic\()72 84 Q
/F1 10/Times-Italic@0 SF -.15(ev)C(ent).15 E F0(,)A F1 -.2(bu)2.5 G -.18
(ff).2 G(er).18 E F0(,)A F1(nbytes)2.5 E F0(,)A F1 -.1(ke)2.5 G(ysym)-.2
E F0(,)A F1(status)2.5 E F0(\))A(XK)87 96 Q -.15(ey)-.25 G(Ev).15 E
(ent *)-.15 E F1 -.15(ev)C(ent).15 E F0(;)A(char *)87 108 Q F1 -.2(bu)C
-.18(ff).2 G(er).18 E F0(;)A(int)87 120 Q F1(nbytes)2.5 E F0(;)A -2.15
-.25(Ke y)87 132 T(Sym *).25 E F1 -.1(ke)C(ysym)-.2 E F0(;)A
(XComposeStatus *)87 144 Q F1(status)A F0(;)A F1 -.15(ev)72 163.2 S(ent)
.15 E F0(speci\214es the k)51.05 E .3 -.15(ey e)-.1 H -.15(ve)-.1 G(nt)
.15 E F1 -.2(bu)72 178.8 S -.18(ff).2 G(er).18 E F0
(returns the translated characters)48.49 E F1(nbytes)72 194.4 Q F0
(speci\214es the length of the b)46.45 E(uf)-.2 E(fer)-.25 E F1 -.1(ke)
72 210 S(ysym)-.2 E F0(returns the computed K)43.53 E -.15(ey)-.25 G
(Sym, or None).15 E F1(status)72 225.6 Q F0
(speci\214es or returns the compose state)48.66 E
(This function is similar to)72 241.2 Q/F2 10/Times-Bold@0 SF
(XLookupString)3.333 E F0 2.5(,e).833 G(xcept that it maps a k)-2.65 E
.3 -.15(ey e)-.1 H -.15(ve)-.1 G(nt to a Latin/Cyrillic \(ISO).15 E
(8859-5\) string, or to an ASCII control string.)72 253.2 Q
(int XmuLookupGreek\()72 280.8 Q F1 -.15(ev)C(ent).15 E F0(,)A F1 -.2
(bu)2.5 G -.18(ff).2 G(er).18 E F0(,)A F1(nbytes)2.5 E F0(,)A F1 -.1(ke)
2.5 G(ysym)-.2 E F0(,)A F1(status)2.5 E F0(\))A(XK)87 292.8 Q -.15(ey)
-.25 G(Ev).15 E(ent *)-.15 E F1 -.15(ev)C(ent).15 E F0(;)A(char *)87
304.8 Q F1 -.2(bu)C -.18(ff).2 G(er).18 E F0(;)A(int)87 316.8 Q F1
(nbytes)2.5 E F0(;)A -2.15 -.25(Ke y)87 328.8 T(Sym *).25 E F1 -.1(ke)C
(ysym)-.2 E F0(;)A(XComposeStatus *)87 340.8 Q F1(status)A F0(;)A F1
-.15(ev)72 360 S(ent).15 E F0(speci\214es the k)51.05 E .3 -.15(ey e)-.1
H -.15(ve)-.1 G(nt).15 E F1 -.2(bu)72 375.6 S -.18(ff).2 G(er).18 E F0
(returns the translated characters)48.49 E F1(nbytes)72 391.2 Q F0
(speci\214es the length of the b)46.45 E(uf)-.2 E(fer)-.25 E F1 -.1(ke)
72 406.8 S(ysym)-.2 E F0(returns the computed K)43.53 E -.15(ey)-.25 G
(Sym, or None).15 E F1(status)72 422.4 Q F0
(speci\214es or returns the compose state)48.66 E
(This function is similar to)72 438 Q F2(XLookupString)3.333 E F0 2.5
(,e).833 G(xcept that it maps a k)-2.65 E .3 -.15(ey e)-.1 H -.15(ve)-.1
G(nt to a Latin/Greek \(ISO 8859-7\)).15 E
(string, or to an ASCII control string.)72 450 Q(int XmuLookupHebre)72
477.6 Q(w\()-.25 E F1 -.15(ev)C(ent).15 E F0(,)A F1 -.2(bu)2.5 G -.18
(ff).2 G(er).18 E F0(,)A F1(nbytes)2.5 E F0(,)A F1 -.1(ke)2.5 G(ysym)-.2
E F0(,)A F1(status)2.5 E F0(\))A(XK)87 489.6 Q -.15(ey)-.25 G(Ev).15 E
(ent *)-.15 E F1 -.15(ev)C(ent).15 E F0(;)A(char *)87 501.6 Q F1 -.2(bu)
C -.18(ff).2 G(er).18 E F0(;)A(int)87 513.6 Q F1(nbytes)2.5 E F0(;)A
-2.15 -.25(Ke y)87 525.6 T(Sym *).25 E F1 -.1(ke)C(ysym)-.2 E F0(;)A
(XComposeStatus *)87 537.6 Q F1(status)A F0(;)A F1 -.15(ev)72 556.8 S
(ent).15 E F0(speci\214es the k)51.05 E .3 -.15(ey e)-.1 H -.15(ve)-.1 G
(nt).15 E F1 -.2(bu)72 572.4 S -.18(ff).2 G(er).18 E F0
(returns the translated characters)48.49 E F1(nbytes)72 588 Q F0
(speci\214es the length of the b)46.45 E(uf)-.2 E(fer)-.25 E F1 -.1(ke)
72 603.6 S(ysym)-.2 E F0(returns the computed K)43.53 E -.15(ey)-.25 G
(Sym, or None).15 E F1(status)72 619.2 Q F0
(speci\214es or returns the compose state)48.66 E
(This function is similar to)72 634.8 Q F2(XLookupString)3.333 E F0 2.5
(,e).833 G(xcept that it maps a k)-2.65 E .3 -.15(ey e)-.1 H -.15(ve)-.1
G(nt to a Latin/Hebre).15 E 2.5(w\()-.25 G(ISO)-2.5 E
(8859-8\) string, or to an ASCII control string.)72 646.8 Q 0 Cg EP
%%Page: 18 18
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(-18-)279.67 48 Q(int XmuLookupAPL\()72 84 Q/F1
10/Times-Italic@0 SF -.15(ev)C(ent).15 E F0(,)A F1 -.2(bu)2.5 G -.18(ff)
.2 G(er).18 E F0(,)A F1(nbytes)2.5 E F0(,)A F1 -.1(ke)2.5 G(ysym)-.2 E
F0(,)A F1(status)2.5 E F0(\))A(XK)87 96 Q -.15(ey)-.25 G(Ev).15 E(ent *)
-.15 E F1 -.15(ev)C(ent).15 E F0(;)A(char *)87 108 Q F1 -.2(bu)C -.18
(ff).2 G(er).18 E F0(;)A(int)87 120 Q F1(nbytes)2.5 E F0(;)A -2.15 -.25
(Ke y)87 132 T(Sym *).25 E F1 -.1(ke)C(ysym)-.2 E F0(;)A
(XComposeStatus *)87 144 Q F1(status)A F0(;)A F1 -.15(ev)72 163.2 S(ent)
.15 E F0(speci\214es the k)51.05 E .3 -.15(ey e)-.1 H -.15(ve)-.1 G(nt)
.15 E F1 -.2(bu)72 178.8 S -.18(ff).2 G(er).18 E F0
(returns the translated characters)48.49 E F1(nbytes)72 194.4 Q F0
(speci\214es the length of the b)46.45 E(uf)-.2 E(fer)-.25 E F1 -.1(ke)
72 210 S(ysym)-.2 E F0(returns the computed K)43.53 E -.15(ey)-.25 G
(Sym, or None).15 E F1(status)72 225.6 Q F0
(speci\214es or returns the compose state)48.66 E
(This function is similar to)72 241.2 Q/F2 10/Times-Bold@0 SF
(XLookupString)3.333 E F0 2.5(,e).833 G(xcept that it maps a k)-2.65 E
.3 -.15(ey e)-.1 H -.15(ve)-.1 G(nt to an APL string.).15 E F2 2.5
(11. Compound)72 268.8 R -.92(Te)2.5 G(xt Functions).92 E F0
(The functions de\214ned in this section are for parsing Compound T)72
284.4 Q -.15(ex)-.7 G 2.5(ts).15 G(trings, decomposing them into indi-)
-2.5 E(vidual se)72 296.4 Q(gments. De\214nitions needed to use these r\
outines are in the include \214le <)-.15 E F2(X11/Xmu/Xct.h).833 E F0
(>.).833 E(The functions in this section are)72 312 Q F2(depr)2.5 E
(ecated)-.18 E F0(because the)2.5 E 2.5(ys)-.15 G(hift the b)-2.5 E
(urden for recently introduced locale)-.2 E
(encodings to the application. The use of the)72 324 Q F2(UTF8_STRING)
3.333 E F0(te)3.333 E(xt encoding pro)-.15 E(vides a better alternati)
-.15 E -.15(ve)-.25 G(.).15 E 2.5(AC)72 339.6 S(ompound T)-2.5 E -.15
(ex)-.7 G 2.5(ts).15 G(tring is represented as the follo)-2.5 E
(wing type:)-.25 E(typedef unsigned char *XctString;)97 355.2 Q
(XctData XctCreate\()72 382.8 Q F1(string)A F0(,)A F1(length)2.5 E F0(,)
A F1<8d61>2.5 E(gs)-.1 E F0(\))A(XctString)87 394.8 Q F1(string)2.5 E F0
(;)A(int)87 406.8 Q F1(length)2.5 E F0(;)A(XctFlags)87 418.8 Q F1<8d61>
2.5 E(gs)-.1 E F0(;)A F1(string)72 438 Q F0(the Compound T)48.66 E -.15
(ex)-.7 G 2.5(ts).15 G(tring)-2.5 E F1(length)72 453.6 Q F0
(the number of bytes in string)47 E F1<8d61>72 469.2 Q(gs)-.1 E F0
(parsing control \215ags)53.21 E(This function creates an)72 484.8 Q F2
(XctData)3.333 E F0(structure for parsing a Compound T)3.333 E -.15(ex)
-.7 G 2.5(ts).15 G 2.5(tring. The)-2.5 F(string need not be)2.5 E
(null terminated.)72 496.8 Q(The follo)5 E
(wing \215ags are de\214ned to control parsing of the string:)-.25 E F2
(XctSingleSetSegments)72.833 512.4 Q F0(-- This means that returned se)
3.333 E(gments should contain characters from only one set)-.15 E
(\(C0, C1, GL, GR\).)72 524.4 Q(When this is requested,)5 E F2
(XctSegment)3.333 E F0(is ne)3.333 E -.15(ve)-.25 G 2.5(rr).15 G
(eturned by)-2.5 E F2(XctNextItem)3.333 E F0 2.5(,i).833 G(nstead)-2.5 E
F2(XctC0Segment)72.833 536.4 Q F0(,).833 E F2(XctC1Segment)3.333 E F0(,)
.833 E F2(XctGlSegment)3.333 E F0 2.5(,a).833 G(nd)-2.5 E F2
(XctGRSegment)3.333 E F0(are returned.)3.333 E(C0 and C1 se)5 E(g-)-.15
E(ments are al)72 548.4 Q -.1(wa)-.1 G
(ys returned as singleton characters.).1 E F2(XctPr)72.833 564 Q -.1(ov)
-.18 G(ideExtensions).1 E F0(-- This means that if the Compound T)3.333
E -.15(ex)-.7 G 2.5(ts).15 G(tring is from a higher v)-2.5 E
(ersion than this)-.15 E
(code is implemented to, then syntactically correct b)72 576 Q(ut unkno)
-.2 E(wn control sequences should be returned as)-.25 E F2(XctExtension)
72.833 588 Q F0(items by)3.333 E F2(XctNextItem)3.333 E F0 5(.I).833 G
2.5(ft)-5 G(his \215ag is not set, and the Compound T)-2.5 E -.15(ex)-.7
G 2.5(ts).15 G(tring v)-2.5 E(ersion indi-)-.15 E(cates that e)72 600 Q
(xtensions cannot be ignored, then each unkno)-.15 E
(wn control sequence will be reported as an)-.25 E F2(XctEr)3.333 E(-)
-.37 E -.18(ro)72 612 S(r).18 E F0(.).833 E F2(XctAcceptC0Extensions)
72.833 627.6 Q F0(-- This means that if the Compound T)3.333 E -.15(ex)
-.7 G 2.5(ts).15 G(tring is from a higher v)-2.5 E(ersion than this)-.15
E(code is implemented to, then unkno)72 639.6 Q
(wn C0 characters should be treated as if the)-.25 E 2.5(yw)-.15 G
(ere le)-2.5 E -.05(ga)-.15 G(l, and returned as).05 E
(C0 characters \(re)72 651.6 Q -.05(ga)-.15 G(rdless of ho).05 E(w)-.25
E F2(XctPr)3.333 E -.1(ov)-.18 G(ideExtensions).1 E F0(is set\) by)3.333
E F2(XctNextItem)3.333 E F0 5(.I).833 G 2.5(ft)-5 G
(his \215ag is not set,)-2.5 E(then all unkno)72 663.6 Q
(wn C0 characters are treated according to)-.25 E F2(XctPr)3.333 E -.1
(ov)-.18 G(ideExtensions).1 E F0(.).833 E F2(XctAcceptC1Extensions)
72.833 679.2 Q F0(-- This means that if the Compound T)3.333 E -.15(ex)
-.7 G 2.5(ts).15 G(tring is from a higher v)-2.5 E(ersion than this)-.15
E(code is implemented to, then unkno)72 691.2 Q
(wn C1 characters should be treated as if the)-.25 E 2.5(yw)-.15 G
(ere le)-2.5 E -.05(ga)-.15 G(l, and returned as).05 E
(C1 characters \(re)72 703.2 Q -.05(ga)-.15 G(rdless of ho).05 E(w)-.25
E F2(XctPr)3.333 E -.1(ov)-.18 G(ideExtensions).1 E F0(is set\) by)3.333
E F2(XctNextItem)3.333 E F0 5(.I).833 G 2.5(ft)-5 G
(his \215ag is not set,)-2.5 E(then all unkno)72 715.2 Q
(wn C1 characters are treated according to)-.25 E F2(XctPr)3.333 E -.1
(ov)-.18 G(ideExtensions).1 E F0(.).833 E 0 Cg EP
%%Page: 19 19
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(-19-)279.67 48 Q/F1 10/Times-Bold@0 SF
(XctHideDir)72.833 84 Q(ection)-.18 E F0
(-- This means that horizontal direction changes should be reported as)
3.333 E F1(XctHorizontal)3.333 E F0(items by)72 96 Q F1(XctNextItem)
3.333 E F0 5(.t).833 G
(hen direction changes are not returned as items, b)-5 E
(ut the current direction is still)-.2 E
(maintained and reported for other items.)72 108 Q
(The current direction is gi)5 E -.15(ve)-.25 G 2.5(na).15 G 2.5(sa)-2.5
G 2.5(ne)-2.5 G(numeration, with the v)-2.5 E(alues)-.25 E F1
(XctUnspeci\214ed)72.833 120 Q F0(,).833 E F1(XctLeftT)3.333 E(oRight)
-.92 E F0 2.5(,a).833 G(nd)-2.5 E F1(XctRightT)3.333 E(oLeft)-.92 E F0
(.).833 E F1(XctFr)72.833 135.6 Q(eeString)-.18 E F0(-- This means that)
3.333 E F1(XctFr)3.333 E(ee)-.18 E F0(should free the Compound T)3.333 E
-.15(ex)-.7 G 2.5(ts).15 G(tring that is passed to)-2.5 E F1(XctCr)
72.833 147.6 Q(eate)-.18 E F0 5(.I).833 G 2.5(ft)-5 G
(his \215ag is not set, the string is not freed.)-2.5 E F1
(XctShiftMultiGR)72.833 163.2 Q -.92(To)-.4 G(GL).92 E F0
(-- This means that)3.333 E F1(XctNextItem)3.333 E F0
(should translate GR se)3.333 E(gments on-the-\215y into)-.15 E(GL se)72
175.2 Q(gments for the GR sets: GB2312.1980-1, JISX0208.1983-1, and KSC\
5601.1987-1.)-.15 E -.2(vo)72 202.8 S(id XctReset\().2 E/F2 10
/Times-Italic@0 SF(data)A F0(\))A(XctData)87 214.8 Q F2(data)2.5 E F0(;)
A F2(data)72 234 Q F0(speci\214es the Compound T)54.22 E -.15(ex)-.7 G
2.5(ts).15 G(tructure)-2.5 E(This function resets the)72 249.6 Q F1
(XctData)3.333 E F0(structure to reparse the Compound T)3.333 E -.15(ex)
-.7 G 2.5(ts).15 G(tring from the be)-2.5 E(ginning.)-.15 E
(XctResult XctNe)72 277.2 Q(xtItem\()-.15 E F2(data)A F0(\))A(XctData)87
289.2 Q F2(data)2.5 E F0(;)A F2(data)72 308.4 Q F0
(speci\214es the Compound T)54.22 E -.15(ex)-.7 G 2.5(ts).15 G(tructure)
-2.5 E(This function parses the ne)72 324 Q(xt `)-.15 E(`item')-.74 E
2.5('f)-.74 G(rom the Compound T)-2.5 E -.15(ex)-.7 G 2.5(ts).15 G 2.5
(tring. The)-2.5 F(return v)2.5 E(alue indicates what kind)-.25 E
(of item is returned.)72 336 Q(The item itself, it')5 E 2.5(sl)-.55 G
(ength, and the current conte)-2.5 E
(xtual state, are reported as components)-.15 E(of the)72 348 Q F1
(XctData)3.333 E F0(structure.)3.333 E F1(XctResult)5.833 E F0
(is an enumeration, with the follo)3.333 E(wing v)-.25 E(alues:)-.25 E
F1(XctSegment)72.833 363.6 Q F0
(-- the item contains some mixture of C0, GL, GR, and C1 characters.)
3.333 E F1(XctC0Segment)72.833 379.2 Q F0
(-- the item contains only C0 characters.)3.333 E F1(XctGLSegment)72.833
394.8 Q F0(-- the item contains only GL characters.)3.333 E F1
(XctC1Segment)72.833 410.4 Q F0
(-- the item contains only C1 characters.)3.333 E F1(XctGRSegment)72.833
426 Q F0(-- the item contains only GR characters.)3.333 E F1
(XctExtendedSegment)72.833 441.6 Q F0(-- the item contains an e)3.333 E
(xtended se)-.15 E(gment.)-.15 E F1(XctExtension)72.833 457.2 Q F0
(-- the item is an unkno)3.333 E(wn e)-.25 E(xtension control sequence.)
-.15 E F1(XctHorizontal)72.833 472.8 Q F0
(-- the item indicates a change in horizontal direction or depth.)3.333
E(The ne)5 E 2.5(wd)-.25 G(irection and depth)-2.5 E
(are recorded in the)72 484.8 Q F1(XctData)3.333 E F0(structure.)3.333 E
F1(XctEndOfT)72.833 500.4 Q(ext)-.92 E F0(-- The end of the Compound T)
3.333 E -.15(ex)-.7 G 2.5(ts).15 G(tring has been reached.)-2.5 E F1
(XctErr)72.833 516 Q(or)-.18 E F0(-- the string contains a syntactic or\
 semantic error; no further parsing should be performed.)3.333 E
(The follo)72 531.6 Q(wing state v)-.25 E(alues are stored in the)-.25 E
F1(XctData)3.333 E F0(structure:)3.333 E(XctString item;)108 549.6 Q
(/* the action item */)118.05 E(int item_length;)108 561.6 Q
(/* the length of item in bytes */)116.38 E(int char_size;)108 573.6 Q
(/* the number of bytes per character in)126.4 E 2.5(*i)290.5 585.6 S
(tem, with zero meaning v)-2.5 E(ariable */)-.25 E(char *encoding;)108
597.6 Q(/* the XLFD encoding name for item */)115.85 E
(XctHDirection horizontal;)108 609.6 Q(/* the direction of item */)74.74
E(int horz_depth;)108 621.6 Q(/* the current direction nesting depth */)
119.17 E(char *GL;)108 633.6 Q
(/* the "{I} F" string for the current GL */)139.18 E
(char *GL_encoding;)108 645.6 Q
(/* the XLFD encoding name for the current GL */)97.52 E
(int GL_set_size;)108 657.6 Q(/* 94 or 96 */)114.17 E(int GL_char_size;)
108 669.6 Q(/* the number of bytes per GL character */)108.07 E
(char *GR;)108 681.6 Q(/* the "{I} F" string for the current GR */)
138.62 E(char *GR_encoding;)108 693.6 Q
(/* the XLFD encoding name the for current GR */)96.96 E
(int GR_set_size;)108 705.6 Q(/* 94 or 96 */)113.61 E(int GR_char_size;)
108 717.6 Q(/* the number of bytes per GR character */)107.51 E
(char *GLGR_encoding;)108 729.6 Q
(/* the XLFD encoding name for the current)83.63 E 0 Cg EP
%%Page: 20 20
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(-20-)279.67 48 Q 2.5(*G)290.5 84 S(L+GR, if kno)
-2.5 E(wn */)-.25 E -.2(vo)72 117.6 S(id XctFree\().2 E/F1 10
/Times-Italic@0 SF(data)A F0(\))A(XctData)87 129.6 Q F1(data)2.5 E F0(;)
A F1(data)72 148.8 Q F0(speci\214es the Compound T)54.22 E -.15(ex)-.7 G
2.5(ts).15 G(tructure)-2.5 E
(This function frees all data associated with the)72 164.4 Q/F2 10
/Times-Bold@0 SF(XctData)3.333 E F0(structure.)3.333 E F2 2.5
(12. CloseDisplay)72 192 R(Hook Functions)2.5 E F0 1.6 -.8(To u)72 207.6
T(se the functions de\214ned in this section, you should include the he\
ader \214le <).8 E F2(X11/Xmu/CloseHook.h).833 E F0(>.).833 E
(CloseHook XmuAddCloseDisplayHook\()72 235.2 Q F1(dpy)A F0(,)A F1(func)
2.5 E F0(,)A F1(ar)2.5 E(g)-.37 E F0(\))A(Display *)87 247.2 Q F1(dpy)A
F0(;)A(int \(*)87 259.2 Q F1(func)A F0(\)\(\);)A(caddr_t)87 271.2 Q F1
(ar)2.5 E(g)-.37 E F0(;)A F1(dpy)72 290.4 Q F0
(speci\214es the connection to the X serv)57.56 E(er)-.15 E F1(func)72
306 Q F0(speci\214es the function to call at display close)54.78 E F1
(ar)72 321.6 Q(g)-.37 E F0(speci\214es arbitrary data to pass to func)
58.48 E(This function adds a callback for the gi)72 337.2 Q -.15(ve)-.25
G 2.5(nd).15 G(isplay)-2.5 E 5(.W)-.65 G
(hen the display is closed, the gi)-5 E -.15(ve)-.25 G 2.5(nf).15 G
(unction will be)-2.5 E(called with the gi)72 349.2 Q -.15(ve)-.25 G 2.5
(nd).15 G(isplay and ar)-2.5 E(gument as:)-.18 E(\(*func\)\(dp)97 364.8
Q 1.3 -.65(y, a)-.1 H -.18(rg).65 G(\)).18 E
(The function is declared to return an int e)72 380.4 Q -.15(ve)-.25 G
2.5(nt).15 G(hough the v)-2.5 E
(alue is ignored, because some compilers ha)-.25 E -.15(ve)-.2 G
(problems with functions returning v)72 392.4 Q(oid.)-.2 E
(This routine returns NULL if it w)72 408 Q(as unable to add the callba\
ck, otherwise it returns an opaque handle that)-.1 E
(can be used to remo)72 420 Q .3 -.15(ve o)-.15 H 2.5(rl).15 G
(ookup the callback.)-2.5 E(Bool XmuRemo)72 447.6 Q -.15(ve)-.15 G
(CloseDisplayHook\().15 E F1(dpy)A F0(,)A F1(handle)2.5 E F0(,)A F1
(func)2.5 E F0(,)A F1(ar)2.5 E(g)-.37 E F0(\))A(Display *)87 459.6 Q F1
(dpy)A F0(;)A(CloseHook)87 471.6 Q F1(handle)2.5 E F0(;)A(int \(*)87
483.6 Q F1(func)A F0(\)\(\);)A(caddr_t)87 495.6 Q F1(ar)2.5 E(g)-.37 E
F0(;)A F1(dpy)72 514.8 Q F0(speci\214es the connection to the X serv)
57.56 E(er)-.15 E F1(handle)72 530.4 Q F0
(speci\214es the callback by id, or NULL)44.78 E F1(func)72 546 Q F0
(speci\214es the callback by function)54.78 E F1(ar)72 561.6 Q(g)-.37 E
F0(speci\214es the function data to match)58.48 E
(This function deletes a callback that has been added with)72 577.2 Q F2
(XmuAddCloseDisplayHook)3.333 E F0 5(.I).833 G 2.5(fh)-5 G(andle is not)
-2.5 E(NULL, it speci\214es the callback to remo)72 589.2 Q -.15(ve)-.15
G 2.5(,a).15 G(nd the func and ar)-2.5 E 2.5(gp)-.18 G
(arameters are ignored.)-2.5 E(If handle is NULL,)5 E
(the \214rst callback found to match the speci\214ed func and ar)72
601.2 Q 2.5(gw)-.18 G(ill be remo)-2.5 E -.15(ve)-.15 G 2.5(d. Returns)
.15 F F2 -.74(Tr)3.333 G(ue).74 E F0(if a callback)3.333 E -.1(wa)72
613.2 S 2.5(sr).1 G(emo)-2.5 E -.15(ve)-.15 G(d, else returns).15 E F2
-.25(Fa)3.333 G(lse).25 E F0(.).833 E(Bool XmuLookupCloseDisplayHook\()
72 640.8 Q F1(dpy)A F0(,)A F1(handle)2.5 E F0(,)A F1(func)2.5 E F0(,)A
F1(ar)2.5 E(g)-.37 E F0(\))A(Display *)87 652.8 Q F1(dpy)A F0(;)A
(CloseHook)87 664.8 Q F1(handle)2.5 E F0(;)A(int \(*)87 676.8 Q F1(func)
A F0(\)\(\);)A(caddr_t)87 688.8 Q F1(ar)2.5 E(g)-.37 E F0(;)A F1(dpy)72
708 Q F0(speci\214es the connection to the X serv)57.56 E(er)-.15 E 0 Cg
EP
%%Page: 21 21
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(-21-)279.67 48 Q/F1 10/Times-Italic@0 SF(handle)
72 84 Q F0(speci\214es the callback by id, or NULL)44.78 E F1(func)72
99.6 Q F0(speci\214es the callback by function)54.78 E F1(ar)72 115.2 Q
(g)-.37 E F0(speci\214es the function data to match)58.48 E
(This function determines if a callback is installed.)72 130.8 Q
(If handle is not NULL, it speci\214es the callback to look)5 E(for)72
142.8 Q 2.5(,a)-.4 G(nd the func and ar)-2.5 E 2.5(gp)-.18 G
(arameters are ignored.)-2.5 E
(If handle is NULL, the function will look for an)5 E 2.5(yc)-.15 G
(allback)-2.5 E(for the speci\214ed func and ar)72 154.8 Q 2.5
(g. Returns)-.18 F/F2 10/Times-Bold@0 SF -.74(Tr)3.333 G(ue).74 E F0
(if a matching callback e)3.333 E(xists, else returns)-.15 E F2 -.25(Fa)
3.333 G(lse).25 E F0(.).833 E F2 2.5(13. Display)72 182.4 R
(Queue Functions)2.5 E F0 1.6 -.8(To u)72 198 T(se the functions and ty\
pes de\214ned in this section, you should include the header \214le <).8
E F2(X11/Xmu/Dis-).833 E(playQue.h)72 210 Q F0 2.5(>. It).833 F
(de\214nes the follo)2.5 E(wing types:)-.25 E
(typedef struct _XmuDisplayQueueEntry {)72 231.6 Q
(struct _XmuDisplayQueueEntry *pre)108 243.6 Q 1.3 -.65(v, *)-.25 H(ne)
.65 E(xt;)-.15 E(Display *display;)108 255.6 Q(CloseHook closehook;)108
267.6 Q(caddr_t data;)108 279.6 Q 2.5(}X)72 291.6 S
(muDisplayQueueEntry;)-2.5 E(typedef struct _XmuDisplayQueue {)72 315.6
Q(int nentries;)108 327.6 Q(XmuDisplayQueueEntry *head, *tail;)108 339.6
Q(int \(*closefunc\)\(\);)108 351.6 Q(int \(*freefunc\)\(\);)108 363.6 Q
(caddr_t data;)108 375.6 Q 2.5(}X)72 387.6 S(muDisplayQueue;)-2.5 E
(XmuDisplayQueue *XmuDQCreate\()72 421.2 Q F1(closefunc)A F0(,)A F1(fr)
2.5 E(eefunc)-.37 E F0(,)A F1(data)2.5 E F0(\))A(int \(*)87 433.2 Q F1
(closefunc)A F0(\)\(\);)A(int \(*)87 445.2 Q F1(fr)A(eefunc)-.37 E F0
(\)\(\);)A(caddr_t)87 457.2 Q F1(data)2.5 E F0(;)A F1(closefunc)72 476.4
Q F0(speci\214es the close function)34.23 E F1(fr)72 492 Q(eefunc)-.37 E
F0(speci\214es the free function)39.6 E F1(data)72 507.6 Q F0
(speci\214es pri)54.22 E -.25(va)-.25 G(te data for the functions).25 E
(This function creates and returns an empty)72 523.2 Q F2
(XmuDisplayQueue)3.333 E F0(\(which is really just a set of displays, b)
3.333 E(ut is)-.2 E(called a queue for historical reasons\).)72 535.2 Q
(The queue is initially empty)5 E 2.5(,b)-.65 G
(ut displays can be added using)-2.7 E F2(XmuAddDisplay)72.833 547.2 Q
F0 5(.T).833 G(he data v)-5 E(alue is simply stored in the queue for us\
e by the closefunc and freefunc call-)-.25 E 2.5(backs. Whene)72 559.2 R
-.15(ve)-.25 G 2.5(rad).15 G(isplay in the queue is closed using)-2.5 E
F2(XCloseDisplay)3.333 E F0 2.5(,t).833 G
(he closefunc \(if non-NULL\) is)-2.5 E
(called with the queue and the display')72 571.2 Q(s)-.55 E F2
(XmuDisplayQueueEntry)3.333 E F0(as follo)3.333 E(ws:)-.25 E
(\(*closefunc\)\(queue, entry\))97 586.8 Q
(The freeproc \(if non-NULL\) is called whene)72 602.4 Q -.15(ve)-.25 G
2.5(rt).15 G(he last display in the queue is closed, as follo)-2.5 E
(ws:)-.25 E(\(*freefunc\)\(queue\))97 618 Q(The application is responsi\
ble for actually freeing the queue, by calling)72 633.6 Q F2(XmuDQDestr)
3.333 E(oy)-.18 E F0(.).833 E(XmuDisplayQueueEntry *XmuDQAddDisplay\()72
661.2 Q F1(q)A F0(,)A F1(dpy)2.5 E F0(,)A F1(data)2.5 E F0(\))A
(XmuDisplayQueue *)87 673.2 Q F1(q)A F0(;)A(Display *)87 685.2 Q F1(dpy)
A F0(;)A(caddr_t)87 697.2 Q F1(data)2.5 E F0(;)A F1(q)72 716.4 Q F0
(speci\214es the queue)67 E 0 Cg EP
%%Page: 22 22
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(-22-)279.67 48 Q/F1 10/Times-Italic@0 SF(dpy)72
84 Q F0(speci\214es the display to add)57.56 E F1(data)72 99.6 Q F0
(speci\214es pri)54.22 E -.25(va)-.25 G(te data for the free function)
.25 E(This function adds the speci\214ed display to the queue.)72 115.2
Q(If successful, the queue entry is returned, otherwise)5 E
(NULL is returned.)72 127.2 Q(The data v)5 E
(alue is simply stored in the queue entry for use by the queue')-.25 E
2.5(sf)-.55 G(reefunc call-)-2.5 E 2.5(back. This)72 139.2 R
(function does not attempt to pre)2.5 E -.15(ve)-.25 G
(nt duplicate entries in the queue; the caller should use).15 E/F2 10
/Times-Bold@0 SF(XmuDQLookupDisplay)72.833 151.2 Q F0
(to determine if a display has already been added to a queue.)3.333 E
(XmuDisplayQueueEntry *XmuDQLookupDisplay\()72 178.8 Q F1(q)A F0(,)A F1
(dpy)2.5 E F0(\))A(XmuDisplayQueue *)87 190.8 Q F1(q)A F0(;)A(Display *)
87 202.8 Q F1(dpy)A F0(;)A F1(q)72 222 Q F0(speci\214es the queue)67 E
F1(dpy)72 237.6 Q F0(speci\214es the display to lookup)57.56 E
(This function returns the queue entry for the speci\214ed display)72
253.2 Q 2.5(,o)-.65 G 2.5(rN)-2.5 G
(ULL if the display is not in the queue.)-2.5 E(XmuDQNDisplays\()72
280.8 Q F1(q)A F0(\))A
(This macro returns the number of displays in the speci\214ed queue.)72
300 Q(Bool XmuDQRemo)72 327.6 Q -.15(ve)-.15 G(Display\().15 E F1(q)A F0
(,)A F1(dpy)2.5 E F0(\))A(XmuDisplayQueue *)87 339.6 Q F1(q)A F0(;)A
(Display *)87 351.6 Q F1(dpy)A F0(;)A F1(q)72 370.8 Q F0
(speci\214es the queue)67 E F1(dpy)72 386.4 Q F0
(speci\214es the display to remo)57.56 E -.15(ve)-.15 G
(This function remo)72 402 Q -.15(ve)-.15 G 2.5(st).15 G
(he speci\214ed display from the speci\214ed queue.)-2.5 E
(No callbacks are performed.)5 E(If the)5 E
(display is not found in the queue,)72 414 Q F2 -.25(Fa)3.333 G(lse).25
E F0(is returned, otherwise)3.333 E F2 -.74(Tr)3.333 G(ue).74 E F0
(is returned.)3.333 E(Bool XmuDQDestro)72 441.6 Q(y\()-.1 E F1(q)A F0(,)
A F1(docallbac)2.5 E(ks)-.2 E F0(\))A(XmuDisplayQueue *)87 453.6 Q F1(q)
A F0(;)A(Bool)87 465.6 Q F1(docallbac)2.5 E(ks)-.2 E F0(;)A F1(q)72
484.8 Q F0(speci\214es the queue to destro)67 E(y)-.1 E F1(docallbac)72
500.4 Q(ks)-.2 E F0
(speci\214es whether close functions should be called)24.43 E(This func\
tion releases all memory associated with the speci\214ed queue.)72 516 Q
(If docallbacks is)5 E F2 -.74(Tr)3.333 G(ue).74 E F0 2.5(,t).833 G
(hen the)-2.5 E(queue')72 528 Q 2.5(sc)-.55 G(losefunc callback \(if no\
n-NULL\) is \214rst called for each display in the queue, e)-2.5 E -.15
(ve)-.25 G 2.5(nt).15 G(hough)-2.5 E F2(XCloseDisplay)72.833 540 Q F0
(is not called on the display)3.333 E(.)-.65 E F2 2.5(14. T)72 567.6 R
(oolkit Con)-.92 E -.1(ve)-.4 G(nience Functions).1 E F0 1.6 -.8(To u)72
583.2 T(se the functions de\214ned in this section, you should include \
the header \214le <).8 E F2(X11/Xmu/Initer).833 E(.h)-1 E F0(>.).833 E
-.2(vo)72 610.8 S(id XmuAddInitializer\().2 E F1(func)A F0(,)A F1(data)
2.5 E F0(\))A -.2(vo)87 622.8 S(id \(*).2 E F1(func)A F0(\)\(\);)A
(caddr_t)87 634.8 Q F1(data)2.5 E F0(;)A F1(func)72 654 Q F0
(speci\214es the procedure to re)54.78 E(gister)-.15 E F1(data)72 669.6
Q F0(speci\214es pri)54.22 E -.25(va)-.25 G(te data for the procedure)
.25 E(This function re)72 685.2 Q(gisters a procedure, to be in)-.15 E
-.2(vo)-.4 G -.1(ke).2 G 2.5(dt).1 G(he \214rst time)-2.5 E F2
(XmuCallInitializers)3.333 E F0(is called on a gi)3.333 E -.15(ve)-.25 G
(n).15 E(application conte)72 697.2 Q 2.5(xt. The)-.15 F
(procedure is called with the application conte)2.5 E
(xt and the speci\214ed data:)-.15 E(\(*func\)\(app_con, data\))97 712.8
Q 0 Cg EP
%%Page: 23 23
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(-23-)279.67 48 Q -.2(vo)72 84 S
(id XmuCallInitializers\().2 E/F1 10/Times-Italic@0 SF(app_con)A F0(\))A
(XtAppConte)87 96 Q(xt)-.15 E F1(app_con)2.5 E F0(;)A F1(app_con)72
115.2 Q F0(speci\214es the application conte)37.56 E(xt to initialize)
-.15 E(This function calls each of the procedures that ha)72 130.8 Q .3
-.15(ve b)-.2 H(een re).15 E(gistered with)-.15 E/F2 10/Times-Bold@0 SF
(XmuAddInitializer)3.333 E F0 2.5(,i).833 G 2.5(ft)-2.5 G(his is the)
-2.5 E(\214rst time the application conte)72 142.8 Q
(xt has been passed to)-.15 E F2(XmuCallInitializers)3.333 E F0 5(.O)
.833 G(therwise, this function does)-5 E(nothing.)72 154.8 Q F2 2.5
(15. Standard)72 182.4 R(Colormap Functions)2.5 E F0 1.6 -.8(To u)72 198
T(se the functions de\214ned in this section, you should include the he\
ader \214le <).8 E F2(X11/Xmu/StdCmap.h).833 E F0(>.).833 E
(Status XmuAllStandardColormaps\()72 225.6 Q F1(dpy)A F0(\))A(Display *)
87 237.6 Q F1(dpy)A F0(;)A F1(dpy)72 256.8 Q F0
(speci\214es the connection to the X serv)57.56 E(er)-.15 E 1.6 -.8
(To c)72 272.4 T(reate all of the appropriate standard colormaps for e)
.8 E -.15(ve)-.25 G(ry visual of e).15 E -.15(ve)-.25 G
(ry screen on a gi).15 E -.15(ve)-.25 G 2.5(nd).15 G(isplay)-2.5 E 2.5
(,u)-.65 G(se)-2.5 E F2(XmuAllStandardColormaps)72.833 284.4 Q F0(.).833
E(This function de\214nes and retains as permanent resources all standa\
rd colormaps which are meaningful for)72 300 Q
(the visuals of each screen of the display)72 312 Q 5(.I)-.65 G 2.5(tr)
-5 G(eturns 0 on f)-2.5 E(ailure, non-zero on success.)-.1 E
(If the property of an)5 E(y)-.15 E(standard colormap is already de\214\
ned, this function will rede\214ne it.)72 324 Q
(This function is intended to be used by windo)72 339.6 Q 2.5(wm)-.25 G
(anagers or a special client at the start of a session.)-2.5 E(The stan\
dard colormaps of a screen are de\214ned by properties associated with \
the screen')72 355.2 Q 2.5(sr)-.55 G(oot windo)-2.5 E -.65(w.)-.25 G(Th\
e property names of standard colormaps are prede\214ned, and each prope\
rty name e)72 367.2 Q(xcept)-.15 E(RGB_DEF)72 379.2 Q -.55(AU)-.74 G
-.92(LT).55 G(_MAP may describe at most one colormap.).92 E
(The standard colormaps are: RGB_BEST_MAP)72 394.8 Q 2.5(,R)-1.11 G
(GB_RED_MAP)-2.5 E 2.5(,R)-1.11 G(GB_GREEN_MAP)-2.5 E(,)-1.11 E
(RGB_BLUE_MAP)72 406.8 Q 2.5(,R)-1.11 G(GB_DEF)-2.5 E -.55(AU)-.74 G
-.92(LT).55 G(_MAP).92 E 2.5(,a)-1.11 G(nd RGB_GRA)-2.5 E(Y_MAP)-1.05 E
5(.T)-1.11 G(herefore a screen may ha)-5 E .3 -.15(ve a)-.2 H 2.5(tm).15
G(ost)-2.5 E 2.5(6s)72 418.8 S(tandard colormap properties de\214ned.)
-2.5 E 2.5(As)72 434.4 S
(tandard colormap is associated with a particular visual of the screen.)
-2.5 E 2.5(As)5 G(creen may ha)-2.5 E .3 -.15(ve m)-.2 H(ultiple visu-)
.15 E(als de\214ned, including visuals of the same class at dif)72 446.4
Q(ferent depths.)-.25 E(Note that a visual id might be repeated)5 E(for\
 more than one depth, so the visual id and the depth of a visual identi\
fy the visual.)72 458.4 Q(The characteristics of)5 E(the visual will de\
termine which standard colormaps are meaningful under that visual, and \
will determine)72 470.4 Q(ho)72 482.4 Q 2.5(wt)-.25 G
(he standard colormap is de\214ned.)-2.5 E
(Because a standard colormap is associated with a speci\214c visual,)5 E
(there must be a method of determining which visuals tak)72 494.4 Q 2.5
(ep)-.1 G(recedence in de\214ning standard colormaps.)-2.5 E(The method\
 used here is: for the visual of greatest depth, de\214ne all standard \
colormaps meaningful to that)72 510 Q
(visual class, according to this order of \(descending\) precedence:)72
522 Q F2(Dir)3.333 E(ectColor)-.18 E F0(;).833 E F2(PseudoColor)3.333 E
F0(;).833 E F2 -.74(Tr)3.333 G(ueColor).74 E F0(and)72 534 Q F2
(GrayScale)3.333 E F0 2.5(;a).833 G(nd \214nally)-2.5 E F2(StaticColor)
3.333 E F0(and)3.333 E F2(StaticGray)3.333 E F0(.).833 E
(This function allo)72 549.6 Q(ws success, on a per screen basis.)-.25 E
-.15(Fo)5 G 2.5(re).15 G(xample, if a map on screen 1 f)-2.65 E
(ails, the maps on)-.1 E(screen 0, created earlier)72 561.6 Q 2.5(,w)-.4
G(ill remain.)-2.5 E(Ho)5 E(we)-.25 E -.15(ve)-.25 G .8 -.4(r, n).15 H
(one on screen 1 will remain.).4 E(If a map on screen 0 f)5 E(ails,)-.1
E(none will remain.)72 573.6 Q(See)72 589.2 Q F2(XmuV)3.333 E
(isualStandardColormaps)-.37 E F0
(for which standard colormaps are meaningful under these classes of)
3.333 E(visuals.)72 601.2 Q(Status XmuV)72 628.8 Q
(isualStandardColormaps\()-.6 E F1(dpy)A F0(,)A F1(scr)2.5 E(een)-.37 E
F0(,)A F1(visualid)2.5 E F0(,)A F1(depth)2.5 E F0(,)A F1 -.37(re)2.5 G
(place).37 E F0(,)A F1 -.37(re)2.5 G(tain).37 E F0(\))A(Display *)87
640.8 Q F1(dpy)A F0(;)A(int)87 652.8 Q F1(scr)2.5 E(een)-.37 E F0(;)A
-.6(Vi)87 664.8 S(sualID).6 E F1(visualid)2.5 E F0(;)A(unsigned int)87
676.8 Q F1(depth)2.5 E F0(;)A(Bool)87 688.8 Q F1 -.37(re)2.5 G(place).37
E F0(;)A(Bool)87 700.8 Q F1 -.37(re)2.5 G(tain).37 E F0(;)A 0 Cg EP
%%Page: 24 24
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(-24-)279.67 48 Q/F1 10/Times-Italic@0 SF(dpy)72
84 Q F0(speci\214es the connection to the X serv)57.56 E(er)-.15 E F1
(scr)72 99.6 Q(een)-.37 E F0(speci\214es the screen of the display)46.27
E F1(visualid)72 115.2 Q F0(speci\214es the visual type)40.33 E F1
(depth)72 130.8 Q F0(speci\214es the visual depth)49.78 E F1 -.37(re)72
146.4 S(place).37 E F0(speci\214es whether or not to replace)42.38 E F1
-.37(re)72 162 S(tain).37 E F0(speci\214es whether or not to retain)
48.48 E 1.6 -.8(To c)72 177.6 T
(reate all of the appropriate standard colormaps for a gi).8 E -.15(ve)
-.25 G 2.5(nv).15 G(isual on a gi)-2.5 E -.15(ve)-.25 G 2.5(ns).15 G
(creen, use)-2.5 E/F2 10/Times-Bold@0 SF(XmuV)3.333 E(isual-)-.37 E
(StandardColormaps)72 189.6 Q F0(.).833 E(This function de\214nes all a\
ppropriate standard colormap properties for the gi)72 205.2 Q -.15(ve)
-.25 G 2.5(nv).15 G 2.5(isual. If)-2.5 F(replace is)2.5 E F2 -.74(Tr)
3.333 G(ue).74 E F0(,).833 E(an)72 217.2 Q 2.5(yp)-.15 G(re)-2.5 E
(vious de\214nition will be remo)-.25 E -.15(ve)-.15 G 2.5(d. If).15 F
(retain is)2.5 E F2 -.74(Tr)3.333 G(ue).74 E F0 2.5(,n).833 G .5 -.25
(ew p)-2.5 H(roperties will be retained for the duration).25 E
(of the serv)72 229.2 Q(er session.)-.15 E(This function returns 0 on f)
5 E(ailure, non-zero on success.)-.1 E(On f)5 E(ailure, no ne)-.1 E 2.5
(wp)-.25 G(roperties)-2.5 E(will be de\214ned, b)72 241.2 Q
(ut old ones may ha)-.2 E .3 -.15(ve b)-.2 H(een remo).15 E -.15(ve)-.15
G 2.5(di).15 G 2.5(fr)-2.5 G(eplace w)-2.5 E(as T)-.1 E(rue.)-.35 E
(Not all standard colormaps are meaningful to all visual classes.)72
256.8 Q(This routine will check and de\214ne the fol-)5 E(lo)72 268.8 Q
(wing properties for the follo)-.25 E(wing classes, pro)-.25 E
(vided that the size of the colormap is not too small.)-.15 E -.15(Fo)5
G(r).15 E F2(Dir)72.833 280.8 Q(ectColor)-.18 E F0(and)3.333 E F2
(PseudoColor)3.333 E F0 2.5(:R).833 G(GB_DEF)-2.5 E -.55(AU)-.74 G -.92
(LT).55 G(_MAP).92 E 2.5(,R)-1.11 G(GB_BEST_MAP)-2.5 E 2.5(,R)-1.11 G
(GB_RED_MAP)-2.5 E(,)-1.11 E(RGB_GREEN_MAP)72 292.8 Q 2.5(,R)-1.11 G
(GB_BLUE_MAP)-2.5 E 2.5(,a)-1.11 G(nd RGB_GRA)-2.5 E(Y_MAP)-1.05 E 5(.F)
-1.11 G(or)-5.15 E F2 -.74(Tr)3.333 G(ueColor).74 E F0(and)3.333 E F2
(StaticColor)3.333 E F0(:).833 E(RGB_BEST_MAP)72 304.8 Q 5(.F)-1.11 G
(or)-5.15 E F2(GrayScale)3.333 E F0(and)3.333 E F2(StaticGray)3.333 E F0
2.5(:R).833 G(GB_GRA)-2.5 E(Y_MAP)-1.05 E(.)-1.11 E
(Status XmuLookupStandardColormap\()72 332.4 Q F1(dpy)A F0(,)A F1(scr)
2.5 E(een)-.37 E F0(,)A F1(visualid)2.5 E F0(,)A F1(depth)2.5 E F0(,)A
F1(pr)2.5 E(operty)-.45 E F0(,)A F1 -.37(re)2.5 G(place).37 E F0(,)A F1
-.37(re)2.5 G(tain).37 E F0(\))A(Display *)87 344.4 Q F1(dpy)A F0(;)A
(int)87 356.4 Q F1(scr)2.5 E(een)-.37 E F0(;)A -.6(Vi)87 368.4 S(sualID)
.6 E F1(visualid)2.5 E F0(;)A(unsigned int)87 380.4 Q F1(depth)2.5 E F0
(;)A(Atom)87 392.4 Q F1(pr)2.5 E(operty)-.45 E F0(;)A(Bool)87 404.4 Q F1
-.37(re)2.5 G(place).37 E F0(;)A(Bool)87 416.4 Q F1 -.37(re)2.5 G(tain)
.37 E F0(;)A F1(dpy)72 435.6 Q F0
(speci\214es the connection to the X serv)57.56 E(er)-.15 E F1(scr)72
451.2 Q(een)-.37 E F0(speci\214es the screen of the display)46.27 E F1
(visualid)72 466.8 Q F0(speci\214es the visual type)40.33 E F1(depth)72
482.4 Q F0(speci\214es the visual depth)49.78 E F1(pr)72 498 Q(operty)
-.45 E F0(speci\214es the standard colormap property)38.01 E F1 -.37(re)
72 513.6 S(place).37 E F0(speci\214es whether or not to replace)42.38 E
F1 -.37(re)72 529.2 S(tain).37 E F0
(speci\214es whether or not to retain)48.48 E 1.6 -.8(To c)72 544.8 T
(reate a standard colormap if one does not currently e).8 E
(xist, or replace the currently e)-.15 E(xisting standard col-)-.15 E
(ormap, use)72 556.8 Q F2(XmuLookupStandardColormap)3.333 E F0(.).833 E
(Gi)72 572.4 Q -.15(ve)-.25 G 2.5(nas).15 G
(creen, a visual, and a property)-2.5 E 2.5(,t)-.65 G
(his function will determine the best allocation for the property)-2.5 E
(under the speci\214ed visual, and determine the whether to create a ne)
72 584.4 Q 2.5(wc)-.25 G(olormap or to use the def)-2.5 E(ault col-)-.1
E(ormap of the screen.)72 596.4 Q(If replace is T)72 612 Q(rue, an)-.35
E 2.5(yp)-.15 G(re)-2.5 E
(vious de\214nition of the property will be replaced.)-.25 E
(If retain is T)5 E(rue, the property)-.35 E
(and the colormap will be made permanent for the duration of the serv)72
624 Q(er session.)-.15 E(Ho)5 E(we)-.25 E -.15(ve)-.25 G .8 -.4(r, p).15
H(re-e).4 E(xisting)-.15 E(property de\214nitions which are not replace\
d cannot be made permanent by a call to this function; a request)72 636
Q(to retain resources pertains to ne)72 648 Q(wly created resources.)
-.25 E(This function returns 0 on f)72 663.6 Q
(ailure, non-zero on success.)-.1 E 2.5(Ar)5 G
(equest to create a standard colormap upon a)-2.5 E
(visual which cannot support such a map is considered a f)72 675.6 Q 2.5
(ailure. An)-.1 F -.15(ex)2.5 G(ample of this w).15 E
(ould be requesting)-.1 E(an)72 687.6 Q 2.5(ys)-.15 G
(tandard colormap property on a monochrome visual, or)-2.5 E 2.5(,r)-.4
G(equesting an RGB_BEST_MAP on a display)-2.5 E
(whose colormap size is 16.)72 699.6 Q 0 Cg EP
%%Page: 25 25
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(-25-)279.67 48 Q
(Status XmuGetColormapAllocation\()72 84 Q/F1 10/Times-Italic@0 SF
(vinfo)A F0(,)A F1(pr)2.5 E(operty)-.45 E F0(,)A F1 -.37(re)2.5 G(d_max)
.37 E F0(,)A F1(gr)2.5 E(een_max)-.37 E F0(,)A F1(blue_max)2.5 E F0(\))A
(XV)87 96 Q(isualInfo *)-.6 E F1(vinfo)A F0(;)A(Atom)87 108 Q F1(pr)2.5
E(operty)-.45 E F0(;)A(unsigned long *)87 120 Q F1 -.37(re)C(d_max).37 E
F0 2.5(,*)C F1(gr)-2.5 E(een_max)-.37 E F0 2.5(,*)C F1(blue_max)-2.5 E
F0(;)A F1(vinfo)72 139.2 Q F0
(speci\214es visual information for a chosen visual)52 E F1(pr)72 154.8
Q(operty)-.45 E F0
(speci\214es one of the standard colormap property names)38.01 E F1 -.37
(re)72 170.4 S(d_max).37 E F0(returns maximum red v)37.38 E(alue)-.25 E
F1(gr)72 186 Q(een_max)-.37 E F0(returns maximum green v)27.94 E(alue)
-.25 E F1(blue_max)72 201.6 Q F0(returns maximum blue v)33.12 E(alue)
-.25 E 1.6 -.8(To d)72 217.2 T(etermine the best allocation of reds, gr\
eens, and blues in a standard colormap, use).8 E/F2 10/Times-Bold@0 SF
(XmuGetColorma-)3.333 E(pAllocation)72 229.2 Q F0(.).833 E F2
(XmuGetColormapAllocation)72.833 244.8 Q F0(returns 0 on f)3.333 E
(ailure, non-zero on success.)-.1 E(It is assumed that the visual is)5 E
(appropriate for the colormap property)72 256.8 Q(.)-.65 E
(XStandardColormap *XmuStandardColormap\()72 284.4 Q F1(dpy)A F0(,)A F1
(scr)2.5 E(een)-.37 E F0(,)A F1(visualid)2.5 E F0(,)A F1(depth)2.5 E F0
(,)A F1(pr)2.5 E(operty)-.45 E F0(,)A F1(cmap)169.5 296.4 Q F0(,)A F1
-.37(re)2.5 G(d_max).37 E F0(,)A F1(gr)2.5 E(een_max)-.37 E F0(,)A F1
(blue_max)2.5 E F0(\))A(Display)87 308.4 Q F1(dpy)2.5 E F0(;)A(int)87
320.4 Q F1(scr)2.5 E(een)-.37 E F0(;)A -.6(Vi)87 332.4 S(sualID).6 E F1
(visualid)2.5 E F0(;)A(unsigned int)87 344.4 Q F1(depth)2.5 E F0(;)A
(Atom)87 356.4 Q F1(pr)2.5 E(operty)-.45 E F0(;)A(Colormap)87 368.4 Q F1
(cmap)2.5 E F0(;)A(unsigned long)87 380.4 Q F1 -.37(re)2.5 G(d_max).37 E
F0(,)A F1(gr)2.5 E(een_max)-.37 E F0(,)A F1(blue_max)2.5 E F0(;)A F1
(dpy)72 399.6 Q F0(speci\214es the connection to the X serv)57.56 E(er)
-.15 E F1(scr)72 415.2 Q(een)-.37 E F0
(speci\214es the screen of the display)46.27 E F1(visualid)72 430.8 Q F0
(speci\214es the visual type)40.33 E F1(depth)72 446.4 Q F0
(speci\214es the visual depth)49.78 E F1(pr)72 462 Q(operty)-.45 E F0
(speci\214es the standard colormap property)38.01 E F1(cmap)72 477.6 Q
F0(speci\214es the colormap ID, or None)50.34 E F1 -.37(re)72 493.2 S
(d_max).37 E F0(speci\214es the red allocation)37.38 E F1(gr)72 508.8 Q
(een_max)-.37 E F0(speci\214es the green allocation)27.94 E F1(blue_max)
72 524.4 Q F0(speci\214es the blue allocation)33.12 E 1.6 -.8(To c)72
540 T(reate an).8 E 2.5(yo)-.15 G(ne standard colormap, use)-2.5 E F2
(XmuStandardColormap)3.333 E F0(.).833 E
(This function creates a standard colormap for the gi)72 555.6 Q -.15
(ve)-.25 G 2.5(ns).15 G(creen, visualid, and visual depth, with the gi)
-2.5 E -.15(ve)-.25 G(n).15 E(red, green, and blue maximum v)72 567.6 Q
(alues, with the gi)-.25 E -.15(ve)-.25 G 2.5(ns).15 G
(tandard property name.)-2.5 E(Upon success, it returns a)5 E
(pointer to an)72 579.6 Q F2(XStandardColormap)3.333 E F0
(structure which describes the ne)3.333 E(wly created colormap.)-.25 E
(Upon f)5 E(ailure, it)-.1 E(returns NULL.)72 591.6 Q
(If cmap is the def)5 E(ault colormap of the screen, the standard color\
map will be de\214ned on the)-.1 E(def)72 603.6 Q
(ault colormap; otherwise a ne)-.1 E 2.5(wc)-.25 G(olormap is created.)
-2.5 E(Resources created by this function are not made permanent; that \
is the caller')72 619.2 Q 2.5(sr)-.55 G(esponsibility)-2.5 E(.)-.65 E
(Status XmuCreateColormap\()72 646.8 Q F1(dpy)A F0(,)A F1(colormap)2.5 E
F0(\))A(Display *)87 658.8 Q F1(dpy)A F0(;)A(XStandardColormap *)87
670.8 Q F1(colormap)A F0(;)A F1(dpy)72 690 Q F0
(speci\214es the connection under which the map is created)57.56 E F1
(colormap)72 705.6 Q F0(speci\214es the map to be created)33.67 E 0 Cg
EP
%%Page: 26 26
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(-26-)279.67 48 Q 1.6 -.8(To c)72 84 T(reate an)
.8 E 2.5(yo)-.15 G(ne colormap which is described by an)-2.5 E/F1 10
/Times-Bold@0 SF(XStandardColormap)3.333 E F0(structure, use)3.333 E F1
(XmuCr)3.333 E(eate-)-.18 E(Colormap)72 96 Q F0(.).833 E
(This function returns 0 on f)72 111.6 Q
(ailure, and non-zero on success.)-.1 E(The base_pix)5 E
(el of the colormap is set on suc-)-.15 E 2.5(cess. Resources)72 123.6 R
(created by this function are not made permanent.)2.5 E(No ar)5 E
(gument error checking is pro)-.18 E(vided;)-.15 E(use at your o)72
135.6 Q(wn risk.)-.25 E
(All colormaps are created with read-only allocations, with the e)72
151.2 Q(xception of read-only allocations of colors)-.15 E(which f)72
163.2 Q(ail to return the e)-.1 E(xpected pix)-.15 E(el v)-.15 E
(alue, and these are indi)-.25 E
(vidually de\214ned as read/write allocations.)-.25 E(This is done so t\
hat all the cells de\214ned in the colormap are contiguous, for use in \
image processing.)72 175.2 Q(This)5 E
(typically happens with White and Black in the def)72 187.2 Q(ault map.)
-.1 E(Colormaps of static visuals are considered to be successfully cre\
ated if the map of the static visual matches)72 202.8 Q
(the de\214nition gi)72 214.8 Q -.15(ve)-.25 G 2.5(ni).15 G 2.5(nt)-2.5
G(he standard colormap structure.)-2.5 E -.2(vo)72 242.4 S
(id XmuDeleteStandardColormap\().2 E/F2 10/Times-Italic@0 SF(dpy)A F0(,)
A F2(scr)2.5 E(een)-.37 E F0(,)A F2(pr)2.5 E(operty)-.45 E F0(\))A
(Display *)87 254.4 Q F2(dpy)A F0(;)A(int)87 266.4 Q F2(scr)2.5 E(een)
-.37 E F0(;)A(Atom)87 278.4 Q F2(pr)2.5 E(operty)-.45 E F0(;)A F2(dpy)72
297.6 Q F0(speci\214es the connection to the X serv)57.56 E(er)-.15 E F2
(scr)72 313.2 Q(een)-.37 E F0(speci\214es the screen of the display)
46.27 E F2(pr)72 328.8 Q(operty)-.45 E F0
(speci\214es the standard colormap property)38.01 E 1.6 -.8(To r)72
344.4 T(emo).8 E .3 -.15(ve a)-.15 H .3 -.15(ny s).15 H
(tandard colormap property).15 E 2.5(,u)-.65 G(se)-2.5 E F1
(XmuDeleteStandardColormap)3.333 E F0 5(.T).833 G(his function will)-5 E
(remo)72 356.4 Q .3 -.15(ve t)-.15 H
(he speci\214ed property from the speci\214ed screen, releasing an).15 E
2.5(yr)-.15 G(esources used by the colormap\(s\) of)-2.5 E(the property)
72 368.4 Q 2.5(,i)-.65 G 2.5(fp)-2.5 G(ossible.)-2.5 E F1 2.5(16. W)72
396 R(idget Description Functions)-.18 E F0
(The functions de\214ned in this section are for b)72 411.6 Q
(uilding a description of the structure of and resources associ-)-.2 E
(ated with a hierarch)72 423.6 Q 2.5(yo)-.05 G 2.5(fw)-2.5 G
(idget classes.)-2.5 E
(This package is typically used by applications that wish to manipu-)5 E
(late the widget set itself.)72 435.6 Q
(The de\214nitions needed to use these interf)72 451.2 Q
(aces are in the header \214le <)-.1 E F1(X11/Xmu/W).833 E(idgetNode.h)
-.18 E F0 2.5(>. The).833 F(fol-)2.5 E(lo)72 463.2 Q
(wing function must be called before an)-.25 E 2.5(yo)-.15 G 2.5(ft)-2.5
G(he others described belo)-2.5 E(w:)-.25 E -.2(vo)72 490.8 S
(id XmuWnInitializeNodes\().2 E F2(node_arr)A(ay)-.15 E F0(,)A F2
(num_nodes)2.5 E F0(\))A(XmuW)87 502.8 Q(idgetNode *)-.4 E F2(node_arr)A
(ay)-.15 E F0(;)A(int)87 514.8 Q F2(num_nodes)2.5 E F0(;)A F2(node_arr)
72 534 Q(ay)-.15 E F0
(speci\214es a list of widget classes, in alphabetical order)25.49 E F2
(num_nodes)72 549.6 Q F0
(spec\214es the number of widget classes in the node array)26.45 E 1.6
-.8(To d)72 565.2 T(etermine the resources pro).8 E
(vided by a widget class or classes, use)-.15 E -.2(vo)72 592.8 S
(id XmuWnFetchResources\().2 E F2(node)A F0(,)A F2(tople)2.5 E(vel)-.15
E F0(,)A F2(top_node)2.5 E F0(\))A(XmuW)87 604.8 Q(idgetNode *)-.4 E F2
(node)A F0(;)A -.4(Wi)87 616.8 S(dget).4 E F2(tople)2.5 E(vel)-.15 E F0
(;)A(XmuW)87 628.8 Q(idgetNode *)-.4 E F2(top_node)A F0(;)A F2(node)72
648 Q F0
(speci\214es the widget class for which resources should be obtained.)
52.56 E F2(tople)72 663.6 Q(vel)-.15 E F0
(speci\214es the widget that should be used for creating an instance of)
40.49 E F2(node)2.5 E F0(from which)2.5 E(resources are e)144 675.6 Q
2.5(xtracted. This)-.15 F(is typically the v)2.5 E(alue returned by)-.25
E F1(XtA)2.5 E(ppInitialize)-.25 E F0(.)A F2(top_node)72 691.2 Q F0
(speci\214es the ancestor of)34.78 E F2(node)2.5 E F0
(that should be treated as the root of the widget inheritance)2.5 E
(tree \(used in determining which ancestor contrib)144 703.2 Q
(uted which resources\).)-.2 E
(Each widget class inherits the resources of its parent.)72 718.8 Q 1.6
-.8(To c)5 H(ount the number of resources contrib).8 E(uted by a)-.2 E
(particular widget class, use:)72 730.8 Q 0 Cg EP
%%Page: 27 27
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(-27-)279.67 48 Q(int XmuWnCountOwnedResources\()
72 84 Q/F1 10/Times-Italic@0 SF(node)A F0(,)A F1(owner_node)2.5 E F0(,)A
F1(constr)2.5 E(aints)-.15 E F0(\))A(XmuW)87 96 Q(idgetNode *)-.4 E F1
(node)A F0(;)A(XmuW)87 108 Q(idgetNode *)-.4 E F1(owner_node)A F0(;)A
(Bool)87 120 Q F1(constr)2.5 E(aints)-.15 E F0(;)A F1(node)72 139.2 Q F0
(speci\214es the widget class whose resources are being e)52.56 E
(xamined.)-.15 E F1(owner_node)72 154.8 Q F0
(speci\214es the widget class of the ancestor of)22.56 E F1(node)2.5 E
F0(whose contrib)2.5 E(utions are being counted.)-.2 E F1(constr)72
170.4 Q(aints)-.15 E F0(speci\214es whether or not to count constraint \
resources or normal resources.)27.7 E
(This routine returns the number of resources contrib)72 186 Q
(uted \(or `)-.2 E(`o)-.74 E(wned')-.25 E
('\) by the speci\214ed widget class.)-.74 E(XmuW)72 213.6 Q
(idgetNode *XmuWnNameT)-.4 E(oNode\()-.8 E F1(node_list)A F0(,)A F1
(num_nodes)2.5 E F0(,)A F1(name)2.5 E F0(\))A(XmuW)87 225.6 Q
(idgetNode *)-.4 E F1(node_list)A F0(;)A(int)87 237.6 Q F1(num_nodes)2.5
E F0(;)A(char *)87 249.6 Q F1(name)A F0(;)A F1(node_list)72 268.8 Q F0
(speci\214es a list of widget nodes)35.33 E F1(num_nodes)72 284.4 Q F0
(speci\214es the number of nodes in the list)26.45 E F1(name)72 300 Q F0
(speci\214es the name of the widget class in the node list to search fo\
r)50.34 E(This function returns the W)72 315.6 Q
(idgetNode in the list that matches the gi)-.4 E -.15(ve)-.25 G 2.5(nw)
.15 G(idget name or widget class name.)-2.5 E
(If no match is found, it returns NULL.)72 327.6 Q/F2 10/Times-Bold@0 SF
2.5(17. P)72 355.2 R(articipation in the Editr)-.1 E(es Pr)-.18 E
(otocol)-.18 E F0 1.6 -.8(To p)72 370.8 T(articipate in the editres pro\
tocol, applications which are not based on the Athena widget set should)
.8 E(include the header \214le <)72 382.8 Q F2(X11/Xmu/Editr).833 E
(es.h)-.18 E F0(>.).833 E 1.6 -.8(To p)72 398.4 T(articipate in the edi\
tres protocol, Xt applications which do not rely on the Athena widget s\
et should).8 E(re)72 410.4 Q(gister the editres protocol handler on eac\
h shell widget in the application, specifying an e)-.15 E -.15(ve)-.25 G
(nt mask of 0,).15 E(nonmaskable e)72 422.4 Q -.15(ve)-.25 G
(nts, and client data as NULL:).15 E(XtAddEv)72 438 Q
(entHandler\(shell, \(Ev)-.15 E(entMask\) 0, T)-.15 E
(rue, _XEditResCheckMessages, NULL\);)-.35 E 0 Cg EP
%%Trailer
end
%%EOF
