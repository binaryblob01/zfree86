%!PS-Adobe-3.0
%%Creator: groff version 1.19.2
%%CreationDate: Mon Dec 29 01:25:42 2008
%%DocumentNeededResources: font Times-Bold
%%+ font Times-Italic
%%+ font Times-Roman
%%+ font Courier
%%DocumentSuppliedResources: procset grops 1.19 2
%%Pages: 7
%%PageOrder: Ascend
%%DocumentMedia: Default 612 792 0 () ()
%%Orientation: Portrait
%%EndComments
%%BeginDefaults
%%PageMedia: Default
%%EndDefaults
%%BeginProlog
%%BeginResource: procset grops 1.19 2
%!PS-Adobe-3.0 Resource-ProcSet
/setpacking where{
pop
currentpacking
true setpacking
}if
/grops 120 dict dup begin
/SC 32 def
/A/show load def
/B{0 SC 3 -1 roll widthshow}bind def
/C{0 exch ashow}bind def
/D{0 exch 0 SC 5 2 roll awidthshow}bind def
/E{0 rmoveto show}bind def
/F{0 rmoveto 0 SC 3 -1 roll widthshow}bind def
/G{0 rmoveto 0 exch ashow}bind def
/H{0 rmoveto 0 exch 0 SC 5 2 roll awidthshow}bind def
/I{0 exch rmoveto show}bind def
/J{0 exch rmoveto 0 SC 3 -1 roll widthshow}bind def
/K{0 exch rmoveto 0 exch ashow}bind def
/L{0 exch rmoveto 0 exch 0 SC 5 2 roll awidthshow}bind def
/M{rmoveto show}bind def
/N{rmoveto 0 SC 3 -1 roll widthshow}bind def
/O{rmoveto 0 exch ashow}bind def
/P{rmoveto 0 exch 0 SC 5 2 roll awidthshow}bind def
/Q{moveto show}bind def
/R{moveto 0 SC 3 -1 roll widthshow}bind def
/S{moveto 0 exch ashow}bind def
/T{moveto 0 exch 0 SC 5 2 roll awidthshow}bind def
/SF{
findfont exch
[exch dup 0 exch 0 exch neg 0 0]makefont
dup setfont
[exch/setfont cvx]cvx bind def
}bind def
/MF{
findfont
[5 2 roll
0 3 1 roll
neg 0 0]makefont
dup setfont
[exch/setfont cvx]cvx bind def
}bind def
/level0 0 def
/RES 0 def
/PL 0 def
/LS 0 def
/MANUAL{
statusdict begin/manualfeed true store end
}bind def
/PLG{
gsave newpath clippath pathbbox grestore
exch pop add exch pop
}bind def
/BP{
/level0 save def
1 setlinecap
1 setlinejoin
72 RES div dup scale
LS{
90 rotate
}{
0 PL translate
}ifelse
1 -1 scale
}bind def
/EP{
level0 restore
showpage
}def
/DA{
newpath arcn stroke
}bind def
/SN{
transform
.25 sub exch .25 sub exch
round .25 add exch round .25 add exch
itransform
}bind def
/DL{
SN
moveto
SN
lineto stroke
}bind def
/DC{
newpath 0 360 arc closepath
}bind def
/TM matrix def
/DE{
TM currentmatrix pop
translate scale newpath 0 0 .5 0 360 arc closepath
TM setmatrix
}bind def
/RC/rcurveto load def
/RL/rlineto load def
/ST/stroke load def
/MT/moveto load def
/CL/closepath load def
/Fr{
setrgbcolor fill
}bind def
/setcmykcolor where{
pop
/Fk{
setcmykcolor fill
}bind def
}if
/Fg{
setgray fill
}bind def
/FL/fill load def
/LW/setlinewidth load def
/Cr/setrgbcolor load def
/setcmykcolor where{
pop
/Ck/setcmykcolor load def
}if
/Cg/setgray load def
/RE{
findfont
dup maxlength 1 index/FontName known not{1 add}if dict begin
{
1 index/FID ne{def}{pop pop}ifelse
}forall
/Encoding exch def
dup/FontName exch def
currentdict end definefont pop
}bind def
/DEFS 0 def
/EBEGIN{
moveto
DEFS begin
}bind def
/EEND/end load def
/CNT 0 def
/level1 0 def
/PBEGIN{
/level1 save def
translate
div 3 1 roll div exch scale
neg exch neg exch translate
0 setgray
0 setlinecap
1 setlinewidth
0 setlinejoin
10 setmiterlimit
[]0 setdash
/setstrokeadjust where{
pop
false setstrokeadjust
}if
/setoverprint where{
pop
false setoverprint
}if
newpath
/CNT countdictstack def
userdict begin
/showpage{}def
/setpagedevice{}def
}bind def
/PEND{
countdictstack CNT sub{end}repeat
level1 restore
}bind def
end def
/setpacking where{
pop
setpacking
}if
%%EndResource
%%EndProlog
%%BeginSetup
%%BeginFeature: *PageSize Default
<< /PageSize [ 612 792 ] /ImagingBBox null >> setpagedevice
%%EndFeature
%%IncludeResource: font Times-Bold
%%IncludeResource: font Times-Italic
%%IncludeResource: font Times-Roman
%%IncludeResource: font Courier
grops begin/DEFS 1 dict def DEFS begin/u{.001 mul}bind def end/RES 72
def/PL 792 def/LS false def/ENC0[/asciicircum/asciitilde/Scaron/Zcaron
/scaron/zcaron/Ydieresis/trademark/quotesingle/Euro/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/space/exclam/quotedbl/numbersign/dollar/percent
/ampersand/quoteright/parenleft/parenright/asterisk/plus/comma/hyphen
/period/slash/zero/one/two/three/four/five/six/seven/eight/nine/colon
/semicolon/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J/K/L/M/N/O
/P/Q/R/S/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright/circumflex
/underscore/quoteleft/a/b/c/d/e/f/g/h/i/j/k/l/m/n/o/p/q/r/s/t/u/v/w/x/y
/z/braceleft/bar/braceright/tilde/.notdef/quotesinglbase/guillemotleft
/guillemotright/bullet/florin/fraction/perthousand/dagger/daggerdbl
/endash/emdash/ff/fi/fl/ffi/ffl/dotlessi/dotlessj/grave/hungarumlaut
/dotaccent/breve/caron/ring/ogonek/quotedblleft/quotedblright/oe/lslash
/quotedblbase/OE/Lslash/.notdef/exclamdown/cent/sterling/currency/yen
/brokenbar/section/dieresis/copyright/ordfeminine/guilsinglleft
/logicalnot/minus/registered/macron/degree/plusminus/twosuperior
/threesuperior/acute/mu/paragraph/periodcentered/cedilla/onesuperior
/ordmasculine/guilsinglright/onequarter/onehalf/threequarters
/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE
/Ccedilla/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex
/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis
/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn
/germandbls/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash
/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]def
/Courier@0 ENC0/Courier RE/Times-Roman@0 ENC0/Times-Roman RE
/Times-Italic@0 ENC0/Times-Italic RE/Times-Bold@0 ENC0/Times-Bold RE
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
BP
%%EndPageSetup
/F0 14/Times-Bold@0 SF(The X F)228.479 131 Q(ont Library)-.35 E/F1 12
/Times-Italic@0 SF -.42(Ke)254.202 173 S(ith P).42 E(ac)-.96 E(kar)-.24
E(d)-.444 E/F2 12/Times-Roman@0 SF(MIT X Consortium)241.332 194 Q F1
(David Lemk)256.236 222 Q(e)-.12 E F2(Netw)217.884 243 Q
(ork Computing De)-.12 E(vices)-.3 E
(This document describes the data structures and interf)72 275.2 Q
(aces for using the X F)-.12 E(ont library)-.18 E 6(.I)-.78 G(t)-6 E
(is intended as a reference for programmers b)72 289.2 Q
(uilding X and F)-.24 E(ont serv)-.18 E 3(ers. Y)-.18 F(ou may w)-1.32 E
(ant)-.12 E(to refer to the follo)72 303.2 Q(wing documents:)-.3 E 25.8
<8322>72 321.4 S
(De\214nition of the Porting Layer for the X v11 Sample Serv)-25.8 E
(er" for a discussion on)-.18 E(ho)102 335.4 Q 3(wt)-.3 G
(his library interacts with the X serv)-3 E(er)-.18 E 25.8<8322>72 353.6
S -.18(Fo)-25.8 G(nt Serv).18 E(er Implementation Ov)-.18 E(ervie)-.18 E
(w" which discusses the design of the font)-.3 E(serv)102 367.6 Q(er)
-.18 E(.)-.66 E 25.8<8322>72 385.8 S(Bitmap Distrib)-25.8 E(ution F)-.24
E(ormat" which co)-.18 E -.18(ve)-.18 G
(rs the contents of the bitmap font \214les).18 E(which this library re\
ads; although the library is capable of reading other formats as)102
399.8 Q(well, including non-bitmap fonts.)102 413.8 Q 25.8<8322>72 432 S
(The X F)-25.8 E(ont Service Protocol" for a description of the constra\
ints placed on the)-.18 E
(design by including support for this font service mechanism.)102 446 Q
(This document assumes the reader is f)72 464.2 Q
(amiliar with the X serv)-.12 E(er design, the X protocol as)-.18 E
(it relates to fonts and the C programming language.)72 478.2 Q
(As with most MIT produced docu-)6 E(mentation, this relies hea)72 492.2
Q(vily on the source code, so ha)-.24 E .36 -.18(ve a l)-.24 H
(isting handy).18 E(.)-.78 E/F3 12/Times-Bold@0 SF 3(1. Requir)72 520.2
R(ements f)-.216 E(or the F)-.3 E(ont library)-.3 E F2 1.92 -.96(To a)72
538.4 T -.24(vo).72 G(id miles of duplicate code in the X serv).24 E(er)
-.18 E 3(,t)-.48 G(he font serv)-3 E(er and the v)-.18 E(arious font)-.3
E(manipulation tools, the font library should pro)72 552.4 Q
(vide interf)-.18 E(aces appropriate for all of these)-.12 E 3
(tasks. In)72 566.4 R(particular)3 E 3(,t)-.48 G(he X serv)-3 E
(er and font serv)-.18 E(er should be able to both use the library to)
-.18 E(access disk based fonts, and to communicate with a font serv)72
580.4 Q(er)-.18 E 6(.B)-.66 G 3(yp)-6 G(ro)-3 E(viding a general)-.18 E
(library)72 594.4 Q 3(,w)-.78 G 3(eh)-3 G(oped to a)-3 E -.24(vo)-.24 G
(id duplicating code between the X serv).24 E(er and font serv)-.18 E
(er)-.18 E(.)-.66 E(Another requirement is that the X serv)72 612.6 Q
(er \(or e)-.18 E -.18(ve)-.3 G 3(naf).18 G(ont serv)-3 E
(er\) be able to continue ser)-.18 E(-)-.24 E
(vicing requests from other clients while a)72 626.6 Q -.12(wa)-.18 G
(iting a response from the font serv).12 E(er on)-.18 E
(behalf of one client.)72 640.6 Q
(This is the strongest requirement placed on the font library)6 E 3(,a)
-.78 G(nd has)-3 E -.12(wa)72 654.6 S(rped the design in curious w).12 E
3(ays. Because)-.12 F(both the X serv)3 E(er and font serv)-.18 E
(er are single)-.18 E
(threaded, the font library must not suspend internally)72 668.6 Q 3(,r)
-.78 G(ather it returns an indication of)-3 E(suspension to the applica\
tion which continues processing other things, until the font data)72
682.6 Q(is ready)72 696.6 Q 3(,a)-.78 G 3(tw)-3 G
(hich time it restarts the suspended request.)-3 E(Because the code for\
 reading and manipulating bitmap font data is used by the font appli-)72
714.8 Q(cations "mkfontdir" and "bdftopcf", the font library includes b\
itmap-font speci\214c)72 728.8 Q -.18(Fo)72 770 S(nt Library Interf).18
E 96.672(ace -)-.12 F 132 3(1- J)3 H(uly 27, 1991)-3 E 0 Cg EP
%%Page: 2 2
%%BeginPageSetup
BP
%%EndPageSetup
/F0 12/Times-Roman@0 SF(interf)72 86 Q
(aces which those applications use, instead of the more general interf)
-.12 E(aces used by the)-.12 E 3(Xa)72 100 S(nd font serv)-3 E
(ers, which are una)-.18 E -.12(wa)-.18 G
(re of the source of the font data.).12 E(These routines will)6 E
(be refered to as the bitmap font access methods.)72 114 Q/F1 12
/Times-Bold@0 SF 3(2. General)72 142 R -.3(Fo)3 G
(nt Library Interface details.).3 E F0 1.92 -.96(To a)72 160.2 T -.24
(vo).72 G
(id collision between the #de\214ne name space for errors, the F).24 E
(ont library de\214nes a)-.18 E(ne)72 174.2 Q 3(ws)-.3 G(et of return v)
-3 E(alues:)-.3 E/F2 12/Courier@0 SF(#define AllocError)102 192.4 Q(80)
43.2 E(#define StillWorking)102 206.4 Q(81)28.8 E(#define FontNameAlias)
102 220.4 Q(82)21.6 E(#define BadFontName)102 234.4 Q(83)36 E
(#define Suspended)102 248.4 Q(84)50.4 E(#define Successful)102 262.4 Q
(85)43.2 E(#define BadFontPath)102 276.4 Q(86)36 E(#define BadCharRange)
102 290.4 Q(87)28.8 E(#define BadFontFormat)102 304.4 Q(88)21.6 E
(#define FPEResetFailed)102 318.4 Q(89)14.4 E F0(Whene)72 336.6 Q -.18
(ve)-.3 G 3(rar).18 G(outine returns)-3 E F1(Suspended)3 E F0 3(,t)C
(he font library will notify the caller \(via the)-3 E
(ClientSignal interf)72 350.6 Q(ace described belo)-.12 E
(w\) who should then rein)-.3 E -.24(vo)-.48 G .24 -.12(ke t).24 H
(he same routine ag).12 E(ain)-.06 E(with the same ar)72 364.6 Q
(guments.)-.216 E F1 3(3. F)72 392.6 R(ont P)-.3 E(ath Elements)-.12 E
F0(At the center of the general font access methods used by X and fs is\
 the F)72 410.8 Q(ont P)-.18 E(ath Ele-)-.18 E(ment data structure.)72
424.8 Q(Lik)6 E 3(em)-.12 G(ost structures in the X serv)-3 E(er)-.18 E
3(,t)-.48 G(his contains a collection of)-3 E
(data and some function pointers for manipulating this data:)72 438.8 Q
F2(/* External view of font paths */)102 457 Q
(typedef struct _FontPathElement {)102 471 Q 57.6(int name_length;)130.8
485 R 43.2(char *name;)130.8 499 R 57.6(int type;)130.8 513 R 57.6
(int refcount;)130.8 527 R 28.8(pointer private;)130.8 541 R 7.2(}F)102
555 S(ontPathElementRec, *FontPathElementPtr;)-7.2 E
(typedef struct _FPEFunctions {)102 583 Q 57.6(int \(*name_check\))130.8
597 R 7.2(\(/)7.2 G 7.2(*n)-7.2 G(ame */ \);)-7.2 E 57.6
(int \(*init_fpe\))130.8 611 R 7.2(\(/)7.2 G 7.2(*f)-7.2 G(pe */ \);)
-7.2 E 57.6(int \(*reset_fpe\))130.8 625 R 7.2(\(/)7.2 G 7.2(*f)-7.2 G
(pe */ \);)-7.2 E 57.6(int \(*free_fpe\))130.8 639 R 7.2(\(/)7.2 G 7.2
(*f)-7.2 G(pe */ \);)-7.2 E 57.6(int \(*open_font\))130.8 653 R 14.4
(\(/)7.2 G 7.2(*c)-14.4 G(lient, fpe, flags,)-7.2 E
(name, namelen, format,)274.8 667 Q 7.2(fid, ppfont,)274.8 681 R
(alias */ \);)7.2 E 57.6(int \(*close_font\))130.8 695 R 7.2(\(/)7.2 G
7.2(*p)-7.2 G(font */ \);)-7.2 E 57.6(int \(*list_fonts\))130.8 709 R
7.2(\(/)7.2 G 7.2(*c)-7.2 G(lient, fpe, pattern,)-7.2 E
(patlen, maxnames, paths */ \);)274.8 723 Q F0 -.18(Fo)72 770 S
(nt Library Interf).18 E 96.672(ace -)-.12 F 132 3(2- J)3 H
(uly 27, 1991)-3 E 0 Cg EP
%%Page: 3 3
%%BeginPageSetup
BP
%%EndPageSetup
/F0 12/Courier@0 SF 57.6(int \(*start_list_fonts_with_info\))130.8 86 R
(\()7.2 E(/* client, fpe, name, namelen,)274.8 100 Q
(maxnames, data */ \);)296.4 114 Q 57.6
(int \(*list_next_font_with_info\))130.8 128 R(\()7.2 E
(/* client, fpe, name, namelen,)274.8 142 Q(info, num, data */ \);)296.4
156 Q 57.6(int \(*wakeup_fpe\))130.8 170 R 7.2(\(/)7.2 G 7.2(*f)-7.2 G
(pe, mask */ \);)-7.2 E 57.6(int \(*client_died\))130.8 184 R 7.2(\(/)
7.2 G 7.2(*c)-7.2 G(lient, fpe */ \);)-7.2 E 7.2(}F)102 198 S
(PEFunctionsRec, FPEFunctions;)-7.2 E/F1 12/Times-Roman@0 SF
(The function pointers are split out from the data structure to sa)72
216.2 Q .36 -.18(ve m)-.24 H(emory; additionally).18 E(,)-.78 E(this a)
72 230.2 Q -.24(vo)-.24 G(ids an).24 E 3(yc)-.18 G
(omplications when initializing the data structure as there w)-3 E
(ould not be)-.12 E(an)72 244.2 Q 3(yw)-.18 G(ay to disco)-3.12 E -.18
(ve)-.18 G 3(rt).18 G(he appropriate function to call \(a chick)-3 E
(en and e)-.12 E(gg problem\).)-.18 E(When a font path type is initiali\
zed, it passes the function pointers to the serv)72 262.4 Q
(er which are)-.18 E(then stored in an FPEFunctionsRec.)72 276.4 Q
(Each function is described belo)6 E 3(wi)-.3 G 3(nt)-3 G(urn.)-3 E/F2
12/Times-Bold@0 SF 3(3.1. \(*name_check\))72 304.4 R F1(Each ne)72 322.6
Q 3(wf)-.3 G
(ont path member is passed to this function; if the return v)-3 E
(alue is Successful,)-.3 E
(then the FPE recognises the format of the string.)72 336.6 Q
(This does not guarantee that the FPE)6 E
(will be able to successfully use this member)72 350.6 Q 6(.F)-.66 G
(or e)-6.18 E(xample, the disk-based font directory)-.18 E(\214le "font\
s.dir" may be corrupted, this will not be detected until the font path \
is initialized.)72 364.6 Q(This routine ne)72 378.6 Q -.18(ve)-.3 G 3
(rr).18 G(eturns)-3 E F2(Suspended)3 E F1(.)A F2 3(3.2. \(*init_fpe\))72
406.6 R F1(Initialize a ne)72 424.8 Q 3(wf)-.3 G(ont path element.)-3 E
(This function prepares a ne)6 E 3(wf)-.3 G(ont path element for)-3 E
(other requests:)72 438.8 Q(the disk font routine reads the "fonts.dir"\
 and "fonts.alias" \214les into the)6 E
(internal format, while the font serv)72 452.8 Q
(er routine connects to the requested font serv)-.18 E(er and)-.18 E
(prepares for using it.)72 466.8 Q(This routine returns Successful if e)
6 E -.18(ve)-.3 G(rything went OK, otherwise).18 E(the return v)72 480.8
Q(alue indicates the source of the problem.)-.3 E(This routine ne)6 E
-.18(ve)-.3 G 3(rr).18 G(eturns)-3 E F2(Sus-)3 E(pended)72 494.8 Q F1(.)
A F2 3(3.3. \(*r)72 522.8 R(eset_fpe\))-.216 E F1
(When the X font path is reset, and some of the ne)72 541 Q 3(wm)-.3 G
(embers are also in the old font path,)-3 E
(this function is called to reinitialize those FPEs.)72 555 Q
(This routine returns Successful if e)6 E -.18(ve)-.3 G(ry-).18 E
(thing went OK.)72 569 Q(It returns FPEResetF)6 E
(ailed if \(for some reason\) the reset f)-.18 E(ailed, and the)-.12 E
(caller should remo)72 583 Q .36 -.18(ve t)-.18 H
(he old FPE and simply create a ne).18 E 3(wo)-.3 G(ne in its place.)-3
E(This is used)6 E(by the disk-based fonts routine as resetting the int\
ernal directory structures w)72 597 Q(ould be)-.12 E
(more complicated than simply ha)72 611 Q(ving destro)-.24 E
(ying the old and creating a ne)-.12 E -.78(w.)-.3 G F2 3(3.4. \(*fr)72
639 R(ee_fpe\))-.216 E F1(When the serv)72 657.2 Q
(er is \214nished with an FPE, this function is called to dispose of an)
-.18 E 3(yi)-.18 G(nternal)-3 E 3(state. It)72 671.2 R
(should return Successful, unless something terrible happens.)3 E F2 3
(3.5. \(*open_f)72 699.2 R(ont\))-.3 E F1
(This routine requests that a font be opened.)72 717.4 Q(The client ar)6
E(gument is used by the font)-.216 E
(library only in connection with suspending/restarting the request.)72
731.4 Q(The \215ags ar)6 E(gument)-.216 E -.18(Fo)72 770 S
(nt Library Interf).18 E 96.672(ace -)-.12 F 132 3(3- J)3 H
(uly 27, 1991)-3 E 0 Cg EP
%%Page: 4 4
%%BeginPageSetup
BP
%%EndPageSetup
/F0 12/Times-Roman@0 SF(speci\214es some beha)72 86 Q
(viour for the library and can be an)-.24 E 3(yo)-.18 G(f:)-3 E/F1 12
/Courier@0 SF(/* OpenFont flags */)102 104.2 Q(#define FontLoadInfo)102
118.2 Q(0x0001)28.8 E(#define FontLoadProps)102 132.2 Q(0x0002)21.6 E
(#define FontLoadMetrics 0x0004)102 146.2 Q
(#define FontLoadBitmaps 0x0008)102 160.2 Q(#define FontLoadAll)102
174.2 Q(0x000f)36 E(#define FontOpenSync)102 188.2 Q(0x0010)28.8 E F0
(The v)72 206.4 Q(arious \214elds specify which portions of the font sh\
ould be loaded at this time.)-.3 E(When)6 E -.18(Fo)72 220.4 S(ntOpenSy\
nc is speci\214ed, this routine will not return until all of the reques\
ted portions).18 E(are loaded.)72 234.4 Q
(Otherwise, this routine may return)6 E/F2 12/Times-Bold@0 SF(Suspended)
3 E F0 6(.W)C(hen the presented font)-6 E
(name is actually an alias for some other font name, F)72 248.4 Q
(ontName Alias is returned, and the)-.18 E
(actual font name is stored in the location pointed to by the)72 262.4 Q
/F3 12/Times-Italic@0 SF(alias)3 E F0(ar)3 E(gument as a null-termi-)
-.216 E(nated string.)72 276.4 Q F2 3(3.6. \(*close_f)72 304.4 R(ont\))
-.3 E F0(When the serv)72 322.6 Q
(er is \214nished with a font, this routine disposes of an)-.18 E 3(yi)
-.18 G(nternal state and)-3 E(frees the font data structure.)72 336.6 Q
F2 3(3.7. \(*list_f)72 364.6 R(onts\))-.3 E F0(The)72 382.8 Q F3(paths)3
E F0(ar)3 E(gument is a data structure which will be \214lled with all \
of the font names from)-.216 E
(this directory which match the speci\214ed pattern.)72 396.8 Q(At most)
6 E F3(maxnames)3 E F0(will be added.)3 E(This)6 E(routine may return)72
410.8 Q F2(Suspended)3 E F0(.)A F2 3(3.8. \(*start_list_f)72 438.8 R
(onts_with_inf)-.3 E(o\))-.3 E F0(This routine sets an)72 457 Q 3(yi)
-.18 G(nternal state for a v)-3 E
(erbose listing of all fonts matching the speci\214ed)-.18 E 3
(pattern. This)72 471 R(routine may return)3 E F2(Suspended)3 E F0(.)A
F2 3(3.9. \(*list_next_f)72 499 R(ont_with_inf)-.3 E(o\))-.3 E F0 1.92
-.96(To a)72 517.2 T -.24(vo).72 G
(id storing huge amounts of data, the interf).24 E(ace for ListF)-.12 E
(ontsW)-.18 E(ithInfo allo)-.48 E(ws the)-.3 E(serv)72 531.2 Q
(er to get one reply at a time and forw)-.18 E(ard that to the client.)
-.12 E(When the font name)6 E
(returned is actually an alias for some other font,)72 545.2 Q F2 -.3
(Fo)3 G(ntNameAlias).3 E F0(will be returned.)3 E(The)6 E(actual font n\
ame is return instead, and the font alias which matched the pattern is \
returned)72 559.2 Q
(in the location pointed to by data as a null-terminated string.)72
573.2 Q(The caller can then get the)6 E(information by recursi)72 587.2
Q -.18(ve)-.3 G(ly listing that font name with a maxnames of 1.).18 E
(When)6 E F2(Success-)3 E(ful)72 601.2 Q F0
(is returned, the matching font name is returned, and a F)3 E
(ontInfoPtr is stored in the)-.18 E(location pointed to by)72 615.2 Q F3
(data)3 E F0(.)A F3(Data)6 E F0
(must be initialized with a pointer to a F)3 E(ontInfoRec)-.18 E
(allocated by the caller)72 629.2 Q 6(.W)-.66 G
(hen the pointer pointed to by)-6 E F3(data)3 E F0
(is not left pointing at that)3 E(storage, the caller mustn')72 643.2 Q
3(tf)-.216 G(ree the associated property data.)-3 E
(This routine may return)6 E F2(Sus-)3 E(pended)72 657.2 Q F0(.)A F2 3
(3.10. \(*wak)72 685.2 R(eup_fpe\))-.12 E F0(Whene)72 703.4 Q -.18(ve)
-.3 G 3(ra).18 G 3(nF)-3 G
(PE function has returned Suspended, this routine is called whene)-3 E
-.18(ve)-.3 G 3(rt).18 G(he)-3 E(application w)72 717.4 Q(ak)-.12 E
(es up from w)-.12 E(aiting for input \(from select\(2\)\).)-.12 E
(This mask ar)6 E(gument should)-.216 E(be the v)72 731.4 Q
(alue returned from select\(2\).)-.3 E -.18(Fo)72 770 S
(nt Library Interf).18 E 96.672(ace -)-.12 F 132 3(4- J)3 H
(uly 27, 1991)-3 E 0 Cg EP
%%Page: 5 5
%%BeginPageSetup
BP
%%EndPageSetup
/F0 12/Times-Bold@0 SF 3(3.11. \(*client_died\))72 86 R/F1 12
/Times-Roman@0 SF(When an FPE function has returned)72 104.2 Q F0
(Suspended)3 E F1(and the associated client is being)3 E(destro)72 118.2
Q(yed, this function allo)-.12 E(ws the font library to dispose of an)
-.3 E 3(ys)-.18 G(tate associated with that)-3 E(client.)72 132.2 Q F0 3
(4. F)72 160.2 R(onts)-.3 E F1(The data structure which actually contai\
ns the font information has changed signi\214cantly)72 178.4 Q
(since pre)72 192.4 Q(vious releases; it no)-.3 E 3(wa)-.3 G
(ttempts to hide the actual storage format for the data from)-3 E
(the application, pro)72 206.4 Q
(viding accessor functions to get at the data.)-.18 E(This allo)6 E
(ws a range of)-.3 E(internal details for dif)72 220.4 Q
(ferent font sources.)-.3 E(The structure is split into tw)6 E 3(op)-.12
G(ieces, so that)-3 E(ListF)72 234.4 Q(ontsW)-.18 E
(ithInfo can share information from the font when it has been loaded.)
-.48 E(The)6 E -.18(Fo)72 248.4 S
(ntInfo structure, then, contains only information germane to LFWI.).18
E/F2 12/Courier@0 SF(typedef struct _FontInfo {)102 266.6 Q
(unsigned short firstCol;)130.8 280.6 Q
(/* range of glyphs for this font */)86.4 E(unsigned short lastCol;)
130.8 294.6 Q(unsigned short firstRow;)130.8 308.6 Q
(unsigned short lastRow;)130.8 322.6 Q(unsigned short defaultCh;)130.8
336.6 Q(/* default character index */)79.2 E(unsigned int noOverlap:1;)
130.8 350.6 Q(/* no combination of glyphs overlap */)79.2 E
(unsigned int terminalFont:1;)130.8 364.6 Q(/* Character cell font */)
57.6 E(unsigned int constantMetrics:1;)130.8 378.6 Q
(/* all metrics are the same */)36 E(unsigned int constantWidth:1;)130.8
392.6 Q(/* all character widths are the same*/)50.4 E
(unsigned int inkInside:1;)130.8 406.6 Q
(/* all ink inside character cell */)79.2 E(unsigned int inkMetrics:1;)
130.8 420.6 Q(/* font has ink metrics */)72 E(unsigned int allExist:1;)
130.8 434.6 Q(/* no missing chars in range */)86.4 E
(unsigned int drawDirection:2;)130.8 448.6 Q
(/* left-to-right/right-to-left*/)50.4 E(unsigned int cachable:1;)130.8
462.6 Q(/* font needn't be opened each time*/)86.4 E
(unsigned int anamorphic:1;)130.8 476.6 Q
(/* font is strangely scaled */)72 E 43.2(short maxOverlap;)130.8 490.6
R(/* maximum overlap amount */)93.6 E 43.2(short pad;)130.8 504.6 R
(/* unused */)144 E 14.4(xCharInfo maxbounds;)130.8 518.6 R
(/* glyph metrics maximums */)100.8 E 14.4(xCharInfo minbounds;)130.8
532.6 R(/* glyph metrics minimums */)100.8 E 14.4
(xCharInfo ink_maxbounds;)130.8 546.6 R(/* ink metrics maximums */)72 E
14.4(xCharInfo ink_minbounds;)130.8 560.6 R(/* ink metrics minimums */)
72 E 43.2(short fontAscent;)130.8 574.6 R(/* font ascent amount */)93.6
E 43.2(short fontDescent;)130.8 588.6 R(/* font descent amount */)86.4 E
57.6(int nprops;)130.8 602.6 R(/* number of font properties */)122.4 E
(FontPropPtr props;)130.8 616.6 Q(/* font properties */)129.6 E 43.2
(char *isStringProp;)130.8 630.6 R(/* boolean array */)79.2 E 79.2(}F)
102 644.6 S(ontInfoRec, *FontInfoPtr;)-79.2 E F1(The font structure, th\
en, contains a font info record, the format of the bits in each bitmap)
72 662.8 Q(and the functions which access the font records \(which are \
stored in an opaque format)72 676.8 Q(hung of)72 690.8 Q 3(fo)-.3 G 3
(ff)-3 G(ontPri)-3 E -.3(va)-.3 G(te\).).3 E F2(typedef struct _Font {)
102 709 Q 57.6(int refcnt;)130.8 723 R F1 -.18(Fo)72 770 S
(nt Library Interf).18 E 96.672(ace -)-.12 F 132 3(5- J)3 H
(uly 27, 1991)-3 E 0 Cg EP
%%Page: 6 6
%%BeginPageSetup
BP
%%EndPageSetup
/F0 12/Courier@0 SF(FontInfoRec info;)130.8 86 Q 50.4(char bit;)130.8
100 R(/* bit order: LSBFirst/MSBFirst */)144 E 50.4(char byte;)130.8 114
R(/* byte order: LSBFirst/MSBFirst */)136.8 E 50.4(char glyph;)130.8 128
R(/* glyph pad: 1, 2, 4 or 8 */)129.6 E 50.4(char scan;)130.8 142 R
(/* glyph scan unit: 1, 2 or 4 */)136.8 E(fsBitmapFormat format;)130.8
156 Q(/* FS-style format \(packed\) */)100.8 E 57.6(int \(*get_glyphs\))
130.8 170 R 7.2(\(/)7.2 G 7.2(*f)-7.2 G
(ont, count, chars, encoding, count, glyphs */ \);)-7.2 E 57.6
(int \(*get_metrics\))130.8 184 R 7.2(\(/)7.2 G 7.2(*f)-7.2 G
(ont, count, chars, encoding, count, glyphs */ \);)-7.2 E 57.6
(int \(*get_bitmaps\))130.8 198 R(\(/* client, font, flags, format,)7.2
E(flags, nranges, ranges, data_sizep,)354 212 Q
(num_glyphsp, offsetsp, glyph_datap,)354 226 Q(free_datap */ \);)354 240
Q 57.6(int \(*get_extents\))130.8 254 R
(\(/* client, font, flags, nranges,)7.2 E
(ranges, nextentsp, extentsp */\);)361.2 268 Q 50.4
(void \(*unload_font\))130.8 282 R 7.2(\(/)7.2 G 7.2(*f)-7.2 G
(ont */ \);)-7.2 E(FontPathElementPtr fpe;)130.8 296 Q
(/* FPE associated with this font */)93.6 E 28.8(pointer svrPrivate;)
130.8 310 R(/* X/FS private data */)93.6 E 28.8(pointer fontPrivate;)
130.8 324 R(/* private to font */)86.4 E 28.8(pointer fpePrivate;)130.8
338 R(/* private to FPE */)93.6 E 57.6(int maxPrivate;)130.8 352 R
(/* devPrivates \(see below\) */)93.6 E 28.8(pointer *devPrivates;)130.8
366 R 7.2(/* ...)79.2 F(*/)7.2 E 79.2(}F)102 380 S(ontRec, *FontPtr;)
-79.2 E/F1 12/Times-Roman@0 SF -1.2(Ye)72 398.2 S(s, there are se)1.2 E
-.18(ve)-.3 G(ral dif).18 E(ferent pri)-.3 E -.3(va)-.3 G
(te pointers in the F).3 E(ont structure; the)-.18 E 3(yw)-.18 G
(ere added hap-)-3 E(hazardly until the de)72 412.2 Q(vPri)-.3 E -.3(va)
-.3 G(te pointers were added.).3 E(Future releases may remo)6 E .36 -.18
(ve s)-.18 H(ome \(or).18 E(all\) of the speci\214c pointers, lea)72
426.2 Q(ving only the de)-.24 E(vPri)-.3 E -.3(va)-.3 G(tes mechanism.)
.3 E(There are tw)72 444.4 Q 3(os)-.12 G(imilar interf)-3 E
(aces implemented - get_glyphs/get_metrics and get_bit-)-.12 E
(maps/get_e)72 458.4 Q 3(xtents. T)-.18 F
(oo little time caused the font-serv)-.96 E(er speci\214c interf)-.18 E
(aces to be placed in)-.12 E(the font library \(and portions duplicated\
 in each renderer\) instead of ha)72 472.4 Q(ving them inte-)-.24 E
(grated into the font serv)72 486.4 Q(er itself.)-.18 E
(This may change.)6 E(The X serv)6 E(er uses only)-.18 E
(get_glyphs/get_metrics, and those will not change dramatically)72 500.4
Q 6(.E)-.78 G(ach of the routines is)-6 E(described belo)72 514.4 Q(w)
-.3 E/F2 12/Times-Bold@0 SF 3(4.1. \(*get_glyphs\))72 542.4 R F1(This r\
outine returns CharInfoPtrs for each of the requested characters in the\
 font.)72 560.6 Q(If the)6 E(character does not e)72 574.6 Q
(xist in the font, the def)-.18 E
(ault character will be returned, unless no)-.12 E(def)72 588.6 Q
(ault character e)-.12 E(xists in which case that character is skipped.)
-.18 E(Thus, the number of)6 E(glyphs returned will not al)72 602.6 Q
-.12(wa)-.12 G(ys be the same as the number of characters passed in.).12
E F2 3(4.2. \(*get_metrics\))72 630.6 R F1
(This is similar to \(*get_glyphs\) e)72 648.8 Q
(xcept that pointers to xCharInfo structures are returned,)-.18 E(and, \
if the font has ink metrics, those are returned instead of the bitmap m\
etrics.)72 662.8 Q F2 3(4.3. \(*get-bitmaps\))72 690.8 R F1(This packs \
the glyph image data in the requested format and returns it.)72 709 Q
(The)6 E(ranges/nranges ar)72 723 Q
(gument specify the set of glyphs from the font to pack together)-.216 E
(.)-.66 E -.18(Fo)72 770 S(nt Library Interf).18 E 96.672(ace -)-.12 F
132 3(6- J)3 H(uly 27, 1991)-3 E 0 Cg EP
%%Page: 7 7
%%BeginPageSetup
BP
%%EndPageSetup
/F0 12/Times-Bold@0 SF 3(4.4. \(*get_extents\))72 86 R/F1 12
/Times-Roman@0 SF(This returns the metrics for the speci\214ed font fro\
m the speci\214ed ranges.)72 104.2 Q F0 3(4.5. \(*unload_f)72 136.4 R
(ont\))-.3 E F1(This is called from the FPE routine \(*close_font\), an\
d so should not e)72 154.6 Q -.18(ve)-.3 G 3(rb).18 G 3(ec)-3 G
(alled from)-3 E(the application.)72 168.6 Q F0 3(4.6. maxPri)72 196.6 R
-.12(va)-.12 G(te).12 E F1(When initializing a ne)72 214.8 Q 3(wf)-.3 G
(ont structure, maxPri)-3 E -.3(va)-.3 G
(te should be set to -1 so that the F).3 E(ontSet-)-.18 E(Pri)72 228.8 Q
-.3(va)-.3 G(te\(\) macro w).3 E(orks properly with an inde)-.12 E 3(xo)
-.18 G 3(f0)-3 G 6(.I)-3 G(nitializing maxPri)-6 E -.3(va)-.3 G
(te to 0 can cause).3 E(problems if the serv)72 242.8 Q
(er tries to set something at inde)-.18 E 3(x0)-.18 G(.)-3 E -.18(Fo)72
770 S(nt Library Interf).18 E 96.672(ace -)-.12 F 132 3(7- J)3 H
(uly 27, 1991)-3 E 0 Cg EP
%%Trailer
end
%%EOF
