%!PS-Adobe-3.0
%%Creator: groff version 1.19.2
%%CreationDate: Mon Dec 29 00:06:39 2008
%%DocumentNeededResources: font Times-Bold
%%+ font Times-Italic
%%+ font Times-Roman
%%DocumentSuppliedResources: procset grops 1.19 2
%%Pages: 31
%%PageOrder: Ascend
%%DocumentMedia: Default 612 792 0 () ()
%%Orientation: Portrait
%%EndComments
%%BeginDefaults
%%PageMedia: Default
%%EndDefaults
%%BeginProlog
%%BeginResource: procset grops 1.19 2
%!PS-Adobe-3.0 Resource-ProcSet
/setpacking where{
pop
currentpacking
true setpacking
}if
/grops 120 dict dup begin
/SC 32 def
/A/show load def
/B{0 SC 3 -1 roll widthshow}bind def
/C{0 exch ashow}bind def
/D{0 exch 0 SC 5 2 roll awidthshow}bind def
/E{0 rmoveto show}bind def
/F{0 rmoveto 0 SC 3 -1 roll widthshow}bind def
/G{0 rmoveto 0 exch ashow}bind def
/H{0 rmoveto 0 exch 0 SC 5 2 roll awidthshow}bind def
/I{0 exch rmoveto show}bind def
/J{0 exch rmoveto 0 SC 3 -1 roll widthshow}bind def
/K{0 exch rmoveto 0 exch ashow}bind def
/L{0 exch rmoveto 0 exch 0 SC 5 2 roll awidthshow}bind def
/M{rmoveto show}bind def
/N{rmoveto 0 SC 3 -1 roll widthshow}bind def
/O{rmoveto 0 exch ashow}bind def
/P{rmoveto 0 exch 0 SC 5 2 roll awidthshow}bind def
/Q{moveto show}bind def
/R{moveto 0 SC 3 -1 roll widthshow}bind def
/S{moveto 0 exch ashow}bind def
/T{moveto 0 exch 0 SC 5 2 roll awidthshow}bind def
/SF{
findfont exch
[exch dup 0 exch 0 exch neg 0 0]makefont
dup setfont
[exch/setfont cvx]cvx bind def
}bind def
/MF{
findfont
[5 2 roll
0 3 1 roll
neg 0 0]makefont
dup setfont
[exch/setfont cvx]cvx bind def
}bind def
/level0 0 def
/RES 0 def
/PL 0 def
/LS 0 def
/MANUAL{
statusdict begin/manualfeed true store end
}bind def
/PLG{
gsave newpath clippath pathbbox grestore
exch pop add exch pop
}bind def
/BP{
/level0 save def
1 setlinecap
1 setlinejoin
72 RES div dup scale
LS{
90 rotate
}{
0 PL translate
}ifelse
1 -1 scale
}bind def
/EP{
level0 restore
showpage
}def
/DA{
newpath arcn stroke
}bind def
/SN{
transform
.25 sub exch .25 sub exch
round .25 add exch round .25 add exch
itransform
}bind def
/DL{
SN
moveto
SN
lineto stroke
}bind def
/DC{
newpath 0 360 arc closepath
}bind def
/TM matrix def
/DE{
TM currentmatrix pop
translate scale newpath 0 0 .5 0 360 arc closepath
TM setmatrix
}bind def
/RC/rcurveto load def
/RL/rlineto load def
/ST/stroke load def
/MT/moveto load def
/CL/closepath load def
/Fr{
setrgbcolor fill
}bind def
/setcmykcolor where{
pop
/Fk{
setcmykcolor fill
}bind def
}if
/Fg{
setgray fill
}bind def
/FL/fill load def
/LW/setlinewidth load def
/Cr/setrgbcolor load def
/setcmykcolor where{
pop
/Ck/setcmykcolor load def
}if
/Cg/setgray load def
/RE{
findfont
dup maxlength 1 index/FontName known not{1 add}if dict begin
{
1 index/FID ne{def}{pop pop}ifelse
}forall
/Encoding exch def
dup/FontName exch def
currentdict end definefont pop
}bind def
/DEFS 0 def
/EBEGIN{
moveto
DEFS begin
}bind def
/EEND/end load def
/CNT 0 def
/level1 0 def
/PBEGIN{
/level1 save def
translate
div 3 1 roll div exch scale
neg exch neg exch translate
0 setgray
0 setlinecap
1 setlinewidth
0 setlinejoin
10 setmiterlimit
[]0 setdash
/setstrokeadjust where{
pop
false setstrokeadjust
}if
/setoverprint where{
pop
false setoverprint
}if
newpath
/CNT countdictstack def
userdict begin
/showpage{}def
/setpagedevice{}def
}bind def
/PEND{
countdictstack CNT sub{end}repeat
level1 restore
}bind def
end def
/setpacking where{
pop
setpacking
}if
%%EndResource
%%EndProlog
%%BeginSetup
%%BeginFeature: *PageSize Default
<< /PageSize [ 612 792 ] /ImagingBBox null >> setpagedevice
%%EndFeature
%%IncludeResource: font Times-Bold
%%IncludeResource: font Times-Italic
%%IncludeResource: font Times-Roman
grops begin/DEFS 1 dict def DEFS begin/u{.001 mul}bind def end/RES 72
def/PL 792 def/LS false def/ENC0[/asciicircum/asciitilde/Scaron/Zcaron
/scaron/zcaron/Ydieresis/trademark/quotesingle/Euro/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/space/exclam/quotedbl/numbersign/dollar/percent
/ampersand/quoteright/parenleft/parenright/asterisk/plus/comma/hyphen
/period/slash/zero/one/two/three/four/five/six/seven/eight/nine/colon
/semicolon/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J/K/L/M/N/O
/P/Q/R/S/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright/circumflex
/underscore/quoteleft/a/b/c/d/e/f/g/h/i/j/k/l/m/n/o/p/q/r/s/t/u/v/w/x/y
/z/braceleft/bar/braceright/tilde/.notdef/quotesinglbase/guillemotleft
/guillemotright/bullet/florin/fraction/perthousand/dagger/daggerdbl
/endash/emdash/ff/fi/fl/ffi/ffl/dotlessi/dotlessj/grave/hungarumlaut
/dotaccent/breve/caron/ring/ogonek/quotedblleft/quotedblright/oe/lslash
/quotedblbase/OE/Lslash/.notdef/exclamdown/cent/sterling/currency/yen
/brokenbar/section/dieresis/copyright/ordfeminine/guilsinglleft
/logicalnot/minus/registered/macron/degree/plusminus/twosuperior
/threesuperior/acute/mu/paragraph/periodcentered/cedilla/onesuperior
/ordmasculine/guilsinglright/onequarter/onehalf/threequarters
/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE
/Ccedilla/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex
/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis
/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn
/germandbls/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash
/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]def
/Times-Roman@0 ENC0/Times-Roman RE/Times-Italic@0 ENC0/Times-Italic RE
/Times-Bold@0 ENC0/Times-Bold RE
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
BP
%%EndPageSetup
/F0 14/Times-Bold@0 SF 3.5(XS)192.919 123 S(ession Management Library)
-3.5 E/F1 12/Times-Bold@0 SF -1.2(Ve)259.602 153 S(rsion 1.0)1.2 E 3(XC)
225.996 183 S(onsortium Standard)-3 E 3(XV)223.944 213 S
(ersion 11, Release 6.4)-4.2 E/F2 10/Times-Italic@0 SF(Ralph Mor)266.195
249 Q/F3 10/Times-Roman@0 SF 2.5(XC)259.525 267 S(onsortium)-2.5 E(Cop)
209.245 300.6 Q(yright \251 1993, 1994 X Consortium)-.1 E .171
(Permission is hereby granted, free of char)72 382.2 R .171(ge, to an)
-.18 F 2.671(yp)-.15 G .17(erson obtaining a cop)-2.671 F 2.67(yo)-.1 G
2.67(ft)-2.67 G .17(his softw)-2.67 F .17(are and associated)-.1 F .393
(documentation \214les \(the `)72 394.2 R(`Softw)-.74 E(are')-.1 E .393
('\), to deal in the Softw)-.74 F .393
(are without restriction, including without limita-)-.1 F 1.054
(tion the rights to use, cop)72 406.2 R 2.354 -.65(y, m)-.1 H(odify).65
E 3.554(,m)-.65 G(er)-3.554 E 1.054(ge, publish, distrib)-.18 F 1.053
(ute, sublicense, and/or sell copies of the Soft-)-.2 F -.1(wa)72 418.2
S .014(re, and to permit persons to whom the Softw).1 F .015
(are is furnished to do so, subject to the follo)-.1 F .015
(wing conditions:)-.25 F .187(The abo)72 433.8 R .487 -.15(ve c)-.15 H
(op).15 E .187(yright notice and this permission notice shall be includ\
ed in all copies or substantial portions)-.1 F(of the Softw)72 445.8 Q
(are.)-.1 E 1.19(THE SOFTW)72 461.4 R 1.19(ARE IS PR)-1.2 F -.5(OV)-.4 G
1.191(IDED `).5 F -.8(`A)-.74 G 3.691(SI).8 G(S')-3.691 E 1.191
(', WITHOUT W)-.74 F 1.191(ARRANTY OF ANY KIND, EXPRESS OR)-1.2 F .375
(IMPLIED, INCLUDING B)72 473.4 R .375(UT NO)-.1 F 2.875(TL)-.4 G .375
(IMITED T)-2.875 F 2.875(OT)-.18 G .375(HE W)-2.875 F .375
(ARRANTIES OF MERCHANT)-1.2 F(ABILITY)-.93 E 2.875(,F)-1.29 G(IT)-2.875
E(-)-.92 E .542(NESS FOR A P)72 485.4 R(AR)-.92 E .542
(TICULAR PURPOSE AND NONINFRINGEMENT)-.6 F 5.543(.I)-.74 G 3.043(NN)
-5.543 G 3.043(OE)-3.043 G .543(VENT SHALL THE X)-3.043 F(CONSOR)72
497.4 Q .846(TIUM BE LIABLE FOR ANY CLAIM, D)-.6 F(AMA)-.4 E .845
(GES OR O)-.4 F .845(THER LIABILITY)-.4 F 3.345(,W)-1.29 G .845
(HETHER IN)-3.345 F .609(AN A)72 509.4 R .609(CTION OF CONTRA)-.4 F(CT)
-.4 E 3.109(,T)-.74 G(OR)-3.289 E 3.109(TO)-.6 G 3.109(RO)-3.109 G(THER)
-3.509 E .609(WISE, ARISING FR)-.55 F .61(OM, OUT OF OR IN CONNEC-)-.4 F
(TION WITH THE SOFTW)72 521.4 Q(ARE OR THE USE OR O)-1.2 E
(THER DEALINGS IN THE SOFTW)-.4 E(ARE.)-1.2 E .418(Except as contained \
in this notice, the name of the X Consortium shall not be used in adv)72
537 R .418(ertising or other)-.15 F(-)-.2 E .192
(wise to promote the sale, use or other dealings in this Softw)72 549 R
.192(are without prior written authorization from the)-.1 F 2.5(XC)72
561 S(onsortium.)-2.5 E 2.5(XW)72 609 S(indo)-2.9 E 2.5(wS)-.25 G
(ystem is a trademark of X Consortium, Inc.)-2.5 E 0 Cg EP
%%Page: 2 2
%%BeginPageSetup
BP
%%EndPageSetup
0 Cg EP
%%Page: 1 3
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Bold@0 SF 2.5(1. Ov)72 84 R(er)-.1 E
(view of Session Management)-.1 E/F1 10/Times-Roman@0 SF .45
(The purpose of the X Session Management Protocol \(XSMP\) is to pro)72
99.6 R .45(vide a uniform mechanism for users)-.15 F .274(to sa)72 111.6
R .574 -.15(ve a)-.2 H .274(nd restore their sessions.).15 F(A)5.274 E
/F2 10/Times-Italic@0 SF(session)2.774 E F1 .275
(is a group of clients, each of which has a particular state.)2.774 F
(The)5.275 E .899(session is controlled by a netw)72 123.6 R .899
(ork service called the)-.1 F F2 .898(session mana)3.398 F -.1(ge)-.1 G
(r).1 E F1 5.898(.T).833 G .898(he session manager issues com-)-5.898 F
.037(mands to its clients on behalf of the user)72 135.6 R 5.037(.T)-.55
G .037(hese commands may cause clients to sa)-5.037 F .337 -.15(ve t)-.2
H .037(heir state or to termi-).15 F 2.967(nate. It)72 147.6 R .467
(is e)2.967 F .467(xpected that the client will sa)-.15 F .767 -.15
(ve i)-.2 H .467(ts state in such a w).15 F .467
(ay that the client can be restarted at a later)-.1 F .226
(time and resume its operation as if it had ne)72 159.6 R -.15(ve)-.25 G
2.726(rb).15 G .226(een terminated.)-2.726 F 2.726(Ac)5.226 G(lient')
-2.726 E 2.726(ss)-.55 G .226(tate might include information)-2.726 F
.209(about the \214le currently being edited, the current position of t\
he insertion point within the \214le, or the start of)72 171.6 R
(an uncommitted transaction.)72 183.6 Q(The means by which clients are \
restarted is unspeci\214ed by this protocol.)5 E -.15(Fo)72 199.2 S
2.659(rp).15 G .159(urposes of this protocol, a)-2.659 F F2(client)2.66
E F1 .16(of the session manager is de\214ned as a connection to the ses\
sion man-)3.493 F(ager)72 211.2 Q 5.762(.A)-.55 G .762
(client is typically)-2.5 F 3.262(,t)-.65 G .761(hough not necessarily)
-3.262 F 3.261(,ap)-.65 G .761
(rocess running an application program connected to)-3.261 F .055
(an X display)72 223.2 R 5.055(.H)-.65 G -.25(ow)-5.055 G -2.15 -.25
(ev e).25 H .855 -.4(r, a c).25 H .055(lient may be connected to more t\
han one X display or not be connected to an).4 F 2.556(yX)-.15 G
(displays at all.)72 235.2 Q F0 2.5(2. The)72 259.2 R
(Session Management Library)2.5 E F1 .894
(The Session Management Library \(SMlib\) is a lo)72 274.8 R(w-le)-.25 E
-.15(ve)-.25 G 3.394(l").15 G .894(C" language interf)-3.394 F .894
(ace to XSMP)-.1 F 5.894(.I)-1.11 G 3.394(ti)-5.894 G 3.394(se)-3.394 G
(xpected)-3.544 E 1.197(that higher le)72 286.8 R -.15(ve)-.25 G 3.697
(lt).15 G 1.197(oolkits, such as Xt, will hide man)-3.697 F 3.698(yo)
-.15 G 3.698(ft)-3.698 G 1.198
(he details of session management from clients.)-3.698 F .881(Higher le)
72 298.8 R -.15(ve)-.25 G 3.381(lt).15 G .881(oolkits might also be de)
-3.381 F -.15(ve)-.25 G .881(loped for session managers to use, b).15 F
.88(ut no such ef)-.2 F .88(fort is currently)-.25 F(under w)72 310.8 Q
(ay)-.1 E(.)-.65 E(SMlib has tw)72 326.4 Q 2.5(op)-.1 G(arts to it:)-2.5
E 21.5<834f>72 342 S(ne set of functions for clients that w)-21.5 E
(ant to be part of a session)-.1 E 21.5<834f>72 357.6 S
(ne set of functions for session managers to call)-21.5 E .292
(Some applications will use both sets of functions and act as)72 373.2 R
F2 .292(nested session mana)2.792 F -.1(ge)-.1 G -.1(rs).1 G F1 5.292
(.T).933 G .292(hat is, the)-5.292 F 2.792(yw)-.15 G .293(ill be)-2.792
F .035(both a session manager and a client of another session.)72 385.2
R .035(An e)5.035 F .035(xample is a mail program that could start a te)
-.15 F(xt)-.15 E .192(editor for editing the te)72 397.2 R .192
(xt of a mail message.)-.15 F .192(The mail program is part of a re)
5.192 F .193(gular session and, at the same)-.15 F
(time, is also acting as a session manager to the editor)72 409.2 Q(.)
-.55 E 1.157(Clients initialize by connecting to the session manager an\
d obtaining a)72 424.8 R F2(client-ID)3.657 E F1 1.157
(that uniquely identi\214es)4.49 F .021(them in the session.)72 436.8 R
.022(The session manager maintains a list of properties for each client\
 in the session.)5.021 F(These)5.022 E .36
(properties describe the client')72 448.8 R 2.86(se)-.55 G -.4(nv)-2.86
G .36(ironment and, most importantly).4 F 2.86(,d)-.65 G .36(escribe ho)
-2.86 F 2.86(wt)-.25 G .36(he client can be restarted)-2.86 F .449
(\(via an)72 460.8 R F0(SmRestartCommand)3.782 E F1 2.949(\). Clients)
.833 F .449(are e)2.949 F .449(xpected to sa)-.15 F .75 -.15(ve t)-.2 H
.45(heir state in such a w).15 F .45(ay as to allo)-.1 F 2.95(wm)-.25 G
(ultiple)-2.95 E .523(instantiations of themselv)72 472.8 R .523
(es to be managed independently)-.15 F 5.523(.F)-.65 G .523(or e)-5.673
F .523(xample, clients may use their client-ID as)-.15 F .23(part of a \
\214lename in which to store the state for a particular instantiation.)
72 484.8 R .23(The client-ID should be sa)5.23 F -.15(ve)-.2 G 2.73(da)
.15 G(s)-2.73 E(part of the)72 496.8 Q F0(SmRestartCommand)3.333 E F1
(so that the client will retain the same ID after it is restarted.)3.333
E .214(Once the client initializes itself with the session manager)72
512.4 R 2.713(,i)-.4 G 2.713(tm)-2.713 G .213
(ust be ready to respond to messages from the)-2.713 F 1.043
(session manager)72 524.4 R 6.043(.F)-.55 G 1.043(or e)-6.193 F 1.043
(xample, it might be ask)-.15 F 1.043(ed to sa)-.1 F 1.343 -.15(ve i)-.2
H 1.043(ts state or to terminate.).15 F 1.043(In the case of a shut-)
6.043 F(do)72 536.4 Q .97(wn, the session manager might gi)-.25 F 1.27
-.15(ve e)-.25 H .97
(ach client a chance to interact with the user and cancel the shut-).15
F(do)72 548.4 Q(wn.)-.25 E F0 2.5(3. Understanding)72 572.4 R(SMlib')2.5
E 2.5(sD)-.37 G(ependence on ICE)-2.5 E F1 .836
(The X Session Management Protocol is layered on top of the Inter)72 588
R .836(-Client Exchange \(ICE\) Protocol.)-.2 F(The)5.836 E .205
(ICE protocol is designed to multiple)72 600 R 2.705(xs)-.15 G -2.15
-.25(ev e)-2.705 H .204(ral protocols o).25 F -.15(ve)-.15 G 2.704(ras)
.15 G .204(ingle connection.)-2.704 F .204(As a result, w)5.204 F .204
(orking with)-.1 F(SMlib requires a little kno)72 612 Q(wledge of ho)
-.25 E 2.5(wt)-.25 G(he ICE library w)-2.5 E(orks.)-.1 E .579
(The ICE library utilizes callbacks to process messages.)72 627.6 R .579
(When a client detects that there is data to read on)5.579 F 1.246
(an ICE connection, it should call the)72 639.6 R F0(IcePr)4.579 E
(ocessMessages)-.18 E F1(function.)4.579 E F0(IcePr)7.078 E
(ocessMessages)-.18 E F1 1.245(will read the)4.578 F 1.977(message head\
er and look at the major opcode in order to determine which protocol th\
e message w)72 651.6 R(as)-.1 E .35(intended for)72 663.6 R 5.35(.T)-.55
G .349(he appropriate protocol library will then be triggered to unpack\
 the message and hand it of)-5.35 F(f)-.25 E
(to the client via a callback.)72 675.6 Q .768(The main point to be a)72
691.2 R -.1(wa)-.15 G .768
(re of is that an application using SMlib must ha).1 F 1.068 -.15(ve s)
-.2 H .768(ome code that detects when).15 F .399
(there is data to read on an ICE connection.)72 703.2 R .398
(This can be done via a)5.398 F F0(select)3.731 E F1 .398
(call on the \214le descriptor for the)3.731 F .912(ICE connection, b)72
715.2 R .913(ut more typically)-.2 F(,)-.65 E F0(XtA)4.246 E(ppAddInput)
-.25 E F1 .913(will be used to re)4.246 F .913
(gister a callback that will in)-.15 F -.2(vo)-.4 G -.1(ke).2 G F0
(IcePr)72.833 727.2 Q(ocessMessages)-.18 E F1
(each time there is data to read on the ICE connection.)3.333 E 2.5
<ad31ad>277.36 768 S 0 Cg EP
%%Page: 2 4
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Bold@0 SF 2.5(XS)72 48 S(ession Management Library)-2.5 E
(X11, Release 6.4)226.74 E/F1 10/Times-Roman@0 SF 2.031 -.8(To f)72 84 T
.431(urther complicate things, kno).8 F .43
(wing which \214le descriptors to call)-.25 F F0(select)3.763 E F1 .43
(on requires an understanding of)3.763 F(ho)72 96 Q 3.911(wI)-.25 G
1.411(CE connections are created.)-3.911 F 1.412
(On the client side, a call must be made to)6.411 F F0
(SmcOpenConnection)4.745 E F1(in)4.745 E .384
(order to open a connection with a session manager)72 108 R(.)-.55 E F0
(SmcOpenConnection)6.217 E F1 .383(will internally mak)3.716 F 2.883
(eac)-.1 G .383(all into)-2.883 F F0(IceOpenConnection)72.833 120 Q F1
2.756(,w).833 G .257
(hich will, in turn, determine if an ICE connection already e)-2.756 F
.257(xists between the client)-.15 F 1.006(and session manager)72 132 R
6.006(.M)-.55 G 1.006(ost lik)-6.006 F(ely)-.1 E 3.506(,a)-.65 G 1.005
(connection will not already e)-.001 F 1.005(xist and a ne)-.15 F 3.505
(wI)-.25 G 1.005(CE connection will be)-3.505 F 3.178(created. The)72
144 R .678(main point to be a)3.178 F -.1(wa)-.15 G .678
(re of is that, on the client side, it is not ob).1 F .678
(vious when ICE connections)-.15 F .465(get created or destro)72 156 R
.465(yed, because connections are shared when possible.)-.1 F 2.065 -.8
(To d)5.465 H .465(eal with this, the ICE library).8 F .031
(lets the application re)72 168 R .031(gister w)-.15 F .031
(atch procedures that will be in)-.1 F -.2(vo)-.4 G -.1(ke).2 G 2.531
(de).1 G .031(ach time an ICE connection is opened or)-2.531 F 4.395
(closed. These)72 180 R -.1(wa)4.395 G 1.894
(tch procedures could be used to add or remo).1 F 2.194 -.15(ve I)-.15 H
1.894(CE \214le descriptors from the list of).15 F(descriptors to call)
72 192 Q F0(select)3.333 E F1(on.)3.333 E .297
(On the session manager side, things w)72 207.6 R .297(ork a bit dif)-.1
F(ferently)-.25 E 5.298(.T)-.65 G .298
(he session manager has complete control o)-5.298 F -.15(ve)-.15 G(r).15
E .523(the creation of ICE connections.)72 219.6 R .522
(The session manager has to \214rst call)5.523 F F0(IceListenF)3.855 E
(orConnections)-.25 E F1 .522(in order)3.855 F .736
(to start listening for connections from clients.)72 231.6 R .737
(Once a connection attempt is detected,)5.737 F F0(IceAcceptConnec-)4.07
E(tion)72 243.6 Q F1 1.481
(must be called, and the session manager can simply add the ne)4.814 F
3.98(wI)-.25 G 1.48(CE \214le descriptor to the list of)-3.98 F
(descriptors to call)72 255.6 Q F0(select)3.333 E F1(on.)3.333 E -.15
(Fo)72 271.2 S 3.226(rf).15 G .726(urther information on the library fu\
nctions related to ICE connections, see the)-3.226 F/F2 10
/Times-Italic@0 SF(Inter)3.227 E .727(-Client Exc)-.2 F(hang)-.15 E(e)
-.1 E(Libr)72 283.2 Q(ary)-.15 E F1(standard.)3.333 E F0 2.5(4. Header)
72 307.2 R(Files and Library Name)2.5 E F1 .304(Applications \(both ses\
sion managers and clients\) should include the header \214le <)72 322.8
R F0(X11/SM/SMlib).833 E(.h)-.4 E F1 2.803(>. This).833 F .867(header \
\214le de\214nes all of the SMlib data structures and function prototyp\
es.)72 334.8 R F0(SMlib)6.7 E(.h)-.4 E F1 .867(includes the header)4.2 F
(\214le <)72 346.8 Q F0(X11/SM/SM.h).833 E F1
(>, which de\214nes all of the SMlib constants.).833 E 1.359
(Because SMlib is dependent on ICE, applications should link ag)72 362.4
R 1.359(ainst SMlib and ICElib by using)-.05 F F0(-lSM)4.691 E(-lICE)
72.833 374.4 Q F1(.).833 E F0 2.5(5. Session)72 398.4 R
(Management Client \(Smc\) Functions)2.5 E F1(This section discusses ho)
72 414 Q 2.5(wS)-.25 G(ession Management clients:)-2.5 E 21.5<8343>72
429.6 S(onnect to the Session Manager)-21.5 E 21.5<8343>72 445.2 S
(lose the connection)-21.5 E 21.5<834d>72 460.8 S(odify callbacks)-21.5
E 21.5<8353>72 476.4 S(et, delete, and retrie)-21.5 E .3 -.15(ve S)-.25
H(ession Manager properties).15 E 21.5<8349>72 492 S
(nteract with the user)-21.5 E 21.5<8352>72 507.6 S(equest a `)-21.5 E
(`Sa)-.74 E .3 -.15(ve Y)-.2 H -1.95(ourself ')-.95 F(')-.74 E 21.5
<8352>72 523.2 S(equest a `)-21.5 E(`Sa)-.74 E .3 -.15(ve Y)-.2 H
(ourself Phase 2')-.95 E(')-.74 E 21.5<8343>72 538.8 S(omplete a `)-21.5
E(`Sa)-.74 E .3 -.15(ve Y)-.2 H -1.95(ourself ')-.95 F(')-.74 E 21.5
<8355>72 554.4 S(se Smc informational functions)-21.5 E 21.5<8348>72 570
S(andle Errors)-21.5 E F0 2.5(5.1. Connecting)72 594 R
(to the Session Manager)2.5 E F1 1.6 -.8(To o)72 609.6 T
(pen a connection with a session manager).8 E 2.5(,u)-.4 G(se)-2.5 E F0
(SmcOpenConnection)3.333 E F1(.).833 E .4 LW 50.4 626.1 50.4 636.1 DL
50.4 624.1 50.4 634.1 DL 55.4 624.6 50.4 624.6 DL 57.4 624.6 52.4 624.6
DL 62.4 624.6 57.4 624.6 DL 2.5<ad32ad>277.36 768 S 0 Cg EP
%%Page: 3 5
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Bold@0 SF 2.5(XS)72 48 S(ession Management Library)-2.5 E
(X11, Release 6.4)226.74 E/F1 10/Times-Roman@0 SF
(SmcConn SmcOpenConnection)72 84 Q(\().833 E/F2 10/Times-Italic@0 SF
(network_ids_list).833 E F1(,)A F2(conte)2.5 E(xt)-.2 E F1(,).833 E F2
(xsmp_major_r)2.5 E -.15(ev)-.37 G F1(,).983 E F2(xsmp_minor_r)2.5 E
-.15(ev)-.37 G F1(,).983 E F2(mask)122 96 Q F1(,).833 E F2(callbac)2.5 E
(ks)-.2 E F1(,).833 E F2(pr)2.5 E -.15(ev)-.37 G(ious_id).15 E F1(,).833
E F2(client_id_r)2.5 E(et)-.37 E F1(,).833 E F2(err)2.5 E(or_length)-.45
E F1(,).833 E F2(err)2.5 E(or_string_r)-.45 E(et)-.37 E F1(\)).833 E
(char *)82 108 Q F2(network_ids_list)A F1(;).833 E(SmPointer)82 120 Q F2
(conte)2.5 E(xt)-.2 E F1(;).833 E(int)82 132 Q F2(xsmp_major_r)2.5 E
-.15(ev)-.37 G F1(;).983 E(int)82 144 Q F2(xsmp_minor_r)2.5 E -.15(ev)
-.37 G F1(;).983 E(unsigned long)82 156 Q F2(mask)2.5 E F1(;).833 E
(SmcCallbacks *)82 168 Q F2(callbac)A(ks)-.2 E F1(;).833 E(char *)82 180
Q F2(pr)A -.15(ev)-.37 G(ious_id).15 E F1(;).833 E(char **)82 192 Q F2
(client_id_r)A(et)-.37 E F1(;).833 E(int)82 204 Q F2(err)2.5 E
(or_length)-.45 E F1(;).833 E(char *)82 216 Q F2(err)A(or_string_r)-.45
E(et)-.37 E F1(;).833 E F2(network_ids_list)72 235.2 Q F1
(Speci\214es the netw)5.88 E(ork ID\(s\) of the session manager)-.1 E(.)
-.55 E F2(conte)72 250.8 Q(xt)-.2 E F1 2.921(Ap)43.32 G .421
(ointer to an opaque object or NULL.)-2.921 F .421
(Used to determine if an ICE connection can be)5.421 F
(shared \(see belo)144 262.8 Q(w\).)-.25 E F2(xsmp_major_r)72 278.4 Q
-.15(ev)-.37 G F1(The highest major v)5.46 E
(ersion of the XSMP the application supports.)-.15 E F2(xsmp_minor_r)72
294 Q -.15(ev)-.37 G F1 2.608(The highest minor v)5.46 F 2.607
(ersion of the XSMP the application supports \(for the speci\214ed)-.15
F(xsmp_major_re)144 306 Q(v\).)-.25 E F2(mask)72 321.6 Q F1 2.5(Am)51.45
G(ask indicating which callbacks to re)-2.5 E(gister)-.15 E(.)-.55 E F2
(callbac)72 337.2 Q(ks)-.2 E F1 .452(The callbacks to re)34.43 F(gister)
-.15 E 5.453(.T)-.55 G .453
(hese callbacks are used to respond to messages from the ses-)-5.453 F
(sion manager)144 349.2 Q(.)-.55 E F2(pr)72 364.8 Q -.15(ev)-.37 G
(ious_id).15 E F1(The client ID from the pre)25.3 E(vious session.)-.25
E F2(client_id_r)72 380.4 Q(et)-.37 E F1
(The client ID for the current session is returned.)21.26 E F2(err)72
396 Q(or_length)-.45 E F1(Length of the error_string_ret ar)21.34 E
(gument passed in.)-.18 E F2(err)72 411.6 Q(or_string_r)-.45 E(et)-.37 E
F1 .6(Returns a null-terminated error message, if an)7.26 F 4.4 -.65
(y. T)-.15 H .6(he error_string_ret ar).65 F .6(gument points to)-.18 F
(user supplied memory)144 423.6 Q 5(.N)-.65 G 2.5(om)-5 G
(ore than error_length bytes are used.)-2.5 E .4 LW 50.4 419.7 50.4
429.7 DL 50.4 417.7 50.4 427.7 DL 55.4 431.2 50.4 431.2 DL 57.4 431.2
52.4 431.2 DL 62.4 431.2 57.4 431.2 DL .809(The netw)72 451.2 R .809
(ork_ids_list ar)-.1 F .809
(gument is a null-terminated string containing a list of netw)-.18 F .81
(ork IDs for the session)-.1 F(manager)72 463.2 Q 3.768(,s)-.4 G 1.268
(eparated by commas.)-3.768 F 1.268(If netw)6.268 F 1.268
(ork_ids_list is NULL, the v)-.1 F 1.268(alue of the)-.25 F F0
(SESSION_MAN)4.6 E -.55(AG)-.2 G(ER).55 E F1(en)72 475.2 Q(vironment v)
-.4 E(ariable will be used.)-.25 E(Each netw)5 E(ork ID has the follo)
-.1 E(wing format:)-.25 E 67.17(tcp/<hostname>:<portnumber> or)105 493.2
R 62.73(decnet/<hostname>::<objname> or)105 505.2 R
(local/<hostname>:<path>)105 517.2 Q .213
(An attempt will be made to use the \214rst netw)72 538.8 R .213
(ork ID.)-.1 F .213(If that f)5.213 F .213
(ails, an attempt will be made using the second)-.1 F(netw)72 550.8 Q
(ork ID, and so on.)-.1 E .298(After the connection is established,)72
566.4 R F0(SmcOpenConnection)3.63 E F1(re)3.63 E .297
(gisters the client with the session manager)-.15 F 5.297(.I)-.55 G(f)
-5.297 E .003(the client is being restarted from a pre)72 578.4 R .003
(vious session, pre)-.25 F .003
(vious_id should contain a null terminated string rep-)-.25 F 1.773
(resenting the client ID from the pre)72 590.4 R 1.773(vious session.)
-.25 F 1.772(If the client is \214rst joining the session, pre)6.773 F
(vious_id)-.25 E .458(should be set to NULL.)72 602.4 R .459(If pre)
5.459 F .459(vious_id is speci\214ed b)-.25 F .459
(ut is determined to be in)-.2 F -.25(va)-.4 G .459
(lid by the session manager).25 F(,)-.4 E(SMlib will re-re)72 614.4 Q
(gister the client with pre)-.15 E(vious_id set to NULL.)-.25 E(If)72
630 Q F0(SmcOpenConnection)5.116 E F1 1.782
(succeeds, it returns an opaque connection pointer of type)5.116 F F0
(SmcConn)5.115 E F1 1.782(and the)5.115 F .452(client_id_ret ar)72 642 R
.452(gument contains the client ID to be used for this session.)-.18 F
.453(The client_id_ret should be freed)5.453 F .427(with a call to)72
654 R F0(fr)3.759 E(ee)-.18 E F1 .426(when no longer needed.)3.759 F
.426(On f)5.426 F(ailure,)-.1 E F0(SmcOpenConnection)3.759 E F1 .426
(returns NULL, and the rea-)3.759 F(son for f)72 666 Q
(ailure is returned in error_string_ret.)-.1 E .545(Note that SMlib use\
s the ICE protocol to establish a connection with the session manager)72
681.6 R 5.546(.I)-.55 G 3.046(fa)-5.546 G 3.046(nI)-3.046 G .546
(CE con-)-3.046 F .645(nection already e)72 693.6 R .644
(xists between the client and session manager)-.15 F 3.144(,i)-.4 G
3.144(tm)-3.144 G .644(ight be possible for the same ICE con-)-3.144 F
(nection to be used for session management.)72 705.6 Q 2.5<ad33ad>277.36
768 S 0 Cg EP
%%Page: 4 6
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Bold@0 SF 2.5(XS)72 48 S(ession Management Library)-2.5 E
(X11, Release 6.4)226.74 E/F1 10/Times-Roman@0 SF .528(The conte)72 84 R
.528(xt ar)-.15 F .528(gument indicates ho)-.18 F 3.029(ww)-.25 G .529
(illing the client is to share the ICE connection with other protocols.)
-3.029 F .355(If conte)72 96 R .354(xt is NULL, then the caller is al)
-.15 F -.1(wa)-.1 G .354(ys willing to share the connection.).1 F .354
(If conte)5.354 F .354(xt is not NULL, then)-.15 F .568
(the caller is not willing to use a pre)72 108 R .568
(viously opened ICE connection that has a dif)-.25 F .569
(ferent non-NULL conte)-.25 F(xt)-.15 E(associated with it.)72 120 Q
.455(As pre)72 135.6 R .455(viously discussed \(section 3, `)-.25 F .454
(`Understanding SMlib')-.74 F 2.954(sD)-.55 G .454(ependence on ICE')
-2.954 F .454('\), the client will ha)-.74 F .754 -.15(ve t)-.2 H(o).15
E -.1(ke)72 147.6 S .099
(ep track of when ICE connections are created or destro).1 F .1
(yed \(using)-.1 F F0(IceAddConnectionW)3.433 E(atch)-.65 E F1(and)3.433
E F0(IceRe-)3.433 E(mo)72 159.6 Q -.1(ve)-.1 G(ConnectionW).1 E(atch)
-.65 E F1 .147(\), and will ha).833 F .447 -.15(ve t)-.2 H 2.647(oc).15
G(all)-2.647 E F0(IcePr)3.48 E(ocessMessages)-.18 E F1 .147(each time a)
3.48 F F0(select)3.48 E F1(sho)3.48 E .146(ws that there is)-.25 F 1.058
(data to read on an ICE connection.)72 171.6 R -.15(Fo)6.058 G 3.558(rf)
.15 G 1.059(urther information, see the)-3.558 F/F2 10/Times-Italic@0 SF
(Inter)3.559 E 1.059(-Client Exc)-.2 F(hang)-.15 E 3.559(eL)-.1 G(ibr)
-3.559 E(ary)-.15 E F1(stan-)4.392 E(dard.)72 183.6 Q .722
(The callbacks ar)72 199.2 R .722(gument contains a set of callbacks us\
ed to respond to session manager e)-.18 F -.15(ve)-.25 G 3.221(nts. The)
.15 F(mask)3.221 E(ar)72 211.2 Q 1.677
(gument speci\214es which callbacks are set.)-.18 F 1.678
(All of the callbacks speci\214ed in this v)6.677 F 1.678
(ersion of SMlib are)-.15 F(mandatory)72 223.2 Q 6.073(.T)-.65 G 1.073
(he mask ar)-6.073 F 1.073
(gument is necessary in order to maintain backw)-.18 F 1.073
(ards compatibility in future v)-.1 F(er)-.15 E(-)-.2 E
(sions of the library)72 235.2 Q(.)-.65 E(The follo)72 250.8 Q(wing v)
-.25 E(alues may be ORed together to obtain a mask v)-.25 E(alue:)-.25 E
F0(SmcSa)72.833 272.4 Q -.1(ve)-.25 G -1.11(Yo).1 G(urselfPr)1.11 E
(ocMask)-.18 E(SmcDiePr)72.833 284.4 Q(ocMask)-.18 E(SmcSa)72.833 296.4
Q -.1(ve)-.25 G(CompletePr).1 E(ocMask)-.18 E(SmcShutdo)72.833 308.4 Q
(wnCancelledPr)-.1 E(ocMask)-.18 E F1 -.15(Fo)72 330 S 2.948(re).15 G
.448(ach callback, the client can re)-2.948 F .448
(gister a pointer to client data.)-.15 F .449(When SMlib in)5.448 F -.2
(vo)-.4 G -.1(ke).2 G 2.949(st).1 G .449(he callback, it will)-2.949 F
(pass the client data pointer)72 342 Q(.)-.55 E .4 LW 50.4 362.1 50.4
372.1 DL 50.4 360.1 50.4 370.1 DL 55.4 360.6 50.4 360.6 DL 57.4 360.6
52.4 360.6 DL 62.4 360.6 57.4 360.6 DL(typedef struct {)72 375.6 Q
(struct {)108 399.6 Q(SmcSa)144 411.6 Q -.15(ve)-.2 G -1.1(Yo).15 G
(urselfProc callback;)1.1 E(SmPointer client_data;)144 423.6 Q 2.5(}s)
108 435.6 S -2.25 -.2(av e)-2.5 H(_yourself;).2 E(struct {)108 459.6 Q
(SmcDieProc callback;)144 471.6 Q(SmPointer client_data;)144 483.6 Q 2.5
(}d)108 495.6 S(ie;)-2.5 E(struct {)108 519.6 Q(SmcSa)144 531.6 Q -.15
(ve)-.2 G(CompleteProc callback;).15 E(SmPointer client_data;)144 543.6
Q 2.5(}s)108 555.6 S -2.25 -.2(av e)-2.5 H(_complete;).2 E(struct {)108
579.6 Q(SmcShutdo)144 591.6 Q(wnCancelledProc callback;)-.25 E
(SmPointer client_data;)144 603.6 Q 2.5(}s)108 615.6 S(hutdo)-2.5 E
(wn_cancelled;)-.25 E 2.5(}S)72 639.6 S(mcCallbacks;)-2.5 E 50.4 641.7
50.4 651.7 DL 50.4 639.7 50.4 649.7 DL 55.4 653.2 50.4 653.2 DL 57.4
653.2 52.4 653.2 DL 62.4 653.2 57.4 653.2 DL F0 2.5(5.1.1. The)72 685.2
R(Sa)2.5 E .2 -.1(ve Y)-.25 H(ourself Callback)-1.01 E F1 2.5<ad34ad>
277.36 768 S 0 Cg EP
%%Page: 5 7
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Bold@0 SF 2.5(XS)72 48 S(ession Management Library)-2.5 E
(X11, Release 6.4)226.74 E/F1 10/Times-Roman@0 SF(The Sa)72 84 Q .3 -.15
(ve Y)-.2 H(ourself callback is of type)-.95 E F0(SmcSa)3.333 E -.1(ve)
-.25 G -1.11(Yo).1 G(urselfPr)1.11 E(oc)-.18 E F1(.).833 E .4 LW 50.4
100.5 50.4 110.5 DL 50.4 98.5 50.4 108.5 DL 55.4 99 50.4 99 DL 57.4 99
52.4 99 DL 62.4 99 57.4 99 DL(typedef v)72 111.6 Q(oid \(*SmcSa)-.2 E
-.15(ve)-.2 G -1.1(Yo).15 G(urselfProc\)\(\);)1.1 E -.2(vo)72 135.6 S
(id Sa).2 E -.15(ve)-.2 G -1.1(Yo).15 G -1.667(urselfProc \()1.1 F/F2 10
/Times-Italic@0 SF(smc_conn).833 E F1(,)A F2(client_data)2.5 E F1(,).833
E F2(save_type)2.5 E F1(,).833 E F2(shutdown)2.5 E F1(,).833 E F2(inter)
2.5 E(act_style)-.15 E F1(,).833 E F2(fast)2.5 E F1(\)).833 E(SmcConn)82
147.6 Q F2(smc_conn)2.5 E F1(;).833 E(SmPointer)82 159.6 Q F2
(client_data)2.5 E F1(;).833 E(int)82 171.6 Q F2(save_type)2.5 E F1(;)
.833 E(Bool)82 183.6 Q F2(shutdown)2.5 E F1(;).833 E(int)82 195.6 Q F2
(inter)2.5 E(act_style)-.15 E F1(;).833 E(Bool)82 207.6 Q F2(fast)2.5 E
F1(;).833 E F2(smc_conn)72 226.8 Q F1
(The session management connection object.)32.01 E F2(client_data)72
242.4 Q F1(Client data speci\214ed when the callback w)27 E(as re)-.1 E
(gistered.)-.15 E F2(save_type)72 258 Q F1
(Speci\214es the type of information that should be sa)32.57 E -.15(ve)
-.2 G(d.).15 E F2(shutdown)72 273.6 Q F1(Speci\214es if a shutdo)33.66 E
(wn is taking place.)-.25 E F2(inter)72 289.2 Q(act_style)-.15 E F1
(The type of interaction allo)17.71 E(wed with the user)-.25 E(.)-.55 E
F2(fast)72 304.8 Q F1(If)57.55 E F0 -.74(Tr)3.333 G(ue).74 E F1 2.5(,t)
.833 G(he client should sa)-2.5 E .3 -.15(ve i)-.2 H
(ts state as quickly as possible.).15 E 50.4 300.9 50.4 310.9 DL 50.4
298.9 50.4 308.9 DL 55.4 312.4 50.4 312.4 DL 57.4 312.4 52.4 312.4 DL
62.4 312.4 57.4 312.4 DL .322(The session manager sends a `)72 332.4 R
(`Sa)-.74 E .622 -.15(ve Y)-.2 H -1.95(ourself ')-.95 F 2.822('m)-.74 G
.321(essage to a client either to checkpoint it or just before ter)
-2.822 F(-)-.2 E .514(mination so that it can sa)72 344.4 R .814 -.15
(ve i)-.2 H .514(ts state.).15 F .514
(The client responds with zero or more calls to)5.514 F F0(SmcSetPr)
3.848 E(operties)-.18 E F1(to)3.848 E .583
(update the properties indicating ho)72 356.4 R 3.083(wt)-.25 G 3.083
(or)-3.083 G .582(estart the client.)-3.083 F .582
(When all the properties ha)5.582 F .882 -.15(ve b)-.2 H .582
(een set, the client).15 F(calls)72 368.4 Q F0(SmcSa)3.333 E -.1(ve)-.25
G -1.11(Yo).1 G(urselfDone)1.11 E F1(.).833 E .668(If interact_style is)
72 384 R F0(SmInteractStyleNone)4.002 E F1 3.169(,t).833 G .669
(he client must not interact with the user while sa)-3.169 F .669
(ving state.)-.2 F(If)5.669 E 1.094(interact_style is)72 396 R F0
(SmInteractStyleErr)4.427 E(ors)-.18 E F1 3.593(,t).833 G 1.093
(he client may interact with the user only if an error condition)-3.593
F 2.666(arises. If)72 408 R .167(interact_style is)2.667 F F0
(SmInteractStyleAny)3.5 E F1 2.667(,t).833 G .167
(hen the client may interact with the user for an)-2.667 F 2.667(yp)-.15
G(urpose.)-2.667 E .449(Because only one client can interact with the u\
ser at a time, the client must call)72 420 R F0(SmcInteractRequest)3.782
E F1(and)3.782 E -.1(wa)72 432 S 1.305(it for an `).1 F(`Interact')-.74
E 3.805('m)-.74 G 1.305(essage from the session manager)-3.805 F 6.306
(.W)-.55 G 1.306(hen the client is done interacting with the)-6.306 F
(user)72 444 Q 3.282(,i)-.4 G 3.282(tc)-3.282 G(alls)-3.282 E F0
(SmcInteractDone)4.115 E F1 5.782(.T).833 G .781
(he client may only call)-5.782 F F0(SmcInteractRequest)4.114 E F1 .781
(after it recei)4.114 F -.15(ve)-.25 G 3.281(sa`).15 G(`Sa)-4.021 E -.15
(ve)-.2 G -1.1(Yo)72 456 S -1.95(urself ')1.1 F 2.5('m)-.74 G
(essage and before it calls)-2.5 E F0(SmcSa)3.333 E -.1(ve)-.25 G -1.11
(Yo).1 G(urselfDone)1.11 E F1(.).833 E .282(If sa)72 471.6 R -.15(ve)-.2
G .282(_type is).15 F F0(SmSa)3.615 E -.1(ve)-.25 G(Local).1 E F1 2.782
(,t).833 G .282
(he client must update the properties to re\215ect its current state.)
-2.782 F(Speci\214cally)5.283 E(,)-.65 E .355(it should sa)72 483.6 R
.655 -.15(ve e)-.2 H .355(nough information to restore the state as see\
n by the user of this client.).15 F .355(It should not af)5.355 F(fect)
-.25 E .471(the state as seen by other users.)72 495.6 R .471(If sa)
5.471 F -.15(ve)-.2 G .471(_type is).15 F F0(SmSa)3.804 E -.1(ve)-.25 G
(Global).1 E F1 2.971(,t).833 G .471(he user w)-2.971 F .472
(ants the client to commit all of)-.1 F .572
(its data to permanent, globally accessible storage.)72 507.6 R .572
(If sa)5.572 F -.15(ve)-.2 G .572(_type is).15 F F0(SmSa)3.904 E -.1(ve)
-.25 G(Both).1 E F1 3.071(,t).833 G .571(he client should do both)-3.071
F(of these \(it should \214rst commit the data to permanent storage bef\
ore updating its properties\).)72 519.6 Q(Some e)72 535.2 Q
(xamples are as follo)-.15 E(ws:)-.25 E 21.5<8349>72 554.4 S 2.666(faw)
-21.5 G .166(ord processor were sent a `)-2.766 F(`Sa)-.74 E .466 -.15
(ve Y)-.2 H -1.95(ourself ')-.95 F 2.666('w)-.74 G .166(ith a type of)
-2.666 F F0(SmSa)3.5 E -.1(ve)-.25 G(Local).1 E F1 2.667(,i).833 G 2.667
(tc)-2.667 G .167(ould create a tem-)-2.667 F .62(porary \214le that in\
cluded the current contents of the \214le, the location of the cursor)97
566.4 R 3.119(,a)-.4 G .619(nd other aspects)-3.119 F 1.167
(of the current editing session.)97 578.4 R 1.168(It w)6.168 F 1.168
(ould then update its SmRestartCommand property with enough)-.1 F
(information to \214nd this temporary \214le.)97 590.4 Q 21.5<8349>72
606 S 3.733(faw)-21.5 G 1.232(ord processor were sent a `)-3.833 F(`Sa)
-.74 E 1.532 -.15(ve Y)-.2 H -1.95(ourself ')-.95 F 3.732('w)-.74 G
1.232(ith a type of)-3.732 F F0(SmSa)4.565 E -.1(ve)-.25 G(Global).1 E
F1 3.732(,i).833 G 3.732(tw)-3.732 G 1.232(ould simply)-3.832 F(sa)97
618 Q .3 -.15(ve t)-.2 H(he currently edited \214le.).15 E 21.5<8349>72
633.6 S 2.782(faw)-21.5 G .282(ord processor were sent a `)-2.882 F(`Sa)
-.74 E .582 -.15(ve Y)-.2 H -1.95(ourself ')-.95 F 2.782('w)-.74 G .283
(ith a type of)-2.782 F F0(SmSa)3.616 E -.1(ve)-.25 G(Both).1 E F1 2.783
(,i).833 G 2.783(tw)-2.783 G .283(ould \214rst sa)-2.883 F .583 -.15
(ve t)-.2 H(he).15 E .379(currently edited \214le.)97 645.6 R .379(It w)
5.379 F .379(ould then create a temporary \214le with information such \
as the current posi-)-.1 F 1.554
(tion of the cursor and what \214le is being edited.)97 657.6 R(Finally)
6.554 E 4.054(,i)-.65 G 4.054(tw)-4.054 G 1.554
(ould update its SmRestartCommand)-4.154 F
(property with enough information to \214nd the temporary \214le.)97
669.6 Q 1.92(The shutdo)72 685.2 R 1.92(wn ar)-.25 F 1.919
(gument speci\214es whether the system is being shut do)-.18 F 4.419
(wn. The)-.25 F 1.919(interaction is dif)4.419 F(ferent)-.25 E .215
(depending on whether or not shutdo)72 697.2 R .215(wn is set.)-.25 F
.215(If not shutting do)5.215 F .215(wn, the client should sa)-.25 F
.516 -.15(ve i)-.2 H .216(ts state and w).15 F(ait)-.1 E .637(for a `)72
709.2 R(`Sa)-.74 E .937 -.15(ve C)-.2 H(omplete').15 E 3.137('m)-.74 G
3.136(essage. If)-3.137 F .636(shutting do)3.136 F .636
(wn, the client must sa)-.25 F .936 -.15(ve s)-.2 H .636
(tate and then pre).15 F -.15(ve)-.25 G .636(nt interaction).15 F
(until it recei)72 721.2 Q -.15(ve)-.25 G 2.5(se).15 G(ither a `)-2.5 E
(`Die')-.74 E 2.5('o)-.74 G 2.5(ra`)-2.5 G(`Shutdo)-3.24 E
(wn Cancelled.)-.25 E -.74('')-.7 G 2.5<ad35ad>277.36 768 S 0 Cg EP
%%Page: 6 8
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Bold@0 SF 2.5(XS)72 48 S(ession Management Library)-2.5 E
(X11, Release 6.4)226.74 E/F1 10/Times-Roman@0 SF .612(The f)72 84 R
.612(ast ar)-.1 F .613(gument speci\214es that the client should sa)-.18
F .913 -.15(ve i)-.2 H .613(ts state as quickly as possible.).15 F -.15
(Fo)5.613 G 3.113(re).15 G .613(xample, if the)-3.263 F
(session manager kno)72 96 Q(ws that po)-.25 E(wer is about to f)-.25 E
(ail, it w)-.1 E(ould set f)-.1 E(ast to)-.1 E F0 -.74(Tr)3.333 G(ue).74
E F1(.).833 E F0 2.5(5.1.2. The)72 120 R(Die Callback)2.5 E F1
(The Die callback is of type)72 135.6 Q F0(SmcDiePr)3.333 E(oc)-.18 E F1
(.).833 E .4 LW 50.4 152.1 50.4 162.1 DL 50.4 150.1 50.4 160.1 DL 55.4
150.6 50.4 150.6 DL 57.4 150.6 52.4 150.6 DL 62.4 150.6 57.4 150.6 DL
(typedef v)72 163.2 Q(oid \(*SmcDieProc\)\(\);)-.2 E -.2(vo)72 187.2 S
(id DieProc).2 E(\().833 E/F2 10/Times-Italic@0 SF(smc_conn).833 E F1(,)
A F2(client_data)2.5 E F1(\)).833 E(SmcConn)82 199.2 Q F2(smc_conn)2.5 E
F1(;).833 E(SmPointer)82 211.2 Q F2(client_data)2.5 E F1(;).833 E F2
(smc_conn)72 230.4 Q F1(The session management connection object.)32.01
E F2(client_data)72 246 Q F1
(Client data speci\214ed when the callback w)27 E(as re)-.1 E(gistered.)
-.15 E 50.4 242.1 50.4 252.1 DL 50.4 240.1 50.4 250.1 DL 55.4 253.6 50.4
253.6 DL 57.4 253.6 52.4 253.6 DL 62.4 253.6 57.4 253.6 DL .382
(The session manager sends a `)72 273.6 R(`Die')-.74 E 2.882('m)-.74 G
.382(essage to a client when it w)-2.882 F .382(ants it to die.)-.1 F
.382(The client should respond)5.382 F .775(by calling)72 285.6 R F0
(SmcCloseConnection)4.108 E F1 5.775(.A).833 G .776
(session manager that beha)-2.5 F -.15(ve)-.2 G 3.276(sp).15 G .776
(roperly will send a `)-3.276 F(`Sa)-.74 E 1.076 -.15(ve Y)-.2 H -1.95
(ourself ')-.95 F(')-.74 E(message before the `)72 297.6 Q(`Die')-.74 E
2.5('m)-.74 G(essage.)-2.5 E F0 2.5(5.1.3. The)72 321.6 R(Sa)2.5 E .2
-.1(ve C)-.25 H(omplete Callback).1 E F1(The Sa)72 337.2 Q .3 -.15(ve C)
-.2 H(omplete callback is of type).15 E F0(SmcSa)3.333 E -.1(ve)-.25 G
(CompletePr).1 E(oc)-.18 E F1(.).833 E 50.4 353.7 50.4 363.7 DL 50.4
351.7 50.4 361.7 DL 55.4 352.2 50.4 352.2 DL 57.4 352.2 52.4 352.2 DL
62.4 352.2 57.4 352.2 DL(typedef v)72 364.8 Q(oid \(*SmcSa)-.2 E -.15
(ve)-.2 G(CompleteProc\)\(\);).15 E -.2(vo)72 388.8 S(id Sa).2 E -.15
(ve)-.2 G -1.667(CompleteProc \().15 F F2(smc_conn).833 E F1(,)A F2
(client_data)2.5 E F1(\)).833 E(SmcConn)82 400.8 Q F2(smc_conn)2.5 E F1
(;).833 E(SmPointer)82 412.8 Q F2(client_data)2.5 E F1(;).833 E F2
(smc_conn)72 432 Q F1(The session management connection object.)32.01 E
F2(client_data)72 447.6 Q F1
(Client data speci\214ed when the callback w)27 E(as re)-.1 E(gistered.)
-.15 E 50.4 443.7 50.4 453.7 DL 50.4 441.7 50.4 451.7 DL 55.4 455.2 50.4
455.2 DL 57.4 455.2 52.4 455.2 DL 62.4 455.2 57.4 455.2 DL .788(When th\
e session manager is done with a checkpoint, it will send each of the c\
lients a `)72 475.2 R(`Sa)-.74 E 1.087 -.15(ve C)-.2 H(omplete').15 E(')
-.74 E 2.5(message. The)72 487.2 R
(client is then free to change its state.)2.5 E F0 2.5(5.1.4. The)72
511.2 R(Shutdo)2.5 E(wn Cancelled Callback)-.1 E F1(The Shutdo)72 526.8
Q(wn Cancelled callback is of type)-.25 E F0(SmcShutdo)3.333 E
(wnCancelledPr)-.1 E(oc)-.18 E F1(.).833 E 50.4 543.3 50.4 553.3 DL 50.4
541.3 50.4 551.3 DL 55.4 541.8 50.4 541.8 DL 57.4 541.8 52.4 541.8 DL
62.4 541.8 57.4 541.8 DL(typedef v)72 554.4 Q(oid \(*SmcShutdo)-.2 E
(wnCancelledProc\)\(\);)-.25 E -.2(vo)72 578.4 S(id Shutdo).2 E -1.667
(wnCancelledProc \()-.25 F F2(smc_conn).833 E F1(,)A F2(client_data)2.5
E F1(\)).833 E(SmcConn)82 590.4 Q F2(smc_conn)2.5 E F1(;).833 E
(SmPointer)82 602.4 Q F2(client_data)2.5 E F1(;).833 E F2(smc_conn)72
621.6 Q F1(The session management connection object.)32.01 E F2
(client_data)72 637.2 Q F1(Client data speci\214ed when the callback w)
27 E(as re)-.1 E(gistered.)-.15 E 50.4 633.3 50.4 643.3 DL 50.4 631.3
50.4 641.3 DL 55.4 644.8 50.4 644.8 DL 57.4 644.8 52.4 644.8 DL 62.4
644.8 57.4 644.8 DL .013(The session manager sends a `)72 664.8 R
(`Shutdo)-.74 E .013(wn Cancelled')-.25 F 2.513('m)-.74 G .013
(essage when the user cancelled the shutdo)-2.513 F .013(wn during)-.25
F .821(an interaction \(see section 5.5, `)72 676.8 R .821
(`Interacting W)-.74 F .821(ith the User')-.4 F 3.321('\). The)-.74 F
.82(client can no)3.321 F 3.32(wc)-.25 G .82(ontinue as if the shut-)
-3.32 F(do)72 688.8 Q .765(wn had ne)-.25 F -.15(ve)-.25 G 3.266(rh).15
G 3.266(appened. If)-3.266 F .766(the client has not called)3.266 F F0
(SmcSa)4.099 E -.1(ve)-.25 G -1.11(Yo).1 G(urselfDone)1.11 E F1 .766
(yet, it can either abort the)4.099 F(sa)72 700.8 Q .83 -.15(ve a)-.2 H
.53(nd then call).15 F F0(SmcSa)3.863 E -.1(ve)-.25 G -1.11(Yo).1 G
(urselfDone)1.11 E F1 .529(with the success ar)3.862 F .529
(gument set to)-.18 F F0 -.25(Fa)3.862 G(lse).25 E F1 3.029(,o).833 G
3.029(ri)-3.029 G 3.029(tc)-3.029 G .529(an continue with)-3.029 F .635
(the sa)72 712.8 R .935 -.15(ve a)-.2 H .636(nd then call).15 F F0
(SmcSa)3.969 E -.1(ve)-.25 G -1.11(Yo).1 G(urselfDone)1.11 E F1 .636
(with the success ar)3.969 F .636
(gument set to re\215ect the outcome of the)-.18 F(sa)72 724.8 Q -.15
(ve)-.2 G(.).15 E 2.5<ad36ad>277.36 768 S 0 Cg EP
%%Page: 7 9
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Bold@0 SF 2.5(XS)72 48 S(ession Management Library)-2.5 E
(X11, Release 6.4)226.74 E 2.5(5.2. Closing)72 84 R(the Connection)2.5 E
/F1 10/Times-Roman@0 SF 1.6 -.8(To c)72 99.6 T
(lose a connection with a session manager).8 E 2.5(,u)-.4 G(se)-2.5 E F0
(SmcCloseConnection)3.333 E F1(.).833 E .4 LW 50.4 119.7 50.4 129.7 DL
50.4 117.7 50.4 127.7 DL 55.4 118.2 50.4 118.2 DL 57.4 118.2 52.4 118.2
DL 62.4 118.2 57.4 118.2 DL(SmcCloseStatus SmcCloseConnection)72 130.8 Q
(\().833 E/F2 10/Times-Italic@0 SF(smc_conn).833 E F1(,)A F2(count)2.5 E
F1(,).833 E F2 -.37(re)2.5 G(ason_msgs).37 E F1(\)).833 E(SmcConn)82
142.8 Q F2(smc_conn)2.5 E F1(;).833 E(int)82 154.8 Q F2(count)2.5 E F1
(;).833 E(char **)82 166.8 Q F2 -.37(re)C(ason_msgs).37 E F1(;).833 E F2
(smc_conn)72 186 Q F1(The session management connection object.)32.01 E
F2(count)72 201.6 Q F1(The number of reason messages.)49.78 E F2 -.37
(re)72 217.2 S(ason_msgs).37 E F1
(The reasons for closing the connection.)20.15 E 50.4 213.3 50.4 223.3
DL 50.4 211.3 50.4 221.3 DL 55.4 224.8 50.4 224.8 DL 57.4 224.8 52.4
224.8 DL 62.4 224.8 57.4 224.8 DL .138(The reason_msgs ar)72 244.8 R
.138(gument will most lik)-.18 F .138(ely be NULL if resignation is e)
-.1 F .137(xpected by the client.)-.15 F .137(Otherwise, it)5.137 F .485
(contains a list of null-terminated Compound T)72 256.8 R -.15(ex)-.7 G
2.985(ts).15 G .485(trings representing the reason for termination.)
-2.985 F .485(The ses-)5.485 F
(sion manager should display these reason messages to the user)72 268.8
Q(.)-.55 E .191(Note that SMlib used the ICE protocol to establish a co\
nnection with the session manager)72 284.4 R 2.691(,a)-.4 G .191(nd v)
-2.691 F .191(arious pro-)-.25 F .339
(tocols other than session management may be acti)72 296.4 R .639 -.15
(ve o)-.25 H 2.839(nt).15 G .339(he ICE connection.)-2.839 F(When)5.339
E F0(SmcCloseConnection)3.672 E F1 1.055
(is called, the ICE connection will be closed only if all protocols ha)
72 308.4 R 1.354 -.15(ve b)-.2 H 1.054(een shutdo).15 F 1.054
(wn on the connection.)-.25 F .325(Check the ICElib standard for)72
320.4 R F0(IceAddConnectionW)3.659 E(atch)-.65 E F1(and)3.659 E F0
(IceRemo)3.659 E -.1(ve)-.1 G(ConnectionW).1 E(atch)-.65 E F1 .326
(to learn ho)3.659 F(w)-.25 E .203(to set up a callback to be in)72
332.4 R -.2(vo)-.4 G -.1(ke).2 G 2.703(de).1 G .203
(ach time an ICE connection is opened or closed.)-2.703 F -.8(Ty)5.202 G
.202(pically this callback).8 F(adds/remo)72 344.4 Q -.15(ve)-.15 G
3.658(st).15 G 1.158(he ICE \214le descriptor from the list of acti)
-3.658 F 1.458 -.15(ve d)-.25 H 1.158(escriptors to call).15 F F0
(select)4.492 E F1 1.159(on \(or calls)4.492 F F0(XtA)4.492 E(p-)-.25 E
(pAddInput)72 356.4 Q F1(or)3.333 E F0(XtRemo)3.333 E -.1(ve)-.1 G
(Input).1 E F1(\).).833 E F0(SmcCloseConnection)72.833 372 Q F1
(returns one of the follo)3.333 E(wing v)-.25 E(alues:)-.25 E<83>72
387.6 Q F0(SmcClosedNo)22.333 E(w)-.1 E F1 3.19<ad74>4.023 G .69
(he ICE connection w)-3.19 F .69(as closed at this time, the w)-.1 F
.689(atch procedures were in)-.1 F -.2(vo)-.4 G -.1(ke).2 G(d,).1 E
(and the connection w)97 399.6 Q(as freed.)-.1 E<83>72 415.2 Q F0
(SmcClosedASAP)22.333 E F1 2.71<ad61>3.543 G 2.71(nI)-2.71 G 2.71(Oe)
-2.71 G .211(rror had occurred on the connection, b)-2.71 F(ut)-.2 E F0
(SmcCloseConnection)3.544 E F1 .211(is being)3.544 F .734
(called within a nested)97 427.2 R F0(IcePr)4.067 E(ocessMessages)-.18 E
F1 5.734(.T).833 G .733(he w)-5.734 F .733(atch procedures ha)-.1 F
1.033 -.15(ve b)-.2 H .733(een in).15 F -.2(vo)-.4 G -.1(ke).2 G 3.233
(da).1 G 3.233(tt)-3.233 G .733(his time,)-3.233 F -.2(bu)97 439.2 S
2.669(tt).2 G .169
(he connection will be freed as soon as possible \(when the nesting le)
-2.669 F -.15(ve)-.25 G 2.67(lr).15 G .17(eaches zero and)-2.67 F F0
(IcePr)3.503 E(o-)-.18 E(cessMessages)97 451.2 Q F1(returns a status of)
3.333 E F0(IcePr)3.333 E(ocessMessagesConnectionClosed)-.18 E F1(\).)
.833 E<83>72 466.8 Q F0(SmcConnectionInUse)22.333 E F1 2.542<ad74>3.375
G .042(he connection w)-2.542 F .041
(as not closed at this time, because it is being used by other)-.1 F
(acti)97 478.8 Q .3 -.15(ve p)-.25 H(rotocols.).15 E F0 2.5
(5.3. Modifying)72 502.8 R(Callbacks)2.5 E F1 1.6 -.8(To m)72 518.4 T
(odify callbacks set up in).8 E F0(SmcOpenConnection)3.333 E F1 2.5(,u)
.833 G(se)-2.5 E F0(SmcModifyCallbacks)3.333 E F1(.).833 E 50.4 534.9
50.4 544.9 DL 50.4 532.9 50.4 542.9 DL 55.4 533.4 50.4 533.4 DL 57.4
533.4 52.4 533.4 DL 62.4 533.4 57.4 533.4 DL -.2(vo)72 546 S
(id SmcModifyCallbacks).2 E(\().833 E F2(smc_conn).833 E F1(,)A F2(mask)
2.5 E F1(,).833 E F2(callbac)2.5 E(ks)-.2 E F1(\)).833 E(SmcConn)82 558
Q F2(smc_conn)2.5 E F1(;).833 E(unsigned long)82 570 Q F2(mask)2.5 E F1
(;).833 E(SmcCallbacks *)82 582 Q F2(callbac)A(ks)-.2 E F1(;).833 E F2
(smc_conn)72 601.2 Q F1(The session management connection object.)32.01
E F2(mask)72 616.8 Q F1 2.5(Am)51.45 G
(ask indicating which callbacks to modify)-2.5 E(.)-.65 E F2(callbac)72
632.4 Q(ks)-.2 E F1(The ne)34.43 E 2.5(wc)-.25 G(allbacks.)-2.5 E 50.4
628.5 50.4 638.5 DL 50.4 626.5 50.4 636.5 DL 55.4 640 50.4 640 DL 57.4
640 52.4 640 DL 62.4 640 57.4 640 DL(When specifying a v)72 660 Q
(alue for the mask ar)-.25 E(gument, the follo)-.18 E(wing v)-.25 E
(alues may be ORed together:)-.25 E F0(SmcSa)72.833 681.6 Q -.1(ve)-.25
G -1.11(Yo).1 G(urselfPr)1.11 E(ocMask)-.18 E(SmcDiePr)72.833 693.6 Q
(ocMask)-.18 E(SmcSa)72.833 705.6 Q -.1(ve)-.25 G(CompletePr).1 E
(ocMask)-.18 E(SmcShutdo)72.833 717.6 Q(wnCancelledPr)-.1 E(ocMask)-.18
E F1 2.5<ad37ad>277.36 768 S 0 Cg EP
%%Page: 8 10
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Bold@0 SF 2.5(XS)72 48 S(ession Management Library)-2.5 E
(X11, Release 6.4)226.74 E 2.5(5.4. Setting,)72 84 R
(Deleting, and Retrie)2.5 E(ving Session Management Pr)-.15 E(operties)
-.18 E/F1 10/Times-Roman@0 SF 1.6 -.8(To s)72 99.6 T
(et session management properties for this client, use).8 E F0(SmcSetPr)
3.333 E(operties)-.18 E F1(.).833 E .4 LW 50.4 116.1 50.4 126.1 DL 50.4
114.1 50.4 124.1 DL 55.4 114.6 50.4 114.6 DL 57.4 114.6 52.4 114.6 DL
62.4 114.6 57.4 114.6 DL -.2(vo)72 127.2 S(id SmcSetProperties).2 E(\()
.833 E/F2 10/Times-Italic@0 SF(smc_conn).833 E F1(,)A F2(num_pr)2.5 E
(ops)-.45 E F1(,).833 E F2(pr)2.5 E(ops)-.45 E F1(\)).833 E(SmcConn)82
139.2 Q F2(smc_conn)2.5 E F1(;).833 E(int)82 151.2 Q F2(num_pr)2.5 E
(ops)-.45 E F1(;).833 E(SmProp **)82 163.2 Q F2(pr)A(ops)-.45 E F1(;)
.833 E F2(smc_conn)72 182.4 Q F1
(The session management connection object.)32.01 E F2(num_pr)72 198 Q
(ops)-.45 E F1(The number of properties.)27.45 E F2(pr)72 213.6 Q(ops)
-.45 E F1(The list of properties to set.)49.67 E 50.4 209.7 50.4 219.7
DL 50.4 207.7 50.4 217.7 DL 55.4 221.2 50.4 221.2 DL 57.4 221.2 52.4
221.2 DL 62.4 221.2 57.4 221.2 DL .68
(The properties are speci\214ed as an array of property pointers.)72
241.2 R(Pre)5.68 E .68(viously set property v)-.25 F .68(alues may be o)
-.25 F -.15(ve)-.15 G -.2(r-).15 G 1.362(written using the)72 253.2 R F0
(SmcSetPr)4.695 E(operties)-.18 E F1 3.862(function. Note)4.695 F 1.362
(that the session manager is not e)3.862 F 1.361(xpected to restore)-.15
F .05(property v)72 265.2 R .05(alues when the session is restarted.)
-.25 F .051
(Because of this, clients should not try to use the session man-)5.05 F
(ager as a database for storing application speci\214c state.)72 277.2 Q
-.15(Fo)72 292.8 S 3.954(rad).15 G 1.454
(escription of session management properties and the)-3.954 F F0(SmPr)
4.787 E(op)-.18 E F1 1.454(structure, see section 7, `)4.787 F(`Session)
-.74 E(Management Properties.)72 304.8 Q -.74('')-.7 G 1.6 -.8(To d)72
332.4 T(elete properties pre).8 E(viously set by the client, use)-.25 E
F0(SmcDeletePr)3.333 E(operties)-.18 E F1(.).833 E 50.4 348.9 50.4 358.9
DL 50.4 346.9 50.4 356.9 DL 55.4 347.4 50.4 347.4 DL 57.4 347.4 52.4
347.4 DL 62.4 347.4 57.4 347.4 DL -.2(vo)72 360 S
(id SmcDeleteProperties).2 E(\().833 E F2(smc_conn).833 E F1(,)A F2
(num_pr)2.5 E(ops)-.45 E F1(,).833 E F2(pr)2.5 E(op_names)-.45 E F1(\))
.833 E(SmcConn)82 372 Q F2(smc_conn)2.5 E F1(;).833 E(int)82 384 Q F2
(num_pr)2.5 E(ops)-.45 E F1(;).833 E(char **)82 396 Q F2(pr)A(op_names)
-.45 E F1(;).833 E F2(smc_conn)72 415.2 Q F1
(The session management connection object.)32.01 E F2(num_pr)72 430.8 Q
(ops)-.45 E F1(The number of properties.)27.45 E F2(pr)72 446.4 Q
(op_names)-.45 E F1(The list of properties to delete.)23.01 E 50.4 442.5
50.4 452.5 DL 50.4 440.5 50.4 450.5 DL 55.4 454 50.4 454 DL 57.4 454
52.4 454 DL 62.4 454 57.4 454 DL 1.6 -.8(To g)72 477.6 T
(et properties pre).8 E(viously stored by the client, use)-.25 E F0
(SmcGetPr)3.333 E(operties)-.18 E F1(.).833 E 50.4 494.1 50.4 504.1 DL
50.4 492.1 50.4 502.1 DL 55.4 492.6 50.4 492.6 DL 57.4 492.6 52.4 492.6
DL 62.4 492.6 57.4 492.6 DL(Status SmcGetProperties)72 505.2 Q(\().833 E
F2(smc_conn).833 E F1(,)A F2(pr)2.5 E(op_r)-.45 E(eply_pr)-.37 E(oc)-.45
E F1(,).833 E F2(client_data)2.5 E F1(\)).833 E(SmcConn)82 517.2 Q F2
(smc_conn)2.5 E F1(;).833 E(SmcPropReplyProc)82 529.2 Q F2(pr)2.5 E
(op_r)-.45 E(eply_pr)-.37 E(oc)-.45 E F1(;).833 E(SmPointer)82 541.2 Q
F2(client_data)2.5 E F1(;).833 E F2(smc_conn)72 560.4 Q F1
(The session management connection object.)32.01 E F2(pr)72 576 Q(op_r)
-.45 E(eply_pr)-.37 E(oc)-.45 E F1(The callback to be in)5.5 E -.2(vo)
-.4 G -.1(ke).2 G 2.5(dw).1 G(hen the properties reply comes back.)-2.5
E F2(client_data)72 591.6 Q F1
(This pointer to client data will be passed to the)27 E F0(SmcPr)3.333 E
(opReplyPr)-.18 E(oc)-.18 E F1(callback.)3.333 E 50.4 587.7 50.4 597.7
DL 50.4 585.7 50.4 595.7 DL 55.4 599.2 50.4 599.2 DL 57.4 599.2 52.4
599.2 DL 62.4 599.2 57.4 599.2 DL(The return v)72 619.2 Q(alue of)-.25 E
F0(SmcGetPr)3.333 E(operties)-.18 E F1(is zero for f)3.333 E
(ailure and a positi)-.1 E .3 -.15(ve v)-.25 H(alue for success.)-.1 E
1.779(Note that the library does not block until the properties reply c\
omes back.)72 634.8 R(Rather)6.78 E 4.28(,ac)-.4 G 1.78(allback of type)
-4.28 F F0(SmcPr)72.833 646.8 Q(opReplyPr)-.18 E(oc)-.18 E F1(is in)
3.333 E -.2(vo)-.4 G -.1(ke).2 G 2.5(dw).1 G(hen the data is ready)-2.5
E(.)-.65 E 50.4 663.3 50.4 673.3 DL 50.4 661.3 50.4 671.3 DL 55.4 661.8
50.4 661.8 DL 57.4 661.8 52.4 661.8 DL 62.4 661.8 57.4 661.8 DL 2.5
<ad38ad>277.36 768 S 0 Cg EP
%%Page: 9 11
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Bold@0 SF 2.5(XS)72 48 S(ession Management Library)-2.5 E
(X11, Release 6.4)226.74 E/F1 10/Times-Roman@0 SF(typedef v)72 84 Q
(oid \(*SmcPropReplyProc\)\(\);)-.2 E -.2(vo)72 108 S(id PropReplyProc)
.2 E(\().833 E/F2 10/Times-Italic@0 SF(smc_conn).833 E F1(,)A F2
(client_data)2.5 E F1(,).833 E F2(num_pr)2.5 E(ops)-.45 E F1(,).833 E F2
(pr)2.5 E(ops)-.45 E F1(\)).833 E(SmcConn)82 120 Q F2(smc_conn)2.5 E F1
(;).833 E(SmPointer)82 132 Q F2(client_data)2.5 E F1(;).833 E(int)82 144
Q F2(num_pr)2.5 E(ops)-.45 E F1(;).833 E(SmProp **)82 156 Q F2(pr)A(ops)
-.45 E F1(;).833 E F2(smc_conn)72 175.2 Q F1
(The session management connection object.)32.01 E F2(client_data)72
190.8 Q F1(Client data speci\214ed when the callback w)27 E(as re)-.1 E
(gistered.)-.15 E F2(num_pr)72 206.4 Q(ops)-.45 E F1
(The number of properties returned.)27.45 E F2(pr)72 222 Q(ops)-.45 E F1
(The list of properties returned.)49.67 E .4 LW 50.4 218.1 50.4 228.1 DL
50.4 216.1 50.4 226.1 DL 55.4 229.6 50.4 229.6 DL 57.4 229.6 52.4 229.6
DL 62.4 229.6 57.4 229.6 DL 2.443 -.8(To f)72 249.6 T .843
(ree each property).8 F 3.342(,u)-.65 G(se)-3.342 E F0(SmFr)4.175 E
(eePr)-.18 E(operty)-.18 E F1 .842(\(see section 8, `)4.175 F .842
(`Freeing Data')-.74 F 3.342('\). T)-.74 F 3.342(of)-.8 G .842
(ree the actual array of)-3.342 F(pointers, use)72 261.6 Q F0(fr)3.333 E
(ee)-.18 E F1(.).833 E F0 2.5(5.5. Interacting)72 285.6 R -.18(Wi)2.5 G
(th the User).18 E F1 .279(After recei)72 301.2 R .279(ving a `)-.25 F
(`Sa)-.74 E .579 -.15(ve Y)-.2 H -1.95(ourself ')-.95 F 2.779('m)-.74 G
.279(essage with an interact_style of)-2.779 F F0(SmInteractStyleErr)
3.613 E(ors)-.18 E F1(or)3.613 E F0(SmInter)3.613 E(-)-.37 E
(actStyleAny)72 313.2 Q F1 2.769(,t).833 G .269
(he client may choose to interact with the user)-2.769 F 5.269(.B)-.55 G
.268(ecause only one client can interact with the)-5.269 F .445
(user at a time, the client must call)72 325.2 R F0(SmcInteractRequest)
3.778 E F1 .446(and w)3.779 F .446(ait for an `)-.1 F(`Interact')-.74 E
2.946('m)-.74 G .446(essage from the ses-)-2.946 F(sion manager)72 337.2
Q(.)-.55 E 50.4 353.7 50.4 363.7 DL 50.4 351.7 50.4 361.7 DL 55.4 352.2
50.4 352.2 DL 57.4 352.2 52.4 352.2 DL 62.4 352.2 57.4 352.2 DL
(Status SmcInteractRequest)72 364.8 Q(\().833 E F2(smc_conn).833 E F1(,)
A F2(dialo)2.5 E(g_type)-.1 E F1(,).833 E F2(inter)2.5 E(act_pr)-.15 E
(oc)-.45 E F1(,).833 E F2(client_data)2.5 E F1(\)).833 E(SmcConn)82
376.8 Q F2(smc_conn)2.5 E F1(;).833 E(int)82 388.8 Q F2(dialo)2.5 E
(g_type)-.1 E F1(;).833 E(SmcInteractProc)82 400.8 Q F2(inter)2.5 E
(act_pr)-.15 E(oc)-.45 E F1(;).833 E(SmPointer)82 412.8 Q F2
(client_data)2.5 E F1(;).833 E F2(smc_conn)72 432 Q F1
(The session management connection object.)32.01 E F2(dialo)72 447.6 Q
(g_type)-.1 E F1
(The type of dialog the client wishes to present to the user)24.88 E(.)
-.55 E F2(inter)72 463.2 Q(act_pr)-.15 E(oc)-.45 E F1 .911
(The callback to be in)18.16 F -.2(vo)-.4 G -.1(ke).2 G 3.411(dw).1 G
.911(hen the `)-3.411 F(`Interact')-.74 E 3.411('m)-.74 G .911
(essage arri)-3.411 F -.15(ve)-.25 G 3.411(sf).15 G .91
(rom the session man-)-3.411 F(ager)144 475.2 Q(.)-.55 E F2(client_data)
72 490.8 Q F1 1.664(This pointer to client data will be passed to the)27
F F0(SmcInteractPr)4.997 E(oc)-.18 E F1 1.665(callback when the)4.997 F
-.74(``)144 502.8 S(Interact').74 E 2.5('m)-.74 G(essage arri)-2.5 E
-.15(ve)-.25 G(s.).15 E 50.4 498.9 50.4 508.9 DL 50.4 496.9 50.4 506.9
DL 55.4 510.4 50.4 510.4 DL 57.4 510.4 52.4 510.4 DL 62.4 510.4 57.4
510.4 DL(The return v)72 530.4 Q(alue of)-.25 E F0(SmcInteractRequest)
3.333 E F1(is zero for f)3.333 E(ailure and a positi)-.1 E .3 -.15(ve v)
-.25 H(alue for success.)-.1 E .161(The dialog_type ar)72 546 R .161
(gument speci\214es either)-.18 F F0(SmDialogErr)3.493 E(or)-.18 E F1
2.66(,i).833 G .16(ndicating that the client w)-2.66 F .16
(ants to start an error)-.1 F(dialog, or)72 558 Q F0(SmDialogNormal)
3.333 E F1 2.5(,m).833 G
(eaning that the client wishes to start a nonerror dialog.)-2.5 E .048
(Note that if a shutdo)72 573.6 R .048
(wn is in progress, the user may ha)-.25 F .348 -.15(ve t)-.2 H .048
(he option of cancelling the shutdo).15 F 2.548(wn. If)-.25 F .048
(the shut-)2.548 F(do)72 585.6 Q 1.383
(wn is cancelled, the clients that ha)-.25 F 1.683 -.15(ve n)-.2 H 1.383
(ot interacted yet with the user will recei).15 F 1.683 -.15(ve a `)-.25
H(`Shutdo)-.59 E 1.382(wn Can-)-.25 F(celled')72 597.6 Q 2.5('m)-.74 G
(essage instead of the `)-2.5 E(`Interact')-.74 E 2.5('m)-.74 G(essage.)
-2.5 E(The)72 613.2 Q F0(SmcInteractPr)5.054 E(oc)-.18 E F1 1.721
(callback will be in)5.054 F -.2(vo)-.4 G -.1(ke).2 G 4.221(dw).1 G
1.721(hen the `)-4.221 F(`Interact')-.74 E 4.221('m)-.74 G 1.721
(essage arri)-4.221 F -.15(ve)-.25 G 4.221(sf).15 G 1.721
(rom the session)-4.221 F(manager)72 625.2 Q(.)-.55 E 50.4 641.7 50.4
651.7 DL 50.4 639.7 50.4 649.7 DL 55.4 640.2 50.4 640.2 DL 57.4 640.2
52.4 640.2 DL 62.4 640.2 57.4 640.2 DL(typedef v)72 652.8 Q
(oid \(*SmcInteractProc\)\(\);)-.2 E -.2(vo)72 676.8 S(id InteractProc)
.2 E(\().833 E F2(smc_conn).833 E F1(,)A F2(client_data)2.5 E F1(\)).833
E(SmcConn)82 688.8 Q F2(smc_conn)2.5 E F1(;).833 E(SmPointer)82 700.8 Q
F2(client_data)2.5 E F1(;).833 E 2.5<ad39ad>277.36 768 S 0 Cg EP
%%Page: 10 12
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Bold@0 SF 2.5(XS)72 48 S(ession Management Library)-2.5 E
(X11, Release 6.4)226.74 E/F1 10/Times-Italic@0 SF(smc_conn)72 84 Q/F2
10/Times-Roman@0 SF(The session management connection object.)32.01 E F1
(client_data)72 99.6 Q F2(Client data speci\214ed when the callback w)27
E(as re)-.1 E(gistered.)-.15 E .4 LW 50.4 95.7 50.4 105.7 DL 50.4 93.7
50.4 103.7 DL 55.4 107.2 50.4 107.2 DL 57.4 107.2 52.4 107.2 DL 62.4
107.2 57.4 107.2 DL
(After interacting with the user \(in response to an `)72 130.8 Q
(`Interact')-.74 E 2.5('m)-.74 G(essage\), you should call)-2.5 E F0
(SmcInteractDone)3.333 E F2(.).833 E 50.4 147.3 50.4 157.3 DL 50.4 145.3
50.4 155.3 DL 55.4 145.8 50.4 145.8 DL 57.4 145.8 52.4 145.8 DL 62.4
145.8 57.4 145.8 DL -.2(vo)72 158.4 S(id SmcInteractDone).2 E(\().833 E
F1(smc_conn).833 E F2(,)A F1(cancel_shutdown)2.5 E F2(\)).833 E(SmcConn)
82 170.4 Q F1(smc_conn)2.5 E F2(;).833 E(Bool)82 182.4 Q F1
(cancel_shutdown)2.5 E F2(;).833 E F1(smc_conn)72 201.6 Q F2
(The session management connection object.)32.01 E F1(cancel_shutdown)72
217.2 Q F2(If)144 229.2 Q F0 -.74(Tr)3.333 G(ue).74 E F2 2.5(,i).833 G
(ndicates that the user requests that the entire shutdo)-2.5 E
(wn be cancelled.)-.25 E 50.4 225.3 50.4 235.3 DL 50.4 223.3 50.4 233.3
DL 55.4 236.8 50.4 236.8 DL 57.4 236.8 52.4 236.8 DL 62.4 236.8 57.4
236.8 DL .94(The cancel_shutdo)72 256.8 R .939(wn ar)-.25 F .939
(gument may only be)-.18 F F0 -.74(Tr)4.272 G(ue).74 E F2 .939
(if the corresponding `)4.272 F(`Sa)-.74 E 1.239 -.15(ve Y)-.2 H -1.95
(ourself ')-.95 F 3.439('s)-.74 G(peci\214ed)-3.439 E F0 -.74(Tr)4.272 G
(ue).74 E F2(for shutdo)72 268.8 Q(wn and)-.25 E F0(SmInteractStyleErr)
3.333 E(ors)-.18 E F2(or)3.333 E F0(SmInteractStyleAny)3.333 E F2
(for the interact_style.)3.333 E F0 2.5(5.6. Requesting)72 292.8 R 2.5
(aS)2.5 G -2.1 -.25(av e)-2.5 H -1.11(Yo)2.75 G(urself)1.11 E F2 1.6 -.8
(To r)72 308.4 T(equest a checkpoint from the session manager).8 E 2.5
(,u)-.4 G(se)-2.5 E F0(SmcRequestSa)3.333 E -.1(ve)-.25 G -1.11(Yo).1 G
(urself)1.11 E F2(.).833 E 50.4 324.9 50.4 334.9 DL 50.4 322.9 50.4
332.9 DL 55.4 323.4 50.4 323.4 DL 57.4 323.4 52.4 323.4 DL 62.4 323.4
57.4 323.4 DL -.2(vo)72 336 S(id SmcRequestSa).2 E -.15(ve)-.2 G -1.1
(Yo).15 G -1.667(urself \()1.1 F F1(smc_conn).833 E F2(,)A F1(save_type)
2.5 E F2(,).833 E F1(shutdown)2.5 E F2(,).833 E F1(inter)2.5 E
(act_style)-.15 E F2(,).833 E F1(fast)2.5 E F2(,).833 E F1(global)2.5 E
F2(\)).833 E(SmcConn)82 348 Q F1(smc_conn)2.5 E F2(;).833 E(int)82 360 Q
F1(save_type)2.5 E F2(;).833 E(Bool)82 372 Q F1(shutdown)2.5 E F2(;).833
E(int)82 384 Q F1(inter)2.5 E(act_style)-.15 E F2(;).833 E(Bool)82 396 Q
F1(fast)2.5 E F2(;).833 E(Bool)82 408 Q F1(global)2.5 E F2(;).833 E F1
(smc_conn)72 427.2 Q F2(The session management connection object.)32.01
E F1(save_type)72 442.8 Q F2
(Speci\214es the type of information that should be sa)32.57 E -.15(ve)
-.2 G(d.).15 E F1(shutdown)72 458.4 Q F2(Speci\214es if a shutdo)33.66 E
(wn is taking place.)-.25 E F1(inter)72 474 Q(act_style)-.15 E F2
(The type of interaction allo)17.71 E(wed with the user)-.25 E(.)-.55 E
F1(fast)72 489.6 Q F2(If)57.55 E F0 -.74(Tr)3.333 G(ue).74 E F2 2.5(,t)
.833 G(he client should sa)-2.5 E .3 -.15(ve i)-.2 H
(ts state as quickly as possible.).15 E F1(global)72 505.2 Q F2
(Controls who gets the `)46.44 E(`Sa)-.74 E .3 -.15(ve Y)-.2 H(ourself.)
-.95 E -.74('')-.7 G 50.4 501.3 50.4 511.3 DL 50.4 499.3 50.4 509.3 DL
55.4 512.8 50.4 512.8 DL 57.4 512.8 52.4 512.8 DL 62.4 512.8 57.4 512.8
DL .845(The sa)72 532.8 R -.15(ve)-.2 G .845(_type, shutdo).15 F .845
(wn, interact_style, and f)-.25 F .845(ast ar)-.1 F .845
(guments are discussed in more detail in section 5.1.1,)-.18 F -.74(``)
72 544.8 S(The Sa).74 E .3 -.15(ve Y)-.2 H(ourself Callback.)-.95 E -.74
('')-.7 G .335(If global is set to)72 560.4 R F0 -.74(Tr)3.668 G(ue).74
E F2 2.835(,t).833 G .335(hen the resulting `)-2.835 F(`Sa)-.74 E .635
-.15(ve Y)-.2 H -1.95(ourself ')-.95 F 2.835('s)-.74 G .334
(hould be sent to all clients in the session.)-2.835 F -.15(Fo)5.334 G
(r).15 E -.15(ex)72 572.4 S .959(ample, a v).15 F .959
(endor of a Uninterruptible Po)-.15 F .959
(wer Supply \(UPS\) might include a Session Management client)-.25 F
(that w)72 584.4 Q(ould monitor the status of the UPS and generate a f)
-.1 E(ast shutdo)-.1 E(wn if the po)-.25 E(wer is about to be lost.)-.25
E(If global is set to)72 600 Q F0 -.25(Fa)3.333 G(lse).25 E F2 2.5(,t)
.833 G(hen the `)-2.5 E(`Sa)-.74 E .3 -.15(ve Y)-.2 H -1.95(ourself ')
-.95 F 2.5('s)-.74 G
(hould only be sent to the client that requested it.)-2.5 E F0 2.5
(5.7. Requesting)72 624 R 2.5(aS)2.5 G -2.1 -.25(av e)-2.5 H -1.11(Yo)
2.75 G(urself Phase 2)1.11 E F2 .314(In response to a `)72 639.6 R(`Sa)
-.74 E .613 -.15(ve Y)-.2 H .313(ourself, the client may request to be \
informed when all the other clients are quies-)-.95 F
(cent so that it can sa)72 651.6 Q .3 -.15(ve t)-.2 H(heir state.).15 E
1.6 -.8(To d)5 H 2.5(os).8 G(o, use)-2.5 E F0(SmcRequestSa)3.333 E -.1
(ve)-.25 G -1.11(Yo).1 G(urselfPhase2)1.11 E F2(.).833 E 50.4 668.1 50.4
678.1 DL 50.4 666.1 50.4 676.1 DL 55.4 666.6 50.4 666.6 DL 57.4 666.6
52.4 666.6 DL 62.4 666.6 57.4 666.6 DL(Status SmcRequestSa)72 679.2 Q
-.15(ve)-.2 G -1.1(Yo).15 G -1.667(urselfPhase2 \()1.1 F F1(smc_conn)
.833 E F2(,)A F1(save_your)2.5 E(self_phase2_pr)-.1 E(oc)-.45 E F2(,)
.833 E F1(client_data)2.5 E F2(\)).833 E(SmcConn)82 691.2 Q F1(smc_conn)
2.5 E F2(;).833 E(SmcSa)82 703.2 Q -.15(ve)-.2 G -1.1(Yo).15 G
(urselfPhase2Proc)1.1 E F1(save_your)2.5 E(self_phase2_pr)-.1 E(oc)-.45
E F2(;).833 E(SmPointer)82 715.2 Q F1(client_data)2.5 E F2(;).833 E 2.5
<ad31>274.86 768 S 2.5<30ad>-2.5 G 0 Cg EP
%%Page: 11 13
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Bold@0 SF 2.5(XS)72 48 S(ession Management Library)-2.5 E
(X11, Release 6.4)226.74 E/F1 10/Times-Italic@0 SF(smc_conn)72 84 Q/F2
10/Times-Roman@0 SF(The session management connection object.)32.01 E F1
(save_your)72 99.6 Q(self_phase2_pr)-.1 E(oc)-.45 E F2 .572
(The callback to be in)144 111.6 R -.2(vo)-.4 G -.1(ke).2 G 3.072(dw).1
G .572(hen the `)-3.072 F(`Sa)-.74 E .872 -.15(ve Y)-.2 H .572
(ourself Phase 2')-.95 F 3.072('m)-.74 G .572(essage arri)-3.072 F -.15
(ve)-.25 G 3.073(sf).15 G .573(rom the)-3.073 F(session manager)144
123.6 Q(.)-.55 E F1(client_data)72 139.2 Q F2 .886
(This pointer to client data will be passed to the)27 F F0(SmcSa)4.218 E
-.1(ve)-.25 G -1.11(Yo).1 G(urselfPhase2Pr)1.11 E(oc)-.18 E F2(callback)
4.218 E(when the `)144 151.2 Q(`Sa)-.74 E .3 -.15(ve Y)-.2 H
(ourself Phase 2')-.95 E 2.5('m)-.74 G(essage arri)-2.5 E -.15(ve)-.25 G
(s.).15 E .4 LW 50.4 147.3 50.4 157.3 DL 50.4 145.3 50.4 155.3 DL 55.4
158.8 50.4 158.8 DL 57.4 158.8 52.4 158.8 DL 62.4 158.8 57.4 158.8 DL
(The return v)72 178.8 Q(alue of)-.25 E F0(SmcRequestSa)3.333 E -.1(ve)
-.25 G -1.11(Yo).1 G(urselfPhase2)1.11 E F2(is zero for f)3.333 E
(ailure and a positi)-.1 E .3 -.15(ve v)-.25 H(alue for success.)-.1 E
1.415
(This request is needed by clients that manage other clients \(for e)72
194.4 R 1.415(xample, windo)-.15 F 3.915(wm)-.25 G 1.415(anagers, w)
-3.915 F(orkspace)-.1 E .263(managers, and so on\).)72 206.4 R .263
(The manager must mak)5.263 F 2.763(es)-.1 G .262
(ure that all of the clients that are being managed are in an)-2.763 F
(idle state so that their state can be sa)72 218.4 Q -.15(ve)-.2 G(d.)
.15 E F0 2.5(5.8. Completing)72 242.4 R 2.5(aS)2.5 G -2.1 -.25(av e)-2.5
H -1.11(Yo)2.75 G(urself)1.11 E F2(After sa)72 258 Q
(ving state in response to a `)-.2 E(`Sa)-.74 E .3 -.15(ve Y)-.2 H -1.95
(ourself ')-.95 F 2.5('m)-.74 G(essage, you should call)-2.5 E F0(SmcSa)
3.333 E -.1(ve)-.25 G -1.11(Yo).1 G(urselfDone)1.11 E F2(.).833 E 50.4
274.5 50.4 284.5 DL 50.4 272.5 50.4 282.5 DL 55.4 273 50.4 273 DL 57.4
273 52.4 273 DL 62.4 273 57.4 273 DL -.2(vo)72 285.6 S(id SmcSa).2 E
-.15(ve)-.2 G -1.1(Yo).15 G -1.667(urselfDone \()1.1 F F1(smc_conn).833
E F2(,)A F1(success)2.5 E F2(\)).833 E(SmcConn)82 297.6 Q F1(smc_conn)
2.5 E F2(;).833 E(Bool)82 309.6 Q F1(success)2.5 E F2(;).833 E F1
(smc_conn)72 328.8 Q F2(The session management connection object.)32.01
E F1(success)72 344.4 Q F2(If)42.01 E F0 -.74(Tr)3.333 G(ue).74 E F2 2.5
(,t).833 G(he `)-2.5 E(`Sa)-.74 E .3 -.15(ve Y)-.2 H -1.95(ourself ')
-.95 F 2.5('o)-.74 G(peration w)-2.5 E(as completed successfully)-.1 E
(.)-.65 E 50.4 340.5 50.4 350.5 DL 50.4 338.5 50.4 348.5 DL 55.4 352
50.4 352 DL 57.4 352 52.4 352 DL 62.4 352 57.4 352 DL .616
(Before calling)72 372 R F0(SmcSa)3.949 E -.1(ve)-.25 G -1.11(Yo).1 G
(urselfDone)1.11 E F2 3.116(,t).833 G .616(he client must ha)-3.116 F
.916 -.15(ve s)-.2 H .616(et each required property at least once since)
.15 F(the client re)72 384 Q(gistered with the session manager)-.15 E(.)
-.55 E F0 2.5(5.9. Using)72 408 R(Smc Inf)2.5 E(ormational Functions)
-.25 E 50.4 428.1 50.4 438.1 DL 50.4 426.1 50.4 436.1 DL 55.4 426.6 50.4
426.6 DL 57.4 426.6 52.4 426.6 DL 62.4 426.6 57.4 426.6 DL F2
(int SmcProtocolV)72 439.2 Q -1.667(ersion \()-1.11 F F1(smc_conn).833 E
F2(\)).833 E(SmcConn)82 451.2 Q F1(smc_conn)2.5 E F2(;).833 E 50.4 447.3
50.4 457.3 DL 50.4 445.3 50.4 455.3 DL 55.4 458.8 50.4 458.8 DL 57.4
458.8 52.4 458.8 DL 62.4 458.8 57.4 458.8 DL F0(SmcPr)72.833 478.8 Q
(otocolV)-.18 E(ersion)-1 E F2 1.162(returns the major v)4.495 F 1.162
(ersion of the session management protocol associated with this)-.15 F
(session.)72 490.8 Q 50.4 522.9 50.4 532.9 DL 50.4 520.9 50.4 530.9 DL
55.4 521.4 50.4 521.4 DL 57.4 521.4 52.4 521.4 DL 62.4 521.4 57.4 521.4
DL(int SmcProtocolRe)72 534 Q -1.667(vision \()-.25 F F1(smc_conn).833 E
F2(\)).833 E(SmcConn)82 546 Q F1(smc_conn)2.5 E F2(;).833 E 50.4 542.1
50.4 552.1 DL 50.4 540.1 50.4 550.1 DL 55.4 553.6 50.4 553.6 DL 57.4
553.6 52.4 553.6 DL 62.4 553.6 57.4 553.6 DL F0(SmcPr)72.833 573.6 Q
(otocolRe)-.18 E(vision)-.15 E F2 .766(returns the minor v)4.099 F .766
(ersion of the session management protocol associated with this)-.15 F
(session.)72 585.6 Q 50.4 617.7 50.4 627.7 DL 50.4 615.7 50.4 625.7 DL
55.4 616.2 50.4 616.2 DL 57.4 616.2 52.4 616.2 DL 62.4 616.2 57.4 616.2
DL(char *SmcV)72 628.8 Q -1.667(endor \()-1.11 F F1(smc_conn).833 E F2
(\)).833 E(SmcConn)82 640.8 Q F1(smc_conn)2.5 E F2(;).833 E 50.4 636.9
50.4 646.9 DL 50.4 634.9 50.4 644.9 DL 55.4 648.4 50.4 648.4 DL 57.4
648.4 52.4 648.4 DL 62.4 648.4 57.4 648.4 DL F0(SmcV)72.833 668.4 Q
(endor)-1 E F2 1.064(returns a string that pro)4.397 F 1.064
(vides some identi\214cation of the o)-.15 F 1.063
(wner of the session manager)-.25 F 6.063(.T)-.55 G(he)-6.063 E
(string should be freed with a call to)72 680.4 Q F0(fr)3.333 E(ee)-.18
E F2(.).833 E 2.5<ad31>274.86 768 S 2.5<31ad>-2.5 G 0 Cg EP
%%Page: 12 14
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Bold@0 SF 2.5(XS)72 48 S(ession Management Library)-2.5 E
(X11, Release 6.4)226.74 E .4 LW 50.4 76.5 50.4 86.5 DL 50.4 74.5 50.4
84.5 DL 55.4 75 50.4 75 DL 57.4 75 52.4 75 DL 62.4 75 57.4 75 DL/F1 10
/Times-Roman@0 SF(char *SmcRelease)72 87.6 Q(\().833 E/F2 10
/Times-Italic@0 SF(smc_conn).833 E F1(\)).833 E(SmcConn)82 99.6 Q F2
(smc_conn)2.5 E F1(;).833 E 50.4 95.7 50.4 105.7 DL 50.4 93.7 50.4 103.7
DL 55.4 107.2 50.4 107.2 DL 57.4 107.2 52.4 107.2 DL 62.4 107.2 57.4
107.2 DL F0(SmcRelease)72.833 127.2 Q F1 .139(returns a string that pro)
3.472 F .139(vides the release number of the session manager)-.15 F
5.139(.T)-.55 G .139(he string should be)-5.139 F(freed with a call to)
72 139.2 Q F0(fr)3.333 E(ee)-.18 E F1(.).833 E 50.4 171.3 50.4 181.3 DL
50.4 169.3 50.4 179.3 DL 55.4 169.8 50.4 169.8 DL 57.4 169.8 52.4 169.8
DL 62.4 169.8 57.4 169.8 DL(char *SmcClientID)72 182.4 Q(\().833 E F2
(smc_conn).833 E F1(\)).833 E(SmcConn)82 194.4 Q F2(smc_conn)2.5 E F1(;)
.833 E 50.4 190.5 50.4 200.5 DL 50.4 188.5 50.4 198.5 DL 55.4 202 50.4
202 DL 57.4 202 52.4 202 DL 62.4 202 57.4 202 DL F0(SmcClientID)72.833
222 Q F1 .28(returns a null-terminated string for the client ID associa\
ted with this connection.)3.614 F .28(This infor)5.28 F(-)-.2 E .332
(mation w)72 234 R .332(as also returned in)-.1 F F0(SmcOpenConnection)
3.665 E F1 .332(\(it is pro)3.665 F .333(vided here for con)-.15 F -.15
(ve)-.4 G 2.833(nience\). Call).15 F F0(fr)3.666 E(ee)-.18 E F1 .333
(on this)3.666 F(pointer when the client ID is no longer needed.)72 246
Q 50.4 278.1 50.4 288.1 DL 50.4 276.1 50.4 286.1 DL 55.4 276.6 50.4
276.6 DL 57.4 276.6 52.4 276.6 DL 62.4 276.6 57.4 276.6 DL
(IceConn SmcGetIceConnection)72 289.2 Q(\().833 E F2(smc_conn).833 E F1
(\)).833 E(SmcConn)82 301.2 Q F2(smc_conn)2.5 E F1(;).833 E 50.4 297.3
50.4 307.3 DL 50.4 295.3 50.4 305.3 DL 55.4 308.8 50.4 308.8 DL 57.4
308.8 52.4 308.8 DL 62.4 308.8 57.4 308.8 DL F0(SmcGetIceConnection)
72.833 328.8 Q F1 1.071(returns the ICE connection object associated wi\
th this session management con-)4.405 F .684(nection object.)72 340.8 R
.684(The ICE connection object can be used to get some additional infor\
mation about the con-)5.684 F 3.38(nection. Some)72 352.8 R .879
(of the more useful functions which can be used on the IceConn are)3.38
F F0(IceConnectionNum-)4.212 E(ber)72 364.8 Q F1(,).833 E F0
(IceConnectionString)7.715 E F1(,).833 E F0(IceLastSentSequenceNumber)
7.715 E F1(,).833 E F0(IceLastRecei)7.715 E -.1(ve)-.1 G
(dSequenceNumber).1 E F1 6.883(,a).833 G(nd)-6.883 E F0(IcePing)72.833
376.8 Q F1 5(.F).833 G(or further information, see the)-5.15 E F2(Inter)
2.5 E(-Client Exc)-.2 E(hang)-.15 E 2.5(eL)-.1 G(ibr)-2.5 E(ary)-.15 E
F1(standard.)2.5 E F0 2.5(5.10. Err)72 400.8 R(or Handling)-.18 E F1
.255(If the client recei)72 416.4 R -.15(ve)-.25 G 2.754(sa).15 G 2.754
(nu)-2.754 G(ne)-2.754 E .254
(xpected protocol error from the session manager)-.15 F 2.754(,a)-.4 G
2.754(ne)-2.754 G .254(rror handler is in)-2.754 F -.2(vo)-.4 G -.1(ke)
.2 G 2.754(db).1 G(y)-2.754 E(SMlib)72 428.4 Q 5.088(.A)-.4 G(def)-2.5 E
.088(ault error handler e)-.1 F .089
(xists that simply prints the error message to)-.15 F F0(stderr)3.422 E
F1 .089(and e)3.422 F .089(xits if the se)-.15 F -.15(ve)-.25 G(rity).15
E .913(of the error is f)72 440.4 R 3.413(atal. The)-.1 F .913
(client can change this error handler by calling the)3.413 F F0
(SmcSetErr)4.245 E(orHandler)-.18 E F1(func-)4.245 E(tion.)72 452.4 Q
50.4 468.9 50.4 478.9 DL 50.4 466.9 50.4 476.9 DL 55.4 467.4 50.4 467.4
DL 57.4 467.4 52.4 467.4 DL 62.4 467.4 57.4 467.4 DL
(SmcErrorHandler SmcSetErrorHandler)72 480 Q(\().833 E F2(handler).833 E
F1(\)).833 E(SmcErrorHandler)82 492 Q F2(handler)2.5 E F1(;).833 E F2
(handler)72 511.2 Q F1(The error handler)40.89 E 5(.Y)-.55 G
(ou should pass NULL to restore the def)-6.1 E(ault handler)-.1 E(.)-.55
E 50.4 507.3 50.4 517.3 DL 50.4 505.3 50.4 515.3 DL 55.4 518.8 50.4
518.8 DL 57.4 518.8 52.4 518.8 DL 62.4 518.8 57.4 518.8 DL F0(SmcSetErr)
72.833 538.8 Q(orHandler)-.18 E F1(returns the pre)3.333 E
(vious error handler)-.25 E(.)-.55 E(The)72 554.4 Q F0(SmcErr)3.333 E
(orHandler)-.18 E F1(has the follo)3.333 E(wing type:)-.25 E 50.4 570.9
50.4 580.9 DL 50.4 568.9 50.4 578.9 DL 55.4 569.4 50.4 569.4 DL 57.4
569.4 52.4 569.4 DL 62.4 569.4 57.4 569.4 DL(typedef v)72 582 Q
(oid \(*SmcErrorHandler\)\(\);)-.2 E -.2(vo)72 606 S(id ErrorHandler).2
E(\().833 E F2(smc_conn).833 E F1(,)A F2(swap)2.5 E F1(,).833 E F2(of)
2.5 E(fending_minor_opcode)-.18 E F1(,).833 E F2(of)2.5 E
(fending_sequence_num)-.18 E F1(,).833 E F2(err)2.5 E(or_class)-.45 E F1
(,).833 E F2(se)2.5 E(verity)-.15 E F1(,).833 E F2(values)2.5 E F1(\))
.833 E(SmcConn)82 618 Q F2(smc_conn)2.5 E F1(;).833 E(Bool)82 630 Q F2
(swap)2.5 E F1(;).833 E(int)82 642 Q F2(of)2.5 E(fending_minor_opcode)
-.18 E F1(;).833 E(unsigned long)82 654 Q F2(of)2.5 E
(fending_sequence_num)-.18 E F1(;).833 E(int)82 666 Q F2(err)2.5 E
(or_class)-.45 E F1(;).833 E(int)82 678 Q F2(se)2.5 E(verity)-.15 E F1
(;).833 E(IcePointer)82 690 Q F2(values)2.5 E F1(;).833 E F2(smc_conn)72
709.2 Q F1(The session management connection object.)32.01 E 2.5<ad31>
274.86 768 S 2.5<32ad>-2.5 G 0 Cg EP
%%Page: 13 15
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Bold@0 SF 2.5(XS)72 48 S(ession Management Library)-2.5 E
(X11, Release 6.4)226.74 E/F1 10/Times-Italic@0 SF(swap)72 84 Q/F2 10
/Times-Roman@0 SF 2.5<418d>51.44 G
(ag that indicates if the speci\214ed v)-2.5 E(alues need byte sw)-.25 E
(apping.)-.1 E F1(of)72 99.6 Q(fending_minor_opcode)-.18 E F2
(The minor opcode of the of)144 111.6 Q(fending message.)-.25 E F1(of)72
127.2 Q(fending_sequence_num)-.18 E F2(The sequence number of the of)144
139.2 Q(fending message.)-.25 E F1(err)72 154.8 Q(or_class)-.45 E F2
(The error class of the of)26.34 E(fending message.)-.25 E F1(se)72
170.4 Q(verity)-.15 E F0(IceCanContinue)41.883 E F2(,).833 E F0(IceF)
3.333 E(atalT)-.25 E(oPr)-.92 E(otocol)-.18 E F2 2.5(,o).833 G(r)-2.5 E
F0(IceF)3.333 E(atalT)-.25 E(oConnection)-.92 E F2(.).833 E F1(values)72
186 Q F2(An)46.45 E 2.5(ya)-.15 G(dditional error v)-2.5 E
(alues speci\214c to the minor opcode and class.)-.25 E .4 LW 50.4 182.1
50.4 192.1 DL 50.4 180.1 50.4 190.1 DL 55.4 193.6 50.4 193.6 DL 57.4
193.6 52.4 193.6 DL 62.4 193.6 57.4 193.6 DL .423
(Note that this error handler is in)72 213.6 R -.2(vo)-.4 G -.1(ke).2 G
2.923(df).1 G .423(or protocol related errors.)-2.923 F 2.023 -.8(To i)
5.423 H .424(nstall an error handler to be in).8 F -.2(vo)-.4 G -.1(ke)
.2 G(d).1 E 2.626(when an IO error occurs, use)72 225.6 R F0
(IceSetIOErr)5.958 E(orHandler)-.18 E F2 7.625(.F).833 G 2.625
(or further information, see the)-7.775 F F1(Inter)5.125 E(-Client)-.2 E
(Exc)72 237.6 Q(hang)-.15 E 2.5(eL)-.1 G(ibr)-2.5 E(ary)-.15 E F2
(standard.)3.333 E F0 2.5(6. Session)72 261.6 R(Management Ser)2.5 E -.1
(ve)-.1 G 2.5(r\().1 G(Sms\) Functions)-2.5 E F2
(This section discusses ho)72 277.2 Q 2.5(wS)-.25 G
(ession Management serv)-2.5 E(ers:)-.15 E 21.5<8349>72 292.8 S
(nitialize the library)-21.5 E 21.5<8352>72 308.4 S -.15(eg)-21.5 G
(ister the client).15 E 21.5<8353>72 324 S(end a `)-21.5 E(`Sa)-.74 E .3
-.15(ve Y)-.2 H -1.95(ourself ')-.95 F 2.5('m)-.74 G(essage)-2.5 E 21.5
<8353>72 339.6 S(end a `)-21.5 E(`Sa)-.74 E .3 -.15(ve Y)-.2 H
(ourself Phase 2')-.95 E 2.5('m)-.74 G(essage)-2.5 E 21.5<8353>72 355.2
S(end an `)-21.5 E(`Interact')-.74 E 2.5('m)-.74 G(essage)-2.5 E 21.5
<8353>72 370.8 S(end a `)-21.5 E(`Sa)-.74 E .3 -.15(ve C)-.2 H(omplete')
.15 E 2.5('m)-.74 G(essage)-2.5 E 21.5<8353>72 386.4 S(end a `)-21.5 E
(`Die')-.74 E 2.5('m)-.74 G(essage)-2.5 E 21.5<8343>72 402 S
(ancel a shutdo)-21.5 E(wn)-.25 E 21.5<8352>72 417.6 S(eturn properties)
-21.5 E 21.5<8350>72 433.2 S(ing a client)-21.5 E 21.5<8343>72 448.8 S
(lean up after a client disconnects)-21.5 E 21.5<8355>72 464.4 S
(se Sms informational functions)-21.5 E 21.5<8348>72 480 S(andle errors)
-21.5 E F0 2.5(6.1. Initializing)72 504 R(the Library)2.5 E
(SmsInitialize)72.833 519.6 Q F2 .587(is the \214rst SMlib function tha\
t should be called by a session manager)3.92 F 5.587(.I)-.55 G 3.088(tp)
-5.587 G(ro)-3.088 E .588(vides informa-)-.15 F .115
(tion about the session manager and re)72 531.6 R .115
(gisters a callback that will be in)-.15 F -.2(vo)-.4 G -.1(ke).2 G
2.615(de).1 G .115(ach time a ne)-2.615 F 2.615(wc)-.25 G .115
(lient connects)-2.615 F(to the session manager)72 543.6 Q(.)-.55 E 50.4
560.1 50.4 570.1 DL 50.4 558.1 50.4 568.1 DL 55.4 558.6 50.4 558.6 DL
57.4 558.6 52.4 558.6 DL 62.4 558.6 57.4 558.6 DL(Status SmsInitialize)
72 571.2 Q(\().833 E F1(vendor).833 E F2(,)A F1 -.37(re)2.5 G(lease).37
E F2(,).833 E F1(ne)2.5 E(w_client_pr)-.15 E(oc)-.45 E F2(,).833 E F1
(mana)2.5 E -.1(ge)-.1 G(r_data).1 E F2(,).833 E F1(host_based_auth_pr)
2.5 E(oc)-.45 E F2(,).833 E F1(err)122 583.2 Q(or_length)-.45 E F2(,)
.833 E F1(err)2.5 E(or_string_r)-.45 E(et)-.37 E F2(\)).833 E(char *)82
595.2 Q F1(vendor)A F2(;).833 E(char *)82 607.2 Q F1 -.37(re)C(lease).37
E F2(;).833 E(SmsNe)82 619.2 Q(wClientProc)-.25 E F1(ne)2.5 E
(w_client_pr)-.15 E(oc)-.45 E F2(;).833 E(SmPointer)82 631.2 Q F1(mana)
2.5 E -.1(ge)-.1 G(r_data).1 E F2(;).833 E(IceHostBasedAuthProc)82 643.2
Q F1(host_based_auth_pr)2.5 E(oc)-.45 E F2(;).833 E(int)82 655.2 Q F1
(err)2.5 E(or_length)-.45 E F2(;).833 E(char *)82 667.2 Q F1(err)A
(or_string_r)-.45 E(et)-.37 E F2(;).833 E F1(vendor)72 686.4 Q F2 2.5
(As)44.23 G(tring specifying the session manager v)-2.5 E(endor)-.15 E
(.)-.55 E F1 -.37(re)72 702 S(lease).37 E F2 2.5(As)43.49 G
(tring specifying the session manager release number)-2.5 E(.)-.55 E F1
(ne)72 717.6 Q(w_client_pr)-.15 E(oc)-.45 E F2(Callback to be in)5.94 E
-.2(vo)-.4 G -.1(ke).2 G 2.5(de).1 G(ach time a ne)-2.5 E 2.5(wc)-.25 G
(lient connects to the session manager)-2.5 E(.)-.55 E 2.5<ad31>274.86
768 S 2.5<33ad>-2.5 G 0 Cg EP
%%Page: 14 16
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Bold@0 SF 2.5(XS)72 48 S(ession Management Library)-2.5 E
(X11, Release 6.4)226.74 E/F1 10/Times-Italic@0 SF(mana)72 84 Q -.1(ge)
-.1 G(r_data).1 E/F2 10/Times-Roman@0 SF .749(When the)13.87 F F0
(SmsNewClientPr)4.082 E(oc)-.18 E F2 .749(callback is in)4.082 F -.2(vo)
-.4 G -.1(ke).2 G .75(d, this pointer to manager data will be).1 F
(passed.)144 96 Q F1(host_based_auth_pr)72 111.6 Q(oc)-.45 E F2
(Host based authentication callback.)144 123.6 Q F1(err)72 139.2 Q
(or_length)-.45 E F2(Length of the error_string_ret ar)21.34 E
(gument passed in.)-.18 E F1(err)72 154.8 Q(or_string_r)-.45 E(et)-.37 E
F2 .651(Returns a null-terminated error message, if an)7.26 F 4.451 -.65
(y. T)-.15 H .651(he error_string_ret points to user sup-).65 F
(plied memory)144 166.8 Q 5(.N)-.65 G 2.5(om)-5 G
(ore than error_length bytes are used.)-2.5 E .4 LW 50.4 162.9 50.4
172.9 DL 50.4 160.9 50.4 170.9 DL 55.4 174.4 50.4 174.4 DL 57.4 174.4
52.4 174.4 DL 62.4 174.4 57.4 174.4 DL .584(After the)72 194.4 R F0
(SmsInitialize)3.917 E F2 .585
(function is called, the session manager should call the)3.918 F F0
(IceListenF)3.918 E(orConnections)-.25 E F2 .07
(function to listen for ne)72 206.4 R 2.57(wc)-.25 G 2.569
(onnections. Afterw)-2.57 F .069
(ards, each time a client connects, the session manager should)-.1 F
(call)72 218.4 Q F0(IceAcceptConnection)3.333 E F2(.).833 E .161
(See section 9, `)72 234 R -.8(`A)-.74 G .161(uthentication of Clients,)
.8 F 1.641 -.74('' f)-.7 H .162
(or more details on authentication \(including host based authen-).74 F
4.496(tication\). Also)72 246 R 1.996(see the)4.496 F F1(Inter)4.496 E
1.996(-Client Exc)-.2 F(hang)-.15 E 4.496(eL)-.1 G(ibr)-4.496 E(ary)-.15
E F2 1.995(standard for further details on listening for and)5.329 F
(accepting ICE connections.)72 258 Q .315(Each time a ne)72 273.6 R
2.815(wc)-.25 G .315(lient connects to the session manager)-2.815 F
2.815(,t)-.4 G(he)-2.815 E F0(SmsNewClientPr)3.648 E(oc)-.18 E F2 .315
(callback is in)3.648 F -.2(vo)-.4 G -.1(ke).2 G 2.815(d. The).1 F .022
(session manager obtains a ne)72 285.6 R 2.522(wo)-.25 G .022(paque con\
nection object that it should use for all future interaction with the)
-2.522 F 3.577(client. At)72 297.6 R 1.078
(this time, the session manager must also re)3.577 F 1.078
(gister a set of callbacks to respond to the dif)-.15 F(ferent)-.25 E
(messages that the client might send.)72 309.6 Q 50.4 326.1 50.4 336.1
DL 50.4 324.1 50.4 334.1 DL 55.4 324.6 50.4 324.6 DL 57.4 324.6 52.4
324.6 DL 62.4 324.6 57.4 324.6 DL(typedef Status \(*SmsNe)72 337.2 Q
(wClientProc\)\(\);)-.25 E(Status Ne)72 361.2 Q -1.667(wClientProc \()
-.25 F F1(sms_conn).833 E F2(,)A F1(mana)2.5 E -.1(ge)-.1 G(r_data).1 E
F2(,).833 E F1(mask_r)2.5 E(et)-.37 E F2(,).833 E F1(callbac)2.5 E(ks_r)
-.2 E(et)-.37 E F2(,).833 E F1(failur)2.5 E(e_r)-.37 E(eason_r)-.37 E
(et)-.37 E F2(\)).833 E(SmsConn)82 373.2 Q F1(sms_conn)2.5 E F2(;).833 E
(SmPointer)82 385.2 Q F1(mana)2.5 E -.1(ge)-.1 G(r_data).1 E F2(;).833 E
(unsigned long *)82 397.2 Q F1(mask_r)A(et)-.37 E F2(;).833 E
(SmsCallbacks *)82 409.2 Q F1(callbac)A(ks_r)-.2 E(et)-.37 E F2(;).833 E
(char **)82 421.2 Q F1(failur)A(e_r)-.37 E(eason_r)-.37 E(et)-.37 E F2
(;).833 E F1(sms_conn)72 440.4 Q F2 2.5(An)32.56 G .5 -.25(ew o)-2.5 H
(paque connection object.).25 E F1(mana)72 456 Q -.1(ge)-.1 G(r_data).1
E F2(Manager data speci\214ed when the callback w)13.87 E(as re)-.1 E
(gistered.)-.15 E F1(mask_r)72 471.6 Q(et)-.37 E F2
(On return, indicates which callbacks were set by the session manager)
35.71 E(.)-.55 E F1(callbac)72 487.2 Q(ks_r)-.2 E(et)-.37 E F2
(On return, contains the callbacks re)18.69 E
(gistered by the session manager)-.15 E(.)-.55 E F1(failur)72 502.8 Q
(e_r)-.37 E(eason_r)-.37 E(et)-.37 E F2 -.15(Fa)144 514.8 S
(ilure reason returned.).15 E 50.4 510.9 50.4 520.9 DL 50.4 508.9 50.4
518.9 DL 55.4 522.4 50.4 522.4 DL 57.4 522.4 52.4 522.4 DL 62.4 522.4
57.4 522.4 DL .309(If a f)72 542.4 R .309(ailure occurs, the)-.1 F F0
(SmsNewClientPr)3.642 E(oc)-.18 E F2 .308
(should return a zero status as well as allocate and return a f)3.642 F
(ail-)-.1 E(ure reason string in f)72 554.4 Q 2.5
(ailure_reason_ret. SMlib)-.1 F
(will be responsible for freeing this memory)2.5 E(.)-.65 E .835
(The session manager must re)72 570 R .835
(gister a set of callbacks to respond to client e)-.15 F -.15(ve)-.25 G
3.335(nts. The).15 F .835(mask_ret ar)3.335 F(gument)-.18 E 1.239
(speci\214es which callbacks are set.)72 582 R 1.238
(All of the callbacks speci\214ed in this v)6.238 F 1.238
(ersion of SMlib are mandatory)-.15 F(.)-.65 E .407(The mask_ret ar)72
594 R .407(gument is necessary in order to maintain backw)-.18 F .408
(ards compatibility in future v)-.1 F .408(ersions of the)-.15 F
(library)72 606 Q(.)-.65 E(The follo)72 621.6 Q(wing v)-.25 E
(alues may be ORed together to obtain a mask v)-.25 E(alue:)-.25 E F0
(SmsRegisterClientPr)72.833 643.2 Q(ocMask)-.18 E(SmsInteractRequestPr)
72.833 655.2 Q(ocMask)-.18 E(SmsInteractDonePr)72.833 667.2 Q(ocMask)
-.18 E(SmsSa)72.833 679.2 Q -.1(ve)-.25 G -1.11(Yo).1 G(urselfRequestPr)
1.11 E(ocMask)-.18 E(SmsSa)72.833 691.2 Q -.1(ve)-.25 G -1.11(Yo).1 G
(urselfP2RequestPr)1.11 E(ocMask)-.18 E(SmsSa)72.833 703.2 Q -.1(ve)-.25
G -1.11(Yo).1 G(urselfDonePr)1.11 E(ocMask)-.18 E(SmsCloseConnectionPr)
72.833 715.2 Q(ocMask)-.18 E(SmsSetPr)72.833 727.2 Q(opertiesPr)-.18 E
(ocMask)-.18 E F2 2.5<ad31>274.86 768 S 2.5<34ad>-2.5 G 0 Cg EP
%%Page: 15 17
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Bold@0 SF 2.5(XS)72 48 S(ession Management Library)-2.5 E
(X11, Release 6.4)226.74 E(SmsDeletePr)72.833 84 Q(opertiesPr)-.18 E
(ocMask)-.18 E(SmsGetPr)72.833 96 Q(opertiesPr)-.18 E(ocMask)-.18 E/F1
10/Times-Roman@0 SF -.15(Fo)72 117.6 S 2.576(re).15 G .076
(ach callback, the session manager can re)-2.576 F .076
(gister a pointer to manager data speci\214c to that callback.)-.15 F
(This)5.075 E(pointer will be passed to the callback when it is in)72
129.6 Q -.2(vo)-.4 G -.1(ke).2 G 2.5(db).1 G 2.5(yS)-2.5 G(Mlib)-2.5 E
(.)-.4 E .4 LW 50.4 146.1 50.4 156.1 DL 50.4 144.1 50.4 154.1 DL 55.4
144.6 50.4 144.6 DL 57.4 144.6 52.4 144.6 DL 62.4 144.6 57.4 144.6 DL
(typedef struct {)72 163.2 Q(struct {)108 175.2 Q(SmsRe)144 187.2 Q
(gisterClientProc callback;)-.15 E(SmPointer manager_data;)144 199.2 Q
2.5(}r)108 211.2 S -.15(eg)-2.5 G(ister_client;).15 E(struct {)108 235.2
Q(SmsInteractRequestProc callback;)144 247.2 Q(SmPointer manager_data;)
144 259.2 Q 2.5(}i)108 271.2 S(nteract_request;)-2.5 E(struct {)108
295.2 Q(SmsInteractDoneProc callback;)144 307.2 Q
(SmPointer manager_data;)144 319.2 Q 2.5(}i)108 331.2 S(nteract_done;)
-2.5 E(struct {)108 355.2 Q(SmsSa)144 367.2 Q -.15(ve)-.2 G -1.1(Yo).15
G(urselfRequestProc callback;)1.1 E(SmPointer manager_data;)144 379.2 Q
2.5(}s)108 391.2 S -2.25 -.2(av e)-2.5 H(_yourself_request;).2 E
(struct {)108 415.2 Q(SmsSa)144 427.2 Q -.15(ve)-.2 G -1.1(Yo).15 G
(urselfPhase2RequestProc callback;)1.1 E(SmPointer manager_data;)144
439.2 Q 2.5(}s)108 451.2 S -2.25 -.2(av e)-2.5 H
(_yourself_phase2_request;).2 E(struct {)108 475.2 Q(SmsSa)144 487.2 Q
-.15(ve)-.2 G -1.1(Yo).15 G(urselfDoneProc callback;)1.1 E
(SmPointer manager_data;)144 499.2 Q 2.5(}s)108 511.2 S -2.25 -.2(av e)
-2.5 H(_yourself_done;).2 E(struct {)108 535.2 Q
(SmsCloseConnectionProc callback;)144 547.2 Q(SmPointer manager_data;)
144 559.2 Q 2.5(}c)108 571.2 S(lose_connection;)-2.5 E(struct {)108
595.2 Q(SmsSetPropertiesProc callback;)144 607.2 Q
(SmPointer manager_data;)144 619.2 Q 2.5(}s)108 631.2 S(et_properties;)
-2.5 E(struct {)108 655.2 Q(SmsDeletePropertiesProc callback;)144 667.2
Q(SmPointer manager_data;)144 679.2 Q 2.5(}d)108 691.2 S
(elete_properties;)-2.5 E(struct {)108 715.2 Q
(SmsGetPropertiesProc callback;)144 727.2 Q 2.5<ad31>274.86 768 S 2.5
<35ad>-2.5 G 0 Cg EP
%%Page: 16 18
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Bold@0 SF 2.5(XS)72 48 S(ession Management Library)-2.5 E
(X11, Release 6.4)226.74 E/F1 10/Times-Roman@0 SF
(SmPointer manager_data;)144 84 Q 2.5(}g)108 96 S(et_properties;)-2.5 E
2.5(}S)72 120 S(msCallbacks;)-2.5 E .4 LW 50.4 122.1 50.4 132.1 DL 50.4
120.1 50.4 130.1 DL 55.4 133.6 50.4 133.6 DL 57.4 133.6 52.4 133.6 DL
62.4 133.6 57.4 133.6 DL F0 2.5(6.1.1. The)72 165.6 R
(Register Client Callback)2.5 E F1 .253(The Re)72 181.2 R .254
(gister Client callback is the \214rst callback that will be in)-.15 F
-.2(vo)-.4 G -.1(ke).2 G 2.754(da).1 G .254
(fter the client connects to the session)-2.754 F(manager)72 193.2 Q 5
(.I)-.55 G(ts type is)-5 E F0(SmsRegisterClientPr)3.333 E(oc)-.18 E F1
(.).833 E 50.4 209.7 50.4 219.7 DL 50.4 207.7 50.4 217.7 DL 55.4 208.2
50.4 208.2 DL 57.4 208.2 52.4 208.2 DL 62.4 208.2 57.4 208.2 DL
(typedef Status \(*SmsRe)72 220.8 Q(gisterClientProc\(\);)-.15 E
(Status Re)72 244.8 Q -1.667(gisterClientProc \()-.15 F/F2 10
/Times-Italic@0 SF(sms_conn).833 E F1(,)A F2(mana)2.5 E -.1(ge)-.1 G
(r_data).1 E F1(,).833 E F2(pr)2.5 E -.15(ev)-.37 G(ious_id).15 E F1(\))
.833 E(SmsConn)82 256.8 Q F2(sms_conn)2.5 E F1(;).833 E(SmPointer)82
268.8 Q F2(mana)2.5 E -.1(ge)-.1 G(r_data).1 E F1(;).833 E(char *)82
280.8 Q F2(pr)A -.15(ev)-.37 G(ious_id).15 E F1(;).833 E F2(sms_conn)72
300 Q F1(The session management connection object.)32.56 E F2(mana)72
315.6 Q -.1(ge)-.1 G(r_data).1 E F1
(Manager data speci\214ed when the callback w)13.87 E(as re)-.1 E
(gistered.)-.15 E F2(pr)72 331.2 Q -.15(ev)-.37 G(ious_id).15 E F1
(The client ID from the pre)25.3 E(vious session.)-.25 E 50.4 327.3 50.4
337.3 DL 50.4 325.3 50.4 335.3 DL 55.4 338.8 50.4 338.8 DL 57.4 338.8
52.4 338.8 DL 62.4 338.8 57.4 338.8 DL 1.422(Before an)72 358.8 R 3.922
(yf)-.15 G 1.422(urther interaction tak)-3.922 F 1.422
(es place with the client, the client must be re)-.1 F 1.421
(gistered with the session)-.15 F(manager)72 370.8 Q(.)-.55 E .073
(If the client is being restarted from a pre)72 386.4 R .073
(vious session, pre)-.25 F .073
(vious_id will contain a null-terminated string rep-)-.25 F .214
(resenting the client ID from the pre)72 398.4 R .214(vious session.)
-.25 F(Call)5.214 E F0(fr)3.547 E(ee)-.18 E F1 .213(on the pre)3.547 F
.213(vious_id pointer when it is no longer)-.25 F 2.5(needed. If)72
410.4 R(the client is \214rst joining the session, pre)2.5 E
(vious_id will be NULL.)-.25 E 1.703(If pre)72 426 R 1.703
(vious_id is in)-.25 F -.25(va)-.4 G 1.703
(lid, the session manager should not re).25 F 1.703
(gister the client at this time.)-.15 F 1.704(This callback)6.704 F .312
(should return a status of zero, which will cause an error message to b\
e sent to the client.)72 438 R .312(The client should)5.312 F(re-re)72
450 Q(gister with pre)-.15 E(vious_id set to NULL.)-.25 E .311
(Otherwise, the session manager should re)72 465.6 R .312
(gister the client with a unique client ID by calling the)-.15 F F0
(SmsRegis-)3.645 E(terClientReply)72 477.6 Q F1 .281
(function \(to be discussed shortly\), and the)3.614 F F0
(SmsRegisterClientPr)3.614 E(oc)-.18 E F1 .281(callback should return)
3.614 F 2.5(as)72 489.6 S(tatus of one.)-2.5 E F0 2.5(6.1.2. The)72
513.6 R(Interact Request Callback)2.5 E F1
(The Interact Request callback is of type)72 529.2 Q F0
(SmsInteractRequestPr)3.333 E(oc)-.18 E F1(.).833 E 50.4 545.7 50.4
555.7 DL 50.4 543.7 50.4 553.7 DL 55.4 544.2 50.4 544.2 DL 57.4 544.2
52.4 544.2 DL 62.4 544.2 57.4 544.2 DL(typedef v)72 556.8 Q
(oid \(*SmsInteractRequestProc\)\(\);)-.2 E -.2(vo)72 580.8 S
(id InteractRequestProc).2 E(\().833 E F2(sms_conn).833 E F1(,)A F2
(mana)2.5 E -.1(ge)-.1 G(r_data).1 E F1(,).833 E F2(dialo)2.5 E(g_type)
-.1 E F1(\)).833 E(SmsConn)82 592.8 Q F2(sms_conn)2.5 E F1(;).833 E
(SmPointer)82 604.8 Q F2(mana)2.5 E -.1(ge)-.1 G(r_data).1 E F1(;).833 E
(int)82 616.8 Q F2(dialo)2.5 E(g_type)-.1 E F1(;).833 E F2(sms_conn)72
636 Q F1(The session management connection object.)32.56 E F2(mana)72
651.6 Q -.1(ge)-.1 G(r_data).1 E F1
(Manager data speci\214ed when the callback w)13.87 E(as re)-.1 E
(gistered.)-.15 E F2(dialo)72 667.2 Q(g_type)-.1 E F1
(The type of dialog the client wishes to present to the user)24.88 E(.)
-.55 E 50.4 663.3 50.4 673.3 DL 50.4 661.3 50.4 671.3 DL 55.4 674.8 50.4
674.8 DL 57.4 674.8 52.4 674.8 DL 62.4 674.8 57.4 674.8 DL 1.181
(When a client recei)72 694.8 R -.15(ve)-.25 G 3.681(sa`).15 G(`Sa)
-4.421 E 1.481 -.15(ve Y)-.2 H -1.95(ourself ')-.95 F 3.681('m)-.74 G
1.181(essage with an interact_style of)-3.681 F F0(SmInteractStyleErr)
4.514 E(ors)-.18 E F1(or)4.515 E F0(SmInteractStyleAny)72.833 706.8 Q F1
2.713(,t).833 G .212(he client may choose to interact with the user)
-2.713 F 5.212(.B)-.55 G .212(ecause only one client can interact)-5.212
F .149(with the user at a time, the client must request to interact wit\
h the user)72 718.8 R 5.15(.T)-.55 G .15(he session manager should k)
-5.15 F .15(eep a)-.1 F .875(queue of all clients wishing to interact.)
72 730.8 R .874(It should send an `)5.874 F(`Interact')-.74 E 3.374('m)
-.74 G .874(essage to one client at a time and)-3.374 F 2.5<ad31>274.86
768 S 2.5<36ad>-2.5 G 0 Cg EP
%%Page: 17 19
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Bold@0 SF 2.5(XS)72 48 S(ession Management Library)-2.5 E
(X11, Release 6.4)226.74 E/F1 10/Times-Roman@0 SF -.1(wa)72 84 S
(it for an `).1 E(`Interact Done')-.74 E 2.5('m)-.74 G
(essage before continuing with the ne)-2.5 E(xt client.)-.15 E .16
(The dialog_type ar)72 99.6 R .16(gument speci\214es either)-.18 F F0
(SmDialogErr)3.493 E(or)-.18 E F1 2.66(,i).833 G .16
(ndicating that the client w)-2.66 F .161(ants to start an error)-.1 F
(dialog, or)72 111.6 Q F0(SmDialogNormal)3.333 E F1 2.5(,m).833 G
(eaning that the client wishes to start a nonerror dialog.)-2.5 E .634
(If a shutdo)72 127.2 R .634(wn is in progress, the user may ha)-.25 F
.934 -.15(ve t)-.2 H .634(he option of cancelling the shutdo).15 F 3.133
(wn. If)-.25 F .633(the shutdo)3.133 F .633(wn is)-.25 F .425
(cancelled \(speci\214ed in the `)72 139.2 R .426(`Interact Done')-.74 F
2.926('m)-.74 G .426(essage\), the session manager should send a `)
-2.926 F(`Shutdo)-.74 E .426(wn Can-)-.25 F(celled')72 151.2 Q 2.5('m)
-.74 G(essage to each client that requested to interact.)-2.5 E F0 2.5
(6.1.3. The)72 175.2 R(Interact Done Callback)2.5 E F1
(When the client is done interacting with the user)72 190.8 Q 2.5(,t)-.4
G(he)-2.5 E F0(SmsInteractDonePr)3.333 E(oc)-.18 E F1
(callback will be in)3.333 E -.2(vo)-.4 G -.1(ke).2 G(d.).1 E .4 LW 50.4
207.3 50.4 217.3 DL 50.4 205.3 50.4 215.3 DL 55.4 205.8 50.4 205.8 DL
57.4 205.8 52.4 205.8 DL 62.4 205.8 57.4 205.8 DL(typedef v)72 218.4 Q
(oid \(*SmsInteractDoneProc\)\(\);)-.2 E -.2(vo)72 242.4 S
(id InteractDoneProc).2 E(\().833 E/F2 10/Times-Italic@0 SF(sms_conn)
.833 E F1(,)A F2(mana)2.5 E -.1(ge)-.1 G(r_data).1 E F1(,).833 E F2
(cancel_shutdown)2.5 E F1(\)).833 E(SmsConn)82 254.4 Q F2(sms_conn)2.5 E
F1(;).833 E(SmPointer)82 266.4 Q F2(mana)2.5 E -.1(ge)-.1 G(r_data).1 E
F1(;).833 E(Bool)82 278.4 Q F2(cancel_shutdown)2.5 E F1(;).833 E F2
(sms_conn)72 297.6 Q F1(The session management connection object.)32.56
E F2(mana)72 313.2 Q -.1(ge)-.1 G(r_data).1 E F1
(Manager data speci\214ed when the callback w)13.87 E(as re)-.1 E
(gistered.)-.15 E F2(cancel_shutdown)72 328.8 Q F1
(Speci\214es if the user requests that the entire shutdo)144 340.8 Q
(wn be cancelled.)-.25 E 50.4 336.9 50.4 346.9 DL 50.4 334.9 50.4 344.9
DL 55.4 348.4 50.4 348.4 DL 57.4 348.4 52.4 348.4 DL 62.4 348.4 57.4
348.4 DL 1.346(Note that the shutdo)72 368.4 R 1.346
(wn can be cancelled only if the corresponding `)-.25 F(`Sa)-.74 E 1.645
-.15(ve Y)-.2 H -1.95(ourself ')-.95 F 3.845('s)-.74 G(peci\214ed)-3.845
E F0 -.74(Tr)4.678 G(ue).74 E F1(for)4.678 E(shutdo)72 380.4 Q(wn and)
-.25 E F0(SmInteractStyleErr)3.333 E(ors)-.18 E F1(or)3.333 E F0
(SmInteractStyleAny)3.333 E F1(for the interact_style.)3.333 E F0 2.5
(6.1.4. The)72 404.4 R(Sa)2.5 E .2 -.1(ve Y)-.25 H
(ourself Request Callback)-1.01 E F1(The Sa)72 420 Q .3 -.15(ve Y)-.2 H
(ourself Request callback is of type)-.95 E F0(SmsSa)3.333 E -.1(ve)-.25
G -1.11(Yo).1 G(urselfRequestPr)1.11 E(oc)-.18 E F1(.).833 E 50.4 436.5
50.4 446.5 DL 50.4 434.5 50.4 444.5 DL 55.4 435 50.4 435 DL 57.4 435
52.4 435 DL 62.4 435 57.4 435 DL(typedef v)72 447.6 Q(oid \(*SmsSa)-.2 E
-.15(ve)-.2 G -1.1(Yo).15 G(urselfRequestProc\)\(\);)1.1 E -.2(vo)72
471.6 S(id Sa).2 E -.15(ve)-.2 G -1.1(Yo).15 G -1.667
(urselfRequestProc \()1.1 F F2(sms_conn).833 E F1(,)A F2(mana)2.5 E -.1
(ge)-.1 G(r_data).1 E F1(,).833 E F2(save_type)2.5 E F1(,).833 E F2
(shutdown)2.5 E F1(,).833 E F2(inter)2.5 E(act_style)-.15 E F1(,).833 E
F2(fast)2.5 E F1(,).833 E F2(global)2.5 E F1(\)).833 E(SmsConn)82 483.6
Q F2(sms_conn)2.5 E F1(;).833 E(SmPointer)82 495.6 Q F2(mana)2.5 E -.1
(ge)-.1 G(r_data).1 E F1(;).833 E(int)82 507.6 Q F2(save_type)2.5 E F1
(;).833 E(Bool)82 519.6 Q F2(shutdown)2.5 E F1(;).833 E(int)82 531.6 Q
F2(inter)2.5 E(act_style)-.15 E F1(;).833 E(Bool)82 543.6 Q F2(fast)2.5
E F1(;).833 E(Bool)82 555.6 Q F2(global)2.5 E F1(;).833 E F2(sms_conn)72
574.8 Q F1(The session management connection object.)32.56 E F2(mana)72
590.4 Q -.1(ge)-.1 G(r_data).1 E F1
(Manager data speci\214ed when the callback w)13.87 E(as re)-.1 E
(gistered.)-.15 E F2(save_type)72 606 Q F1
(Speci\214es the type of information that should be sa)32.57 E -.15(ve)
-.2 G(d.).15 E F2(shutdown)72 621.6 Q F1(Speci\214es if a shutdo)33.66 E
(wn is taking place.)-.25 E F2(inter)72 637.2 Q(act_style)-.15 E F1
(The type of interaction allo)17.71 E(wed with the user)-.25 E(.)-.55 E
F2(fast)72 652.8 Q F1(If)57.55 E F0 -.74(Tr)3.333 G(ue).74 E F1 2.5(,t)
.833 G(he client should sa)-2.5 E .3 -.15(ve i)-.2 H
(ts state as quickly as possible.).15 E F2(global)72 668.4 Q F1
(Controls who gets the `)46.44 E(`Sa)-.74 E .3 -.15(ve Y)-.2 H(ourself.)
-.95 E -.74('')-.7 G 50.4 664.5 50.4 674.5 DL 50.4 662.5 50.4 672.5 DL
55.4 676 50.4 676 DL 57.4 676 52.4 676 DL 62.4 676 57.4 676 DL .056
(The Sa)72 696 R .356 -.15(ve Y)-.2 H .057(ourself Request prompts the \
session manager to initiate a checkpoint or shutdo)-.95 F 2.557(wn. F)
-.25 F .057(or informa-)-.15 F .226(tion on the sa)72 708 R -.15(ve)-.2
G .226(_type, shutdo).15 F .226(wn, interact_style, and f)-.25 F .226
(ast ar)-.1 F .226(guments, see section 6.3, `)-.18 F .226
(`Sending a Sa)-.74 F .526 -.15(ve Y)-.2 H(our)-.95 E(-)-.2 E
(self Message.)72 720 Q -.74('')-.7 G 2.5<ad31>274.86 768 S 2.5<37ad>
-2.5 G 0 Cg EP
%%Page: 18 20
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Bold@0 SF 2.5(XS)72 48 S(ession Management Library)-2.5 E
(X11, Release 6.4)226.74 E/F1 10/Times-Roman@0 SF .593
(If global is set to)72 84 R F0 -.74(Tr)3.926 G(ue).74 E F1 3.093(,t)
.833 G .593(hen the resulting `)-3.093 F(`Sa)-.74 E .893 -.15(ve Y)-.2 H
-1.95(ourself ')-.95 F 3.093('s)-.74 G .594
(hould be sent to all applications.)-3.093 F .594(If global is)5.594 F
(set to)72 96 Q F0 -.25(Fa)3.333 G(lse).25 E F1 2.5(,t).833 G(hen the `)
-2.5 E(`Sa)-.74 E .3 -.15(ve Y)-.2 H -1.95(ourself ')-.95 F 2.5('s)-.74
G(hould only be sent to the client that requested it.)-2.5 E F0 2.5
(6.1.5. The)72 120 R(Sa)2.5 E .2 -.1(ve Y)-.25 H
(ourself Phase 2 Request Callback)-1.01 E F1(The Sa)72 135.6 Q .3 -.15
(ve Y)-.2 H(ourself Phase 2 Request callback is of type)-.95 E F0(SmsSa)
3.333 E -.1(ve)-.25 G -1.11(Yo).1 G(urselfPhase2RequestPr)1.11 E(oc)-.18
E F1(.).833 E .4 LW 50.4 152.1 50.4 162.1 DL 50.4 150.1 50.4 160.1 DL
55.4 150.6 50.4 150.6 DL 57.4 150.6 52.4 150.6 DL 62.4 150.6 57.4 150.6
DL(typedef v)72 163.2 Q(oid \(*SmsSa)-.2 E -.15(ve)-.2 G -1.1(Yo).15 G
(urselfPhase2RequestProc\)\(\);)1.1 E -.2(vo)72 187.2 S(id SmsSa).2 E
-.15(ve)-.2 G -1.1(Yo).15 G -1.667(urselfPhase2RequestProc \()1.1 F/F2
10/Times-Italic@0 SF(sms_conn).833 E F1(,)A F2(mana)2.5 E -.1(ge)-.1 G
(r_data).1 E F1(\)).833 E(SmsConn)82 199.2 Q F2(sms_conn)2.5 E F1(;).833
E(SmPointer)82 211.2 Q F2(mana)2.5 E -.1(ge)-.1 G(r_data).1 E F1(;).833
E F2(sms_conn)72 230.4 Q F1(The session management connection object.)
32.56 E F2(mana)72 246 Q -.1(ge)-.1 G(r_data).1 E F1
(Manager data speci\214ed when the callback w)13.87 E(as re)-.1 E
(gistered.)-.15 E 50.4 242.1 50.4 252.1 DL 50.4 240.1 50.4 250.1 DL 55.4
253.6 50.4 253.6 DL 57.4 253.6 52.4 253.6 DL 62.4 253.6 57.4 253.6 DL
.598(This request is sent by clients that manage other clients \(for e)
72 273.6 R .598(xample, windo)-.15 F 3.098(wm)-.25 G .598(anagers, w)
-3.098 F .598(orkspace man-)-.1 F .706(agers, and so on\).)72 285.6 R
.706(Such managers must mak)5.706 F 3.206(es)-.1 G .707
(ure that all of the clients that are being managed are in an)-3.206 F
(idle state so that their state can be sa)72 297.6 Q -.15(ve)-.2 G(d.)
.15 E F0 2.5(6.1.6. The)72 321.6 R(Sa)2.5 E .2 -.1(ve Y)-.25 H
(ourself Done Callback)-1.01 E F1 .486(When the client is done sa)72
337.2 R .486(ving its state in response to a `)-.2 F(`Sa)-.74 E .786
-.15(ve Y)-.2 H -1.95(ourself ')-.95 F 2.986('m)-.74 G .486(essage, the)
-2.986 F F0(SmsSa)3.819 E -.1(ve)-.25 G -1.11(Yo).1 G(urself-)1.11 E
(DonePr)72 349.2 Q(oc)-.18 E F1(will be in)3.333 E -.2(vo)-.4 G -.1(ke)
.2 G(d.).1 E 50.4 365.7 50.4 375.7 DL 50.4 363.7 50.4 373.7 DL 55.4
364.2 50.4 364.2 DL 57.4 364.2 52.4 364.2 DL 62.4 364.2 57.4 364.2 DL
(typedef v)72 376.8 Q(oid \(*SmsSa)-.2 E -.15(ve)-.2 G -1.1(Yo).15 G
(urselfDoneProc\)\(\);)1.1 E -.2(vo)72 400.8 S(id Sa).2 E -.15(ve)-.2 G
-1.1(Yo).15 G -1.667(urselfDoneProc \()1.1 F F2(sms_conn).833 E F1(,)A
F2(mana)2.5 E -.1(ge)-.1 G(r_data).1 E F1(,).833 E F2(success)2.5 E F1
(\)).833 E(SmsConn)82 412.8 Q F2(sms_conn)2.5 E F1(;).833 E(SmPointer)82
424.8 Q F2(mana)2.5 E -.1(ge)-.1 G(r_data).1 E F1(;).833 E(Bool)82 436.8
Q F2(success)2.5 E F1(;).833 E F2(sms_conn)72 456 Q F1
(The session management connection object.)32.56 E F2(mana)72 471.6 Q
-.1(ge)-.1 G(r_data).1 E F1
(Manager data speci\214ed when the callback w)13.87 E(as re)-.1 E
(gistered.)-.15 E F2(success)72 487.2 Q F1(If)42.01 E F0 -.74(Tr)3.333 G
(ue).74 E F1 2.5(,t).833 G(he Sa)-2.5 E .3 -.15(ve Y)-.2 H
(ourself operation w)-.95 E(as completed successfully)-.1 E(.)-.65 E
50.4 483.3 50.4 493.3 DL 50.4 481.3 50.4 491.3 DL 55.4 494.8 50.4 494.8
DL 57.4 494.8 52.4 494.8 DL 62.4 494.8 57.4 494.8 DL .944(Before the `)
72 514.8 R(`Sa)-.74 E 1.244 -.15(ve Y)-.2 H .944(ourself Done')-.95 F
3.444('w)-.74 G .944(as sent, the client must ha)-3.544 F 1.244 -.15
(ve s)-.2 H .944(et each required property at least once).15 F
(since it re)72 526.8 Q(gistered with the session manager)-.15 E(.)-.55
E F0 2.5(6.1.7. The)72 550.8 R(Connection Closed Callback)2.5 E F1 1.339
(If the client properly terminates \(that is, it calls)72 566.4 R F0
(SmcCloseConnection)4.672 E F1 1.339(\), the).833 F F0
(SmsCloseConnectionPr)4.671 E(oc)-.18 E F1(callback is in)72 578.4 Q -.2
(vo)-.4 G -.1(ke).2 G(d.).1 E 50.4 594.9 50.4 604.9 DL 50.4 592.9 50.4
602.9 DL 55.4 593.4 50.4 593.4 DL 57.4 593.4 52.4 593.4 DL 62.4 593.4
57.4 593.4 DL(typedef v)72 606 Q(oid \(*SmsCloseConnectionProc\)\(\);)
-.2 E -.2(vo)72 630 S(id CloseConnectionProc).2 E(\().833 E F2(sms_conn)
.833 E F1(,)A F2(mana)2.5 E -.1(ge)-.1 G(r_data).1 E F1(,).833 E F2
(count)2.5 E F1(,).833 E F2 -.37(re)2.5 G(ason_msgs).37 E F1(\)).833 E
(SmsConn)82 642 Q F2(sms_conn)2.5 E F1(;).833 E(SmPointer)82 654 Q F2
(mana)2.5 E -.1(ge)-.1 G(r_data).1 E F1(;).833 E(int)82 666 Q F2(count)
2.5 E F1(;).833 E(char **)82 678 Q F2 -.37(re)C(ason_msgs).37 E F1(;)
.833 E F2(sms_conn)72 697.2 Q F1
(The session management connection object.)32.56 E F2(mana)72 712.8 Q
-.1(ge)-.1 G(r_data).1 E F1
(Manager data speci\214ed when the callback w)13.87 E(as re)-.1 E
(gistered.)-.15 E 2.5<ad31>274.86 768 S 2.5<38ad>-2.5 G 0 Cg EP
%%Page: 19 21
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Bold@0 SF 2.5(XS)72 48 S(ession Management Library)-2.5 E
(X11, Release 6.4)226.74 E/F1 10/Times-Italic@0 SF(count)72 84 Q/F2 10
/Times-Roman@0 SF(The number of reason messages.)49.78 E F1 -.37(re)72
99.6 S(ason_msgs).37 E F2(The reasons for closing the connection.)20.15
E .4 LW 50.4 95.7 50.4 105.7 DL 50.4 93.7 50.4 103.7 DL 55.4 107.2 50.4
107.2 DL 57.4 107.2 52.4 107.2 DL 62.4 107.2 57.4 107.2 DL 1.303
(The reason_msgs ar)72 127.2 R 1.303(gument will most lik)-.18 F 1.303
(ely be NULL and the count ar)-.1 F 1.303
(gument zero \(0\) if resignation is)-.18 F -.15(ex)72 139.2 S .793
(pected by the user).15 F 5.793(.O)-.55 G .793
(therwise, it contains a list of null-terminated Compound T)-5.793 F
-.15(ex)-.7 G 3.292(ts).15 G .792(trings representing)-3.292 F
(the reason for termination.)72 151.2 Q
(The session manager should display these reason messages to the user)5
E(.)-.55 E(Call)72 166.8 Q F0(SmFr)3.602 E(eeReasons)-.18 E F2 .269
(to free the reason messages.)3.602 F -.15(Fo)5.27 G 2.77(rf).15 G .27
(urther information, see section 8, `)-2.77 F .27(`Freeing Data.)-.74 F
-.74('')-.7 G F0 2.5(6.1.8. The)72 190.8 R(Set Pr)2.5 E
(operties Callback)-.18 E F2 .401
(When the client sets session management properties, the)72 206.4 R F0
(SmsSetPr)3.733 E(opertiesPr)-.18 E(oc)-.18 E F2 .4(callback will be in)
3.733 F -.2(vo)-.4 G -.1(ke).2 G(d.).1 E 50.4 222.9 50.4 232.9 DL 50.4
220.9 50.4 230.9 DL 55.4 221.4 50.4 221.4 DL 57.4 221.4 52.4 221.4 DL
62.4 221.4 57.4 221.4 DL(typedef v)72 234 Q
(oid \(*SmsSetPropertiesProc\)\(\);)-.2 E -.2(vo)72 258 S
(id SetPropertiesProc).2 E(\().833 E F1(sms_conn).833 E F2(,)A F1(mana)
2.5 E -.1(ge)-.1 G(r_data).1 E F2(,).833 E F1(num_pr)2.5 E(ops)-.45 E F2
(,).833 E F1(pr)2.5 E(ops)-.45 E F2(\)).833 E(SmsConn)82 270 Q F1
(sms_conn)2.5 E F2(;).833 E(SmPointer)82 282 Q F1(mana)2.5 E -.1(ge)-.1
G(r_data).1 E F2(;).833 E(int)82 294 Q F1(num_pr)2.5 E(ops)-.45 E F2(;)
.833 E(SmProp **)82 306 Q F1(pr)A(ops)-.45 E F2(;).833 E F1(smc_conn)72
325.2 Q F2(The session management connection object.)32.01 E F1(mana)72
340.8 Q -.1(ge)-.1 G(r_data).1 E F2
(Manager data speci\214ed when the callback w)13.87 E(as re)-.1 E
(gistered.)-.15 E F1(num_pr)72 356.4 Q(ops)-.45 E F2
(The number of properties.)27.45 E F1(pr)72 372 Q(ops)-.45 E F2
(The list of properties to set.)49.67 E 50.4 368.1 50.4 378.1 DL 50.4
366.1 50.4 376.1 DL 55.4 379.6 50.4 379.6 DL 57.4 379.6 52.4 379.6 DL
62.4 379.6 57.4 379.6 DL 1.501
(The properties are speci\214ed as an array of property pointers.)72
399.6 R -.15(Fo)6.501 G 4.002(rad).15 G 1.502
(escription of session management)-4.002 F(properties and the)72 411.6 Q
F0(SmPr)3.333 E(op)-.18 E F2(structure, see section 7, `)3.333 E
(`Session Management Properties.)-.74 E -.74('')-.7 G(Pre)72 427.2 Q
.542(viously set property v)-.25 F .542(alues may be o)-.25 F -.15(ve)
-.15 G -.2(r-).15 G 3.042(written. Some).2 F .541(properties ha)3.041 F
.841 -.15(ve p)-.2 H .541(rede\214ned semantics.).15 F .541(The ses-)
5.541 F(sion manager is required to store nonprede\214ned properties.)72
439.2 Q 1.947 -.8(To f)72 454.8 T .347(ree each property).8 F 2.847(,u)
-.65 G(se)-2.847 E F0(SmFr)3.68 E(eePr)-.18 E(operty)-.18 E F2 5.347(.F)
.833 G .348(or further information, see section 8, `)-5.497 F .348
(`Freeing Data.)-.74 F 4.328 -.74('' Y)-.7 H(ou)-.36 E
(should free the actual array of pointers with a call to)72 466.8 Q F0
(fr)3.333 E(ee)-.18 E F2(.).833 E F0 2.5(6.1.9. The)72 490.8 R
(Delete Pr)2.5 E(operties Callback)-.18 E F2 1.385
(When the client deletes session management properties, the)72 506.4 R
F0(SmsDeletePr)4.718 E(opertiesPr)-.18 E(oc)-.18 E F2 1.385
(callback will be)4.718 F(in)72 518.4 Q -.2(vo)-.4 G -.1(ke).2 G(d.).1 E
50.4 534.9 50.4 544.9 DL 50.4 532.9 50.4 542.9 DL 55.4 533.4 50.4 533.4
DL 57.4 533.4 52.4 533.4 DL 62.4 533.4 57.4 533.4 DL(typedef v)72 546 Q
(oid \(*SmsDeletePropertiesProc\)\(\);)-.2 E -.2(vo)72 570 S
(id DeletePropertiesProc).2 E(\().833 E F1(sms_conn).833 E F2(,)A F1
(mana)2.5 E -.1(ge)-.1 G(r_data).1 E F2(,).833 E F1(num_pr)2.5 E(ops)
-.45 E F2(,).833 E F1(pr)2.5 E(op_names)-.45 E F2(\)).833 E(SmsConn)82
582 Q F1(sms_conn)2.5 E F2(;).833 E(SmPointer)82 594 Q F1(mana)2.5 E -.1
(ge)-.1 G(r_data).1 E F2(;).833 E(int)82 606 Q F1(num_pr)2.5 E(ops)-.45
E F2(;).833 E(char **)82 618 Q F1(pr)A(op_names)-.45 E F2(;).833 E F1
(smc_conn)72 637.2 Q F2(The session management connection object.)32.01
E F1(mana)72 652.8 Q -.1(ge)-.1 G(r_data).1 E F2
(Manager data speci\214ed when the callback w)13.87 E(as re)-.1 E
(gistered.)-.15 E F1(num_pr)72 668.4 Q(ops)-.45 E F2
(The number of properties.)27.45 E F1(pr)72 684 Q(op_names)-.45 E F2
(The list of properties to delete.)23.01 E 50.4 680.1 50.4 690.1 DL 50.4
678.1 50.4 688.1 DL 55.4 691.6 50.4 691.6 DL 57.4 691.6 52.4 691.6 DL
62.4 691.6 57.4 691.6 DL .313
(The properties are speci\214ed as an array of strings.)72 711.6 R -.15
(Fo)5.314 G 2.814(rad).15 G .314
(escription of session management properties and)-2.814 F(the)72 723.6 Q
F0(SmPr)3.333 E(op)-.18 E F2(structure, see section 7, `)3.333 E
(`Session Management Properties.)-.74 E -.74('')-.7 G 2.5<ad31>274.86
768 S 2.5<39ad>-2.5 G 0 Cg EP
%%Page: 20 22
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Bold@0 SF 2.5(XS)72 48 S(ession Management Library)-2.5 E
(X11, Release 6.4)226.74 E 2.5(6.1.10. The)72 84 R(Get Pr)2.5 E
(operties Callback)-.18 E/F1 10/Times-Roman@0 SF(The)72 99.6 Q F0
(SmsGetPr)3.333 E(opertiesPr)-.18 E(oc)-.18 E F1(callback is in)3.333 E
-.2(vo)-.4 G -.1(ke).2 G 2.5(dw).1 G(hen the client w)-2.5 E
(ants to retrie)-.1 E .3 -.15(ve p)-.25 H(roperties it set.).15 E .4 LW
50.4 116.1 50.4 126.1 DL 50.4 114.1 50.4 124.1 DL 55.4 114.6 50.4 114.6
DL 57.4 114.6 52.4 114.6 DL 62.4 114.6 57.4 114.6 DL(typedef v)72 127.2
Q(oid \(*SmsGetPropertiesProc\)\(\);)-.2 E -.2(vo)72 151.2 S
(id GetPropertiesProc).2 E(\().833 E/F2 10/Times-Italic@0 SF(sms_conn)
.833 E F1(,)A F2(mana)2.5 E -.1(ge)-.1 G(r_data).1 E F1(\)).833 E
(SmsConn)82 163.2 Q F2(sms_conn)2.5 E F1(;).833 E(SmPointer)82 175.2 Q
F2(mana)2.5 E -.1(ge)-.1 G(r_data).1 E F1(;).833 E F2(smc_conn)72 194.4
Q F1(The session management connection object.)32.01 E F2(mana)72 210 Q
-.1(ge)-.1 G(r_data).1 E F1
(Manager data speci\214ed when the callback w)13.87 E(as re)-.1 E
(gistered.)-.15 E 50.4 206.1 50.4 216.1 DL 50.4 204.1 50.4 214.1 DL 55.4
217.6 50.4 217.6 DL 57.4 217.6 52.4 217.6 DL 62.4 217.6 57.4 217.6 DL
.925(The session manager should respond by calling)72 237.6 R F0
(SmsRetur)4.258 E(nPr)-.15 E(operties)-.18 E F1 5.925(.A).833 G .924
(ll of the properties set for this)-5.925 F(client should be returned.)
72 249.6 Q F0 2.5(6.2. Registering)72 273.6 R(the Client)2.5 E F1 1.6
-.8(To r)72 289.2 T -.15(eg).8 G(ister a client \(in response to a).15 E
F0(SmsRegisterClientPr)3.333 E(oc)-.18 E F1(callback\), use)3.333 E F0
(SmsRegisterClientReply)3.333 E F1(.).833 E 50.4 305.7 50.4 315.7 DL
50.4 303.7 50.4 313.7 DL 55.4 304.2 50.4 304.2 DL 57.4 304.2 52.4 304.2
DL 62.4 304.2 57.4 304.2 DL(Status SmsRe)72 316.8 Q -1.667
(gisterClientReply \()-.15 F F2(sms_conn).833 E F1(,)A F2(client_id)2.5
E F1(\)).833 E(SmsConn)82 328.8 Q F2(sms_conn)2.5 E F1(;).833 E(char *)
82 340.8 Q F2(client_id)A F1(;).833 E F2(sms_conn)72 360 Q F1
(The session management connection object.)32.56 E F2(client_id)72 375.6
Q F1 2.5(An)37 G(ull-terminated string representing a unique client ID.)
-2.5 E 50.4 371.7 50.4 381.7 DL 50.4 369.7 50.4 379.7 DL 55.4 383.2 50.4
383.2 DL 57.4 383.2 52.4 383.2 DL 62.4 383.2 57.4 383.2 DL .753
(The return v)72 403.2 R .753(alue of)-.25 F F0(SmsRegisterClientReply)
4.086 E F1 .754(is zero for f)4.086 F .754(ailure and a positi)-.1 F
1.054 -.15(ve v)-.25 H .754(alue for success.)-.1 F -.15(Fa)5.754 G
(ilure).15 E(will occur if SMlib can not allocate memory to hold a cop)
72 415.2 Q 2.5(yo)-.1 G 2.5(ft)-2.5 G(he client ID for it')-2.5 E 2.5
(so)-.55 G(wn internal needs.)-2.75 E .616(If a non-NULL pre)72 430.8 R
.616(vious_id w)-.25 F .615(as speci\214ed when the client re)-.1 F .615
(gistered itself, client_id should be identical to)-.15 F(pre)72 442.8 Q
(vious_id.)-.25 E .442(Otherwise, client_id should be a unique ID fresh\
ly generated by the session manager)72 458.4 R 5.442(.I)-.55 G 2.942(na)
-5.442 G .442(ddition, the ses-)-2.942 F .045
(sion manager should send a `)72 470.4 R(`Sa)-.74 E .345 -.15(ve Y)-.2 H
-1.95(ourself ')-.95 F 2.544('m)-.74 G .044
(essage with type = Local, shutdo)-2.544 F .044(wn = F)-.25 F .044
(alse, interact-style =)-.15 F(None, and f)72 482.4 Q(ast = F)-.1 E
(alse immediately after re)-.15 E(gistering the client.)-.15 E .349(Not\
e that once a client ID has been assigned to the client, the client k)72
498 R .349(eeps this ID inde\214nitely)-.1 F 5.349(.I)-.65 G 2.849(ft)
-5.349 G .349(he client)-2.849 F .784
(is terminated and restarted, it will be reassigned the same ID.)72 510
R .784(It is desirable to be able to pass client IDs)5.784 F .718
(around from machine to machine, from user to user)72 522 R 3.218(,a)-.4
G .718(nd from session manager to session manager)-3.218 F 3.219(,w)-.4
G(hile)-3.219 E .371(retaining the identity of the client.)72 534 R .37
(This, combined with the inde\214nite persistence of client IDs, means \
that)5.371 F(client IDs need to be globally unique.)72 546 Q -1.1(Yo)72
561.6 S 2.5(us)1.1 G(hould call the)-2.5 E F0(SmsGenerateClientID)3.333
E F1(function to generate a globally unique client ID.)3.333 E 50.4
578.1 50.4 588.1 DL 50.4 576.1 50.4 586.1 DL 55.4 576.6 50.4 576.6 DL
57.4 576.6 52.4 576.6 DL 62.4 576.6 57.4 576.6 DL
(char *SmsGenerateClientID)72 589.2 Q(\().833 E F2(sms_conn).833 E F1
(\)).833 E(SmsConn)82 601.2 Q F2(sms_conn)2.5 E F1(;).833 E F2(sms_conn)
72 620.4 Q F1(The session management connection object.)32.56 E 50.4
616.5 50.4 626.5 DL 50.4 614.5 50.4 624.5 DL 55.4 628 50.4 628 DL 57.4
628 52.4 628 DL 62.4 628 57.4 628 DL .444
(NULL will be returned if the ID could not be generated.)72 648 R .445
(Otherwise, the return v)5.445 F .445(alue of the function is the)-.25 F
(client ID.)72 660 Q(It should be freed with a call to)5 E F0(fr)3.333 E
(ee)-.18 E F1(when no longer needed.)3.333 E F0 2.5(6.3. Sending)72 684
R 2.5(aS)2.5 G -2.1 -.25(av e)-2.5 H -1.11(Yo)2.75 G(urself Message)1.11
E F1 2.5<ad32>274.86 768 S 2.5<30ad>-2.5 G 0 Cg EP
%%Page: 21 23
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Bold@0 SF 2.5(XS)72 48 S(ession Management Library)-2.5 E
(X11, Release 6.4)226.74 E/F1 10/Times-Roman@0 SF 1.6 -.8(To s)72 84 T
(end a `).8 E(`Sa)-.74 E .3 -.15(ve Y)-.2 H -1.95(ourself ')-.95 F 2.5
('t)-.74 G 2.5(oac)-2.5 G(lient, use)-2.5 E F0(SmsSa)3.333 E -.1(ve)-.25
G -1.11(Yo).1 G(urself)1.11 E F1(.).833 E .4 LW 50.4 100.5 50.4 110.5 DL
50.4 98.5 50.4 108.5 DL 55.4 99 50.4 99 DL 57.4 99 52.4 99 DL 62.4 99
57.4 99 DL -.2(vo)72 111.6 S(id SmsSa).2 E -.15(ve)-.2 G -1.1(Yo).15 G
-1.667(urself \()1.1 F/F2 10/Times-Italic@0 SF(sms_conn).833 E F1(,)A F2
(save_type)2.5 E F1(,).833 E F2(shutdown)2.5 E F1(,).833 E F2(inter)2.5
E(act_style)-.15 E F1(,).833 E F2(fast)2.5 E F1(\)).833 E(SmsConn)82
123.6 Q F2(sms_conn)2.5 E F1(;).833 E(int)82 135.6 Q F2(save_type)2.5 E
F1(;).833 E(Bool)82 147.6 Q F2(shutdown)2.5 E F1(;).833 E(int)82 159.6 Q
F2(inter)2.5 E(act_style)-.15 E F1(;).833 E(Bool)82 171.6 Q F2(fast)2.5
E F1(;).833 E F2(sms_conn)72 190.8 Q F1
(The session management connection object.)32.56 E F2(save_type)72 206.4
Q F1(Speci\214es the type of information that should be sa)32.57 E -.15
(ve)-.2 G(d.).15 E F2(shutdown)72 222 Q F1(Speci\214es if a shutdo)33.66
E(wn is taking place.)-.25 E F2(inter)72 237.6 Q(act_style)-.15 E F1
(The type of interaction allo)17.71 E(wed with the user)-.25 E(.)-.55 E
F2(fast)72 253.2 Q F1(If)57.55 E F0 -.74(Tr)3.333 G(ue).74 E F1 2.5(,t)
.833 G(he client should sa)-2.5 E .3 -.15(ve i)-.2 H
(ts state as quickly as possible.).15 E 50.4 249.3 50.4 259.3 DL 50.4
247.3 50.4 257.3 DL 55.4 260.8 50.4 260.8 DL 57.4 260.8 52.4 260.8 DL
62.4 260.8 57.4 260.8 DL .322(The session manager sends a `)72 280.8 R
(`Sa)-.74 E .622 -.15(ve Y)-.2 H -1.95(ourself ')-.95 F 2.822('m)-.74 G
.321(essage to a client either to checkpoint it or just before ter)
-2.822 F(-)-.2 E .555(mination so that it can sa)72 292.8 R .855 -.15
(ve i)-.2 H .555(ts state.).15 F .556
(The client responds with zero or more `)5.555 F .556(`Set Properties')
-.74 F 3.056('m)-.74 G .556(essages to)-3.056 F .583
(update the properties indicating ho)72 304.8 R 3.083(wt)-.25 G 3.083
(or)-3.083 G .582(estart the client.)-3.083 F .582
(When all the properties ha)5.582 F .882 -.15(ve b)-.2 H .582
(een set, the client).15 F(sends a `)72 316.8 Q(`Sa)-.74 E .3 -.15(ve Y)
-.2 H(ourself Done')-.95 E 2.5('m)-.74 G(essage.)-2.5 E .668
(If interact_style is)72 332.4 R F0(SmInteractStyleNone)4.002 E F1 3.169
(,t).833 G .669(he client must not interact with the user while sa)
-3.169 F .669(ving state.)-.2 F(If)5.669 E 1.094(interact_style is)72
344.4 R F0(SmInteractStyleErr)4.427 E(ors)-.18 E F1 3.593(,t).833 G
1.093(he client may interact with the user only if an error condition)
-3.593 F 2.666(arises. If)72 356.4 R .167(interact_style is)2.667 F F0
(SmInteractStyleAny)3.5 E F1 2.667(,t).833 G .167
(hen the client may interact with the user for an)-2.667 F 2.667(yp)-.15
G(urpose.)-2.667 E .567(The client must send an `)72 368.4 R .566
(`Interact Request')-.74 F 3.066('m)-.74 G .566(essage and w)-3.066 F
.566(ait for an `)-.1 F(`Interact')-.74 E 3.066('m)-.74 G .566
(essage from the session)-3.066 F 1.016
(manager before it can interact with the user)72 380.4 R 6.017(.W)-.55 G
1.017(hen the client is done interacting with the user)-6.017 F 3.517
(,i)-.4 G 3.517(ts)-3.517 G(hould)-3.517 E 1.126(send an `)72 392.4 R
1.126(`Interact Done')-.74 F 3.626('m)-.74 G 3.626(essage. The)-3.626 F
-.74(``)3.626 G 1.126(Interact Request').74 F 3.626('m)-.74 G 1.126
(essage can be sent an)-3.626 F 3.625(yt)-.15 G 1.125(ime after a `)
-3.625 F(`Sa)-.74 E -.15(ve)-.2 G -1.1(Yo)72 404.4 S -1.95(urself ')1.1
F 2.5('a)-.74 G(nd before a `)-2.5 E(`Sa)-.74 E .3 -.15(ve Y)-.2 H
(ourself Done.)-.95 E -.74('')-.7 G .282(If sa)72 420 R -.15(ve)-.2 G
.282(_type is).15 F F0(SmSa)3.615 E -.1(ve)-.25 G(Local).1 E F1 2.782
(,t).833 G .282
(he client must update the properties to re\215ect its current state.)
-2.782 F(Speci\214cally)5.283 E(,)-.65 E .355(it should sa)72 432 R .655
-.15(ve e)-.2 H .355(nough information to restore the state as seen by \
the user of this client.).15 F .355(It should not af)5.355 F(fect)-.25 E
.602(the state as seen by other users.)72 444 R .603(If sa)5.603 F -.15
(ve)-.2 G .603(_type is).15 F F0(SmSa)3.936 E -.1(ve)-.25 G(Global).1 E
F1 .603(the user w)3.936 F .603(ants the client to commit all of)-.1 F
.572(its data to permanent, globally accessible storage.)72 456 R .572
(If sa)5.572 F -.15(ve)-.2 G .572(_type is).15 F F0(SmSa)3.904 E -.1(ve)
-.25 G(Both).1 E F1 3.071(,t).833 G .571(he client should do both)-3.071
F(of these \(it should \214rst commit the data to permanent storage bef\
ore updating its properties\).)72 468 Q 1.84(The shutdo)72 483.6 R 1.84
(wn ar)-.25 F 1.84
(gument speci\214es whether the session is being shut do)-.18 F 4.34
(wn. The)-.25 F 1.84(interaction is dif)4.34 F(ferent)-.25 E 1.01
(depending on whether or not shutdo)72 495.6 R 1.01(wn is set.)-.25 F
1.01(If not shutting do)6.01 F 1.01(wn, then the client can sa)-.25 F
1.31 -.15(ve a)-.2 H 1.01(nd resume).15 F .406(normal operation.)72
507.6 R .406(If shutting do)5.406 F .406(wn, the client must sa)-.25 F
.706 -.15(ve a)-.2 H .406(nd then must pre).15 F -.15(ve)-.25 G .407
(nt interaction until it recei).15 F -.15(ve)-.25 G(s).15 E(either a `)
72 519.6 Q(`Die')-.74 E 2.5('o)-.74 G 2.5(ra`)-2.5 G(`Shutdo)-3.24 E
(wn Cancelled,)-.25 E 1.48 -.74('' b)-.7 H(ecause an).74 E
(ything the user does after the sa)-.15 E .3 -.15(ve w)-.2 H
(ill be lost.).15 E .613(The f)72 535.2 R .613(ast ar)-.1 F .613
(gument speci\214es that the client should sa)-.18 F .913 -.15(ve i)-.2
H .613(ts state as quickly as possible.).15 F -.15(Fo)5.612 G 3.112(re)
.15 G .612(xample, if the)-3.262 F(session manager kno)72 547.2 Q
(ws that po)-.25 E(wer is about to f)-.25 E(ail, it should set f)-.1 E
(ast to)-.1 E F0 -.74(Tr)3.333 G(ue).74 E F1(.).833 E F0 2.5
(6.4. Sending)72 571.2 R 2.5(aS)2.5 G -2.1 -.25(av e)-2.5 H -1.11(Yo)
2.75 G(urself Phase 2 Message)1.11 E F1(In order to send a `)72 586.8 Q
(`Sa)-.74 E .3 -.15(ve Y)-.2 H(ourself Phase 2')-.95 E 2.5('m)-.74 G
(essage to a client, use)-2.5 E F0(SmsSa)3.333 E -.1(ve)-.25 G -1.11(Yo)
.1 G(urselfPhase2)1.11 E F1(.).833 E 50.4 603.3 50.4 613.3 DL 50.4 601.3
50.4 611.3 DL 55.4 601.8 50.4 601.8 DL 57.4 601.8 52.4 601.8 DL 62.4
601.8 57.4 601.8 DL -.2(vo)72 614.4 S(id SmsSa).2 E -.15(ve)-.2 G -1.1
(Yo).15 G -1.667(urselfPhase2 \()1.1 F F2(sms_conn).833 E F1(\)).833 E
(SmsConn)82 626.4 Q F2(sms_conn)2.5 E F1(;).833 E F2(sms_conn)72 645.6 Q
F1(The session management connection object.)32.56 E 50.4 641.7 50.4
651.7 DL 50.4 639.7 50.4 649.7 DL 55.4 653.2 50.4 653.2 DL 57.4 653.2
52.4 653.2 DL 62.4 653.2 57.4 653.2 DL 1.621
(The session manager sends this message to a client that has pre)72
673.2 R 1.621(viously sent a `)-.25 F(`Sa)-.74 E 1.922 -.15(ve Y)-.2 H
1.622(ourself Phase 2)-.95 F(Request')72 685.2 Q 2.911('m)-.74 G 2.911
(essage. This)-2.911 F .411
(message informs the client that all other clients are in a \214x)2.911
F .41(ed state and this client)-.15 F(can sa)72 697.2 Q .3 -.15(ve s)-.2
H(tate that is associated with other clients.).15 E 2.5<ad32>274.86 768
S 2.5<31ad>-2.5 G 0 Cg EP
%%Page: 22 24
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Bold@0 SF 2.5(XS)72 48 S(ession Management Library)-2.5 E
(X11, Release 6.4)226.74 E 2.5(6.5. Sending)72 84 R(an Interact Message)
2.5 E/F1 10/Times-Roman@0 SF 1.6 -.8(To s)72 99.6 T(end an `).8 E
(`Interact')-.74 E 2.5('m)-.74 G(essage to a client, use)-2.5 E F0
(SmsInteract)3.333 E F1(.).833 E .4 LW 50.4 116.1 50.4 126.1 DL 50.4
114.1 50.4 124.1 DL 55.4 114.6 50.4 114.6 DL 57.4 114.6 52.4 114.6 DL
62.4 114.6 57.4 114.6 DL -.2(vo)72 127.2 S(id SmsInteract).2 E(\().833 E
/F2 10/Times-Italic@0 SF(sms_conn).833 E F1(\)).833 E(SmsConn)82 139.2 Q
F2(sms_conn)2.5 E F1(;).833 E F2(sms_conn)72 158.4 Q F1
(The session management connection object.)32.56 E 50.4 154.5 50.4 164.5
DL 50.4 152.5 50.4 162.5 DL 55.4 166 50.4 166 DL 57.4 166 52.4 166 DL
62.4 166 57.4 166 DL .282(The `)72 186 R(`Interact')-.74 E 2.782('m)-.74
G .282(essage grants the client the pri)-2.782 F(vile)-.25 E .282
(ge of interacting with the user)-.15 F 5.283(.W)-.55 G .283
(hen the client is done)-5.283 F(interacting with the user)72 198 Q 2.5
(,i)-.4 G 2.5(tm)-2.5 G(ust send an `)-2.5 E(`Interact Done')-.74 E 2.5
('m)-.74 G(essage to the session manager)-2.5 E(.)-.55 E F0 2.5
(6.6. Sending)72 222 R 2.5(aS)2.5 G -2.1 -.25(av e)-2.5 H
(Complete Message)2.75 E F1 1.6 -.8(To s)72 237.6 T(end a `).8 E(`Sa)
-.74 E .3 -.15(ve C)-.2 H(omplete').15 E 2.5('m)-.74 G
(essage to a client, use)-2.5 E F0(SmsSa)3.333 E -.1(ve)-.25 G(Complete)
.1 E F1(.).833 E 50.4 254.1 50.4 264.1 DL 50.4 252.1 50.4 262.1 DL 55.4
252.6 50.4 252.6 DL 57.4 252.6 52.4 252.6 DL 62.4 252.6 57.4 252.6 DL
-.2(vo)72 265.2 S(id SmsSa).2 E -.15(ve)-.2 G -1.667(Complete \().15 F
F2(sms_conn).833 E F1(\)).833 E(SmsConn)82 277.2 Q F2(sms_conn)2.5 E F1
(;).833 E F2(sms_conn)72 296.4 Q F1
(The session management connection object.)32.56 E 50.4 292.5 50.4 302.5
DL 50.4 290.5 50.4 300.5 DL 55.4 304 50.4 304 DL 57.4 304 52.4 304 DL
62.4 304 57.4 304 DL 1.565(The session manager sends this message when \
it is done with a checkpoint.)72 324 R 1.565(The client is then free to)
6.565 F(change its state.)72 336 Q F0 2.5(6.7. Sending)72 360 R 2.5(aD)
2.5 G(ie Message)-2.5 E F1 1.6 -.8(To s)72 375.6 T(end a `).8 E(`Die')
-.74 E 2.5('m)-.74 G(essage to a client, use)-2.5 E F0(SmsDie)3.333 E F1
(.).833 E 50.4 392.1 50.4 402.1 DL 50.4 390.1 50.4 400.1 DL 55.4 390.6
50.4 390.6 DL 57.4 390.6 52.4 390.6 DL 62.4 390.6 57.4 390.6 DL -.2(vo)
72 403.2 S(id SmsDie).2 E(\().833 E F2(sms_conn).833 E F1(\)).833 E
(SmsConn)82 415.2 Q F2(sms_conn)2.5 E F1(;).833 E F2(sms_conn)72 434.4 Q
F1(The session management connection object.)32.56 E 50.4 430.5 50.4
440.5 DL 50.4 428.5 50.4 438.5 DL 55.4 442 50.4 442 DL 57.4 442 52.4 442
DL 62.4 442 57.4 442 DL .17
(Before the session manager terminates, it should w)72 462 R .17
(ait for a `)-.1 F .17(`Connection Closed')-.74 F 2.67('m)-.74 G .17
(essage from each client)-2.67 F(that it sent a `)72 474 Q(`Die')-.74 E
2.5('m)-.74 G(essage to, timing out appropriately)-2.5 E(.)-.65 E F0 2.5
(6.8. Cancelling)72 498 R 2.5(aS)2.5 G(hutdo)-2.5 E(wn)-.1 E F1 1.6 -.8
(To c)72 513.6 T(ancel a shutdo).8 E(wn, use)-.25 E F0(SmsShutdo)3.333 E
(wnCancelled)-.1 E F1(.).833 E 50.4 530.1 50.4 540.1 DL 50.4 528.1 50.4
538.1 DL 55.4 528.6 50.4 528.6 DL 57.4 528.6 52.4 528.6 DL 62.4 528.6
57.4 528.6 DL -.2(vo)72 541.2 S(id SmsShutdo).2 E -1.667(wnCancelled \()
-.25 F F2(sms_conn).833 E F1(\)).833 E(SmsConn)82 553.2 Q F2(sms_conn)
2.5 E F1(;).833 E F2(sms_conn)72 572.4 Q F1
(The session management connection object.)32.56 E 50.4 568.5 50.4 578.5
DL 50.4 566.5 50.4 576.5 DL 55.4 580 50.4 580 DL 57.4 580 52.4 580 DL
62.4 580 57.4 580 DL 1.253(The client can no)72 600 R 3.753(wc)-.25 G
1.253(ontinue as if the shutdo)-3.753 F 1.253(wn had ne)-.25 F -.15(ve)
-.25 G 3.753(rh).15 G 3.753(appened. If)-3.753 F 1.252
(the client has not sent a `)3.752 F(`Sa)-.74 E -.15(ve)-.2 G -1.1(Yo)72
612 S .047(urself Done')1.1 F 2.547('m)-.74 G .047
(essage yet, it can either abort the sa)-2.547 F .347 -.15(ve a)-.2 H
.047(nd send a `).15 F(`Sa)-.74 E .347 -.15(ve Y)-.2 H .048
(ourself Done')-.95 F 2.548('w)-.74 G .048(ith the success)-2.548 F(ar)
72 624 Q .452(gument set to)-.18 F F0 -.25(Fa)3.785 G(lse).25 E F1 2.952
(,o).833 G 2.952(ri)-2.952 G 2.951(tc)-2.952 G .451
(an continue with the sa)-2.951 F .751 -.15(ve a)-.2 H .451(nd send a `)
.15 F(`Sa)-.74 E .751 -.15(ve Y)-.2 H .451(ourself Done')-.95 F 2.951
('w)-.74 G .451(ith the success)-2.951 F(ar)72 636 Q
(gument set to re\215ect the outcome of the sa)-.18 E -.15(ve)-.2 G(.)
.15 E F0 2.5(6.9. Retur)72 660 R(ning Pr)-.15 E(operties)-.18 E F1
(In response to a `)72 675.6 Q(`Get Properties')-.74 E 2.5('m)-.74 G
(essage, the session manager should call)-2.5 E F0(SmsRetur)3.333 E(nPr)
-.15 E(operties)-.18 E F1(.).833 E 50.4 692.1 50.4 702.1 DL 50.4 690.1
50.4 700.1 DL 55.4 690.6 50.4 690.6 DL 57.4 690.6 52.4 690.6 DL 62.4
690.6 57.4 690.6 DL 2.5<ad32>274.86 768 S 2.5<32ad>-2.5 G 0 Cg EP
%%Page: 23 25
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Bold@0 SF 2.5(XS)72 48 S(ession Management Library)-2.5 E
(X11, Release 6.4)226.74 E/F1 10/Times-Roman@0 SF -.2(vo)72 84 S
(id SmsReturnProperties).2 E(\().833 E/F2 10/Times-Italic@0 SF(sms_conn)
.833 E F1(,).833 E F2(num_pr)2.5 E(ops)-.45 E F1(,).833 E F2(pr)2.5 E
(ops)-.45 E F1(\)).833 E(SmsConn)82 96 Q F2(sms_conn)2.5 E F1(;).833 E
(int)82 108 Q F2(num_pr)2.5 E(ops)-.45 E F1(;).833 E(SmProp **)82 120 Q
F2(pr)A(ops)-.45 E F1(;).833 E F2(sms_conn)72 139.2 Q F1
(The session management connection object.)32.56 E F2(num_pr)72 154.8 Q
(ops)-.45 E F1(The number of properties.)27.45 E F2(pr)72 170.4 Q(ops)
-.45 E F1(The list of properties to return to the client.)49.67 E .4 LW
50.4 166.5 50.4 176.5 DL 50.4 164.5 50.4 174.5 DL 55.4 178 50.4 178 DL
57.4 178 52.4 178 DL 62.4 178 57.4 178 DL .037
(The properties are returned as an array of property pointers.)72 198 R
-.15(Fo)5.037 G 2.537(rad).15 G .037
(escription of session management prop-)-2.537 F(erties and the)72 210 Q
F0(SmPr)3.333 E(op)-.18 E F1(structure, see section 7, `)3.333 E
(`Session Management Properties.)-.74 E -.74('')-.7 G F0 2.5
(6.10. Pinging)72 234 R 2.5(aC)2.5 G(lient)-2.5 E F1 1.801 -.8(To c)72
249.6 T .201(heck that a client is still ali).8 F -.15(ve)-.25 G 2.7(,y)
.15 G .2(ou should use the)-2.7 F F0(IcePing)3.533 E F1 .2(function pro)
3.533 F .2(vided by the ICE library)-.15 F 5.2(.T)-.65 G 2.7(od)-6 G(o)
-2.7 E .575(so, the ICE connection must be obtained using the)72 261.6 R
F0(SmsGetIceConnection)3.908 E F1 .576(\(see section 6.12, `)3.908 F
.576(`Using Sms)-.74 F(Informational Functions')72 273.6 Q('\).)-.74 E
50.4 293.7 50.4 303.7 DL 50.4 291.7 50.4 301.7 DL 55.4 292.2 50.4 292.2
DL 57.4 292.2 52.4 292.2 DL 62.4 292.2 57.4 292.2 DL -.2(vo)72 304.8 S
(id IcePing).2 E(\().833 E F2(ice_conn).833 E F1(,)A F2(ping_r)2.5 E
(eply_pr)-.37 E(oc)-.45 E F1(,).833 E F2(client_data)2.5 E F1(\)).833 E
(IceConn)82 316.8 Q F2(ice_conn)2.5 E F1(;).833 E(IcePingReplyProc)82
328.8 Q F2(ping_r)2.5 E(eply_pr)-.37 E(oc)-.45 E F1(;).833 E(IcePointer)
82 340.8 Q F2(client_data)2.5 E F1(;).833 E F2(ice_conn)72 360 Q F1 2.5
(Av)35.9 G(alid ICE connection object.)-2.75 E F2(ping_r)72 375.6 Q
(eply_pr)-.37 E(oc)-.45 E F1(The callback to in)6.16 E -.2(vo)-.4 G .2
-.1(ke w).2 H(hen the Ping reply arri).1 E -.15(ve)-.25 G(s.).15 E F2
(client_data)72 391.2 Q F1(This pointer will be passed to the)27 E F0
(IcePingReplyPr)3.333 E(oc)-.18 E F1(callback.)3.333 E 50.4 387.3 50.4
397.3 DL 50.4 385.3 50.4 395.3 DL 55.4 398.8 50.4 398.8 DL 57.4 398.8
52.4 398.8 DL 62.4 398.8 57.4 398.8 DL .852
(When the Ping reply is ready \(if e)72 418.8 R -.15(ve)-.25 G .852
(r\), the).15 F F0(IcePingReplyPr)4.185 E(oc)-.18 E F1 .852
(callback will be in)4.185 F -.2(vo)-.4 G -.1(ke).2 G 3.352(d. A).1 F
.852(session man-)3.352 F(ager should ha)72 430.8 Q .3 -.15(ve s)-.2 H
(ome sort of timeout period, after which it assumes the client has une)
.15 E(xpectedly died.)-.15 E 50.4 450.9 50.4 460.9 DL 50.4 448.9 50.4
458.9 DL 55.4 449.4 50.4 449.4 DL 57.4 449.4 52.4 449.4 DL 62.4 449.4
57.4 449.4 DL(typedef v)72 462 Q(oid \(*IcePingReplyProc\)\(\);)-.2 E
-.2(vo)72 486 S(id PingReplyProc).2 E(\().833 E F2(ice_conn).833 E F1(,)
A F2(client_data)2.5 E F1(\)).833 E(IceConn)82 498 Q F2(ice_conn)2.5 E
F1(;).833 E(IcePointer)82 510 Q F2(client_data)2.5 E F1(;).833 E F2
(ice_conn)72 529.2 Q F1(The ICE connection object.)35.9 E F2
(client_data)72 544.8 Q F1(The client data speci\214ed in the call to)27
E F0(IcePing)3.333 E F1(.).833 E 50.4 540.9 50.4 550.9 DL 50.4 538.9
50.4 548.9 DL 55.4 552.4 50.4 552.4 DL 57.4 552.4 52.4 552.4 DL 62.4
552.4 57.4 552.4 DL F0 2.5(6.11. Cleaning)72 584.4 R
(Up After a Client Disconnects)2.5 E F1 1.196
(When the session manager recei)72 600 R -.15(ve)-.25 G 3.696(sa`).15 G
1.196(`Connection Closed')-4.436 F 3.696('m)-.74 G 1.197
(essage or otherwise detects that the client)-3.696 F
(aborted the connection, it should call the)72 612 Q F0(SmsCleanUp)3.333
E F1(function in order to free up the connection object.)3.333 E 50.4
628.5 50.4 638.5 DL 50.4 626.5 50.4 636.5 DL 55.4 627 50.4 627 DL 57.4
627 52.4 627 DL 62.4 627 57.4 627 DL -.2(vo)72 639.6 S(id SmsCleanUp).2
E(\().833 E F2(sms_conn).833 E F1(\)).833 E(SmsConn)82 651.6 Q F2
(sms_conn)2.5 E F1(;).833 E F2(sms_conn)72 670.8 Q F1
(The session management connection object.)32.56 E 50.4 666.9 50.4 676.9
DL 50.4 664.9 50.4 674.9 DL 55.4 678.4 50.4 678.4 DL 57.4 678.4 52.4
678.4 DL 62.4 678.4 57.4 678.4 DL 2.5<ad32>274.86 768 S 2.5<33ad>-2.5 G
0 Cg EP
%%Page: 24 26
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Bold@0 SF 2.5(XS)72 48 S(ession Management Library)-2.5 E
(X11, Release 6.4)226.74 E 2.5(6.12. Using)72 84 R(Sms Inf)2.5 E
(ormational Functions)-.25 E .4 LW 50.4 104.1 50.4 114.1 DL 50.4 102.1
50.4 112.1 DL 55.4 102.6 50.4 102.6 DL 57.4 102.6 52.4 102.6 DL 62.4
102.6 57.4 102.6 DL/F1 10/Times-Roman@0 SF(int SmsProtocolV)72 115.2 Q
-1.667(ersion \()-1.11 F/F2 10/Times-Italic@0 SF(sms_conn).833 E F1(\))
.833 E(SmsConn)82 127.2 Q F2(sms_conn)2.5 E F1(;).833 E 50.4 126.9 50.4
136.9 DL 50.4 124.9 50.4 134.9 DL 55.4 138.4 50.4 138.4 DL 57.4 138.4
52.4 138.4 DL 62.4 138.4 57.4 138.4 DL F0(SmsPr)72.833 158.4 Q(otocolV)
-.18 E(ersion)-1 E F1 1.208(returns the major v)4.541 F 1.208
(ersion of the session management protocol associated with this)-.15 F
(session.)72 170.4 Q 50.4 202.5 50.4 212.5 DL 50.4 200.5 50.4 210.5 DL
55.4 201 50.4 201 DL 57.4 201 52.4 201 DL 62.4 201 57.4 201 DL
(int SmsProtocolRe)72 213.6 Q -1.667(vision \()-.25 F F2(sms_conn).833 E
F1(\)).833 E(SmsConn)82 225.6 Q F2(sms_conn)2.5 E F1(;).833 E 50.4 225.3
50.4 235.3 DL 50.4 223.3 50.4 233.3 DL 55.4 236.8 50.4 236.8 DL 57.4
236.8 52.4 236.8 DL 62.4 236.8 57.4 236.8 DL F0(SmsPr)72.833 256.8 Q
(otocolRe)-.18 E(vision)-.15 E F1 .812(returns the minor v)4.145 F .812
(ersion of the session management protocol associated with this)-.15 F
(session.)72 268.8 Q 50.4 300.9 50.4 310.9 DL 50.4 298.9 50.4 308.9 DL
55.4 299.4 50.4 299.4 DL 57.4 299.4 52.4 299.4 DL 62.4 299.4 57.4 299.4
DL(char *SmsClientID)72 312 Q(\().833 E F2(sms_conn).833 E F1(\)).833 E
(SmsConn)82 324 Q F2(sms_conn)2.5 E F1(;).833 E 50.4 323.7 50.4 333.7 DL
50.4 321.7 50.4 331.7 DL 55.4 335.2 50.4 335.2 DL 57.4 335.2 52.4 335.2
DL 62.4 335.2 57.4 335.2 DL F0(SmsClientID)72.833 355.2 Q F1 .145(retur\
ns a null-terminated string for the client ID associated with this conn\
ection.)3.479 F -1.1(Yo)5.145 G 2.645(us)1.1 G(hould)-2.645 E(call)72
367.2 Q F0(fr)3.333 E(ee)-.18 E F1
(on this pointer when the client ID is no longer needed.)3.333 E 1.619
-.8(To o)72 394.8 T .019(btain the host name of a client, use).8 F F0
(SmsClientHostName)3.353 E F1 5.02(.T).833 G .02
(his host name will be needed to restart the)-5.02 F(client.)72 406.8 Q
50.4 423.3 50.4 433.3 DL 50.4 421.3 50.4 431.3 DL 55.4 421.8 50.4 421.8
DL 57.4 421.8 52.4 421.8 DL 62.4 421.8 57.4 421.8 DL
(char *SmsClientHostName)72 434.4 Q(\().833 E F2(sms_conn).833 E F1(\))
.833 E(SmsConn)82 446.4 Q F2(sms_conn)2.5 E F1(;).833 E 50.4 442.5 50.4
452.5 DL 50.4 440.5 50.4 450.5 DL 55.4 454 50.4 454 DL 57.4 454 52.4 454
DL 62.4 454 57.4 454 DL .783(The string returned is of the form)72 474 R
F2(pr)3.282 E(otocol)-.45 E F1(/).833 E F2(hostname).833 E F1 3.282(,w)
.833 G(here)-3.282 E F2(pr)3.282 E(otocol)-.45 E F1 .782
(is one of {tcp, decnet, local}.)4.115 F -1.1(Yo)5.782 G(u)1.1 E
(should call)72 486 Q F0(fr)3.333 E(ee)-.18 E F1
(on the string returned when it is no longer needed.)3.333 E 50.4 518.1
50.4 528.1 DL 50.4 516.1 50.4 526.1 DL 55.4 516.6 50.4 516.6 DL 57.4
516.6 52.4 516.6 DL 62.4 516.6 57.4 516.6 DL
(IceConn SmsGetIceConnection)72 529.2 Q(\().833 E F2(sms_conn).833 E F1
(\)).833 E(SmsConn)82 541.2 Q F2(sms_conn)2.5 E F1(;).833 E 50.4 537.3
50.4 547.3 DL 50.4 535.3 50.4 545.3 DL 55.4 548.8 50.4 548.8 DL 57.4
548.8 52.4 548.8 DL 62.4 548.8 57.4 548.8 DL F0(SmsGetIceConnection)
72.833 568.8 Q F1 1.121(returns the ICE connection object associated wi\
th this session management con-)4.454 F .685(nection object.)72 580.8 R
.684(The ICE connection object can be used to get some additional infor\
mation about the con-)5.685 F 3.379(nection. Some)72 592.8 R .879
(of the more useful functions which can be used on the IceConn are)3.379
F F0(IceConnectionNum-)4.213 E(ber)72 604.8 Q F1 3.034(,a).833 G(nd)
-3.034 E F0(IceLastSequenceNumber)3.867 E F1 5.534(.F).833 G .534
(or further information, see the)-5.684 F F2(Inter)3.033 E .533
(-Client Exc)-.2 F(hang)-.15 E 3.033(eL)-.1 G(ibr)-3.033 E(ary)-.15 E F1
(stan-)3.866 E(dard.)72 616.8 Q F0 2.5(6.13. Err)72 640.8 R(or Handling)
-.18 E F1 .688(If the session manager recei)72 656.4 R -.15(ve)-.25 G
3.188(sa).15 G 3.188(nu)-3.188 G(ne)-3.188 E .688
(xpected protocol error from a client, an error handler is in)-.15 F -.2
(vo)-.4 G -.1(ke).2 G 3.189(db).1 G(y)-3.189 E(SMlib)72 668.4 Q 5.315
(.A)-.4 G(def)-2.5 E .315(ault error handler e)-.1 F .315
(xists which simply prints the error message \(it does not e)-.15 F
2.814(xit\). The)-.15 F(session)2.814 E
(manager can change this error handler by calling)72 680.4 Q F0
(SmsSetErr)3.333 E(orHandler)-.18 E F1(.).833 E 50.4 696.9 50.4 706.9 DL
50.4 694.9 50.4 704.9 DL 55.4 695.4 50.4 695.4 DL 57.4 695.4 52.4 695.4
DL 62.4 695.4 57.4 695.4 DL 2.5<ad32>274.86 768 S 2.5<34ad>-2.5 G 0 Cg
EP
%%Page: 25 27
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Bold@0 SF 2.5(XS)72 48 S(ession Management Library)-2.5 E
(X11, Release 6.4)226.74 E/F1 10/Times-Roman@0 SF
(SmsErrorHandler SmsSetErrorHandler)72 84 Q(\().833 E/F2 10
/Times-Italic@0 SF(handler).833 E F1(\)).833 E(SmsErrorHandler)82 96 Q
F2(handler)2.5 E F1(;).833 E F2(handler)72 115.2 Q F1(The error handler)
40.89 E 5(.Y)-.55 G(ou should pass NULL to restore the def)-6.1 E
(ault handler)-.1 E(.)-.55 E .4 LW 50.4 111.3 50.4 121.3 DL 50.4 109.3
50.4 119.3 DL 55.4 122.8 50.4 122.8 DL 57.4 122.8 52.4 122.8 DL 62.4
122.8 57.4 122.8 DL F0(SmsSetErr)72.833 142.8 Q(orHandler)-.18 E F1
(returns the pre)3.333 E(vious error handler)-.25 E 5(.T)-.55 G(he)-5 E
F0(SmsErr)3.333 E(orHandler)-.18 E F1(has the follo)3.333 E(wing type:)
-.25 E 50.4 159.3 50.4 169.3 DL 50.4 157.3 50.4 167.3 DL 55.4 157.8 50.4
157.8 DL 57.4 157.8 52.4 157.8 DL 62.4 157.8 57.4 157.8 DL(typedef v)72
170.4 Q(oid \(*SmsErrorHandler\)\(\);)-.2 E -.2(vo)72 194.4 S
(id ErrorHandler).2 E(\().833 E F2(sms_conn).833 E F1(,)A F2(swap)2.5 E
F1(,).833 E F2(of)2.5 E(fending_minor_opcode)-.18 E F1(,).833 E F2(of)
2.5 E(fending_sequence_num)-.18 E F1(,).833 E F2(err)2.5 E(or_class)-.45
E F1(,).833 E F2(se)2.5 E(verity)-.15 E F1(,).833 E F2(values)2.5 E F1
(\)).833 E(SmsConn)82 206.4 Q F2(sms_conn)2.5 E F1(;).833 E(Bool)82
218.4 Q F2(swap)2.5 E F1(;).833 E(int)82 230.4 Q F2(of)2.5 E
(fending_minor_opcode)-.18 E F1(;).833 E(unsigned long)82 242.4 Q F2(of)
2.5 E(fending_sequence_num)-.18 E F1(;).833 E(int)82 254.4 Q F2(err)2.5
E(or_class)-.45 E F1(;).833 E(int)82 266.4 Q F2(se)2.5 E(verity)-.15 E
F1(;).833 E(IcePointer)82 278.4 Q F2(values)2.5 E F1(;).833 E F2
(sms_conn)72 297.6 Q F1(The session management connection object.)32.56
E F2(swap)72 313.2 Q F1 2.5<418d>51.44 G
(ag which indicates if the speci\214ed v)-2.5 E(alues need byte sw)-.25
E(apping.)-.1 E F2(of)72 328.8 Q(fending_minor_opcode)-.18 E F1
(The minor opcode of the of)144 340.8 Q(fending message.)-.25 E F2(of)72
356.4 Q(fending_sequence_num)-.18 E F1(The sequence number of the of)144
368.4 Q(fending message.)-.25 E F2(err)72 384 Q(or_class)-.45 E F1
(The error class of the of)26.34 E(fending message.)-.25 E F2(se)72
399.6 Q(verity)-.15 E F0(IceCanContinue)41.883 E F1(,).833 E F0(IceF)
3.333 E(atalT)-.25 E(oPr)-.92 E(otocol)-.18 E F1 2.5(,o).833 G(r)-2.5 E
F0(IceF)3.333 E(atalT)-.25 E(oConnection)-.92 E F1(.).833 E F2(values)72
415.2 Q F1(An)46.45 E 2.5(ya)-.15 G(dditional error v)-2.5 E
(alues speci\214c to the minor opcode and class.)-.25 E 50.4 411.3 50.4
421.3 DL 50.4 409.3 50.4 419.3 DL 55.4 422.8 50.4 422.8 DL 57.4 422.8
52.4 422.8 DL 62.4 422.8 57.4 422.8 DL .423
(Note that this error handler is in)72 442.8 R -.2(vo)-.4 G -.1(ke).2 G
2.923(df).1 G .423(or protocol related errors.)-2.923 F 2.023 -.8(To i)
5.423 H .424(nstall an error handler to be in).8 F -.2(vo)-.4 G -.1(ke)
.2 G(d).1 E 2.626(when an IO error occurs, use)72 454.8 R F0
(IceSetIOErr)5.958 E(orHandler)-.18 E F1 7.625(.F).833 G 2.625
(or further information, see the)-7.775 F F2(Inter)5.125 E(-Client)-.2 E
(Exc)72 466.8 Q(hang)-.15 E 2.5(eL)-.1 G(ibr)-2.5 E(ary)-.15 E F1
(standard.)3.333 E F0 2.5(7. Session)72 490.8 R(Management Pr)2.5 E
(operties)-.18 E F1(Each property is de\214ned by the)72 506.4 Q F0
(SmPr)3.333 E(oc)-.18 E F1(structure:)3.333 E(typedef struct {)72 528 Q
(char *name;)108 540 Q(/* name of property */)94.85 E(char *type;)108
552 Q(/* type of property */)99.29 E(int num_v)108 564 Q 87.02(als; /*)
-.25 F(number of v)2.5 E(alues */)-.25 E(SmPropV)108 576 Q(alue *v)-1.11
E 60.36(als; /*)-.25 F(the list of v)2.5 E(alues */)-.25 E 2.5(}S)72 588
S(mProp;)-2.5 E(typedef struct {)72 612 Q(int length;)108 624 Q
(/* the length of the v)103.16 E(alue */)-.25 E(SmPointer v)108 636 Q
72.58(alue; /*)-.25 F(the v)2.5 E(alue */)-.25 E 2.5(}S)72 648 S(mPropV)
-2.5 E(alue;)-1.11 E .034(The X Session Management Protocol de\214nes a\
 list of prede\214ned properties, se)72 669.6 R -.15(ve)-.25 G .034
(ral of which are required to).15 F .91(be set by the client.)72 681.6 R
.91(The follo)5.91 F .909(wing table speci\214es the prede\214ned prope\
rties and indicates which ones are)-.25 F 2.5(required. Each)72 693.6 R
(property has a type associated with it.)2.5 E 3.529(At)72 709.2 S 1.029
(ype of SmCARD8 indicates that there is a single 1-byte v)-3.529 F 3.53
(alue. A)-.25 F 1.03(type of SmARRA)3.53 F 1.03(Y8 indicates that)-1.05
F .182(there is a single array of bytes.)72 721.2 R 2.682(At)5.182 G
.182(ype of SmLIST)-2.682 F(ofARRA)-.8 E .182
(Y8 indicates that there is a list of array of bytes.)-1.05 F 2.5<ad32>
274.86 768 S 2.5<35ad>-2.5 G 0 Cg EP
%%Page: 26 28
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Bold@0 SF 2.5(XS)72 48 S(ession Management Library)-2.5 E
(X11, Release 6.4)226.74 E .4 LW 382.2 76.5 72 76.5 DL 82.83(Name T)72
92 R 43.86(ype POSIX)-.74 F -.74(Ty)2.5 G 37.86(pe Requir).74 F(ed)-.18
E 382.2 102.5 72 102.5 DL/F1 10/Times-Roman@0 SF 28.92
(SmCloneCommand OS-speci\214c)72 118 R(SmLIST)20.63 E(ofARRA)-.8 E
23.555(Y8 Y)-1.05 F(es)-1 E 25.61(SmCurrentDirectory OS-speci\214c)72
130 R(SmARRA)20.63 E 53.36(Y8 No)-1.05 F 21.71
(SmDiscardCommand OS-speci\214c)72 142 R(SmLIST)20.63 E(ofARRA)-.8 E
22.22(Y8 No*)-1.05 F(SmEn)72 154 Q 42.66(vironment OS-speci\214c)-.4 F
(SmLIST)20.63 E(ofARRA)-.8 E 24.72(Y8 No)-1.05 F 53.38
(SmProcessID OS-speci\214c)72 166 R(SmARRA)20.63 E 53.36(Y8 No)-1.05 F
60.04(SmProgram OS-speci\214c)72 178 R(SmARRA)20.63 E 52.195(Y8 Y)-1.05
F(es)-1 E 24.48(SmRestartCommand OS-speci\214c)72 190 R(SmLIST)20.63 E
(ofARRA)-.8 E 23.555(Y8 Y)-1.05 F(es)-1 E 25.03
(SmResignCommand OS-speci\214c)72 202 R(SmLIST)20.63 E(ofARRA)-.8 E
24.72(Y8 No)-1.05 F 27.81(SmRestartStyleHint SmCARD8)72 214 R 59.53
(SmCARD8 No)21.17 F(SmShutdo)72 226 Q 12.5(wnCommand OS-speci\214c)-.25
F(SmLIST)20.63 E(ofARRA)-.8 E 24.72(Y8 No)-1.05 F 65.05(SmUserID SmARRA)
72 238 R 12.5(Y8 SmARRA)-1.05 F 52.195(Y8 Y)-1.05 F(es)-1 E 382.2 248.5
72 248.5 DL 2.5(*R)72 267.6 S(equired if an)-2.5 E 2.5(ys)-.15 G
(tate is stored in an e)-2.5 E(xternal repository \(for e)-.15 E
(xample, state \214le\).)-.15 E 21.5<8353>72 283.2 S(mCloneCommand)-21.5
E .288(This is lik)97 298.8 R 2.788(et)-.1 G .288
(he SmRestartCommand, e)-2.788 F .288(xcept it restarts a cop)-.15 F
2.788(yo)-.1 G 2.788(ft)-2.788 G .288(he application.)-2.788 F .288
(The only dif)5.288 F(ference)-.25 E .584
(is that the application does not supply its client ID at re)97 310.8 R
.584(gister time.)-.15 F .584(On POSIX systems, this should)5.584 F
(be of type SmLIST)97 322.8 Q(ofARRA)-.8 E(Y8.)-1.05 E 21.5<8353>72
338.4 S(mCurrentDirectory)-21.5 E .005
(On POSIX-based systems, this speci\214es the v)97 354 R .005
(alue of the current directory that needs to be set up prior)-.25 F
(to starting the SmProgram and should of type SmARRA)97 366 Q(Y8.)-1.05
E 21.5<8353>72 381.6 S(mDiscardCommand)-21.5 E .535
(The discard command contains a command that when deli)97 397.2 R -.15
(ve)-.25 G .535(red to the host that the client is running).15 F .314
(on \(determined from the connection\), will cause it to discard an)97
409.2 R 2.815(yi)-.15 G .315(nformation about the current state.)-2.815
F 1.394(If this command is not speci\214ed, the Session Manager will as\
sume that all of the client')97 421.2 R 3.893(ss)-.55 G 1.393(tate is)
-3.893 F(encoded in the SmRestartCommand.)97 433.2 Q
(On POSIX systems, the type should be SmLIST)5 E(ofARRA)-.8 E(Y8.)-1.05
E 21.5<8353>72 448.8 S(mEn)-21.5 E(vironment)-.4 E 1.084
(On POSIX based systems, this will be of type SmLIST)97 464.4 R(ofARRA)
-.8 E 1.085(Y8, where the ARRA)-1.05 F 1.085(Y8s alternate)-1.05 F
(between en)97 476.4 Q(vironment v)-.4 E(ariable name and en)-.25 E
(vironment v)-.4 E(ariable v)-.25 E(alue.)-.25 E 21.5<8353>72 492 S
(mProcessID)-21.5 E .76
(This speci\214es an OS-speci\214c identi\214er for the process.)97
507.6 R .76(On POSIX systems, this should contain the)5.76 F(return v)97
519.6 Q(alue of)-.25 E F0(getpid)3.333 E F1
(turned into a Latin-1 \(decimal\) string.)3.333 E 21.5<8353>72 535.2 S
(mProgram)-21.5 E .74(This is the name of the program that is running.)
97 550.8 R .74(On POSIX systems, this should be \214rst parameter)5.74 F
(passed to)97 562.8 Q F0(execv)3.333 E(e)-.1 E F1
(and should be of type SmARRA)3.333 E(Y8.)-1.05 E 21.5<8353>72 578.4 S
(mRestartCommand)-21.5 E .622
(The restart command contains a command that, when deli)97 594 R -.15
(ve)-.25 G .622(red to the host that the client is running).15 F .563(o\
n \(determined from the connection\), will cause the client to restart \
in its current state.)97 606 R .564(On POSIX-)5.564 F .037
(based systems, this is of type SmLIST)97 618 R(ofARRA)-.8 E .036
(Y8, and each of the elements in the array represents an)-1.05 F .141
(element in the)97 630 R F0(ar)3.474 E(gv)-.1 E F1(array)3.474 E 5.141
(.T)-.65 G .142(his restart command should ensure that the client resta\
rts with the speci-)-5.141 F(\214ed client-ID.)97 642 Q 21.5<8353>72
657.6 S(mResignCommand)-21.5 E 3.565(Ac)97 673.2 S 1.065
(lient that sets the SmRestartStyleHint to SmRestartAnw)-3.565 F 1.064
(ay uses this property to specify a com-)-.1 F 1.075
(mand that undoes the ef)97 685.2 R 1.076(fect of the client and remo)
-.25 F -.15(ve)-.15 G 3.576(sa).15 G 1.376 -.15(ny s)-3.576 H -2.25 -.2
(av e).15 H 3.576(ds).2 G 3.576(tate. As)-3.576 F 1.076(an e)3.576 F
1.076(xample, consider a)-.15 F 1.835(user that runs)97 697.2 R F0
(xmodmap)5.168 E F1 4.335(,w).833 G 1.835(hich re)-4.335 F 1.834
(gisters with the Session Manager)-.15 F 4.334(,s)-.4 G 1.834
(ets SmRestartStyleHint to)-4.334 F(SmRestartAn)97 709.2 Q(yw)-.15 E(ay)
-.1 E 4.218(,a)-.65 G 1.718(nd then terminates.)-4.218 F 3.318 -.8(To a)
6.718 H(llo).8 E 4.218(wt)-.25 G 1.719
(he Session Manager \(at the user')-4.218 F 4.219(sr)-.55 G 1.719
(equest\) to)-4.219 F .13(undo this,)97 721.2 R F0(xmodmap)3.463 E F1
-.1(wo)3.463 G .13(uld re).1 F .13
(gister a SmResignCommand that undoes the ef)-.15 F .13(fects of the)
-.25 F F0(xmodmap)3.462 E F1(.).833 E 2.5<ad32>274.86 768 S 2.5<36ad>
-2.5 G 0 Cg EP
%%Page: 27 29
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Bold@0 SF 2.5(XS)72 48 S(ession Management Library)-2.5 E
(X11, Release 6.4)226.74 E/F1 10/Times-Roman@0 SF 21.5<8353>72 84 S
(mRestartStyleHint)-21.5 E .493(If the RestartStyleHint property is pre\
sent, it will contain the style of restarting the client prefers.)97
99.6 R(If)5.494 E
(this style is not speci\214ed, SmRestartIfRunning is assumed.)97 111.6
Q(The possible v)5 E(alues are as follo)-.25 E(ws:)-.25 E .4 LW 226.99
122.1 97 122.1 DL F0 79.075(Name V)97 137.6 R(alue)-.92 E 226.99 148.1
97 148.1 DL F1 30.825(SmRestartIfRunning 0)97 163.6 R(SmRestartAn)97
175.6 Q(yw)-.15 E 38.305(ay 1)-.1 F 21.385(SmRestartImmediately 2)97
187.6 R(SmRestartNe)97 199.6 Q -.15(ve)-.25 G 50.405(r3).15 G 226.99
210.1 97 210.1 DL 1.005
(The SmRestartIfRunning style is used in the usual case.)97 229.2 R
1.005(The client should be restarted in the ne)6.005 F(xt)-.15 E
(session if it w)97 241.2 Q
(as running at the end of the current session.)-.1 E 2.186
(The SmRestartAn)97 256.8 R(yw)-.15 E 2.186(ay style is used to tell th\
e Session Manager that the application should be)-.1 F 1.388
(restarted in the ne)97 268.8 R 1.388(xt session e)-.15 F -.15(ve)-.25 G
3.888(ni).15 G 3.888(fi)-3.888 G 3.888(te)-3.888 G 1.388
(xits before the current session is terminated.)-4.038 F 1.387
(It should be)6.387 F .133
(noted that this is only a hint and the Session Manager will follo)97
280.8 R 2.634(wt)-.25 G .134(he policies speci\214ed by its users in)
-2.634 F(determining what applications to restart.)97 292.8 Q 2.752(Ac)
97 308.4 S .252(lient that uses SmRestartAn)-2.752 F(yw)-.15 E .252
(ay should also set the SmResignCommand and SmShutdo)-.1 F(wnCom-)-.25 E
(mand properties to commands that undo the state of the client after it\
 e)97 320.4 Q(xits.)-.15 E .13(The SmRestartImmediately style is lik)97
336 R 2.63(eS)-.1 G(mRestartAn)-2.63 E(yw)-.15 E(ay)-.1 E 2.63(,b)-.65 G
.13(ut, in addition, the client is meant to run)-2.83 F(continuously)97
348 Q 5(.I)-.65 G 2.5(ft)-5 G(he client e)-2.5 E(xits, the Session Mana\
ger should try to restart it in the current session.)-.15 E(SmRestartNe)
97 363.6 Q -.15(ve)-.25 G 2.5(rs).15 G(tyle speci\214es that the client\
 does not wish to be restarted in the ne)-2.5 E(xt session.)-.15 E 21.5
<8353>72 379.2 S(mShutdo)-21.5 E(wnCommand)-.25 E .804
(This command is e)97 394.8 R -.15(xe)-.15 G .804(cuted at shutdo).15 F
.803(wn time to clean up after a client that is no longer running b)-.25
F(ut)-.2 E 1.101
(retained its state by setting SmRestartStyleHint to SmRestartAn)97
406.8 R(yw)-.15 E(ay)-.1 E 6.101(.T)-.65 G 1.101
(he client must not remo)-6.101 F -.15(ve)-.15 G(an)97 418.8 Q 2.76(ys)
-.15 G -2.25 -.2(av e)-2.76 H 2.76(ds).2 G .26
(tate as the client is still part of the session.)-2.76 F .26(As an e)
5.26 F .26(xample, consider a client that turns on)-.15 F 3.663(ac)97
430.8 S 1.163(amera at start up time.)-3.663 F 1.163(This client then e)
6.163 F 3.664(xits. At)-.15 F 1.164(session shutdo)3.664 F 1.164
(wn, the user w)-.25 F 1.164(ants the camera)-.1 F .585(turned of)97
442.8 R 3.085(f. This)-.25 F .585(client w)3.085 F .585
(ould set the SmRestartStyleHint to SmRestartAn)-.1 F(yw)-.15 E .584
(ay and w)-.1 F .584(ould re)-.1 F .584(gister a)-.15 F(SmShutdo)97
454.8 Q(wnCommand that w)-.25 E(ould turn of)-.1 E 2.5(ft)-.25 G
(he camera.)-2.5 E 21.5<8353>72 470.4 S(mUserID)-21.5 E 1.356
(Speci\214es the user ID.)97 486 R 1.356
(On POSIX-based systems, this will contain the user')6.356 F 3.857(sn)
-.55 G 1.357(ame \(the pw_name)-3.857 F(member of struct)97 498 Q F0
(passwd)3.333 E F1(\).).833 E F0 2.5(8. Fr)72 522 R(eeing Data)-.18 E F1
1.6 -.8(To f)72 537.6 T(ree an indi).8 E(vidual property)-.25 E 2.5(,u)
-.65 G(se)-2.5 E F0(SmFr)3.333 E(eePr)-.18 E(operty)-.18 E F1(.).833 E
50.4 554.1 50.4 564.1 DL 50.4 552.1 50.4 562.1 DL 55.4 552.6 50.4 552.6
DL 57.4 552.6 52.4 552.6 DL 62.4 552.6 57.4 552.6 DL -.2(vo)72 565.2 S
(id SmFreeProperty).2 E(\().833 E/F2 10/Times-Italic@0 SF(pr).833 E(op)
-.45 E F1(\)).833 E(SmProp *)82 577.2 Q F2(pr)A(op)-.45 E F1(;).833 E F2
(pr)72 596.4 Q(op)-.45 E F1(The property to free.)53.56 E 50.4 592.5
50.4 602.5 DL 50.4 590.5 50.4 600.5 DL 55.4 604 50.4 604 DL 57.4 604
52.4 604 DL 62.4 604 57.4 604 DL 1.6 -.8(To f)72 627.6 T
(ree the reason strings from the).8 E F0(SmsCloseConnectionPr)3.333 E
(oc)-.18 E F1(callback, use)3.333 E F0(SmFr)3.333 E(eeReasons)-.18 E F1
(.).833 E 50.4 644.1 50.4 654.1 DL 50.4 642.1 50.4 652.1 DL 55.4 642.6
50.4 642.6 DL 57.4 642.6 52.4 642.6 DL 62.4 642.6 57.4 642.6 DL -.2(vo)
72 655.2 S(id SmFreeReasons).2 E(\().833 E F2(count).833 E F1(,)A F2
-.37(re)2.5 G(asons).37 E F1(\)).833 E(int)82 667.2 Q F2(count)2.5 E F1
(;).833 E(char **)82 679.2 Q F2 -.37(re)C(asons).37 E F1(;).833 E F2
(count)72 698.4 Q F1(The number of reason strings.)49.78 E F2 -.37(re)72
714 S(asons).37 E F1(The list of reason strings to free.)41.26 E 2.5
<ad32>274.86 768 S 2.5<37ad>-2.5 G 0 Cg EP
%%Page: 28 30
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Bold@0 SF 2.5(XS)72 48 S(ession Management Library)-2.5 E
(X11, Release 6.4)226.74 E .4 LW 50.4 76.5 50.4 86.5 DL 50.4 74.5 50.4
84.5 DL 55.4 88 50.4 88 DL 57.4 88 52.4 88 DL 62.4 88 57.4 88 DL 2.5
(9. A)72 120 R(uthentication of Clients)-.5 E/F1 10/Times-Roman@0 SF
.525(As stated earlier)72 135.6 R 3.025(,t)-.4 G .525
(he session management protocol is layered on top of ICE.)-3.025 F .525
(Authentication occurs at tw)5.525 F(o)-.1 E(le)72 147.6 Q -.15(ve)-.25
G(ls in the ICE protocol:).15 E 21.5<8354>72 163.2 S
(he \214rst is when an ICE connection is opened.)-21.5 E 21.5<8354>72
178.8 S(he second is when a Protocol Setup occurs on an ICE connection.)
-21.5 E 1.691(The authentication methods that are a)72 194.4 R -.25(va)
-.2 G 1.692
(ilable are implementation-dependent \(that is., dependent on the).25 F
.321(ICElib and SMlib implementations in use\).)72 206.4 R -.15(Fo)5.321
G 2.821(rf).15 G .32(urther information, see the)-2.821 F/F2 10
/Times-Italic@0 SF(Inter)2.82 E .32(-Client Exc)-.2 F(hang)-.15 E 2.82
(eL)-.1 G(ibr)-2.82 E(ary)-.15 E F1(standard.)72 218.4 Q F0 2.5(10. W)72
242.4 R(orking in a Multi-Thr)-.75 E(eaded En)-.18 E(vir)-.4 E(onment)
-.18 E F1 1.655 -.8(To d)72 258 T .056(eclare that multiple threads in \
an application will be using SMlib \(or an).8 F 2.556(yo)-.15 G .056
(ther library layered on top of)-2.556 F .826(ICElib\), you should call)
72 270 R F0(IceInitThr)4.159 E(eads)-.18 E F1 5.826(.F).833 G .826
(or further information, see the)-5.976 F F2(Inter)3.326 E .826
(-Client Exc)-.2 F(hang)-.15 E 3.325(eL)-.1 G(ibr)-3.325 E(ary)-.15 E F1
(standard.)72 282 Q F0 2.5(11. Ackno)72 306 R(wledgements)-.1 E F1 .28
(Thanks to the follo)72 321.6 R .281(wing people for their participatio\
n in the X Session Management design: Jordan Bro)-.25 F(wn,)-.25 E .677
(Ellis Cohen, Donna Con)72 333.6 R -.15(ve)-.4 G .676
(rse, Stephen Gildea, V).15 F .676(ania Jolobof)-1.11 F .676
(f, Stuart Marks, Bob Schei\215er)-.25 F 3.176(,R)-.4 G .676
(alph Swick,)-3.176 F(and Mik)72 345.6 Q 2.5(eW)-.1 G -.15(ex)-3.3 G
(ler).15 E(.)-.55 E 2.5<ad32>274.86 768 S 2.5<38ad>-2.5 G 0 Cg EP
%%Page: 3 31
%%BeginPageSetup
BP
%%EndPageSetup
/F0 12/Times-Bold@0 SF -1.104(Ta)242.886 96 S(ble of Contents)1.104 E/F1
10/Times-Roman@0 SF(1. Ov)72 132 Q(ervie)-.15 E 2.5(wo)-.25 G 2.5(fS)
-2.5 G(ession Management)-2.5 E -2.5 10(..................... 1)6.87 H
(2. The Session Management Library)72 144 Q -2.5 10
(..................... 1)8.69 H(3. Understanding SMlib')72 156 Q 2.5(sD)
-.55 G(ependence on ICE)-2.5 E -2.5 10(.................. 1)5.91 H
(4. Header Files and Library Name)72 168 Q -2.5 10
(...................... 2)5.37 H
(5. Session Management Client \(Smc\) Functions)72 180 Q -2.5 10
(................. 2)13.39 H(5.1. Connecting to the Session Manager)72
192 Q -2.5 10(.................... 2)7.29 H(5.1.1. The Sa)72 204 Q .3
-.15(ve Y)-.2 H(ourself Callback)-.95 E -2.5 10
(...................... 4)5.42 H(5.1.2. The Die Callback)72 216 Q -2.5
10(......................... 6)8.96 H(5.1.3. The Sa)72 228 Q .3 -.15
(ve C)-.2 H(omplete Callback).15 E -2.5 10(..................... 6)12.92
H(5.1.4. The Shutdo)72 240 Q(wn Cancelled Callback)-.25 E -2.5 10
(.................... 6)3.1 H(5.2. Closing the Connection)72 252 Q -2.5
10(........................ 7)5.05 H(5.3. Modifying Callbacks)72 264 Q
-2.5 10(........................ 7)14.78 H
(5.4. Setting, Deleting, and Retrie)72 276 Q
(ving Session Management Properties)-.25 E -2.5 10(.......... 8)11.99 H
(5.5. Interacting W)72 288 Q(ith the User)-.4 E -2.5 10
(....................... 9)10.48 H(5.6. Requesting a Sa)72 300 Q .3 -.15
(ve Y)-.2 H 12.08(ourself .)-.95 F -7.5 10(..................... 1)10 H
(0)-10 E(5.7. Requesting a Sa)72 312 Q .3 -.15(ve Y)-.2 H
(ourself Phase 2)-.95 E -7.5 10(.................... 1)6.25 H(0)-10 E
(5.8. Completing a Sa)72 324 Q .3 -.15(ve Y)-.2 H 9.85(ourself .)-.95 F
-7.5 10(..................... 1)10 H(1)-10 E
(5.9. Using Smc Informational Functions)72 336 Q -7.5 10
(.................... 1)5.89 H(1)-10 E(5.10. Error Handling)72 348 Q
-7.5 10(.......................... 1)8.68 H(2)-10 E
(6. Session Management Serv)72 360 Q(er \(Sms\) Functions)-.15 E -7.5 10
(................. 1)12.44 H(3)-10 E(6.1. Initializing the Library)72
372 Q -7.5 10(........................ 1)8.4 H(3)-10 E(6.1.1. The Re)72
384 Q(gister Client Callback)-.15 E -7.5 10(..................... 1)
13.27 H(6)-10 E(6.1.2. The Interact Request Callback)72 396 Q -7.5 10
(..................... 1)8.14 H(6)-10 E
(6.1.3. The Interact Done Callback)72 408 Q -7.5 10
(...................... 1)6.2 H(7)-10 E(6.1.4. The Sa)72 420 Q .3 -.15
(ve Y)-.2 H(ourself Request Callback)-.95 E -7.5 10
(................... 1)8.2 H(7)-10 E(6.1.5. The Sa)72 432 Q .3 -.15
(ve Y)-.2 H(ourself Phase 2 Request Callback)-.95 E -7.5 10
(................ 1)12.37 H(8)-10 E(6.1.6. The Sa)72 444 Q .3 -.15(ve Y)
-.2 H(ourself Done Callback)-.95 E -7.5 10(.................... 1)6.26 H
(8)-10 E(6.1.7. The Connection Closed Callback)72 456 Q -7.5 10
(.................... 1)9.51 H(8)-10 E
(6.1.8. The Set Properties Callback)72 468 Q -7.5 10
(...................... 1)5.07 H(9)-10 E
(6.1.9. The Delete Properties Callback)72 480 Q -7.5 10
(..................... 1)4.25 H(9)-10 E
(6.1.10. The Get Properties Callback)72 492 Q -7.5 10
(..................... 2)10.91 H(0)-10 E(6.2. Re)72 504 Q
(gistering the Client)-.15 E -7.5 10(........................ 2)11.87 H
(0)-10 E(6.3. Sending a Sa)72 516 Q .3 -.15(ve Y)-.2 H(ourself Message)
-.95 E -7.5 10(.................... 2)14.31 H(0)-10 E(6.4. Sending a Sa)
72 528 Q .3 -.15(ve Y)-.2 H(ourself Phase 2 Message)-.95 E -7.5 10
(.................. 2)5.98 H(1)-10 E(6.5. Sending an Interact Message)72
540 Q -7.5 10(...................... 2)9.25 H(2)-10 E(6.6. Sending a Sa)
72 552 Q .3 -.15(ve C)-.2 H 2.5(omplete Message).15 F -7.5 10
(.................... 2)6.81 H(2)-10 E(6.7. Sending a Die Message)72 564
Q -7.5 10(........................ 2)5.35 H(2)-10 E
(6.8. Cancelling a Shutdo)72 576 Q 3.92(wn .)-.25 F -7.5 10
(....................... 2)10 H(2)-10 E(6.9. Returning Properties)72 588
Q -7.5 10(......................... 2)3.95 H(2)-10 E
(6.10. Pinging a Client)72 600 Q -7.5 10(.......................... 2)
4.49 H(3)-10 E(6.11. Cleaning Up After a Client Disconnects)72 612 Q
-7.5 10(.................. 2)9.8 H(3)-10 E
(6.12. Using Sms Informational Functions)72 624 Q -7.5 10
(................... 2)13.94 H(4)-10 E(6.13. Error Handling)72 636 Q
-7.5 10(.......................... 2)8.68 H(4)-10 E
(7. Session Management Properties)72 648 Q -7.5 10
(...................... 2)3.68 H(5)-10 E(8. Freeing Data)72 660 Q -7.5
10(............................ 2)5.07 H(7)-10 E
(9. Authentication of Clients)72 672 Q -7.5 10
(........................ 2)5.89 H(8)-10 E(10. W)72 684 Q
(orking in a Multi-Threaded En)-.8 E 2.39(vironment .)-.4 F -7.5 10
(................. 2)10 H(8)-10 E(11. Ackno)72 696 Q 7.82(wledgements .)
-.25 F -7.5 10(........................ 2)10 H(8)-10 E(iii)283.83 768 Q
0 Cg EP
%%Trailer
end
%%EOF
